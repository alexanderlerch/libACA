name: All Tests (CMake)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DWITH_TESTS=1

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}}

  # build-docs:
    # name: builds docs and publish
    # runs-on: ubuntu-latest

    # steps:
    # - uses: actions/checkout@v2

    # - name: Configure CMake to generate doxygen config file
      # run: cmake -B ${{github.workspace}}/build

    # - name: Doxygen
      # uses: mattnotmitt/doxygen-action@v1.9.3
      # with:
        # working-directory: ./build
        # doxyfile-path: docs/doxy.config
 
    # # store the doc files
    # - name: Upload Output Directory
      # uses: actions/upload-artifact@v3
      # with:
        # name: doc-files
        # path: doc
        # retention-days: 1 
        
  # copy:
    # name: copies docs to gh-pages
    # runs-on: ubuntu-latest
    # needs: build-docs

    # steps:
    # - uses: actions/checkout@v2
      # with:
        # ref: gh-pages

    # # prepare the doc files
    # - name: Download Output Directory
      # uses: actions/download-artifact@v3
      # with:
        # name: doc-files
        # path: docs

    # # commit the doc files
    # - name: Commit changes
      # uses: EndBug/add-and-commit@v8
      # with:
        # author_name: Alexander Lerch
        # author_email: alexander.lerch@gatech.edu
        # message: 'auto-update docs'
        # add: '["docs/html/*"]'


