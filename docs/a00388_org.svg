<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 6.0.1 (20220911.1526)
 -->
<!-- Title: CPitchTimeAuditory Pages: 1 -->
<svg width="802pt" height="2513pt"
 viewBox="0.00 0.00 802.00 2513.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 2509)">
<title>CPitchTimeAuditory</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="class for computation of the pitch via the auditory method from the time domain signal">
<polygon fill="#999999" stroke="#666666" points="444.5,-294 289.5,-294 289.5,0 444.5,0 444.5,-294"/>
<text text-anchor="middle" x="367" y="-282" font-family="Helvetica,sans-Serif" font-size="10.00">{CPitchTimeAuditory</text>
<text text-anchor="start" x="297.5" y="-271" font-family="Helvetica,sans-Serif" font-size="10.00">|&#45; float * m_pfAcf</text>
<text text-anchor="start" x="297.5" y="-260" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_pfSumAcf</text>
<text text-anchor="start" x="297.5" y="-249" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float ** m_ppfProcBuff</text>
<text text-anchor="start" x="297.5" y="-238" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float m_fMax</text>
<text text-anchor="start" x="297.5" y="-227" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; const float m_fSmoothLpCutoff</text>
<text text-anchor="start" x="297.5" y="-216" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; const float m_fMinThresh</text>
<text text-anchor="start" x="297.5" y="-205" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; static const int m</text>
<text text-anchor="start" x="297.5" y="-194" font-family="Helvetica,sans-Serif" font-size="10.00">_iNumBands</text>
<text text-anchor="start" x="297.5" y="-183" font-family="Helvetica,sans-Serif" font-size="10.00">|+ &#160;CPitchTimeAuditory</text>
<text text-anchor="start" x="297.5" y="-172" font-family="Helvetica,sans-Serif" font-size="10.00">(CPitchIf::PitchExtractors</text>
<text text-anchor="start" x="297.5" y="-161" font-family="Helvetica,sans-Serif" font-size="10.00">_t ePitchIdx, int iDataLength,</text>
<text text-anchor="start" x="297.5" y="-150" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate)</text>
<text text-anchor="start" x="297.5" y="-139" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CPitchTimeAuditory()</text>
<text text-anchor="start" x="297.5" y="-128" font-family="Helvetica,sans-Serif" font-size="10.00">+ float compF0(const</text>
<text text-anchor="start" x="297.5" y="-117" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfIn) override</text>
<text text-anchor="start" x="297.5" y="-106" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; &#160;CPitchTimeAuditory()</text>
<text text-anchor="start" x="297.5" y="-95" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; &#160;CPitchTimeAuditory</text>
<text text-anchor="start" x="297.5" y="-84" font-family="Helvetica,sans-Serif" font-size="10.00">(const CPitchTimeAuditory</text>
<text text-anchor="start" x="297.5" y="-73" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;that)</text>
<text text-anchor="start" x="297.5" y="-62" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CPitchTimeAuditory</text>
<text text-anchor="start" x="297.5" y="-51" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp; operator=(const CPitchTime</text>
<text text-anchor="start" x="297.5" y="-40" font-family="Helvetica,sans-Serif" font-size="10.00">Auditory &amp;c)</text>
<text text-anchor="start" x="297.5" y="-29" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int getAcfMax_(const</text>
<text text-anchor="start" x="297.5" y="-18" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfInput)</text>
<text text-anchor="middle" x="367" y="-7" font-family="Helvetica,sans-Serif" font-size="10.00">}</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="a00526.xhtml" target="_top" xlink:title="class for computation of f0 from a block of data (e.g., time or magnitude spectrum)">
<polygon fill="white" stroke="#666666" points="168.5,-745 1.5,-745 1.5,-407 168.5,-407 168.5,-745"/>
<text text-anchor="middle" x="85" y="-733" font-family="Helvetica,sans-Serif" font-size="10.00">{CPitchFromBlockIf</text>
<text text-anchor="start" x="9.5" y="-722" font-family="Helvetica,sans-Serif" font-size="10.00">|# CPitchIf::PitchExtractors</text>
<text text-anchor="start" x="9.5" y="-711" font-family="Helvetica,sans-Serif" font-size="10.00">_t m_ePitchIdx</text>
<text text-anchor="start" x="9.5" y="-700" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iDataLength</text>
<text text-anchor="start" x="9.5" y="-689" font-family="Helvetica,sans-Serif" font-size="10.00"># float m_fSampleRate</text>
<text text-anchor="start" x="9.5" y="-678" font-family="Helvetica,sans-Serif" font-size="10.00">|+ CPitchIf::PitchExtractors</text>
<text text-anchor="start" x="9.5" y="-667" font-family="Helvetica,sans-Serif" font-size="10.00">_t getPitchExtractorIdx</text>
<text text-anchor="start" x="9.5" y="-656" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="9.5" y="-645" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual float compF0</text>
<text text-anchor="start" x="9.5" y="-634" font-family="Helvetica,sans-Serif" font-size="10.00">(const float *pfIn)=0</text>
<text text-anchor="start" x="9.5" y="-623" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="9.5" y="-612" font-family="Helvetica,sans-Serif" font-size="10.00">(CPitchFromBlockIf *&amp;pCInstance,</text>
<text text-anchor="start" x="9.5" y="-601" font-family="Helvetica,sans-Serif" font-size="10.00"> CPitchIf::PitchExtractors</text>
<text text-anchor="start" x="9.5" y="-590" font-family="Helvetica,sans-Serif" font-size="10.00">_t ePitchIdx, int iDataLength,</text>
<text text-anchor="start" x="9.5" y="-579" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate=1.F)</text>
<text text-anchor="start" x="9.5" y="-568" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="9.5" y="-557" font-family="Helvetica,sans-Serif" font-size="10.00">(CPitchFromBlockIf *&amp;pCInstance)</text>
<text text-anchor="start" x="9.5" y="-546" font-family="Helvetica,sans-Serif" font-size="10.00"># &#160;CPitchFromBlockIf()</text>
<text text-anchor="start" x="9.5" y="-535" font-family="Helvetica,sans-Serif" font-size="10.00"># &#160;CPitchFromBlockIf</text>
<text text-anchor="start" x="9.5" y="-524" font-family="Helvetica,sans-Serif" font-size="10.00">(CPitchIf::PitchExtractors</text>
<text text-anchor="start" x="9.5" y="-513" font-family="Helvetica,sans-Serif" font-size="10.00">_t ePitchIdx, int iDataLength,</text>
<text text-anchor="start" x="9.5" y="-502" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate)</text>
<text text-anchor="start" x="9.5" y="-491" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CPitchFromBlockIf()</text>
<text text-anchor="start" x="9.5" y="-480" font-family="Helvetica,sans-Serif" font-size="10.00"># &#160;CPitchFromBlockIf</text>
<text text-anchor="start" x="9.5" y="-469" font-family="Helvetica,sans-Serif" font-size="10.00">(const CPitchFromBlockIf</text>
<text text-anchor="start" x="9.5" y="-458" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;that)</text>
<text text-anchor="start" x="9.5" y="-447" font-family="Helvetica,sans-Serif" font-size="10.00"># CPitchFromBlockIf &amp;</text>
<text text-anchor="start" x="9.5" y="-436" font-family="Helvetica,sans-Serif" font-size="10.00"> operator=(const CPitchFrom</text>
<text text-anchor="start" x="9.5" y="-425" font-family="Helvetica,sans-Serif" font-size="10.00">BlockIf &amp;c)</text>
<text text-anchor="middle" x="85" y="-414" font-family="Helvetica,sans-Serif" font-size="10.00">}</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="#63b8ff" d="M146.56,-397.86C155.99,-378.09 166.48,-358.72 178,-341 208.55,-294.02 251.77,-248.84 289.16,-214.03"/>
<polygon fill="none" stroke="#63b8ff" points="143.37,-396.42 142.3,-406.96 149.71,-399.39 143.37,-396.42"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="a00546.xhtml" target="_top" xlink:title="computation of correlation (freq domain implementation)">
<polygon fill="white" stroke="#666666" points="351,-723 187,-723 187,-429 351,-429 351,-723"/>
<text text-anchor="middle" x="269" y="-711" font-family="Helvetica,sans-Serif" font-size="10.00">{CCcf</text>
<text text-anchor="start" x="195" y="-700" font-family="Helvetica,sans-Serif" font-size="10.00">|&#45; bool m_bIsInitialized</text>
<text text-anchor="start" x="195" y="-689" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; bool m_bWasProcessed</text>
<text text-anchor="start" x="195" y="-678" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_apfData</text>
<text text-anchor="start" x="195" y="-667" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iBlockLength</text>
<text text-anchor="start" x="195" y="-656" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iFftLength</text>
<text text-anchor="start" x="195" y="-645" font-family="Helvetica,sans-Serif" font-size="10.00">|+ &#160;CCcf(void)</text>
<text text-anchor="start" x="195" y="-634" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CCcf(void)</text>
<text text-anchor="start" x="195" y="-623" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t init(int iBlockLength)</text>
<text text-anchor="start" x="195" y="-612" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t reset()</text>
<text text-anchor="start" x="195" y="-601" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compCcf(const</text>
<text text-anchor="start" x="195" y="-590" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfIn1, const</text>
<text text-anchor="start" x="195" y="-579" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfIn2, bool bNormalize=true)</text>
<text text-anchor="start" x="195" y="-568" font-family="Helvetica,sans-Serif" font-size="10.00">+ int getCcfLength(bool</text>
<text text-anchor="start" x="195" y="-557" font-family="Helvetica,sans-Serif" font-size="10.00"> bisAcf=false)</text>
<text text-anchor="start" x="195" y="-546" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getCcf(float</text>
<text text-anchor="start" x="195" y="-535" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfCcfResult, bool bisAcf</text>
<text text-anchor="start" x="195" y="-524" font-family="Helvetica,sans-Serif" font-size="10.00">=false) const</text>
<text text-anchor="start" x="195" y="-513" font-family="Helvetica,sans-Serif" font-size="10.00">+ float getCcfMax(bool</text>
<text text-anchor="start" x="195" y="-502" font-family="Helvetica,sans-Serif" font-size="10.00"> bisAcf=false) const</text>
<text text-anchor="start" x="195" y="-491" font-family="Helvetica,sans-Serif" font-size="10.00">+ int getCcfMaxIdx(bool</text>
<text text-anchor="start" x="195" y="-480" font-family="Helvetica,sans-Serif" font-size="10.00"> bisAcf=false) const</text>
<text text-anchor="start" x="195" y="-469" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; &#160;CCcf(const CCcf &amp;that)</text>
<text text-anchor="start" x="195" y="-458" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CCcf &amp; operator=(const</text>
<text text-anchor="start" x="195" y="-447" font-family="Helvetica,sans-Serif" font-size="10.00"> CCcf &amp;c)</text>
<text text-anchor="middle" x="269" y="-436" font-family="Helvetica,sans-Serif" font-size="10.00">}</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node1 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node1</title>
<path fill="none" stroke="#404040" d="M302.52,-428.95C311.6,-389.38 321.47,-346.37 330.7,-306.17"/>
<polygon fill="none" stroke="#404040" points="330.73,-306.05 328.17,-299.31 333.41,-294.35 335.97,-301.1 330.73,-306.05"/>
<text text-anchor="middle" x="352" y="-315" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;m_pCCcf</text>
</g>
<!-- Node4 -->
<g id="node4" class="node">
<title>Node4</title>
<g id="a_node4"><a xlink:href="a00474.xhtml" target="_top" xlink:title="class for FFT computation with windowing">
<polygon fill="white" stroke="#666666" points="188,-1339 0,-1339 0,-858 188,-858 188,-1339"/>
<text text-anchor="middle" x="94" y="-1327" font-family="Helvetica,sans-Serif" font-size="10.00">{CFft</text>
<text text-anchor="start" x="8" y="-1316" font-family="Helvetica,sans-Serif" font-size="10.00">|&#45; float * m_pfProcBuff</text>
<text text-anchor="start" x="8" y="-1305" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_pfWindowBuff</text>
<text text-anchor="start" x="8" y="-1294" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iDataLength</text>
<text text-anchor="start" x="8" y="-1283" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iFftLength</text>
<text text-anchor="start" x="8" y="-1272" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Windowing_t m_ePrePostWindowOpt</text>
<text text-anchor="start" x="8" y="-1261" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; bool m_bIsInitialized</text>
<text text-anchor="start" x="8" y="-1250" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; static const float m_Pi</text>
<text text-anchor="start" x="8" y="-1239" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; static const float</text>
<text text-anchor="start" x="8" y="-1228" font-family="Helvetica,sans-Serif" font-size="10.00"> m_Pi2</text>
<text text-anchor="start" x="8" y="-1217" font-family="Helvetica,sans-Serif" font-size="10.00">|+ &#160;CFft()</text>
<text text-anchor="start" x="8" y="-1206" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CFft()</text>
<text text-anchor="start" x="8" y="-1195" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t init(int iBlockLength,</text>
<text text-anchor="start" x="8" y="-1184" font-family="Helvetica,sans-Serif" font-size="10.00"> int iZeroPadFactor=1, WindowFunction</text>
<text text-anchor="start" x="8" y="-1173" font-family="Helvetica,sans-Serif" font-size="10.00">_t eWindow=kWindowHann, Windowing</text>
<text text-anchor="start" x="8" y="-1162" font-family="Helvetica,sans-Serif" font-size="10.00">_t eWindowing=kPreWindow)</text>
<text text-anchor="start" x="8" y="-1151" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t reset()</text>
<text text-anchor="start" x="8" y="-1140" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t overrideWindow</text>
<text text-anchor="start" x="8" y="-1129" font-family="Helvetica,sans-Serif" font-size="10.00">(const float *pfNewWindow)</text>
<text text-anchor="start" x="8" y="-1118" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getWindow(float</text>
<text text-anchor="start" x="8" y="-1107" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfWindow) const</text>
<text text-anchor="start" x="8" y="-1096" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compFft(complex</text>
<text text-anchor="start" x="8" y="-1085" font-family="Helvetica,sans-Serif" font-size="10.00">_t *pfSpectrum, const</text>
<text text-anchor="start" x="8" y="-1074" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfIn)</text>
<text text-anchor="start" x="8" y="-1063" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compInvFft</text>
<text text-anchor="start" x="8" y="-1052" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfOut, const</text>
<text text-anchor="start" x="8" y="-1041" font-family="Helvetica,sans-Serif" font-size="10.00"> complex_t *pfSpectrum)</text>
<text text-anchor="start" x="8" y="-1030" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getMagnitude</text>
<text text-anchor="start" x="8" y="-1019" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfMag, const</text>
<text text-anchor="start" x="8" y="-1008" font-family="Helvetica,sans-Serif" font-size="10.00"> complex_t *pfSpectrum)</text>
<text text-anchor="start" x="8" y="-997" font-family="Helvetica,sans-Serif" font-size="10.00"> const</text>
<text text-anchor="start" x="8" y="-986" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getPhase(float</text>
<text text-anchor="start" x="8" y="-975" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfPhase, const complex</text>
<text text-anchor="start" x="8" y="-964" font-family="Helvetica,sans-Serif" font-size="10.00">_t *pfSpectrum) const</text>
<text text-anchor="start" x="8" y="-953" font-family="Helvetica,sans-Serif" font-size="10.00">and 7 more...</text>
<text text-anchor="start" x="8" y="-942" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; &#160;CFft(const CFft &amp;that)</text>
<text text-anchor="start" x="8" y="-931" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CFft &amp; operator=(const</text>
<text text-anchor="start" x="8" y="-920" font-family="Helvetica,sans-Serif" font-size="10.00"> CFft &amp;c)</text>
<text text-anchor="start" x="8" y="-909" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Error_t allocMemory_()</text>
<text text-anchor="start" x="8" y="-898" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Error_t freeMemory_()</text>
<text text-anchor="start" x="8" y="-887" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Error_t computeWindow</text>
<text text-anchor="start" x="8" y="-876" font-family="Helvetica,sans-Serif" font-size="10.00">_(WindowFunction_t eWindow)</text>
<text text-anchor="middle" x="94" y="-865" font-family="Helvetica,sans-Serif" font-size="10.00">}</text>
</a>
</g>
</g>
<!-- Node4&#45;&gt;Node3 -->
<g id="edge3" class="edge">
<title>Node4&#45;&gt;Node3</title>
<path fill="none" stroke="#404040" d="M174.59,-857.82C188.63,-816.05 202.91,-773.57 215.97,-734.72"/>
<polygon fill="none" stroke="#404040" points="215.98,-734.7 214.1,-727.74 219.8,-723.32 221.68,-730.29 215.98,-734.7"/>
<text text-anchor="middle" x="203.5" y="-832" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;m_pCFft</text>
</g>
<!-- Node5 -->
<g id="node5" class="node">
<title>Node5</title>
<g id="a_node5"><a xlink:href="a00478.xhtml" target="_top" xlink:title=" ">
<polygon fill="white" stroke="#666666" points="686.5,-1713 537.5,-1713 537.5,-1386 686.5,-1386 686.5,-1713"/>
<text text-anchor="middle" x="612" y="-1701" font-family="Helvetica,sans-Serif" font-size="10.00">{CFilter&lt; float &gt;</text>
<text text-anchor="start" x="545.5" y="-1690" font-family="Helvetica,sans-Serif" font-size="10.00">|&#45; float * m_aptCoeff</text>
<text text-anchor="start" x="545.5" y="-1679" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_ptProcBuff</text>
<text text-anchor="start" x="545.5" y="-1668" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iNumFilterCoeffs</text>
<text text-anchor="start" x="545.5" y="-1657" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; bool m_bisInitialized</text>
<text text-anchor="start" x="545.5" y="-1646" font-family="Helvetica,sans-Serif" font-size="10.00">|+ &#160;CFilter()</text>
<text text-anchor="start" x="545.5" y="-1635" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CFilter()</text>
<text text-anchor="start" x="545.5" y="-1624" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t init(const</text>
<text text-anchor="start" x="545.5" y="-1613" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfB, const float</text>
<text text-anchor="start" x="545.5" y="-1602" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfA, int iNumCoeffs)</text>
<text text-anchor="start" x="545.5" y="-1591" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t reset(bool</text>
<text text-anchor="start" x="545.5" y="-1580" font-family="Helvetica,sans-Serif" font-size="10.00"> bFreeMem=true)</text>
<text text-anchor="start" x="545.5" y="-1569" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t process(float</text>
<text text-anchor="start" x="545.5" y="-1558" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfOut, const float</text>
<text text-anchor="start" x="545.5" y="-1547" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfIn, long long iNumSamples)</text>
<text text-anchor="start" x="545.5" y="-1536" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t processDFII</text>
<text text-anchor="start" x="545.5" y="-1525" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfOut, const</text>
<text text-anchor="start" x="545.5" y="-1514" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfIn, long long</text>
<text text-anchor="start" x="545.5" y="-1503" font-family="Helvetica,sans-Serif" font-size="10.00"> iNumSamples)</text>
<text text-anchor="start" x="545.5" y="-1492" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t filtfilt(float</text>
<text text-anchor="start" x="545.5" y="-1481" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfOut, const float *pfIn,</text>
<text text-anchor="start" x="545.5" y="-1470" font-family="Helvetica,sans-Serif" font-size="10.00"> long long iNumSamples)</text>
<text text-anchor="start" x="545.5" y="-1459" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; &#160;CFilter(const CFilter</text>
<text text-anchor="start" x="545.5" y="-1448" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;that)</text>
<text text-anchor="start" x="545.5" y="-1437" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CFilter &amp; operator</text>
<text text-anchor="start" x="545.5" y="-1426" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CFilter &amp;c)</text>
<text text-anchor="start" x="545.5" y="-1415" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; void setInitState_</text>
<text text-anchor="start" x="545.5" y="-1404" font-family="Helvetica,sans-Serif" font-size="10.00">(float fWeight)</text>
<text text-anchor="middle" x="612" y="-1393" font-family="Helvetica,sans-Serif" font-size="10.00">}</text>
</a>
</g>
</g>
<!-- Node5&#45;&gt;Node1 -->
<g id="edge4" class="edge">
<title>Node5&#45;&gt;Node1</title>
<path fill="none" stroke="#404040" d="M686.51,-1451.45C708.15,-1417.7 728.92,-1378.39 740,-1339 797.89,-1133.21 773.45,-1069.15 740,-858 702.2,-619.37 701.33,-545.07 572,-341 540.99,-292.07 494.75,-247.07 454.04,-212.86"/>
<polygon fill="none" stroke="#404040" points="453.87,-212.73 446.7,-211.98 444.63,-205.07 451.8,-205.82 453.87,-212.73"/>
<text text-anchor="middle" x="765" y="-832" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;m_apCFilter</text>
</g>
<!-- Node12 -->
<g id="node12" class="node">
<title>Node12</title>
<g id="a_node12"><a xlink:href="a00418.xhtml" target="_top" xlink:title="class for a single gammtone filter">
<polygon fill="white" stroke="#666666" points="552.5,-1223.5 379.5,-1223.5 379.5,-973.5 552.5,-973.5 552.5,-1223.5"/>
<text text-anchor="middle" x="466" y="-1211.5" font-family="Helvetica,sans-Serif" font-size="10.00">{CGammatone</text>
<text text-anchor="start" x="387.5" y="-1200.5" font-family="Helvetica,sans-Serif" font-size="10.00">|&#45; float m_fFreqCenter</text>
<text text-anchor="start" x="387.5" y="-1189.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float m_fSampleRate</text>
<text text-anchor="start" x="387.5" y="-1178.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float m_aafCoeffB</text>
<text text-anchor="start" x="387.5" y="-1167.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float m_aafCoeffA</text>
<text text-anchor="start" x="387.5" y="-1156.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; bool m_bIsInitialized</text>
<text text-anchor="start" x="387.5" y="-1145.5" font-family="Helvetica,sans-Serif" font-size="10.00">|+ &#160;CGammatone()</text>
<text text-anchor="start" x="387.5" y="-1134.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CGammatone()</text>
<text text-anchor="start" x="387.5" y="-1123.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t init(float</text>
<text text-anchor="start" x="387.5" y="-1112.5" font-family="Helvetica,sans-Serif" font-size="10.00"> fFreqCenter, float</text>
<text text-anchor="start" x="387.5" y="-1101.5" font-family="Helvetica,sans-Serif" font-size="10.00"> fSampleRate)</text>
<text text-anchor="start" x="387.5" y="-1090.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t process(float</text>
<text text-anchor="start" x="387.5" y="-1079.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfOut, const float</text>
<text text-anchor="start" x="387.5" y="-1068.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfIn, long long iNumSamples)</text>
<text text-anchor="start" x="387.5" y="-1057.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t reset()</text>
<text text-anchor="start" x="387.5" y="-1046.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; &#160;CGammatone(const CGammatone</text>
<text text-anchor="start" x="387.5" y="-1035.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;that)</text>
<text text-anchor="start" x="387.5" y="-1024.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CGammatone &amp; operator</text>
<text text-anchor="start" x="387.5" y="-1013.5" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CGammatone &amp;c)</text>
<text text-anchor="start" x="387.5" y="-1002.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; void calcFilterCoeffs</text>
<text text-anchor="start" x="387.5" y="-991.5" font-family="Helvetica,sans-Serif" font-size="10.00">_(int iOrder=1)</text>
<text text-anchor="middle" x="466" y="-980.5" font-family="Helvetica,sans-Serif" font-size="10.00">}</text>
</a>
</g>
</g>
<!-- Node5&#45;&gt;Node12 -->
<g id="edge12" class="edge">
<title>Node5&#45;&gt;Node12</title>
<path fill="none" stroke="#404040" d="M559.08,-1385.77C543.03,-1336.38 525.56,-1282.67 510.14,-1235.26"/>
<polygon fill="none" stroke="#404040" points="510.09,-1235.08 504.43,-1230.61 506.37,-1223.66 512.03,-1228.13 510.09,-1235.08"/>
<text text-anchor="middle" x="582" y="-1360" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;m_apCFilter</text>
</g>
<!-- Node6 -->
<g id="node6" class="node">
<title>Node6</title>
<g id="a_node6"><a xlink:href="a00490.xhtml" target="_top" xlink:title=" ">
<polygon fill="white" stroke="#666666" points="603.5,-2120 470.5,-2120 470.5,-1760 603.5,-1760 603.5,-2120"/>
<text text-anchor="middle" x="537" y="-2108" font-family="Helvetica,sans-Serif" font-size="10.00">{CRingBuffer&lt; float &gt;</text>
<text text-anchor="start" x="478.5" y="-2097" font-family="Helvetica,sans-Serif" font-size="10.00">|&#45; int m_iBuffLength</text>
<text text-anchor="start" x="478.5" y="-2086" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iReadIdx</text>
<text text-anchor="start" x="478.5" y="-2075" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iWriteIdx</text>
<text text-anchor="start" x="478.5" y="-2064" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_ptBuff</text>
<text text-anchor="start" x="478.5" y="-2053" font-family="Helvetica,sans-Serif" font-size="10.00">|+ &#160;CRingBuffer(int iBuffer</text>
<text text-anchor="start" x="478.5" y="-2042" font-family="Helvetica,sans-Serif" font-size="10.00">LengthInSamples)</text>
<text text-anchor="start" x="478.5" y="-2031" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CRingBuffer()</text>
<text text-anchor="start" x="478.5" y="-2020" font-family="Helvetica,sans-Serif" font-size="10.00">+ void putPostInc(float</text>
<text text-anchor="start" x="478.5" y="-2009" font-family="Helvetica,sans-Serif" font-size="10.00"> tNewValue)</text>
<text text-anchor="start" x="478.5" y="-1998" font-family="Helvetica,sans-Serif" font-size="10.00">+ void putPostInc(const</text>
<text text-anchor="start" x="478.5" y="-1987" font-family="Helvetica,sans-Serif" font-size="10.00"> float *ptNewBuff, int</text>
<text text-anchor="start" x="478.5" y="-1976" font-family="Helvetica,sans-Serif" font-size="10.00"> iLength)</text>
<text text-anchor="start" x="478.5" y="-1965" font-family="Helvetica,sans-Serif" font-size="10.00">+ void put(float tNewValue)</text>
<text text-anchor="start" x="478.5" y="-1954" font-family="Helvetica,sans-Serif" font-size="10.00">+ void put(const float</text>
<text text-anchor="start" x="478.5" y="-1943" font-family="Helvetica,sans-Serif" font-size="10.00"> *ptNewBuff, int iLength)</text>
<text text-anchor="start" x="478.5" y="-1932" font-family="Helvetica,sans-Serif" font-size="10.00">+ float getPostInc()</text>
<text text-anchor="start" x="478.5" y="-1921" font-family="Helvetica,sans-Serif" font-size="10.00">+ void getPostInc(float</text>
<text text-anchor="start" x="478.5" y="-1910" font-family="Helvetica,sans-Serif" font-size="10.00"> *ptBuff, int iLength)</text>
<text text-anchor="start" x="478.5" y="-1899" font-family="Helvetica,sans-Serif" font-size="10.00">+ float get(float fOffset</text>
<text text-anchor="start" x="478.5" y="-1888" font-family="Helvetica,sans-Serif" font-size="10.00">=0) const</text>
<text text-anchor="start" x="478.5" y="-1877" font-family="Helvetica,sans-Serif" font-size="10.00">+ void get(float *ptBuff,</text>
<text text-anchor="start" x="478.5" y="-1866" font-family="Helvetica,sans-Serif" font-size="10.00"> int iLength) const</text>
<text text-anchor="start" x="478.5" y="-1855" font-family="Helvetica,sans-Serif" font-size="10.00">and 7 more...</text>
<text text-anchor="start" x="478.5" y="-1844" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; &#160;CRingBuffer()</text>
<text text-anchor="start" x="478.5" y="-1833" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; &#160;CRingBuffer(const</text>
<text text-anchor="start" x="478.5" y="-1822" font-family="Helvetica,sans-Serif" font-size="10.00"> CRingBuffer &amp;that)</text>
<text text-anchor="start" x="478.5" y="-1811" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CRingBuffer &amp; operator</text>
<text text-anchor="start" x="478.5" y="-1800" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CRingBuffer &amp;c)</text>
<text text-anchor="start" x="478.5" y="-1789" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; void incIdx(int &amp;iIdx,</text>
<text text-anchor="start" x="478.5" y="-1778" font-family="Helvetica,sans-Serif" font-size="10.00"> int iOffset=1)</text>
<text text-anchor="middle" x="537" y="-1767" font-family="Helvetica,sans-Serif" font-size="10.00">}</text>
</a>
</g>
</g>
<!-- Node6&#45;&gt;Node5 -->
<g id="edge5" class="edge">
<title>Node6&#45;&gt;Node5</title>
<path fill="none" stroke="#404040" d="M571.59,-1759.82C573.81,-1748.3 576.05,-1736.71 578.27,-1725.21"/>
<polygon fill="none" stroke="#404040" points="578.3,-1725.05 575.51,-1718.4 580.58,-1713.27 583.37,-1719.92 578.3,-1725.05"/>
<text text-anchor="middle" x="612" y="-1734" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;m_pCFilterBuff</text>
</g>
<!-- Node7 -->
<g id="node7" class="node">
<title>Node7</title>
<g id="a_node7"><a xlink:href="a00490.xhtml" target="_top" xlink:title="implement a circular buffer of type T">
<polygon fill="white" stroke="#666666" points="614.5,-2505 459.5,-2505 459.5,-2167 614.5,-2167 614.5,-2505"/>
<text text-anchor="middle" x="537" y="-2493" font-family="Helvetica,sans-Serif" font-size="10.00">{CRingBuffer&lt; T &gt;</text>
<text text-anchor="start" x="467.5" y="-2482" font-family="Helvetica,sans-Serif" font-size="10.00">|&#45; int m_iBuffLength</text>
<text text-anchor="start" x="467.5" y="-2471" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iReadIdx</text>
<text text-anchor="start" x="467.5" y="-2460" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iWriteIdx</text>
<text text-anchor="start" x="467.5" y="-2449" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; T * m_ptBuff</text>
<text text-anchor="start" x="467.5" y="-2438" font-family="Helvetica,sans-Serif" font-size="10.00">|+ &#160;CRingBuffer(int iBuffer</text>
<text text-anchor="start" x="467.5" y="-2427" font-family="Helvetica,sans-Serif" font-size="10.00">LengthInSamples)</text>
<text text-anchor="start" x="467.5" y="-2416" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CRingBuffer()</text>
<text text-anchor="start" x="467.5" y="-2405" font-family="Helvetica,sans-Serif" font-size="10.00">+ void putPostInc(T tNewValue)</text>
<text text-anchor="start" x="467.5" y="-2394" font-family="Helvetica,sans-Serif" font-size="10.00">+ void putPostInc(const</text>
<text text-anchor="start" x="467.5" y="-2383" font-family="Helvetica,sans-Serif" font-size="10.00"> T *ptNewBuff, int iLength)</text>
<text text-anchor="start" x="467.5" y="-2372" font-family="Helvetica,sans-Serif" font-size="10.00">+ void put(T tNewValue)</text>
<text text-anchor="start" x="467.5" y="-2361" font-family="Helvetica,sans-Serif" font-size="10.00">+ void put(const T *ptNewBuff,</text>
<text text-anchor="start" x="467.5" y="-2350" font-family="Helvetica,sans-Serif" font-size="10.00"> int iLength)</text>
<text text-anchor="start" x="467.5" y="-2339" font-family="Helvetica,sans-Serif" font-size="10.00">+ T getPostInc()</text>
<text text-anchor="start" x="467.5" y="-2328" font-family="Helvetica,sans-Serif" font-size="10.00">+ void getPostInc(T *ptBuff,</text>
<text text-anchor="start" x="467.5" y="-2317" font-family="Helvetica,sans-Serif" font-size="10.00"> int iLength)</text>
<text text-anchor="start" x="467.5" y="-2306" font-family="Helvetica,sans-Serif" font-size="10.00">+ T get(float fOffset</text>
<text text-anchor="start" x="467.5" y="-2295" font-family="Helvetica,sans-Serif" font-size="10.00">=0) const</text>
<text text-anchor="start" x="467.5" y="-2284" font-family="Helvetica,sans-Serif" font-size="10.00">+ void get(T *ptBuff,</text>
<text text-anchor="start" x="467.5" y="-2273" font-family="Helvetica,sans-Serif" font-size="10.00"> int iLength) const</text>
<text text-anchor="start" x="467.5" y="-2262" font-family="Helvetica,sans-Serif" font-size="10.00">and 7 more...</text>
<text text-anchor="start" x="467.5" y="-2251" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; &#160;CRingBuffer()</text>
<text text-anchor="start" x="467.5" y="-2240" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; &#160;CRingBuffer(const</text>
<text text-anchor="start" x="467.5" y="-2229" font-family="Helvetica,sans-Serif" font-size="10.00"> CRingBuffer &amp;that)</text>
<text text-anchor="start" x="467.5" y="-2218" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CRingBuffer &amp; operator</text>
<text text-anchor="start" x="467.5" y="-2207" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CRingBuffer &amp;c)</text>
<text text-anchor="start" x="467.5" y="-2196" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; void incIdx(int &amp;iIdx,</text>
<text text-anchor="start" x="467.5" y="-2185" font-family="Helvetica,sans-Serif" font-size="10.00"> int iOffset=1)</text>
<text text-anchor="middle" x="537" y="-2174" font-family="Helvetica,sans-Serif" font-size="10.00">}</text>
</a>
</g>
</g>
<!-- Node7&#45;&gt;Node6 -->
<g id="edge6" class="edge">
<title>Node7&#45;&gt;Node6</title>
<path fill="none" stroke="orange" d="M537,-2156.65C537,-2144.57 537,-2132.4 537,-2120.32"/>
<polygon fill="orange" stroke="orange" points="533.5,-2156.77 537,-2166.77 540.5,-2156.77 533.5,-2156.77"/>
<text text-anchor="middle" x="555.5" y="-2141" font-family="Helvetica,sans-Serif" font-size="10.00"> &lt; float &gt;</text>
</g>
<!-- Node8 -->
<g id="node8" class="node">
<title>Node8</title>
<g id="a_node8"><a xlink:href="a00478.xhtml" target="_top" xlink:title="class providing a generic filter implementation">
<polygon fill="white" stroke="#666666" points="754,-2109 622,-2109 622,-1771 754,-1771 754,-2109"/>
<text text-anchor="middle" x="688" y="-2097" font-family="Helvetica,sans-Serif" font-size="10.00">{CFilter&lt; T &gt;</text>
<text text-anchor="start" x="630" y="-2086" font-family="Helvetica,sans-Serif" font-size="10.00">|&#45; CRingBuffer&lt; T &gt; *</text>
<text text-anchor="start" x="630" y="-2075" font-family="Helvetica,sans-Serif" font-size="10.00"> m_pCFilterBuff</text>
<text text-anchor="start" x="630" y="-2064" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; T * m_aptCoeff</text>
<text text-anchor="start" x="630" y="-2053" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; T * m_ptProcBuff</text>
<text text-anchor="start" x="630" y="-2042" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iNumFilterCoeffs</text>
<text text-anchor="start" x="630" y="-2031" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; bool m_bisInitialized</text>
<text text-anchor="start" x="630" y="-2020" font-family="Helvetica,sans-Serif" font-size="10.00">|+ &#160;CFilter()</text>
<text text-anchor="start" x="630" y="-2009" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CFilter()</text>
<text text-anchor="start" x="630" y="-1998" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t init(const</text>
<text text-anchor="start" x="630" y="-1987" font-family="Helvetica,sans-Serif" font-size="10.00"> T *pfB, const T *pfA,</text>
<text text-anchor="start" x="630" y="-1976" font-family="Helvetica,sans-Serif" font-size="10.00"> int iNumCoeffs)</text>
<text text-anchor="start" x="630" y="-1965" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t reset(bool</text>
<text text-anchor="start" x="630" y="-1954" font-family="Helvetica,sans-Serif" font-size="10.00"> bFreeMem=true)</text>
<text text-anchor="start" x="630" y="-1943" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t process(T *pfOut,</text>
<text text-anchor="start" x="630" y="-1932" font-family="Helvetica,sans-Serif" font-size="10.00"> const T *pfIn, long long</text>
<text text-anchor="start" x="630" y="-1921" font-family="Helvetica,sans-Serif" font-size="10.00"> iNumSamples)</text>
<text text-anchor="start" x="630" y="-1910" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t processDFII</text>
<text text-anchor="start" x="630" y="-1899" font-family="Helvetica,sans-Serif" font-size="10.00">(T *pfOut, const T *pfIn,</text>
<text text-anchor="start" x="630" y="-1888" font-family="Helvetica,sans-Serif" font-size="10.00"> long long iNumSamples)</text>
<text text-anchor="start" x="630" y="-1877" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t filtfilt(T</text>
<text text-anchor="start" x="630" y="-1866" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfOut, const T *pfIn,</text>
<text text-anchor="start" x="630" y="-1855" font-family="Helvetica,sans-Serif" font-size="10.00"> long long iNumSamples)</text>
<text text-anchor="start" x="630" y="-1844" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; &#160;CFilter(const CFilter</text>
<text text-anchor="start" x="630" y="-1833" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;that)</text>
<text text-anchor="start" x="630" y="-1822" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CFilter &amp; operator</text>
<text text-anchor="start" x="630" y="-1811" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CFilter &amp;c)</text>
<text text-anchor="start" x="630" y="-1800" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; void setInitState_</text>
<text text-anchor="start" x="630" y="-1789" font-family="Helvetica,sans-Serif" font-size="10.00">(float fWeight)</text>
<text text-anchor="middle" x="688" y="-1778" font-family="Helvetica,sans-Serif" font-size="10.00">}</text>
</a>
</g>
</g>
<!-- Node8&#45;&gt;Node5 -->
<g id="edge7" class="edge">
<title>Node8&#45;&gt;Node5</title>
<path fill="none" stroke="orange" d="M656.74,-1760.78C654.83,-1750.7 652.91,-1740.72 651,-1731 649.85,-1725.18 648.67,-1719.26 647.46,-1713.28"/>
<polygon fill="orange" stroke="orange" points="653.35,-1761.71 658.64,-1770.89 660.23,-1760.41 653.35,-1761.71"/>
<text text-anchor="middle" x="670.5" y="-1734" font-family="Helvetica,sans-Serif" font-size="10.00"> &lt; float &gt;</text>
</g>
<!-- Node9 -->
<g id="node9" class="node">
<title>Node9</title>
<g id="a_node9"><a xlink:href="a00558.xhtml" target="_top" xlink:title="class for computation of a Gammatone filterbank output from either a file or a vector">
<polygon fill="white" stroke="#666666" points="563,-811 369,-811 369,-341 563,-341 563,-811"/>
<text text-anchor="middle" x="466" y="-799" font-family="Helvetica,sans-Serif" font-size="10.00">{CGammaToneFbIf</text>
<text text-anchor="start" x="377" y="-788" font-family="Helvetica,sans-Serif" font-size="10.00">|# const int m_iBlockLength</text>
<text text-anchor="start" x="377" y="-777" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iNumBands</text>
<text text-anchor="start" x="377" y="-766" font-family="Helvetica,sans-Serif" font-size="10.00"># float m_fSampleRate</text>
<text text-anchor="start" x="377" y="-755" font-family="Helvetica,sans-Serif" font-size="10.00"># float m_fStartInHz</text>
<text text-anchor="start" x="377" y="-744" font-family="Helvetica,sans-Serif" font-size="10.00"># float * m_pfProcBuff</text>
<text text-anchor="start" x="377" y="-733" font-family="Helvetica,sans-Serif" font-size="10.00"># bool m_bIsInitialized</text>
<text text-anchor="start" x="377" y="-722" font-family="Helvetica,sans-Serif" font-size="10.00">|+ Error_t getOutputDimensions</text>
<text text-anchor="start" x="377" y="-711" font-family="Helvetica,sans-Serif" font-size="10.00">(long long &amp;iNumRows, long</text>
<text text-anchor="start" x="377" y="-700" font-family="Helvetica,sans-Serif" font-size="10.00"> long &amp;iNumCols) const</text>
<text text-anchor="start" x="377" y="-689" font-family="Helvetica,sans-Serif" font-size="10.00">+ float getCenterFreq</text>
<text text-anchor="start" x="377" y="-678" font-family="Helvetica,sans-Serif" font-size="10.00">(int iBandIdx) const</text>
<text text-anchor="start" x="377" y="-667" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t process(float</text>
<text text-anchor="start" x="377" y="-656" font-family="Helvetica,sans-Serif" font-size="10.00"> **ppfOut, const float</text>
<text text-anchor="start" x="377" y="-645" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfIn=0, long long iNumSamples=0)</text>
<text text-anchor="start" x="377" y="-634" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="377" y="-623" font-family="Helvetica,sans-Serif" font-size="10.00">(CGammaToneFbIf *&amp;pCInstance,</text>
<text text-anchor="start" x="377" y="-612" font-family="Helvetica,sans-Serif" font-size="10.00"> const std::string &amp;strAudioFilePath,</text>
<text text-anchor="start" x="377" y="-601" font-family="Helvetica,sans-Serif" font-size="10.00"> int iNumBands=20, float fStartInHz=100)</text>
<text text-anchor="start" x="377" y="-590" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="377" y="-579" font-family="Helvetica,sans-Serif" font-size="10.00">(CGammaToneFbIf *&amp;pCInstance,</text>
<text text-anchor="start" x="377" y="-568" font-family="Helvetica,sans-Serif" font-size="10.00"> const float *pfAudio, long</text>
<text text-anchor="start" x="377" y="-557" font-family="Helvetica,sans-Serif" font-size="10.00"> long iNumSamples, float fSampleRate,</text>
<text text-anchor="start" x="377" y="-546" font-family="Helvetica,sans-Serif" font-size="10.00"> int iNumBands=20, float fStartInHz=100)</text>
<text text-anchor="start" x="377" y="-535" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="377" y="-524" font-family="Helvetica,sans-Serif" font-size="10.00">(CGammaToneFbIf *&amp;pCInstance,</text>
<text text-anchor="start" x="377" y="-513" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate, int iNumBands</text>
<text text-anchor="start" x="377" y="-502" font-family="Helvetica,sans-Serif" font-size="10.00">=20, float fStartInHz=100)</text>
<text text-anchor="start" x="377" y="-491" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="377" y="-480" font-family="Helvetica,sans-Serif" font-size="10.00">(CGammaToneFbIf *&amp;pCInstance)</text>
<text text-anchor="start" x="377" y="-469" font-family="Helvetica,sans-Serif" font-size="10.00"># &#160;CGammaToneFbIf()</text>
<text text-anchor="start" x="377" y="-458" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CGammaToneFbIf()</text>
<text text-anchor="start" x="377" y="-447" font-family="Helvetica,sans-Serif" font-size="10.00"># &#160;CGammaToneFbIf(const</text>
<text text-anchor="start" x="377" y="-436" font-family="Helvetica,sans-Serif" font-size="10.00"> CGammaToneFbIf &amp;that)</text>
<text text-anchor="start" x="377" y="-425" font-family="Helvetica,sans-Serif" font-size="10.00"># CGammaToneFbIf &amp; operator</text>
<text text-anchor="start" x="377" y="-414" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CGammaToneFbIf &amp;c)</text>
<text text-anchor="start" x="377" y="-403" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t reset_()</text>
<text text-anchor="start" x="377" y="-392" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t init_()</text>
<text text-anchor="start" x="377" y="-381" font-family="Helvetica,sans-Serif" font-size="10.00"># float compMidFreqs</text>
<text text-anchor="start" x="377" y="-370" font-family="Helvetica,sans-Serif" font-size="10.00">_(float fFreqLow, float</text>
<text text-anchor="start" x="377" y="-359" font-family="Helvetica,sans-Serif" font-size="10.00"> fFreqHigh, int k) const</text>
<text text-anchor="middle" x="466" y="-348" font-family="Helvetica,sans-Serif" font-size="10.00">}</text>
</a>
</g>
</g>
<!-- Node9&#45;&gt;Node1 -->
<g id="edge8" class="edge">
<title>Node9&#45;&gt;Node1</title>
<path fill="none" stroke="#404040" d="M411.72,-340.89C409,-329.14 406.29,-317.47 403.64,-306.03"/>
<polygon fill="none" stroke="#404040" points="403.61,-305.89 398.36,-300.95 400.9,-294.2 406.15,-299.15 403.61,-305.89"/>
<text text-anchor="middle" x="445" y="-315" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;m_pCFilterBank</text>
</g>
<!-- Node10 -->
<g id="node10" class="node">
<title>Node10</title>
<g id="a_node10"><a xlink:href="a00606.xhtml" target="_top" xlink:title="class for audio normalization offering three options">
<polygon fill="white" stroke="#666666" points="361.5,-1212.5 206.5,-1212.5 206.5,-984.5 361.5,-984.5 361.5,-1212.5"/>
<text text-anchor="middle" x="284" y="-1200.5" font-family="Helvetica,sans-Serif" font-size="10.00">{CNormalizeAudio</text>
<text text-anchor="start" x="214.5" y="-1189.5" font-family="Helvetica,sans-Serif" font-size="10.00">|&#45; float m_fScaleFactor</text>
<text text-anchor="start" x="214.5" y="-1178.5" font-family="Helvetica,sans-Serif" font-size="10.00">|+ &#160;CNormalizeAudio(CAudioFile</text>
<text text-anchor="start" x="214.5" y="-1167.5" font-family="Helvetica,sans-Serif" font-size="10.00">If *pCAudioFile)</text>
<text text-anchor="start" x="214.5" y="-1156.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ &#160;CNormalizeAudio(const</text>
<text text-anchor="start" x="214.5" y="-1145.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfAudioBuff, long</text>
<text text-anchor="start" x="214.5" y="-1134.5" font-family="Helvetica,sans-Serif" font-size="10.00"> long iAudioLength)</text>
<text text-anchor="start" x="214.5" y="-1123.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CNormalizeAudio()</text>
<text text-anchor="start" x="214.5" y="-1112.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void normalizeBlock</text>
<text text-anchor="start" x="214.5" y="-1101.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfAudioBlock,</text>
<text text-anchor="start" x="214.5" y="-1090.5" font-family="Helvetica,sans-Serif" font-size="10.00"> long long iNumSamples)</text>
<text text-anchor="start" x="214.5" y="-1079.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static void normalizeSignal</text>
<text text-anchor="start" x="214.5" y="-1068.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfAudio, long long</text>
<text text-anchor="start" x="214.5" y="-1057.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iNumSamples)</text>
<text text-anchor="start" x="214.5" y="-1046.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; &#160;CNormalizeAudio()</text>
<text text-anchor="start" x="214.5" y="-1035.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; &#160;CNormalizeAudio(const</text>
<text text-anchor="start" x="214.5" y="-1024.5" font-family="Helvetica,sans-Serif" font-size="10.00"> CNormalizeAudio &amp;that)</text>
<text text-anchor="start" x="214.5" y="-1013.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CNormalizeAudio &amp; operator</text>
<text text-anchor="start" x="214.5" y="-1002.5" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CNormalizeAudio &amp;c)</text>
<text text-anchor="middle" x="284" y="-991.5" font-family="Helvetica,sans-Serif" font-size="10.00">}</text>
</a>
</g>
</g>
<!-- Node10&#45;&gt;Node9 -->
<g id="edge9" class="edge">
<title>Node10&#45;&gt;Node9</title>
<path fill="none" stroke="#404040" d="M323.6,-984.24C340.26,-936.61 360.33,-879.2 380.09,-822.71"/>
<polygon fill="none" stroke="#404040" points="380.2,-822.38 378.41,-815.39 384.16,-811.05 385.96,-818.03 380.2,-822.38"/>
<text text-anchor="middle" x="413.5" y="-832" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCNormalize</text>
</g>
<!-- Node11 -->
<g id="node11" class="node">
<title>Node11</title>
<g id="a_node11"><a xlink:href="a00542.xhtml" target="_top" xlink:title="forward declaration">
<polygon fill="white" stroke="#666666" points="731,-1311.5 571,-1311.5 571,-885.5 731,-885.5 731,-1311.5"/>
<text text-anchor="middle" x="651" y="-1299.5" font-family="Helvetica,sans-Serif" font-size="10.00">{CBlockAudioIf</text>
<text text-anchor="start" x="579" y="-1288.5" font-family="Helvetica,sans-Serif" font-size="10.00">|# long long m_iNumBlocks</text>
<text text-anchor="start" x="579" y="-1277.5" font-family="Helvetica,sans-Serif" font-size="10.00"># long long m_iCurrBlock</text>
<text text-anchor="start" x="579" y="-1266.5" font-family="Helvetica,sans-Serif" font-size="10.00"># long long m_iAudioLength</text>
<text text-anchor="start" x="579" y="-1255.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iBlockLength</text>
<text text-anchor="start" x="579" y="-1244.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iNumChannels</text>
<text text-anchor="start" x="579" y="-1233.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iHopLength</text>
<text text-anchor="start" x="579" y="-1222.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float m_fSampleRate</text>
<text text-anchor="start" x="579" y="-1211.5" font-family="Helvetica,sans-Serif" font-size="10.00">|+ long long getNumBlocks</text>
<text text-anchor="start" x="579" y="-1200.5" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="579" y="-1189.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ long long getLengthInSamples</text>
<text text-anchor="start" x="579" y="-1178.5" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="579" y="-1167.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ float getTimeStamp</text>
<text text-anchor="start" x="579" y="-1156.5" font-family="Helvetica,sans-Serif" font-size="10.00">(long long iBlockIdx)</text>
<text text-anchor="start" x="579" y="-1145.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual bool isEndOfData</text>
<text text-anchor="start" x="579" y="-1134.5" font-family="Helvetica,sans-Serif" font-size="10.00">() const =0</text>
<text text-anchor="start" x="579" y="-1123.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual int getNextBlock</text>
<text text-anchor="start" x="579" y="-1112.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfBlock, float</text>
<text text-anchor="start" x="579" y="-1101.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfTimeStampInS=0)=0</text>
<text text-anchor="start" x="579" y="-1090.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="579" y="-1079.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CBlockAudioIf *&amp;pCInstance,</text>
<text text-anchor="start" x="579" y="-1068.5" font-family="Helvetica,sans-Serif" font-size="10.00"> CAudioFileIf *pCAudioFile,</text>
<text text-anchor="start" x="579" y="-1057.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iBlockLength, int iHopLength)</text>
<text text-anchor="start" x="579" y="-1046.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="579" y="-1035.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CBlockAudioIf *&amp;pCInstance,</text>
<text text-anchor="start" x="579" y="-1024.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const float *pfAudioBuff,</text>
<text text-anchor="start" x="579" y="-1013.5" font-family="Helvetica,sans-Serif" font-size="10.00"> long long iAudioLength, int</text>
<text text-anchor="start" x="579" y="-1002.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iBlockLength, int iHopLength,</text>
<text text-anchor="start" x="579" y="-991.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate)</text>
<text text-anchor="start" x="579" y="-980.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="579" y="-969.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CBlockAudioIf *&amp;pCInstance)</text>
<text text-anchor="start" x="579" y="-958.5" font-family="Helvetica,sans-Serif" font-size="10.00"># &#160;CBlockAudioIf()</text>
<text text-anchor="start" x="579" y="-947.5" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CBlockAudioIf()</text>
<text text-anchor="start" x="579" y="-936.5" font-family="Helvetica,sans-Serif" font-size="10.00"># &#160;CBlockAudioIf(const</text>
<text text-anchor="start" x="579" y="-925.5" font-family="Helvetica,sans-Serif" font-size="10.00"> CBlockAudioIf &amp;that)</text>
<text text-anchor="start" x="579" y="-914.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CBlockAudioIf &amp; operator</text>
<text text-anchor="start" x="579" y="-903.5" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CBlockAudioIf &amp;c)</text>
<text text-anchor="middle" x="651" y="-892.5" font-family="Helvetica,sans-Serif" font-size="10.00">}</text>
</a>
</g>
</g>
<!-- Node11&#45;&gt;Node9 -->
<g id="edge10" class="edge">
<title>Node11&#45;&gt;Node9</title>
<path fill="none" stroke="#404040" d="M581.66,-885.41C575.12,-866.3 568.51,-847.27 562,-829 561.25,-826.9 560.5,-824.79 559.74,-822.67"/>
<polygon fill="none" stroke="#404040" points="559.7,-822.57 553.91,-818.28 555.64,-811.28 561.44,-815.57 559.7,-822.57"/>
<text text-anchor="middle" x="606.5" y="-832" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCBlockAudio</text>
</g>
<!-- Node12&#45;&gt;Node9 -->
<g id="edge11" class="edge">
<title>Node12&#45;&gt;Node9</title>
<path fill="none" stroke="#404040" d="M466,-973.49C466,-928.3 466,-875.47 466,-823.39"/>
<polygon fill="none" stroke="#404040" points="466,-823.24 462,-817.24 466,-811.24 470,-817.24 466,-823.24"/>
<text text-anchor="middle" x="512" y="-832" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_ppCGammatone</text>
</g>
</g>
</svg>
