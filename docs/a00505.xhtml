<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.4"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ACA: CNoveltyFromBlockIf Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">ACA<span id="projectnumber">&#160;0.2.6</span>
   </div>
   <div id="projectbrief">Example Code for Audio Content Analysis</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.4 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search",'Search','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('a00505.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="a00502.xhtml">List of all members</a>  </div>
  <div class="headertitle"><div class="title">CNoveltyFromBlockIf Class Reference</div></div>
</div><!--header-->
<div class="contents">

<p>class for computation of a Novelty from a block of data (e.g., time or magnitude spectrum)  
 <a href="a00505.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="a00212_source.xhtml">NoveltyFromBlock.h</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for CNoveltyFromBlockIf:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00503.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a2755f4e823abb1178868ac3f5219078d"><td class="memItemLeft" align="right" valign="top">virtual int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00505.xhtml#a2755f4e823abb1178868ac3f5219078d">getNoveltyDimension</a> () const</td></tr>
<tr class="separator:a2755f4e823abb1178868ac3f5219078d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a053b558e7cfef7c598afbb58fae99d88"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00501.xhtml#aaaa808da8acb1f5df095f6178faeb4f4">CNoveltyIf::Novelty_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00505.xhtml#a053b558e7cfef7c598afbb58fae99d88">getNoveltyIdx</a> () const</td></tr>
<tr class="separator:a053b558e7cfef7c598afbb58fae99d88"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afb2032a0a8448d57c5faec119b63bb71"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a00116.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00505.xhtml#afb2032a0a8448d57c5faec119b63bb71">compNovelty</a> (float *pfNovelty, const float *pfInput)</td></tr>
<tr class="separator:afb2032a0a8448d57c5faec119b63bb71"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-static-methods" name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:ad4c0e04f9ae0eaa7ccf48509125cab1a"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="a00116.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00505.xhtml#ad4c0e04f9ae0eaa7ccf48509125cab1a">create</a> (<a class="el" href="a00505.xhtml">CNoveltyFromBlockIf</a> *&amp;pCInstance, <a class="el" href="a00501.xhtml#aaaa808da8acb1f5df095f6178faeb4f4">CNoveltyIf::Novelty_t</a> eNoveltyIdx, int iDataLength, float fSampleRate=1.F)</td></tr>
<tr class="separator:ad4c0e04f9ae0eaa7ccf48509125cab1a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2066599bb659fd90d13bc8a57dec005e"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="a00116.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00505.xhtml#a2066599bb659fd90d13bc8a57dec005e">destroy</a> (<a class="el" href="a00505.xhtml">CNoveltyFromBlockIf</a> *&amp;pCInstance)</td></tr>
<tr class="separator:a2066599bb659fd90d13bc8a57dec005e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af7c60e9d5cc52b4c2f65ee62fe9ee604"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00505.xhtml#af7c60e9d5cc52b4c2f65ee62fe9ee604">compNoveltyFlux</a> (const float *pfMagSpec, const float *pfPrevSpec, int iDataLength, float fSampleRate=1.F)</td></tr>
<tr class="separator:af7c60e9d5cc52b4c2f65ee62fe9ee604"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a21778c061afe83ab8e390d8c49b8baf3"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00505.xhtml#a21778c061afe83ab8e390d8c49b8baf3">compNoveltyHainsworth</a> (const float *pfMagSpec, const float *pfPrevSpec, int iDataLength, float fSampleRate=1.F)</td></tr>
<tr class="separator:a21778c061afe83ab8e390d8c49b8baf3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad2367a408255e2c7867e79743b6d82cd"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00505.xhtml#ad2367a408255e2c7867e79743b6d82cd">compNoveltyLaroche</a> (const float *pfMagSpec, const float *pfPrevSpec, int iDataLength, float fSampleRate=1.F)</td></tr>
<tr class="separator:ad2367a408255e2c7867e79743b6d82cd"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pro-methods" name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a55adbc3ecfeffbeb621875bb56f3bf7f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00505.xhtml#a55adbc3ecfeffbeb621875bb56f3bf7f">CNoveltyFromBlockIf</a> ()</td></tr>
<tr class="separator:a55adbc3ecfeffbeb621875bb56f3bf7f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9bd729b91b67944f16547f85090b9eae"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00505.xhtml#a9bd729b91b67944f16547f85090b9eae">CNoveltyFromBlockIf</a> (<a class="el" href="a00501.xhtml#aaaa808da8acb1f5df095f6178faeb4f4">CNoveltyIf::Novelty_t</a> eNoveltyIdx, int iDataLength, float fSampleRate)</td></tr>
<tr class="separator:a9bd729b91b67944f16547f85090b9eae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0a3ab1625c7603b3e922573dc2354bf9"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00505.xhtml#a0a3ab1625c7603b3e922573dc2354bf9">~CNoveltyFromBlockIf</a> ()</td></tr>
<tr class="separator:a0a3ab1625c7603b3e922573dc2354bf9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a309c0dba3870cb5bea82f7b08f4432f2"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00505.xhtml#a309c0dba3870cb5bea82f7b08f4432f2">CNoveltyFromBlockIf</a> (const <a class="el" href="a00505.xhtml">CNoveltyFromBlockIf</a> &amp;that)</td></tr>
<tr class="separator:a309c0dba3870cb5bea82f7b08f4432f2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af7d6dac2fcb2305c5736c1e5dd4cbf0e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00505.xhtml">CNoveltyFromBlockIf</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00505.xhtml#af7d6dac2fcb2305c5736c1e5dd4cbf0e">operator=</a> (const <a class="el" href="a00505.xhtml">CNoveltyFromBlockIf</a> &amp;c)</td></tr>
<tr class="separator:af7d6dac2fcb2305c5736c1e5dd4cbf0e"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pro-attribs" name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:acd6ab16d268e644c7e141761feede22f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00501.xhtml#aaaa808da8acb1f5df095f6178faeb4f4">CNoveltyIf::Novelty_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00505.xhtml#acd6ab16d268e644c7e141761feede22f">m_eNoveltyIdx</a> = <a class="el" href="a00501.xhtml#aaaa808da8acb1f5df095f6178faeb4f4ad3488ba679c6c6545742152b45e3df0c">CNoveltyIf::kNumNoveltyFunctions</a></td></tr>
<tr class="memdesc:acd6ab16d268e644c7e141761feede22f"><td class="mdescLeft">&#160;</td><td class="mdescRight">index of Novelty to extract  <a href="a00505.xhtml#acd6ab16d268e644c7e141761feede22f">More...</a><br /></td></tr>
<tr class="separator:acd6ab16d268e644c7e141761feede22f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad66c8512f67023f27e1eeac3d1c8e5d8"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00505.xhtml#ad66c8512f67023f27e1eeac3d1c8e5d8">m_iDataLength</a> = 0</td></tr>
<tr class="memdesc:ad66c8512f67023f27e1eeac3d1c8e5d8"><td class="mdescLeft">&#160;</td><td class="mdescRight">block length  <a href="a00505.xhtml#ad66c8512f67023f27e1eeac3d1c8e5d8">More...</a><br /></td></tr>
<tr class="separator:ad66c8512f67023f27e1eeac3d1c8e5d8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1edfefa2d3fbd4b3d85eab24ec8d0abf"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00505.xhtml#a1edfefa2d3fbd4b3d85eab24ec8d0abf">m_fSampleRate</a> = 0</td></tr>
<tr class="memdesc:a1edfefa2d3fbd4b3d85eab24ec8d0abf"><td class="mdescLeft">&#160;</td><td class="mdescRight">sample rate  <a href="a00505.xhtml#a1edfefa2d3fbd4b3d85eab24ec8d0abf">More...</a><br /></td></tr>
<tr class="separator:a1edfefa2d3fbd4b3d85eab24ec8d0abf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a70cf68afc431f61abec9a8e95e49a14f"><td class="memItemLeft" align="right" valign="top">float *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00505.xhtml#a70cf68afc431f61abec9a8e95e49a14f">m_pfPrevSpec</a> = 0</td></tr>
<tr class="memdesc:a70cf68afc431f61abec9a8e95e49a14f"><td class="mdescLeft">&#160;</td><td class="mdescRight">previous spectrum  <a href="a00505.xhtml#a70cf68afc431f61abec9a8e95e49a14f">More...</a><br /></td></tr>
<tr class="separator:a70cf68afc431f61abec9a8e95e49a14f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7684ddb179de94eeae1f53469d903e22"><td class="memItemLeft" align="right" valign="top">const std::map&lt; <a class="el" href="a00501.xhtml#aaaa808da8acb1f5df095f6178faeb4f4">CNoveltyIf::Novelty_t</a>, std::function&lt; float(const float *, const float *, int, float)&gt; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00505.xhtml#a7684ddb179de94eeae1f53469d903e22">m_DispatchMap</a></td></tr>
<tr class="separator:a7684ddb179de94eeae1f53469d903e22"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p >class for computation of a Novelty from a block of data (e.g., time or magnitude spectrum) </p>

<p class="definition">Definition at line <a class="el" href="a00212_source.xhtml#l00013">13</a> of file <a class="el" href="a00212_source.xhtml">NoveltyFromBlock.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a55adbc3ecfeffbeb621875bb56f3bf7f" name="a55adbc3ecfeffbeb621875bb56f3bf7f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a55adbc3ecfeffbeb621875bb56f3bf7f">&#9670;&nbsp;</a></span>CNoveltyFromBlockIf() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">CNoveltyFromBlockIf::CNoveltyFromBlockIf </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="a00212_source.xhtml#l00060">60</a> of file <a class="el" href="a00212_source.xhtml">NoveltyFromBlock.h</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   60</span>{};</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="a00065_source.xhtml#l00085">create()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00505_a55adbc3ecfeffbeb621875bb56f3bf7f_icgraph.svg" width="100%" height="388"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="a9bd729b91b67944f16547f85090b9eae" name="a9bd729b91b67944f16547f85090b9eae"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9bd729b91b67944f16547f85090b9eae">&#9670;&nbsp;</a></span>CNoveltyFromBlockIf() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">CNoveltyFromBlockIf::CNoveltyFromBlockIf </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="a00501.xhtml#aaaa808da8acb1f5df095f6178faeb4f4">CNoveltyIf::Novelty_t</a>&#160;</td>
          <td class="paramname"><em>eNoveltyIdx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>iDataLength</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fSampleRate</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="a00065_source.xhtml#l00069">69</a> of file <a class="el" href="a00065_source.xhtml">NoveltyFromBlock.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   69</span>                                                                                                            :</div>
<div class="line"><span class="lineno">   70</span>    <a class="code hl_variable" href="a00505.xhtml#acd6ab16d268e644c7e141761feede22f">m_eNoveltyIdx</a>(eNoveltyIdx),</div>
<div class="line"><span class="lineno">   71</span>    <a class="code hl_variable" href="a00505.xhtml#ad66c8512f67023f27e1eeac3d1c8e5d8">m_iDataLength</a>(iDataLength),</div>
<div class="line"><span class="lineno">   72</span>    <a class="code hl_variable" href="a00505.xhtml#a1edfefa2d3fbd4b3d85eab24ec8d0abf">m_fSampleRate</a>(fSampleRate)</div>
<div class="line"><span class="lineno">   73</span>{</div>
<div class="line"><span class="lineno">   74</span>    assert(iDataLength &gt; 0);</div>
<div class="line"><span class="lineno">   75</span>    assert(fSampleRate &gt; 0);</div>
<div class="line"><span class="lineno">   76</span> </div>
<div class="line"><span class="lineno">   77</span>    <a class="code hl_function" href="a00489.xhtml#abaadac98b1cad18b7b568852bc951696">CVector::alloc</a>(<a class="code hl_variable" href="a00505.xhtml#a70cf68afc431f61abec9a8e95e49a14f">m_pfPrevSpec</a>, <a class="code hl_variable" href="a00505.xhtml#ad66c8512f67023f27e1eeac3d1c8e5d8">m_iDataLength</a>);</div>
<div class="line"><span class="lineno">   78</span>}</div>
<div class="ttc" id="aa00489_xhtml_abaadac98b1cad18b7b568852bc951696"><div class="ttname"><a href="a00489.xhtml#abaadac98b1cad18b7b568852bc951696">CVector::alloc</a></div><div class="ttdeci">static void alloc(T *&amp;ptVec, long long iLength)</div><div class="ttdef"><b>Definition:</b> <a href="a00152_source.xhtml#l00024">Vector.h:24</a></div></div>
<div class="ttc" id="aa00505_xhtml_a1edfefa2d3fbd4b3d85eab24ec8d0abf"><div class="ttname"><a href="a00505.xhtml#a1edfefa2d3fbd4b3d85eab24ec8d0abf">CNoveltyFromBlockIf::m_fSampleRate</a></div><div class="ttdeci">float m_fSampleRate</div><div class="ttdoc">sample rate</div><div class="ttdef"><b>Definition:</b> <a href="a00212_source.xhtml#l00071">NoveltyFromBlock.h:71</a></div></div>
<div class="ttc" id="aa00505_xhtml_a70cf68afc431f61abec9a8e95e49a14f"><div class="ttname"><a href="a00505.xhtml#a70cf68afc431f61abec9a8e95e49a14f">CNoveltyFromBlockIf::m_pfPrevSpec</a></div><div class="ttdeci">float * m_pfPrevSpec</div><div class="ttdoc">previous spectrum</div><div class="ttdef"><b>Definition:</b> <a href="a00212_source.xhtml#l00073">NoveltyFromBlock.h:73</a></div></div>
<div class="ttc" id="aa00505_xhtml_acd6ab16d268e644c7e141761feede22f"><div class="ttname"><a href="a00505.xhtml#acd6ab16d268e644c7e141761feede22f">CNoveltyFromBlockIf::m_eNoveltyIdx</a></div><div class="ttdeci">CNoveltyIf::Novelty_t m_eNoveltyIdx</div><div class="ttdoc">index of Novelty to extract</div><div class="ttdef"><b>Definition:</b> <a href="a00212_source.xhtml#l00067">NoveltyFromBlock.h:67</a></div></div>
<div class="ttc" id="aa00505_xhtml_ad66c8512f67023f27e1eeac3d1c8e5d8"><div class="ttname"><a href="a00505.xhtml#ad66c8512f67023f27e1eeac3d1c8e5d8">CNoveltyFromBlockIf::m_iDataLength</a></div><div class="ttdeci">int m_iDataLength</div><div class="ttdoc">block length</div><div class="ttdef"><b>Definition:</b> <a href="a00212_source.xhtml#l00069">NoveltyFromBlock.h:69</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00152_source.xhtml#l00024">CVector::alloc()</a>, <a class="el" href="a00212_source.xhtml#l00069">m_iDataLength</a>, and <a class="el" href="a00212_source.xhtml#l00073">m_pfPrevSpec</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00505_a9bd729b91b67944f16547f85090b9eae_cgraph.svg" width="480" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a0a3ab1625c7603b3e922573dc2354bf9" name="a0a3ab1625c7603b3e922573dc2354bf9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0a3ab1625c7603b3e922573dc2354bf9">&#9670;&nbsp;</a></span>~CNoveltyFromBlockIf()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">CNoveltyFromBlockIf::~CNoveltyFromBlockIf </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="a00065_source.xhtml#l00080">80</a> of file <a class="el" href="a00065_source.xhtml">NoveltyFromBlock.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   81</span>{</div>
<div class="line"><span class="lineno">   82</span>    <a class="code hl_function" href="a00489.xhtml#aa86bdb0c663d4d52f2765793756f8737">CVector::free</a>(<a class="code hl_variable" href="a00505.xhtml#a70cf68afc431f61abec9a8e95e49a14f">m_pfPrevSpec</a>);</div>
<div class="line"><span class="lineno">   83</span>}</div>
<div class="ttc" id="aa00489_xhtml_aa86bdb0c663d4d52f2765793756f8737"><div class="ttname"><a href="a00489.xhtml#aa86bdb0c663d4d52f2765793756f8737">CVector::free</a></div><div class="ttdeci">static void free(T *&amp;ptVec)</div><div class="ttdef"><b>Definition:</b> <a href="a00152_source.xhtml#l00039">Vector.h:39</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00152_source.xhtml#l00039">CVector::free()</a>, and <a class="el" href="a00212_source.xhtml#l00073">m_pfPrevSpec</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00505_a0a3ab1625c7603b3e922573dc2354bf9_cgraph.svg" width="315" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a309c0dba3870cb5bea82f7b08f4432f2" name="a309c0dba3870cb5bea82f7b08f4432f2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a309c0dba3870cb5bea82f7b08f4432f2">&#9670;&nbsp;</a></span>CNoveltyFromBlockIf() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">CNoveltyFromBlockIf::CNoveltyFromBlockIf </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="a00505.xhtml">CNoveltyFromBlockIf</a> &amp;&#160;</td>
          <td class="paramname"><em>that</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="afb2032a0a8448d57c5faec119b63bb71" name="afb2032a0a8448d57c5faec119b63bb71"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afb2032a0a8448d57c5faec119b63bb71">&#9670;&nbsp;</a></span>compNovelty()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00116.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> CNoveltyFromBlockIf::compNovelty </td>
          <td>(</td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>pfNovelty</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float *&#160;</td>
          <td class="paramname"><em>pfInput</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p >performs the NoveltyFromBlock computation </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pfNovelty</td><td>Novelty result (user-allocated, to be written, length from <a class="el" href="a00505.xhtml#a2755f4e823abb1178868ac3f5219078d">CNoveltyFromBlockIf::getNoveltyDimension</a>) </td></tr>
    <tr><td class="paramname">pfInput</td><td>input data of length iDataLength </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Error_t </dd></dl>

<p class="definition">Definition at line <a class="el" href="a00065_source.xhtml#l00110">110</a> of file <a class="el" href="a00065_source.xhtml">NoveltyFromBlock.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  111</span>{</div>
<div class="line"><span class="lineno">  112</span>    *pfNovelty = <a class="code hl_variable" href="a00505.xhtml#a7684ddb179de94eeae1f53469d903e22">m_DispatchMap</a>.at(<a class="code hl_variable" href="a00505.xhtml#acd6ab16d268e644c7e141761feede22f">m_eNoveltyIdx</a>)(pfInput, <a class="code hl_variable" href="a00505.xhtml#a70cf68afc431f61abec9a8e95e49a14f">m_pfPrevSpec</a>, <a class="code hl_variable" href="a00505.xhtml#ad66c8512f67023f27e1eeac3d1c8e5d8">m_iDataLength</a>, <a class="code hl_variable" href="a00505.xhtml#a1edfefa2d3fbd4b3d85eab24ec8d0abf">m_fSampleRate</a>);</div>
<div class="line"><span class="lineno">  113</span> </div>
<div class="line"><span class="lineno">  114</span>    <a class="code hl_function" href="a00489.xhtml#ad7c5cba73e439adac77778f61c9418f0">CVector::copy</a>(<a class="code hl_variable" href="a00505.xhtml#a70cf68afc431f61abec9a8e95e49a14f">m_pfPrevSpec</a>, pfInput, <a class="code hl_variable" href="a00505.xhtml#ad66c8512f67023f27e1eeac3d1c8e5d8">m_iDataLength</a>);</div>
<div class="line"><span class="lineno">  115</span> </div>
<div class="line"><span class="lineno">  116</span>    <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00116.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><span class="lineno">  117</span>}</div>
<div class="ttc" id="aa00116_xhtml_a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b"><div class="ttname"><a href="a00116.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a></div><div class="ttdeci">@ kNoError</div></div>
<div class="ttc" id="aa00489_xhtml_ad7c5cba73e439adac77778f61c9418f0"><div class="ttname"><a href="a00489.xhtml#ad7c5cba73e439adac77778f61c9418f0">CVector::copy</a></div><div class="ttdeci">static void copy(T *ptDest, const T *ptSrc, long long int iLength)</div><div class="ttdef"><b>Definition:</b> <a href="a00152_source.xhtml#l00113">Vector.h:113</a></div></div>
<div class="ttc" id="aa00505_xhtml_a7684ddb179de94eeae1f53469d903e22"><div class="ttname"><a href="a00505.xhtml#a7684ddb179de94eeae1f53469d903e22">CNoveltyFromBlockIf::m_DispatchMap</a></div><div class="ttdeci">const std::map&lt; CNoveltyIf::Novelty_t, std::function&lt; float(const float *, const float *, int, float)&gt; &gt; m_DispatchMap</div><div class="ttdef"><b>Definition:</b> <a href="a00212_source.xhtml#l00076">NoveltyFromBlock.h:77</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00152_source.xhtml#l00113">CVector::copy()</a>, <a class="el" href="a00116.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">kNoError</a>, <a class="el" href="a00212_source.xhtml#l00077">m_DispatchMap</a>, <a class="el" href="a00212_source.xhtml#l00067">m_eNoveltyIdx</a>, <a class="el" href="a00212_source.xhtml#l00071">m_fSampleRate</a>, <a class="el" href="a00212_source.xhtml#l00069">m_iDataLength</a>, and <a class="el" href="a00212_source.xhtml#l00073">m_pfPrevSpec</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00092_source.xhtml#l00186">CNoveltyIf::compNovelty()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00505_afb2032a0a8448d57c5faec119b63bb71_cgraph.svg" width="308" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00505_afb2032a0a8448d57c5faec119b63bb71_icgraph.svg" width="100%" height="366"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="af7c60e9d5cc52b4c2f65ee62fe9ee604" name="af7c60e9d5cc52b4c2f65ee62fe9ee604"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af7c60e9d5cc52b4c2f65ee62fe9ee604">&#9670;&nbsp;</a></span>compNoveltyFlux()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float CNoveltyFromBlockIf::compNoveltyFlux </td>
          <td>(</td>
          <td class="paramtype">const float *&#160;</td>
          <td class="paramname"><em>pfMagSpec</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float *&#160;</td>
          <td class="paramname"><em>pfPrevSpec</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>iDataLength</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fSampleRate</em> = <code>1.F</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="a00065_source.xhtml#l00011">11</a> of file <a class="el" href="a00065_source.xhtml">NoveltyFromBlock.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   12</span>{</div>
<div class="line"><span class="lineno">   13</span>    assert(pfMagSpec);</div>
<div class="line"><span class="lineno">   14</span>    assert(pfPrevSpec);</div>
<div class="line"><span class="lineno">   15</span>    assert(iDataLength &gt; 0);</div>
<div class="line"><span class="lineno">   16</span> </div>
<div class="line"><span class="lineno">   17</span>    <span class="keywordtype">float</span> fSum = 0;</div>
<div class="line"><span class="lineno">   18</span>    <span class="keywordflow">for</span> (<span class="keyword">auto</span> k = 0; k &lt; iDataLength; k++)</div>
<div class="line"><span class="lineno">   19</span>    {</div>
<div class="line"><span class="lineno">   20</span> </div>
<div class="line"><span class="lineno">   21</span>        <span class="keywordtype">float</span> fDiff = pfMagSpec[k] - pfPrevSpec[k];</div>
<div class="line"><span class="lineno">   22</span>        fSum += (fDiff &gt; 0) ? fDiff * fDiff : 0.F;</div>
<div class="line"><span class="lineno">   23</span>    }</div>
<div class="line"><span class="lineno">   24</span> </div>
<div class="line"><span class="lineno">   25</span>    <span class="keywordflow">return</span> std::sqrt(fSum) / iDataLength;</div>
<div class="line"><span class="lineno">   26</span>}</div>
</div><!-- fragment -->
</div>
</div>
<a id="a21778c061afe83ab8e390d8c49b8baf3" name="a21778c061afe83ab8e390d8c49b8baf3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a21778c061afe83ab8e390d8c49b8baf3">&#9670;&nbsp;</a></span>compNoveltyHainsworth()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float CNoveltyFromBlockIf::compNoveltyHainsworth </td>
          <td>(</td>
          <td class="paramtype">const float *&#160;</td>
          <td class="paramname"><em>pfMagSpec</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float *&#160;</td>
          <td class="paramname"><em>pfPrevSpec</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>iDataLength</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fSampleRate</em> = <code>1.F</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="a00065_source.xhtml#l00028">28</a> of file <a class="el" href="a00065_source.xhtml">NoveltyFromBlock.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   29</span>{</div>
<div class="line"><span class="lineno">   30</span>    assert(pfMagSpec);</div>
<div class="line"><span class="lineno">   31</span>    assert(pfPrevSpec);</div>
<div class="line"><span class="lineno">   32</span>    assert(iDataLength &gt; 0);</div>
<div class="line"><span class="lineno">   33</span> </div>
<div class="line"><span class="lineno">   34</span>    <span class="keyword">const</span> <span class="keywordtype">float</span> fEpsilon = 1e-5F;</div>
<div class="line"><span class="lineno">   35</span>    <span class="keywordtype">float</span> fSum = 0;</div>
<div class="line"><span class="lineno">   36</span> </div>
<div class="line"><span class="lineno">   37</span>    <span class="keywordflow">for</span> (<span class="keyword">auto</span> k = 0; k &lt; iDataLength; k++)</div>
<div class="line"><span class="lineno">   38</span>    {</div>
<div class="line"><span class="lineno">   39</span>        <span class="keywordtype">float</span> fMag = (pfMagSpec[k] &gt; 0) ? pfMagSpec[k] : fEpsilon;</div>
<div class="line"><span class="lineno">   40</span>        <span class="keywordtype">float</span> fPrev = (pfPrevSpec[k] &gt; 0) ? pfPrevSpec[k] : fEpsilon;</div>
<div class="line"><span class="lineno">   41</span>        fSum += std::log2(fMag / fPrev);</div>
<div class="line"><span class="lineno">   42</span>    }</div>
<div class="line"><span class="lineno">   43</span> </div>
<div class="line"><span class="lineno">   44</span>    <span class="keywordflow">return</span> fSum / iDataLength;</div>
<div class="line"><span class="lineno">   45</span>}</div>
</div><!-- fragment -->
</div>
</div>
<a id="ad2367a408255e2c7867e79743b6d82cd" name="ad2367a408255e2c7867e79743b6d82cd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad2367a408255e2c7867e79743b6d82cd">&#9670;&nbsp;</a></span>compNoveltyLaroche()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float CNoveltyFromBlockIf::compNoveltyLaroche </td>
          <td>(</td>
          <td class="paramtype">const float *&#160;</td>
          <td class="paramname"><em>pfMagSpec</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float *&#160;</td>
          <td class="paramname"><em>pfPrevSpec</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>iDataLength</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fSampleRate</em> = <code>1.F</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="a00065_source.xhtml#l00047">47</a> of file <a class="el" href="a00065_source.xhtml">NoveltyFromBlock.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   48</span>{</div>
<div class="line"><span class="lineno">   49</span>    assert(pfMagSpec);</div>
<div class="line"><span class="lineno">   50</span>    assert(pfPrevSpec);</div>
<div class="line"><span class="lineno">   51</span>    assert(iDataLength &gt; 0);</div>
<div class="line"><span class="lineno">   52</span> </div>
<div class="line"><span class="lineno">   53</span>    <span class="keywordtype">float</span> fSum = 0;</div>
<div class="line"><span class="lineno">   54</span> </div>
<div class="line"><span class="lineno">   55</span>    <span class="keywordflow">for</span> (<span class="keyword">auto</span> k = 0; k &lt; iDataLength; k++)</div>
<div class="line"><span class="lineno">   56</span>    {</div>
<div class="line"><span class="lineno">   57</span> </div>
<div class="line"><span class="lineno">   58</span>        <span class="keywordtype">float</span> fDiff = std::sqrt(pfMagSpec[k]) - std::sqrt(pfPrevSpec[k]);</div>
<div class="line"><span class="lineno">   59</span>        fSum += (fDiff &gt; 0) ? fDiff : 0.F;</div>
<div class="line"><span class="lineno">   60</span>    }</div>
<div class="line"><span class="lineno">   61</span> </div>
<div class="line"><span class="lineno">   62</span>    <span class="keywordflow">return</span> fSum / iDataLength;</div>
<div class="line"><span class="lineno">   63</span>}</div>
</div><!-- fragment -->
</div>
</div>
<a id="ad4c0e04f9ae0eaa7ccf48509125cab1a" name="ad4c0e04f9ae0eaa7ccf48509125cab1a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad4c0e04f9ae0eaa7ccf48509125cab1a">&#9670;&nbsp;</a></span>create()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00116.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> CNoveltyFromBlockIf::create </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="a00505.xhtml">CNoveltyFromBlockIf</a> *&amp;&#160;</td>
          <td class="paramname"><em>pCInstance</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="a00501.xhtml#aaaa808da8acb1f5df095f6178faeb4f4">CNoveltyIf::Novelty_t</a>&#160;</td>
          <td class="paramname"><em>eNoveltyIdx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>iDataLength</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fSampleRate</em> = <code>1.F</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p >initializes a NoveltyFromBlock instance </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pCInstance</td><td>pointer to instance to be written </td></tr>
    <tr><td class="paramname">eNoveltyIdx</td><td>index of Novelty to extract </td></tr>
    <tr><td class="paramname">iDataLength</td><td>block length </td></tr>
    <tr><td class="paramname">fSampleRate</td><td>sample rate (only used when needed) </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Error_t </dd></dl>

<p class="definition">Definition at line <a class="el" href="a00065_source.xhtml#l00085">85</a> of file <a class="el" href="a00065_source.xhtml">NoveltyFromBlock.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   86</span>{</div>
<div class="line"><span class="lineno">   87</span>    <span class="keywordflow">if</span> (iDataLength &lt;= 0 || fSampleRate &lt;= 0)</div>
<div class="line"><span class="lineno">   88</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00116.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248">Error_t::kFunctionInvalidArgsError</a>;</div>
<div class="line"><span class="lineno">   89</span> </div>
<div class="line"><span class="lineno">   90</span>    pCInstance = <span class="keyword">new</span> <a class="code hl_function" href="a00505.xhtml#a55adbc3ecfeffbeb621875bb56f3bf7f">CNoveltyFromBlockIf</a>(eNoveltyIdx, iDataLength, fSampleRate);</div>
<div class="line"><span class="lineno">   91</span> </div>
<div class="line"><span class="lineno">   92</span>    <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00116.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><span class="lineno">   93</span>}</div>
<div class="ttc" id="aa00116_xhtml_a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248"><div class="ttname"><a href="a00116.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248">Error_t::kFunctionInvalidArgsError</a></div><div class="ttdeci">@ kFunctionInvalidArgsError</div></div>
<div class="ttc" id="aa00505_xhtml_a55adbc3ecfeffbeb621875bb56f3bf7f"><div class="ttname"><a href="a00505.xhtml#a55adbc3ecfeffbeb621875bb56f3bf7f">CNoveltyFromBlockIf::CNoveltyFromBlockIf</a></div><div class="ttdeci">CNoveltyFromBlockIf()</div><div class="ttdef"><b>Definition:</b> <a href="a00212_source.xhtml#l00060">NoveltyFromBlock.h:60</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00212_source.xhtml#l00060">CNoveltyFromBlockIf()</a>, <a class="el" href="a00116.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248">kFunctionInvalidArgsError</a>, and <a class="el" href="a00116.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">kNoError</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00092_source.xhtml#l00321">CNoveltyIf::init_()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00505_ad4c0e04f9ae0eaa7ccf48509125cab1a_cgraph.svg" width="358" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00505_ad4c0e04f9ae0eaa7ccf48509125cab1a_icgraph.svg" width="552" height="118"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a2066599bb659fd90d13bc8a57dec005e" name="a2066599bb659fd90d13bc8a57dec005e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2066599bb659fd90d13bc8a57dec005e">&#9670;&nbsp;</a></span>destroy()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00116.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> CNoveltyFromBlockIf::destroy </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="a00505.xhtml">CNoveltyFromBlockIf</a> *&amp;&#160;</td>
          <td class="paramname"><em>pCInstance</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p >destroys a NoveltyFromBlock instance </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pCInstance</td><td>pointer to instance to be destroyed </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Error_t </dd></dl>

<p class="definition">Definition at line <a class="el" href="a00065_source.xhtml#l00095">95</a> of file <a class="el" href="a00065_source.xhtml">NoveltyFromBlock.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   96</span>{</div>
<div class="line"><span class="lineno">   97</span>    <span class="keyword">delete</span> pCInstance;</div>
<div class="line"><span class="lineno">   98</span> </div>
<div class="line"><span class="lineno">   99</span>    pCInstance = 0;</div>
<div class="line"><span class="lineno">  100</span> </div>
<div class="line"><span class="lineno">  101</span>    <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00116.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><span class="lineno">  102</span>}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00116.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">kNoError</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00092_source.xhtml#l00296">CNoveltyIf::reset_()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00505_a2066599bb659fd90d13bc8a57dec005e_icgraph.svg" width="564" height="155"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a2755f4e823abb1178868ac3f5219078d" name="a2755f4e823abb1178868ac3f5219078d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2755f4e823abb1178868ac3f5219078d">&#9670;&nbsp;</a></span>getNoveltyDimension()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int CNoveltyFromBlockIf::getNoveltyDimension </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p >returns size of output Novelty (1 in all currently implemented cases) </p><dl class="section return"><dt>Returns</dt><dd>int </dd></dl>

<p class="definition">Definition at line <a class="el" href="a00065_source.xhtml#l00104">104</a> of file <a class="el" href="a00065_source.xhtml">NoveltyFromBlock.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  105</span>{</div>
<div class="line"><span class="lineno">  106</span>    <span class="comment">// default: 1 value per block</span></div>
<div class="line"><span class="lineno">  107</span>    <span class="keywordflow">return</span> 1;</div>
<div class="line"><span class="lineno">  108</span>}</div>
</div><!-- fragment -->
</div>
</div>
<a id="a053b558e7cfef7c598afbb58fae99d88" name="a053b558e7cfef7c598afbb58fae99d88"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a053b558e7cfef7c598afbb58fae99d88">&#9670;&nbsp;</a></span>getNoveltyIdx()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00501.xhtml#aaaa808da8acb1f5df095f6178faeb4f4">CNoveltyIf::Novelty_t</a> CNoveltyFromBlockIf::getNoveltyIdx </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p >returns index of the Novelty to extract </p><dl class="section return"><dt>Returns</dt><dd>Novelty_t </dd></dl>

<p class="definition">Definition at line <a class="el" href="a00212_source.xhtml#l00040">40</a> of file <a class="el" href="a00212_source.xhtml">NoveltyFromBlock.h</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   41</span>    {</div>
<div class="line"><span class="lineno">   42</span>        <span class="keywordflow">return</span> <a class="code hl_variable" href="a00505.xhtml#acd6ab16d268e644c7e141761feede22f">m_eNoveltyIdx</a>;</div>
<div class="line"><span class="lineno">   43</span>    }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00212_source.xhtml#l00067">m_eNoveltyIdx</a>.</p>

</div>
</div>
<a id="af7d6dac2fcb2305c5736c1e5dd4cbf0e" name="af7d6dac2fcb2305c5736c1e5dd4cbf0e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af7d6dac2fcb2305c5736c1e5dd4cbf0e">&#9670;&nbsp;</a></span>operator=()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00505.xhtml">CNoveltyFromBlockIf</a> &amp; CNoveltyFromBlockIf::operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="a00505.xhtml">CNoveltyFromBlockIf</a> &amp;&#160;</td>
          <td class="paramname"><em>c</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="a7684ddb179de94eeae1f53469d903e22" name="a7684ddb179de94eeae1f53469d903e22"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7684ddb179de94eeae1f53469d903e22">&#9670;&nbsp;</a></span>m_DispatchMap</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const std::map&lt;<a class="el" href="a00501.xhtml#aaaa808da8acb1f5df095f6178faeb4f4">CNoveltyIf::Novelty_t</a>, std::function&lt;float(const float*, const float*, int, float)&gt; &gt; CNoveltyFromBlockIf::m_DispatchMap</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line">{</div>
<div class="line">            {<a class="code hl_enumvalue" href="a00501.xhtml#aaaa808da8acb1f5df095f6178faeb4f4ab54085095907f70fca3bee22d3bc5d38">CNoveltyIf::kNoveltyFlux</a>, &amp;<a class="code hl_function" href="a00505.xhtml#af7c60e9d5cc52b4c2f65ee62fe9ee604">compNoveltyFlux</a>},</div>
<div class="line">            {<a class="code hl_enumvalue" href="a00501.xhtml#aaaa808da8acb1f5df095f6178faeb4f4a792ea51409c928b6fa36da69498c725e">CNoveltyIf::kNoveltyHainsworth</a>, &amp;<a class="code hl_function" href="a00505.xhtml#a21778c061afe83ab8e390d8c49b8baf3">compNoveltyHainsworth</a>},</div>
<div class="line">            {<a class="code hl_enumvalue" href="a00501.xhtml#aaaa808da8acb1f5df095f6178faeb4f4a8aa84a1abfabedffd2c7477607a1501c">CNoveltyIf::kNoveltyLaroche</a>, &amp;<a class="code hl_function" href="a00505.xhtml#ad2367a408255e2c7867e79743b6d82cd">compNoveltyLaroche</a>}</div>
<div class="line">    }</div>
<div class="ttc" id="aa00501_xhtml_aaaa808da8acb1f5df095f6178faeb4f4a792ea51409c928b6fa36da69498c725e"><div class="ttname"><a href="a00501.xhtml#aaaa808da8acb1f5df095f6178faeb4f4a792ea51409c928b6fa36da69498c725e">CNoveltyIf::kNoveltyHainsworth</a></div><div class="ttdeci">@ kNoveltyHainsworth</div><div class="ttdef"><b>Definition:</b> <a href="a00191_source.xhtml#l00027">Novelty.h:27</a></div></div>
<div class="ttc" id="aa00501_xhtml_aaaa808da8acb1f5df095f6178faeb4f4a8aa84a1abfabedffd2c7477607a1501c"><div class="ttname"><a href="a00501.xhtml#aaaa808da8acb1f5df095f6178faeb4f4a8aa84a1abfabedffd2c7477607a1501c">CNoveltyIf::kNoveltyLaroche</a></div><div class="ttdeci">@ kNoveltyLaroche</div><div class="ttdef"><b>Definition:</b> <a href="a00191_source.xhtml#l00028">Novelty.h:28</a></div></div>
<div class="ttc" id="aa00501_xhtml_aaaa808da8acb1f5df095f6178faeb4f4ab54085095907f70fca3bee22d3bc5d38"><div class="ttname"><a href="a00501.xhtml#aaaa808da8acb1f5df095f6178faeb4f4ab54085095907f70fca3bee22d3bc5d38">CNoveltyIf::kNoveltyFlux</a></div><div class="ttdeci">@ kNoveltyFlux</div><div class="ttdef"><b>Definition:</b> <a href="a00191_source.xhtml#l00026">Novelty.h:26</a></div></div>
<div class="ttc" id="aa00505_xhtml_a21778c061afe83ab8e390d8c49b8baf3"><div class="ttname"><a href="a00505.xhtml#a21778c061afe83ab8e390d8c49b8baf3">CNoveltyFromBlockIf::compNoveltyHainsworth</a></div><div class="ttdeci">static float compNoveltyHainsworth(const float *pfMagSpec, const float *pfPrevSpec, int iDataLength, float fSampleRate=1.F)</div><div class="ttdef"><b>Definition:</b> <a href="a00065_source.xhtml#l00028">NoveltyFromBlock.cpp:28</a></div></div>
<div class="ttc" id="aa00505_xhtml_ad2367a408255e2c7867e79743b6d82cd"><div class="ttname"><a href="a00505.xhtml#ad2367a408255e2c7867e79743b6d82cd">CNoveltyFromBlockIf::compNoveltyLaroche</a></div><div class="ttdeci">static float compNoveltyLaroche(const float *pfMagSpec, const float *pfPrevSpec, int iDataLength, float fSampleRate=1.F)</div><div class="ttdef"><b>Definition:</b> <a href="a00065_source.xhtml#l00047">NoveltyFromBlock.cpp:47</a></div></div>
<div class="ttc" id="aa00505_xhtml_af7c60e9d5cc52b4c2f65ee62fe9ee604"><div class="ttname"><a href="a00505.xhtml#af7c60e9d5cc52b4c2f65ee62fe9ee604">CNoveltyFromBlockIf::compNoveltyFlux</a></div><div class="ttdeci">static float compNoveltyFlux(const float *pfMagSpec, const float *pfPrevSpec, int iDataLength, float fSampleRate=1.F)</div><div class="ttdef"><b>Definition:</b> <a href="a00065_source.xhtml#l00011">NoveltyFromBlock.cpp:11</a></div></div>
</div><!-- fragment -->
<p class="definition">Definition at line <a class="el" href="a00212_source.xhtml#l00076">76</a> of file <a class="el" href="a00212_source.xhtml">NoveltyFromBlock.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00065_source.xhtml#l00110">compNovelty()</a>.</p>

</div>
</div>
<a id="acd6ab16d268e644c7e141761feede22f" name="acd6ab16d268e644c7e141761feede22f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acd6ab16d268e644c7e141761feede22f">&#9670;&nbsp;</a></span>m_eNoveltyIdx</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00501.xhtml#aaaa808da8acb1f5df095f6178faeb4f4">CNoveltyIf::Novelty_t</a> CNoveltyFromBlockIf::m_eNoveltyIdx = <a class="el" href="a00501.xhtml#aaaa808da8acb1f5df095f6178faeb4f4ad3488ba679c6c6545742152b45e3df0c">CNoveltyIf::kNumNoveltyFunctions</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>index of Novelty to extract </p>

<p class="definition">Definition at line <a class="el" href="a00212_source.xhtml#l00067">67</a> of file <a class="el" href="a00212_source.xhtml">NoveltyFromBlock.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00065_source.xhtml#l00110">compNovelty()</a>, and <a class="el" href="a00212_source.xhtml#l00040">getNoveltyIdx()</a>.</p>

</div>
</div>
<a id="a1edfefa2d3fbd4b3d85eab24ec8d0abf" name="a1edfefa2d3fbd4b3d85eab24ec8d0abf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1edfefa2d3fbd4b3d85eab24ec8d0abf">&#9670;&nbsp;</a></span>m_fSampleRate</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float CNoveltyFromBlockIf::m_fSampleRate = 0</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>sample rate </p>

<p class="definition">Definition at line <a class="el" href="a00212_source.xhtml#l00071">71</a> of file <a class="el" href="a00212_source.xhtml">NoveltyFromBlock.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00065_source.xhtml#l00110">compNovelty()</a>.</p>

</div>
</div>
<a id="ad66c8512f67023f27e1eeac3d1c8e5d8" name="ad66c8512f67023f27e1eeac3d1c8e5d8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad66c8512f67023f27e1eeac3d1c8e5d8">&#9670;&nbsp;</a></span>m_iDataLength</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int CNoveltyFromBlockIf::m_iDataLength = 0</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>block length </p>

<p class="definition">Definition at line <a class="el" href="a00212_source.xhtml#l00069">69</a> of file <a class="el" href="a00212_source.xhtml">NoveltyFromBlock.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00065_source.xhtml#l00069">CNoveltyFromBlockIf()</a>, and <a class="el" href="a00065_source.xhtml#l00110">compNovelty()</a>.</p>

</div>
</div>
<a id="a70cf68afc431f61abec9a8e95e49a14f" name="a70cf68afc431f61abec9a8e95e49a14f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a70cf68afc431f61abec9a8e95e49a14f">&#9670;&nbsp;</a></span>m_pfPrevSpec</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float* CNoveltyFromBlockIf::m_pfPrevSpec = 0</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>previous spectrum </p>
<p >dispatcher map for static functions without additional arguments </p>

<p class="definition">Definition at line <a class="el" href="a00212_source.xhtml#l00073">73</a> of file <a class="el" href="a00212_source.xhtml">NoveltyFromBlock.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00065_source.xhtml#l00069">CNoveltyFromBlockIf()</a>, <a class="el" href="a00065_source.xhtml#l00110">compNovelty()</a>, and <a class="el" href="a00065_source.xhtml#l00080">~CNoveltyFromBlockIf()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="a00212_source.xhtml">NoveltyFromBlock.h</a></li>
<li><a class="el" href="a00065_source.xhtml">NoveltyFromBlock.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="a00505.xhtml">CNoveltyFromBlockIf</a></li>
    <li class="footer">Generated on Sun Jun 12 2022 20:29:16 for ACA by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.4 </li>
  </ul>
</div>
</body>
</html>
