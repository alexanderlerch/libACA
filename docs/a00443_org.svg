<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 4.0.0 (20220602.1335)
 -->
<!-- Title: CChordIf Pages: 1 -->
<svg width="898pt" height="2003pt"
 viewBox="0.00 0.00 897.50 2003.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 1999)">
<title>CChordIf</title>
<polygon fill="white" stroke="transparent" points="-4,4 -4,-1999 893.5,-1999 893.5,4 -4,4"/>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="class for computation of a magnitude Chord from either a file or a vector">
<polygon fill="#bfbfbf" stroke="black" points="354,-0.5 354,-552.5 508,-552.5 508,-0.5 354,-0.5"/>
<text text-anchor="middle" x="431" y="-540.5" font-family="Helvetica,sans-Serif" font-size="10.00">CChordIf</text>
<polyline fill="none" stroke="black" points="354,-533.5 508,-533.5 "/>
<text text-anchor="start" x="362" y="-521.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iBlockLength</text>
<text text-anchor="start" x="362" y="-510.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iHopLength</text>
<text text-anchor="start" x="362" y="-499.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float m_fSampleRate</text>
<text text-anchor="start" x="362" y="-488.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float * m_pfProcessBuff2</text>
<text text-anchor="start" x="362" y="-477.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float * m_pfProcessBuff1</text>
<text text-anchor="start" x="362" y="-466.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float ** m_ppfChordProbs</text>
<text text-anchor="start" x="362" y="-455.5" font-family="Helvetica,sans-Serif" font-size="10.00"># bool m_bIsInitialized</text>
<polyline fill="none" stroke="black" points="354,-448.5 508,-448.5 "/>
<text text-anchor="start" x="362" y="-436.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getNumBlocks</text>
<text text-anchor="start" x="362" y="-425.5" font-family="Helvetica,sans-Serif" font-size="10.00">(int &amp;iNumBlocks) const</text>
<text text-anchor="start" x="362" y="-414.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ int getNumBlocks()</text>
<text text-anchor="start" x="362" y="-403.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const</text>
<text text-anchor="start" x="362" y="-392.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ float getTimeStamp</text>
<text text-anchor="start" x="362" y="-381.5" font-family="Helvetica,sans-Serif" font-size="10.00">(int iBlockIdx) const</text>
<text text-anchor="start" x="362" y="-370.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getTimeStamps</text>
<text text-anchor="start" x="362" y="-359.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfAxisTicks) const</text>
<text text-anchor="start" x="362" y="-348.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compChords</text>
<text text-anchor="start" x="362" y="-337.5" font-family="Helvetica,sans-Serif" font-size="10.00">(Chords_t *peChord,</text>
<text text-anchor="start" x="362" y="-326.5" font-family="Helvetica,sans-Serif" font-size="10.00"> bool bWithViterbi=true)</text>
<text text-anchor="start" x="362" y="-315.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="362" y="-304.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CChordIf *&amp;pCInstance,</text>
<text text-anchor="start" x="362" y="-293.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const std::string &amp;strAudioFile</text>
<text text-anchor="start" x="362" y="-282.5" font-family="Helvetica,sans-Serif" font-size="10.00">Path, int iBlockLength=8192,</text>
<text text-anchor="start" x="362" y="-271.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iHopLength=2048)</text>
<text text-anchor="start" x="362" y="-260.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="362" y="-249.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CChordIf *&amp;pCInstance,</text>
<text text-anchor="start" x="362" y="-238.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const float *pfAudio,</text>
<text text-anchor="start" x="362" y="-227.5" font-family="Helvetica,sans-Serif" font-size="10.00"> long long iNumFrames, float</text>
<text text-anchor="start" x="362" y="-216.5" font-family="Helvetica,sans-Serif" font-size="10.00"> fSampleRate, int iBlockLength</text>
<text text-anchor="start" x="362" y="-205.5" font-family="Helvetica,sans-Serif" font-size="10.00">=8192, int iHopLength=2048)</text>
<text text-anchor="start" x="362" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="362" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CChordIf *&amp;pCInstance)</text>
<text text-anchor="start" x="362" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static std::string</text>
<text text-anchor="start" x="362" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00"> getChordString(Chords</text>
<text text-anchor="start" x="362" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t eChordIdx)</text>
<text text-anchor="start" x="362" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Chords_t getChord</text>
<text text-anchor="start" x="362" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00">IdxFromString(std::string</text>
<text text-anchor="start" x="362" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00"> sChordString)</text>
<text text-anchor="start" x="362" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CChordIf()</text>
<text text-anchor="start" x="362" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CChordIf()</text>
<text text-anchor="start" x="362" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CChordIf(const CChordIf</text>
<text text-anchor="start" x="362" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;that)</text>
<text text-anchor="start" x="362" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CChordIf &amp; operator</text>
<text text-anchor="start" x="362" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CChordIf &amp;c)</text>
<text text-anchor="start" x="362" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t reset_()</text>
<text text-anchor="start" x="362" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t init_()</text>
<text text-anchor="start" x="362" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00"># void initViterbi_()</text>
<text text-anchor="start" x="362" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00"># void computeMagSpectrum_()</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="a00577.xhtml" target="_top" xlink:title="class for audio normalization offering three options">
<polygon fill="white" stroke="black" points="0,-727 0,-960 150,-960 150,-727 0,-727"/>
<text text-anchor="middle" x="75" y="-948" font-family="Helvetica,sans-Serif" font-size="10.00">CNormalizeAudio</text>
<polyline fill="none" stroke="black" points="0,-941 150,-941 "/>
<text text-anchor="start" x="8" y="-929" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float m_fScaleFactor</text>
<polyline fill="none" stroke="black" points="0,-922 150,-922 "/>
<text text-anchor="start" x="8" y="-910" font-family="Helvetica,sans-Serif" font-size="10.00">+ CNormalizeAudio(CAudioFile</text>
<text text-anchor="start" x="8" y="-899" font-family="Helvetica,sans-Serif" font-size="10.00">If *pCAudioFile)</text>
<text text-anchor="start" x="8" y="-888" font-family="Helvetica,sans-Serif" font-size="10.00">+ CNormalizeAudio(const</text>
<text text-anchor="start" x="8" y="-877" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfAudioBuff, long</text>
<text text-anchor="start" x="8" y="-866" font-family="Helvetica,sans-Serif" font-size="10.00"> long iAudioLength)</text>
<text text-anchor="start" x="8" y="-855" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CNormalizeAudio()</text>
<text text-anchor="start" x="8" y="-844" font-family="Helvetica,sans-Serif" font-size="10.00">+ void normalizeBlock</text>
<text text-anchor="start" x="8" y="-833" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfAudioBlock,</text>
<text text-anchor="start" x="8" y="-822" font-family="Helvetica,sans-Serif" font-size="10.00"> long long iNumSamples)</text>
<text text-anchor="start" x="8" y="-811" font-family="Helvetica,sans-Serif" font-size="10.00">+ static void normalizeSignal</text>
<text text-anchor="start" x="8" y="-800" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfAudio, long long</text>
<text text-anchor="start" x="8" y="-789" font-family="Helvetica,sans-Serif" font-size="10.00"> iNumSamples)</text>
<text text-anchor="start" x="8" y="-778" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CNormalizeAudio()</text>
<text text-anchor="start" x="8" y="-767" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CNormalizeAudio(const</text>
<text text-anchor="start" x="8" y="-756" font-family="Helvetica,sans-Serif" font-size="10.00"> CNormalizeAudio &amp;that)</text>
<text text-anchor="start" x="8" y="-745" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CNormalizeAudio &amp; operator</text>
<text text-anchor="start" x="8" y="-734" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CNormalizeAudio &amp;c)</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="#404040" d="M105.53,-726.78C118.9,-685.34 136.7,-639.21 159,-600 209.64,-510.94 286.14,-422.93 345.13,-361.4"/>
<polygon fill="none" stroke="#404040" points="345.37,-361.16 346.65,-354.06 353.7,-352.52 352.41,-359.62 345.37,-361.16"/>
<text text-anchor="middle" x="209.5" y="-574" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCNormalize</text>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="a00529.xhtml" target="_top" xlink:title="forward declaration">
<polygon fill="white" stroke="black" points="168,-628 168,-1059 328,-1059 328,-628 168,-628"/>
<text text-anchor="middle" x="248" y="-1047" font-family="Helvetica,sans-Serif" font-size="10.00">CBlockAudioIf</text>
<polyline fill="none" stroke="black" points="168,-1040 328,-1040 "/>
<text text-anchor="start" x="176" y="-1028" font-family="Helvetica,sans-Serif" font-size="10.00"># long long m_iNumBlocks</text>
<text text-anchor="start" x="176" y="-1017" font-family="Helvetica,sans-Serif" font-size="10.00"># long long m_iCurrBlock</text>
<text text-anchor="start" x="176" y="-1006" font-family="Helvetica,sans-Serif" font-size="10.00"># long long m_iAudioLength</text>
<text text-anchor="start" x="176" y="-995" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iBlockLength</text>
<text text-anchor="start" x="176" y="-984" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iNumChannels</text>
<text text-anchor="start" x="176" y="-973" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iHopLength</text>
<text text-anchor="start" x="176" y="-962" font-family="Helvetica,sans-Serif" font-size="10.00"># float m_fSampleRate</text>
<polyline fill="none" stroke="black" points="168,-955 328,-955 "/>
<text text-anchor="start" x="176" y="-943" font-family="Helvetica,sans-Serif" font-size="10.00">+ long long getNumBlocks</text>
<text text-anchor="start" x="176" y="-932" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="176" y="-921" font-family="Helvetica,sans-Serif" font-size="10.00">+ long long getLengthInSamples</text>
<text text-anchor="start" x="176" y="-910" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="176" y="-899" font-family="Helvetica,sans-Serif" font-size="10.00">+ float getTimeStamp</text>
<text text-anchor="start" x="176" y="-888" font-family="Helvetica,sans-Serif" font-size="10.00">(long long iBlockIdx)</text>
<text text-anchor="start" x="176" y="-877" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual bool isEndOfData</text>
<text text-anchor="start" x="176" y="-866" font-family="Helvetica,sans-Serif" font-size="10.00">() const =0</text>
<text text-anchor="start" x="176" y="-855" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual int getNextBlock</text>
<text text-anchor="start" x="176" y="-844" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfBlock, float</text>
<text text-anchor="start" x="176" y="-833" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfTimeStampInS=0)=0</text>
<text text-anchor="start" x="176" y="-822" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="176" y="-811" font-family="Helvetica,sans-Serif" font-size="10.00">(CBlockAudioIf *&amp;pCInstance,</text>
<text text-anchor="start" x="176" y="-800" font-family="Helvetica,sans-Serif" font-size="10.00"> CAudioFileIf *pCAudioFile,</text>
<text text-anchor="start" x="176" y="-789" font-family="Helvetica,sans-Serif" font-size="10.00"> int iBlockLength, int iHopLength)</text>
<text text-anchor="start" x="176" y="-778" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="176" y="-767" font-family="Helvetica,sans-Serif" font-size="10.00">(CBlockAudioIf *&amp;pCInstance,</text>
<text text-anchor="start" x="176" y="-756" font-family="Helvetica,sans-Serif" font-size="10.00"> const float *pfAudioBuff,</text>
<text text-anchor="start" x="176" y="-745" font-family="Helvetica,sans-Serif" font-size="10.00"> long long iAudioLength, int</text>
<text text-anchor="start" x="176" y="-734" font-family="Helvetica,sans-Serif" font-size="10.00"> iBlockLength, int iHopLength,</text>
<text text-anchor="start" x="176" y="-723" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate)</text>
<text text-anchor="start" x="176" y="-712" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="176" y="-701" font-family="Helvetica,sans-Serif" font-size="10.00">(CBlockAudioIf *&amp;pCInstance)</text>
<text text-anchor="start" x="176" y="-690" font-family="Helvetica,sans-Serif" font-size="10.00"># CBlockAudioIf()</text>
<text text-anchor="start" x="176" y="-679" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CBlockAudioIf()</text>
<text text-anchor="start" x="176" y="-668" font-family="Helvetica,sans-Serif" font-size="10.00"># CBlockAudioIf(const</text>
<text text-anchor="start" x="176" y="-657" font-family="Helvetica,sans-Serif" font-size="10.00"> CBlockAudioIf &amp;that)</text>
<text text-anchor="start" x="176" y="-646" font-family="Helvetica,sans-Serif" font-size="10.00"># CBlockAudioIf &amp; operator</text>
<text text-anchor="start" x="176" y="-635" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CBlockAudioIf &amp;c)</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node1 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node1</title>
<path fill="none" stroke="#404040" d="M317.58,-627.69C328.2,-594.89 339.24,-560.81 350.08,-527.34"/>
<polygon fill="none" stroke="#404040" points="350.21,-526.94 348.25,-520 353.9,-515.53 355.86,-522.47 350.21,-526.94"/>
<text text-anchor="middle" x="376.5" y="-574" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCBlockAudio</text>
</g>
<!-- Node4 -->
<g id="node4" class="node">
<title>Node4</title>
<g id="a_node4"><a xlink:href="a00449.xhtml" target="_top" xlink:title="class for computation of a chord from a magnitude spectrum">
<polygon fill="white" stroke="black" points="346,-694 346,-993 516,-993 516,-694 346,-694"/>
<text text-anchor="middle" x="431" y="-981" font-family="Helvetica,sans-Serif" font-size="10.00">CChordFromBlockIf</text>
<polyline fill="none" stroke="black" points="346,-974 516,-974 "/>
<text text-anchor="start" x="354" y="-962" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iMagSpecLength</text>
<text text-anchor="start" x="354" y="-951" font-family="Helvetica,sans-Serif" font-size="10.00"># float m_fSampleRate</text>
<text text-anchor="start" x="354" y="-940" font-family="Helvetica,sans-Serif" font-size="10.00"># float * m_pfPitchChroma</text>
<text text-anchor="start" x="354" y="-929" font-family="Helvetica,sans-Serif" font-size="10.00"># float ** m_ppfTemplateMatrix</text>
<polyline fill="none" stroke="black" points="346,-922 516,-922 "/>
<text text-anchor="start" x="354" y="-910" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Error_t compChord</text>
<text text-anchor="start" x="354" y="-899" font-family="Helvetica,sans-Serif" font-size="10.00">Prob(float *pfChordProb,</text>
<text text-anchor="start" x="354" y="-888" font-family="Helvetica,sans-Serif" font-size="10.00"> const float *pfInput)</text>
<text text-anchor="start" x="354" y="-877" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="354" y="-866" font-family="Helvetica,sans-Serif" font-size="10.00">(CChordFromBlockIf *&amp;pCInstance,</text>
<text text-anchor="start" x="354" y="-855" font-family="Helvetica,sans-Serif" font-size="10.00"> int iMagSpecLength, float</text>
<text text-anchor="start" x="354" y="-844" font-family="Helvetica,sans-Serif" font-size="10.00"> fSampleRate=1.F)</text>
<text text-anchor="start" x="354" y="-833" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="354" y="-822" font-family="Helvetica,sans-Serif" font-size="10.00">(CChordFromBlockIf *&amp;pCInstance)</text>
<text text-anchor="start" x="354" y="-811" font-family="Helvetica,sans-Serif" font-size="10.00"># CChordFromBlockIf</text>
<text text-anchor="start" x="354" y="-800" font-family="Helvetica,sans-Serif" font-size="10.00">(int iMagSpecLength,</text>
<text text-anchor="start" x="354" y="-789" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate)</text>
<text text-anchor="start" x="354" y="-778" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CChordFromBlockIf()</text>
<text text-anchor="start" x="354" y="-767" font-family="Helvetica,sans-Serif" font-size="10.00"># CChordFromBlockIf</text>
<text text-anchor="start" x="354" y="-756" font-family="Helvetica,sans-Serif" font-size="10.00">(const CChordFromBlockIf</text>
<text text-anchor="start" x="354" y="-745" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;that)</text>
<text text-anchor="start" x="354" y="-734" font-family="Helvetica,sans-Serif" font-size="10.00"># CChordFromBlockIf &amp;</text>
<text text-anchor="start" x="354" y="-723" font-family="Helvetica,sans-Serif" font-size="10.00"> operator=(const CChordFrom</text>
<text text-anchor="start" x="354" y="-712" font-family="Helvetica,sans-Serif" font-size="10.00">BlockIf &amp;c)</text>
<text text-anchor="start" x="354" y="-701" font-family="Helvetica,sans-Serif" font-size="10.00"># void genTemplateMatrix_()</text>
</a>
</g>
</g>
<!-- Node4&#45;&gt;Node1 -->
<g id="edge3" class="edge">
<title>Node4&#45;&gt;Node1</title>
<path fill="none" stroke="#404040" d="M431,-693.68C431,-653.85 431,-609.41 431,-564.81"/>
<polygon fill="none" stroke="#404040" points="431,-564.54 427,-558.54 431,-552.54 435,-558.54 431,-564.54"/>
<text text-anchor="middle" x="460.5" y="-574" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCChord</text>
</g>
<!-- Node5 -->
<g id="node5" class="node">
<title>Node5</title>
<g id="a_node5"><a xlink:href="a00457.xhtml" target="_top" xlink:title="class for computation of a feature from a block of data (e.g., time or magnitude spectrum)">
<polygon fill="white" stroke="black" points="337,-1134.5 337,-1994.5 525,-1994.5 525,-1134.5 337,-1134.5"/>
<text text-anchor="middle" x="431" y="-1982.5" font-family="Helvetica,sans-Serif" font-size="10.00">CFeatureFromBlockIf</text>
<polyline fill="none" stroke="black" points="337,-1975.5 525,-1975.5 "/>
<text text-anchor="start" x="345" y="-1963.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static const float</text>
<text text-anchor="start" x="345" y="-1952.5" font-family="Helvetica,sans-Serif" font-size="10.00"> m_kfFloatThresh</text>
<text text-anchor="start" x="345" y="-1941.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CFeatureIf::Feature</text>
<text text-anchor="start" x="345" y="-1930.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t m_eFeatureIdx</text>
<text text-anchor="start" x="345" y="-1919.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iDataLength</text>
<text text-anchor="start" x="345" y="-1908.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float m_fSampleRate</text>
<text text-anchor="start" x="345" y="-1897.5" font-family="Helvetica,sans-Serif" font-size="10.00"># const std::map&lt; CFeature</text>
<text text-anchor="start" x="345" y="-1886.5" font-family="Helvetica,sans-Serif" font-size="10.00">If::Feature_t, std::function</text>
<text text-anchor="start" x="345" y="-1875.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; float(const float *, int,</text>
<text text-anchor="start" x="345" y="-1864.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float)&gt; &gt; m_DispatchMap</text>
<polyline fill="none" stroke="black" points="337,-1857.5 525,-1857.5 "/>
<text text-anchor="start" x="345" y="-1845.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual int getFeatureDimensions</text>
<text text-anchor="start" x="345" y="-1834.5" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="345" y="-1823.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CFeatureIf::Feature</text>
<text text-anchor="start" x="345" y="-1812.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t getFeatureIdx() const</text>
<text text-anchor="start" x="345" y="-1801.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Error_t compFeature</text>
<text text-anchor="start" x="345" y="-1790.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfFeature, const</text>
<text text-anchor="start" x="345" y="-1779.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfInput)</text>
<text text-anchor="start" x="345" y="-1768.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual bool hasAdditional</text>
<text text-anchor="start" x="345" y="-1757.5" font-family="Helvetica,sans-Serif" font-size="10.00">Param() const</text>
<text text-anchor="start" x="345" y="-1746.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Error_t setAdditional</text>
<text text-anchor="start" x="345" y="-1735.5" font-family="Helvetica,sans-Serif" font-size="10.00">Param(float fParamValue)</text>
<text text-anchor="start" x="345" y="-1724.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="345" y="-1713.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CFeatureFromBlockIf</text>
<text text-anchor="start" x="345" y="-1702.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *&amp;pCInstance, CFeatureIf</text>
<text text-anchor="start" x="345" y="-1691.5" font-family="Helvetica,sans-Serif" font-size="10.00">::Feature_t eFeatureIdx,</text>
<text text-anchor="start" x="345" y="-1680.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="345" y="-1669.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="345" y="-1658.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CFeatureFromBlockIf *&amp;pCInstance)</text>
<text text-anchor="start" x="345" y="-1647.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="345" y="-1636.5" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralCentroid(const</text>
<text text-anchor="start" x="345" y="-1625.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfMagSpec, int</text>
<text text-anchor="start" x="345" y="-1614.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="345" y="-1603.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="345" y="-1592.5" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralCrestFactor(const</text>
<text text-anchor="start" x="345" y="-1581.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfMagSpec, int iDataLength,</text>
<text text-anchor="start" x="345" y="-1570.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate=1.F)</text>
<text text-anchor="start" x="345" y="-1559.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="345" y="-1548.5" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralDecrease(const</text>
<text text-anchor="start" x="345" y="-1537.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfMagSpec, int</text>
<text text-anchor="start" x="345" y="-1526.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="345" y="-1515.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="345" y="-1504.5" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralFlatness(const</text>
<text text-anchor="start" x="345" y="-1493.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfMagSpec, int</text>
<text text-anchor="start" x="345" y="-1482.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="345" y="-1471.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="345" y="-1460.5" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralFlux(const float</text>
<text text-anchor="start" x="345" y="-1449.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfMagSpec, const float</text>
<text text-anchor="start" x="345" y="-1438.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfPrevSpec, int iDataLength,</text>
<text text-anchor="start" x="345" y="-1427.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate=1.F)</text>
<text text-anchor="start" x="345" y="-1416.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="345" y="-1405.5" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralKurtosis(const</text>
<text text-anchor="start" x="345" y="-1394.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfMagSpec, int</text>
<text text-anchor="start" x="345" y="-1383.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="345" y="-1372.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="345" y="-1361.5" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralRolloff(const</text>
<text text-anchor="start" x="345" y="-1350.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfMagSpec, int</text>
<text text-anchor="start" x="345" y="-1339.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iDataLength, float fSampleRate</text>
<text text-anchor="start" x="345" y="-1328.5" font-family="Helvetica,sans-Serif" font-size="10.00">=1.F, float fKappa=.85F)</text>
<text text-anchor="start" x="345" y="-1317.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="345" y="-1306.5" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralSkewness(const</text>
<text text-anchor="start" x="345" y="-1295.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfMagSpec, int</text>
<text text-anchor="start" x="345" y="-1284.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="345" y="-1273.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 8 more...</text>
<text text-anchor="start" x="345" y="-1262.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CFeatureFromBlockIf()</text>
<text text-anchor="start" x="345" y="-1251.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CFeatureFromBlockIf</text>
<text text-anchor="start" x="345" y="-1240.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CFeatureIf::Feature</text>
<text text-anchor="start" x="345" y="-1229.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t eFeatureIdx, int iDataLength,</text>
<text text-anchor="start" x="345" y="-1218.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate)</text>
<text text-anchor="start" x="345" y="-1207.5" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CFeatureFromBlockIf()</text>
<text text-anchor="start" x="345" y="-1196.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CFeatureFromBlockIf</text>
<text text-anchor="start" x="345" y="-1185.5" font-family="Helvetica,sans-Serif" font-size="10.00">(const CFeatureFromBlockIf</text>
<text text-anchor="start" x="345" y="-1174.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;that)</text>
<text text-anchor="start" x="345" y="-1163.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CFeatureFromBlockIf</text>
<text text-anchor="start" x="345" y="-1152.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp; operator=(const CFeature</text>
<text text-anchor="start" x="345" y="-1141.5" font-family="Helvetica,sans-Serif" font-size="10.00">FromBlockIf &amp;c)</text>
</a>
</g>
</g>
<!-- Node5&#45;&gt;Node4 -->
<g id="edge4" class="edge">
<title>Node5&#45;&gt;Node4</title>
<path fill="none" stroke="#404040" d="M431,-1134.35C431,-1088.77 431,-1044.73 431,-1005.34"/>
<polygon fill="none" stroke="#404040" points="431,-1005.26 427,-999.26 431,-993.26 435,-999.26 431,-1005.26"/>
<text text-anchor="middle" x="483.5" y="-1108" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCFeatureExtractor</text>
</g>
<!-- Node6 -->
<g id="node6" class="node">
<title>Node6</title>
<g id="a_node6"><a xlink:href="a00461.xhtml" target="_top" xlink:title="class for FFT computation with windowing">
<polygon fill="white" stroke="black" points="534,-600.5 534,-1086.5 722,-1086.5 722,-600.5 534,-600.5"/>
<text text-anchor="middle" x="628" y="-1074.5" font-family="Helvetica,sans-Serif" font-size="10.00">CFft</text>
<polyline fill="none" stroke="black" points="534,-1067.5 722,-1067.5 "/>
<text text-anchor="start" x="542" y="-1055.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_pfProcessBuff</text>
<text text-anchor="start" x="542" y="-1044.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_pfWindowBuff</text>
<text text-anchor="start" x="542" y="-1033.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iDataLength</text>
<text text-anchor="start" x="542" y="-1022.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iFftLength</text>
<text text-anchor="start" x="542" y="-1011.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Windowing_t m_ePrePostWindowOpt</text>
<text text-anchor="start" x="542" y="-1000.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; bool m_bIsInitialized</text>
<text text-anchor="start" x="542" y="-989.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; static const float m_Pi</text>
<text text-anchor="start" x="542" y="-978.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; static const float</text>
<text text-anchor="start" x="542" y="-967.5" font-family="Helvetica,sans-Serif" font-size="10.00"> m_Pi2</text>
<polyline fill="none" stroke="black" points="534,-960.5 722,-960.5 "/>
<text text-anchor="start" x="542" y="-948.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CFft()</text>
<text text-anchor="start" x="542" y="-937.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CFft()</text>
<text text-anchor="start" x="542" y="-926.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t init(int iBlockLength,</text>
<text text-anchor="start" x="542" y="-915.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iZeroPadFactor=1, WindowFunction</text>
<text text-anchor="start" x="542" y="-904.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t eWindow=kWindowHann, Windowing</text>
<text text-anchor="start" x="542" y="-893.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t eWindowing=kPreWindow)</text>
<text text-anchor="start" x="542" y="-882.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t reset()</text>
<text text-anchor="start" x="542" y="-871.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t overrideWindow</text>
<text text-anchor="start" x="542" y="-860.5" font-family="Helvetica,sans-Serif" font-size="10.00">(const float *pfNewWindow)</text>
<text text-anchor="start" x="542" y="-849.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getWindow(float</text>
<text text-anchor="start" x="542" y="-838.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfWindow) const</text>
<text text-anchor="start" x="542" y="-827.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compFft(complex</text>
<text text-anchor="start" x="542" y="-816.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t *pfSpectrum, const</text>
<text text-anchor="start" x="542" y="-805.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfInput)</text>
<text text-anchor="start" x="542" y="-794.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compInvFft</text>
<text text-anchor="start" x="542" y="-783.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfOutput, const</text>
<text text-anchor="start" x="542" y="-772.5" font-family="Helvetica,sans-Serif" font-size="10.00"> complex_t *pfSpectrum)</text>
<text text-anchor="start" x="542" y="-761.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getMagnitude</text>
<text text-anchor="start" x="542" y="-750.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfMag, const</text>
<text text-anchor="start" x="542" y="-739.5" font-family="Helvetica,sans-Serif" font-size="10.00"> complex_t *pfSpectrum)</text>
<text text-anchor="start" x="542" y="-728.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const</text>
<text text-anchor="start" x="542" y="-717.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getPhase(float</text>
<text text-anchor="start" x="542" y="-706.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfPhase, const complex</text>
<text text-anchor="start" x="542" y="-695.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t *pfSpectrum) const</text>
<text text-anchor="start" x="542" y="-684.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 7 more...</text>
<text text-anchor="start" x="542" y="-673.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CFft(const CFft &amp;that)</text>
<text text-anchor="start" x="542" y="-662.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CFft &amp; operator=(const</text>
<text text-anchor="start" x="542" y="-651.5" font-family="Helvetica,sans-Serif" font-size="10.00"> CFft &amp;c)</text>
<text text-anchor="start" x="542" y="-640.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Error_t allocMemory_()</text>
<text text-anchor="start" x="542" y="-629.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Error_t freeMemory_()</text>
<text text-anchor="start" x="542" y="-618.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Error_t computeWindow</text>
<text text-anchor="start" x="542" y="-607.5" font-family="Helvetica,sans-Serif" font-size="10.00">_(WindowFunction_t eWindow)</text>
</a>
</g>
</g>
<!-- Node6&#45;&gt;Node1 -->
<g id="edge5" class="edge">
<title>Node6&#45;&gt;Node1</title>
<path fill="none" stroke="#404040" d="M543.6,-600.43C533.13,-570.42 522.45,-539.79 512.04,-509.93"/>
<polygon fill="none" stroke="#404040" points="512.02,-509.85 506.26,-505.5 508.06,-498.52 513.82,-502.87 512.02,-509.85"/>
<text text-anchor="middle" x="559" y="-574" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCFft</text>
</g>
<!-- Node7 -->
<g id="node7" class="node">
<title>Node7</title>
<g id="a_node7"><a xlink:href="a00601.xhtml" target="_top" xlink:title="viterbi algorithm">
<polygon fill="white" stroke="black" points="740.5,-644.5 740.5,-1042.5 889.5,-1042.5 889.5,-644.5 740.5,-644.5"/>
<text text-anchor="middle" x="815" y="-1030.5" font-family="Helvetica,sans-Serif" font-size="10.00">CViterbi</text>
<polyline fill="none" stroke="black" points="740.5,-1023.5 889.5,-1023.5 "/>
<text text-anchor="start" x="748.5" y="-1011.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float ** m_ppfProb</text>
<text text-anchor="start" x="748.5" y="-1000.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float ** m_ppfTransProb</text>
<text text-anchor="start" x="748.5" y="-989.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_pfStart</text>
<text text-anchor="start" x="748.5" y="-978.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float m_fOverallProb</text>
<text text-anchor="start" x="748.5" y="-967.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; unsigned int ** m_ppiPathIdx</text>
<text text-anchor="start" x="748.5" y="-956.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iNumStates</text>
<text text-anchor="start" x="748.5" y="-945.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iNumObs</text>
<text text-anchor="start" x="748.5" y="-934.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iEndState</text>
<text text-anchor="start" x="748.5" y="-923.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; const float m_kLogMin</text>
<text text-anchor="start" x="748.5" y="-912.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; bool m_bIsInitialized</text>
<text text-anchor="start" x="748.5" y="-901.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; bool m_bWasProcessed</text>
<polyline fill="none" stroke="black" points="740.5,-894.5 889.5,-894.5 "/>
<text text-anchor="start" x="748.5" y="-882.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CViterbi(void)</text>
<text text-anchor="start" x="748.5" y="-871.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CViterbi(void)</text>
<text text-anchor="start" x="748.5" y="-860.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t init(float</text>
<text text-anchor="start" x="748.5" y="-849.5" font-family="Helvetica,sans-Serif" font-size="10.00"> **ppfPTransition, float</text>
<text text-anchor="start" x="748.5" y="-838.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfPStart, int iNumStates,</text>
<text text-anchor="start" x="748.5" y="-827.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iNumObservations)</text>
<text text-anchor="start" x="748.5" y="-816.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t reset()</text>
<text text-anchor="start" x="748.5" y="-805.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compViterbi</text>
<text text-anchor="start" x="748.5" y="-794.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float **ppfPEmission,</text>
<text text-anchor="start" x="748.5" y="-783.5" font-family="Helvetica,sans-Serif" font-size="10.00"> bool bUseLogLikelihood=true)</text>
<text text-anchor="start" x="748.5" y="-772.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ float getOverallProbability</text>
<text text-anchor="start" x="748.5" y="-761.5" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="748.5" y="-750.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getStateSequence</text>
<text text-anchor="start" x="748.5" y="-739.5" font-family="Helvetica,sans-Serif" font-size="10.00">(int *pistateSequence) const</text>
<text text-anchor="start" x="748.5" y="-728.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CViterbi(const CViterbi</text>
<text text-anchor="start" x="748.5" y="-717.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;that)</text>
<text text-anchor="start" x="748.5" y="-706.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CViterbi &amp; operator</text>
<text text-anchor="start" x="748.5" y="-695.5" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CViterbi &amp;c)</text>
<text text-anchor="start" x="748.5" y="-684.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; void compProbability</text>
<text text-anchor="start" x="748.5" y="-673.5" font-family="Helvetica,sans-Serif" font-size="10.00">_(float **ppfPEmission)</text>
<text text-anchor="start" x="748.5" y="-662.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; void compLogLikelihood</text>
<text text-anchor="start" x="748.5" y="-651.5" font-family="Helvetica,sans-Serif" font-size="10.00">_(float **ppfPEmission)</text>
</a>
</g>
</g>
<!-- Node7&#45;&gt;Node1 -->
<g id="edge6" class="edge">
<title>Node7&#45;&gt;Node1</title>
<path fill="none" stroke="#404040" d="M754.26,-644.44C747.18,-629.03 739.44,-614.03 731,-600 673.32,-504.08 583.53,-412.42 517.2,-351.51"/>
<polygon fill="none" stroke="#404040" points="516.87,-351.2 509.74,-350.12 508.01,-343.12 515.13,-344.21 516.87,-351.2"/>
<text text-anchor="middle" x="748.5" y="-574" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCViterbi</text>
</g>
</g>
</svg>
