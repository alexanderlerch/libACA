<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 6.0.1 (20220911.1526)
 -->
<!-- Title: CFeatureIf Pages: 1 -->
<!--zoomable 1468 -->
<svg id="main" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" onload="init(evt)">
<style type="text/css"><![CDATA[
.edge:hover path { stroke: red; }
.edge:hover polygon { stroke: red; fill: red; }
]]></style>
<script type="text/javascript"><![CDATA[
var edges = document.getElementsByTagName('g');
if (edges && edges.length) {
  for (var i=0;i<edges.length;i++) {
    if (edges[i].id.substr(0,4)=='edge') {
      edges[i].setAttribute('class','edge');
    }
  }
}
]]></script>
        <defs>
                <circle id="rim" cx="0" cy="0" r="7"/>
                <circle id="rim2" cx="0" cy="0" r="3.5"/>
                <g id="zoomPlus">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomplus.mouseover" end="zoomplus.mouseout"/>
                        </use>
                        <path d="M-4,0h8M0,-4v8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="zoomMin">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomminus.mouseover" end="zoomminus.mouseout"/>
                        </use>
                        <path d="M-4,0h8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="dirArrow">
                        <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
               <g id="resetDef">
                       <use xlink:href="#rim2" fill="#404040">
                               <set attributeName="fill" to="#808080" begin="reset.mouseover" end="reset.mouseout"/>
                       </use>
               </g>
        </defs>

<script type="text/javascript">
var viewWidth = 754;
var viewHeight = 1468;
var sectionId = 'dynsection-1';
</script>
<script xlink:href="svgpan.js"/>
<svg id="graph" class="graph">
<g id="viewport">
<title>CFeatureIf</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="class for computation of a instantaneous feature from either a file or a vector, supports both one&#45;di...">
<polygon fill="#999999" stroke="#666666" points="456.5,-558 242.5,-558 242.5,0 456.5,0 456.5,-558"/>
<text text-anchor="middle" x="349.5" y="-546" font-family="Helvetica,sans-Serif" font-size="10.00">{CFeatureIf</text>
<text text-anchor="start" x="250.5" y="-535" font-family="Helvetica,sans-Serif" font-size="10.00">|# int m_iBlockLength</text>
<text text-anchor="start" x="250.5" y="-524" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iHopLength</text>
<text text-anchor="start" x="250.5" y="-513" font-family="Helvetica,sans-Serif" font-size="10.00"># float m_fSampleRate</text>
<text text-anchor="start" x="250.5" y="-502" font-family="Helvetica,sans-Serif" font-size="10.00"># float * m_pfProcBuff2</text>
<text text-anchor="start" x="250.5" y="-491" font-family="Helvetica,sans-Serif" font-size="10.00"># float * m_pfProcBuff1</text>
<text text-anchor="start" x="250.5" y="-480" font-family="Helvetica,sans-Serif" font-size="10.00"># bool m_bIsInitialized</text>
<text text-anchor="start" x="250.5" y="-469" font-family="Helvetica,sans-Serif" font-size="10.00">|+ Error_t getFeatureDimensions</text>
<text text-anchor="start" x="250.5" y="-458" font-family="Helvetica,sans-Serif" font-size="10.00">(int &amp;iNumRows, int &amp;iNumCols) const</text>
<text text-anchor="start" x="250.5" y="-447" font-family="Helvetica,sans-Serif" font-size="10.00">+ float getTimeStamp</text>
<text text-anchor="start" x="250.5" y="-436" font-family="Helvetica,sans-Serif" font-size="10.00">(int iBlockIdx) const</text>
<text text-anchor="start" x="250.5" y="-425" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getTimeStamps</text>
<text text-anchor="start" x="250.5" y="-414" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfAxisTicks) const</text>
<text text-anchor="start" x="250.5" y="-403" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compFeature1Dim</text>
<text text-anchor="start" x="250.5" y="-392" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfFeature)</text>
<text text-anchor="start" x="250.5" y="-381" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compFeatureNDim</text>
<text text-anchor="start" x="250.5" y="-370" font-family="Helvetica,sans-Serif" font-size="10.00">(float **ppfFeature)</text>
<text text-anchor="start" x="250.5" y="-359" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="250.5" y="-348" font-family="Helvetica,sans-Serif" font-size="10.00">(CFeatureIf *&amp;pCInstance,</text>
<text text-anchor="start" x="250.5" y="-337" font-family="Helvetica,sans-Serif" font-size="10.00"> Feature_t eFeatureIdx,</text>
<text text-anchor="start" x="250.5" y="-326" font-family="Helvetica,sans-Serif" font-size="10.00"> const std::string &amp;strAudioFile</text>
<text text-anchor="start" x="250.5" y="-315" font-family="Helvetica,sans-Serif" font-size="10.00">Path, int iBlockLength=2048,</text>
<text text-anchor="start" x="250.5" y="-304" font-family="Helvetica,sans-Serif" font-size="10.00"> int iHopLength=1024)</text>
<text text-anchor="start" x="250.5" y="-293" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="250.5" y="-282" font-family="Helvetica,sans-Serif" font-size="10.00">(CFeatureIf *&amp;pCInstance,</text>
<text text-anchor="start" x="250.5" y="-271" font-family="Helvetica,sans-Serif" font-size="10.00"> Feature_t eFeatureIdx,</text>
<text text-anchor="start" x="250.5" y="-260" font-family="Helvetica,sans-Serif" font-size="10.00"> const float *pfAudio, long</text>
<text text-anchor="start" x="250.5" y="-249" font-family="Helvetica,sans-Serif" font-size="10.00"> long iNumSamples, float fSampleRate,</text>
<text text-anchor="start" x="250.5" y="-238" font-family="Helvetica,sans-Serif" font-size="10.00"> int iBlockLength=2048, int iHopLength=1024)</text>
<text text-anchor="start" x="250.5" y="-227" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="250.5" y="-216" font-family="Helvetica,sans-Serif" font-size="10.00">(CFeatureIf *&amp;pCInstance)</text>
<text text-anchor="start" x="250.5" y="-205" font-family="Helvetica,sans-Serif" font-size="10.00">+ static std::string</text>
<text text-anchor="start" x="250.5" y="-194" font-family="Helvetica,sans-Serif" font-size="10.00"> getFeatureString(Feature</text>
<text text-anchor="start" x="250.5" y="-183" font-family="Helvetica,sans-Serif" font-size="10.00">_t eFeatureIdx)</text>
<text text-anchor="start" x="250.5" y="-172" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Feature_t getFeature</text>
<text text-anchor="start" x="250.5" y="-161" font-family="Helvetica,sans-Serif" font-size="10.00">IdxFromString(std::string</text>
<text text-anchor="start" x="250.5" y="-150" font-family="Helvetica,sans-Serif" font-size="10.00"> sFeatureString)</text>
<text text-anchor="start" x="250.5" y="-139" font-family="Helvetica,sans-Serif" font-size="10.00"># &#160;CFeatureIf()</text>
<text text-anchor="start" x="250.5" y="-128" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CFeatureIf()</text>
<text text-anchor="start" x="250.5" y="-117" font-family="Helvetica,sans-Serif" font-size="10.00"># &#160;CFeatureIf(const CFeature</text>
<text text-anchor="start" x="250.5" y="-106" font-family="Helvetica,sans-Serif" font-size="10.00">If &amp;that)</text>
<text text-anchor="start" x="250.5" y="-95" font-family="Helvetica,sans-Serif" font-size="10.00"># CFeatureIf &amp; operator</text>
<text text-anchor="start" x="250.5" y="-84" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CFeatureIf &amp;c)</text>
<text text-anchor="start" x="250.5" y="-73" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t reset_()</text>
<text text-anchor="start" x="250.5" y="-62" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t init_(Feature</text>
<text text-anchor="start" x="250.5" y="-51" font-family="Helvetica,sans-Serif" font-size="10.00">_t eFeatureIdx)</text>
<text text-anchor="start" x="250.5" y="-40" font-family="Helvetica,sans-Serif" font-size="10.00"># bool isFeatureSpectral</text>
<text text-anchor="start" x="250.5" y="-29" font-family="Helvetica,sans-Serif" font-size="10.00">_(Feature_t eFeatureIdx)</text>
<text text-anchor="start" x="250.5" y="-18" font-family="Helvetica,sans-Serif" font-size="10.00"># void computeMagSpectrum_()</text>
<text text-anchor="middle" x="349.5" y="-7" font-family="Helvetica,sans-Serif" font-size="10.00">}</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="a00606.xhtml" target="_top" xlink:title="class for audio normalization offering three options">
<polygon fill="white" stroke="#666666" points="155,-1146.5 0,-1146.5 0,-918.5 155,-918.5 155,-1146.5"/>
<text text-anchor="middle" x="77.5" y="-1134.5" font-family="Helvetica,sans-Serif" font-size="10.00">{CNormalizeAudio</text>
<text text-anchor="start" x="8" y="-1123.5" font-family="Helvetica,sans-Serif" font-size="10.00">|&#45; float m_fScaleFactor</text>
<text text-anchor="start" x="8" y="-1112.5" font-family="Helvetica,sans-Serif" font-size="10.00">|+ &#160;CNormalizeAudio(CAudioFile</text>
<text text-anchor="start" x="8" y="-1101.5" font-family="Helvetica,sans-Serif" font-size="10.00">If *pCAudioFile)</text>
<text text-anchor="start" x="8" y="-1090.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ &#160;CNormalizeAudio(const</text>
<text text-anchor="start" x="8" y="-1079.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfAudioBuff, long</text>
<text text-anchor="start" x="8" y="-1068.5" font-family="Helvetica,sans-Serif" font-size="10.00"> long iAudioLength)</text>
<text text-anchor="start" x="8" y="-1057.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CNormalizeAudio()</text>
<text text-anchor="start" x="8" y="-1046.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void normalizeBlock</text>
<text text-anchor="start" x="8" y="-1035.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfAudioBlock,</text>
<text text-anchor="start" x="8" y="-1024.5" font-family="Helvetica,sans-Serif" font-size="10.00"> long long iNumSamples)</text>
<text text-anchor="start" x="8" y="-1013.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static void normalizeSignal</text>
<text text-anchor="start" x="8" y="-1002.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfAudio, long long</text>
<text text-anchor="start" x="8" y="-991.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iNumSamples)</text>
<text text-anchor="start" x="8" y="-980.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; &#160;CNormalizeAudio()</text>
<text text-anchor="start" x="8" y="-969.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; &#160;CNormalizeAudio(const</text>
<text text-anchor="start" x="8" y="-958.5" font-family="Helvetica,sans-Serif" font-size="10.00"> CNormalizeAudio &amp;that)</text>
<text text-anchor="start" x="8" y="-947.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CNormalizeAudio &amp; operator</text>
<text text-anchor="start" x="8" y="-936.5" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CNormalizeAudio &amp;c)</text>
<text text-anchor="middle" x="77.5" y="-925.5" font-family="Helvetica,sans-Serif" font-size="10.00">}</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="#404040" d="M90.65,-918.34C103.17,-830.78 125.97,-707.58 164.5,-605 183.5,-554.43 209.69,-502.4 236.39,-455.2"/>
<polygon fill="none" stroke="#404040" points="236.51,-455 236.01,-447.8 242.46,-444.58 242.96,-451.77 236.51,-455"/>
<text text-anchor="middle" x="215" y="-579" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCNormalize</text>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="a00542.xhtml" target="_top" xlink:title="forward declaration">
<polygon fill="white" stroke="#666666" points="333.5,-1245.5 173.5,-1245.5 173.5,-819.5 333.5,-819.5 333.5,-1245.5"/>
<text text-anchor="middle" x="253.5" y="-1233.5" font-family="Helvetica,sans-Serif" font-size="10.00">{CBlockAudioIf</text>
<text text-anchor="start" x="181.5" y="-1222.5" font-family="Helvetica,sans-Serif" font-size="10.00">|# long long m_iNumBlocks</text>
<text text-anchor="start" x="181.5" y="-1211.5" font-family="Helvetica,sans-Serif" font-size="10.00"># long long m_iCurrBlock</text>
<text text-anchor="start" x="181.5" y="-1200.5" font-family="Helvetica,sans-Serif" font-size="10.00"># long long m_iAudioLength</text>
<text text-anchor="start" x="181.5" y="-1189.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iBlockLength</text>
<text text-anchor="start" x="181.5" y="-1178.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iNumChannels</text>
<text text-anchor="start" x="181.5" y="-1167.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iHopLength</text>
<text text-anchor="start" x="181.5" y="-1156.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float m_fSampleRate</text>
<text text-anchor="start" x="181.5" y="-1145.5" font-family="Helvetica,sans-Serif" font-size="10.00">|+ long long getNumBlocks</text>
<text text-anchor="start" x="181.5" y="-1134.5" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="181.5" y="-1123.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ long long getLengthInSamples</text>
<text text-anchor="start" x="181.5" y="-1112.5" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="181.5" y="-1101.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ float getTimeStamp</text>
<text text-anchor="start" x="181.5" y="-1090.5" font-family="Helvetica,sans-Serif" font-size="10.00">(long long iBlockIdx)</text>
<text text-anchor="start" x="181.5" y="-1079.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual bool isEndOfData</text>
<text text-anchor="start" x="181.5" y="-1068.5" font-family="Helvetica,sans-Serif" font-size="10.00">() const =0</text>
<text text-anchor="start" x="181.5" y="-1057.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual int getNextBlock</text>
<text text-anchor="start" x="181.5" y="-1046.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfBlock, float</text>
<text text-anchor="start" x="181.5" y="-1035.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfTimeStampInS=0)=0</text>
<text text-anchor="start" x="181.5" y="-1024.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="181.5" y="-1013.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CBlockAudioIf *&amp;pCInstance,</text>
<text text-anchor="start" x="181.5" y="-1002.5" font-family="Helvetica,sans-Serif" font-size="10.00"> CAudioFileIf *pCAudioFile,</text>
<text text-anchor="start" x="181.5" y="-991.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iBlockLength, int iHopLength)</text>
<text text-anchor="start" x="181.5" y="-980.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="181.5" y="-969.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CBlockAudioIf *&amp;pCInstance,</text>
<text text-anchor="start" x="181.5" y="-958.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const float *pfAudioBuff,</text>
<text text-anchor="start" x="181.5" y="-947.5" font-family="Helvetica,sans-Serif" font-size="10.00"> long long iAudioLength, int</text>
<text text-anchor="start" x="181.5" y="-936.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iBlockLength, int iHopLength,</text>
<text text-anchor="start" x="181.5" y="-925.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate)</text>
<text text-anchor="start" x="181.5" y="-914.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="181.5" y="-903.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CBlockAudioIf *&amp;pCInstance)</text>
<text text-anchor="start" x="181.5" y="-892.5" font-family="Helvetica,sans-Serif" font-size="10.00"># &#160;CBlockAudioIf()</text>
<text text-anchor="start" x="181.5" y="-881.5" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CBlockAudioIf()</text>
<text text-anchor="start" x="181.5" y="-870.5" font-family="Helvetica,sans-Serif" font-size="10.00"># &#160;CBlockAudioIf(const</text>
<text text-anchor="start" x="181.5" y="-859.5" font-family="Helvetica,sans-Serif" font-size="10.00"> CBlockAudioIf &amp;that)</text>
<text text-anchor="start" x="181.5" y="-848.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CBlockAudioIf &amp; operator</text>
<text text-anchor="start" x="181.5" y="-837.5" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CBlockAudioIf &amp;c)</text>
<text text-anchor="middle" x="253.5" y="-826.5" font-family="Helvetica,sans-Serif" font-size="10.00">}</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node1 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node1</title>
<path fill="none" stroke="#404040" d="M280.59,-819.41C290.47,-742.07 301.82,-653.24 312.42,-570.27"/>
<polygon fill="none" stroke="#404040" points="312.42,-570.24 309.22,-563.78 313.94,-558.34 317.15,-564.8 312.42,-570.24"/>
<text text-anchor="middle" x="354" y="-579" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCBlockAudio</text>
</g>
<!-- Node4 -->
<g id="node4" class="node">
<title>Node4</title>
<g id="a_node4"><a xlink:href="a00470.xhtml" target="_top" xlink:title="class for computation of a feature from a block of data (e.g., time or magnitude spectrum)">
<polygon fill="white" stroke="#666666" points="539.5,-1460 351.5,-1460 351.5,-605 539.5,-605 539.5,-1460"/>
<text text-anchor="middle" x="445.5" y="-1448" font-family="Helvetica,sans-Serif" font-size="10.00">{CFeatureFromBlockIf</text>
<text text-anchor="start" x="359.5" y="-1437" font-family="Helvetica,sans-Serif" font-size="10.00">|+ static const float</text>
<text text-anchor="start" x="359.5" y="-1426" font-family="Helvetica,sans-Serif" font-size="10.00"> m_kfFloatThresh</text>
<text text-anchor="start" x="359.5" y="-1415" font-family="Helvetica,sans-Serif" font-size="10.00"># CFeatureIf::Feature</text>
<text text-anchor="start" x="359.5" y="-1404" font-family="Helvetica,sans-Serif" font-size="10.00">_t m_eFeatureIdx</text>
<text text-anchor="start" x="359.5" y="-1393" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iDataLength</text>
<text text-anchor="start" x="359.5" y="-1382" font-family="Helvetica,sans-Serif" font-size="10.00"># float m_fSampleRate</text>
<text text-anchor="start" x="359.5" y="-1371" font-family="Helvetica,sans-Serif" font-size="10.00"># const std::map&lt; CFeature</text>
<text text-anchor="start" x="359.5" y="-1360" font-family="Helvetica,sans-Serif" font-size="10.00">If::Feature_t, std::function</text>
<text text-anchor="start" x="359.5" y="-1349" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; float(const float *, int,</text>
<text text-anchor="start" x="359.5" y="-1338" font-family="Helvetica,sans-Serif" font-size="10.00"> float)&gt; &gt; m_DispatchMap</text>
<text text-anchor="start" x="359.5" y="-1327" font-family="Helvetica,sans-Serif" font-size="10.00">|+ virtual int getFeatureDimensions</text>
<text text-anchor="start" x="359.5" y="-1316" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="359.5" y="-1305" font-family="Helvetica,sans-Serif" font-size="10.00">+ CFeatureIf::Feature</text>
<text text-anchor="start" x="359.5" y="-1294" font-family="Helvetica,sans-Serif" font-size="10.00">_t getFeatureIdx() const</text>
<text text-anchor="start" x="359.5" y="-1283" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Error_t compFeature</text>
<text text-anchor="start" x="359.5" y="-1272" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfFeature, const</text>
<text text-anchor="start" x="359.5" y="-1261" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfIn)</text>
<text text-anchor="start" x="359.5" y="-1250" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual bool hasAdditional</text>
<text text-anchor="start" x="359.5" y="-1239" font-family="Helvetica,sans-Serif" font-size="10.00">Param() const</text>
<text text-anchor="start" x="359.5" y="-1228" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Error_t setAdditional</text>
<text text-anchor="start" x="359.5" y="-1217" font-family="Helvetica,sans-Serif" font-size="10.00">Param(float fParamValue)</text>
<text text-anchor="start" x="359.5" y="-1206" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="359.5" y="-1195" font-family="Helvetica,sans-Serif" font-size="10.00">(CFeatureFromBlockIf</text>
<text text-anchor="start" x="359.5" y="-1184" font-family="Helvetica,sans-Serif" font-size="10.00"> *&amp;pCInstance, CFeatureIf</text>
<text text-anchor="start" x="359.5" y="-1173" font-family="Helvetica,sans-Serif" font-size="10.00">::Feature_t eFeatureIdx,</text>
<text text-anchor="start" x="359.5" y="-1162" font-family="Helvetica,sans-Serif" font-size="10.00"> int iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="359.5" y="-1151" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="359.5" y="-1140" font-family="Helvetica,sans-Serif" font-size="10.00">(CFeatureFromBlockIf *&amp;pCInstance)</text>
<text text-anchor="start" x="359.5" y="-1129" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="359.5" y="-1118" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralCentroid(const</text>
<text text-anchor="start" x="359.5" y="-1107" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfMagSpec, int</text>
<text text-anchor="start" x="359.5" y="-1096" font-family="Helvetica,sans-Serif" font-size="10.00"> iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="359.5" y="-1085" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="359.5" y="-1074" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralCrestFactor(const</text>
<text text-anchor="start" x="359.5" y="-1063" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfMagSpec, int iDataLength,</text>
<text text-anchor="start" x="359.5" y="-1052" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate=1.F)</text>
<text text-anchor="start" x="359.5" y="-1041" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="359.5" y="-1030" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralDecrease(const</text>
<text text-anchor="start" x="359.5" y="-1019" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfMagSpec, int</text>
<text text-anchor="start" x="359.5" y="-1008" font-family="Helvetica,sans-Serif" font-size="10.00"> iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="359.5" y="-997" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="359.5" y="-986" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralFlatness(const</text>
<text text-anchor="start" x="359.5" y="-975" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfMagSpec, int</text>
<text text-anchor="start" x="359.5" y="-964" font-family="Helvetica,sans-Serif" font-size="10.00"> iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="359.5" y="-953" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="359.5" y="-942" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralFlux(const float</text>
<text text-anchor="start" x="359.5" y="-931" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfMagSpec, const float</text>
<text text-anchor="start" x="359.5" y="-920" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfPrevSpec, int iDataLength,</text>
<text text-anchor="start" x="359.5" y="-909" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate=1.F)</text>
<text text-anchor="start" x="359.5" y="-898" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="359.5" y="-887" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralKurtosis(const</text>
<text text-anchor="start" x="359.5" y="-876" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfMagSpec, int</text>
<text text-anchor="start" x="359.5" y="-865" font-family="Helvetica,sans-Serif" font-size="10.00"> iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="359.5" y="-854" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="359.5" y="-843" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralRolloff(const</text>
<text text-anchor="start" x="359.5" y="-832" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfMagSpec, int</text>
<text text-anchor="start" x="359.5" y="-821" font-family="Helvetica,sans-Serif" font-size="10.00"> iDataLength, float fSampleRate</text>
<text text-anchor="start" x="359.5" y="-810" font-family="Helvetica,sans-Serif" font-size="10.00">=1.F, float fKappa=.85F)</text>
<text text-anchor="start" x="359.5" y="-799" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="359.5" y="-788" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralSkewness(const</text>
<text text-anchor="start" x="359.5" y="-777" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfMagSpec, int</text>
<text text-anchor="start" x="359.5" y="-766" font-family="Helvetica,sans-Serif" font-size="10.00"> iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="359.5" y="-755" font-family="Helvetica,sans-Serif" font-size="10.00">and 8 more...</text>
<text text-anchor="start" x="359.5" y="-744" font-family="Helvetica,sans-Serif" font-size="10.00"># &#160;CFeatureFromBlockIf()</text>
<text text-anchor="start" x="359.5" y="-733" font-family="Helvetica,sans-Serif" font-size="10.00"># &#160;CFeatureFromBlockIf</text>
<text text-anchor="start" x="359.5" y="-722" font-family="Helvetica,sans-Serif" font-size="10.00">(CFeatureIf::Feature</text>
<text text-anchor="start" x="359.5" y="-711" font-family="Helvetica,sans-Serif" font-size="10.00">_t eFeatureIdx, int iDataLength,</text>
<text text-anchor="start" x="359.5" y="-700" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate)</text>
<text text-anchor="start" x="359.5" y="-689" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CFeatureFromBlockIf()</text>
<text text-anchor="start" x="359.5" y="-678" font-family="Helvetica,sans-Serif" font-size="10.00"># &#160;CFeatureFromBlockIf</text>
<text text-anchor="start" x="359.5" y="-667" font-family="Helvetica,sans-Serif" font-size="10.00">(const CFeatureFromBlockIf</text>
<text text-anchor="start" x="359.5" y="-656" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;that)</text>
<text text-anchor="start" x="359.5" y="-645" font-family="Helvetica,sans-Serif" font-size="10.00"># CFeatureFromBlockIf</text>
<text text-anchor="start" x="359.5" y="-634" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp; operator=(const CFeature</text>
<text text-anchor="start" x="359.5" y="-623" font-family="Helvetica,sans-Serif" font-size="10.00">FromBlockIf &amp;c)</text>
<text text-anchor="middle" x="445.5" y="-612" font-family="Helvetica,sans-Serif" font-size="10.00">}</text>
</a>
</g>
</g>
<!-- Node4&#45;&gt;Node1 -->
<g id="edge3" class="edge">
<title>Node4&#45;&gt;Node1</title>
<path fill="none" stroke="#404040" d="M403.3,-604.97C402.06,-595.22 400.79,-585.55 399.5,-576 399.24,-574.05 398.97,-572.1 398.7,-570.13"/>
<polygon fill="none" stroke="#404040" points="398.67,-569.89 393.88,-564.5 397.02,-558.01 401.8,-563.4 398.67,-569.89"/>
<text text-anchor="middle" x="433" y="-579" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCFeature</text>
</g>
<!-- Node5 -->
<g id="node5" class="node">
<title>Node5</title>
<g id="a_node5"><a xlink:href="a00474.xhtml" target="_top" xlink:title="class for FFT computation with windowing">
<polygon fill="white" stroke="#666666" points="745.5,-1273 557.5,-1273 557.5,-792 745.5,-792 745.5,-1273"/>
<text text-anchor="middle" x="651.5" y="-1261" font-family="Helvetica,sans-Serif" font-size="10.00">{CFft</text>
<text text-anchor="start" x="565.5" y="-1250" font-family="Helvetica,sans-Serif" font-size="10.00">|&#45; float * m_pfProcBuff</text>
<text text-anchor="start" x="565.5" y="-1239" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_pfWindowBuff</text>
<text text-anchor="start" x="565.5" y="-1228" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iDataLength</text>
<text text-anchor="start" x="565.5" y="-1217" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iFftLength</text>
<text text-anchor="start" x="565.5" y="-1206" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Windowing_t m_ePrePostWindowOpt</text>
<text text-anchor="start" x="565.5" y="-1195" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; bool m_bIsInitialized</text>
<text text-anchor="start" x="565.5" y="-1184" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; static const float m_Pi</text>
<text text-anchor="start" x="565.5" y="-1173" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; static const float</text>
<text text-anchor="start" x="565.5" y="-1162" font-family="Helvetica,sans-Serif" font-size="10.00"> m_Pi2</text>
<text text-anchor="start" x="565.5" y="-1151" font-family="Helvetica,sans-Serif" font-size="10.00">|+ &#160;CFft()</text>
<text text-anchor="start" x="565.5" y="-1140" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CFft()</text>
<text text-anchor="start" x="565.5" y="-1129" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t init(int iBlockLength,</text>
<text text-anchor="start" x="565.5" y="-1118" font-family="Helvetica,sans-Serif" font-size="10.00"> int iZeroPadFactor=1, WindowFunction</text>
<text text-anchor="start" x="565.5" y="-1107" font-family="Helvetica,sans-Serif" font-size="10.00">_t eWindow=kWindowHann, Windowing</text>
<text text-anchor="start" x="565.5" y="-1096" font-family="Helvetica,sans-Serif" font-size="10.00">_t eWindowing=kPreWindow)</text>
<text text-anchor="start" x="565.5" y="-1085" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t reset()</text>
<text text-anchor="start" x="565.5" y="-1074" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t overrideWindow</text>
<text text-anchor="start" x="565.5" y="-1063" font-family="Helvetica,sans-Serif" font-size="10.00">(const float *pfNewWindow)</text>
<text text-anchor="start" x="565.5" y="-1052" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getWindow(float</text>
<text text-anchor="start" x="565.5" y="-1041" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfWindow) const</text>
<text text-anchor="start" x="565.5" y="-1030" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compFft(complex</text>
<text text-anchor="start" x="565.5" y="-1019" font-family="Helvetica,sans-Serif" font-size="10.00">_t *pfSpectrum, const</text>
<text text-anchor="start" x="565.5" y="-1008" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfIn)</text>
<text text-anchor="start" x="565.5" y="-997" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compInvFft</text>
<text text-anchor="start" x="565.5" y="-986" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfOut, const</text>
<text text-anchor="start" x="565.5" y="-975" font-family="Helvetica,sans-Serif" font-size="10.00"> complex_t *pfSpectrum)</text>
<text text-anchor="start" x="565.5" y="-964" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getMagnitude</text>
<text text-anchor="start" x="565.5" y="-953" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfMag, const</text>
<text text-anchor="start" x="565.5" y="-942" font-family="Helvetica,sans-Serif" font-size="10.00"> complex_t *pfSpectrum)</text>
<text text-anchor="start" x="565.5" y="-931" font-family="Helvetica,sans-Serif" font-size="10.00"> const</text>
<text text-anchor="start" x="565.5" y="-920" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getPhase(float</text>
<text text-anchor="start" x="565.5" y="-909" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfPhase, const complex</text>
<text text-anchor="start" x="565.5" y="-898" font-family="Helvetica,sans-Serif" font-size="10.00">_t *pfSpectrum) const</text>
<text text-anchor="start" x="565.5" y="-887" font-family="Helvetica,sans-Serif" font-size="10.00">and 7 more...</text>
<text text-anchor="start" x="565.5" y="-876" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; &#160;CFft(const CFft &amp;that)</text>
<text text-anchor="start" x="565.5" y="-865" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CFft &amp; operator=(const</text>
<text text-anchor="start" x="565.5" y="-854" font-family="Helvetica,sans-Serif" font-size="10.00"> CFft &amp;c)</text>
<text text-anchor="start" x="565.5" y="-843" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Error_t allocMemory_()</text>
<text text-anchor="start" x="565.5" y="-832" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Error_t freeMemory_()</text>
<text text-anchor="start" x="565.5" y="-821" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Error_t computeWindow</text>
<text text-anchor="start" x="565.5" y="-810" font-family="Helvetica,sans-Serif" font-size="10.00">_(WindowFunction_t eWindow)</text>
<text text-anchor="middle" x="651.5" y="-799" font-family="Helvetica,sans-Serif" font-size="10.00">}</text>
</a>
</g>
</g>
<!-- Node5&#45;&gt;Node1 -->
<g id="edge4" class="edge">
<title>Node5&#45;&gt;Node1</title>
<path fill="none" stroke="#404040" d="M607.49,-791.83C592.36,-729.75 572.91,-663.84 548.5,-605 525.62,-549.83 494.12,-493.15 462.94,-442.89"/>
<polygon fill="none" stroke="#404040" points="462.86,-442.77 456.29,-439.8 456.5,-432.6 463.07,-435.56 462.86,-442.77"/>
<text text-anchor="middle" x="562.5" y="-579" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCFft</text>
</g>
</g>
</svg>
        <g id="navigator" transform="translate(0 0)" fill="#404254">
                <rect fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width=".5" x="0" y="0" width="60" height="60"/>
                <use id="zoomplus" xlink:href="#zoomPlus" x="17" y="9" onmousedown="handleZoom(evt,'in')"/>
                <use id="zoomminus" xlink:href="#zoomMin" x="42" y="9" onmousedown="handleZoom(evt,'out')"/>
                <use id="reset" xlink:href="#resetDef" x="30" y="36" onmousedown="handleReset()"/>
                <g id="arrowUp" xlink:href="#dirArrow" transform="translate(30 24)" onmousedown="handlePan(0,-1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowUp.mouseover" end="arrowUp.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowRight" xlink:href="#dirArrow" transform="rotate(90) translate(36 -43)" onmousedown="handlePan(1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowRight.mouseover" end="arrowRight.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowDown" xlink:href="#dirArrow" transform="rotate(180) translate(-30 -48)" onmousedown="handlePan(0,1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowDown.mouseover" end="arrowDown.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowLeft" xlink:href="#dirArrow" transform="rotate(270) translate(-36 17)" onmousedown="handlePan(-1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowLeft.mouseover" end="arrowLeft.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
        </g>
        <svg viewBox="0 0 15 15" width="100%" height="30px" preserveAspectRatio="xMaxYMin meet">
         <g id="arrow_out" transform="scale(0.3 0.3)">
          <a xlink:href="a00464_org.svg" target="_base">
           <rect id="button" ry="5" rx="5" y="6" x="6" height="38" width="38"
                fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width="1.0"/>
           <path id="arrow"
             d="M 11.500037,31.436501 C 11.940474,20.09759 22.043105,11.32322 32.158766,21.979434 L 37.068811,17.246167 C 37.068811,17.246167 37.088388,32 37.088388,32 L 22.160133,31.978069 C 22.160133,31.978069 26.997745,27.140456 26.997745,27.140456 C 18.528582,18.264221 13.291696,25.230495 11.500037,31.436501 z"
             style="fill:#404040;"/>
          </a>
         </g>
        </svg>
</svg>
