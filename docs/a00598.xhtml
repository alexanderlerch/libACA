<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.4"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ACA: CPca Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">ACA<span id="projectnumber">&#160;0.3.1</span>
   </div>
   <div id="projectbrief">Example Code for Audio Content Analysis</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.4 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search",'Search','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('a00598.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pri-methods">Private Member Functions</a> &#124;
<a href="#pri-static-methods">Static Private Member Functions</a> &#124;
<a href="#pri-attribs">Private Attributes</a> &#124;
<a href="a00595.xhtml">List of all members</a>  </div>
  <div class="headertitle"><div class="title">CPca Class Reference</div></div>
</div><!--header-->
<div class="contents">

<p>computation of principal component analysis  
 <a href="a00598.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="a00221_source.xhtml">ToolPca.h</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for CPca:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00596.svg" width="214" height="499"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a8e574710bbd7c8ad293ceb34fec88fa7"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00598.xhtml#a8e574710bbd7c8ad293ceb34fec88fa7">CPca</a> (void)</td></tr>
<tr class="separator:a8e574710bbd7c8ad293ceb34fec88fa7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4d220e0d4ed54cba58ff4fe386cc1dbb"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00598.xhtml#a4d220e0d4ed54cba58ff4fe386cc1dbb">~CPca</a> (void)</td></tr>
<tr class="separator:a4d220e0d4ed54cba58ff4fe386cc1dbb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a532a0c22fc414dcdda50ea365d8084a8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00598.xhtml#a532a0c22fc414dcdda50ea365d8084a8">init</a> (int iNumFeatures, int iNumObs)</td></tr>
<tr class="separator:a532a0c22fc414dcdda50ea365d8084a8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aabe6211d0934456e942340242309db42"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00598.xhtml#aabe6211d0934456e942340242309db42">reset</a> ()</td></tr>
<tr class="separator:aabe6211d0934456e942340242309db42"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3185f8f3c718973ce66de3595e38db09"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00598.xhtml#a3185f8f3c718973ce66de3595e38db09">compPca</a> (float **ppfRes, float *pfEigenValues, const float *const *const ppfIn)</td></tr>
<tr class="separator:a3185f8f3c718973ce66de3595e38db09"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-static-methods" name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:ab97f1018b23310674511f05dac173db8"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00598.xhtml#ab97f1018b23310674511f05dac173db8">compCov</a> (float **ppfCovOut, const float *const *const ppfIn, int iNumRows, int iNumCols)</td></tr>
<tr class="separator:ab97f1018b23310674511f05dac173db8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aebbcfdbe8cebc41121cf5114a37bed7e"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00598.xhtml#aebbcfdbe8cebc41121cf5114a37bed7e">calcSVD</a> (float **ppfU, float **ppfW, float **ppfV, const float *const *const ppfMat, int iNumRows, int iNumCols, int iMaxIterations=100)</td></tr>
<tr class="separator:aebbcfdbe8cebc41121cf5114a37bed7e"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pri-methods" name="pri-methods"></a>
Private Member Functions</h2></td></tr>
<tr class="memitem:a2f2d8fcb4171ab28af0924cd7a140f81"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00598.xhtml#a2f2d8fcb4171ab28af0924cd7a140f81">CPca</a> (const <a class="el" href="a00598.xhtml">CPca</a> &amp;that)</td></tr>
<tr class="memdesc:a2f2d8fcb4171ab28af0924cd7a140f81"><td class="mdescLeft">&#160;</td><td class="mdescRight">disallow copy construction <br  />
  <a href="a00598.xhtml#a2f2d8fcb4171ab28af0924cd7a140f81">More...</a><br /></td></tr>
<tr class="separator:a2f2d8fcb4171ab28af0924cd7a140f81"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a35b34b65ae81e8288b1082c11d9c75df"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00598.xhtml">CPca</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00598.xhtml#a35b34b65ae81e8288b1082c11d9c75df">operator=</a> (const <a class="el" href="a00598.xhtml">CPca</a> &amp;c)</td></tr>
<tr class="separator:a35b34b65ae81e8288b1082c11d9c75df"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pri-static-methods" name="pri-static-methods"></a>
Static Private Member Functions</h2></td></tr>
<tr class="memitem:a4fdc8487d3685debf82a6acd12f6d37e"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00598.xhtml#a4fdc8487d3685debf82a6acd12f6d37e">matPythag</a> (float dA, float dB)</td></tr>
<tr class="separator:a4fdc8487d3685debf82a6acd12f6d37e"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pri-attribs" name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr class="memitem:ab664849af5b6a4773ced51edbbb564a7"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00598.xhtml#ab664849af5b6a4773ced51edbbb564a7">m_iNumFeatures</a> = 0</td></tr>
<tr class="memdesc:ab664849af5b6a4773ced51edbbb564a7"><td class="mdescLeft">&#160;</td><td class="mdescRight">number of features  <a href="a00598.xhtml#ab664849af5b6a4773ced51edbbb564a7">More...</a><br /></td></tr>
<tr class="separator:ab664849af5b6a4773ced51edbbb564a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9a4e924546965b46fc57a9c165ed5dad"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00598.xhtml#a9a4e924546965b46fc57a9c165ed5dad">m_iNumObs</a> = 0</td></tr>
<tr class="memdesc:a9a4e924546965b46fc57a9c165ed5dad"><td class="mdescLeft">&#160;</td><td class="mdescRight">number of observations  <a href="a00598.xhtml#a9a4e924546965b46fc57a9c165ed5dad">More...</a><br /></td></tr>
<tr class="separator:a9a4e924546965b46fc57a9c165ed5dad"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2c8051f7271212cf100b0896750707db"><td class="memItemLeft" align="right" valign="top">float **&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00598.xhtml#a2c8051f7271212cf100b0896750707db">m_ppfProcTmp</a> = 0</td></tr>
<tr class="memdesc:a2c8051f7271212cf100b0896750707db"><td class="mdescLeft">&#160;</td><td class="mdescRight">temporary processing memoru  <a href="a00598.xhtml#a2c8051f7271212cf100b0896750707db">More...</a><br /></td></tr>
<tr class="separator:a2c8051f7271212cf100b0896750707db"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a76550e0afbca81c6b468b6359b0b4324"><td class="memItemLeft" align="right" valign="top">float **&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00598.xhtml#a76550e0afbca81c6b468b6359b0b4324">m_ppfU</a> = 0</td></tr>
<tr class="memdesc:a76550e0afbca81c6b468b6359b0b4324"><td class="mdescLeft">&#160;</td><td class="mdescRight">SVD result: U.  <a href="a00598.xhtml#a76550e0afbca81c6b468b6359b0b4324">More...</a><br /></td></tr>
<tr class="separator:a76550e0afbca81c6b468b6359b0b4324"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0b2588bce0db746b77170358260223e7"><td class="memItemLeft" align="right" valign="top">float **&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00598.xhtml#a0b2588bce0db746b77170358260223e7">m_ppfW</a> = 0</td></tr>
<tr class="memdesc:a0b2588bce0db746b77170358260223e7"><td class="mdescLeft">&#160;</td><td class="mdescRight">SVD result: W.  <a href="a00598.xhtml#a0b2588bce0db746b77170358260223e7">More...</a><br /></td></tr>
<tr class="separator:a0b2588bce0db746b77170358260223e7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a84d0cbaa874f4615ad1cb92da06bb73e"><td class="memItemLeft" align="right" valign="top">float **&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00598.xhtml#a84d0cbaa874f4615ad1cb92da06bb73e">m_ppfV</a> = 0</td></tr>
<tr class="memdesc:a84d0cbaa874f4615ad1cb92da06bb73e"><td class="mdescLeft">&#160;</td><td class="mdescRight">SVD result: V.  <a href="a00598.xhtml#a84d0cbaa874f4615ad1cb92da06bb73e">More...</a><br /></td></tr>
<tr class="separator:a84d0cbaa874f4615ad1cb92da06bb73e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab13a6216bc5130693cdbacefa14e9316"><td class="memItemLeft" align="right" valign="top">int *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00598.xhtml#ab13a6216bc5130693cdbacefa14e9316">piSortIndices</a> = 0</td></tr>
<tr class="memdesc:ab13a6216bc5130693cdbacefa14e9316"><td class="mdescLeft">&#160;</td><td class="mdescRight">array for sorted indices  <a href="a00598.xhtml#ab13a6216bc5130693cdbacefa14e9316">More...</a><br /></td></tr>
<tr class="separator:ab13a6216bc5130693cdbacefa14e9316"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p >computation of principal component analysis </p>

<p class="definition">Definition at line <a class="el" href="a00221_source.xhtml#l00010">10</a> of file <a class="el" href="a00221_source.xhtml">ToolPca.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a8e574710bbd7c8ad293ceb34fec88fa7" name="a8e574710bbd7c8ad293ceb34fec88fa7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8e574710bbd7c8ad293ceb34fec88fa7">&#9670;&nbsp;</a></span>CPca() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">CPca::CPca </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="a00221_source.xhtml#l00013">13</a> of file <a class="el" href="a00221_source.xhtml">ToolPca.h</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   13</span>{};</div>
</div><!-- fragment -->
</div>
</div>
<a id="a4d220e0d4ed54cba58ff4fe386cc1dbb" name="a4d220e0d4ed54cba58ff4fe386cc1dbb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4d220e0d4ed54cba58ff4fe386cc1dbb">&#9670;&nbsp;</a></span>~CPca()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">CPca::~CPca </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="a00068_source.xhtml#l00007">7</a> of file <a class="el" href="a00068_source.xhtml">ToolPca.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">    7</span>{ <a class="code hl_function" href="a00598.xhtml#aabe6211d0934456e942340242309db42">reset</a>(); }</div>
<div class="ttc" id="aa00598_xhtml_aabe6211d0934456e942340242309db42"><div class="ttname"><a href="a00598.xhtml#aabe6211d0934456e942340242309db42">CPca::reset</a></div><div class="ttdeci">Error_t reset()</div><div class="ttdef"><b>Definition:</b> <a href="a00068_source.xhtml#l00027">ToolPca.cpp:27</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00068_source.xhtml#l00027">reset()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00598_a4d220e0d4ed54cba58ff4fe386cc1dbb_cgraph.svg" width="535" height="63"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a2f2d8fcb4171ab28af0924cd7a140f81" name="a2f2d8fcb4171ab28af0924cd7a140f81"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2f2d8fcb4171ab28af0924cd7a140f81">&#9670;&nbsp;</a></span>CPca() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">CPca::CPca </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="a00598.xhtml">CPca</a> &amp;&#160;</td>
          <td class="paramname"><em>that</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>disallow copy construction <br  />
 </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="aebbcfdbe8cebc41121cf5114a37bed7e" name="aebbcfdbe8cebc41121cf5114a37bed7e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aebbcfdbe8cebc41121cf5114a37bed7e">&#9670;&nbsp;</a></span>calcSVD()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> CPca::calcSVD </td>
          <td>(</td>
          <td class="paramtype">float **&#160;</td>
          <td class="paramname"><em>ppfU</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float **&#160;</td>
          <td class="paramname"><em>ppfW</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float **&#160;</td>
          <td class="paramname"><em>ppfV</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float *const *const&#160;</td>
          <td class="paramname"><em>ppfMat</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>iNumRows</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>iNumCols</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>iMaxIterations</em> = <code>100</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p >computes singular value decomposition (ppfMat = ppfU * ppfW * ppfV) </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ppfU</td><td>(user-allocated, to be written, dimension iNumRows X iNumCols) </td></tr>
    <tr><td class="paramname">ppfW</td><td>(user-allocated, to be written, dimension iNumCols X iNumCols) </td></tr>
    <tr><td class="paramname">ppfV</td><td>(user-allocated, to be written, dimension iNumCols X iNumCols) </td></tr>
    <tr><td class="paramname">ppfMat</td><td>input matrix (dimension iNumRows X iNumCols) </td></tr>
    <tr><td class="paramname">iNumRows</td><td>number of rows in the input matrix </td></tr>
    <tr><td class="paramname">iNumCols</td><td>number of columns/in the input matrix </td></tr>
    <tr><td class="paramname">iMaxIterations</td><td>maximum number of iterations </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Error_t </dd></dl>

<p class="definition">Definition at line <a class="el" href="a00068_source.xhtml#l00100">100</a> of file <a class="el" href="a00068_source.xhtml">ToolPca.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  101</span>{</div>
<div class="line"><span class="lineno">  102</span> </div>
<div class="line"><span class="lineno">  103</span>    <span class="keywordtype">int</span>        i, k, l = 0;</div>
<div class="line"><span class="lineno">  104</span> </div>
<div class="line"><span class="lineno">  105</span>    <span class="keywordtype">float</span> *pdRV1;</div>
<div class="line"><span class="lineno">  106</span>    <span class="keywordtype">float</span>    dTmp,</div>
<div class="line"><span class="lineno">  107</span>        dF,</div>
<div class="line"><span class="lineno">  108</span>        dH,</div>
<div class="line"><span class="lineno">  109</span>        dS,</div>
<div class="line"><span class="lineno">  110</span>        dNorm = 0,</div>
<div class="line"><span class="lineno">  111</span>        dG = 0,</div>
<div class="line"><span class="lineno">  112</span>        dScale = 0;</div>
<div class="line"><span class="lineno">  113</span> </div>
<div class="line"><span class="lineno">  114</span>    <span class="keywordflow">if</span> (iNumRows &lt; iNumCols)</div>
<div class="line"><span class="lineno">  115</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fad7652bf47cff43c21f12cb7df4ca66ec">Error_t::kFunctionIllegalCallError</a>;</div>
<div class="line"><span class="lineno">  116</span> </div>
<div class="line"><span class="lineno">  117</span>    <a class="code hl_function" href="a00502.xhtml#abaadac98b1cad18b7b568852bc951696">CVector::alloc</a>(pdRV1, iNumCols);</div>
<div class="line"><span class="lineno">  118</span>    <span class="keywordflow">if</span> (!pdRV1)</div>
<div class="line"><span class="lineno">  119</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa6c7f4630a7389787bd65e45f0215fc14">Error_t::kMemError</a>;</div>
<div class="line"><span class="lineno">  120</span> </div>
<div class="line"><span class="lineno">  121</span>    <a class="code hl_function" href="a00486.xhtml#a7be1ae4f635c5aaec0c2693fc23b3646">CMatrix::setZero</a>(ppfU, iNumRows, iNumCols);</div>
<div class="line"><span class="lineno">  122</span>    <a class="code hl_function" href="a00486.xhtml#a7be1ae4f635c5aaec0c2693fc23b3646">CMatrix::setZero</a>(ppfW, iNumCols, iNumCols);</div>
<div class="line"><span class="lineno">  123</span>    <a class="code hl_function" href="a00486.xhtml#a7be1ae4f635c5aaec0c2693fc23b3646">CMatrix::setZero</a>(ppfV, iNumCols, iNumCols);</div>
<div class="line"><span class="lineno">  124</span> </div>
<div class="line"><span class="lineno">  125</span>    <a class="code hl_function" href="a00486.xhtml#aa633cf46c2b3938a1a7a8199c31051dd">CMatrix::copy</a>(ppfU, ppfMat, iNumRows, iNumCols);</div>
<div class="line"><span class="lineno">  126</span> </div>
<div class="line"><span class="lineno">  127</span>    <span class="keywordflow">for</span> (i = 0; i &lt; iNumCols; i++)</div>
<div class="line"><span class="lineno">  128</span>    {</div>
<div class="line"><span class="lineno">  129</span>        l = i + 1;</div>
<div class="line"><span class="lineno">  130</span>        pdRV1[i] = dScale * dG;</div>
<div class="line"><span class="lineno">  131</span> </div>
<div class="line"><span class="lineno">  132</span>        dG = 0;</div>
<div class="line"><span class="lineno">  133</span>        dS = 0;</div>
<div class="line"><span class="lineno">  134</span>        dScale = 0;</div>
<div class="line"><span class="lineno">  135</span> </div>
<div class="line"><span class="lineno">  136</span>        <span class="keywordflow">if</span> (i &lt; iNumRows)</div>
<div class="line"><span class="lineno">  137</span>        {</div>
<div class="line"><span class="lineno">  138</span>            <span class="keywordflow">for</span> (k = i; k &lt; iNumRows; k++)</div>
<div class="line"><span class="lineno">  139</span>                dScale += fabs(ppfU[k][i]);</div>
<div class="line"><span class="lineno">  140</span> </div>
<div class="line"><span class="lineno">  141</span>            <span class="keywordflow">if</span> (dScale)</div>
<div class="line"><span class="lineno">  142</span>            {</div>
<div class="line"><span class="lineno">  143</span>                <span class="keywordflow">for</span> (<span class="keyword">auto</span> j = i; j &lt; iNumRows; j++)</div>
<div class="line"><span class="lineno">  144</span>                    ppfU[j][i] *= 1 / dScale;</div>
<div class="line"><span class="lineno">  145</span> </div>
<div class="line"><span class="lineno">  146</span>                <span class="keywordflow">for</span> (k = i; k &lt; iNumRows; k++)</div>
<div class="line"><span class="lineno">  147</span>                {</div>
<div class="line"><span class="lineno">  148</span>                    dTmp = ppfU[k][i];</div>
<div class="line"><span class="lineno">  149</span>                    dS += dTmp * dTmp;</div>
<div class="line"><span class="lineno">  150</span>                }</div>
<div class="line"><span class="lineno">  151</span> </div>
<div class="line"><span class="lineno">  152</span>                dF = ppfU[i][i];</div>
<div class="line"><span class="lineno">  153</span>                dG = std::sqrt(dS);</div>
<div class="line"><span class="lineno">  154</span>                <span class="keywordflow">if</span> (dF &gt;= 0)</div>
<div class="line"><span class="lineno">  155</span>                    dG *= -1;</div>
<div class="line"><span class="lineno">  156</span>                dH = dF * dG - dS;</div>
<div class="line"><span class="lineno">  157</span>                ppfU[i][i] = dF - dG;</div>
<div class="line"><span class="lineno">  158</span> </div>
<div class="line"><span class="lineno">  159</span>                <span class="keywordflow">if</span> (i != iNumCols)</div>
<div class="line"><span class="lineno">  160</span>                {</div>
<div class="line"><span class="lineno">  161</span>                    <span class="keywordflow">for</span> (<span class="keyword">auto</span> j = l; j &lt; iNumCols; j++)</div>
<div class="line"><span class="lineno">  162</span>                    {</div>
<div class="line"><span class="lineno">  163</span>                        dS = 0;</div>
<div class="line"><span class="lineno">  164</span>                        <span class="keywordflow">for</span> (k = i; k &lt; iNumRows; k++)</div>
<div class="line"><span class="lineno">  165</span>                            dS += ppfU[k][i] * ppfU[k][j];</div>
<div class="line"><span class="lineno">  166</span>                        dF = dS / dH;</div>
<div class="line"><span class="lineno">  167</span>                        <span class="keywordflow">for</span> (k = i; k &lt; iNumRows; k++)</div>
<div class="line"><span class="lineno">  168</span>                            ppfU[k][j] += dF * ppfU[k][i];</div>
<div class="line"><span class="lineno">  169</span>                    }</div>
<div class="line"><span class="lineno">  170</span>                }</div>
<div class="line"><span class="lineno">  171</span>                <span class="keywordflow">for</span> (<span class="keyword">auto</span> j = i; j &lt; iNumRows; j++)</div>
<div class="line"><span class="lineno">  172</span>                    ppfU[j][i] *= dScale;</div>
<div class="line"><span class="lineno">  173</span>            }</div>
<div class="line"><span class="lineno">  174</span>        }</div>
<div class="line"><span class="lineno">  175</span> </div>
<div class="line"><span class="lineno">  176</span>        ppfW[i][i] = dScale * dG;</div>
<div class="line"><span class="lineno">  177</span> </div>
<div class="line"><span class="lineno">  178</span>        dG = 0;</div>
<div class="line"><span class="lineno">  179</span>        dS = 0;</div>
<div class="line"><span class="lineno">  180</span>        dScale = 0;</div>
<div class="line"><span class="lineno">  181</span> </div>
<div class="line"><span class="lineno">  182</span>        <span class="keywordflow">if</span> ((i &lt;= iNumRows) &amp;&amp; (i != iNumCols))</div>
<div class="line"><span class="lineno">  183</span>        {</div>
<div class="line"><span class="lineno">  184</span>            <span class="keywordflow">for</span> (k = l; k &lt; iNumCols; k++)</div>
<div class="line"><span class="lineno">  185</span>                dScale += fabs(ppfU[i][k]);</div>
<div class="line"><span class="lineno">  186</span> </div>
<div class="line"><span class="lineno">  187</span>            <span class="keywordflow">if</span> (dScale)</div>
<div class="line"><span class="lineno">  188</span>            {</div>
<div class="line"><span class="lineno">  189</span>                <span class="keywordflow">for</span> (<span class="keyword">auto</span> j = l; j &lt; iNumCols; j++)</div>
<div class="line"><span class="lineno">  190</span>                    ppfU[i][j] *= 1 / dScale;</div>
<div class="line"><span class="lineno">  191</span>                <span class="keywordflow">for</span> (k = l; k &lt; iNumCols; k++)</div>
<div class="line"><span class="lineno">  192</span>                {</div>
<div class="line"><span class="lineno">  193</span>                    dTmp = ppfU[i][k];</div>
<div class="line"><span class="lineno">  194</span>                    dS += dTmp * dTmp;</div>
<div class="line"><span class="lineno">  195</span>                }</div>
<div class="line"><span class="lineno">  196</span> </div>
<div class="line"><span class="lineno">  197</span>                dF = ppfU[i][l];</div>
<div class="line"><span class="lineno">  198</span>                dG = std::sqrt(dS);</div>
<div class="line"><span class="lineno">  199</span>                <span class="keywordflow">if</span> (dF &gt;= 0)</div>
<div class="line"><span class="lineno">  200</span>                    dG *= -1;</div>
<div class="line"><span class="lineno">  201</span>                dH = dF * dG - dS;</div>
<div class="line"><span class="lineno">  202</span>                ppfU[i][l] = dF - dG;</div>
<div class="line"><span class="lineno">  203</span> </div>
<div class="line"><span class="lineno">  204</span>                <span class="keywordflow">for</span> (k = l; k &lt; iNumCols; k++)</div>
<div class="line"><span class="lineno">  205</span>                    pdRV1[k] = ppfU[i][k] / dH;</div>
<div class="line"><span class="lineno">  206</span> </div>
<div class="line"><span class="lineno">  207</span>                <span class="keywordflow">if</span> (i != iNumRows)</div>
<div class="line"><span class="lineno">  208</span>                {</div>
<div class="line"><span class="lineno">  209</span>                    <span class="keywordflow">for</span> (<span class="keyword">auto</span> j = l; j &lt; iNumRows; j++)</div>
<div class="line"><span class="lineno">  210</span>                    {</div>
<div class="line"><span class="lineno">  211</span>                        dS = 0;</div>
<div class="line"><span class="lineno">  212</span>                        <span class="keywordflow">for</span> (k = l; k &lt; iNumCols; k++)</div>
<div class="line"><span class="lineno">  213</span>                            dS += ppfU[j][k] * ppfU[i][k];</div>
<div class="line"><span class="lineno">  214</span>                        <span class="keywordflow">for</span> (k = l; k &lt; iNumCols; k++)</div>
<div class="line"><span class="lineno">  215</span>                            ppfU[j][k] += dS * pdRV1[k];</div>
<div class="line"><span class="lineno">  216</span>                    }</div>
<div class="line"><span class="lineno">  217</span>                }</div>
<div class="line"><span class="lineno">  218</span>                <span class="keywordflow">for</span> (<span class="keyword">auto</span> j = l; j &lt; iNumCols; j++)</div>
<div class="line"><span class="lineno">  219</span>                    ppfU[i][j] *= dScale;</div>
<div class="line"><span class="lineno">  220</span>            }</div>
<div class="line"><span class="lineno">  221</span>        }</div>
<div class="line"><span class="lineno">  222</span>        dTmp = fabs(ppfW[i][i]) + fabs(pdRV1[i]);</div>
<div class="line"><span class="lineno">  223</span>        dNorm = std::max(dNorm, dTmp);</div>
<div class="line"><span class="lineno">  224</span>    }</div>
<div class="line"><span class="lineno">  225</span> </div>
<div class="line"><span class="lineno">  226</span>    <span class="keywordflow">for</span> (i = iNumCols - 1; i &gt;= 0; i--)</div>
<div class="line"><span class="lineno">  227</span>    {</div>
<div class="line"><span class="lineno">  228</span>        <span class="keywordflow">if</span> (i &lt; iNumCols)</div>
<div class="line"><span class="lineno">  229</span>        {</div>
<div class="line"><span class="lineno">  230</span>            <span class="keywordflow">if</span> (dG)</div>
<div class="line"><span class="lineno">  231</span>            {</div>
<div class="line"><span class="lineno">  232</span>                <span class="keywordflow">for</span> (<span class="keyword">auto</span> j = l; j &lt; iNumCols; j++)</div>
<div class="line"><span class="lineno">  233</span>                {</div>
<div class="line"><span class="lineno">  234</span>                    dTmp = ppfU[i][j] / ppfU[i][l];</div>
<div class="line"><span class="lineno">  235</span>                    ppfV[j][i] = dTmp / dG;</div>
<div class="line"><span class="lineno">  236</span>                }</div>
<div class="line"><span class="lineno">  237</span>                <span class="keywordflow">for</span> (<span class="keyword">auto</span> j = l; j &lt; iNumCols; j++)</div>
<div class="line"><span class="lineno">  238</span>                {</div>
<div class="line"><span class="lineno">  239</span>                    dS = 0;</div>
<div class="line"><span class="lineno">  240</span>                    <span class="keywordflow">for</span> (k = l; k &lt; iNumCols; k++)</div>
<div class="line"><span class="lineno">  241</span>                        dS += ppfU[i][k] * ppfV[k][j];</div>
<div class="line"><span class="lineno">  242</span>                    <span class="keywordflow">for</span> (k = l; k &lt; iNumCols; k++)</div>
<div class="line"><span class="lineno">  243</span>                        ppfV[k][j] += dS * ppfV[k][i];</div>
<div class="line"><span class="lineno">  244</span>                }</div>
<div class="line"><span class="lineno">  245</span>            }</div>
<div class="line"><span class="lineno">  246</span>            <span class="keywordflow">for</span> (<span class="keyword">auto</span> j = l; j &lt; iNumCols; j++)</div>
<div class="line"><span class="lineno">  247</span>            {</div>
<div class="line"><span class="lineno">  248</span>                ppfV[i][j] = 0;</div>
<div class="line"><span class="lineno">  249</span>                ppfV[j][i] = 0;</div>
<div class="line"><span class="lineno">  250</span>            }</div>
<div class="line"><span class="lineno">  251</span>        }</div>
<div class="line"><span class="lineno">  252</span>        ppfV[i][i] = 1;</div>
<div class="line"><span class="lineno">  253</span>        dG = pdRV1[i];</div>
<div class="line"><span class="lineno">  254</span>        l = i;</div>
<div class="line"><span class="lineno">  255</span>    }</div>
<div class="line"><span class="lineno">  256</span> </div>
<div class="line"><span class="lineno">  257</span>    <span class="keywordflow">for</span> (i = iNumCols - 1; i &gt;= 0; i--)</div>
<div class="line"><span class="lineno">  258</span>    {</div>
<div class="line"><span class="lineno">  259</span>        l = i + 1;</div>
<div class="line"><span class="lineno">  260</span>        dG = ppfW[i][i];</div>
<div class="line"><span class="lineno">  261</span> </div>
<div class="line"><span class="lineno">  262</span>        <span class="keywordflow">if</span> (i &lt; iNumCols)</div>
<div class="line"><span class="lineno">  263</span>        {   </div>
<div class="line"><span class="lineno">  264</span>            <span class="keywordflow">for</span> (<span class="keyword">auto</span> j = l; j &lt; iNumCols; j++)</div>
<div class="line"><span class="lineno">  265</span>                ppfU[i][j] = 0;</div>
<div class="line"><span class="lineno">  266</span>        }</div>
<div class="line"><span class="lineno">  267</span> </div>
<div class="line"><span class="lineno">  268</span>        <span class="keywordflow">if</span> (dG)</div>
<div class="line"><span class="lineno">  269</span>        {</div>
<div class="line"><span class="lineno">  270</span>            dG = 1.F / dG;</div>
<div class="line"><span class="lineno">  271</span>            <span class="keywordflow">if</span> (i != iNumCols)</div>
<div class="line"><span class="lineno">  272</span>            {</div>
<div class="line"><span class="lineno">  273</span>                <span class="keywordflow">for</span> (<span class="keyword">auto</span> j = l; j &lt; iNumCols; j++)</div>
<div class="line"><span class="lineno">  274</span>                {</div>
<div class="line"><span class="lineno">  275</span>                    dS = 0;</div>
<div class="line"><span class="lineno">  276</span>                    <span class="keywordflow">for</span> (k = l; k &lt; iNumRows; k++)</div>
<div class="line"><span class="lineno">  277</span>                        dS += ppfU[k][i] * ppfU[k][j];</div>
<div class="line"><span class="lineno">  278</span>                    dF = (dS / ppfU[i][i]) * dG;</div>
<div class="line"><span class="lineno">  279</span>                    <span class="keywordflow">for</span> (k = i; k &lt; iNumRows; k++)</div>
<div class="line"><span class="lineno">  280</span>                        ppfU[k][j] += dF * ppfU[k][i];</div>
<div class="line"><span class="lineno">  281</span>                }</div>
<div class="line"><span class="lineno">  282</span>            }</div>
<div class="line"><span class="lineno">  283</span>        }</div>
<div class="line"><span class="lineno">  284</span> </div>
<div class="line"><span class="lineno">  285</span>        <span class="keywordflow">for</span> (<span class="keyword">auto</span> j = i; j &lt; iNumRows; j++)</div>
<div class="line"><span class="lineno">  286</span>            ppfU[j][i] *= dG;</div>
<div class="line"><span class="lineno">  287</span>        ppfU[i][i] += 1;</div>
<div class="line"><span class="lineno">  288</span>    }</div>
<div class="line"><span class="lineno">  289</span> </div>
<div class="line"><span class="lineno">  290</span>    <span class="keywordflow">for</span> (k = iNumCols - 1; k &gt;= 0; k--)</div>
<div class="line"><span class="lineno">  291</span>    {</div>
<div class="line"><span class="lineno">  292</span>        <span class="keywordflow">for</span> (<span class="keywordtype">int</span> iIter = 0; iIter &lt; iMaxIterations; iIter++)</div>
<div class="line"><span class="lineno">  293</span>        {</div>
<div class="line"><span class="lineno">  294</span>            <span class="keywordtype">float</span>    dC, dX, dY, dZ;</div>
<div class="line"><span class="lineno">  295</span>            <span class="keywordtype">int</span>        iNM = 0,</div>
<div class="line"><span class="lineno">  296</span>                iFlag = 1;</div>
<div class="line"><span class="lineno">  297</span>            <span class="keywordflow">for</span> (l = k; l &gt;= 0; l--)</div>
<div class="line"><span class="lineno">  298</span>            {</div>
<div class="line"><span class="lineno">  299</span>                iNM = l - 1;</div>
<div class="line"><span class="lineno">  300</span>                <span class="keywordflow">if</span> (fabs(pdRV1[l]) + dNorm == dNorm)</div>
<div class="line"><span class="lineno">  301</span>                {</div>
<div class="line"><span class="lineno">  302</span>                    iFlag = 0;</div>
<div class="line"><span class="lineno">  303</span>                    <span class="keywordflow">break</span>;</div>
<div class="line"><span class="lineno">  304</span>                }</div>
<div class="line"><span class="lineno">  305</span>                <span class="keywordflow">if</span> (fabs(ppfW[iNM][iNM]) + dNorm == dNorm)</div>
<div class="line"><span class="lineno">  306</span>                    <span class="keywordflow">break</span>;</div>
<div class="line"><span class="lineno">  307</span>            }</div>
<div class="line"><span class="lineno">  308</span>            <span class="keywordflow">if</span> (iFlag)</div>
<div class="line"><span class="lineno">  309</span>            {</div>
<div class="line"><span class="lineno">  310</span>                dC = 0.0;</div>
<div class="line"><span class="lineno">  311</span>                dS = 1.0;</div>
<div class="line"><span class="lineno">  312</span>                <span class="keywordflow">for</span> (i = l; i &lt;= k; i++)</div>
<div class="line"><span class="lineno">  313</span>                {</div>
<div class="line"><span class="lineno">  314</span>                    dF = dS * pdRV1[i];</div>
<div class="line"><span class="lineno">  315</span>                    <span class="keywordflow">if</span> (fabs(dF) + dNorm != dNorm)</div>
<div class="line"><span class="lineno">  316</span>                    {</div>
<div class="line"><span class="lineno">  317</span>                        dG = ppfW[i][i];</div>
<div class="line"><span class="lineno">  318</span>                        dH = <a class="code hl_function" href="a00598.xhtml#a4fdc8487d3685debf82a6acd12f6d37e">matPythag</a>(dF, dG);</div>
<div class="line"><span class="lineno">  319</span>                        ppfW[i][i] = dH;</div>
<div class="line"><span class="lineno">  320</span>                        dH = 1.F / dH;</div>
<div class="line"><span class="lineno">  321</span>                        dC = dG * dH;</div>
<div class="line"><span class="lineno">  322</span>                        dS = (-dF * dH);</div>
<div class="line"><span class="lineno">  323</span> </div>
<div class="line"><span class="lineno">  324</span>                        <span class="keywordflow">for</span> (<span class="keyword">auto</span> j = 0; j &lt; iNumRows; j++)</div>
<div class="line"><span class="lineno">  325</span>                        {</div>
<div class="line"><span class="lineno">  326</span>                            dY = ppfU[j][iNM];</div>
<div class="line"><span class="lineno">  327</span>                            dZ = ppfU[j][i];</div>
<div class="line"><span class="lineno">  328</span>                            ppfU[j][iNM] = dY * dC + dZ * dS;</div>
<div class="line"><span class="lineno">  329</span>                            ppfU[j][i] = dZ * dC - dY * dS;</div>
<div class="line"><span class="lineno">  330</span>                        }</div>
<div class="line"><span class="lineno">  331</span>                    }</div>
<div class="line"><span class="lineno">  332</span>                }</div>
<div class="line"><span class="lineno">  333</span>            }</div>
<div class="line"><span class="lineno">  334</span> </div>
<div class="line"><span class="lineno">  335</span>            dZ = ppfW[k][k];</div>
<div class="line"><span class="lineno">  336</span> </div>
<div class="line"><span class="lineno">  337</span>            <span class="keywordflow">if</span> (l == k)</div>
<div class="line"><span class="lineno">  338</span>            {</div>
<div class="line"><span class="lineno">  339</span>                <span class="keywordflow">if</span> (dZ &lt; 0)</div>
<div class="line"><span class="lineno">  340</span>                {</div>
<div class="line"><span class="lineno">  341</span>                    ppfW[k][k] = -dZ;</div>
<div class="line"><span class="lineno">  342</span>                    <span class="keywordflow">for</span> (<span class="keyword">auto</span> j = 0; j &lt; iNumCols; j++)</div>
<div class="line"><span class="lineno">  343</span>                        ppfV[j][k] *= -1;</div>
<div class="line"><span class="lineno">  344</span>                }</div>
<div class="line"><span class="lineno">  345</span>                <span class="keywordflow">break</span>;</div>
<div class="line"><span class="lineno">  346</span>            }</div>
<div class="line"><span class="lineno">  347</span> </div>
<div class="line"><span class="lineno">  348</span>            <span class="keywordflow">if</span> (iIter &gt;= iMaxIterations)</div>
<div class="line"><span class="lineno">  349</span>                <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa4366541ea8a34268abc8b24f19fcefdd">Error_t::kUnknownError</a>;</div>
<div class="line"><span class="lineno">  350</span> </div>
<div class="line"><span class="lineno">  351</span>            dX = ppfW[l][l];</div>
<div class="line"><span class="lineno">  352</span>            iNM = k - 1;</div>
<div class="line"><span class="lineno">  353</span>            dY = ppfW[iNM][iNM];</div>
<div class="line"><span class="lineno">  354</span>            dG = pdRV1[iNM];</div>
<div class="line"><span class="lineno">  355</span>            dH = pdRV1[k];</div>
<div class="line"><span class="lineno">  356</span>            dF = ((dY - dZ) * (dY + dZ) + (dG - dH) * (dG + dH)) / (2.F * dH * dY);</div>
<div class="line"><span class="lineno">  357</span>            dG = <a class="code hl_function" href="a00598.xhtml#a4fdc8487d3685debf82a6acd12f6d37e">matPythag</a>(dF, 1.);</div>
<div class="line"><span class="lineno">  358</span>            dF = ((dX - dZ) * (dX + dZ) + dH * ((dY / (dF + (dF &gt;= 0 ? fabs(dG) : -fabs(dG)))) - dH)) / dX;</div>
<div class="line"><span class="lineno">  359</span>            dC = 1;</div>
<div class="line"><span class="lineno">  360</span>            dS = 1;</div>
<div class="line"><span class="lineno">  361</span> </div>
<div class="line"><span class="lineno">  362</span>            <span class="keywordflow">for</span> (<span class="keyword">auto</span> j = l; j &lt;= iNM; j++)</div>
<div class="line"><span class="lineno">  363</span>            {</div>
<div class="line"><span class="lineno">  364</span>                <span class="keywordtype">int</span> jj;</div>
<div class="line"><span class="lineno">  365</span> </div>
<div class="line"><span class="lineno">  366</span>                i = j + 1;</div>
<div class="line"><span class="lineno">  367</span>                dG = pdRV1[i];</div>
<div class="line"><span class="lineno">  368</span>                dY = ppfW[i][i];</div>
<div class="line"><span class="lineno">  369</span>                dH = dS * dG;</div>
<div class="line"><span class="lineno">  370</span>                dG = dC * dG;</div>
<div class="line"><span class="lineno">  371</span>                dZ = <a class="code hl_function" href="a00598.xhtml#a4fdc8487d3685debf82a6acd12f6d37e">matPythag</a>(dF, dH);</div>
<div class="line"><span class="lineno">  372</span>                pdRV1[j] = dZ;</div>
<div class="line"><span class="lineno">  373</span>                dC = dF / dZ;</div>
<div class="line"><span class="lineno">  374</span>                dS = dH / dZ;</div>
<div class="line"><span class="lineno">  375</span>                dF = (dX * dC) + (dG * dS);</div>
<div class="line"><span class="lineno">  376</span>                dG = (dG * dC) - (dX * dS);</div>
<div class="line"><span class="lineno">  377</span>                dH = dY * dS;</div>
<div class="line"><span class="lineno">  378</span>                dY = dY * dC;</div>
<div class="line"><span class="lineno">  379</span> </div>
<div class="line"><span class="lineno">  380</span>                <span class="keywordflow">for</span> (jj = 0; jj &lt; iNumCols; jj++)</div>
<div class="line"><span class="lineno">  381</span>                {</div>
<div class="line"><span class="lineno">  382</span>                    dX = ppfV[jj][j];</div>
<div class="line"><span class="lineno">  383</span>                    dZ = ppfV[jj][i];</div>
<div class="line"><span class="lineno">  384</span> </div>
<div class="line"><span class="lineno">  385</span>                    ppfV[jj][j] = dX * dC + dZ * dS;</div>
<div class="line"><span class="lineno">  386</span>                    ppfV[jj][i] = dZ * dC - dX * dS;</div>
<div class="line"><span class="lineno">  387</span>                }</div>
<div class="line"><span class="lineno">  388</span> </div>
<div class="line"><span class="lineno">  389</span>                dZ = <a class="code hl_function" href="a00598.xhtml#a4fdc8487d3685debf82a6acd12f6d37e">matPythag</a>(dF, dH);</div>
<div class="line"><span class="lineno">  390</span>                ppfW[j][j] = dZ;</div>
<div class="line"><span class="lineno">  391</span> </div>
<div class="line"><span class="lineno">  392</span>                <span class="keywordflow">if</span> (dZ)</div>
<div class="line"><span class="lineno">  393</span>                {</div>
<div class="line"><span class="lineno">  394</span>                    dZ = 1.F / dZ;</div>
<div class="line"><span class="lineno">  395</span>                    dC = dF * dZ;</div>
<div class="line"><span class="lineno">  396</span>                    dS = dH * dZ;</div>
<div class="line"><span class="lineno">  397</span>                }</div>
<div class="line"><span class="lineno">  398</span>                dF = (dC * dG) + (dS * dY);</div>
<div class="line"><span class="lineno">  399</span>                dX = (dC * dY) - (dS * dG);</div>
<div class="line"><span class="lineno">  400</span> </div>
<div class="line"><span class="lineno">  401</span>                <span class="keywordflow">for</span> (jj = 0; jj &lt; iNumRows; jj++)</div>
<div class="line"><span class="lineno">  402</span>                {</div>
<div class="line"><span class="lineno">  403</span>                    dY = ppfU[jj][j];</div>
<div class="line"><span class="lineno">  404</span>                    dZ = ppfU[jj][i];</div>
<div class="line"><span class="lineno">  405</span>                    ppfU[jj][j] = dY * dC + dZ * dS;</div>
<div class="line"><span class="lineno">  406</span>                    ppfU[jj][i] = dZ * dC - dY * dS;</div>
<div class="line"><span class="lineno">  407</span>                }</div>
<div class="line"><span class="lineno">  408</span>            }</div>
<div class="line"><span class="lineno">  409</span>            pdRV1[l] = 0;</div>
<div class="line"><span class="lineno">  410</span>            pdRV1[k] = dF;</div>
<div class="line"><span class="lineno">  411</span>            ppfW[k][k] = dX;</div>
<div class="line"><span class="lineno">  412</span>        }</div>
<div class="line"><span class="lineno">  413</span>    }</div>
<div class="line"><span class="lineno">  414</span> </div>
<div class="line"><span class="lineno">  415</span>    <a class="code hl_function" href="a00502.xhtml#aa86bdb0c663d4d52f2765793756f8737">CVector::free</a>(pdRV1);</div>
<div class="line"><span class="lineno">  416</span> </div>
<div class="line"><span class="lineno">  417</span>    <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><span class="lineno">  418</span>}</div>
<div class="ttc" id="aa00224_xhtml_a4e8c0d09726859e3d3369c0da5a1aa7fa4366541ea8a34268abc8b24f19fcefdd"><div class="ttname"><a href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa4366541ea8a34268abc8b24f19fcefdd">Error_t::kUnknownError</a></div><div class="ttdeci">@ kUnknownError</div></div>
<div class="ttc" id="aa00224_xhtml_a4e8c0d09726859e3d3369c0da5a1aa7fa6c7f4630a7389787bd65e45f0215fc14"><div class="ttname"><a href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa6c7f4630a7389787bd65e45f0215fc14">Error_t::kMemError</a></div><div class="ttdeci">@ kMemError</div></div>
<div class="ttc" id="aa00224_xhtml_a4e8c0d09726859e3d3369c0da5a1aa7fad7652bf47cff43c21f12cb7df4ca66ec"><div class="ttname"><a href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fad7652bf47cff43c21f12cb7df4ca66ec">Error_t::kFunctionIllegalCallError</a></div><div class="ttdeci">@ kFunctionIllegalCallError</div></div>
<div class="ttc" id="aa00224_xhtml_a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b"><div class="ttname"><a href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a></div><div class="ttdeci">@ kNoError</div></div>
<div class="ttc" id="aa00486_xhtml_a7be1ae4f635c5aaec0c2693fc23b3646"><div class="ttname"><a href="a00486.xhtml#a7be1ae4f635c5aaec0c2693fc23b3646">CMatrix::setZero</a></div><div class="ttdeci">static void setZero(T **pptMat, int iNumRows, int iNumCols)</div><div class="ttdef"><b>Definition:</b> <a href="a00143_source.xhtml#l00168">Matrix.h:168</a></div></div>
<div class="ttc" id="aa00486_xhtml_aa633cf46c2b3938a1a7a8199c31051dd"><div class="ttname"><a href="a00486.xhtml#aa633cf46c2b3938a1a7a8199c31051dd">CMatrix::copy</a></div><div class="ttdeci">static void copy(T **pptDestMat, const T *const *const pptSrcMat, int iNumRows, int iNumCols)</div><div class="ttdef"><b>Definition:</b> <a href="a00143_source.xhtml#l00042">Matrix.h:42</a></div></div>
<div class="ttc" id="aa00502_xhtml_aa86bdb0c663d4d52f2765793756f8737"><div class="ttname"><a href="a00502.xhtml#aa86bdb0c663d4d52f2765793756f8737">CVector::free</a></div><div class="ttdeci">static void free(T *&amp;ptVec)</div><div class="ttdef"><b>Definition:</b> <a href="a00155_source.xhtml#l00057">Vector.h:57</a></div></div>
<div class="ttc" id="aa00502_xhtml_abaadac98b1cad18b7b568852bc951696"><div class="ttname"><a href="a00502.xhtml#abaadac98b1cad18b7b568852bc951696">CVector::alloc</a></div><div class="ttdeci">static void alloc(T *&amp;ptVec, long long iLength)</div><div class="ttdef"><b>Definition:</b> <a href="a00155_source.xhtml#l00025">Vector.h:25</a></div></div>
<div class="ttc" id="aa00598_xhtml_a4fdc8487d3685debf82a6acd12f6d37e"><div class="ttname"><a href="a00598.xhtml#a4fdc8487d3685debf82a6acd12f6d37e">CPca::matPythag</a></div><div class="ttdeci">static float matPythag(float dA, float dB)</div><div class="ttdef"><b>Definition:</b> <a href="a00068_source.xhtml#l00420">ToolPca.cpp:420</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00155_source.xhtml#l00025">CVector::alloc()</a>, <a class="el" href="a00143_source.xhtml#l00042">CMatrix::copy()</a>, <a class="el" href="a00155_source.xhtml#l00057">CVector::free()</a>, <a class="el" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fad7652bf47cff43c21f12cb7df4ca66ec">kFunctionIllegalCallError</a>, <a class="el" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa6c7f4630a7389787bd65e45f0215fc14">kMemError</a>, <a class="el" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">kNoError</a>, <a class="el" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa4366541ea8a34268abc8b24f19fcefdd">kUnknownError</a>, <a class="el" href="a00068_source.xhtml#l00420">matPythag()</a>, and <a class="el" href="a00143_source.xhtml#l00168">CMatrix::setZero()</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00068_source.xhtml#l00039">compPca()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00598_aebbcfdbe8cebc41121cf5114a37bed7e_cgraph.svg" width="459" height="240"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00598_aebbcfdbe8cebc41121cf5114a37bed7e_icgraph.svg" width="284" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ab97f1018b23310674511f05dac173db8" name="ab97f1018b23310674511f05dac173db8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab97f1018b23310674511f05dac173db8">&#9670;&nbsp;</a></span>compCov()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> CPca::compCov </td>
          <td>(</td>
          <td class="paramtype">float **&#160;</td>
          <td class="paramname"><em>ppfCovOut</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float *const *const&#160;</td>
          <td class="paramname"><em>ppfIn</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>iNumRows</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>iNumCols</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p >computes covariance matrix </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ppfCovOut</td><td>resulting covariance matrix (user-allocated, to be written, dimension iNumRows X iNumRows) </td></tr>
    <tr><td class="paramname">ppfIn</td><td>input matrix (dimensions iNumRows X iNumCols), each row is a variable </td></tr>
    <tr><td class="paramname">iNumRows</td><td>number of rows/features in the input matrix </td></tr>
    <tr><td class="paramname">iNumCols</td><td>number of columns/observations in the input matrix </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Error_t </dd></dl>

<p class="definition">Definition at line <a class="el" href="a00068_source.xhtml#l00072">72</a> of file <a class="el" href="a00068_source.xhtml">ToolPca.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   73</span>{</div>
<div class="line"><span class="lineno">   74</span>    <span class="keywordflow">if</span> (iNumRows &lt;= 1 || iNumCols &lt;= 1)</div>
<div class="line"><span class="lineno">   75</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248">Error_t::kFunctionInvalidArgsError</a>;</div>
<div class="line"><span class="lineno">   76</span>    <span class="keywordflow">if</span> (!ppfIn || !ppfCovOut)</div>
<div class="line"><span class="lineno">   77</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248">Error_t::kFunctionInvalidArgsError</a>;</div>
<div class="line"><span class="lineno">   78</span>    <span class="keywordflow">if</span> (!ppfIn[0] || !ppfCovOut[0])</div>
<div class="line"><span class="lineno">   79</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248">Error_t::kFunctionInvalidArgsError</a>;</div>
<div class="line"><span class="lineno">   80</span> </div>
<div class="line"><span class="lineno">   81</span>    <a class="code hl_function" href="a00486.xhtml#a7be1ae4f635c5aaec0c2693fc23b3646">CMatrix::setZero</a>(ppfCovOut, iNumRows, iNumRows);</div>
<div class="line"><span class="lineno">   82</span> </div>
<div class="line"><span class="lineno">   83</span>    <span class="keywordflow">for</span> (<span class="keyword">auto</span> m = 0; m &lt; iNumRows; m++)</div>
<div class="line"><span class="lineno">   84</span>    {</div>
<div class="line"><span class="lineno">   85</span>        <span class="keywordtype">float</span> fMean1 = <a class="code hl_function" href="a00502.xhtml#ae6e3545cf196c5e2409365bc62b7c1de">CVector::getMean</a>(ppfIn[m], iNumCols);</div>
<div class="line"><span class="lineno">   86</span>        <span class="keywordflow">for</span> (<span class="keyword">auto</span> n = 0; n &lt;= m; n++)</div>
<div class="line"><span class="lineno">   87</span>        {</div>
<div class="line"><span class="lineno">   88</span>            <span class="keywordtype">float</span> fMean2 = <a class="code hl_function" href="a00502.xhtml#ae6e3545cf196c5e2409365bc62b7c1de">CVector::getMean</a>(ppfIn[n], iNumCols);</div>
<div class="line"><span class="lineno">   89</span>            ppfCovOut[m][n] = 0;</div>
<div class="line"><span class="lineno">   90</span>            <span class="keywordflow">for</span> (<span class="keyword">auto</span> j = 0; j &lt; iNumCols; j++)</div>
<div class="line"><span class="lineno">   91</span>                ppfCovOut[m][n] += (ppfIn[m][j] - fMean1) * (ppfIn[n][j] - fMean2);</div>
<div class="line"><span class="lineno">   92</span>            ppfCovOut[n][m] = ppfCovOut[m][n];</div>
<div class="line"><span class="lineno">   93</span>        }</div>
<div class="line"><span class="lineno">   94</span>    }</div>
<div class="line"><span class="lineno">   95</span>    <a class="code hl_function" href="a00486.xhtml#a49b68b5ae672826ed8c8e3b014e09769">CMatrix::mulC_I</a>(ppfCovOut, 1.F / (iNumCols - 1), iNumRows, iNumRows);</div>
<div class="line"><span class="lineno">   96</span> </div>
<div class="line"><span class="lineno">   97</span>    <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><span class="lineno">   98</span>}</div>
<div class="ttc" id="aa00224_xhtml_a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248"><div class="ttname"><a href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248">Error_t::kFunctionInvalidArgsError</a></div><div class="ttdeci">@ kFunctionInvalidArgsError</div></div>
<div class="ttc" id="aa00486_xhtml_a49b68b5ae672826ed8c8e3b014e09769"><div class="ttname"><a href="a00486.xhtml#a49b68b5ae672826ed8c8e3b014e09769">CMatrix::mulC_I</a></div><div class="ttdeci">static void mulC_I(T **pptMat, T tScale, int iNumRows, int iNumCols)</div><div class="ttdef"><b>Definition:</b> <a href="a00143_source.xhtml#l00498">Matrix.h:498</a></div></div>
<div class="ttc" id="aa00502_xhtml_ae6e3545cf196c5e2409365bc62b7c1de"><div class="ttname"><a href="a00502.xhtml#ae6e3545cf196c5e2409365bc62b7c1de">CVector::getMean</a></div><div class="ttdeci">static T getMean(const T *ptSrc, long long int iLength)</div><div class="ttdef"><b>Definition:</b> <a href="a00155_source.xhtml#l00460">Vector.h:460</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00155_source.xhtml#l00460">CVector::getMean()</a>, <a class="el" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248">kFunctionInvalidArgsError</a>, <a class="el" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">kNoError</a>, <a class="el" href="a00143_source.xhtml#l00498">CMatrix::mulC_I()</a>, and <a class="el" href="a00143_source.xhtml#l00168">CMatrix::setZero()</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00068_source.xhtml#l00039">compPca()</a>, and <a class="el" href="a00050_source.xhtml#l00093">CGmm::initState_()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00598_ab97f1018b23310674511f05dac173db8_cgraph.svg" width="467" height="139"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00598_ab97f1018b23310674511f05dac173db8_icgraph.svg" width="100%" height="366"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="a3185f8f3c718973ce66de3595e38db09" name="a3185f8f3c718973ce66de3595e38db09"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3185f8f3c718973ce66de3595e38db09">&#9670;&nbsp;</a></span>compPca()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> CPca::compPca </td>
          <td>(</td>
          <td class="paramtype">float **&#160;</td>
          <td class="paramname"><em>ppfRes</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>pfEigenValues</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float *const *const&#160;</td>
          <td class="paramname"><em>ppfIn</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >computes the principal components </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ppfRes</td><td>matrix with principal components (user-allocated, to be written, dimensions equal input matrix) </td></tr>
    <tr><td class="paramname">pfEigenValues</td><td>eigenvalues of principle components (user-allocated, to be written, length equals number of features) </td></tr>
    <tr><td class="paramname">ppfIn</td><td>input matrix (dimensions iNumFeatures X iNumObs) </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Error_t </dd></dl>

<p class="definition">Definition at line <a class="el" href="a00068_source.xhtml#l00039">39</a> of file <a class="el" href="a00068_source.xhtml">ToolPca.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   40</span>{</div>
<div class="line"><span class="lineno">   41</span>    <span class="keywordflow">if</span> (<a class="code hl_variable" href="a00598.xhtml#ab664849af5b6a4773ced51edbbb564a7">m_iNumFeatures</a> &lt;= 1 || <a class="code hl_variable" href="a00598.xhtml#a9a4e924546965b46fc57a9c165ed5dad">m_iNumObs</a> &lt;= 1)</div>
<div class="line"><span class="lineno">   42</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248">Error_t::kFunctionInvalidArgsError</a>;</div>
<div class="line"><span class="lineno">   43</span>    <span class="keywordflow">if</span> (!ppfIn || !ppfRes || !pfEigenValues)</div>
<div class="line"><span class="lineno">   44</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248">Error_t::kFunctionInvalidArgsError</a>;</div>
<div class="line"><span class="lineno">   45</span>    <span class="keywordflow">if</span> (!ppfIn[0] || !ppfRes[0])</div>
<div class="line"><span class="lineno">   46</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248">Error_t::kFunctionInvalidArgsError</a>;</div>
<div class="line"><span class="lineno">   47</span> </div>
<div class="line"><span class="lineno">   48</span>    <a class="code hl_function" href="a00598.xhtml#ab97f1018b23310674511f05dac173db8">compCov</a>(<a class="code hl_variable" href="a00598.xhtml#a2c8051f7271212cf100b0896750707db">m_ppfProcTmp</a>, ppfIn, <a class="code hl_variable" href="a00598.xhtml#ab664849af5b6a4773ced51edbbb564a7">m_iNumFeatures</a>, <a class="code hl_variable" href="a00598.xhtml#a9a4e924546965b46fc57a9c165ed5dad">m_iNumObs</a>);</div>
<div class="line"><span class="lineno">   49</span> </div>
<div class="line"><span class="lineno">   50</span>    <a class="code hl_function" href="a00598.xhtml#aebbcfdbe8cebc41121cf5114a37bed7e">calcSVD</a>(<a class="code hl_variable" href="a00598.xhtml#a76550e0afbca81c6b468b6359b0b4324">m_ppfU</a>, <a class="code hl_variable" href="a00598.xhtml#a0b2588bce0db746b77170358260223e7">m_ppfW</a>, <a class="code hl_variable" href="a00598.xhtml#a84d0cbaa874f4615ad1cb92da06bb73e">m_ppfV</a>, <a class="code hl_variable" href="a00598.xhtml#a2c8051f7271212cf100b0896750707db">m_ppfProcTmp</a>, <a class="code hl_variable" href="a00598.xhtml#ab664849af5b6a4773ced51edbbb564a7">m_iNumFeatures</a>, <a class="code hl_variable" href="a00598.xhtml#ab664849af5b6a4773ced51edbbb564a7">m_iNumFeatures</a>);</div>
<div class="line"><span class="lineno">   51</span> </div>
<div class="line"><span class="lineno">   52</span>    <span class="comment">// extract eigenvalues</span></div>
<div class="line"><span class="lineno">   53</span>    <a class="code hl_function" href="a00486.xhtml#a62486a220c071d7e4ae970d9f1dc1093">CMatrix::getDiag</a>(pfEigenValues, <a class="code hl_variable" href="a00598.xhtml#a0b2588bce0db746b77170358260223e7">m_ppfW</a>, <a class="code hl_variable" href="a00598.xhtml#ab664849af5b6a4773ced51edbbb564a7">m_iNumFeatures</a>, <a class="code hl_variable" href="a00598.xhtml#ab664849af5b6a4773ced51edbbb564a7">m_iNumFeatures</a>);</div>
<div class="line"><span class="lineno">   54</span> </div>
<div class="line"><span class="lineno">   55</span>    <span class="comment">// sort eigenvalues</span></div>
<div class="line"><span class="lineno">   56</span>    <a class="code hl_function" href="a00502.xhtml#a63b8f3254518a67c10b7a5b2b3e0381f">CVector::sort_I</a>(pfEigenValues, <a class="code hl_variable" href="a00598.xhtml#ab13a6216bc5130693cdbacefa14e9316">piSortIndices</a>, <a class="code hl_variable" href="a00598.xhtml#ab664849af5b6a4773ced51edbbb564a7">m_iNumFeatures</a>, <span class="keyword">false</span>);</div>
<div class="line"><span class="lineno">   57</span> </div>
<div class="line"><span class="lineno">   58</span>    <span class="comment">// transpose T</span></div>
<div class="line"><span class="lineno">   59</span>    <a class="code hl_function" href="a00486.xhtml#a8b496f71fd36ee5afe60619df6cd657a">CMatrix::transpose</a>(<a class="code hl_variable" href="a00598.xhtml#a2c8051f7271212cf100b0896750707db">m_ppfProcTmp</a>, <a class="code hl_variable" href="a00598.xhtml#a84d0cbaa874f4615ad1cb92da06bb73e">m_ppfV</a>, <a class="code hl_variable" href="a00598.xhtml#ab664849af5b6a4773ced51edbbb564a7">m_iNumFeatures</a>, <a class="code hl_variable" href="a00598.xhtml#ab664849af5b6a4773ced51edbbb564a7">m_iNumFeatures</a>);</div>
<div class="line"><span class="lineno">   60</span> </div>
<div class="line"><span class="lineno">   61</span>    <span class="comment">// rearrange transformation matrix</span></div>
<div class="line"><span class="lineno">   62</span>    <a class="code hl_function" href="a00486.xhtml#a38a45a276935ba2a5566c67c8b6edd0e">CMatrix::rearrangeRows</a>(<a class="code hl_variable" href="a00598.xhtml#a2c8051f7271212cf100b0896750707db">m_ppfProcTmp</a>, <a class="code hl_variable" href="a00598.xhtml#ab13a6216bc5130693cdbacefa14e9316">piSortIndices</a>, <a class="code hl_variable" href="a00598.xhtml#ab664849af5b6a4773ced51edbbb564a7">m_iNumFeatures</a>);</div>
<div class="line"><span class="lineno">   63</span> </div>
<div class="line"><span class="lineno">   64</span>    <span class="comment">//compute components</span></div>
<div class="line"><span class="lineno">   65</span>    <a class="code hl_function" href="a00486.xhtml#acba558090ffee6e3a28aee7e38726754">CMatrix::mulMatMat</a>(ppfRes, <a class="code hl_variable" href="a00598.xhtml#a2c8051f7271212cf100b0896750707db">m_ppfProcTmp</a>, ppfIn, <a class="code hl_variable" href="a00598.xhtml#ab664849af5b6a4773ced51edbbb564a7">m_iNumFeatures</a>, <a class="code hl_variable" href="a00598.xhtml#ab664849af5b6a4773ced51edbbb564a7">m_iNumFeatures</a>, <a class="code hl_variable" href="a00598.xhtml#ab664849af5b6a4773ced51edbbb564a7">m_iNumFeatures</a>, <a class="code hl_variable" href="a00598.xhtml#a9a4e924546965b46fc57a9c165ed5dad">m_iNumObs</a>);</div>
<div class="line"><span class="lineno">   66</span> </div>
<div class="line"><span class="lineno">   67</span>    <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><span class="lineno">   68</span>}</div>
<div class="ttc" id="aa00486_xhtml_a38a45a276935ba2a5566c67c8b6edd0e"><div class="ttname"><a href="a00486.xhtml#a38a45a276935ba2a5566c67c8b6edd0e">CMatrix::rearrangeRows</a></div><div class="ttdeci">static void rearrangeRows(T **pptSrcDest, int *piRowIndices, int iNumRows)</div><div class="ttdef"><b>Definition:</b> <a href="a00143_source.xhtml#l00854">Matrix.h:854</a></div></div>
<div class="ttc" id="aa00486_xhtml_a62486a220c071d7e4ae970d9f1dc1093"><div class="ttname"><a href="a00486.xhtml#a62486a220c071d7e4ae970d9f1dc1093">CMatrix::getDiag</a></div><div class="ttdeci">static void getDiag(T *ptDest, const T *const *const pptSrc, int iNumSrcRows, int iNumSrcCols)</div><div class="ttdef"><b>Definition:</b> <a href="a00143_source.xhtml#l00249">Matrix.h:249</a></div></div>
<div class="ttc" id="aa00486_xhtml_a8b496f71fd36ee5afe60619df6cd657a"><div class="ttname"><a href="a00486.xhtml#a8b496f71fd36ee5afe60619df6cd657a">CMatrix::transpose</a></div><div class="ttdeci">static void transpose(T **pptDest, const T *const *const pptSrc, int iNumSrcRows, int iNumSrcCols)</div><div class="ttdef"><b>Definition:</b> <a href="a00143_source.xhtml#l00906">Matrix.h:906</a></div></div>
<div class="ttc" id="aa00486_xhtml_acba558090ffee6e3a28aee7e38726754"><div class="ttname"><a href="a00486.xhtml#acba558090ffee6e3a28aee7e38726754">CMatrix::mulMatMat</a></div><div class="ttdeci">static void mulMatMat(T **pptDest, const T *const *const pptSrc1, const T *const *const pptSrc2, int iNum1Rows, int iNum1Cols, int iNum2Rows, int iNum2Cols)</div><div class="ttdef"><b>Definition:</b> <a href="a00143_source.xhtml#l00583">Matrix.h:583</a></div></div>
<div class="ttc" id="aa00502_xhtml_a63b8f3254518a67c10b7a5b2b3e0381f"><div class="ttname"><a href="a00502.xhtml#a63b8f3254518a67c10b7a5b2b3e0381f">CVector::sort_I</a></div><div class="ttdeci">static void sort_I(T *ptSrcDest, int *piIndices, int iLength, bool bAscending=true)</div><div class="ttdef"><b>Definition:</b> <a href="a00155_source.xhtml#l00319">Vector.h:319</a></div></div>
<div class="ttc" id="aa00598_xhtml_a0b2588bce0db746b77170358260223e7"><div class="ttname"><a href="a00598.xhtml#a0b2588bce0db746b77170358260223e7">CPca::m_ppfW</a></div><div class="ttdeci">float ** m_ppfW</div><div class="ttdoc">SVD result: W.</div><div class="ttdef"><b>Definition:</b> <a href="a00221_source.xhtml#l00071">ToolPca.h:71</a></div></div>
<div class="ttc" id="aa00598_xhtml_a2c8051f7271212cf100b0896750707db"><div class="ttname"><a href="a00598.xhtml#a2c8051f7271212cf100b0896750707db">CPca::m_ppfProcTmp</a></div><div class="ttdeci">float ** m_ppfProcTmp</div><div class="ttdoc">temporary processing memoru</div><div class="ttdef"><b>Definition:</b> <a href="a00221_source.xhtml#l00069">ToolPca.h:69</a></div></div>
<div class="ttc" id="aa00598_xhtml_a76550e0afbca81c6b468b6359b0b4324"><div class="ttname"><a href="a00598.xhtml#a76550e0afbca81c6b468b6359b0b4324">CPca::m_ppfU</a></div><div class="ttdeci">float ** m_ppfU</div><div class="ttdoc">SVD result: U.</div><div class="ttdef"><b>Definition:</b> <a href="a00221_source.xhtml#l00070">ToolPca.h:70</a></div></div>
<div class="ttc" id="aa00598_xhtml_a84d0cbaa874f4615ad1cb92da06bb73e"><div class="ttname"><a href="a00598.xhtml#a84d0cbaa874f4615ad1cb92da06bb73e">CPca::m_ppfV</a></div><div class="ttdeci">float ** m_ppfV</div><div class="ttdoc">SVD result: V.</div><div class="ttdef"><b>Definition:</b> <a href="a00221_source.xhtml#l00072">ToolPca.h:72</a></div></div>
<div class="ttc" id="aa00598_xhtml_a9a4e924546965b46fc57a9c165ed5dad"><div class="ttname"><a href="a00598.xhtml#a9a4e924546965b46fc57a9c165ed5dad">CPca::m_iNumObs</a></div><div class="ttdeci">int m_iNumObs</div><div class="ttdoc">number of observations</div><div class="ttdef"><b>Definition:</b> <a href="a00221_source.xhtml#l00067">ToolPca.h:67</a></div></div>
<div class="ttc" id="aa00598_xhtml_ab13a6216bc5130693cdbacefa14e9316"><div class="ttname"><a href="a00598.xhtml#ab13a6216bc5130693cdbacefa14e9316">CPca::piSortIndices</a></div><div class="ttdeci">int * piSortIndices</div><div class="ttdoc">array for sorted indices</div><div class="ttdef"><b>Definition:</b> <a href="a00221_source.xhtml#l00073">ToolPca.h:73</a></div></div>
<div class="ttc" id="aa00598_xhtml_ab664849af5b6a4773ced51edbbb564a7"><div class="ttname"><a href="a00598.xhtml#ab664849af5b6a4773ced51edbbb564a7">CPca::m_iNumFeatures</a></div><div class="ttdeci">int m_iNumFeatures</div><div class="ttdoc">number of features</div><div class="ttdef"><b>Definition:</b> <a href="a00221_source.xhtml#l00066">ToolPca.h:66</a></div></div>
<div class="ttc" id="aa00598_xhtml_ab97f1018b23310674511f05dac173db8"><div class="ttname"><a href="a00598.xhtml#ab97f1018b23310674511f05dac173db8">CPca::compCov</a></div><div class="ttdeci">static Error_t compCov(float **ppfCovOut, const float *const *const ppfIn, int iNumRows, int iNumCols)</div><div class="ttdef"><b>Definition:</b> <a href="a00068_source.xhtml#l00072">ToolPca.cpp:72</a></div></div>
<div class="ttc" id="aa00598_xhtml_aebbcfdbe8cebc41121cf5114a37bed7e"><div class="ttname"><a href="a00598.xhtml#aebbcfdbe8cebc41121cf5114a37bed7e">CPca::calcSVD</a></div><div class="ttdeci">static Error_t calcSVD(float **ppfU, float **ppfW, float **ppfV, const float *const *const ppfMat, int iNumRows, int iNumCols, int iMaxIterations=100)</div><div class="ttdef"><b>Definition:</b> <a href="a00068_source.xhtml#l00100">ToolPca.cpp:100</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00068_source.xhtml#l00100">calcSVD()</a>, <a class="el" href="a00068_source.xhtml#l00072">compCov()</a>, <a class="el" href="a00143_source.xhtml#l00249">CMatrix::getDiag()</a>, <a class="el" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248">kFunctionInvalidArgsError</a>, <a class="el" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">kNoError</a>, <a class="el" href="a00221_source.xhtml#l00066">m_iNumFeatures</a>, <a class="el" href="a00221_source.xhtml#l00067">m_iNumObs</a>, <a class="el" href="a00221_source.xhtml#l00069">m_ppfProcTmp</a>, <a class="el" href="a00221_source.xhtml#l00070">m_ppfU</a>, <a class="el" href="a00221_source.xhtml#l00072">m_ppfV</a>, <a class="el" href="a00221_source.xhtml#l00071">m_ppfW</a>, <a class="el" href="a00143_source.xhtml#l00583">CMatrix::mulMatMat()</a>, <a class="el" href="a00221_source.xhtml#l00073">piSortIndices</a>, <a class="el" href="a00143_source.xhtml#l00854">CMatrix::rearrangeRows()</a>, <a class="el" href="a00155_source.xhtml#l00319">CVector::sort_I()</a>, and <a class="el" href="a00143_source.xhtml#l00906">CMatrix::transpose()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00598_a3185f8f3c718973ce66de3595e38db09_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="a532a0c22fc414dcdda50ea365d8084a8" name="a532a0c22fc414dcdda50ea365d8084a8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a532a0c22fc414dcdda50ea365d8084a8">&#9670;&nbsp;</a></span>init()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> CPca::init </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>iNumFeatures</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>iNumObs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >initializes PCA instance </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">iNumFeatures</td><td>number of rows in the input and output matrices </td></tr>
    <tr><td class="paramname">iNumObs</td><td>number of columns in the input and output matrices </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Error_t </dd></dl>

<p class="definition">Definition at line <a class="el" href="a00068_source.xhtml#l00009">9</a> of file <a class="el" href="a00068_source.xhtml">ToolPca.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   10</span>{</div>
<div class="line"><span class="lineno">   11</span>    <span class="keywordflow">if</span> (iNumFeatures &lt;= 0 || iNumObs &lt;= 0)</div>
<div class="line"><span class="lineno">   12</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248">Error_t::kFunctionInvalidArgsError</a>;</div>
<div class="line"><span class="lineno">   13</span> </div>
<div class="line"><span class="lineno">   14</span>    <a class="code hl_variable" href="a00598.xhtml#ab664849af5b6a4773ced51edbbb564a7">m_iNumFeatures</a> = iNumFeatures;</div>
<div class="line"><span class="lineno">   15</span>    <a class="code hl_variable" href="a00598.xhtml#a9a4e924546965b46fc57a9c165ed5dad">m_iNumObs</a> = iNumObs;</div>
<div class="line"><span class="lineno">   16</span> </div>
<div class="line"><span class="lineno">   17</span>    <a class="code hl_function" href="a00486.xhtml#a6501b78d76c912d49eee88c8f7242923">CMatrix::alloc</a>(<a class="code hl_variable" href="a00598.xhtml#a2c8051f7271212cf100b0896750707db">m_ppfProcTmp</a>, <a class="code hl_variable" href="a00598.xhtml#ab664849af5b6a4773ced51edbbb564a7">m_iNumFeatures</a>, <a class="code hl_variable" href="a00598.xhtml#ab664849af5b6a4773ced51edbbb564a7">m_iNumFeatures</a>);</div>
<div class="line"><span class="lineno">   18</span>    <a class="code hl_function" href="a00486.xhtml#a6501b78d76c912d49eee88c8f7242923">CMatrix::alloc</a>(<a class="code hl_variable" href="a00598.xhtml#a76550e0afbca81c6b468b6359b0b4324">m_ppfU</a>, <a class="code hl_variable" href="a00598.xhtml#ab664849af5b6a4773ced51edbbb564a7">m_iNumFeatures</a>, <a class="code hl_variable" href="a00598.xhtml#ab664849af5b6a4773ced51edbbb564a7">m_iNumFeatures</a>);</div>
<div class="line"><span class="lineno">   19</span>    <a class="code hl_function" href="a00486.xhtml#a6501b78d76c912d49eee88c8f7242923">CMatrix::alloc</a>(<a class="code hl_variable" href="a00598.xhtml#a0b2588bce0db746b77170358260223e7">m_ppfW</a>, <a class="code hl_variable" href="a00598.xhtml#ab664849af5b6a4773ced51edbbb564a7">m_iNumFeatures</a>, <a class="code hl_variable" href="a00598.xhtml#ab664849af5b6a4773ced51edbbb564a7">m_iNumFeatures</a>);</div>
<div class="line"><span class="lineno">   20</span>    <a class="code hl_function" href="a00486.xhtml#a6501b78d76c912d49eee88c8f7242923">CMatrix::alloc</a>(<a class="code hl_variable" href="a00598.xhtml#a84d0cbaa874f4615ad1cb92da06bb73e">m_ppfV</a>, <a class="code hl_variable" href="a00598.xhtml#ab664849af5b6a4773ced51edbbb564a7">m_iNumFeatures</a>, <a class="code hl_variable" href="a00598.xhtml#ab664849af5b6a4773ced51edbbb564a7">m_iNumFeatures</a>);</div>
<div class="line"><span class="lineno">   21</span> </div>
<div class="line"><span class="lineno">   22</span>    <a class="code hl_function" href="a00502.xhtml#abaadac98b1cad18b7b568852bc951696">CVector::alloc</a>(<a class="code hl_variable" href="a00598.xhtml#ab13a6216bc5130693cdbacefa14e9316">piSortIndices</a>, <a class="code hl_variable" href="a00598.xhtml#ab664849af5b6a4773ced51edbbb564a7">m_iNumFeatures</a>);</div>
<div class="line"><span class="lineno">   23</span> </div>
<div class="line"><span class="lineno">   24</span>    <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><span class="lineno">   25</span>}</div>
<div class="ttc" id="aa00486_xhtml_a6501b78d76c912d49eee88c8f7242923"><div class="ttname"><a href="a00486.xhtml#a6501b78d76c912d49eee88c8f7242923">CMatrix::alloc</a></div><div class="ttdeci">static void alloc(T **&amp;pptMat, int iNumRows, int iNumCols)</div><div class="ttdef"><b>Definition:</b> <a href="a00143_source.xhtml#l00023">Matrix.h:23</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00155_source.xhtml#l00025">CVector::alloc()</a>, <a class="el" href="a00143_source.xhtml#l00023">CMatrix::alloc()</a>, <a class="el" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248">kFunctionInvalidArgsError</a>, <a class="el" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">kNoError</a>, <a class="el" href="a00221_source.xhtml#l00066">m_iNumFeatures</a>, <a class="el" href="a00221_source.xhtml#l00067">m_iNumObs</a>, <a class="el" href="a00221_source.xhtml#l00069">m_ppfProcTmp</a>, <a class="el" href="a00221_source.xhtml#l00070">m_ppfU</a>, <a class="el" href="a00221_source.xhtml#l00072">m_ppfV</a>, <a class="el" href="a00221_source.xhtml#l00071">m_ppfW</a>, and <a class="el" href="a00221_source.xhtml#l00073">piSortIndices</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00598_a532a0c22fc414dcdda50ea365d8084a8_cgraph.svg" width="552" height="63"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a4fdc8487d3685debf82a6acd12f6d37e" name="a4fdc8487d3685debf82a6acd12f6d37e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4fdc8487d3685debf82a6acd12f6d37e">&#9670;&nbsp;</a></span>matPythag()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float CPca::matPythag </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>dA</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>dB</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="a00068_source.xhtml#l00420">420</a> of file <a class="el" href="a00068_source.xhtml">ToolPca.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  421</span>{</div>
<div class="line"><span class="lineno">  422</span>    <span class="keywordtype">float</span>    dC,</div>
<div class="line"><span class="lineno">  423</span>        dMult;</div>
<div class="line"><span class="lineno">  424</span> </div>
<div class="line"><span class="lineno">  425</span>    <span class="keywordflow">if</span> (fabs(dA) &gt; fabs(dB))</div>
<div class="line"><span class="lineno">  426</span>    {</div>
<div class="line"><span class="lineno">  427</span>        dC = dB / dA;</div>
<div class="line"><span class="lineno">  428</span>        dMult = dA;</div>
<div class="line"><span class="lineno">  429</span>    }</div>
<div class="line"><span class="lineno">  430</span>    <span class="keywordflow">else</span></div>
<div class="line"><span class="lineno">  431</span>    {</div>
<div class="line"><span class="lineno">  432</span>        <span class="keywordflow">if</span> (!dB)</div>
<div class="line"><span class="lineno">  433</span>            <span class="keywordflow">return</span> 0;</div>
<div class="line"><span class="lineno">  434</span>        dC = dA / dB;</div>
<div class="line"><span class="lineno">  435</span>        dMult = dB;</div>
<div class="line"><span class="lineno">  436</span>    }</div>
<div class="line"><span class="lineno">  437</span>    <span class="keywordflow">return</span> (dMult * std::sqrt(1 + (dC * dC)));</div>
<div class="line"><span class="lineno">  438</span>}</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="a00068_source.xhtml#l00100">calcSVD()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00598_a4fdc8487d3685debf82a6acd12f6d37e_icgraph.svg" width="455" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a35b34b65ae81e8288b1082c11d9c75df" name="a35b34b65ae81e8288b1082c11d9c75df"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a35b34b65ae81e8288b1082c11d9c75df">&#9670;&nbsp;</a></span>operator=()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00598.xhtml">CPca</a> &amp; CPca::operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="a00598.xhtml">CPca</a> &amp;&#160;</td>
          <td class="paramname"><em>c</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aabe6211d0934456e942340242309db42" name="aabe6211d0934456e942340242309db42"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aabe6211d0934456e942340242309db42">&#9670;&nbsp;</a></span>reset()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> CPca::reset </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >resets PCA instance </p><dl class="section return"><dt>Returns</dt><dd>Error_t </dd></dl>

<p class="definition">Definition at line <a class="el" href="a00068_source.xhtml#l00027">27</a> of file <a class="el" href="a00068_source.xhtml">ToolPca.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   28</span>{</div>
<div class="line"><span class="lineno">   29</span>    <a class="code hl_function" href="a00486.xhtml#a591097c6b1935c4d6273b3445f8f552b">CMatrix::free</a>(<a class="code hl_variable" href="a00598.xhtml#a2c8051f7271212cf100b0896750707db">m_ppfProcTmp</a>, <a class="code hl_variable" href="a00598.xhtml#ab664849af5b6a4773ced51edbbb564a7">m_iNumFeatures</a>);</div>
<div class="line"><span class="lineno">   30</span>    <a class="code hl_function" href="a00486.xhtml#a591097c6b1935c4d6273b3445f8f552b">CMatrix::free</a>(<a class="code hl_variable" href="a00598.xhtml#a76550e0afbca81c6b468b6359b0b4324">m_ppfU</a>, <a class="code hl_variable" href="a00598.xhtml#ab664849af5b6a4773ced51edbbb564a7">m_iNumFeatures</a>);</div>
<div class="line"><span class="lineno">   31</span>    <a class="code hl_function" href="a00486.xhtml#a591097c6b1935c4d6273b3445f8f552b">CMatrix::free</a>(<a class="code hl_variable" href="a00598.xhtml#a0b2588bce0db746b77170358260223e7">m_ppfW</a>, <a class="code hl_variable" href="a00598.xhtml#ab664849af5b6a4773ced51edbbb564a7">m_iNumFeatures</a>);</div>
<div class="line"><span class="lineno">   32</span>    <a class="code hl_function" href="a00486.xhtml#a591097c6b1935c4d6273b3445f8f552b">CMatrix::free</a>(<a class="code hl_variable" href="a00598.xhtml#a84d0cbaa874f4615ad1cb92da06bb73e">m_ppfV</a>, <a class="code hl_variable" href="a00598.xhtml#ab664849af5b6a4773ced51edbbb564a7">m_iNumFeatures</a>);</div>
<div class="line"><span class="lineno">   33</span> </div>
<div class="line"><span class="lineno">   34</span>    <a class="code hl_function" href="a00502.xhtml#aa86bdb0c663d4d52f2765793756f8737">CVector::free</a>(<a class="code hl_variable" href="a00598.xhtml#ab13a6216bc5130693cdbacefa14e9316">piSortIndices</a>);</div>
<div class="line"><span class="lineno">   35</span> </div>
<div class="line"><span class="lineno">   36</span>    <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><span class="lineno">   37</span>}</div>
<div class="ttc" id="aa00486_xhtml_a591097c6b1935c4d6273b3445f8f552b"><div class="ttname"><a href="a00486.xhtml#a591097c6b1935c4d6273b3445f8f552b">CMatrix::free</a></div><div class="ttdeci">static void free(T **&amp;pptMat, int iNumRows)</div><div class="ttdef"><b>Definition:</b> <a href="a00143_source.xhtml#l00058">Matrix.h:58</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00155_source.xhtml#l00057">CVector::free()</a>, <a class="el" href="a00143_source.xhtml#l00058">CMatrix::free()</a>, <a class="el" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">kNoError</a>, <a class="el" href="a00221_source.xhtml#l00066">m_iNumFeatures</a>, <a class="el" href="a00221_source.xhtml#l00069">m_ppfProcTmp</a>, <a class="el" href="a00221_source.xhtml#l00070">m_ppfU</a>, <a class="el" href="a00221_source.xhtml#l00072">m_ppfV</a>, <a class="el" href="a00221_source.xhtml#l00071">m_ppfW</a>, and <a class="el" href="a00221_source.xhtml#l00073">piSortIndices</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00068_source.xhtml#l00007">~CPca()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00598_aabe6211d0934456e942340242309db42_cgraph.svg" width="388" height="63"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00598_aabe6211d0934456e942340242309db42_icgraph.svg" width="247" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="ab664849af5b6a4773ced51edbbb564a7" name="ab664849af5b6a4773ced51edbbb564a7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab664849af5b6a4773ced51edbbb564a7">&#9670;&nbsp;</a></span>m_iNumFeatures</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int CPca::m_iNumFeatures = 0</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>number of features </p>

<p class="definition">Definition at line <a class="el" href="a00221_source.xhtml#l00066">66</a> of file <a class="el" href="a00221_source.xhtml">ToolPca.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00068_source.xhtml#l00039">compPca()</a>, <a class="el" href="a00068_source.xhtml#l00009">init()</a>, and <a class="el" href="a00068_source.xhtml#l00027">reset()</a>.</p>

</div>
</div>
<a id="a9a4e924546965b46fc57a9c165ed5dad" name="a9a4e924546965b46fc57a9c165ed5dad"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9a4e924546965b46fc57a9c165ed5dad">&#9670;&nbsp;</a></span>m_iNumObs</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int CPca::m_iNumObs = 0</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>number of observations </p>

<p class="definition">Definition at line <a class="el" href="a00221_source.xhtml#l00067">67</a> of file <a class="el" href="a00221_source.xhtml">ToolPca.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00068_source.xhtml#l00039">compPca()</a>, and <a class="el" href="a00068_source.xhtml#l00009">init()</a>.</p>

</div>
</div>
<a id="a2c8051f7271212cf100b0896750707db" name="a2c8051f7271212cf100b0896750707db"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2c8051f7271212cf100b0896750707db">&#9670;&nbsp;</a></span>m_ppfProcTmp</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float** CPca::m_ppfProcTmp = 0</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>temporary processing memoru </p>

<p class="definition">Definition at line <a class="el" href="a00221_source.xhtml#l00069">69</a> of file <a class="el" href="a00221_source.xhtml">ToolPca.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00068_source.xhtml#l00039">compPca()</a>, <a class="el" href="a00068_source.xhtml#l00009">init()</a>, and <a class="el" href="a00068_source.xhtml#l00027">reset()</a>.</p>

</div>
</div>
<a id="a76550e0afbca81c6b468b6359b0b4324" name="a76550e0afbca81c6b468b6359b0b4324"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a76550e0afbca81c6b468b6359b0b4324">&#9670;&nbsp;</a></span>m_ppfU</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float** CPca::m_ppfU = 0</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>SVD result: U. </p>

<p class="definition">Definition at line <a class="el" href="a00221_source.xhtml#l00070">70</a> of file <a class="el" href="a00221_source.xhtml">ToolPca.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00068_source.xhtml#l00039">compPca()</a>, <a class="el" href="a00068_source.xhtml#l00009">init()</a>, and <a class="el" href="a00068_source.xhtml#l00027">reset()</a>.</p>

</div>
</div>
<a id="a84d0cbaa874f4615ad1cb92da06bb73e" name="a84d0cbaa874f4615ad1cb92da06bb73e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a84d0cbaa874f4615ad1cb92da06bb73e">&#9670;&nbsp;</a></span>m_ppfV</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float** CPca::m_ppfV = 0</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>SVD result: V. </p>

<p class="definition">Definition at line <a class="el" href="a00221_source.xhtml#l00072">72</a> of file <a class="el" href="a00221_source.xhtml">ToolPca.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00068_source.xhtml#l00039">compPca()</a>, <a class="el" href="a00068_source.xhtml#l00009">init()</a>, and <a class="el" href="a00068_source.xhtml#l00027">reset()</a>.</p>

</div>
</div>
<a id="a0b2588bce0db746b77170358260223e7" name="a0b2588bce0db746b77170358260223e7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0b2588bce0db746b77170358260223e7">&#9670;&nbsp;</a></span>m_ppfW</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float** CPca::m_ppfW = 0</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>SVD result: W. </p>

<p class="definition">Definition at line <a class="el" href="a00221_source.xhtml#l00071">71</a> of file <a class="el" href="a00221_source.xhtml">ToolPca.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00068_source.xhtml#l00039">compPca()</a>, <a class="el" href="a00068_source.xhtml#l00009">init()</a>, and <a class="el" href="a00068_source.xhtml#l00027">reset()</a>.</p>

</div>
</div>
<a id="ab13a6216bc5130693cdbacefa14e9316" name="ab13a6216bc5130693cdbacefa14e9316"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab13a6216bc5130693cdbacefa14e9316">&#9670;&nbsp;</a></span>piSortIndices</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int* CPca::piSortIndices = 0</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>array for sorted indices </p>

<p class="definition">Definition at line <a class="el" href="a00221_source.xhtml#l00073">73</a> of file <a class="el" href="a00221_source.xhtml">ToolPca.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00068_source.xhtml#l00039">compPca()</a>, <a class="el" href="a00068_source.xhtml#l00009">init()</a>, and <a class="el" href="a00068_source.xhtml#l00027">reset()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="a00221_source.xhtml">ToolPca.h</a></li>
<li><a class="el" href="a00068_source.xhtml">ToolPca.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="a00598.xhtml">CPca</a></li>
    <li class="footer">Generated on Fri Jun 17 2022 19:37:37 for ACA by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.4 </li>
  </ul>
</div>
</body>
</html>
