<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.4"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ACA: CButterLp Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">ACA<span id="projectnumber">&#160;0.2.6</span>
   </div>
   <div id="projectbrief">Example Code for Audio Content Analysis</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.4 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search",'Search','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('a00488.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pri-static-methods">Static Private Member Functions</a> &#124;
<a href="a00485.xhtml">List of all members</a>  </div>
  <div class="headertitle"><div class="title">CButterLp Class Reference</div></div>
</div><!--header-->
<div class="contents">

<p>class providing a generic filter implementation implementation inspired by src from <a href="https://exstrom.com/journal/sigproc/dsigproc.html">https://exstrom.com/journal/sigproc/dsigproc.html</a>  
 <a href="a00488.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="a00155_source.xhtml">Filter.h</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for CButterLp:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00486.svg" width="191" height="279"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-static-methods" name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a3878460603a6e6e1a64de6021b2bb73e"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a3878460603a6e6e1a64de6021b2bb73e"><td class="memTemplItemLeft" align="right" valign="top">static <a class="el" href="a00122.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="a00488.xhtml#a3878460603a6e6e1a64de6021b2bb73e">calcCoeffs</a> (T *pfB, T *pfA, int iOrder, T fCutOff)</td></tr>
<tr class="separator:a3878460603a6e6e1a64de6021b2bb73e"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pri-static-methods" name="pri-static-methods"></a>
Static Private Member Functions</h2></td></tr>
<tr class="memitem:a9c08c0b6f891bb37fb4230088f94b0a0"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a9c08c0b6f891bb37fb4230088f94b0a0"><td class="memTemplItemLeft" align="right" valign="top">static <a class="el" href="a00122.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="a00488.xhtml#a9c08c0b6f891bb37fb4230088f94b0a0">calcB</a> (T *pfB, int iOrder, T fCutOff)</td></tr>
<tr class="separator:a9c08c0b6f891bb37fb4230088f94b0a0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4a70bdde7f075d2591fd03c52c16145c"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a4a70bdde7f075d2591fd03c52c16145c"><td class="memTemplItemLeft" align="right" valign="top">static <a class="el" href="a00122.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="a00488.xhtml#a4a70bdde7f075d2591fd03c52c16145c">calcA</a> (T *pfA, int iOrder, T fCutOff)</td></tr>
<tr class="separator:a4a70bdde7f075d2591fd03c52c16145c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a93b25bb8ef71fc7221ae53efe9212d67"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a93b25bb8ef71fc7221ae53efe9212d67"><td class="memTemplItemLeft" align="right" valign="top">static T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="a00488.xhtml#a93b25bb8ef71fc7221ae53efe9212d67">calcScale</a> (int iOrder, T fCutOff)</td></tr>
<tr class="separator:a93b25bb8ef71fc7221ae53efe9212d67"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab4432f6b6d2f1bad850a13a0573615c4"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:ab4432f6b6d2f1bad850a13a0573615c4"><td class="memTemplItemLeft" align="right" valign="top">static <a class="el" href="a00122.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="a00488.xhtml#ab4432f6b6d2f1bad850a13a0573615c4">multBinomial</a> (T *pfOut, const T *pfIn, int iOrder)</td></tr>
<tr class="separator:ab4432f6b6d2f1bad850a13a0573615c4"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p >class providing a generic filter implementation implementation inspired by src from <a href="https://exstrom.com/journal/sigproc/dsigproc.html">https://exstrom.com/journal/sigproc/dsigproc.html</a> </p>

<p class="definition">Definition at line <a class="el" href="a00155_source.xhtml#l00288">288</a> of file <a class="el" href="a00155_source.xhtml">Filter.h</a>.</p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="a4a70bdde7f075d2591fd03c52c16145c" name="a4a70bdde7f075d2591fd03c52c16145c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4a70bdde7f075d2591fd03c52c16145c">&#9670;&nbsp;</a></span>calcA()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="a00122.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> CButterLp::calcA </td>
          <td>(</td>
          <td class="paramtype">T *&#160;</td>
          <td class="paramname"><em>pfA</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>iOrder</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">T&#160;</td>
          <td class="paramname"><em>fCutOff</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="a00155_source.xhtml#l00340">340</a> of file <a class="el" href="a00155_source.xhtml">Filter.h</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  341</span>    {</div>
<div class="line"><span class="lineno">  342</span>        T* pfCoeff = 0;     <span class="comment">// binomial coefficients</span></div>
<div class="line"><span class="lineno">  343</span> </div>
<div class="line"><span class="lineno">  344</span>        CVector::alloc&lt;T&gt;(pfCoeff, <span class="keyword">static_cast&lt;</span><span class="keywordtype">long</span> <span class="keywordtype">long</span><span class="keyword">&gt;</span>(2) * iOrder);</div>
<div class="line"><span class="lineno">  345</span> </div>
<div class="line"><span class="lineno">  346</span>        <span class="keywordflow">for</span> (<span class="keyword">auto</span> j = 0; j &lt; iOrder; j++)</div>
<div class="line"><span class="lineno">  347</span>        {</div>
<div class="line"><span class="lineno">  348</span>            T fArg = <span class="keyword">static_cast&lt;</span>T<span class="keyword">&gt;</span>(<a class="code hl_define" href="a00269.xhtml#ae71449b1cc6e6250b91f539153a7a0d3">M_PI</a> * (2. * j + 1) / (2. * iOrder));</div>
<div class="line"><span class="lineno">  349</span>            T fNorm = <span class="keyword">static_cast&lt;</span>T<span class="keyword">&gt;</span>(1 + std::sin(<a class="code hl_define" href="a00269.xhtml#ae71449b1cc6e6250b91f539153a7a0d3">M_PI</a> * fCutOff) * std::sin(fArg));</div>
<div class="line"><span class="lineno">  350</span>            pfCoeff[2 * j] = <span class="keyword">static_cast&lt;</span>T<span class="keyword">&gt;</span>(-std::cos(<a class="code hl_define" href="a00269.xhtml#ae71449b1cc6e6250b91f539153a7a0d3">M_PI</a> * fCutOff) / fNorm);</div>
<div class="line"><span class="lineno">  351</span>            pfCoeff[2 * j + 1] = <span class="keyword">static_cast&lt;</span>T<span class="keyword">&gt;</span>(-std::sin(<a class="code hl_define" href="a00269.xhtml#ae71449b1cc6e6250b91f539153a7a0d3">M_PI</a> * fCutOff) * std::cos(fArg) / fNorm);</div>
<div class="line"><span class="lineno">  352</span>        }</div>
<div class="line"><span class="lineno">  353</span> </div>
<div class="line"><span class="lineno">  354</span>        <a class="code hl_function" href="a00488.xhtml#ab4432f6b6d2f1bad850a13a0573615c4">multBinomial</a>(pfA, pfCoeff, iOrder); </div>
<div class="line"><span class="lineno">  355</span> </div>
<div class="line"><span class="lineno">  356</span>        pfA[1] = pfA[0];</div>
<div class="line"><span class="lineno">  357</span>        pfA[0] = 1;</div>
<div class="line"><span class="lineno">  358</span>            <span class="keywordflow">for</span> (<span class="keyword">auto</span> j = 3; j &lt;= iOrder; j++)</div>
<div class="line"><span class="lineno">  359</span>            pfA[j] = pfA[2 * j - 2];</div>
<div class="line"><span class="lineno">  360</span> </div>
<div class="line"><span class="lineno">  361</span>        CVector::free&lt;T&gt;(pfCoeff);</div>
<div class="line"><span class="lineno">  362</span> </div>
<div class="line"><span class="lineno">  363</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00122.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><span class="lineno">  364</span>    }</div>
<div class="ttc" id="aa00122_xhtml_a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b"><div class="ttname"><a href="a00122.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a></div><div class="ttdeci">@ kNoError</div></div>
<div class="ttc" id="aa00269_xhtml_ae71449b1cc6e6250b91f539153a7a0d3"><div class="ttname"><a href="a00269.xhtml#ae71449b1cc6e6250b91f539153a7a0d3">M_PI</a></div><div class="ttdeci">#define M_PI</div><div class="ttdef"><b>Definition:</b> <a href="a00269_source.xhtml#l00018">_sndlib.h:18</a></div></div>
<div class="ttc" id="aa00488_xhtml_ab4432f6b6d2f1bad850a13a0573615c4"><div class="ttname"><a href="a00488.xhtml#ab4432f6b6d2f1bad850a13a0573615c4">CButterLp::multBinomial</a></div><div class="ttdeci">static Error_t multBinomial(T *pfOut, const T *pfIn, int iOrder)</div><div class="ttdef"><b>Definition:</b> <a href="a00155_source.xhtml#l00383">Filter.h:383</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00122.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">kNoError</a>, <a class="el" href="a00269_source.xhtml#l00018">M_PI</a>, and <a class="el" href="a00155_source.xhtml#l00383">multBinomial()</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00155_source.xhtml#l00300">calcCoeffs()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00488_a4a70bdde7f075d2591fd03c52c16145c_cgraph.svg" width="342" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00488_a4a70bdde7f075d2591fd03c52c16145c_icgraph.svg" width="100%" height="378"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="a9c08c0b6f891bb37fb4230088f94b0a0" name="a9c08c0b6f891bb37fb4230088f94b0a0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9c08c0b6f891bb37fb4230088f94b0a0">&#9670;&nbsp;</a></span>calcB()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="a00122.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> CButterLp::calcB </td>
          <td>(</td>
          <td class="paramtype">T *&#160;</td>
          <td class="paramname"><em>pfB</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>iOrder</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">T&#160;</td>
          <td class="paramname"><em>fCutOff</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="a00155_source.xhtml#l00319">319</a> of file <a class="el" href="a00155_source.xhtml">Filter.h</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  320</span>    {</div>
<div class="line"><span class="lineno">  321</span>        pfB[0] = 1;</div>
<div class="line"><span class="lineno">  322</span>        pfB[1] = <span class="keyword">static_cast&lt;</span>T<span class="keyword">&gt;</span>(iOrder);</div>
<div class="line"><span class="lineno">  323</span>        <span class="keywordflow">for</span> (<span class="keyword">auto</span> j = 2; j &lt;= iOrder / 2; ++j)</div>
<div class="line"><span class="lineno">  324</span>        {</div>
<div class="line"><span class="lineno">  325</span>            pfB[j] = (iOrder - j + 1) * pfB[j - 1] / j;</div>
<div class="line"><span class="lineno">  326</span>            pfB[iOrder - j] = pfB[j];</div>
<div class="line"><span class="lineno">  327</span>        }</div>
<div class="line"><span class="lineno">  328</span>        pfB[iOrder - 1] = <span class="keyword">static_cast&lt;</span>T<span class="keyword">&gt;</span>(iOrder);</div>
<div class="line"><span class="lineno">  329</span>        pfB[iOrder] = 1;</div>
<div class="line"><span class="lineno">  330</span> </div>
<div class="line"><span class="lineno">  331</span>        T fScale = <a class="code hl_function" href="a00488.xhtml#a93b25bb8ef71fc7221ae53efe9212d67">calcScale</a>(iOrder, fCutOff);</div>
<div class="line"><span class="lineno">  332</span> </div>
<div class="line"><span class="lineno">  333</span>        <span class="keywordflow">for</span> (<span class="keyword">auto</span> j = 0; j &lt; iOrder + 1; j++)</div>
<div class="line"><span class="lineno">  334</span>            pfB[j] *= fScale;</div>
<div class="line"><span class="lineno">  335</span> </div>
<div class="line"><span class="lineno">  336</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00122.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><span class="lineno">  337</span>    }</div>
<div class="ttc" id="aa00488_xhtml_a93b25bb8ef71fc7221ae53efe9212d67"><div class="ttname"><a href="a00488.xhtml#a93b25bb8ef71fc7221ae53efe9212d67">CButterLp::calcScale</a></div><div class="ttdeci">static T calcScale(int iOrder, T fCutOff)</div><div class="ttdef"><b>Definition:</b> <a href="a00155_source.xhtml#l00367">Filter.h:367</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00155_source.xhtml#l00367">calcScale()</a>, and <a class="el" href="a00122.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">kNoError</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00155_source.xhtml#l00300">calcCoeffs()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00488_a9c08c0b6f891bb37fb4230088f94b0a0_cgraph.svg" width="323" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00488_a9c08c0b6f891bb37fb4230088f94b0a0_icgraph.svg" width="100%" height="378"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="a3878460603a6e6e1a64de6021b2bb73e" name="a3878460603a6e6e1a64de6021b2bb73e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3878460603a6e6e1a64de6021b2bb73e">&#9670;&nbsp;</a></span>calcCoeffs()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="a00122.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> CButterLp::calcCoeffs </td>
          <td>(</td>
          <td class="paramtype">T *&#160;</td>
          <td class="paramname"><em>pfB</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">T *&#160;</td>
          <td class="paramname"><em>pfA</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>iOrder</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">T&#160;</td>
          <td class="paramname"><em>fCutOff</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p >computes buttworth lowpass coefficients </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pfB</td><td>output signal (to be written, length iOrder+1, allocated by user) </td></tr>
    <tr><td class="paramname">pfA</td><td>input signal (to be written, length iOrder+1, allocated by user) </td></tr>
    <tr><td class="paramname">iOrder</td><td>number of poles </td></tr>
    <tr><td class="paramname">fCutOff</td><td>normed cutoff between 0 and 1 (fs/2) </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Error_t </dd></dl>

<p class="definition">Definition at line <a class="el" href="a00155_source.xhtml#l00300">300</a> of file <a class="el" href="a00155_source.xhtml">Filter.h</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  301</span>    {</div>
<div class="line"><span class="lineno">  302</span>        <span class="keyword">const</span> <span class="keywordtype">long</span> <span class="keywordtype">long</span> iTmpOrder = <span class="keyword">static_cast&lt;</span><span class="keywordtype">long</span> <span class="keywordtype">long</span><span class="keyword">&gt;</span>(iOrder); <span class="comment">// silly compiler warnings get annoying</span></div>
<div class="line"><span class="lineno">  303</span>        <span class="keywordtype">float</span>* pfTmpA = 0;</div>
<div class="line"><span class="lineno">  304</span>        <a class="code hl_function" href="a00508.xhtml#abaadac98b1cad18b7b568852bc951696">CVector::alloc</a>(pfTmpA, 2 * iTmpOrder);</div>
<div class="line"><span class="lineno">  305</span>        <a class="code hl_function" href="a00508.xhtml#a6dbb3f9f480568b60f7fe50090d20003">CVector::setZero</a>(pfB, iTmpOrder + 1);</div>
<div class="line"><span class="lineno">  306</span>        <a class="code hl_function" href="a00508.xhtml#a6dbb3f9f480568b60f7fe50090d20003">CVector::setZero</a>(pfTmpA, 2 * iTmpOrder);</div>
<div class="line"><span class="lineno">  307</span> </div>
<div class="line"><span class="lineno">  308</span>        <a class="code hl_function" href="a00488.xhtml#a9c08c0b6f891bb37fb4230088f94b0a0">calcB</a>(pfB, iOrder, fCutOff);</div>
<div class="line"><span class="lineno">  309</span>        <a class="code hl_function" href="a00488.xhtml#a4a70bdde7f075d2591fd03c52c16145c">calcA</a>(pfTmpA, iOrder, fCutOff);</div>
<div class="line"><span class="lineno">  310</span>        <a class="code hl_function" href="a00508.xhtml#ad7c5cba73e439adac77778f61c9418f0">CVector::copy</a>(pfA, pfTmpA, iTmpOrder + 1);</div>
<div class="line"><span class="lineno">  311</span> </div>
<div class="line"><span class="lineno">  312</span>        <a class="code hl_function" href="a00508.xhtml#aa86bdb0c663d4d52f2765793756f8737">CVector::free</a>(pfTmpA);</div>
<div class="line"><span class="lineno">  313</span> </div>
<div class="line"><span class="lineno">  314</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00122.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><span class="lineno">  315</span>    }</div>
<div class="ttc" id="aa00488_xhtml_a4a70bdde7f075d2591fd03c52c16145c"><div class="ttname"><a href="a00488.xhtml#a4a70bdde7f075d2591fd03c52c16145c">CButterLp::calcA</a></div><div class="ttdeci">static Error_t calcA(T *pfA, int iOrder, T fCutOff)</div><div class="ttdef"><b>Definition:</b> <a href="a00155_source.xhtml#l00340">Filter.h:340</a></div></div>
<div class="ttc" id="aa00488_xhtml_a9c08c0b6f891bb37fb4230088f94b0a0"><div class="ttname"><a href="a00488.xhtml#a9c08c0b6f891bb37fb4230088f94b0a0">CButterLp::calcB</a></div><div class="ttdeci">static Error_t calcB(T *pfB, int iOrder, T fCutOff)</div><div class="ttdef"><b>Definition:</b> <a href="a00155_source.xhtml#l00319">Filter.h:319</a></div></div>
<div class="ttc" id="aa00508_xhtml_a6dbb3f9f480568b60f7fe50090d20003"><div class="ttname"><a href="a00508.xhtml#a6dbb3f9f480568b60f7fe50090d20003">CVector::setZero</a></div><div class="ttdeci">static void setZero(T *ptSrcDest, long long iLength)</div><div class="ttdef"><b>Definition:</b> <a href="a00158_source.xhtml#l00048">Vector.h:48</a></div></div>
<div class="ttc" id="aa00508_xhtml_aa86bdb0c663d4d52f2765793756f8737"><div class="ttname"><a href="a00508.xhtml#aa86bdb0c663d4d52f2765793756f8737">CVector::free</a></div><div class="ttdeci">static void free(T *&amp;ptVec)</div><div class="ttdef"><b>Definition:</b> <a href="a00158_source.xhtml#l00037">Vector.h:37</a></div></div>
<div class="ttc" id="aa00508_xhtml_abaadac98b1cad18b7b568852bc951696"><div class="ttname"><a href="a00508.xhtml#abaadac98b1cad18b7b568852bc951696">CVector::alloc</a></div><div class="ttdeci">static void alloc(T *&amp;ptVec, long long iLength)</div><div class="ttdef"><b>Definition:</b> <a href="a00158_source.xhtml#l00023">Vector.h:23</a></div></div>
<div class="ttc" id="aa00508_xhtml_ad7c5cba73e439adac77778f61c9418f0"><div class="ttname"><a href="a00508.xhtml#ad7c5cba73e439adac77778f61c9418f0">CVector::copy</a></div><div class="ttdeci">static void copy(T *ptDest, const T *ptSrc, long long int iLength)</div><div class="ttdef"><b>Definition:</b> <a href="a00158_source.xhtml#l00106">Vector.h:106</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00158_source.xhtml#l00023">CVector::alloc()</a>, <a class="el" href="a00155_source.xhtml#l00340">calcA()</a>, <a class="el" href="a00155_source.xhtml#l00319">calcB()</a>, <a class="el" href="a00158_source.xhtml#l00106">CVector::copy()</a>, <a class="el" href="a00158_source.xhtml#l00037">CVector::free()</a>, <a class="el" href="a00122.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">kNoError</a>, and <a class="el" href="a00158_source.xhtml#l00048">CVector::setZero()</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00104_source.xhtml#l00215">CPitchTimeAuditory::CPitchTimeAuditory()</a>, and <a class="el" href="a00215_source.xhtml#l00102">CResample::process()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00488_a3878460603a6e6e1a64de6021b2bb73e_cgraph.svg" width="538" height="291"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00488_a3878460603a6e6e1a64de6021b2bb73e_icgraph.svg" width="611" height="104"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a93b25bb8ef71fc7221ae53efe9212d67" name="a93b25bb8ef71fc7221ae53efe9212d67"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a93b25bb8ef71fc7221ae53efe9212d67">&#9670;&nbsp;</a></span>calcScale()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static T CButterLp::calcScale </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>iOrder</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">T&#160;</td>
          <td class="paramname"><em>fCutOff</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="a00155_source.xhtml#l00367">367</a> of file <a class="el" href="a00155_source.xhtml">Filter.h</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  368</span>    {</div>
<div class="line"><span class="lineno">  369</span>        T fPhase = <span class="keyword">static_cast&lt;</span>T<span class="keyword">&gt;</span>(<a class="code hl_define" href="a00269.xhtml#ae71449b1cc6e6250b91f539153a7a0d3">M_PI</a> / (2. * iOrder));</div>
<div class="line"><span class="lineno">  370</span>        T fScale = 1;</div>
<div class="line"><span class="lineno">  371</span> </div>
<div class="line"><span class="lineno">  372</span>        <span class="keywordflow">for</span> (<span class="keyword">auto</span> j = 0; j &lt; iOrder / 2; ++j)</div>
<div class="line"><span class="lineno">  373</span>            fScale *= <span class="keyword">static_cast&lt;</span>T<span class="keyword">&gt;</span>(1 + std::sin(<a class="code hl_define" href="a00269.xhtml#ae71449b1cc6e6250b91f539153a7a0d3">M_PI</a> * fCutOff) * std::sin((2 * j + 1) * fPhase));</div>
<div class="line"><span class="lineno">  374</span> </div>
<div class="line"><span class="lineno">  375</span>        <span class="keywordflow">if</span> (iOrder % 2)</div>
<div class="line"><span class="lineno">  376</span>            fScale *= <span class="keyword">static_cast&lt;</span>T<span class="keyword">&gt;</span>(std::sin(<a class="code hl_define" href="a00269.xhtml#ae71449b1cc6e6250b91f539153a7a0d3">M_PI</a> * fCutOff / 2) + std::cos(<a class="code hl_define" href="a00269.xhtml#ae71449b1cc6e6250b91f539153a7a0d3">M_PI</a> * fCutOff / 2));</div>
<div class="line"><span class="lineno">  377</span>        fScale = <span class="keyword">static_cast&lt;</span>T<span class="keyword">&gt;</span>(std::pow(std::sin(<a class="code hl_define" href="a00269.xhtml#ae71449b1cc6e6250b91f539153a7a0d3">M_PI</a> * fCutOff / 2), iOrder) / fScale);</div>
<div class="line"><span class="lineno">  378</span> </div>
<div class="line"><span class="lineno">  379</span>        <span class="keywordflow">return</span> fScale;</div>
<div class="line"><span class="lineno">  380</span>    }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00269_source.xhtml#l00018">M_PI</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00155_source.xhtml#l00319">calcB()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00488_a93b25bb8ef71fc7221ae53efe9212d67_icgraph.svg" width="100%" height="378"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="ab4432f6b6d2f1bad850a13a0573615c4" name="ab4432f6b6d2f1bad850a13a0573615c4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab4432f6b6d2f1bad850a13a0573615c4">&#9670;&nbsp;</a></span>multBinomial()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="a00122.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> CButterLp::multBinomial </td>
          <td>(</td>
          <td class="paramtype">T *&#160;</td>
          <td class="paramname"><em>pfOut</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const T *&#160;</td>
          <td class="paramname"><em>pfIn</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>iOrder</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="a00155_source.xhtml#l00383">383</a> of file <a class="el" href="a00155_source.xhtml">Filter.h</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  384</span>    {</div>
<div class="line"><span class="lineno">  385</span>        <span class="keywordflow">for</span> (<span class="keyword">auto</span> i = 0; i &lt; iOrder; i++)</div>
<div class="line"><span class="lineno">  386</span>        {</div>
<div class="line"><span class="lineno">  387</span>            <span class="keywordflow">for</span> (<span class="keyword">auto</span> j = i; j &gt; 0; j--)</div>
<div class="line"><span class="lineno">  388</span>            {</div>
<div class="line"><span class="lineno">  389</span>                pfOut[2 * j] += pfIn[2 * i] * pfOut[2 * (j - 1)] - pfIn[2 * i + 1] * pfOut[2 * (j - 1) + 1];</div>
<div class="line"><span class="lineno">  390</span>                pfOut[2 * j + 1] += pfIn[2 * i] * pfOut[2 * (j - 1) + 1] + pfIn[2 * i + 1] * pfOut[2 * (j - 1)];</div>
<div class="line"><span class="lineno">  391</span>            }</div>
<div class="line"><span class="lineno">  392</span>            pfOut[0] += pfIn[2 * i];</div>
<div class="line"><span class="lineno">  393</span>            pfOut[1] += pfIn[2 * i + 1];</div>
<div class="line"><span class="lineno">  394</span>        }</div>
<div class="line"><span class="lineno">  395</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00122.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><span class="lineno">  396</span>    }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00122.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">kNoError</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00155_source.xhtml#l00340">calcA()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00488_ab4432f6b6d2f1bad850a13a0573615c4_icgraph.svg" width="100%" height="378"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="a00155_source.xhtml">Filter.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="a00488.xhtml">CButterLp</a></li>
    <li class="footer">Generated on Tue Jun 14 2022 21:07:19 for ACA by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.4 </li>
  </ul>
</div>
</body>
</html>
