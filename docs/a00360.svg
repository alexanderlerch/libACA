<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 4.0.0 (20220602.1335)
 -->
<!-- Title: CNoveltyFromFile Pages: 1 -->
<!--zoomable 2488 -->
<svg id="main" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" onload="init(evt)">
<style type="text/css"><![CDATA[
.edge:hover path { stroke: red; }
.edge:hover polygon { stroke: red; fill: red; }
]]></style>
<script type="text/javascript"><![CDATA[
var edges = document.getElementsByTagName('g');
if (edges && edges.length) {
  for (var i=0;i<edges.length;i++) {
    if (edges[i].id.substr(0,4)=='edge') {
      edges[i].setAttribute('class','edge');
    }
  }
}
]]></script>
        <defs>
                <circle id="rim" cx="0" cy="0" r="7"/>
                <circle id="rim2" cx="0" cy="0" r="3.5"/>
                <g id="zoomPlus">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomplus.mouseover" end="zoomplus.mouseout"/>
                        </use>
                        <path d="M-4,0h8M0,-4v8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="zoomMin">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomminus.mouseover" end="zoomminus.mouseout"/>
                        </use>
                        <path d="M-4,0h8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="dirArrow">
                        <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
               <g id="resetDef">
                       <use xlink:href="#rim2" fill="#404040">
                               <set attributeName="fill" to="#808080" begin="reset.mouseover" end="reset.mouseout"/>
                       </use>
               </g>
        </defs>

<script type="text/javascript">
var viewWidth = 1093;
var viewHeight = 2488;
var sectionId = 'dynsection-1';
</script>
<script xlink:href="svgpan.js"/>
<svg id="graph" class="graph">
<g id="viewport">
<title>CNoveltyFromFile</title>
<polygon fill="white" stroke="transparent" points="-4,4 -4,-2484 1088.5,-2484 1088.5,4 -4,4"/>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="class for computation of the novelty function from a file">
<polygon fill="#bfbfbf" stroke="black" points="559.5,-0.5 559.5,-101.5 728.5,-101.5 728.5,-0.5 559.5,-0.5"/>
<text text-anchor="middle" x="644" y="-89.5" font-family="Helvetica,sans-Serif" font-size="10.00">CNoveltyFromFile</text>
<polyline fill="none" stroke="black" points="559.5,-82.5 728.5,-82.5 "/>
<text text-anchor="middle" x="644" y="-70.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="559.5,-63.5 728.5,-63.5 "/>
<text text-anchor="start" x="567.5" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CNoveltyFromFile(Novelty</text>
<text text-anchor="start" x="567.5" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t eNoveltyIdx, std::string</text>
<text text-anchor="start" x="567.5" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00"> strAudioFilePath, int iBlockLength,</text>
<text text-anchor="start" x="567.5" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iHopLength)</text>
<text text-anchor="start" x="567.5" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CNoveltyFromFile()</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="a00514.xhtml" target="_top" xlink:title="class for computation of a magnitude Novelty from either a file or a vector">
<polygon fill="white" stroke="black" points="438.5,-331 438.5,-883 647.5,-883 647.5,-331 438.5,-331"/>
<text text-anchor="middle" x="543" y="-871" font-family="Helvetica,sans-Serif" font-size="10.00">CNoveltyIf</text>
<polyline fill="none" stroke="black" points="438.5,-864 647.5,-864 "/>
<text text-anchor="start" x="446.5" y="-852" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iBlockLength</text>
<text text-anchor="start" x="446.5" y="-841" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iHopLength</text>
<text text-anchor="start" x="446.5" y="-830" font-family="Helvetica,sans-Serif" font-size="10.00"># float m_fSampleRate</text>
<text text-anchor="start" x="446.5" y="-819" font-family="Helvetica,sans-Serif" font-size="10.00"># float * m_pfProcBuff2</text>
<text text-anchor="start" x="446.5" y="-808" font-family="Helvetica,sans-Serif" font-size="10.00"># float * m_pfProcBuff1</text>
<text text-anchor="start" x="446.5" y="-797" font-family="Helvetica,sans-Serif" font-size="10.00"># bool m_bIsInitialized</text>
<polyline fill="none" stroke="black" points="438.5,-790 647.5,-790 "/>
<text text-anchor="start" x="446.5" y="-778" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getNumBlocks</text>
<text text-anchor="start" x="446.5" y="-767" font-family="Helvetica,sans-Serif" font-size="10.00">(int &amp;iNumBlocks) const</text>
<text text-anchor="start" x="446.5" y="-756" font-family="Helvetica,sans-Serif" font-size="10.00">+ int getNumBlocks()</text>
<text text-anchor="start" x="446.5" y="-745" font-family="Helvetica,sans-Serif" font-size="10.00"> const</text>
<text text-anchor="start" x="446.5" y="-734" font-family="Helvetica,sans-Serif" font-size="10.00">+ float getTimeStamp</text>
<text text-anchor="start" x="446.5" y="-723" font-family="Helvetica,sans-Serif" font-size="10.00">(int iBlockIdx) const</text>
<text text-anchor="start" x="446.5" y="-712" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getTimeStamps</text>
<text text-anchor="start" x="446.5" y="-701" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfAxisTicks) const</text>
<text text-anchor="start" x="446.5" y="-690" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compNovelty</text>
<text text-anchor="start" x="446.5" y="-679" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfNovelty, bool</text>
<text text-anchor="start" x="446.5" y="-668" font-family="Helvetica,sans-Serif" font-size="10.00"> *pbisOnset=0)</text>
<text text-anchor="start" x="446.5" y="-657" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="446.5" y="-646" font-family="Helvetica,sans-Serif" font-size="10.00">(CNoveltyIf *&amp;pCInstance,</text>
<text text-anchor="start" x="446.5" y="-635" font-family="Helvetica,sans-Serif" font-size="10.00"> Novelty_t eNoveltyIdx,</text>
<text text-anchor="start" x="446.5" y="-624" font-family="Helvetica,sans-Serif" font-size="10.00"> const std::string &amp;strAudioFile</text>
<text text-anchor="start" x="446.5" y="-613" font-family="Helvetica,sans-Serif" font-size="10.00">Path, int iBlockLength=4096,</text>
<text text-anchor="start" x="446.5" y="-602" font-family="Helvetica,sans-Serif" font-size="10.00"> int iHopLength=512)</text>
<text text-anchor="start" x="446.5" y="-591" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="446.5" y="-580" font-family="Helvetica,sans-Serif" font-size="10.00">(CNoveltyIf *&amp;pCInstance,</text>
<text text-anchor="start" x="446.5" y="-569" font-family="Helvetica,sans-Serif" font-size="10.00"> Novelty_t eNoveltyIdx,</text>
<text text-anchor="start" x="446.5" y="-558" font-family="Helvetica,sans-Serif" font-size="10.00"> const float *pfAudio, long</text>
<text text-anchor="start" x="446.5" y="-547" font-family="Helvetica,sans-Serif" font-size="10.00"> long iNumSamples, float fSampleRate,</text>
<text text-anchor="start" x="446.5" y="-536" font-family="Helvetica,sans-Serif" font-size="10.00"> int iBlockLength=4096, int iHopLength=512)</text>
<text text-anchor="start" x="446.5" y="-525" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="446.5" y="-514" font-family="Helvetica,sans-Serif" font-size="10.00">(CNoveltyIf *&amp;pCInstance)</text>
<text text-anchor="start" x="446.5" y="-503" font-family="Helvetica,sans-Serif" font-size="10.00">+ static std::string</text>
<text text-anchor="start" x="446.5" y="-492" font-family="Helvetica,sans-Serif" font-size="10.00"> getNoveltyString(Novelty</text>
<text text-anchor="start" x="446.5" y="-481" font-family="Helvetica,sans-Serif" font-size="10.00">_t eNoveltyIdx)</text>
<text text-anchor="start" x="446.5" y="-470" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Novelty_t getNovelty</text>
<text text-anchor="start" x="446.5" y="-459" font-family="Helvetica,sans-Serif" font-size="10.00">IdxFromString(std::string</text>
<text text-anchor="start" x="446.5" y="-448" font-family="Helvetica,sans-Serif" font-size="10.00"> sNoveltyString)</text>
<text text-anchor="start" x="446.5" y="-437" font-family="Helvetica,sans-Serif" font-size="10.00"># CNoveltyIf()</text>
<text text-anchor="start" x="446.5" y="-426" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CNoveltyIf()</text>
<text text-anchor="start" x="446.5" y="-415" font-family="Helvetica,sans-Serif" font-size="10.00"># CNoveltyIf(const CNovelty</text>
<text text-anchor="start" x="446.5" y="-404" font-family="Helvetica,sans-Serif" font-size="10.00">If &amp;that)</text>
<text text-anchor="start" x="446.5" y="-393" font-family="Helvetica,sans-Serif" font-size="10.00"># CNoveltyIf &amp; operator</text>
<text text-anchor="start" x="446.5" y="-382" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CNoveltyIf &amp;c)</text>
<text text-anchor="start" x="446.5" y="-371" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t reset_()</text>
<text text-anchor="start" x="446.5" y="-360" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t init_(Novelty</text>
<text text-anchor="start" x="446.5" y="-349" font-family="Helvetica,sans-Serif" font-size="10.00">_t eNoveltyIdx)</text>
<text text-anchor="start" x="446.5" y="-338" font-family="Helvetica,sans-Serif" font-size="10.00"># void computeMagSpectrum_()</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M595.04,-320.57C610.46,-235.97 625.69,-152.42 634.97,-101.52"/>
<polygon fill="none" stroke="midnightblue" points="591.55,-320.16 593.2,-330.62 598.44,-321.41 591.55,-320.16"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="a00606.xhtml" target="_top" xlink:title="class for audio normalization offering three options">
<polygon fill="white" stroke="black" points="0,-1277.5 0,-1510.5 150,-1510.5 150,-1277.5 0,-1277.5"/>
<text text-anchor="middle" x="75" y="-1498.5" font-family="Helvetica,sans-Serif" font-size="10.00">CNormalizeAudio</text>
<polyline fill="none" stroke="black" points="0,-1491.5 150,-1491.5 "/>
<text text-anchor="start" x="8" y="-1479.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float m_fScaleFactor</text>
<polyline fill="none" stroke="black" points="0,-1472.5 150,-1472.5 "/>
<text text-anchor="start" x="8" y="-1460.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CNormalizeAudio(CAudioFile</text>
<text text-anchor="start" x="8" y="-1449.5" font-family="Helvetica,sans-Serif" font-size="10.00">If *pCAudioFile)</text>
<text text-anchor="start" x="8" y="-1438.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CNormalizeAudio(const</text>
<text text-anchor="start" x="8" y="-1427.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfAudioBuff, long</text>
<text text-anchor="start" x="8" y="-1416.5" font-family="Helvetica,sans-Serif" font-size="10.00"> long iAudioLength)</text>
<text text-anchor="start" x="8" y="-1405.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CNormalizeAudio()</text>
<text text-anchor="start" x="8" y="-1394.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void normalizeBlock</text>
<text text-anchor="start" x="8" y="-1383.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfAudioBlock,</text>
<text text-anchor="start" x="8" y="-1372.5" font-family="Helvetica,sans-Serif" font-size="10.00"> long long iNumSamples)</text>
<text text-anchor="start" x="8" y="-1361.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static void normalizeSignal</text>
<text text-anchor="start" x="8" y="-1350.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfAudio, long long</text>
<text text-anchor="start" x="8" y="-1339.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iNumSamples)</text>
<text text-anchor="start" x="8" y="-1328.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CNormalizeAudio()</text>
<text text-anchor="start" x="8" y="-1317.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CNormalizeAudio(const</text>
<text text-anchor="start" x="8" y="-1306.5" font-family="Helvetica,sans-Serif" font-size="10.00"> CNormalizeAudio &amp;that)</text>
<text text-anchor="start" x="8" y="-1295.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CNormalizeAudio &amp; operator</text>
<text text-anchor="start" x="8" y="-1284.5" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CNormalizeAudio &amp;c)</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node2 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node2</title>
<path fill="none" stroke="#404040" d="M99.56,-1277.29C113.13,-1225.11 132.67,-1163.73 159,-1112 231.38,-969.78 345.04,-826.9 429.95,-729.77"/>
<polygon fill="none" stroke="#404040" points="430.16,-729.54 431.11,-722.39 438.08,-720.52 437.13,-727.67 430.16,-729.54"/>
<text text-anchor="middle" x="209.5" y="-1086" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCNormalize</text>
</g>
<!-- Node4 -->
<g id="node4" class="node">
<title>Node4</title>
<g id="a_node4"><a xlink:href="a00542.xhtml" target="_top" xlink:title="forward declaration">
<polygon fill="white" stroke="black" points="168,-1178.5 168,-1609.5 328,-1609.5 328,-1178.5 168,-1178.5"/>
<text text-anchor="middle" x="248" y="-1597.5" font-family="Helvetica,sans-Serif" font-size="10.00">CBlockAudioIf</text>
<polyline fill="none" stroke="black" points="168,-1590.5 328,-1590.5 "/>
<text text-anchor="start" x="176" y="-1578.5" font-family="Helvetica,sans-Serif" font-size="10.00"># long long m_iNumBlocks</text>
<text text-anchor="start" x="176" y="-1567.5" font-family="Helvetica,sans-Serif" font-size="10.00"># long long m_iCurrBlock</text>
<text text-anchor="start" x="176" y="-1556.5" font-family="Helvetica,sans-Serif" font-size="10.00"># long long m_iAudioLength</text>
<text text-anchor="start" x="176" y="-1545.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iBlockLength</text>
<text text-anchor="start" x="176" y="-1534.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iNumChannels</text>
<text text-anchor="start" x="176" y="-1523.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iHopLength</text>
<text text-anchor="start" x="176" y="-1512.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float m_fSampleRate</text>
<polyline fill="none" stroke="black" points="168,-1505.5 328,-1505.5 "/>
<text text-anchor="start" x="176" y="-1493.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ long long getNumBlocks</text>
<text text-anchor="start" x="176" y="-1482.5" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="176" y="-1471.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ long long getLengthInSamples</text>
<text text-anchor="start" x="176" y="-1460.5" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="176" y="-1449.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ float getTimeStamp</text>
<text text-anchor="start" x="176" y="-1438.5" font-family="Helvetica,sans-Serif" font-size="10.00">(long long iBlockIdx)</text>
<text text-anchor="start" x="176" y="-1427.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual bool isEndOfData</text>
<text text-anchor="start" x="176" y="-1416.5" font-family="Helvetica,sans-Serif" font-size="10.00">() const =0</text>
<text text-anchor="start" x="176" y="-1405.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual int getNextBlock</text>
<text text-anchor="start" x="176" y="-1394.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfBlock, float</text>
<text text-anchor="start" x="176" y="-1383.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfTimeStampInS=0)=0</text>
<text text-anchor="start" x="176" y="-1372.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="176" y="-1361.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CBlockAudioIf *&amp;pCInstance,</text>
<text text-anchor="start" x="176" y="-1350.5" font-family="Helvetica,sans-Serif" font-size="10.00"> CAudioFileIf *pCAudioFile,</text>
<text text-anchor="start" x="176" y="-1339.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iBlockLength, int iHopLength)</text>
<text text-anchor="start" x="176" y="-1328.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="176" y="-1317.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CBlockAudioIf *&amp;pCInstance,</text>
<text text-anchor="start" x="176" y="-1306.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const float *pfAudioBuff,</text>
<text text-anchor="start" x="176" y="-1295.5" font-family="Helvetica,sans-Serif" font-size="10.00"> long long iAudioLength, int</text>
<text text-anchor="start" x="176" y="-1284.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iBlockLength, int iHopLength,</text>
<text text-anchor="start" x="176" y="-1273.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate)</text>
<text text-anchor="start" x="176" y="-1262.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="176" y="-1251.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CBlockAudioIf *&amp;pCInstance)</text>
<text text-anchor="start" x="176" y="-1240.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CBlockAudioIf()</text>
<text text-anchor="start" x="176" y="-1229.5" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CBlockAudioIf()</text>
<text text-anchor="start" x="176" y="-1218.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CBlockAudioIf(const</text>
<text text-anchor="start" x="176" y="-1207.5" font-family="Helvetica,sans-Serif" font-size="10.00"> CBlockAudioIf &amp;that)</text>
<text text-anchor="start" x="176" y="-1196.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CBlockAudioIf &amp; operator</text>
<text text-anchor="start" x="176" y="-1185.5" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CBlockAudioIf &amp;c)</text>
</a>
</g>
</g>
<!-- Node4&#45;&gt;Node2 -->
<g id="edge3" class="edge">
<title>Node4&#45;&gt;Node2</title>
<path fill="none" stroke="#404040" d="M313.99,-1178.37C321.5,-1155.87 329.25,-1133.41 337,-1112 366.5,-1030.51 401.3,-942.74 433.81,-863.64"/>
<polygon fill="none" stroke="#404040" points="433.81,-863.64 432.4,-856.57 438.38,-852.54 439.8,-859.61 433.81,-863.64"/>
<text text-anchor="middle" x="389.5" y="-1086" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCBlockAudio</text>
</g>
<!-- Node5 -->
<g id="node5" class="node">
<title>Node5</title>
<g id="a_node5"><a xlink:href="a00518.xhtml" target="_top" xlink:title="class for computation of a Novelty from a block of data (e.g., time or magnitude spectrum)">
<polygon fill="white" stroke="black" points="346,-1112.5 346,-1675.5 534,-1675.5 534,-1112.5 346,-1112.5"/>
<text text-anchor="middle" x="440" y="-1663.5" font-family="Helvetica,sans-Serif" font-size="10.00">CNoveltyFromBlockIf</text>
<polyline fill="none" stroke="black" points="346,-1656.5 534,-1656.5 "/>
<text text-anchor="start" x="354" y="-1644.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CNoveltyIf::Novelty</text>
<text text-anchor="start" x="354" y="-1633.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t m_eNoveltyIdx</text>
<text text-anchor="start" x="354" y="-1622.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iDataLength</text>
<text text-anchor="start" x="354" y="-1611.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float m_fSampleRate</text>
<text text-anchor="start" x="354" y="-1600.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float * m_pfPrevSpec</text>
<text text-anchor="start" x="354" y="-1589.5" font-family="Helvetica,sans-Serif" font-size="10.00"># const std::map&lt; CNovelty</text>
<text text-anchor="start" x="354" y="-1578.5" font-family="Helvetica,sans-Serif" font-size="10.00">If::Novelty_t, std::function</text>
<text text-anchor="start" x="354" y="-1567.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; float(const float *, const</text>
<text text-anchor="start" x="354" y="-1556.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *, int, float)&gt; &gt; m_DispatchMap</text>
<polyline fill="none" stroke="black" points="346,-1549.5 534,-1549.5 "/>
<text text-anchor="start" x="354" y="-1537.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual int getNoveltyDimension</text>
<text text-anchor="start" x="354" y="-1526.5" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="354" y="-1515.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CNoveltyIf::Novelty</text>
<text text-anchor="start" x="354" y="-1504.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t getNoveltyIdx() const</text>
<text text-anchor="start" x="354" y="-1493.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Error_t compNovelty</text>
<text text-anchor="start" x="354" y="-1482.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfNovelty, const</text>
<text text-anchor="start" x="354" y="-1471.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfIn)</text>
<text text-anchor="start" x="354" y="-1460.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="354" y="-1449.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CNoveltyFromBlockIf</text>
<text text-anchor="start" x="354" y="-1438.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *&amp;pCInstance, CNoveltyIf</text>
<text text-anchor="start" x="354" y="-1427.5" font-family="Helvetica,sans-Serif" font-size="10.00">::Novelty_t eNoveltyIdx,</text>
<text text-anchor="start" x="354" y="-1416.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="354" y="-1405.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="354" y="-1394.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CNoveltyFromBlockIf *&amp;pCInstance)</text>
<text text-anchor="start" x="354" y="-1383.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compNovelty</text>
<text text-anchor="start" x="354" y="-1372.5" font-family="Helvetica,sans-Serif" font-size="10.00">Flux(const float *pfMagSpec,</text>
<text text-anchor="start" x="354" y="-1361.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const float *pfPrevSpec,</text>
<text text-anchor="start" x="354" y="-1350.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="354" y="-1339.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compNovelty</text>
<text text-anchor="start" x="354" y="-1328.5" font-family="Helvetica,sans-Serif" font-size="10.00">Hainsworth(const float</text>
<text text-anchor="start" x="354" y="-1317.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfMagSpec, const float</text>
<text text-anchor="start" x="354" y="-1306.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfPrevSpec, int iDataLength,</text>
<text text-anchor="start" x="354" y="-1295.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate=1.F)</text>
<text text-anchor="start" x="354" y="-1284.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compNovelty</text>
<text text-anchor="start" x="354" y="-1273.5" font-family="Helvetica,sans-Serif" font-size="10.00">Laroche(const float *pfMagSpec,</text>
<text text-anchor="start" x="354" y="-1262.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const float *pfPrevSpec, int</text>
<text text-anchor="start" x="354" y="-1251.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="354" y="-1240.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CNoveltyFromBlockIf()</text>
<text text-anchor="start" x="354" y="-1229.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CNoveltyFromBlockIf</text>
<text text-anchor="start" x="354" y="-1218.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CNoveltyIf::Novelty</text>
<text text-anchor="start" x="354" y="-1207.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t eNoveltyIdx, int iDataLength,</text>
<text text-anchor="start" x="354" y="-1196.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate)</text>
<text text-anchor="start" x="354" y="-1185.5" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CNoveltyFromBlockIf()</text>
<text text-anchor="start" x="354" y="-1174.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CNoveltyFromBlockIf</text>
<text text-anchor="start" x="354" y="-1163.5" font-family="Helvetica,sans-Serif" font-size="10.00">(const CNoveltyFromBlockIf</text>
<text text-anchor="start" x="354" y="-1152.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;that)</text>
<text text-anchor="start" x="354" y="-1141.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CNoveltyFromBlockIf</text>
<text text-anchor="start" x="354" y="-1130.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp; operator=(const CNovelty</text>
<text text-anchor="start" x="354" y="-1119.5" font-family="Helvetica,sans-Serif" font-size="10.00">FromBlockIf &amp;c)</text>
</a>
</g>
</g>
<!-- Node5&#45;&gt;Node2 -->
<g id="edge4" class="edge">
<title>Node5&#45;&gt;Node2</title>
<path fill="none" stroke="#404040" d="M476.82,-1112.37C486.06,-1041.95 495.99,-966.29 505.27,-895.54"/>
<polygon fill="none" stroke="#404040" points="505.31,-895.21 502.13,-888.74 506.88,-883.31 510.06,-889.78 505.31,-895.21"/>
<text text-anchor="middle" x="513.5" y="-1086" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCNovelty</text>
</g>
<!-- Node6 -->
<g id="node6" class="node">
<title>Node6</title>
<g id="a_node6"><a xlink:href="a00474.xhtml" target="_top" xlink:title="class for FFT computation with windowing">
<polygon fill="white" stroke="black" points="552,-1151 552,-1637 740,-1637 740,-1151 552,-1151"/>
<text text-anchor="middle" x="646" y="-1625" font-family="Helvetica,sans-Serif" font-size="10.00">CFft</text>
<polyline fill="none" stroke="black" points="552,-1618 740,-1618 "/>
<text text-anchor="start" x="560" y="-1606" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_pfProcBuff</text>
<text text-anchor="start" x="560" y="-1595" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_pfWindowBuff</text>
<text text-anchor="start" x="560" y="-1584" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iDataLength</text>
<text text-anchor="start" x="560" y="-1573" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iFftLength</text>
<text text-anchor="start" x="560" y="-1562" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Windowing_t m_ePrePostWindowOpt</text>
<text text-anchor="start" x="560" y="-1551" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; bool m_bIsInitialized</text>
<text text-anchor="start" x="560" y="-1540" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; static const float m_Pi</text>
<text text-anchor="start" x="560" y="-1529" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; static const float</text>
<text text-anchor="start" x="560" y="-1518" font-family="Helvetica,sans-Serif" font-size="10.00"> m_Pi2</text>
<polyline fill="none" stroke="black" points="552,-1511 740,-1511 "/>
<text text-anchor="start" x="560" y="-1499" font-family="Helvetica,sans-Serif" font-size="10.00">+ CFft()</text>
<text text-anchor="start" x="560" y="-1488" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CFft()</text>
<text text-anchor="start" x="560" y="-1477" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t init(int iBlockLength,</text>
<text text-anchor="start" x="560" y="-1466" font-family="Helvetica,sans-Serif" font-size="10.00"> int iZeroPadFactor=1, WindowFunction</text>
<text text-anchor="start" x="560" y="-1455" font-family="Helvetica,sans-Serif" font-size="10.00">_t eWindow=kWindowHann, Windowing</text>
<text text-anchor="start" x="560" y="-1444" font-family="Helvetica,sans-Serif" font-size="10.00">_t eWindowing=kPreWindow)</text>
<text text-anchor="start" x="560" y="-1433" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t reset()</text>
<text text-anchor="start" x="560" y="-1422" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t overrideWindow</text>
<text text-anchor="start" x="560" y="-1411" font-family="Helvetica,sans-Serif" font-size="10.00">(const float *pfNewWindow)</text>
<text text-anchor="start" x="560" y="-1400" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getWindow(float</text>
<text text-anchor="start" x="560" y="-1389" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfWindow) const</text>
<text text-anchor="start" x="560" y="-1378" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compFft(complex</text>
<text text-anchor="start" x="560" y="-1367" font-family="Helvetica,sans-Serif" font-size="10.00">_t *pfSpectrum, const</text>
<text text-anchor="start" x="560" y="-1356" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfIn)</text>
<text text-anchor="start" x="560" y="-1345" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compInvFft</text>
<text text-anchor="start" x="560" y="-1334" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfOut, const</text>
<text text-anchor="start" x="560" y="-1323" font-family="Helvetica,sans-Serif" font-size="10.00"> complex_t *pfSpectrum)</text>
<text text-anchor="start" x="560" y="-1312" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getMagnitude</text>
<text text-anchor="start" x="560" y="-1301" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfMag, const</text>
<text text-anchor="start" x="560" y="-1290" font-family="Helvetica,sans-Serif" font-size="10.00"> complex_t *pfSpectrum)</text>
<text text-anchor="start" x="560" y="-1279" font-family="Helvetica,sans-Serif" font-size="10.00"> const</text>
<text text-anchor="start" x="560" y="-1268" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getPhase(float</text>
<text text-anchor="start" x="560" y="-1257" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfPhase, const complex</text>
<text text-anchor="start" x="560" y="-1246" font-family="Helvetica,sans-Serif" font-size="10.00">_t *pfSpectrum) const</text>
<text text-anchor="start" x="560" y="-1235" font-family="Helvetica,sans-Serif" font-size="10.00">and 7 more...</text>
<text text-anchor="start" x="560" y="-1224" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CFft(const CFft &amp;that)</text>
<text text-anchor="start" x="560" y="-1213" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CFft &amp; operator=(const</text>
<text text-anchor="start" x="560" y="-1202" font-family="Helvetica,sans-Serif" font-size="10.00"> CFft &amp;c)</text>
<text text-anchor="start" x="560" y="-1191" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Error_t allocMemory_()</text>
<text text-anchor="start" x="560" y="-1180" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Error_t freeMemory_()</text>
<text text-anchor="start" x="560" y="-1169" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Error_t computeWindow</text>
<text text-anchor="start" x="560" y="-1158" font-family="Helvetica,sans-Serif" font-size="10.00">_(WindowFunction_t eWindow)</text>
</a>
</g>
</g>
<!-- Node6&#45;&gt;Node2 -->
<g id="edge5" class="edge">
<title>Node6&#45;&gt;Node2</title>
<path fill="none" stroke="#404040" d="M614.22,-1150.8C603.62,-1070 591.71,-979.2 580.7,-895.32"/>
<polygon fill="none" stroke="#404040" points="580.68,-895.16 575.93,-889.73 579.12,-883.26 583.86,-888.69 580.68,-895.16"/>
<text text-anchor="middle" x="630" y="-1086" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCFft</text>
</g>
<!-- Node7 -->
<g id="node7" class="node">
<title>Node7</title>
<g id="a_node7"><a xlink:href="a00586.xhtml" target="_top" xlink:title="class for moving average low pass filtering">
<polygon fill="white" stroke="black" points="758.5,-1239 758.5,-1549 917.5,-1549 917.5,-1239 758.5,-1239"/>
<text text-anchor="middle" x="838" y="-1537" font-family="Helvetica,sans-Serif" font-size="10.00">CMovingAverage</text>
<polyline fill="none" stroke="black" points="758.5,-1530 917.5,-1530 "/>
<text text-anchor="start" x="766.5" y="-1518" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float m_fPrevOut</text>
<polyline fill="none" stroke="black" points="758.5,-1511 917.5,-1511 "/>
<text text-anchor="start" x="766.5" y="-1499" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t setFilterParam</text>
<text text-anchor="start" x="766.5" y="-1488" font-family="Helvetica,sans-Serif" font-size="10.00">(int iFilterLength=64)</text>
<text text-anchor="start" x="766.5" y="-1477" font-family="Helvetica,sans-Serif" font-size="10.00">+ int getFilterParam</text>
<text text-anchor="start" x="766.5" y="-1466" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="766.5" y="-1455" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t process(float</text>
<text text-anchor="start" x="766.5" y="-1444" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfOut, const float</text>
<text text-anchor="start" x="766.5" y="-1433" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfIn, long long iLenBuff)</text>
<text text-anchor="start" x="766.5" y="-1422" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t reset()</text>
<text text-anchor="start" x="766.5" y="-1411" font-family="Helvetica,sans-Serif" font-size="10.00">+ void filtfilt(float</text>
<text text-anchor="start" x="766.5" y="-1400" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfOut, const float</text>
<text text-anchor="start" x="766.5" y="-1389" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfIn, long long iLenBuff)</text>
<text text-anchor="start" x="766.5" y="-1378" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="766.5" y="-1367" font-family="Helvetica,sans-Serif" font-size="10.00">(CMovingAverage *&amp;pCInstance)</text>
<text text-anchor="start" x="766.5" y="-1356" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="766.5" y="-1345" font-family="Helvetica,sans-Serif" font-size="10.00">(CMovingAverage *&amp;pCInstance)</text>
<text text-anchor="start" x="766.5" y="-1334" font-family="Helvetica,sans-Serif" font-size="10.00">+ static int calcFilterLength</text>
<text text-anchor="start" x="766.5" y="-1323" font-family="Helvetica,sans-Serif" font-size="10.00">(float fIntegrationTimeInS,</text>
<text text-anchor="start" x="766.5" y="-1312" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate)</text>
<text text-anchor="start" x="766.5" y="-1301" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CMovingAverage()</text>
<text text-anchor="start" x="766.5" y="-1290" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; virtual ~CMovingAverage()</text>
<text text-anchor="start" x="766.5" y="-1279" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CMovingAverage(const</text>
<text text-anchor="start" x="766.5" y="-1268" font-family="Helvetica,sans-Serif" font-size="10.00"> CMovingAverage &amp;that)</text>
<text text-anchor="start" x="766.5" y="-1257" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CMovingAverage &amp; operator</text>
<text text-anchor="start" x="766.5" y="-1246" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CMovingAverage &amp;c)</text>
</a>
</g>
</g>
<!-- Node7&#45;&gt;Node2 -->
<g id="edge6" class="edge">
<title>Node7&#45;&gt;Node2</title>
<path fill="none" stroke="#404040" d="M791.62,-1238.74C778.51,-1197.35 763.76,-1152.78 749,-1112 719.5,-1030.51 684.7,-942.74 652.19,-863.64"/>
<polygon fill="none" stroke="#404040" points="652.19,-863.64 646.2,-859.61 647.62,-852.54 653.6,-856.57 652.19,-863.64"/>
<text text-anchor="middle" x="772.5" y="-1086" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCLpFilter</text>
</g>
<!-- Node8 -->
<g id="node8" class="node">
<title>Node8</title>
<g id="a_node8"><a xlink:href="a00490.xhtml" target="_top" xlink:title=" ">
<polygon fill="white" stroke="black" points="771.5,-1723.5 771.5,-2088.5 904.5,-2088.5 904.5,-1723.5 771.5,-1723.5"/>
<text text-anchor="middle" x="838" y="-2076.5" font-family="Helvetica,sans-Serif" font-size="10.00">CRingBuffer&lt; float &gt;</text>
<polyline fill="none" stroke="black" points="771.5,-2069.5 904.5,-2069.5 "/>
<text text-anchor="start" x="779.5" y="-2057.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iBuffLength</text>
<text text-anchor="start" x="779.5" y="-2046.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iReadIdx</text>
<text text-anchor="start" x="779.5" y="-2035.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iWriteIdx</text>
<text text-anchor="start" x="779.5" y="-2024.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_ptBuff</text>
<polyline fill="none" stroke="black" points="771.5,-2017.5 904.5,-2017.5 "/>
<text text-anchor="start" x="779.5" y="-2005.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CRingBuffer(int iBuffer</text>
<text text-anchor="start" x="779.5" y="-1994.5" font-family="Helvetica,sans-Serif" font-size="10.00">LengthInSamples)</text>
<text text-anchor="start" x="779.5" y="-1983.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CRingBuffer()</text>
<text text-anchor="start" x="779.5" y="-1972.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void putPostInc(float</text>
<text text-anchor="start" x="779.5" y="-1961.5" font-family="Helvetica,sans-Serif" font-size="10.00"> tNewValue)</text>
<text text-anchor="start" x="779.5" y="-1950.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void putPostInc(const</text>
<text text-anchor="start" x="779.5" y="-1939.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *ptNewBuff, int</text>
<text text-anchor="start" x="779.5" y="-1928.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iLength)</text>
<text text-anchor="start" x="779.5" y="-1917.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void put(float tNewValue)</text>
<text text-anchor="start" x="779.5" y="-1906.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void put(const float</text>
<text text-anchor="start" x="779.5" y="-1895.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *ptNewBuff, int iLength)</text>
<text text-anchor="start" x="779.5" y="-1884.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ float getPostInc()</text>
<text text-anchor="start" x="779.5" y="-1873.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void getPostInc(float</text>
<text text-anchor="start" x="779.5" y="-1862.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *ptBuff, int iLength)</text>
<text text-anchor="start" x="779.5" y="-1851.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ float get(float fOffset</text>
<text text-anchor="start" x="779.5" y="-1840.5" font-family="Helvetica,sans-Serif" font-size="10.00">=0) const</text>
<text text-anchor="start" x="779.5" y="-1829.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void get(float *ptBuff,</text>
<text text-anchor="start" x="779.5" y="-1818.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iLength) const</text>
<text text-anchor="start" x="779.5" y="-1807.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 7 more...</text>
<text text-anchor="start" x="779.5" y="-1796.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CRingBuffer()</text>
<text text-anchor="start" x="779.5" y="-1785.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CRingBuffer(const</text>
<text text-anchor="start" x="779.5" y="-1774.5" font-family="Helvetica,sans-Serif" font-size="10.00"> CRingBuffer &amp;that)</text>
<text text-anchor="start" x="779.5" y="-1763.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CRingBuffer &amp; operator</text>
<text text-anchor="start" x="779.5" y="-1752.5" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CRingBuffer &amp;c)</text>
<text text-anchor="start" x="779.5" y="-1741.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; void incIdx(int &amp;iIdx,</text>
<text text-anchor="start" x="779.5" y="-1730.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iOffset=1)</text>
</a>
</g>
</g>
<!-- Node8&#45;&gt;Node7 -->
<g id="edge7" class="edge">
<title>Node8&#45;&gt;Node7</title>
<path fill="none" stroke="#404040" d="M838,-1723.4C838,-1670.56 838,-1613.13 838,-1561.29"/>
<polygon fill="none" stroke="#404040" points="838,-1561.28 834,-1555.28 838,-1549.28 842,-1555.28 838,-1561.28"/>
<text text-anchor="middle" x="872" y="-1697" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;m_pCRingBuff</text>
</g>
<!-- Node9 -->
<g id="node9" class="node">
<title>Node9</title>
<g id="a_node9"><a xlink:href="a00490.xhtml" target="_top" xlink:title="implement a circular buffer of type T">
<polygon fill="white" stroke="black" points="760.5,-2136.5 760.5,-2479.5 915.5,-2479.5 915.5,-2136.5 760.5,-2136.5"/>
<text text-anchor="middle" x="838" y="-2467.5" font-family="Helvetica,sans-Serif" font-size="10.00">CRingBuffer&lt; T &gt;</text>
<polyline fill="none" stroke="black" points="760.5,-2460.5 915.5,-2460.5 "/>
<text text-anchor="start" x="768.5" y="-2448.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iBuffLength</text>
<text text-anchor="start" x="768.5" y="-2437.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iReadIdx</text>
<text text-anchor="start" x="768.5" y="-2426.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iWriteIdx</text>
<text text-anchor="start" x="768.5" y="-2415.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; T * m_ptBuff</text>
<polyline fill="none" stroke="black" points="760.5,-2408.5 915.5,-2408.5 "/>
<text text-anchor="start" x="768.5" y="-2396.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CRingBuffer(int iBuffer</text>
<text text-anchor="start" x="768.5" y="-2385.5" font-family="Helvetica,sans-Serif" font-size="10.00">LengthInSamples)</text>
<text text-anchor="start" x="768.5" y="-2374.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CRingBuffer()</text>
<text text-anchor="start" x="768.5" y="-2363.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void putPostInc(T tNewValue)</text>
<text text-anchor="start" x="768.5" y="-2352.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void putPostInc(const</text>
<text text-anchor="start" x="768.5" y="-2341.5" font-family="Helvetica,sans-Serif" font-size="10.00"> T *ptNewBuff, int iLength)</text>
<text text-anchor="start" x="768.5" y="-2330.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void put(T tNewValue)</text>
<text text-anchor="start" x="768.5" y="-2319.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void put(const T *ptNewBuff,</text>
<text text-anchor="start" x="768.5" y="-2308.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iLength)</text>
<text text-anchor="start" x="768.5" y="-2297.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ T getPostInc()</text>
<text text-anchor="start" x="768.5" y="-2286.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void getPostInc(T *ptBuff,</text>
<text text-anchor="start" x="768.5" y="-2275.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iLength)</text>
<text text-anchor="start" x="768.5" y="-2264.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ T get(float fOffset</text>
<text text-anchor="start" x="768.5" y="-2253.5" font-family="Helvetica,sans-Serif" font-size="10.00">=0) const</text>
<text text-anchor="start" x="768.5" y="-2242.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void get(T *ptBuff,</text>
<text text-anchor="start" x="768.5" y="-2231.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iLength) const</text>
<text text-anchor="start" x="768.5" y="-2220.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 7 more...</text>
<text text-anchor="start" x="768.5" y="-2209.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CRingBuffer()</text>
<text text-anchor="start" x="768.5" y="-2198.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CRingBuffer(const</text>
<text text-anchor="start" x="768.5" y="-2187.5" font-family="Helvetica,sans-Serif" font-size="10.00"> CRingBuffer &amp;that)</text>
<text text-anchor="start" x="768.5" y="-2176.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CRingBuffer &amp; operator</text>
<text text-anchor="start" x="768.5" y="-2165.5" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CRingBuffer &amp;c)</text>
<text text-anchor="start" x="768.5" y="-2154.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; void incIdx(int &amp;iIdx,</text>
<text text-anchor="start" x="768.5" y="-2143.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iOffset=1)</text>
</a>
</g>
</g>
<!-- Node9&#45;&gt;Node8 -->
<g id="edge8" class="edge">
<title>Node9&#45;&gt;Node8</title>
<path fill="none" stroke="orange" d="M838,-2126.45C838,-2113.89 838,-2101.22 838,-2088.65"/>
<polygon fill="orange" stroke="orange" points="834.5,-2126.49 838,-2136.49 841.5,-2126.49 834.5,-2126.49"/>
<text text-anchor="middle" x="856.5" y="-2110" font-family="Helvetica,sans-Serif" font-size="10.00"> &lt; float &gt;</text>
</g>
<!-- Node10 -->
<g id="node10" class="node">
<title>Node10</title>
<g id="a_node10"><a xlink:href="a00442.xhtml" target="_top" xlink:title="open, read, and write audio files">
<polygon fill="white" stroke="black" points="797,-149.5 797,-1064.5 959,-1064.5 959,-149.5 797,-149.5"/>
<text text-anchor="middle" x="878" y="-1052.5" font-family="Helvetica,sans-Serif" font-size="10.00">CAudioFileIf</text>
<polyline fill="none" stroke="black" points="797,-1045.5 959,-1045.5 "/>
<text text-anchor="start" x="805" y="-1033.5" font-family="Helvetica,sans-Serif" font-size="10.00"># static const long long</text>
<text text-anchor="start" x="805" y="-1022.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int m_kiDefBlockLength</text>
<text text-anchor="start" x="805" y="-1011.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; FileIoType_t m_eIoType</text>
<text text-anchor="start" x="805" y="-1000.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; bool m_bWithClipping</text>
<text text-anchor="start" x="805" y="-989.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; bool m_bIsInitialized</text>
<text text-anchor="start" x="805" y="-978.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iNumBytesPerSample</text>
<polyline fill="none" stroke="black" points="797,-971.5 959,-971.5 "/>
<text text-anchor="start" x="805" y="-959.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Error_t reset</text>
<text text-anchor="start" x="805" y="-948.5" font-family="Helvetica,sans-Serif" font-size="10.00">(bool bFreeMemory=false)</text>
<text text-anchor="start" x="805" y="-937.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Error_t openFile</text>
<text text-anchor="start" x="805" y="-926.5" font-family="Helvetica,sans-Serif" font-size="10.00">(std::string cAudioFileName,</text>
<text text-anchor="start" x="805" y="-915.5" font-family="Helvetica,sans-Serif" font-size="10.00"> FileIoType_t eIoType, FileSpec</text>
<text text-anchor="start" x="805" y="-904.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t const *psFileSpec=0)=0</text>
<text text-anchor="start" x="805" y="-893.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Error_t closeFile()=0</text>
<text text-anchor="start" x="805" y="-882.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Error_t readData</text>
<text text-anchor="start" x="805" y="-871.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float **ppfAudioData,</text>
<text text-anchor="start" x="805" y="-860.5" font-family="Helvetica,sans-Serif" font-size="10.00"> long long int &amp;iNumFrames)</text>
<text text-anchor="start" x="805" y="-849.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Error_t writeData</text>
<text text-anchor="start" x="805" y="-838.5" font-family="Helvetica,sans-Serif" font-size="10.00">(const float *const *const</text>
<text text-anchor="start" x="805" y="-827.5" font-family="Helvetica,sans-Serif" font-size="10.00"> ppfAudioData, long long int</text>
<text text-anchor="start" x="805" y="-816.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iNumFrames)</text>
<text text-anchor="start" x="805" y="-805.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getFileSpec</text>
<text text-anchor="start" x="805" y="-794.5" font-family="Helvetica,sans-Serif" font-size="10.00">(FileSpec_t &amp;sFileSpec)</text>
<text text-anchor="start" x="805" y="-783.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Error_t setPosition</text>
<text text-anchor="start" x="805" y="-772.5" font-family="Helvetica,sans-Serif" font-size="10.00">(long long iFrame=0)</text>
<text text-anchor="start" x="805" y="-761.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t setPosition</text>
<text text-anchor="start" x="805" y="-750.5" font-family="Helvetica,sans-Serif" font-size="10.00">(double dTimeInS=.0)</text>
<text text-anchor="start" x="805" y="-739.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t setClippingEnabled</text>
<text text-anchor="start" x="805" y="-728.5" font-family="Helvetica,sans-Serif" font-size="10.00">(bool bisEnabled=true)</text>
<text text-anchor="start" x="805" y="-717.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ bool isClippingEnabled()</text>
<text text-anchor="start" x="805" y="-706.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 7 more...</text>
<text text-anchor="start" x="805" y="-695.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="805" y="-684.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CAudioFileIf *&amp;pCInstance)</text>
<text text-anchor="start" x="805" y="-673.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="805" y="-662.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CAudioFileIf *&amp;pCInstance)</text>
<text text-anchor="start" x="805" y="-651.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CAudioFileIf()</text>
<text text-anchor="start" x="805" y="-640.5" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CAudioFileIf()</text>
<text text-anchor="start" x="805" y="-629.5" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual Error_t freeMemory_()</text>
<text text-anchor="start" x="805" y="-618.5" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual Error_t allocMemory_()</text>
<text text-anchor="start" x="805" y="-607.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t setInitialized</text>
<text text-anchor="start" x="805" y="-596.5" font-family="Helvetica,sans-Serif" font-size="10.00">_(bool bInitialized=true)</text>
<text text-anchor="start" x="805" y="-585.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t setIoType_</text>
<text text-anchor="start" x="805" y="-574.5" font-family="Helvetica,sans-Serif" font-size="10.00">(FileIoType_t eIoType)</text>
<text text-anchor="start" x="805" y="-563.5" font-family="Helvetica,sans-Serif" font-size="10.00"># FileIoType_t getIoType</text>
<text text-anchor="start" x="805" y="-552.5" font-family="Helvetica,sans-Serif" font-size="10.00">_() const</text>
<text text-anchor="start" x="805" y="-541.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t setFileSpec</text>
<text text-anchor="start" x="805" y="-530.5" font-family="Helvetica,sans-Serif" font-size="10.00">_(const FileSpec_t *pFileSpec)</text>
<text text-anchor="start" x="805" y="-519.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int getNumChannels</text>
<text text-anchor="start" x="805" y="-508.5" font-family="Helvetica,sans-Serif" font-size="10.00">_() const</text>
<text text-anchor="start" x="805" y="-497.5" font-family="Helvetica,sans-Serif" font-size="10.00"># long long convFrames2Bytes</text>
<text text-anchor="start" x="805" y="-486.5" font-family="Helvetica,sans-Serif" font-size="10.00">_(long long iNumFrames)</text>
<text text-anchor="start" x="805" y="-475.5" font-family="Helvetica,sans-Serif" font-size="10.00"># long long convBytes2Frames</text>
<text text-anchor="start" x="805" y="-464.5" font-family="Helvetica,sans-Serif" font-size="10.00">_(long long iNumFrames)</text>
<text text-anchor="start" x="805" y="-453.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t setNumBytesPerSample</text>
<text text-anchor="start" x="805" y="-442.5" font-family="Helvetica,sans-Serif" font-size="10.00">_(int iNumBytes)</text>
<text text-anchor="start" x="805" y="-431.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int getNumBytesPerSample</text>
<text text-anchor="start" x="805" y="-420.5" font-family="Helvetica,sans-Serif" font-size="10.00">_() const</text>
<text text-anchor="start" x="805" y="-409.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int getNumBitsPerSample</text>
<text text-anchor="start" x="805" y="-398.5" font-family="Helvetica,sans-Serif" font-size="10.00">_() const</text>
<text text-anchor="start" x="805" y="-387.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float clip2Range_(float</text>
<text text-anchor="start" x="805" y="-376.5" font-family="Helvetica,sans-Serif" font-size="10.00"> fSample2Clip, float fMin,</text>
<text text-anchor="start" x="805" y="-365.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float fMax)</text>
<text text-anchor="start" x="805" y="-354.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CAudioFileIf(const</text>
<text text-anchor="start" x="805" y="-343.5" font-family="Helvetica,sans-Serif" font-size="10.00"> CAudioFileIf &amp;that)</text>
<text text-anchor="start" x="805" y="-332.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CAudioFileIf &amp; operator</text>
<text text-anchor="start" x="805" y="-321.5" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CAudioFileIf &amp;c)</text>
<text text-anchor="start" x="805" y="-310.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; virtual Error_t initDefaults_()</text>
<text text-anchor="start" x="805" y="-299.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; virtual long long int</text>
<text text-anchor="start" x="805" y="-288.5" font-family="Helvetica,sans-Serif" font-size="10.00"> readDataIntern_(float</text>
<text text-anchor="start" x="805" y="-277.5" font-family="Helvetica,sans-Serif" font-size="10.00"> **ppfAudioData, long long</text>
<text text-anchor="start" x="805" y="-266.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iLength)=0</text>
<text text-anchor="start" x="805" y="-255.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; virtual long long int</text>
<text text-anchor="start" x="805" y="-244.5" font-family="Helvetica,sans-Serif" font-size="10.00"> writeDataIntern_(const</text>
<text text-anchor="start" x="805" y="-233.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *const *const ppfAudioData,</text>
<text text-anchor="start" x="805" y="-222.5" font-family="Helvetica,sans-Serif" font-size="10.00"> long long int iLength)=0</text>
<text text-anchor="start" x="805" y="-211.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; virtual long long getLength</text>
<text text-anchor="start" x="805" y="-200.5" font-family="Helvetica,sans-Serif" font-size="10.00">Intern_()=0</text>
<text text-anchor="start" x="805" y="-189.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; virtual long long getPosition</text>
<text text-anchor="start" x="805" y="-178.5" font-family="Helvetica,sans-Serif" font-size="10.00">Intern_()=0</text>
<text text-anchor="start" x="805" y="-167.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; virtual Error_t setPosition</text>
<text text-anchor="start" x="805" y="-156.5" font-family="Helvetica,sans-Serif" font-size="10.00">Intern_(long long iFrame)=0</text>
</a>
</g>
</g>
<!-- Node10&#45;&gt;Node1 -->
<g id="edge9" class="edge">
<title>Node10&#45;&gt;Node1</title>
<path fill="none" stroke="#404040" d="M796.98,-414.18C752.42,-308.68 700.14,-184.92 669.68,-112.8"/>
<polygon fill="none" stroke="#404040" points="669.65,-112.73 663.63,-108.76 664.98,-101.68 671,-105.65 669.65,-112.73"/>
<text text-anchor="middle" x="709" y="-123" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;m_pCAudioFile</text>
</g>
<!-- Node11 -->
<g id="node11" class="node">
<title>Node11</title>
<g id="a_node11"><a xlink:href="a00446.xhtml" target="_top" xlink:title="structure containing basic data specs of the file">
<polygon fill="white" stroke="black" points="935.5,-1349 935.5,-1439 1084.5,-1439 1084.5,-1349 935.5,-1349"/>
<text text-anchor="middle" x="1010" y="-1427" font-family="Helvetica,sans-Serif" font-size="10.00">CAudioFileIf::FileSpec_t</text>
<polyline fill="none" stroke="black" points="935.5,-1420 1084.5,-1420 "/>
<text text-anchor="start" x="943.5" y="-1408" font-family="Helvetica,sans-Serif" font-size="10.00">+ FileFormat_t eFormat</text>
<text text-anchor="start" x="943.5" y="-1397" font-family="Helvetica,sans-Serif" font-size="10.00">+ BitStream_t eBitStreamType</text>
<text text-anchor="start" x="943.5" y="-1386" font-family="Helvetica,sans-Serif" font-size="10.00">+ int iNumChannels</text>
<text text-anchor="start" x="943.5" y="-1375" font-family="Helvetica,sans-Serif" font-size="10.00">+ float fSampleRateInHz</text>
<polyline fill="none" stroke="black" points="935.5,-1368 1084.5,-1368 "/>
<text text-anchor="middle" x="1010" y="-1356" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
</a>
</g>
</g>
<!-- Node11&#45;&gt;Node10 -->
<g id="edge10" class="edge">
<title>Node11&#45;&gt;Node10</title>
<path fill="none" stroke="#404040" d="M1002.57,-1348.83C993.1,-1292.49 975.67,-1188.82 956.78,-1076.51"/>
<polygon fill="none" stroke="#404040" points="956.76,-1076.39 951.82,-1071.14 954.77,-1064.56 959.71,-1069.81 956.76,-1076.39"/>
<text text-anchor="middle" x="997" y="-1086" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;m_CurrFileSpec</text>
</g>
</g>
</svg>
        <g id="navigator" transform="translate(0 0)" fill="#404254">
                <rect fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width=".5" x="0" y="0" width="60" height="60"/>
                <use id="zoomplus" xlink:href="#zoomPlus" x="17" y="9" onmousedown="handleZoom(evt,'in')"/>
                <use id="zoomminus" xlink:href="#zoomMin" x="42" y="9" onmousedown="handleZoom(evt,'out')"/>
                <use id="reset" xlink:href="#resetDef" x="30" y="36" onmousedown="handleReset()"/>
                <g id="arrowUp" xlink:href="#dirArrow" transform="translate(30 24)" onmousedown="handlePan(0,-1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowUp.mouseover" end="arrowUp.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowRight" xlink:href="#dirArrow" transform="rotate(90) translate(36 -43)" onmousedown="handlePan(1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowRight.mouseover" end="arrowRight.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowDown" xlink:href="#dirArrow" transform="rotate(180) translate(-30 -48)" onmousedown="handlePan(0,1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowDown.mouseover" end="arrowDown.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowLeft" xlink:href="#dirArrow" transform="rotate(270) translate(-36 17)" onmousedown="handlePan(-1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowLeft.mouseover" end="arrowLeft.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
        </g>
        <svg viewBox="0 0 15 15" width="100%" height="30px" preserveAspectRatio="xMaxYMin meet">
         <g id="arrow_out" transform="scale(0.3 0.3)">
          <a xlink:href="a00360_org.svg" target="_base">
           <rect id="button" ry="5" rx="5" y="6" x="6" height="38" width="38"
                fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width="1.0"/>
           <path id="arrow"
             d="M 11.500037,31.436501 C 11.940474,20.09759 22.043105,11.32322 32.158766,21.979434 L 37.068811,17.246167 C 37.068811,17.246167 37.088388,32 37.088388,32 L 22.160133,31.978069 C 22.160133,31.978069 26.997745,27.140456 26.997745,27.140456 C 18.528582,18.264221 13.291696,25.230495 11.500037,31.436501 z"
             style="fill:#404040;"/>
          </a>
         </g>
        </svg>
</svg>
