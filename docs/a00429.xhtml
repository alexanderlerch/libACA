<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.4"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ACA: CBeatHistoIf Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">ACA<span id="projectnumber">&#160;0.2.6</span>
   </div>
   <div id="projectbrief">Example Code for Audio Content Analysis</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.4 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search",'Search','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('a00429.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="a00426.xhtml">List of all members</a>  </div>
  <div class="headertitle"><div class="title">CBeatHistoIf Class Reference</div></div>
</div><!--header-->
<div class="contents">

<p>class for computation of a BeatHistogram from either a file or a vector  
 <a href="a00429.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="a00209_source.xhtml">BeatHisto.h</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for CBeatHistoIf:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00427.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-types" name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a7aa666694543decf41aa7c27a0593db0"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00429.xhtml#a7aa666694543decf41aa7c27a0593db0">BeatHisto_t</a> { <a class="el" href="a00429.xhtml#a7aa666694543decf41aa7c27a0593db0a304860b29c735c4c86af5c7a338c9690">kBeatHistoCorr</a>
, <a class="el" href="a00429.xhtml#a7aa666694543decf41aa7c27a0593db0af29c40beceb0046a659f26b95d7d4770">kBeatHistoFft</a>
, <a class="el" href="a00429.xhtml#a7aa666694543decf41aa7c27a0593db0a754b4876ef44ba0d9c29d8842dcf33c5">kNumBeatHistoComputations</a>
 }</td></tr>
<tr class="memdesc:a7aa666694543decf41aa7c27a0593db0"><td class="mdescLeft">&#160;</td><td class="mdescRight">enum to index all BeatHistogram computations  <a href="a00429.xhtml#a7aa666694543decf41aa7c27a0593db0">More...</a><br /></td></tr>
<tr class="separator:a7aa666694543decf41aa7c27a0593db0"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a00497d8ae052a8ce7125421c9615c573"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00110.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00429.xhtml#a00497d8ae052a8ce7125421c9615c573">getNumBins</a> (int &amp;iNumBeatHistoBins, <a class="el" href="a00429.xhtml#a7aa666694543decf41aa7c27a0593db0">BeatHisto_t</a> eBeatHistoComp) const</td></tr>
<tr class="separator:a00497d8ae052a8ce7125421c9615c573"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac757ed7ecb081dbf61745108165ee30b"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00429.xhtml#ac757ed7ecb081dbf61745108165ee30b">getNumBins</a> (<a class="el" href="a00429.xhtml#a7aa666694543decf41aa7c27a0593db0">BeatHisto_t</a> eBeatHistoComp) const</td></tr>
<tr class="separator:ac757ed7ecb081dbf61745108165ee30b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab14aabd3d1e26ba1f0c9ce1777eaddf9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00110.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00429.xhtml#ab14aabd3d1e26ba1f0c9ce1777eaddf9">getBeatHistoAxisTicks</a> (float *pfAxisTicks, <a class="el" href="a00429.xhtml#a7aa666694543decf41aa7c27a0593db0">BeatHisto_t</a> eBeatHistoComp) const</td></tr>
<tr class="separator:ab14aabd3d1e26ba1f0c9ce1777eaddf9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a58a9a3d685f448ced2e843a60028e472"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00110.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00429.xhtml#a58a9a3d685f448ced2e843a60028e472">compBeatHisto</a> (float *pfBeatHisto, <a class="el" href="a00429.xhtml#a7aa666694543decf41aa7c27a0593db0">BeatHisto_t</a> eBeatHistoComp=<a class="el" href="a00429.xhtml#a7aa666694543decf41aa7c27a0593db0af29c40beceb0046a659f26b95d7d4770">kBeatHistoFft</a>)</td></tr>
<tr class="separator:a58a9a3d685f448ced2e843a60028e472"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-static-methods" name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a9b3f72cb0d46466cf0aa38540b9980a5"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="a00110.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00429.xhtml#a9b3f72cb0d46466cf0aa38540b9980a5">create</a> (<a class="el" href="a00429.xhtml">CBeatHistoIf</a> *&amp;pCInstance, const std::string &amp;strAudioFilePath, int iBlockLength=1024, int iHopLength=8)</td></tr>
<tr class="separator:a9b3f72cb0d46466cf0aa38540b9980a5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4e26972ec7055aeb001f2134b322f0cf"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="a00110.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00429.xhtml#a4e26972ec7055aeb001f2134b322f0cf">create</a> (<a class="el" href="a00429.xhtml">CBeatHistoIf</a> *&amp;pCInstance, const float *pfAudio, long long iNumFrames, float fSampleRate, int iBlockLength=1024, int iHopLength=8)</td></tr>
<tr class="separator:a4e26972ec7055aeb001f2134b322f0cf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f773ad0baf325e182bd459c04ae7137"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="a00110.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00429.xhtml#a5f773ad0baf325e182bd459c04ae7137">destroy</a> (<a class="el" href="a00429.xhtml">CBeatHistoIf</a> *&amp;pCInstance)</td></tr>
<tr class="separator:a5f773ad0baf325e182bd459c04ae7137"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pro-methods" name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:ae90a9b79467cccffa52077c24cd58bb0"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00429.xhtml#ae90a9b79467cccffa52077c24cd58bb0">CBeatHistoIf</a> (int iBlockLength, int iHopLength, float fSampleRate)</td></tr>
<tr class="separator:ae90a9b79467cccffa52077c24cd58bb0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8f01f751ec6421639596d269783fbf52"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00429.xhtml#a8f01f751ec6421639596d269783fbf52">~CBeatHistoIf</a> ()</td></tr>
<tr class="separator:a8f01f751ec6421639596d269783fbf52"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a53999e2c9e0196840d7eeaaa83f89ec2"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00429.xhtml#a53999e2c9e0196840d7eeaaa83f89ec2">CBeatHistoIf</a> (const <a class="el" href="a00429.xhtml">CBeatHistoIf</a> &amp;that)</td></tr>
<tr class="separator:a53999e2c9e0196840d7eeaaa83f89ec2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af0731429bb1c7a5cb3ca22aa54bf163b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00429.xhtml">CBeatHistoIf</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00429.xhtml#af0731429bb1c7a5cb3ca22aa54bf163b">operator=</a> (const <a class="el" href="a00429.xhtml">CBeatHistoIf</a> &amp;c)</td></tr>
<tr class="separator:af0731429bb1c7a5cb3ca22aa54bf163b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3c3a39ab20e4ca9f1771bbd6f70327c9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00110.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00429.xhtml#a3c3a39ab20e4ca9f1771bbd6f70327c9">reset_</a> ()</td></tr>
<tr class="memdesc:a3c3a39ab20e4ca9f1771bbd6f70327c9"><td class="mdescLeft">&#160;</td><td class="mdescRight">reset configuration  <a href="a00429.xhtml#a3c3a39ab20e4ca9f1771bbd6f70327c9">More...</a><br /></td></tr>
<tr class="separator:a3c3a39ab20e4ca9f1771bbd6f70327c9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abc96a9de9093f6617510f4dbe02b82ce"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00110.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00429.xhtml#abc96a9de9093f6617510f4dbe02b82ce">init_</a> (const std::string &amp;strAudioFilePath)</td></tr>
<tr class="memdesc:abc96a9de9093f6617510f4dbe02b82ce"><td class="mdescLeft">&#160;</td><td class="mdescRight">init configuration  <a href="a00429.xhtml#abc96a9de9093f6617510f4dbe02b82ce">More...</a><br /></td></tr>
<tr class="separator:abc96a9de9093f6617510f4dbe02b82ce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0a5fdbe7279508cf8164587ffa41c76d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00110.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00429.xhtml#a0a5fdbe7279508cf8164587ffa41c76d">init_</a> (const float *pfAudio, long long iNumFrames, float fSampleRate)</td></tr>
<tr class="memdesc:a0a5fdbe7279508cf8164587ffa41c76d"><td class="mdescLeft">&#160;</td><td class="mdescRight">init configuration  <a href="a00429.xhtml#a0a5fdbe7279508cf8164587ffa41c76d">More...</a><br /></td></tr>
<tr class="separator:a0a5fdbe7279508cf8164587ffa41c76d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6932e0fb367cea8c959aa99f8f07f585"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00429.xhtml#a6932e0fb367cea8c959aa99f8f07f585">compHistoRange_</a> (int &amp;istartIdx, int &amp;istopIdx, <a class="el" href="a00429.xhtml#a7aa666694543decf41aa7c27a0593db0">BeatHisto_t</a> eBeatHistoComp) const</td></tr>
<tr class="separator:a6932e0fb367cea8c959aa99f8f07f585"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pro-attribs" name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:ad8450929df77fce9b3792cba35040ae1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00449.xhtml">CFft</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00429.xhtml#ad8450929df77fce9b3792cba35040ae1">m_pCFft</a> = 0</td></tr>
<tr class="memdesc:ad8450929df77fce9b3792cba35040ae1"><td class="mdescLeft">&#160;</td><td class="mdescRight">fft instance  <a href="a00429.xhtml#ad8450929df77fce9b3792cba35040ae1">More...</a><br /></td></tr>
<tr class="separator:ad8450929df77fce9b3792cba35040ae1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a23b9ad80b0361e06678d1d661b85b963"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00517.xhtml">CCcf</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00429.xhtml#a23b9ad80b0361e06678d1d661b85b963">m_pCCcf</a> = 0</td></tr>
<tr class="memdesc:a23b9ad80b0361e06678d1d661b85b963"><td class="mdescLeft">&#160;</td><td class="mdescRight">correlation instance  <a href="a00429.xhtml#a23b9ad80b0361e06678d1d661b85b963">More...</a><br /></td></tr>
<tr class="separator:a23b9ad80b0361e06678d1d661b85b963"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9738952cf5af0bff317560bc5e074c57"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00489.xhtml">CNoveltyIf</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00429.xhtml#a9738952cf5af0bff317560bc5e074c57">m_pCNovelty</a> = 0</td></tr>
<tr class="memdesc:a9738952cf5af0bff317560bc5e074c57"><td class="mdescLeft">&#160;</td><td class="mdescRight">novelty function extraction instance  <a href="a00429.xhtml#a9738952cf5af0bff317560bc5e074c57">More...</a><br /></td></tr>
<tr class="separator:a9738952cf5af0bff317560bc5e074c57"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af1432b150aab8520153aea2490f331b0"><td class="memItemLeft" align="right" valign="top">float *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00429.xhtml#af1432b150aab8520153aea2490f331b0">m_pfNovelty</a> = 0</td></tr>
<tr class="memdesc:af1432b150aab8520153aea2490f331b0"><td class="mdescLeft">&#160;</td><td class="mdescRight">buffer to hold extracted nvelty function  <a href="a00429.xhtml#af1432b150aab8520153aea2490f331b0">More...</a><br /></td></tr>
<tr class="separator:af1432b150aab8520153aea2490f331b0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a55206ff18aa3617308745c9e515cfa5c"><td class="memItemLeft" align="right" valign="top">float *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00429.xhtml#a55206ff18aa3617308745c9e515cfa5c">m_pfProcessBuff</a> = 0</td></tr>
<tr class="memdesc:a55206ff18aa3617308745c9e515cfa5c"><td class="mdescLeft">&#160;</td><td class="mdescRight">temporary processing buffer  <a href="a00429.xhtml#a55206ff18aa3617308745c9e515cfa5c">More...</a><br /></td></tr>
<tr class="separator:a55206ff18aa3617308745c9e515cfa5c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adcaa3e0a45439d92a33610cb7225412e"><td class="memItemLeft" align="right" valign="top">float *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00429.xhtml#adcaa3e0a45439d92a33610cb7225412e">m_pfBeatHisto</a> = 0</td></tr>
<tr class="memdesc:adcaa3e0a45439d92a33610cb7225412e"><td class="mdescLeft">&#160;</td><td class="mdescRight">result buffer  <a href="a00429.xhtml#adcaa3e0a45439d92a33610cb7225412e">More...</a><br /></td></tr>
<tr class="separator:adcaa3e0a45439d92a33610cb7225412e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6d8c73e7cf2472b693ea75221a71ba2c"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00429.xhtml#a6d8c73e7cf2472b693ea75221a71ba2c">m_iBlockLength</a> = 0</td></tr>
<tr class="memdesc:a6d8c73e7cf2472b693ea75221a71ba2c"><td class="mdescLeft">&#160;</td><td class="mdescRight">processing block length for novelty  <a href="a00429.xhtml#a6d8c73e7cf2472b693ea75221a71ba2c">More...</a><br /></td></tr>
<tr class="separator:a6d8c73e7cf2472b693ea75221a71ba2c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac27abc244b47d4f1e5cde9f98453260a"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00429.xhtml#ac27abc244b47d4f1e5cde9f98453260a">m_iHopLength</a> = 0</td></tr>
<tr class="memdesc:ac27abc244b47d4f1e5cde9f98453260a"><td class="mdescLeft">&#160;</td><td class="mdescRight">hop length for novelty  <a href="a00429.xhtml#ac27abc244b47d4f1e5cde9f98453260a">More...</a><br /></td></tr>
<tr class="separator:ac27abc244b47d4f1e5cde9f98453260a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8ff01782c75c39706e46a035b557479f"><td class="memItemLeft" align="right" valign="top">const int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00429.xhtml#a8ff01782c75c39706e46a035b557479f">m_iBeatHistoLength</a> = 65536</td></tr>
<tr class="memdesc:a8ff01782c75c39706e46a035b557479f"><td class="mdescLeft">&#160;</td><td class="mdescRight">default length of FFT  <a href="a00429.xhtml#a8ff01782c75c39706e46a035b557479f">More...</a><br /></td></tr>
<tr class="separator:a8ff01782c75c39706e46a035b557479f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abbfa62374a59a0f7a967bc9d275669b0"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00429.xhtml#abbfa62374a59a0f7a967bc9d275669b0">m_fSampleRate</a> = 0</td></tr>
<tr class="memdesc:abbfa62374a59a0f7a967bc9d275669b0"><td class="mdescLeft">&#160;</td><td class="mdescRight">sample rate  <a href="a00429.xhtml#abbfa62374a59a0f7a967bc9d275669b0">More...</a><br /></td></tr>
<tr class="separator:abbfa62374a59a0f7a967bc9d275669b0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa1412f9c268dde46889e7642512bdb76"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00227.xhtml#abb452686968e48b67397da5f97445f5b">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00429.xhtml#aa1412f9c268dde46889e7642512bdb76">m_bIsInitialized</a> = <a class="el" href="a00227.xhtml#a65e9886d74aaee76545e83dd09011727">false</a></td></tr>
<tr class="memdesc:aa1412f9c268dde46889e7642512bdb76"><td class="mdescLeft">&#160;</td><td class="mdescRight">true if initialized  <a href="a00429.xhtml#aa1412f9c268dde46889e7642512bdb76">More...</a><br /></td></tr>
<tr class="separator:aa1412f9c268dde46889e7642512bdb76"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p >class for computation of a BeatHistogram from either a file or a vector </p>

<p class="definition">Definition at line <a class="el" href="a00209_source.xhtml#l00015">15</a> of file <a class="el" href="a00209_source.xhtml">BeatHisto.h</a>.</p>
</div><h2 class="groupheader">Member Enumeration Documentation</h2>
<a id="a7aa666694543decf41aa7c27a0593db0" name="a7aa666694543decf41aa7c27a0593db0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7aa666694543decf41aa7c27a0593db0">&#9670;&nbsp;</a></span>BeatHisto_t</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="a00429.xhtml#a7aa666694543decf41aa7c27a0593db0">CBeatHistoIf::BeatHisto_t</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>enum to index all BeatHistogram computations </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="a7aa666694543decf41aa7c27a0593db0a304860b29c735c4c86af5c7a338c9690" name="a7aa666694543decf41aa7c27a0593db0a304860b29c735c4c86af5c7a338c9690"></a>kBeatHistoCorr&#160;</td><td class="fielddoc"><p >use correlation based method </p>
</td></tr>
<tr><td class="fieldname"><a id="a7aa666694543decf41aa7c27a0593db0af29c40beceb0046a659f26b95d7d4770" name="a7aa666694543decf41aa7c27a0593db0af29c40beceb0046a659f26b95d7d4770"></a>kBeatHistoFft&#160;</td><td class="fielddoc"><p >use FFT based method </p>
</td></tr>
<tr><td class="fieldname"><a id="a7aa666694543decf41aa7c27a0593db0a754b4876ef44ba0d9c29d8842dcf33c5" name="a7aa666694543decf41aa7c27a0593db0a754b4876ef44ba0d9c29d8842dcf33c5"></a>kNumBeatHistoComputations&#160;</td><td class="fielddoc"></td></tr>
</table>

<p class="definition">Definition at line <a class="el" href="a00209_source.xhtml#l00020">20</a> of file <a class="el" href="a00209_source.xhtml">BeatHisto.h</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   21</span>    {</div>
<div class="line"><span class="lineno">   22</span>        <a class="code hl_enumvalue" href="a00429.xhtml#a7aa666694543decf41aa7c27a0593db0a304860b29c735c4c86af5c7a338c9690">kBeatHistoCorr</a>, <span class="comment">//!&lt; use correlation based method</span></div>
<div class="line"><span class="lineno">   23</span>        <a class="code hl_enumvalue" href="a00429.xhtml#a7aa666694543decf41aa7c27a0593db0af29c40beceb0046a659f26b95d7d4770">kBeatHistoFft</a>, <span class="comment">//!&lt; use FFT based method</span></div>
<div class="line"><span class="lineno">   24</span> </div>
<div class="line"><span class="lineno">   25</span>        <a class="code hl_enumvalue" href="a00429.xhtml#a7aa666694543decf41aa7c27a0593db0a754b4876ef44ba0d9c29d8842dcf33c5">kNumBeatHistoComputations</a></div>
<div class="line"><span class="lineno">   26</span>    };</div>
<div class="ttc" id="aa00429_xhtml_a7aa666694543decf41aa7c27a0593db0a304860b29c735c4c86af5c7a338c9690"><div class="ttname"><a href="a00429.xhtml#a7aa666694543decf41aa7c27a0593db0a304860b29c735c4c86af5c7a338c9690">CBeatHistoIf::kBeatHistoCorr</a></div><div class="ttdeci">@ kBeatHistoCorr</div><div class="ttdoc">use correlation based method</div><div class="ttdef"><b>Definition:</b> <a href="a00209_source.xhtml#l00022">BeatHisto.h:22</a></div></div>
<div class="ttc" id="aa00429_xhtml_a7aa666694543decf41aa7c27a0593db0a754b4876ef44ba0d9c29d8842dcf33c5"><div class="ttname"><a href="a00429.xhtml#a7aa666694543decf41aa7c27a0593db0a754b4876ef44ba0d9c29d8842dcf33c5">CBeatHistoIf::kNumBeatHistoComputations</a></div><div class="ttdeci">@ kNumBeatHistoComputations</div><div class="ttdef"><b>Definition:</b> <a href="a00209_source.xhtml#l00026">BeatHisto.h:25</a></div></div>
<div class="ttc" id="aa00429_xhtml_a7aa666694543decf41aa7c27a0593db0af29c40beceb0046a659f26b95d7d4770"><div class="ttname"><a href="a00429.xhtml#a7aa666694543decf41aa7c27a0593db0af29c40beceb0046a659f26b95d7d4770">CBeatHistoIf::kBeatHistoFft</a></div><div class="ttdeci">@ kBeatHistoFft</div><div class="ttdoc">use FFT based method</div><div class="ttdef"><b>Definition:</b> <a href="a00209_source.xhtml#l00023">BeatHisto.h:23</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="ae90a9b79467cccffa52077c24cd58bb0" name="ae90a9b79467cccffa52077c24cd58bb0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae90a9b79467cccffa52077c24cd58bb0">&#9670;&nbsp;</a></span>CBeatHistoIf() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">CBeatHistoIf::CBeatHistoIf </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>iBlockLength</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>iHopLength</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fSampleRate</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">explicit</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="a00209_source.xhtml#l00082">82</a> of file <a class="el" href="a00209_source.xhtml">BeatHisto.h</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   82</span>                                                                               :</div>
<div class="line"><span class="lineno">   83</span>        <a class="code hl_variable" href="a00429.xhtml#a6d8c73e7cf2472b693ea75221a71ba2c">m_iBlockLength</a>(iBlockLength), </div>
<div class="line"><span class="lineno">   84</span>        <a class="code hl_variable" href="a00429.xhtml#ac27abc244b47d4f1e5cde9f98453260a">m_iHopLength</a>(iHopLength), </div>
<div class="line"><span class="lineno">   85</span>        <a class="code hl_variable" href="a00429.xhtml#abbfa62374a59a0f7a967bc9d275669b0">m_fSampleRate</a>(fSampleRate)</div>
<div class="line"><span class="lineno">   86</span>    {};</div>
<div class="ttc" id="aa00429_xhtml_a6d8c73e7cf2472b693ea75221a71ba2c"><div class="ttname"><a href="a00429.xhtml#a6d8c73e7cf2472b693ea75221a71ba2c">CBeatHistoIf::m_iBlockLength</a></div><div class="ttdeci">int m_iBlockLength</div><div class="ttdoc">processing block length for novelty</div><div class="ttdef"><b>Definition:</b> <a href="a00209_source.xhtml#l00107">BeatHisto.h:107</a></div></div>
<div class="ttc" id="aa00429_xhtml_abbfa62374a59a0f7a967bc9d275669b0"><div class="ttname"><a href="a00429.xhtml#abbfa62374a59a0f7a967bc9d275669b0">CBeatHistoIf::m_fSampleRate</a></div><div class="ttdeci">float m_fSampleRate</div><div class="ttdoc">sample rate</div><div class="ttdef"><b>Definition:</b> <a href="a00209_source.xhtml#l00112">BeatHisto.h:112</a></div></div>
<div class="ttc" id="aa00429_xhtml_ac27abc244b47d4f1e5cde9f98453260a"><div class="ttname"><a href="a00429.xhtml#ac27abc244b47d4f1e5cde9f98453260a">CBeatHistoIf::m_iHopLength</a></div><div class="ttdeci">int m_iHopLength</div><div class="ttdoc">hop length for novelty</div><div class="ttdef"><b>Definition:</b> <a href="a00209_source.xhtml#l00108">BeatHisto.h:108</a></div></div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="a00080_source.xhtml#l00019">create()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00429_ae90a9b79467cccffa52077c24cd58bb0_icgraph.svg" width="475" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a8f01f751ec6421639596d269783fbf52" name="a8f01f751ec6421639596d269783fbf52"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8f01f751ec6421639596d269783fbf52">&#9670;&nbsp;</a></span>~CBeatHistoIf()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">CBeatHistoIf::~CBeatHistoIf </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="a00080_source.xhtml#l00014">14</a> of file <a class="el" href="a00080_source.xhtml">BeatHisto.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   15</span>{</div>
<div class="line"><span class="lineno">   16</span>    <a class="code hl_function" href="a00429.xhtml#a3c3a39ab20e4ca9f1771bbd6f70327c9">reset_</a>();</div>
<div class="line"><span class="lineno">   17</span>}</div>
<div class="ttc" id="aa00429_xhtml_a3c3a39ab20e4ca9f1771bbd6f70327c9"><div class="ttname"><a href="a00429.xhtml#a3c3a39ab20e4ca9f1771bbd6f70327c9">CBeatHistoIf::reset_</a></div><div class="ttdeci">Error_t reset_()</div><div class="ttdoc">reset configuration</div><div class="ttdef"><b>Definition:</b> <a href="a00080_source.xhtml#l00210">BeatHisto.cpp:210</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00080_source.xhtml#l00210">reset_()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00429_a8f01f751ec6421639596d269783fbf52_cgraph.svg" width="562" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a53999e2c9e0196840d7eeaaa83f89ec2" name="a53999e2c9e0196840d7eeaaa83f89ec2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a53999e2c9e0196840d7eeaaa83f89ec2">&#9670;&nbsp;</a></span>CBeatHistoIf() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">CBeatHistoIf::CBeatHistoIf </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="a00429.xhtml">CBeatHistoIf</a> &amp;&#160;</td>
          <td class="paramname"><em>that</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a58a9a3d685f448ced2e843a60028e472" name="a58a9a3d685f448ced2e843a60028e472"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a58a9a3d685f448ced2e843a60028e472">&#9670;&nbsp;</a></span>compBeatHisto()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00110.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> CBeatHistoIf::compBeatHisto </td>
          <td>(</td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>pfBeatHisto</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="a00429.xhtml#a7aa666694543decf41aa7c27a0593db0">BeatHisto_t</a>&#160;</td>
          <td class="paramname"><em>eBeatHistoComp</em> = <code><a class="el" href="a00429.xhtml#a7aa666694543decf41aa7c27a0593db0af29c40beceb0046a659f26b95d7d4770">kBeatHistoFft</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >performs the BeatHisto computation for 1 dimensional BeatHistos and writes the result </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pfBeatHisto</td><td>(user-allocated, to be written, dimensions from <a class="el" href="a00429.xhtml#a00497d8ae052a8ce7125421c9615c573">CBeatHistoIf::getNumBins</a>) </td></tr>
    <tr><td class="paramname">eBeatHistoComp</td><td>computation method </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Error_t </dd></dl>

<p class="definition">Definition at line <a class="el" href="a00080_source.xhtml#l00113">113</a> of file <a class="el" href="a00080_source.xhtml">BeatHisto.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  114</span>{</div>
<div class="line"><span class="lineno">  115</span>    <span class="keywordflow">if</span> (!<a class="code hl_variable" href="a00429.xhtml#aa1412f9c268dde46889e7642512bdb76">m_bIsInitialized</a>)</div>
<div class="line"><span class="lineno">  116</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00110.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fad7652bf47cff43c21f12cb7df4ca66ec">Error_t::kFunctionIllegalCallError</a>;</div>
<div class="line"><span class="lineno">  117</span>    <span class="keywordflow">if</span> (!pfBeatHisto)</div>
<div class="line"><span class="lineno">  118</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00110.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248">Error_t::kFunctionInvalidArgsError</a>;</div>
<div class="line"><span class="lineno">  119</span> </div>
<div class="line"><span class="lineno">  120</span>    <a class="code hl_class" href="a00513.xhtml">CBlockAudioIf</a>* pCBlock = 0;</div>
<div class="line"><span class="lineno">  121</span>    <span class="keywordtype">int</span> aiBeatHistoRange[2] = { 0,0 };</div>
<div class="line"><span class="lineno">  122</span> </div>
<div class="line"><span class="lineno">  123</span>    <span class="keywordtype">int</span> iBeatHistoLength = <a class="code hl_function" href="a00429.xhtml#a00497d8ae052a8ce7125421c9615c573">getNumBins</a>(eBeatHistoComp);</div>
<div class="line"><span class="lineno">  124</span>    <span class="keywordtype">int</span> iHopSize = <a class="code hl_variable" href="a00429.xhtml#a8ff01782c75c39706e46a035b557479f">m_iBeatHistoLength</a> &gt;&gt; 2;</div>
<div class="line"><span class="lineno">  125</span> </div>
<div class="line"><span class="lineno">  126</span>    assert(iHopSize &gt; 0);</div>
<div class="line"><span class="lineno">  127</span> </div>
<div class="line"><span class="lineno">  128</span>    <a class="code hl_variable" href="a00429.xhtml#a9738952cf5af0bff317560bc5e074c57">m_pCNovelty</a>-&gt;<a class="code hl_function" href="a00489.xhtml#a9f110985f86064fa24aa3157bfd5cab0">compNovelty</a>(<a class="code hl_variable" href="a00429.xhtml#af1432b150aab8520153aea2490f331b0">m_pfNovelty</a>);</div>
<div class="line"><span class="lineno">  129</span> </div>
<div class="line"><span class="lineno">  130</span>    <span class="comment">// create a blocking instance to use it on the Novelty function</span></div>
<div class="line"><span class="lineno">  131</span>    <a class="code hl_function" href="a00513.xhtml#a84f0c2bf28007ef7749ab0e90c8011d2">CBlockAudioIf::create</a>(pCBlock, <a class="code hl_variable" href="a00429.xhtml#af1432b150aab8520153aea2490f331b0">m_pfNovelty</a>, <a class="code hl_variable" href="a00429.xhtml#a9738952cf5af0bff317560bc5e074c57">m_pCNovelty</a>-&gt;<a class="code hl_function" href="a00489.xhtml#aa4193070cac8cac64ad8dc222fb612e8">getNumBlocks</a>(), <a class="code hl_variable" href="a00429.xhtml#a8ff01782c75c39706e46a035b557479f">m_iBeatHistoLength</a>, iHopSize, <a class="code hl_variable" href="a00429.xhtml#abbfa62374a59a0f7a967bc9d275669b0">m_fSampleRate</a> / <a class="code hl_variable" href="a00429.xhtml#ac27abc244b47d4f1e5cde9f98453260a">m_iHopLength</a>);</div>
<div class="line"><span class="lineno">  132</span>    <span class="keywordtype">long</span> <span class="keywordtype">long</span> iNumBlocks = pCBlock-&gt;<a class="code hl_function" href="a00513.xhtml#a595b3a391e2540a1dc9e53edf8634494">getNumBlocks</a>();</div>
<div class="line"><span class="lineno">  133</span> </div>
<div class="line"><span class="lineno">  134</span>    <span class="keywordflow">if</span> (eBeatHistoComp == <a class="code hl_enumvalue" href="a00429.xhtml#a7aa666694543decf41aa7c27a0593db0a304860b29c735c4c86af5c7a338c9690">kBeatHistoCorr</a>)</div>
<div class="line"><span class="lineno">  135</span>    {</div>
<div class="line"><span class="lineno">  136</span>        <a class="code hl_class" href="a00517.xhtml">CCcf</a>* pCAcf = <span class="keyword">new</span> <a class="code hl_class" href="a00517.xhtml">CCcf</a>();</div>
<div class="line"><span class="lineno">  137</span> </div>
<div class="line"><span class="lineno">  138</span>        <span class="comment">// create correlation instance with zeropadding</span></div>
<div class="line"><span class="lineno">  139</span>        pCAcf-&gt;<a class="code hl_function" href="a00517.xhtml#af683b1b5e37ca2039424af02f4bfb3c5">init</a>(<a class="code hl_variable" href="a00429.xhtml#a8ff01782c75c39706e46a035b557479f">m_iBeatHistoLength</a>);</div>
<div class="line"><span class="lineno">  140</span> </div>
<div class="line"><span class="lineno">  141</span>        <span class="comment">// loop over novelty functions with hopsize</span></div>
<div class="line"><span class="lineno">  142</span>        <a class="code hl_function" href="a00477.xhtml#a6dbb3f9f480568b60f7fe50090d20003">CVector::setZero</a>(<a class="code hl_variable" href="a00429.xhtml#adcaa3e0a45439d92a33610cb7225412e">m_pfBeatHisto</a>, <a class="code hl_variable" href="a00429.xhtml#a8ff01782c75c39706e46a035b557479f">m_iBeatHistoLength</a>);</div>
<div class="line"><span class="lineno">  143</span>        <span class="keywordflow">for</span> (<span class="keyword">auto</span> n = 0; n &lt; iNumBlocks; n++)</div>
<div class="line"><span class="lineno">  144</span>        {</div>
<div class="line"><span class="lineno">  145</span>            <span class="comment">// get next novelty block</span></div>
<div class="line"><span class="lineno">  146</span>            pCBlock-&gt;<a class="code hl_function" href="a00513.xhtml#a531920b36b04ecdb562bfbb09dd2e856">getNextBlock</a>(<a class="code hl_variable" href="a00429.xhtml#a55206ff18aa3617308745c9e515cfa5c">m_pfProcessBuff</a>);</div>
<div class="line"><span class="lineno">  147</span> </div>
<div class="line"><span class="lineno">  148</span>            <span class="comment">// compute magnitude spectrum</span></div>
<div class="line"><span class="lineno">  149</span>            pCAcf-&gt;<a class="code hl_function" href="a00517.xhtml#a4d7d19dd39b24147d9a1fab5d7e05257">compCcf</a>(<a class="code hl_variable" href="a00429.xhtml#a55206ff18aa3617308745c9e515cfa5c">m_pfProcessBuff</a>, <a class="code hl_variable" href="a00429.xhtml#a55206ff18aa3617308745c9e515cfa5c">m_pfProcessBuff</a>);</div>
<div class="line"><span class="lineno">  150</span>            pCAcf-&gt;<a class="code hl_function" href="a00517.xhtml#a02c0e23cbcecab5af2fb20a25160321a">getCcf</a>(<a class="code hl_variable" href="a00429.xhtml#a55206ff18aa3617308745c9e515cfa5c">m_pfProcessBuff</a>, <span class="keyword">true</span>);</div>
<div class="line"><span class="lineno">  151</span> </div>
<div class="line"><span class="lineno">  152</span>            <span class="comment">// accumulate average spectrum</span></div>
<div class="line"><span class="lineno">  153</span>            <a class="code hl_function" href="a00477.xhtml#a3a052b83e62e5c5cc44829c64ffe42eb">CVector::add_I</a>(<a class="code hl_variable" href="a00429.xhtml#adcaa3e0a45439d92a33610cb7225412e">m_pfBeatHisto</a>, <a class="code hl_variable" href="a00429.xhtml#a55206ff18aa3617308745c9e515cfa5c">m_pfProcessBuff</a>, <a class="code hl_variable" href="a00429.xhtml#a8ff01782c75c39706e46a035b557479f">m_iBeatHistoLength</a>);</div>
<div class="line"><span class="lineno">  154</span>        }</div>
<div class="line"><span class="lineno">  155</span> </div>
<div class="line"><span class="lineno">  156</span>        <a class="code hl_function" href="a00477.xhtml#a16455e414da1bc89417716b46b212ab9">CVector::flip_I</a>(<a class="code hl_variable" href="a00429.xhtml#adcaa3e0a45439d92a33610cb7225412e">m_pfBeatHisto</a>, <a class="code hl_variable" href="a00429.xhtml#a8ff01782c75c39706e46a035b557479f">m_iBeatHistoLength</a>);</div>
<div class="line"><span class="lineno">  157</span> </div>
<div class="line"><span class="lineno">  158</span>        <span class="comment">// destroy correlation instance</span></div>
<div class="line"><span class="lineno">  159</span>        <span class="keyword">delete</span> pCAcf;</div>
<div class="line"><span class="lineno">  160</span>    }</div>
<div class="line"><span class="lineno">  161</span>    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (eBeatHistoComp == <a class="code hl_enumvalue" href="a00429.xhtml#a7aa666694543decf41aa7c27a0593db0af29c40beceb0046a659f26b95d7d4770">kBeatHistoFft</a>)</div>
<div class="line"><span class="lineno">  162</span>    {</div>
<div class="line"><span class="lineno">  163</span>        <a class="code hl_class" href="a00449.xhtml">CFft</a> *pCFft = <span class="keyword">new</span> <a class="code hl_class" href="a00449.xhtml">CFft</a>();</div>
<div class="line"><span class="lineno">  164</span>        </div>
<div class="line"><span class="lineno">  165</span>        <span class="comment">// create FFT instance with zeropadding</span></div>
<div class="line"><span class="lineno">  166</span>        pCFft-&gt;<a class="code hl_function" href="a00449.xhtml#adea9b0cecccfdb5a3da3218da6f683dd">init</a>(<a class="code hl_variable" href="a00429.xhtml#a8ff01782c75c39706e46a035b557479f">m_iBeatHistoLength</a>, 2);</div>
<div class="line"><span class="lineno">  167</span>        </div>
<div class="line"><span class="lineno">  168</span>        <span class="comment">// loop over novelty functions with hopsize</span></div>
<div class="line"><span class="lineno">  169</span>        <a class="code hl_function" href="a00477.xhtml#a6dbb3f9f480568b60f7fe50090d20003">CVector::setZero</a>(<a class="code hl_variable" href="a00429.xhtml#adcaa3e0a45439d92a33610cb7225412e">m_pfBeatHisto</a>, <a class="code hl_variable" href="a00429.xhtml#a8ff01782c75c39706e46a035b557479f">m_iBeatHistoLength</a>);</div>
<div class="line"><span class="lineno">  170</span>        <span class="keywordflow">for</span> (<span class="keyword">auto</span> n = 0; n &lt; iNumBlocks; n++)</div>
<div class="line"><span class="lineno">  171</span>        {</div>
<div class="line"><span class="lineno">  172</span>            <span class="comment">// get next novelty block</span></div>
<div class="line"><span class="lineno">  173</span>            pCBlock-&gt;<a class="code hl_function" href="a00513.xhtml#a531920b36b04ecdb562bfbb09dd2e856">getNextBlock</a>(<a class="code hl_variable" href="a00429.xhtml#a55206ff18aa3617308745c9e515cfa5c">m_pfProcessBuff</a>);</div>
<div class="line"><span class="lineno">  174</span> </div>
<div class="line"><span class="lineno">  175</span>            <span class="comment">// compute magnitude spectrum</span></div>
<div class="line"><span class="lineno">  176</span>            pCFft-&gt;<a class="code hl_function" href="a00449.xhtml#a3cae73896785c2f12ba979e15de48087">compFft</a>(<a class="code hl_variable" href="a00429.xhtml#a55206ff18aa3617308745c9e515cfa5c">m_pfProcessBuff</a>, <a class="code hl_variable" href="a00429.xhtml#a55206ff18aa3617308745c9e515cfa5c">m_pfProcessBuff</a>);</div>
<div class="line"><span class="lineno">  177</span>            pCFft-&gt;<a class="code hl_function" href="a00449.xhtml#a48428f0ac37a3c112c9598c784771d4a">getMagnitude</a>(<a class="code hl_variable" href="a00429.xhtml#a55206ff18aa3617308745c9e515cfa5c">m_pfProcessBuff</a>, <a class="code hl_variable" href="a00429.xhtml#a55206ff18aa3617308745c9e515cfa5c">m_pfProcessBuff</a>);</div>
<div class="line"><span class="lineno">  178</span> </div>
<div class="line"><span class="lineno">  179</span>            <span class="comment">// accumulate average spectrum</span></div>
<div class="line"><span class="lineno">  180</span>            <a class="code hl_function" href="a00477.xhtml#a3a052b83e62e5c5cc44829c64ffe42eb">CVector::add_I</a>(<a class="code hl_variable" href="a00429.xhtml#adcaa3e0a45439d92a33610cb7225412e">m_pfBeatHisto</a>, <a class="code hl_variable" href="a00429.xhtml#a55206ff18aa3617308745c9e515cfa5c">m_pfProcessBuff</a>, <a class="code hl_variable" href="a00429.xhtml#a8ff01782c75c39706e46a035b557479f">m_iBeatHistoLength</a>);</div>
<div class="line"><span class="lineno">  181</span>        }</div>
<div class="line"><span class="lineno">  182</span> </div>
<div class="line"><span class="lineno">  183</span>        <span class="comment">// destroy FFT instance</span></div>
<div class="line"><span class="lineno">  184</span>        <span class="keyword">delete</span> pCFft;</div>
<div class="line"><span class="lineno">  185</span>    }</div>
<div class="line"><span class="lineno">  186</span>    <span class="keywordflow">else</span></div>
<div class="line"><span class="lineno">  187</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00110.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248">Error_t::kFunctionInvalidArgsError</a>;</div>
<div class="line"><span class="lineno">  188</span> </div>
<div class="line"><span class="lineno">  189</span>    <span class="comment">// restrict output BPM to 30-200</span></div>
<div class="line"><span class="lineno">  190</span>    <a class="code hl_function" href="a00429.xhtml#a6932e0fb367cea8c959aa99f8f07f585">compHistoRange_</a>(aiBeatHistoRange[0], aiBeatHistoRange[1], eBeatHistoComp);</div>
<div class="line"><span class="lineno">  191</span> </div>
<div class="line"><span class="lineno">  192</span>    <span class="comment">// copy to output</span></div>
<div class="line"><span class="lineno">  193</span>    <span class="comment">//CVector::moveInMem(m_pfBeatHisto, 0, aiBeatHistoRange[0], aiBeatHistoRange[1] - aiBeatHistoRange[0] + 1);</span></div>
<div class="line"><span class="lineno">  194</span>    <span class="comment">//CVector::setZero(&amp;m_pfBeatHisto[aiBeatHistoRange[1] - aiBeatHistoRange[0] + 1], iBeatHistoLength - (aiBeatHistoRange[1] - aiBeatHistoRange[0] + 1));</span></div>
<div class="line"><span class="lineno">  195</span>    <a class="code hl_function" href="a00477.xhtml#ad7c5cba73e439adac77778f61c9418f0">CVector::copy</a>(pfBeatHisto, &amp;<a class="code hl_variable" href="a00429.xhtml#adcaa3e0a45439d92a33610cb7225412e">m_pfBeatHisto</a>[aiBeatHistoRange[0]], iBeatHistoLength);</div>
<div class="line"><span class="lineno">  196</span> </div>
<div class="line"><span class="lineno">  197</span>    <span class="comment">// create BPM axis labels</span></div>
<div class="line"><span class="lineno">  198</span> </div>
<div class="line"><span class="lineno">  199</span>    <span class="comment">// normalize result</span></div>
<div class="line"><span class="lineno">  200</span>    <a class="code hl_function" href="a00557.xhtml#a9a0dbb8f97c757a13062370113d661c4">CNormalizeAudio::normalizeSignal</a>(pfBeatHisto, iBeatHistoLength);</div>
<div class="line"><span class="lineno">  201</span> </div>
<div class="line"><span class="lineno">  202</span>    <span class="comment">// cleanup</span></div>
<div class="line"><span class="lineno">  203</span>    <a class="code hl_function" href="a00513.xhtml#a13d2bd6e36210dde0c64d188c1266b88">CBlockAudioIf::destroy</a>(pCBlock);</div>
<div class="line"><span class="lineno">  204</span> </div>
<div class="line"><span class="lineno">  205</span>    <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00110.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><span class="lineno">  206</span>}</div>
<div class="ttc" id="aa00110_xhtml_a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248"><div class="ttname"><a href="a00110.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248">Error_t::kFunctionInvalidArgsError</a></div><div class="ttdeci">@ kFunctionInvalidArgsError</div></div>
<div class="ttc" id="aa00110_xhtml_a4e8c0d09726859e3d3369c0da5a1aa7fad7652bf47cff43c21f12cb7df4ca66ec"><div class="ttname"><a href="a00110.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fad7652bf47cff43c21f12cb7df4ca66ec">Error_t::kFunctionIllegalCallError</a></div><div class="ttdeci">@ kFunctionIllegalCallError</div></div>
<div class="ttc" id="aa00110_xhtml_a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b"><div class="ttname"><a href="a00110.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a></div><div class="ttdeci">@ kNoError</div></div>
<div class="ttc" id="aa00429_xhtml_a00497d8ae052a8ce7125421c9615c573"><div class="ttname"><a href="a00429.xhtml#a00497d8ae052a8ce7125421c9615c573">CBeatHistoIf::getNumBins</a></div><div class="ttdeci">Error_t getNumBins(int &amp;iNumBeatHistoBins, BeatHisto_t eBeatHistoComp) const</div><div class="ttdef"><b>Definition:</b> <a href="a00080_source.xhtml#l00063">BeatHisto.cpp:63</a></div></div>
<div class="ttc" id="aa00429_xhtml_a55206ff18aa3617308745c9e515cfa5c"><div class="ttname"><a href="a00429.xhtml#a55206ff18aa3617308745c9e515cfa5c">CBeatHistoIf::m_pfProcessBuff</a></div><div class="ttdeci">float * m_pfProcessBuff</div><div class="ttdoc">temporary processing buffer</div><div class="ttdef"><b>Definition:</b> <a href="a00209_source.xhtml#l00104">BeatHisto.h:104</a></div></div>
<div class="ttc" id="aa00429_xhtml_a6932e0fb367cea8c959aa99f8f07f585"><div class="ttname"><a href="a00429.xhtml#a6932e0fb367cea8c959aa99f8f07f585">CBeatHistoIf::compHistoRange_</a></div><div class="ttdeci">void compHistoRange_(int &amp;istartIdx, int &amp;istopIdx, BeatHisto_t eBeatHistoComp) const</div><div class="ttdef"><b>Definition:</b> <a href="a00080_source.xhtml#l00270">BeatHisto.cpp:270</a></div></div>
<div class="ttc" id="aa00429_xhtml_a8ff01782c75c39706e46a035b557479f"><div class="ttname"><a href="a00429.xhtml#a8ff01782c75c39706e46a035b557479f">CBeatHistoIf::m_iBeatHistoLength</a></div><div class="ttdeci">const int m_iBeatHistoLength</div><div class="ttdoc">default length of FFT</div><div class="ttdef"><b>Definition:</b> <a href="a00209_source.xhtml#l00110">BeatHisto.h:110</a></div></div>
<div class="ttc" id="aa00429_xhtml_a9738952cf5af0bff317560bc5e074c57"><div class="ttname"><a href="a00429.xhtml#a9738952cf5af0bff317560bc5e074c57">CBeatHistoIf::m_pCNovelty</a></div><div class="ttdeci">CNoveltyIf * m_pCNovelty</div><div class="ttdoc">novelty function extraction instance</div><div class="ttdef"><b>Definition:</b> <a href="a00209_source.xhtml#l00101">BeatHisto.h:101</a></div></div>
<div class="ttc" id="aa00429_xhtml_aa1412f9c268dde46889e7642512bdb76"><div class="ttname"><a href="a00429.xhtml#aa1412f9c268dde46889e7642512bdb76">CBeatHistoIf::m_bIsInitialized</a></div><div class="ttdeci">bool m_bIsInitialized</div><div class="ttdoc">true if initialized</div><div class="ttdef"><b>Definition:</b> <a href="a00209_source.xhtml#l00114">BeatHisto.h:114</a></div></div>
<div class="ttc" id="aa00429_xhtml_adcaa3e0a45439d92a33610cb7225412e"><div class="ttname"><a href="a00429.xhtml#adcaa3e0a45439d92a33610cb7225412e">CBeatHistoIf::m_pfBeatHisto</a></div><div class="ttdeci">float * m_pfBeatHisto</div><div class="ttdoc">result buffer</div><div class="ttdef"><b>Definition:</b> <a href="a00209_source.xhtml#l00105">BeatHisto.h:105</a></div></div>
<div class="ttc" id="aa00429_xhtml_af1432b150aab8520153aea2490f331b0"><div class="ttname"><a href="a00429.xhtml#af1432b150aab8520153aea2490f331b0">CBeatHistoIf::m_pfNovelty</a></div><div class="ttdeci">float * m_pfNovelty</div><div class="ttdoc">buffer to hold extracted nvelty function</div><div class="ttdef"><b>Definition:</b> <a href="a00209_source.xhtml#l00103">BeatHisto.h:103</a></div></div>
<div class="ttc" id="aa00449_xhtml"><div class="ttname"><a href="a00449.xhtml">CFft</a></div><div class="ttdoc">class for FFT computation with windowing</div><div class="ttdef"><b>Definition:</b> <a href="a00134_source.xhtml#l00008">Fft.h:9</a></div></div>
<div class="ttc" id="aa00449_xhtml_a3cae73896785c2f12ba979e15de48087"><div class="ttname"><a href="a00449.xhtml#a3cae73896785c2f12ba979e15de48087">CFft::compFft</a></div><div class="ttdeci">Error_t compFft(complex_t *pfSpectrum, const float *pfInput)</div><div class="ttdef"><b>Definition:</b> <a href="a00068_source.xhtml#l00091">Fft.cpp:91</a></div></div>
<div class="ttc" id="aa00449_xhtml_a48428f0ac37a3c112c9598c784771d4a"><div class="ttname"><a href="a00449.xhtml#a48428f0ac37a3c112c9598c784771d4a">CFft::getMagnitude</a></div><div class="ttdeci">Error_t getMagnitude(float *pfMag, const complex_t *pfSpectrum) const</div><div class="ttdef"><b>Definition:</b> <a href="a00068_source.xhtml#l00136">Fft.cpp:136</a></div></div>
<div class="ttc" id="aa00449_xhtml_adea9b0cecccfdb5a3da3218da6f683dd"><div class="ttname"><a href="a00449.xhtml#adea9b0cecccfdb5a3da3218da6f683dd">CFft::init</a></div><div class="ttdeci">Error_t init(int iBlockLength, int iZeroPadFactor=1, WindowFunction_t eWindow=kWindowHann, Windowing_t eWindowing=kPreWindow)</div><div class="ttdef"><b>Definition:</b> <a href="a00068_source.xhtml#l00024">Fft.cpp:24</a></div></div>
<div class="ttc" id="aa00477_xhtml_a16455e414da1bc89417716b46b212ab9"><div class="ttname"><a href="a00477.xhtml#a16455e414da1bc89417716b46b212ab9">CVector::flip_I</a></div><div class="ttdeci">static void flip_I(T *ptSrcDest, long long int iLength)</div><div class="ttdef"><b>Definition:</b> <a href="a00143_source.xhtml#l00130">Vector.h:130</a></div></div>
<div class="ttc" id="aa00477_xhtml_a3a052b83e62e5c5cc44829c64ffe42eb"><div class="ttname"><a href="a00477.xhtml#a3a052b83e62e5c5cc44829c64ffe42eb">CVector::add_I</a></div><div class="ttdeci">static void add_I(T *ptSrcDest, const T *ptSrc, long long int iLength)</div><div class="ttdef"><b>Definition:</b> <a href="a00143_source.xhtml#l00245">Vector.h:245</a></div></div>
<div class="ttc" id="aa00477_xhtml_a6dbb3f9f480568b60f7fe50090d20003"><div class="ttname"><a href="a00477.xhtml#a6dbb3f9f480568b60f7fe50090d20003">CVector::setZero</a></div><div class="ttdeci">static void setZero(T *ptSrcDest, long long iLength)</div><div class="ttdef"><b>Definition:</b> <a href="a00143_source.xhtml#l00051">Vector.h:51</a></div></div>
<div class="ttc" id="aa00477_xhtml_ad7c5cba73e439adac77778f61c9418f0"><div class="ttname"><a href="a00477.xhtml#ad7c5cba73e439adac77778f61c9418f0">CVector::copy</a></div><div class="ttdeci">static void copy(T *ptDest, const T *ptSrc, long long int iLength)</div><div class="ttdef"><b>Definition:</b> <a href="a00143_source.xhtml#l00113">Vector.h:113</a></div></div>
<div class="ttc" id="aa00489_xhtml_a9f110985f86064fa24aa3157bfd5cab0"><div class="ttname"><a href="a00489.xhtml#a9f110985f86064fa24aa3157bfd5cab0">CNoveltyIf::compNovelty</a></div><div class="ttdeci">Error_t compNovelty(float *pfNovelty, bool *pbisOnset=0)</div><div class="ttdef"><b>Definition:</b> <a href="a00086_source.xhtml#l00186">Novelty.cpp:186</a></div></div>
<div class="ttc" id="aa00489_xhtml_aa4193070cac8cac64ad8dc222fb612e8"><div class="ttname"><a href="a00489.xhtml#aa4193070cac8cac64ad8dc222fb612e8">CNoveltyIf::getNumBlocks</a></div><div class="ttdeci">Error_t getNumBlocks(int &amp;iNumBlocks) const</div><div class="ttdef"><b>Definition:</b> <a href="a00086_source.xhtml#l00139">Novelty.cpp:139</a></div></div>
<div class="ttc" id="aa00513_xhtml"><div class="ttname"><a href="a00513.xhtml">CBlockAudioIf</a></div><div class="ttdoc">forward declaration</div><div class="ttdef"><b>Definition:</b> <a href="a00170_source.xhtml#l00010">ToolBlockAudio.h:11</a></div></div>
<div class="ttc" id="aa00513_xhtml_a13d2bd6e36210dde0c64d188c1266b88"><div class="ttname"><a href="a00513.xhtml#a13d2bd6e36210dde0c64d188c1266b88">CBlockAudioIf::destroy</a></div><div class="ttdeci">static Error_t destroy(CBlockAudioIf *&amp;pCInstance)</div><div class="ttdef"><b>Definition:</b> <a href="a00170_source.xhtml#l00038">ToolBlockAudio.h:38</a></div></div>
<div class="ttc" id="aa00513_xhtml_a531920b36b04ecdb562bfbb09dd2e856"><div class="ttname"><a href="a00513.xhtml#a531920b36b04ecdb562bfbb09dd2e856">CBlockAudioIf::getNextBlock</a></div><div class="ttdeci">virtual int getNextBlock(float *pfBlock, float *pfTimeStampInS=0)=0</div></div>
<div class="ttc" id="aa00513_xhtml_a595b3a391e2540a1dc9e53edf8634494"><div class="ttname"><a href="a00513.xhtml#a595b3a391e2540a1dc9e53edf8634494">CBlockAudioIf::getNumBlocks</a></div><div class="ttdeci">long long getNumBlocks() const</div><div class="ttdef"><b>Definition:</b> <a href="a00170_source.xhtml#l00049">ToolBlockAudio.h:49</a></div></div>
<div class="ttc" id="aa00513_xhtml_a84f0c2bf28007ef7749ab0e90c8011d2"><div class="ttname"><a href="a00513.xhtml#a84f0c2bf28007ef7749ab0e90c8011d2">CBlockAudioIf::create</a></div><div class="ttdeci">static Error_t create(CBlockAudioIf *&amp;pCInstance, CAudioFileIf *pCAudioFile, int iBlockLength, int iHopLength)</div><div class="ttdef"><b>Definition:</b> <a href="a00074_source.xhtml#l00183">ToolBlockAudio.cpp:183</a></div></div>
<div class="ttc" id="aa00517_xhtml"><div class="ttname"><a href="a00517.xhtml">CCcf</a></div><div class="ttdoc">computation of correlation (freq domain)</div><div class="ttdef"><b>Definition:</b> <a href="a00185_source.xhtml#l00013">ToolCcf.h:14</a></div></div>
<div class="ttc" id="aa00517_xhtml_a02c0e23cbcecab5af2fb20a25160321a"><div class="ttname"><a href="a00517.xhtml#a02c0e23cbcecab5af2fb20a25160321a">CCcf::getCcf</a></div><div class="ttdeci">Error_t getCcf(float *pfCcfResult, bool bisAcf=false) const</div><div class="ttdef"><b>Definition:</b> <a href="a00095_source.xhtml#l00111">ToolCcf.cpp:111</a></div></div>
<div class="ttc" id="aa00517_xhtml_a4d7d19dd39b24147d9a1fab5d7e05257"><div class="ttname"><a href="a00517.xhtml#a4d7d19dd39b24147d9a1fab5d7e05257">CCcf::compCcf</a></div><div class="ttdeci">Error_t compCcf(const float *pfInput1, const float *pfInput2, bool bNormalize=true)</div><div class="ttdef"><b>Definition:</b> <a href="a00095_source.xhtml#l00062">ToolCcf.cpp:62</a></div></div>
<div class="ttc" id="aa00517_xhtml_af683b1b5e37ca2039424af02f4bfb3c5"><div class="ttname"><a href="a00517.xhtml#af683b1b5e37ca2039424af02f4bfb3c5">CCcf::init</a></div><div class="ttdeci">Error_t init(int iBlockLength)</div><div class="ttdef"><b>Definition:</b> <a href="a00095_source.xhtml#l00020">ToolCcf.cpp:20</a></div></div>
<div class="ttc" id="aa00557_xhtml_a9a0dbb8f97c757a13062370113d661c4"><div class="ttname"><a href="a00557.xhtml#a9a0dbb8f97c757a13062370113d661c4">CNormalizeAudio::normalizeSignal</a></div><div class="ttdeci">static void normalizeSignal(float *pfAudio, long long iNumSamples)</div><div class="ttdef"><b>Definition:</b> <a href="a00122_source.xhtml#l00132">ToolPreProc.h:132</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00143_source.xhtml#l00245">CVector::add_I()</a>, <a class="el" href="a00095_source.xhtml#l00062">CCcf::compCcf()</a>, <a class="el" href="a00068_source.xhtml#l00091">CFft::compFft()</a>, <a class="el" href="a00080_source.xhtml#l00270">compHistoRange_()</a>, <a class="el" href="a00086_source.xhtml#l00186">CNoveltyIf::compNovelty()</a>, <a class="el" href="a00143_source.xhtml#l00113">CVector::copy()</a>, <a class="el" href="a00074_source.xhtml#l00183">CBlockAudioIf::create()</a>, <a class="el" href="a00170_source.xhtml#l00038">CBlockAudioIf::destroy()</a>, <a class="el" href="a00143_source.xhtml#l00130">CVector::flip_I()</a>, <a class="el" href="a00095_source.xhtml#l00111">CCcf::getCcf()</a>, <a class="el" href="a00068_source.xhtml#l00136">CFft::getMagnitude()</a>, <a class="el" href="a00513.xhtml#a531920b36b04ecdb562bfbb09dd2e856">CBlockAudioIf::getNextBlock()</a>, <a class="el" href="a00080_source.xhtml#l00063">getNumBins()</a>, <a class="el" href="a00170_source.xhtml#l00049">CBlockAudioIf::getNumBlocks()</a>, <a class="el" href="a00086_source.xhtml#l00139">CNoveltyIf::getNumBlocks()</a>, <a class="el" href="a00095_source.xhtml#l00020">CCcf::init()</a>, <a class="el" href="a00068_source.xhtml#l00024">CFft::init()</a>, <a class="el" href="a00209_source.xhtml#l00022">kBeatHistoCorr</a>, <a class="el" href="a00209_source.xhtml#l00023">kBeatHistoFft</a>, <a class="el" href="a00110.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fad7652bf47cff43c21f12cb7df4ca66ec">kFunctionIllegalCallError</a>, <a class="el" href="a00110.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248">kFunctionInvalidArgsError</a>, <a class="el" href="a00110.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">kNoError</a>, <a class="el" href="a00209_source.xhtml#l00114">m_bIsInitialized</a>, <a class="el" href="a00209_source.xhtml#l00112">m_fSampleRate</a>, <a class="el" href="a00209_source.xhtml#l00110">m_iBeatHistoLength</a>, <a class="el" href="a00209_source.xhtml#l00108">m_iHopLength</a>, <a class="el" href="a00209_source.xhtml#l00101">m_pCNovelty</a>, <a class="el" href="a00209_source.xhtml#l00105">m_pfBeatHisto</a>, <a class="el" href="a00209_source.xhtml#l00103">m_pfNovelty</a>, <a class="el" href="a00209_source.xhtml#l00104">m_pfProcessBuff</a>, <a class="el" href="a00122_source.xhtml#l00132">CNormalizeAudio::normalizeSignal()</a>, and <a class="el" href="a00143_source.xhtml#l00051">CVector::setZero()</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00017_source.xhtml#l00017">main()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00429_a58a9a3d685f448ced2e843a60028e472_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00429_a58a9a3d685f448ced2e843a60028e472_icgraph.svg" width="303" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a6932e0fb367cea8c959aa99f8f07f585" name="a6932e0fb367cea8c959aa99f8f07f585"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6932e0fb367cea8c959aa99f8f07f585">&#9670;&nbsp;</a></span>compHistoRange_()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void CBeatHistoIf::compHistoRange_ </td>
          <td>(</td>
          <td class="paramtype">int &amp;&#160;</td>
          <td class="paramname"><em>istartIdx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int &amp;&#160;</td>
          <td class="paramname"><em>istopIdx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="a00429.xhtml#a7aa666694543decf41aa7c27a0593db0">BeatHisto_t</a>&#160;</td>
          <td class="paramname"><em>eBeatHistoComp</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="a00080_source.xhtml#l00270">270</a> of file <a class="el" href="a00080_source.xhtml">BeatHisto.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  271</span>{</div>
<div class="line"><span class="lineno">  272</span>    <span class="keyword">const</span> <span class="keywordtype">float</span> afBpmRange[2] = { 30.F, 200.F };</div>
<div class="line"><span class="lineno">  273</span> </div>
<div class="line"><span class="lineno">  274</span>    <span class="keywordflow">if</span> (eBeatHistoComp == <a class="code hl_enumvalue" href="a00429.xhtml#a7aa666694543decf41aa7c27a0593db0af29c40beceb0046a659f26b95d7d4770">kBeatHistoFft</a>)</div>
<div class="line"><span class="lineno">  275</span>    {</div>
<div class="line"><span class="lineno">  276</span>        iStartIdx = <span class="keyword">static_cast&lt;</span><span class="keywordtype">int</span><span class="keyword">&gt;</span>(<a class="code hl_function" href="a00521.xhtml#ada82d84a69f4c77266835f1f06ca2ecb">CConversion::convertFreq2Bin</a>(afBpmRange[0] / 60.F, <a class="code hl_variable" href="a00429.xhtml#a8ff01782c75c39706e46a035b557479f">m_iBeatHistoLength</a> &lt;&lt; 1, <a class="code hl_variable" href="a00429.xhtml#abbfa62374a59a0f7a967bc9d275669b0">m_fSampleRate</a> / <a class="code hl_variable" href="a00429.xhtml#ac27abc244b47d4f1e5cde9f98453260a">m_iHopLength</a>));</div>
<div class="line"><span class="lineno">  277</span>        iStopIdx = <span class="keyword">static_cast&lt;</span><span class="keywordtype">int</span><span class="keyword">&gt;</span>(<a class="code hl_function" href="a00521.xhtml#ada82d84a69f4c77266835f1f06ca2ecb">CConversion::convertFreq2Bin</a>(afBpmRange[1] / 60.F, <a class="code hl_variable" href="a00429.xhtml#a8ff01782c75c39706e46a035b557479f">m_iBeatHistoLength</a> &lt;&lt; 1, <a class="code hl_variable" href="a00429.xhtml#abbfa62374a59a0f7a967bc9d275669b0">m_fSampleRate</a> / <a class="code hl_variable" href="a00429.xhtml#ac27abc244b47d4f1e5cde9f98453260a">m_iHopLength</a>)) + 1;</div>
<div class="line"><span class="lineno">  278</span>    }</div>
<div class="line"><span class="lineno">  279</span>    <span class="keywordflow">else</span></div>
<div class="line"><span class="lineno">  280</span>    {</div>
<div class="line"><span class="lineno">  281</span>        iStartIdx = <a class="code hl_variable" href="a00429.xhtml#a8ff01782c75c39706e46a035b557479f">m_iBeatHistoLength</a> - <span class="keyword">static_cast&lt;</span><span class="keywordtype">int</span><span class="keyword">&gt;</span>(60.F * <a class="code hl_variable" href="a00429.xhtml#abbfa62374a59a0f7a967bc9d275669b0">m_fSampleRate</a> / <a class="code hl_variable" href="a00429.xhtml#ac27abc244b47d4f1e5cde9f98453260a">m_iHopLength</a> / afBpmRange[0]);</div>
<div class="line"><span class="lineno">  282</span>        iStopIdx = <a class="code hl_variable" href="a00429.xhtml#a8ff01782c75c39706e46a035b557479f">m_iBeatHistoLength</a> - <span class="keyword">static_cast&lt;</span><span class="keywordtype">int</span><span class="keyword">&gt;</span>(60.F * <a class="code hl_variable" href="a00429.xhtml#abbfa62374a59a0f7a967bc9d275669b0">m_fSampleRate</a> / <a class="code hl_variable" href="a00429.xhtml#ac27abc244b47d4f1e5cde9f98453260a">m_iHopLength</a> / afBpmRange[1]);</div>
<div class="line"><span class="lineno">  283</span>    }</div>
<div class="line"><span class="lineno">  284</span>}</div>
<div class="ttc" id="aa00521_xhtml_ada82d84a69f4c77266835f1f06ca2ecb"><div class="ttname"><a href="a00521.xhtml#ada82d84a69f4c77266835f1f06ca2ecb">CConversion::convertFreq2Bin</a></div><div class="ttdeci">static float convertFreq2Bin(float fInHz, int iFftLength, float fSampleRate=44100.F)</div><div class="ttdef"><b>Definition:</b> <a href="a00161_source.xhtml#l00172">ToolConversion.h:172</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00161_source.xhtml#l00172">CConversion::convertFreq2Bin()</a>, <a class="el" href="a00209_source.xhtml#l00023">kBeatHistoFft</a>, <a class="el" href="a00209_source.xhtml#l00112">m_fSampleRate</a>, <a class="el" href="a00209_source.xhtml#l00110">m_iBeatHistoLength</a>, and <a class="el" href="a00209_source.xhtml#l00108">m_iHopLength</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00080_source.xhtml#l00113">compBeatHisto()</a>, <a class="el" href="a00080_source.xhtml#l00082">getBeatHistoAxisTicks()</a>, and <a class="el" href="a00080_source.xhtml#l00075">getNumBins()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00429_a6932e0fb367cea8c959aa99f8f07f585_cgraph.svg" width="467" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00429_a6932e0fb367cea8c959aa99f8f07f585_icgraph.svg" width="562" height="155"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a4e26972ec7055aeb001f2134b322f0cf" name="a4e26972ec7055aeb001f2134b322f0cf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4e26972ec7055aeb001f2134b322f0cf">&#9670;&nbsp;</a></span>create() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00110.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> CBeatHistoIf::create </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="a00429.xhtml">CBeatHistoIf</a> *&amp;&#160;</td>
          <td class="paramname"><em>pCInstance</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float *&#160;</td>
          <td class="paramname"><em>pfAudio</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">long long&#160;</td>
          <td class="paramname"><em>iNumFrames</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fSampleRate</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>iBlockLength</em> = <code>1024</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>iHopLength</em> = <code>8</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p >initializes a BeatHisto instance from audio data </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pCInstance</td><td>pointer to instance to be written </td></tr>
    <tr><td class="paramname">pfAudio</td><td>complete audio data </td></tr>
    <tr><td class="paramname">iNumFrames</td><td>length of pfAudio </td></tr>
    <tr><td class="paramname">fSampleRate</td><td>sample rate in Hz </td></tr>
    <tr><td class="paramname">iBlockLength</td><td>FFT block length in Frames </td></tr>
    <tr><td class="paramname">iHopLength</td><td>hop length in Frames </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Error_t </dd></dl>

<p class="definition">Definition at line <a class="el" href="a00080_source.xhtml#l00035">35</a> of file <a class="el" href="a00080_source.xhtml">BeatHisto.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   36</span>{</div>
<div class="line"><span class="lineno">   37</span>    <span class="keywordflow">if</span> (!pfAudio)</div>
<div class="line"><span class="lineno">   38</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00110.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248">Error_t::kFunctionInvalidArgsError</a>;</div>
<div class="line"><span class="lineno">   39</span>    <span class="keywordflow">if</span> (iNumFrames &lt;= 0)</div>
<div class="line"><span class="lineno">   40</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00110.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248">Error_t::kFunctionInvalidArgsError</a>;</div>
<div class="line"><span class="lineno">   41</span>    <span class="keywordflow">if</span> (fSampleRate &lt;= 0)</div>
<div class="line"><span class="lineno">   42</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00110.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248">Error_t::kFunctionInvalidArgsError</a>;</div>
<div class="line"><span class="lineno">   43</span>    <span class="keywordflow">if</span> (iBlockLength &lt;= 2)</div>
<div class="line"><span class="lineno">   44</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00110.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248">Error_t::kFunctionInvalidArgsError</a>;</div>
<div class="line"><span class="lineno">   45</span>    <span class="keywordflow">if</span> (iHopLength &lt;= 0 || iHopLength &gt; iBlockLength)</div>
<div class="line"><span class="lineno">   46</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00110.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248">Error_t::kFunctionInvalidArgsError</a>;</div>
<div class="line"><span class="lineno">   47</span> </div>
<div class="line"><span class="lineno">   48</span>    pCInstance = <span class="keyword">new</span> <a class="code hl_function" href="a00429.xhtml#ae90a9b79467cccffa52077c24cd58bb0">CBeatHistoIf</a>(iBlockLength, iHopLength, fSampleRate);</div>
<div class="line"><span class="lineno">   49</span> </div>
<div class="line"><span class="lineno">   50</span>    assert(pCInstance);</div>
<div class="line"><span class="lineno">   51</span> </div>
<div class="line"><span class="lineno">   52</span>    <span class="keywordflow">return</span> pCInstance-&gt;<a class="code hl_function" href="a00429.xhtml#abc96a9de9093f6617510f4dbe02b82ce">init_</a>(pfAudio, iNumFrames, fSampleRate);</div>
<div class="line"><span class="lineno">   53</span>}</div>
<div class="ttc" id="aa00429_xhtml_abc96a9de9093f6617510f4dbe02b82ce"><div class="ttname"><a href="a00429.xhtml#abc96a9de9093f6617510f4dbe02b82ce">CBeatHistoIf::init_</a></div><div class="ttdeci">Error_t init_(const std::string &amp;strAudioFilePath)</div><div class="ttdoc">init configuration</div><div class="ttdef"><b>Definition:</b> <a href="a00080_source.xhtml#l00227">BeatHisto.cpp:227</a></div></div>
<div class="ttc" id="aa00429_xhtml_ae90a9b79467cccffa52077c24cd58bb0"><div class="ttname"><a href="a00429.xhtml#ae90a9b79467cccffa52077c24cd58bb0">CBeatHistoIf::CBeatHistoIf</a></div><div class="ttdeci">CBeatHistoIf(int iBlockLength, int iHopLength, float fSampleRate)</div><div class="ttdef"><b>Definition:</b> <a href="a00209_source.xhtml#l00082">BeatHisto.h:82</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00209_source.xhtml#l00082">CBeatHistoIf()</a>, <a class="el" href="a00080_source.xhtml#l00227">init_()</a>, and <a class="el" href="a00110.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248">kFunctionInvalidArgsError</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00429_a4e26972ec7055aeb001f2134b322f0cf_cgraph.svg" width="100%" height="480"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="a9b3f72cb0d46466cf0aa38540b9980a5" name="a9b3f72cb0d46466cf0aa38540b9980a5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9b3f72cb0d46466cf0aa38540b9980a5">&#9670;&nbsp;</a></span>create() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00110.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> CBeatHistoIf::create </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="a00429.xhtml">CBeatHistoIf</a> *&amp;&#160;</td>
          <td class="paramname"><em>pCInstance</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>strAudioFilePath</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>iBlockLength</em> = <code>1024</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>iHopLength</em> = <code>8</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p >initializes a BeatHisto instance with file reading </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pCInstance</td><td>pointer to instance to be written </td></tr>
    <tr><td class="paramname">strAudioFilePath</td><td>complete path to audio file </td></tr>
    <tr><td class="paramname">iBlockLength</td><td>FFT block length in Frames </td></tr>
    <tr><td class="paramname">iHopLength</td><td>hop length in Frames </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Error_t </dd></dl>

<p class="definition">Definition at line <a class="el" href="a00080_source.xhtml#l00019">19</a> of file <a class="el" href="a00080_source.xhtml">BeatHisto.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   20</span>{</div>
<div class="line"><span class="lineno">   21</span>    <span class="keywordflow">if</span> (strAudioFilePath.empty())</div>
<div class="line"><span class="lineno">   22</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00110.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248">Error_t::kFunctionInvalidArgsError</a>;</div>
<div class="line"><span class="lineno">   23</span>    <span class="keywordflow">if</span> (iBlockLength &lt;= 2 || !<a class="code hl_function" href="a00473.xhtml#a6d0e75b0bcbbb243b7141cfc0126e443">CUtil::isPowOf2</a>(iBlockLength))</div>
<div class="line"><span class="lineno">   24</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00110.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248">Error_t::kFunctionInvalidArgsError</a>;</div>
<div class="line"><span class="lineno">   25</span>    <span class="keywordflow">if</span> (iHopLength &lt;= 0 || iHopLength &gt; iBlockLength)</div>
<div class="line"><span class="lineno">   26</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00110.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248">Error_t::kFunctionInvalidArgsError</a>;</div>
<div class="line"><span class="lineno">   27</span> </div>
<div class="line"><span class="lineno">   28</span>    pCInstance = <span class="keyword">new</span> <a class="code hl_function" href="a00429.xhtml#ae90a9b79467cccffa52077c24cd58bb0">CBeatHistoIf</a>(iBlockLength, iHopLength, 0.F);</div>
<div class="line"><span class="lineno">   29</span> </div>
<div class="line"><span class="lineno">   30</span>    assert(pCInstance);</div>
<div class="line"><span class="lineno">   31</span> </div>
<div class="line"><span class="lineno">   32</span>    <span class="keywordflow">return</span> pCInstance-&gt;<a class="code hl_function" href="a00429.xhtml#abc96a9de9093f6617510f4dbe02b82ce">init_</a>(strAudioFilePath);</div>
<div class="line"><span class="lineno">   33</span>}</div>
<div class="ttc" id="aa00473_xhtml_a6d0e75b0bcbbb243b7141cfc0126e443"><div class="ttname"><a href="a00473.xhtml#a6d0e75b0bcbbb243b7141cfc0126e443">CUtil::isPowOf2</a></div><div class="ttdeci">static bool isPowOf2(int n)</div><div class="ttdef"><b>Definition:</b> <a href="a00149_source.xhtml#l00042">Util.h:42</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00209_source.xhtml#l00082">CBeatHistoIf()</a>, <a class="el" href="a00080_source.xhtml#l00227">init_()</a>, <a class="el" href="a00149_source.xhtml#l00042">CUtil::isPowOf2()</a>, and <a class="el" href="a00110.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248">kFunctionInvalidArgsError</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00017_source.xhtml#l00017">main()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00429_a9b3f72cb0d46466cf0aa38540b9980a5_cgraph.svg" width="100%" height="499"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00429_a9b3f72cb0d46466cf0aa38540b9980a5_icgraph.svg" width="248" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a5f773ad0baf325e182bd459c04ae7137" name="a5f773ad0baf325e182bd459c04ae7137"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5f773ad0baf325e182bd459c04ae7137">&#9670;&nbsp;</a></span>destroy()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00110.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> CBeatHistoIf::destroy </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="a00429.xhtml">CBeatHistoIf</a> *&amp;&#160;</td>
          <td class="paramname"><em>pCInstance</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p >destroys a BeatHisto instance </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pCInstance</td><td>pointer to instance to be destroyed </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Error_t </dd></dl>

<p class="definition">Definition at line <a class="el" href="a00080_source.xhtml#l00055">55</a> of file <a class="el" href="a00080_source.xhtml">BeatHisto.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   56</span>{</div>
<div class="line"><span class="lineno">   57</span>    <span class="keyword">delete</span> pCInstance;</div>
<div class="line"><span class="lineno">   58</span>    pCInstance = 0;</div>
<div class="line"><span class="lineno">   59</span> </div>
<div class="line"><span class="lineno">   60</span>    <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00110.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><span class="lineno">   61</span>}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00110.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">kNoError</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00017_source.xhtml#l00017">main()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00429_a5f773ad0baf325e182bd459c04ae7137_icgraph.svg" width="255" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ab14aabd3d1e26ba1f0c9ce1777eaddf9" name="ab14aabd3d1e26ba1f0c9ce1777eaddf9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab14aabd3d1e26ba1f0c9ce1777eaddf9">&#9670;&nbsp;</a></span>getBeatHistoAxisTicks()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00110.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> CBeatHistoIf::getBeatHistoAxisTicks </td>
          <td>(</td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>pfAxisTicks</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="a00429.xhtml#a7aa666694543decf41aa7c27a0593db0">BeatHisto_t</a>&#160;</td>
          <td class="paramname"><em>eBeatHistoComp</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >returns axis ticks </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pfAxisTicks</td><td>(to be written) in BPM, length equals iNumBins </td></tr>
    <tr><td class="paramname">eBeatHistoComp</td><td>(computation method used in <a class="el" href="a00429.xhtml#a58a9a3d685f448ced2e843a60028e472">CBeatHistoIf::compBeatHisto</a>) </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Error_t </dd></dl>

<p class="definition">Definition at line <a class="el" href="a00080_source.xhtml#l00082">82</a> of file <a class="el" href="a00080_source.xhtml">BeatHisto.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   83</span>{</div>
<div class="line"><span class="lineno">   84</span>    <span class="keywordflow">if</span> (!<a class="code hl_variable" href="a00429.xhtml#aa1412f9c268dde46889e7642512bdb76">m_bIsInitialized</a>)</div>
<div class="line"><span class="lineno">   85</span>    {</div>
<div class="line"><span class="lineno">   86</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00110.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fad7652bf47cff43c21f12cb7df4ca66ec">Error_t::kFunctionIllegalCallError</a>;</div>
<div class="line"><span class="lineno">   87</span>    }</div>
<div class="line"><span class="lineno">   88</span> </div>
<div class="line"><span class="lineno">   89</span>    <span class="keywordflow">if</span> (!pfAxisTicks)</div>
<div class="line"><span class="lineno">   90</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00110.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248">Error_t::kFunctionInvalidArgsError</a>;</div>
<div class="line"><span class="lineno">   91</span> </div>
<div class="line"><span class="lineno">   92</span>    assert(<a class="code hl_variable" href="a00429.xhtml#a6d8c73e7cf2472b693ea75221a71ba2c">m_iBlockLength</a> &gt; 0);</div>
<div class="line"><span class="lineno">   93</span>    assert(<a class="code hl_variable" href="a00429.xhtml#ac27abc244b47d4f1e5cde9f98453260a">m_iHopLength</a> &gt; 0);</div>
<div class="line"><span class="lineno">   94</span>    assert(<a class="code hl_variable" href="a00429.xhtml#abbfa62374a59a0f7a967bc9d275669b0">m_fSampleRate</a> &gt; 0);</div>
<div class="line"><span class="lineno">   95</span> </div>
<div class="line"><span class="lineno">   96</span>    <span class="keywordtype">int</span> aiRangeIndices[2] = { 0,0 };</div>
<div class="line"><span class="lineno">   97</span>    <a class="code hl_function" href="a00429.xhtml#a6932e0fb367cea8c959aa99f8f07f585">compHistoRange_</a>(aiRangeIndices[0], aiRangeIndices[1], eBeatHistoComp);</div>
<div class="line"><span class="lineno">   98</span>    </div>
<div class="line"><span class="lineno">   99</span>    <span class="keywordflow">if</span> (eBeatHistoComp == <a class="code hl_enumvalue" href="a00429.xhtml#a7aa666694543decf41aa7c27a0593db0af29c40beceb0046a659f26b95d7d4770">kBeatHistoFft</a>)</div>
<div class="line"><span class="lineno">  100</span>    {</div>
<div class="line"><span class="lineno">  101</span>        <span class="keywordflow">for</span> (<span class="keyword">auto</span> k = aiRangeIndices[0], j = 0; k &lt;= aiRangeIndices[1]; k++, j++)</div>
<div class="line"><span class="lineno">  102</span>            pfAxisTicks[j] = 60.F * <a class="code hl_function" href="a00521.xhtml#aebe59f905b1dd02058cccbb062de6507">CConversion::convertBin2Freq</a>(1.F * k, <a class="code hl_variable" href="a00429.xhtml#a8ff01782c75c39706e46a035b557479f">m_iBeatHistoLength</a> &lt;&lt; 1, <a class="code hl_variable" href="a00429.xhtml#abbfa62374a59a0f7a967bc9d275669b0">m_fSampleRate</a> / <a class="code hl_variable" href="a00429.xhtml#ac27abc244b47d4f1e5cde9f98453260a">m_iHopLength</a>);</div>
<div class="line"><span class="lineno">  103</span>    }</div>
<div class="line"><span class="lineno">  104</span>    <span class="keywordflow">else</span></div>
<div class="line"><span class="lineno">  105</span>    {</div>
<div class="line"><span class="lineno">  106</span>        <span class="keywordflow">for</span> (<span class="keyword">auto</span> k = aiRangeIndices[0], j = 0; k &lt;= aiRangeIndices[1]; k++, j++)</div>
<div class="line"><span class="lineno">  107</span>            pfAxisTicks[j] = 60.F / <a class="code hl_variable" href="a00429.xhtml#ac27abc244b47d4f1e5cde9f98453260a">m_iHopLength</a> *  <a class="code hl_variable" href="a00429.xhtml#abbfa62374a59a0f7a967bc9d275669b0">m_fSampleRate</a> / (<a class="code hl_variable" href="a00429.xhtml#a8ff01782c75c39706e46a035b557479f">m_iBeatHistoLength</a> - k);</div>
<div class="line"><span class="lineno">  108</span>    }</div>
<div class="line"><span class="lineno">  109</span> </div>
<div class="line"><span class="lineno">  110</span>    <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00110.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><span class="lineno">  111</span>}</div>
<div class="ttc" id="aa00521_xhtml_aebe59f905b1dd02058cccbb062de6507"><div class="ttname"><a href="a00521.xhtml#aebe59f905b1dd02058cccbb062de6507">CConversion::convertBin2Freq</a></div><div class="ttdeci">static float convertBin2Freq(float fBin, int iFftLength, float fSampleRate=44100.F)</div><div class="ttdef"><b>Definition:</b> <a href="a00161_source.xhtml#l00208">ToolConversion.h:208</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00080_source.xhtml#l00270">compHistoRange_()</a>, <a class="el" href="a00161_source.xhtml#l00208">CConversion::convertBin2Freq()</a>, <a class="el" href="a00209_source.xhtml#l00023">kBeatHistoFft</a>, <a class="el" href="a00110.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fad7652bf47cff43c21f12cb7df4ca66ec">kFunctionIllegalCallError</a>, <a class="el" href="a00110.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248">kFunctionInvalidArgsError</a>, <a class="el" href="a00110.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">kNoError</a>, <a class="el" href="a00209_source.xhtml#l00114">m_bIsInitialized</a>, <a class="el" href="a00209_source.xhtml#l00112">m_fSampleRate</a>, <a class="el" href="a00209_source.xhtml#l00110">m_iBeatHistoLength</a>, <a class="el" href="a00209_source.xhtml#l00107">m_iBlockLength</a>, and <a class="el" href="a00209_source.xhtml#l00108">m_iHopLength</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00429_ab14aabd3d1e26ba1f0c9ce1777eaddf9_cgraph.svg" width="100%" height="366"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="ac757ed7ecb081dbf61745108165ee30b" name="ac757ed7ecb081dbf61745108165ee30b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac757ed7ecb081dbf61745108165ee30b">&#9670;&nbsp;</a></span>getNumBins() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int CBeatHistoIf::getNumBins </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="a00429.xhtml#a7aa666694543decf41aa7c27a0593db0">BeatHisto_t</a>&#160;</td>
          <td class="paramname"><em>eBeatHistoComp</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >returns length of the frequency axis of the beat histogram </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">eBeatHistoComp</td><td>(computation method used in <a class="el" href="a00429.xhtml#a58a9a3d685f448ced2e843a60028e472">CBeatHistoIf::compBeatHisto</a>) </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>ing number bins </dd></dl>

<p class="definition">Definition at line <a class="el" href="a00080_source.xhtml#l00075">75</a> of file <a class="el" href="a00080_source.xhtml">BeatHisto.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   76</span>{</div>
<div class="line"><span class="lineno">   77</span>    <span class="keywordtype">int</span> aiRangeIndices[2] = { 0,0 };</div>
<div class="line"><span class="lineno">   78</span>    <a class="code hl_function" href="a00429.xhtml#a6932e0fb367cea8c959aa99f8f07f585">compHistoRange_</a>(aiRangeIndices[0], aiRangeIndices[1], eBeatHistoComp);</div>
<div class="line"><span class="lineno">   79</span>    <span class="keywordflow">return</span> aiRangeIndices[1] - aiRangeIndices[0] + 1;</div>
<div class="line"><span class="lineno">   80</span>}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00080_source.xhtml#l00270">compHistoRange_()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00429_ac757ed7ecb081dbf61745108165ee30b_cgraph.svg" width="100%" height="300"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="a00497d8ae052a8ce7125421c9615c573" name="a00497d8ae052a8ce7125421c9615c573"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a00497d8ae052a8ce7125421c9615c573">&#9670;&nbsp;</a></span>getNumBins() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00110.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> CBeatHistoIf::getNumBins </td>
          <td>(</td>
          <td class="paramtype">int &amp;&#160;</td>
          <td class="paramname"><em>iNumBeatHistoBins</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="a00429.xhtml#a7aa666694543decf41aa7c27a0593db0">BeatHisto_t</a>&#160;</td>
          <td class="paramname"><em>eBeatHistoComp</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >returns length of the frequency axis of the beat histogram </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">iNumBeatHistoBins</td><td>(number of bins, to be written) </td></tr>
    <tr><td class="paramname">eBeatHistoComp</td><td>(computation method used in <a class="el" href="a00429.xhtml#a58a9a3d685f448ced2e843a60028e472">CBeatHistoIf::compBeatHisto</a>) </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Error_t </dd></dl>

<p class="definition">Definition at line <a class="el" href="a00080_source.xhtml#l00063">63</a> of file <a class="el" href="a00080_source.xhtml">BeatHisto.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   64</span>{</div>
<div class="line"><span class="lineno">   65</span>    <span class="keywordflow">if</span> (!<a class="code hl_variable" href="a00429.xhtml#aa1412f9c268dde46889e7642512bdb76">m_bIsInitialized</a>)</div>
<div class="line"><span class="lineno">   66</span>    {</div>
<div class="line"><span class="lineno">   67</span>        iLengthOfBeatHisto = 0;</div>
<div class="line"><span class="lineno">   68</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00110.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fad7652bf47cff43c21f12cb7df4ca66ec">Error_t::kFunctionIllegalCallError</a>;</div>
<div class="line"><span class="lineno">   69</span>    }</div>
<div class="line"><span class="lineno">   70</span> </div>
<div class="line"><span class="lineno">   71</span>    iLengthOfBeatHisto = this-&gt;<a class="code hl_function" href="a00429.xhtml#a00497d8ae052a8ce7125421c9615c573">getNumBins</a>(eBeatHistoComp);</div>
<div class="line"><span class="lineno">   72</span> </div>
<div class="line"><span class="lineno">   73</span>    <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00110.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><span class="lineno">   74</span>}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00080_source.xhtml#l00063">getNumBins()</a>, <a class="el" href="a00110.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fad7652bf47cff43c21f12cb7df4ca66ec">kFunctionIllegalCallError</a>, <a class="el" href="a00110.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">kNoError</a>, and <a class="el" href="a00209_source.xhtml#l00114">m_bIsInitialized</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00080_source.xhtml#l00113">compBeatHisto()</a>, <a class="el" href="a00080_source.xhtml#l00063">getNumBins()</a>, and <a class="el" href="a00017_source.xhtml#l00017">main()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00429_a00497d8ae052a8ce7125421c9615c573_cgraph.svg" width="186" height="62"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00429_a00497d8ae052a8ce7125421c9615c573_icgraph.svg" width="526" height="63"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a0a5fdbe7279508cf8164587ffa41c76d" name="a0a5fdbe7279508cf8164587ffa41c76d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0a5fdbe7279508cf8164587ffa41c76d">&#9670;&nbsp;</a></span>init_() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00110.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> CBeatHistoIf::init_ </td>
          <td>(</td>
          <td class="paramtype">const float *&#160;</td>
          <td class="paramname"><em>pfAudio</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">long long&#160;</td>
          <td class="paramname"><em>iNumFrames</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fSampleRate</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>init configuration </p>

<p class="definition">Definition at line <a class="el" href="a00080_source.xhtml#l00250">250</a> of file <a class="el" href="a00080_source.xhtml">BeatHisto.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  251</span>{</div>
<div class="line"><span class="lineno">  252</span>    <span class="keywordflow">if</span> (<a class="code hl_enumvalue" href="a00110.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a> == <a class="code hl_function" href="a00489.xhtml#abae299cfe8e8806685cab18f59db8f72">CNoveltyIf::create</a>(<a class="code hl_variable" href="a00429.xhtml#a9738952cf5af0bff317560bc5e074c57">m_pCNovelty</a>, <a class="code hl_enumvalue" href="a00489.xhtml#aaaa808da8acb1f5df095f6178faeb4f4ab54085095907f70fca3bee22d3bc5d38">CNoveltyIf::kNoveltyFlux</a>, pfAudio, iNumFrames, fSampleRate, <a class="code hl_variable" href="a00429.xhtml#a6d8c73e7cf2472b693ea75221a71ba2c">m_iBlockLength</a>, <a class="code hl_variable" href="a00429.xhtml#ac27abc244b47d4f1e5cde9f98453260a">m_iHopLength</a>))</div>
<div class="line"><span class="lineno">  253</span>    {</div>
<div class="line"><span class="lineno">  254</span>        <span class="keywordtype">int</span> iNumBlocks = 0;</div>
<div class="line"><span class="lineno">  255</span>        <a class="code hl_variable" href="a00429.xhtml#a9738952cf5af0bff317560bc5e074c57">m_pCNovelty</a>-&gt;<a class="code hl_function" href="a00489.xhtml#aa4193070cac8cac64ad8dc222fb612e8">getNumBlocks</a>(iNumBlocks);</div>
<div class="line"><span class="lineno">  256</span>        assert(iNumBlocks &gt; 2);</div>
<div class="line"><span class="lineno">  257</span>        <a class="code hl_function" href="a00477.xhtml#abaadac98b1cad18b7b568852bc951696">CVector::alloc</a>(<a class="code hl_variable" href="a00429.xhtml#af1432b150aab8520153aea2490f331b0">m_pfNovelty</a>, iNumBlocks);</div>
<div class="line"><span class="lineno">  258</span> </div>
<div class="line"><span class="lineno">  259</span>        <a class="code hl_function" href="a00477.xhtml#abaadac98b1cad18b7b568852bc951696">CVector::alloc</a>(<a class="code hl_variable" href="a00429.xhtml#a55206ff18aa3617308745c9e515cfa5c">m_pfProcessBuff</a>, <span class="keyword">static_cast&lt;</span><span class="keywordtype">long</span> <span class="keywordtype">long</span><span class="keyword">&gt;</span>(<a class="code hl_variable" href="a00429.xhtml#a8ff01782c75c39706e46a035b557479f">m_iBeatHistoLength</a>) * 2);</div>
<div class="line"><span class="lineno">  260</span> </div>
<div class="line"><span class="lineno">  261</span>        <a class="code hl_function" href="a00477.xhtml#abaadac98b1cad18b7b568852bc951696">CVector::alloc</a>(<a class="code hl_variable" href="a00429.xhtml#adcaa3e0a45439d92a33610cb7225412e">m_pfBeatHisto</a>, <span class="keyword">static_cast&lt;</span><span class="keywordtype">long</span> <span class="keywordtype">long</span><span class="keyword">&gt;</span>(<a class="code hl_variable" href="a00429.xhtml#a8ff01782c75c39706e46a035b557479f">m_iBeatHistoLength</a>) + 1);</div>
<div class="line"><span class="lineno">  262</span> </div>
<div class="line"><span class="lineno">  263</span>        <a class="code hl_variable" href="a00429.xhtml#aa1412f9c268dde46889e7642512bdb76">m_bIsInitialized</a> = <span class="keyword">true</span>;</div>
<div class="line"><span class="lineno">  264</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00110.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><span class="lineno">  265</span>    }</div>
<div class="line"><span class="lineno">  266</span>    <span class="keywordflow">else</span></div>
<div class="line"><span class="lineno">  267</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00110.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa6c7f4630a7389787bd65e45f0215fc14">Error_t::kMemError</a>;</div>
<div class="line"><span class="lineno">  268</span>}</div>
<div class="ttc" id="aa00110_xhtml_a4e8c0d09726859e3d3369c0da5a1aa7fa6c7f4630a7389787bd65e45f0215fc14"><div class="ttname"><a href="a00110.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa6c7f4630a7389787bd65e45f0215fc14">Error_t::kMemError</a></div><div class="ttdeci">@ kMemError</div></div>
<div class="ttc" id="aa00477_xhtml_abaadac98b1cad18b7b568852bc951696"><div class="ttname"><a href="a00477.xhtml#abaadac98b1cad18b7b568852bc951696">CVector::alloc</a></div><div class="ttdeci">static void alloc(T *&amp;ptVec, long long iLength)</div><div class="ttdef"><b>Definition:</b> <a href="a00143_source.xhtml#l00024">Vector.h:24</a></div></div>
<div class="ttc" id="aa00489_xhtml_aaaa808da8acb1f5df095f6178faeb4f4ab54085095907f70fca3bee22d3bc5d38"><div class="ttname"><a href="a00489.xhtml#aaaa808da8acb1f5df095f6178faeb4f4ab54085095907f70fca3bee22d3bc5d38">CNoveltyIf::kNoveltyFlux</a></div><div class="ttdeci">@ kNoveltyFlux</div><div class="ttdef"><b>Definition:</b> <a href="a00179_source.xhtml#l00026">Novelty.h:26</a></div></div>
<div class="ttc" id="aa00489_xhtml_abae299cfe8e8806685cab18f59db8f72"><div class="ttname"><a href="a00489.xhtml#abae299cfe8e8806685cab18f59db8f72">CNoveltyIf::create</a></div><div class="ttdeci">static Error_t create(CNoveltyIf *&amp;pCInstance, Novelty_t eNoveltyIdx, const std::string &amp;strAudioFilePath, int iBlockLength=4096, int iHopLength=512)</div><div class="ttdef"><b>Definition:</b> <a href="a00086_source.xhtml#l00098">Novelty.cpp:98</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00143_source.xhtml#l00024">CVector::alloc()</a>, <a class="el" href="a00086_source.xhtml#l00098">CNoveltyIf::create()</a>, <a class="el" href="a00086_source.xhtml#l00139">CNoveltyIf::getNumBlocks()</a>, <a class="el" href="a00110.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa6c7f4630a7389787bd65e45f0215fc14">kMemError</a>, <a class="el" href="a00110.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">kNoError</a>, <a class="el" href="a00179_source.xhtml#l00026">CNoveltyIf::kNoveltyFlux</a>, <a class="el" href="a00209_source.xhtml#l00114">m_bIsInitialized</a>, <a class="el" href="a00209_source.xhtml#l00110">m_iBeatHistoLength</a>, <a class="el" href="a00209_source.xhtml#l00107">m_iBlockLength</a>, <a class="el" href="a00209_source.xhtml#l00108">m_iHopLength</a>, <a class="el" href="a00209_source.xhtml#l00101">m_pCNovelty</a>, <a class="el" href="a00209_source.xhtml#l00105">m_pfBeatHisto</a>, <a class="el" href="a00209_source.xhtml#l00103">m_pfNovelty</a>, and <a class="el" href="a00209_source.xhtml#l00104">m_pfProcessBuff</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00429_a0a5fdbe7279508cf8164587ffa41c76d_cgraph.svg" width="100%" height="404"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="abc96a9de9093f6617510f4dbe02b82ce" name="abc96a9de9093f6617510f4dbe02b82ce"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abc96a9de9093f6617510f4dbe02b82ce">&#9670;&nbsp;</a></span>init_() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00110.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> CBeatHistoIf::init_ </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>strAudioFilePath</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>init configuration </p>

<p class="definition">Definition at line <a class="el" href="a00080_source.xhtml#l00227">227</a> of file <a class="el" href="a00080_source.xhtml">BeatHisto.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  228</span>{</div>
<div class="line"><span class="lineno">  229</span>    <span class="keywordflow">if</span> (<a class="code hl_enumvalue" href="a00110.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a> == <a class="code hl_function" href="a00489.xhtml#abae299cfe8e8806685cab18f59db8f72">CNoveltyIf::create</a>(<a class="code hl_variable" href="a00429.xhtml#a9738952cf5af0bff317560bc5e074c57">m_pCNovelty</a>, <a class="code hl_enumvalue" href="a00489.xhtml#aaaa808da8acb1f5df095f6178faeb4f4ab54085095907f70fca3bee22d3bc5d38">CNoveltyIf::kNoveltyFlux</a>, strAudioFilePath, <a class="code hl_variable" href="a00429.xhtml#a6d8c73e7cf2472b693ea75221a71ba2c">m_iBlockLength</a>, <a class="code hl_variable" href="a00429.xhtml#ac27abc244b47d4f1e5cde9f98453260a">m_iHopLength</a>))</div>
<div class="line"><span class="lineno">  230</span>    {</div>
<div class="line"><span class="lineno">  231</span>        <span class="keywordtype">int</span> iNumBlocks = 0;</div>
<div class="line"><span class="lineno">  232</span>        <a class="code hl_variable" href="a00429.xhtml#a9738952cf5af0bff317560bc5e074c57">m_pCNovelty</a>-&gt;<a class="code hl_function" href="a00489.xhtml#aa4193070cac8cac64ad8dc222fb612e8">getNumBlocks</a>(iNumBlocks);</div>
<div class="line"><span class="lineno">  233</span>        assert(iNumBlocks &gt; 2);</div>
<div class="line"><span class="lineno">  234</span>        <a class="code hl_function" href="a00477.xhtml#abaadac98b1cad18b7b568852bc951696">CVector::alloc</a>(<a class="code hl_variable" href="a00429.xhtml#af1432b150aab8520153aea2490f331b0">m_pfNovelty</a>, iNumBlocks);</div>
<div class="line"><span class="lineno">  235</span> </div>
<div class="line"><span class="lineno">  236</span>        <a class="code hl_variable" href="a00429.xhtml#a9738952cf5af0bff317560bc5e074c57">m_pCNovelty</a>-&gt;<a class="code hl_function" href="a00489.xhtml#afeb1d21ee59d7f745fca0e22ab33a65b">getTimeStamps</a>(<a class="code hl_variable" href="a00429.xhtml#af1432b150aab8520153aea2490f331b0">m_pfNovelty</a>);</div>
<div class="line"><span class="lineno">  237</span>        <a class="code hl_variable" href="a00429.xhtml#abbfa62374a59a0f7a967bc9d275669b0">m_fSampleRate</a> = <a class="code hl_variable" href="a00429.xhtml#ac27abc244b47d4f1e5cde9f98453260a">m_iHopLength</a> / (<a class="code hl_variable" href="a00429.xhtml#af1432b150aab8520153aea2490f331b0">m_pfNovelty</a>[1] - <a class="code hl_variable" href="a00429.xhtml#af1432b150aab8520153aea2490f331b0">m_pfNovelty</a>[0]);</div>
<div class="line"><span class="lineno">  238</span> </div>
<div class="line"><span class="lineno">  239</span>        <a class="code hl_function" href="a00477.xhtml#abaadac98b1cad18b7b568852bc951696">CVector::alloc</a>(<a class="code hl_variable" href="a00429.xhtml#a55206ff18aa3617308745c9e515cfa5c">m_pfProcessBuff</a>, <span class="keyword">static_cast&lt;</span><span class="keywordtype">long</span> <span class="keywordtype">long</span><span class="keyword">&gt;</span>(<a class="code hl_variable" href="a00429.xhtml#a8ff01782c75c39706e46a035b557479f">m_iBeatHistoLength</a>) * 2);</div>
<div class="line"><span class="lineno">  240</span> </div>
<div class="line"><span class="lineno">  241</span>        <a class="code hl_function" href="a00477.xhtml#abaadac98b1cad18b7b568852bc951696">CVector::alloc</a>(<a class="code hl_variable" href="a00429.xhtml#adcaa3e0a45439d92a33610cb7225412e">m_pfBeatHisto</a>, <span class="keyword">static_cast&lt;</span><span class="keywordtype">long</span> <span class="keywordtype">long</span><span class="keyword">&gt;</span>(<a class="code hl_variable" href="a00429.xhtml#a8ff01782c75c39706e46a035b557479f">m_iBeatHistoLength</a>) + 1);</div>
<div class="line"><span class="lineno">  242</span> </div>
<div class="line"><span class="lineno">  243</span>        <a class="code hl_variable" href="a00429.xhtml#aa1412f9c268dde46889e7642512bdb76">m_bIsInitialized</a> = <span class="keyword">true</span>;</div>
<div class="line"><span class="lineno">  244</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00110.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><span class="lineno">  245</span>    }</div>
<div class="line"><span class="lineno">  246</span>    <span class="keywordflow">else</span></div>
<div class="line"><span class="lineno">  247</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00110.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa6c7f4630a7389787bd65e45f0215fc14">Error_t::kMemError</a>;</div>
<div class="line"><span class="lineno">  248</span>}</div>
<div class="ttc" id="aa00489_xhtml_afeb1d21ee59d7f745fca0e22ab33a65b"><div class="ttname"><a href="a00489.xhtml#afeb1d21ee59d7f745fca0e22ab33a65b">CNoveltyIf::getTimeStamps</a></div><div class="ttdeci">Error_t getTimeStamps(float *pfAxisTicks) const</div><div class="ttdef"><b>Definition:</b> <a href="a00086_source.xhtml#l00165">Novelty.cpp:165</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00143_source.xhtml#l00024">CVector::alloc()</a>, <a class="el" href="a00086_source.xhtml#l00098">CNoveltyIf::create()</a>, <a class="el" href="a00086_source.xhtml#l00139">CNoveltyIf::getNumBlocks()</a>, <a class="el" href="a00086_source.xhtml#l00165">CNoveltyIf::getTimeStamps()</a>, <a class="el" href="a00110.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa6c7f4630a7389787bd65e45f0215fc14">kMemError</a>, <a class="el" href="a00110.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">kNoError</a>, <a class="el" href="a00179_source.xhtml#l00026">CNoveltyIf::kNoveltyFlux</a>, <a class="el" href="a00209_source.xhtml#l00114">m_bIsInitialized</a>, <a class="el" href="a00209_source.xhtml#l00112">m_fSampleRate</a>, <a class="el" href="a00209_source.xhtml#l00110">m_iBeatHistoLength</a>, <a class="el" href="a00209_source.xhtml#l00107">m_iBlockLength</a>, <a class="el" href="a00209_source.xhtml#l00108">m_iHopLength</a>, <a class="el" href="a00209_source.xhtml#l00101">m_pCNovelty</a>, <a class="el" href="a00209_source.xhtml#l00105">m_pfBeatHisto</a>, <a class="el" href="a00209_source.xhtml#l00103">m_pfNovelty</a>, and <a class="el" href="a00209_source.xhtml#l00104">m_pfProcessBuff</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00080_source.xhtml#l00019">create()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00429_abc96a9de9093f6617510f4dbe02b82ce_cgraph.svg" width="100%" height="480"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00429_abc96a9de9093f6617510f4dbe02b82ce_icgraph.svg" width="423" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="af0731429bb1c7a5cb3ca22aa54bf163b" name="af0731429bb1c7a5cb3ca22aa54bf163b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af0731429bb1c7a5cb3ca22aa54bf163b">&#9670;&nbsp;</a></span>operator=()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00429.xhtml">CBeatHistoIf</a> &amp; CBeatHistoIf::operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="a00429.xhtml">CBeatHistoIf</a> &amp;&#160;</td>
          <td class="paramname"><em>c</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a3c3a39ab20e4ca9f1771bbd6f70327c9" name="a3c3a39ab20e4ca9f1771bbd6f70327c9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3c3a39ab20e4ca9f1771bbd6f70327c9">&#9670;&nbsp;</a></span>reset_()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00110.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> CBeatHistoIf::reset_ </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>reset configuration </p>

<p class="definition">Definition at line <a class="el" href="a00080_source.xhtml#l00210">210</a> of file <a class="el" href="a00080_source.xhtml">BeatHisto.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  211</span>{</div>
<div class="line"><span class="lineno">  212</span>    <a class="code hl_function" href="a00477.xhtml#aa86bdb0c663d4d52f2765793756f8737">CVector::free</a>(<a class="code hl_variable" href="a00429.xhtml#af1432b150aab8520153aea2490f331b0">m_pfNovelty</a>);</div>
<div class="line"><span class="lineno">  213</span>    <a class="code hl_function" href="a00477.xhtml#aa86bdb0c663d4d52f2765793756f8737">CVector::free</a>(<a class="code hl_variable" href="a00429.xhtml#a55206ff18aa3617308745c9e515cfa5c">m_pfProcessBuff</a>);</div>
<div class="line"><span class="lineno">  214</span>    <a class="code hl_function" href="a00477.xhtml#aa86bdb0c663d4d52f2765793756f8737">CVector::free</a>(<a class="code hl_variable" href="a00429.xhtml#adcaa3e0a45439d92a33610cb7225412e">m_pfBeatHisto</a>);</div>
<div class="line"><span class="lineno">  215</span> </div>
<div class="line"><span class="lineno">  216</span>    <a class="code hl_variable" href="a00429.xhtml#a6d8c73e7cf2472b693ea75221a71ba2c">m_iBlockLength</a> = 0;</div>
<div class="line"><span class="lineno">  217</span>    <a class="code hl_variable" href="a00429.xhtml#ac27abc244b47d4f1e5cde9f98453260a">m_iHopLength</a> = 0;</div>
<div class="line"><span class="lineno">  218</span>    <a class="code hl_variable" href="a00429.xhtml#abbfa62374a59a0f7a967bc9d275669b0">m_fSampleRate</a> = 0;</div>
<div class="line"><span class="lineno">  219</span> </div>
<div class="line"><span class="lineno">  220</span>    <a class="code hl_function" href="a00489.xhtml#aa078a8242089a58179280c824f8ca4f9">CNoveltyIf::destroy</a>(<a class="code hl_variable" href="a00429.xhtml#a9738952cf5af0bff317560bc5e074c57">m_pCNovelty</a>);</div>
<div class="line"><span class="lineno">  221</span> </div>
<div class="line"><span class="lineno">  222</span>    <a class="code hl_variable" href="a00429.xhtml#aa1412f9c268dde46889e7642512bdb76">m_bIsInitialized</a> = <span class="keyword">false</span>;</div>
<div class="line"><span class="lineno">  223</span> </div>
<div class="line"><span class="lineno">  224</span>    <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00110.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><span class="lineno">  225</span>}</div>
<div class="ttc" id="aa00477_xhtml_aa86bdb0c663d4d52f2765793756f8737"><div class="ttname"><a href="a00477.xhtml#aa86bdb0c663d4d52f2765793756f8737">CVector::free</a></div><div class="ttdeci">static void free(T *&amp;ptVec)</div><div class="ttdef"><b>Definition:</b> <a href="a00143_source.xhtml#l00039">Vector.h:39</a></div></div>
<div class="ttc" id="aa00489_xhtml_aa078a8242089a58179280c824f8ca4f9"><div class="ttname"><a href="a00489.xhtml#aa078a8242089a58179280c824f8ca4f9">CNoveltyIf::destroy</a></div><div class="ttdeci">static Error_t destroy(CNoveltyIf *&amp;pCInstance)</div><div class="ttdef"><b>Definition:</b> <a href="a00086_source.xhtml#l00131">Novelty.cpp:131</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00086_source.xhtml#l00131">CNoveltyIf::destroy()</a>, <a class="el" href="a00143_source.xhtml#l00039">CVector::free()</a>, <a class="el" href="a00110.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">kNoError</a>, <a class="el" href="a00209_source.xhtml#l00114">m_bIsInitialized</a>, <a class="el" href="a00209_source.xhtml#l00112">m_fSampleRate</a>, <a class="el" href="a00209_source.xhtml#l00107">m_iBlockLength</a>, <a class="el" href="a00209_source.xhtml#l00108">m_iHopLength</a>, <a class="el" href="a00209_source.xhtml#l00101">m_pCNovelty</a>, <a class="el" href="a00209_source.xhtml#l00105">m_pfBeatHisto</a>, <a class="el" href="a00209_source.xhtml#l00103">m_pfNovelty</a>, and <a class="el" href="a00209_source.xhtml#l00104">m_pfProcessBuff</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00080_source.xhtml#l00014">~CBeatHistoIf()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00429_a3c3a39ab20e4ca9f1771bbd6f70327c9_cgraph.svg" width="328" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00429_a3c3a39ab20e4ca9f1771bbd6f70327c9_icgraph.svg" width="383" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="aa1412f9c268dde46889e7642512bdb76" name="aa1412f9c268dde46889e7642512bdb76"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa1412f9c268dde46889e7642512bdb76">&#9670;&nbsp;</a></span>m_bIsInitialized</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00227.xhtml#abb452686968e48b67397da5f97445f5b">bool</a> CBeatHistoIf::m_bIsInitialized = <a class="el" href="a00227.xhtml#a65e9886d74aaee76545e83dd09011727">false</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>true if initialized </p>

<p class="definition">Definition at line <a class="el" href="a00209_source.xhtml#l00114">114</a> of file <a class="el" href="a00209_source.xhtml">BeatHisto.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00080_source.xhtml#l00113">compBeatHisto()</a>, <a class="el" href="a00080_source.xhtml#l00082">getBeatHistoAxisTicks()</a>, <a class="el" href="a00080_source.xhtml#l00063">getNumBins()</a>, <a class="el" href="a00080_source.xhtml#l00227">init_()</a>, and <a class="el" href="a00080_source.xhtml#l00210">reset_()</a>.</p>

</div>
</div>
<a id="abbfa62374a59a0f7a967bc9d275669b0" name="abbfa62374a59a0f7a967bc9d275669b0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abbfa62374a59a0f7a967bc9d275669b0">&#9670;&nbsp;</a></span>m_fSampleRate</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float CBeatHistoIf::m_fSampleRate = 0</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>sample rate </p>

<p class="definition">Definition at line <a class="el" href="a00209_source.xhtml#l00112">112</a> of file <a class="el" href="a00209_source.xhtml">BeatHisto.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00080_source.xhtml#l00113">compBeatHisto()</a>, <a class="el" href="a00080_source.xhtml#l00270">compHistoRange_()</a>, <a class="el" href="a00080_source.xhtml#l00082">getBeatHistoAxisTicks()</a>, <a class="el" href="a00080_source.xhtml#l00227">init_()</a>, and <a class="el" href="a00080_source.xhtml#l00210">reset_()</a>.</p>

</div>
</div>
<a id="a8ff01782c75c39706e46a035b557479f" name="a8ff01782c75c39706e46a035b557479f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8ff01782c75c39706e46a035b557479f">&#9670;&nbsp;</a></span>m_iBeatHistoLength</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const int CBeatHistoIf::m_iBeatHistoLength = 65536</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>default length of FFT </p>

<p class="definition">Definition at line <a class="el" href="a00209_source.xhtml#l00110">110</a> of file <a class="el" href="a00209_source.xhtml">BeatHisto.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00080_source.xhtml#l00113">compBeatHisto()</a>, <a class="el" href="a00080_source.xhtml#l00270">compHistoRange_()</a>, <a class="el" href="a00080_source.xhtml#l00082">getBeatHistoAxisTicks()</a>, and <a class="el" href="a00080_source.xhtml#l00227">init_()</a>.</p>

</div>
</div>
<a id="a6d8c73e7cf2472b693ea75221a71ba2c" name="a6d8c73e7cf2472b693ea75221a71ba2c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6d8c73e7cf2472b693ea75221a71ba2c">&#9670;&nbsp;</a></span>m_iBlockLength</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int CBeatHistoIf::m_iBlockLength = 0</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>processing block length for novelty </p>

<p class="definition">Definition at line <a class="el" href="a00209_source.xhtml#l00107">107</a> of file <a class="el" href="a00209_source.xhtml">BeatHisto.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00080_source.xhtml#l00082">getBeatHistoAxisTicks()</a>, <a class="el" href="a00080_source.xhtml#l00227">init_()</a>, and <a class="el" href="a00080_source.xhtml#l00210">reset_()</a>.</p>

</div>
</div>
<a id="ac27abc244b47d4f1e5cde9f98453260a" name="ac27abc244b47d4f1e5cde9f98453260a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac27abc244b47d4f1e5cde9f98453260a">&#9670;&nbsp;</a></span>m_iHopLength</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int CBeatHistoIf::m_iHopLength = 0</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>hop length for novelty </p>

<p class="definition">Definition at line <a class="el" href="a00209_source.xhtml#l00108">108</a> of file <a class="el" href="a00209_source.xhtml">BeatHisto.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00080_source.xhtml#l00113">compBeatHisto()</a>, <a class="el" href="a00080_source.xhtml#l00270">compHistoRange_()</a>, <a class="el" href="a00080_source.xhtml#l00082">getBeatHistoAxisTicks()</a>, <a class="el" href="a00080_source.xhtml#l00227">init_()</a>, and <a class="el" href="a00080_source.xhtml#l00210">reset_()</a>.</p>

</div>
</div>
<a id="a23b9ad80b0361e06678d1d661b85b963" name="a23b9ad80b0361e06678d1d661b85b963"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a23b9ad80b0361e06678d1d661b85b963">&#9670;&nbsp;</a></span>m_pCCcf</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00517.xhtml">CCcf</a>* CBeatHistoIf::m_pCCcf = 0</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>correlation instance </p>

<p class="definition">Definition at line <a class="el" href="a00209_source.xhtml#l00099">99</a> of file <a class="el" href="a00209_source.xhtml">BeatHisto.h</a>.</p>

</div>
</div>
<a id="ad8450929df77fce9b3792cba35040ae1" name="ad8450929df77fce9b3792cba35040ae1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad8450929df77fce9b3792cba35040ae1">&#9670;&nbsp;</a></span>m_pCFft</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00449.xhtml">CFft</a>* CBeatHistoIf::m_pCFft = 0</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>fft instance </p>

<p class="definition">Definition at line <a class="el" href="a00209_source.xhtml#l00098">98</a> of file <a class="el" href="a00209_source.xhtml">BeatHisto.h</a>.</p>

</div>
</div>
<a id="a9738952cf5af0bff317560bc5e074c57" name="a9738952cf5af0bff317560bc5e074c57"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9738952cf5af0bff317560bc5e074c57">&#9670;&nbsp;</a></span>m_pCNovelty</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00489.xhtml">CNoveltyIf</a>* CBeatHistoIf::m_pCNovelty = 0</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>novelty function extraction instance </p>

<p class="definition">Definition at line <a class="el" href="a00209_source.xhtml#l00101">101</a> of file <a class="el" href="a00209_source.xhtml">BeatHisto.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00080_source.xhtml#l00113">compBeatHisto()</a>, <a class="el" href="a00080_source.xhtml#l00227">init_()</a>, and <a class="el" href="a00080_source.xhtml#l00210">reset_()</a>.</p>

</div>
</div>
<a id="adcaa3e0a45439d92a33610cb7225412e" name="adcaa3e0a45439d92a33610cb7225412e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adcaa3e0a45439d92a33610cb7225412e">&#9670;&nbsp;</a></span>m_pfBeatHisto</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float* CBeatHistoIf::m_pfBeatHisto = 0</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>result buffer </p>

<p class="definition">Definition at line <a class="el" href="a00209_source.xhtml#l00105">105</a> of file <a class="el" href="a00209_source.xhtml">BeatHisto.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00080_source.xhtml#l00113">compBeatHisto()</a>, <a class="el" href="a00080_source.xhtml#l00227">init_()</a>, and <a class="el" href="a00080_source.xhtml#l00210">reset_()</a>.</p>

</div>
</div>
<a id="af1432b150aab8520153aea2490f331b0" name="af1432b150aab8520153aea2490f331b0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af1432b150aab8520153aea2490f331b0">&#9670;&nbsp;</a></span>m_pfNovelty</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float* CBeatHistoIf::m_pfNovelty = 0</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>buffer to hold extracted nvelty function </p>

<p class="definition">Definition at line <a class="el" href="a00209_source.xhtml#l00103">103</a> of file <a class="el" href="a00209_source.xhtml">BeatHisto.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00080_source.xhtml#l00113">compBeatHisto()</a>, <a class="el" href="a00080_source.xhtml#l00227">init_()</a>, and <a class="el" href="a00080_source.xhtml#l00210">reset_()</a>.</p>

</div>
</div>
<a id="a55206ff18aa3617308745c9e515cfa5c" name="a55206ff18aa3617308745c9e515cfa5c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a55206ff18aa3617308745c9e515cfa5c">&#9670;&nbsp;</a></span>m_pfProcessBuff</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float* CBeatHistoIf::m_pfProcessBuff = 0</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>temporary processing buffer </p>

<p class="definition">Definition at line <a class="el" href="a00209_source.xhtml#l00104">104</a> of file <a class="el" href="a00209_source.xhtml">BeatHisto.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00080_source.xhtml#l00113">compBeatHisto()</a>, <a class="el" href="a00080_source.xhtml#l00227">init_()</a>, and <a class="el" href="a00080_source.xhtml#l00210">reset_()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="a00209_source.xhtml">BeatHisto.h</a></li>
<li><a class="el" href="a00080_source.xhtml">BeatHisto.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="a00429.xhtml">CBeatHistoIf</a></li>
    <li class="footer">Generated on Sat Jun 11 2022 21:04:56 for ACA by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.4 </li>
  </ul>
</div>
</body>
</html>
