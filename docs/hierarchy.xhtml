<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.4"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ACA: Class Hierarchy</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">ACA<span id="projectnumber">&#160;0.3.1</span>
   </div>
   <div id="projectbrief">Example Code for Audio Content Analysis</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.4 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search",'Search','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('hierarchy.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle"><div class="title">Class Hierarchy</div></div>
</div><!--header-->
<div class="contents">
<div class="textblock">
<p><a href="inherits.xhtml">Go to the graphical class hierarchy</a></p>
This inheritance list is sorted roughly, but not completely, alphabetically:</div><div class="directory">
<div class="levels">[detail level <span onclick="javascript:toggleLevel(1);">1</span><span onclick="javascript:toggleLevel(2);">2</span>]</div><table class="directory">
<tr id="row_0_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_0_" class="arrow" onclick="toggleFolder('0_')">&#9660;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="a00442.xhtml" target="_self">CAudioFileIf</a></td><td class="desc">Open, read, and write audio files </td></tr>
<tr id="row_0_0_"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="a00434.xhtml" target="_self">CAudioFileRaw</a></td><td class="desc">Open, read, and write raw audio files in 16 bit integer little endian format </td></tr>
<tr id="row_0_1_" class="even"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="a00438.xhtml" target="_self">CAudioFileSndLib</a></td><td class="desc">Open, read, and write audio files with sndlib (CMake option WITH_SNDLIB has to be ON) </td></tr>
<tr id="row_1_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="a00450.xhtml" target="_self">CBeatHistoIf</a></td><td class="desc">Class for computation of a BeatHistogram from either a file or a vector </td></tr>
<tr id="row_2_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_2_" class="arrow" onclick="toggleFolder('2_')">&#9660;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="a00542.xhtml" target="_self">CBlockAudioIf</a></td><td class="desc">Forward declaration </td></tr>
<tr id="row_2_0_"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="a00414.xhtml" target="_self">CBlockAudioBuffer</a></td><td class="desc">Class for audio blocking from a buffer </td></tr>
<tr id="row_2_1_" class="even"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="a00410.xhtml" target="_self">CBlockAudioFile</a></td><td class="desc">Class for audio blocking from a file </td></tr>
<tr id="row_3_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="a00482.xhtml" target="_self">CButterLp</a></td><td class="desc">Class providing a generic filter implementation implementation inspired by src from <a href="https://exstrom.com/journal/sigproc/dsigproc.html">https://exstrom.com/journal/sigproc/dsigproc.html</a> </td></tr>
<tr id="row_4_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="a00546.xhtml" target="_self">CCcf</a></td><td class="desc">Computation of correlation (freq domain implementation) </td></tr>
<tr id="row_5_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="a00458.xhtml" target="_self">CChordFromBlockIf</a></td><td class="desc">Class for computation of a chord from a magnitude spectrum </td></tr>
<tr id="row_6_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_6_" class="arrow" onclick="toggleFolder('6_')">&#9660;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="a00454.xhtml" target="_self">CChordIf</a></td><td class="desc">Class for computation of a chord progression from either a file or a vector </td></tr>
<tr id="row_6_0_"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="a00310.xhtml" target="_self">CChordFromFile</a></td><td class="desc">Class for computation of chord progression from a file </td></tr>
<tr id="row_6_1_" class="even"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="a00314.xhtml" target="_self">CChordFromVector</a></td><td class="desc">Class for computation of chord progression from a vector of audio data </td></tr>
<tr id="row_7_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_7_" class="arrow" onclick="toggleFolder('7_')">&#9660;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="a00462.xhtml" target="_self">CClassifierBase</a></td><td class="desc">Abstract base class for traditional classifiers </td></tr>
<tr id="row_7_0_" class="even"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="a00570.xhtml" target="_self">CGmmClassifier</a></td><td class="desc">Computation of k nearest neighbor </td></tr>
<tr id="row_7_1_"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="a00626.xhtml" target="_self">CKnn</a></td><td class="desc">Computation of k nearest neighbor </td></tr>
<tr id="row_8_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="a00550.xhtml" target="_self">CConversion</a></td><td class="desc">Class for various frequency conversion functions </td></tr>
<tr id="row_9_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="a00618.xhtml" target="_self">CDtw</a></td><td class="desc">Simple dynamic time warping </td></tr>
<tr id="row_10_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_10_" class="arrow" onclick="toggleFolder('10_')">&#9660;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="a00470.xhtml" target="_self">CFeatureFromBlockIf</a></td><td class="desc">Class for computation of a feature from a block of data (e.g., time or magnitude spectrum) </td></tr>
<tr id="row_10_0_"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="a00326.xhtml" target="_self">CFeatureSpectralFlux</a></td><td class="desc">Class for computation of the spectral flux </td></tr>
<tr id="row_10_1_" class="even"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="a00330.xhtml" target="_self">CFeatureSpectralMfccs</a></td><td class="desc">Class for computation of the mfccs </td></tr>
<tr id="row_10_2_"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="a00334.xhtml" target="_self">CFeatureSpectralPitchChroma</a></td><td class="desc">Class for computation of the pitch chroma </td></tr>
<tr id="row_10_3_" class="even"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="a00338.xhtml" target="_self">CFeatureSpectralRolloff</a></td><td class="desc">Class for computation of the spectral rolloff </td></tr>
<tr id="row_10_4_"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="a00342.xhtml" target="_self">CFeatureSpectralTonalPowerRatio</a></td><td class="desc"></td></tr>
<tr id="row_10_5_" class="even"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="a00346.xhtml" target="_self">CFeatureTimeAcfCoeff</a></td><td class="desc">Class for computation of an acf coefficient </td></tr>
<tr id="row_10_6_"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="a00350.xhtml" target="_self">CFeatureTimeMaxAcf</a></td><td class="desc">Class for computation of the maximum of the acf </td></tr>
<tr id="row_10_7_" class="even"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="a00354.xhtml" target="_self">CFeatureTimePeakEnvelope</a></td><td class="desc">Class for computation of the peak envelope </td></tr>
<tr id="row_10_8_"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="a00358.xhtml" target="_self">CFeatureTimeRms</a></td><td class="desc">Class for computation of the rms </td></tr>
<tr id="row_11_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_11_" class="arrow" onclick="toggleFolder('11_')">&#9660;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="a00466.xhtml" target="_self">CFeatureIf</a></td><td class="desc">Class for computation of a instantaneous feature from either a file or a vector, supports both one-dimensional and multi-dimensional features </td></tr>
<tr id="row_11_0_"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="a00318.xhtml" target="_self">CFeatureFromFile</a></td><td class="desc">Class for computation of a feature from a file </td></tr>
<tr id="row_11_1_" class="even"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="a00322.xhtml" target="_self">CFeatureFromVector</a></td><td class="desc">Class for computation of a feature from a vector of audio data </td></tr>
<tr id="row_12_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="a00474.xhtml" target="_self">CFft</a></td><td class="desc">Class for FFT computation with windowing </td></tr>
<tr id="row_13_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="a00478.xhtml" target="_self">CFilter&lt; T &gt;</a></td><td class="desc">Class providing a generic filter implementation </td></tr>
<tr id="row_14_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="a00478.xhtml" target="_self">CFilter&lt; float &gt;</a></td><td class="desc"></td></tr>
<tr id="row_15_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="a00554.xhtml" target="_self">CFingerprint</a></td><td class="desc">Class for computation of a fingerprint from either a file or a vector </td></tr>
<tr id="row_16_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="a00418.xhtml" target="_self">CGammatone</a></td><td class="desc">Class for a single gammtone filter </td></tr>
<tr id="row_17_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_17_" class="arrow" onclick="toggleFolder('17_')">&#9660;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="a00558.xhtml" target="_self">CGammaToneFbIf</a></td><td class="desc">Class for computation of a Gammatone filterbank output from either a file or a vector </td></tr>
<tr id="row_17_0_"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="a00422.xhtml" target="_self">CGammaToneFbFromFile</a></td><td class="desc">Class for computation of the filterbank outputs from a file </td></tr>
<tr id="row_17_1_" class="even"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="a00426.xhtml" target="_self">CGammaToneFbFromVector</a></td><td class="desc">Class for computation of the filterbank outputs from a vector of audio data </td></tr>
<tr id="row_17_2_"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="a00430.xhtml" target="_self">CGammaToneFbRealTime</a></td><td class="desc">Class for computation of the filterbank outputs in real time block by block </td></tr>
<tr id="row_18_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="a00566.xhtml" target="_self">CGmm</a></td><td class="desc">Implements Gaussian mixture model </td></tr>
<tr id="row_19_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="a00562.xhtml" target="_self">CGmmResult</a></td><td class="desc">Class holding the result/details of a Gaussian Mixture Model created with <a class="el" href="a00566.xhtml" title="implements Gaussian mixture model">CGmm</a> </td></tr>
<tr id="row_20_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="a00574.xhtml" target="_self">CInstFreq</a></td><td class="desc">Class for extracting the instantaneous frequency </td></tr>
<tr id="row_21_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="a00506.xhtml" target="_self">CKey</a></td><td class="desc">Class for computation of the key from either a file or a vector </td></tr>
<tr id="row_22_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="a00510.xhtml" target="_self">CKeyFromChroma</a></td><td class="desc">Computation of key profile distance </td></tr>
<tr id="row_23_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="a00622.xhtml" target="_self">CKmeans</a></td><td class="desc">Implements kmeans clustering </td></tr>
<tr id="row_24_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="a00578.xhtml" target="_self">CLeaveOneOutCrossVal</a></td><td class="desc">Computation of leave one out cross validation </td></tr>
<tr id="row_25_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="a00486.xhtml" target="_self">CMatrix</a></td><td class="desc">Class with static functions for matrix operations, works with both float and double (functionality only added when needed) </td></tr>
<tr id="row_26_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="a00586.xhtml" target="_self">CMovingAverage</a></td><td class="desc">Class for moving average low pass filtering </td></tr>
<tr id="row_27_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="a00594.xhtml" target="_self">CNmf</a></td><td class="desc">Computation of non-negative matrix factorization </td></tr>
<tr id="row_28_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="a00590.xhtml" target="_self">CNmfResult</a></td><td class="desc">Class holding the result of Non-Negative Matrix Factorization executed with <a class="el" href="a00594.xhtml" title="computation of non-negative matrix factorization">CNmf</a> </td></tr>
<tr id="row_29_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="a00606.xhtml" target="_self">CNormalizeAudio</a></td><td class="desc">Class for audio normalization offering three options </td></tr>
<tr id="row_30_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="a00518.xhtml" target="_self">CNoveltyFromBlockIf</a></td><td class="desc">Class for computation of a Novelty from a block of data (e.g., time or magnitude spectrum) </td></tr>
<tr id="row_31_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_31_" class="arrow" onclick="toggleFolder('31_')">&#9660;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="a00514.xhtml" target="_self">CNoveltyIf</a></td><td class="desc">Class for computation of a magnitude Novelty from either a file or a vector </td></tr>
<tr id="row_31_0_" class="even"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="a00362.xhtml" target="_self">CNoveltyFromFile</a></td><td class="desc">Class for computation of the novelty function from a file </td></tr>
<tr id="row_31_1_"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="a00366.xhtml" target="_self">CNoveltyFromVector</a></td><td class="desc">Class for computation of the novelty function from a vector of audio data </td></tr>
<tr id="row_32_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="a00598.xhtml" target="_self">CPca</a></td><td class="desc">Computation of principal component analysis </td></tr>
<tr id="row_33_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_33_" class="arrow" onclick="toggleFolder('33_')">&#9660;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="a00526.xhtml" target="_self">CPitchFromBlockIf</a></td><td class="desc">Class for computation of f0 from a block of data (e.g., time or magnitude spectrum) </td></tr>
<tr id="row_33_0_" class="even"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="a00378.xhtml" target="_self">CPitchSpectralAcf</a></td><td class="desc">Class for computation of the pitch via the acf of the magnitude spectrum </td></tr>
<tr id="row_33_1_"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="a00382.xhtml" target="_self">CPitchSpectralHps</a></td><td class="desc">Class for computation of the pitch via the hps of the magnitude spectrum </td></tr>
<tr id="row_33_2_" class="even"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="a00386.xhtml" target="_self">CPitchTimeAcf</a></td><td class="desc">Class for computation of the pitch via the acf of the time domain signal </td></tr>
<tr id="row_33_3_"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="a00394.xhtml" target="_self">CPitchTimeAmdf</a></td><td class="desc">Class for computation of the pitch via the amdf method from the time domain signal </td></tr>
<tr id="row_33_4_" class="even"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="a00390.xhtml" target="_self">CPitchTimeAuditory</a></td><td class="desc">Class for computation of the pitch via the auditory method from the time domain signal </td></tr>
<tr id="row_33_5_"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="a00398.xhtml" target="_self">CPitchTimeZeroCrossings</a></td><td class="desc">Class for computation of the pitch via the zero crossings method from the time domain signal </td></tr>
<tr id="row_34_" class="even"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_34_" class="arrow" onclick="toggleFolder('34_')">&#9660;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="a00522.xhtml" target="_self">CPitchIf</a></td><td class="desc">Class for computation of a magnitude Pitch from either a file or a vector </td></tr>
<tr id="row_34_0_"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="a00370.xhtml" target="_self">CPitchFromFile</a></td><td class="desc">Class for computation of the pitch from a file </td></tr>
<tr id="row_34_1_" class="even"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="a00374.xhtml" target="_self">CPitchFromVector</a></td><td class="desc">Class for computation of the pitch from a vector of audio data </td></tr>
<tr id="row_35_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="a00602.xhtml" target="_self">CPreProc</a></td><td class="desc">Class with static utility functions for pre-processing </td></tr>
<tr id="row_36_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="a00610.xhtml" target="_self">CResample</a></td><td class="desc">Class for simple interpolation/sample rate conversion </td></tr>
<tr id="row_37_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="a00490.xhtml" target="_self">CRingBuffer&lt; T &gt;</a></td><td class="desc">Implement a circular buffer of type T </td></tr>
<tr id="row_38_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="a00490.xhtml" target="_self">CRingBuffer&lt; float &gt;</a></td><td class="desc"></td></tr>
<tr id="row_39_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="a00614.xhtml" target="_self">CSeqFeatureSel</a></td><td class="desc">Computation of sequential feature forward selection </td></tr>
<tr id="row_40_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="a00582.xhtml" target="_self">CSinglePoleLp</a></td><td class="desc">Class for single-pole low pass filtering </td></tr>
<tr id="row_41_"><td class="entry"><span style="width:0px;display:inline-block;">&#160;</span><span id="arr_41_" class="arrow" onclick="toggleFolder('41_')">&#9660;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="a00530.xhtml" target="_self">CSpectrogramIf</a></td><td class="desc">Class for computation of a magnitude spectrogram from either a file or a vector </td></tr>
<tr id="row_41_0_" class="even"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="a00402.xhtml" target="_self">CSpectrogramFromFile</a></td><td class="desc">Class for computation of the spectrogram from a file </td></tr>
<tr id="row_41_1_"><td class="entry"><span style="width:32px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="a00406.xhtml" target="_self">CSpectrogramFromVector</a></td><td class="desc">Class for computation of the spectrogram from a vector of audio data </td></tr>
<tr id="row_42_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="a00538.xhtml" target="_self">CSubFingerprint</a></td><td class="desc">Class for computation of a subfingerprint from a magnitude spectrum, 256 subfingerprints comprise one fingerprint </td></tr>
<tr id="row_43_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="a00494.xhtml" target="_self">CSynthesis</a></td><td class="desc">Class with static functions for signal generation </td></tr>
<tr id="row_44_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="a00498.xhtml" target="_self">CUtil</a></td><td class="desc">Class with static utility functions </td></tr>
<tr id="row_45_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="a00502.xhtml" target="_self">CVector</a></td><td class="desc">Class with static functions for buffer operations with type T </td></tr>
<tr id="row_46_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="a00630.xhtml" target="_self">CViterbi</a></td><td class="desc">Viterbi algorithm </td></tr>
<tr id="row_47_"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="a00446.xhtml" target="_self">CAudioFileIf::FileSpec_t</a></td><td class="desc">Structure containing basic data specs of the file </td></tr>
<tr id="row_48_" class="even"><td class="entry"><span style="width:16px;display:inline-block;">&#160;</span><span class="icona"><span class="icon">C</span></span><a class="el" href="a00534.xhtml" target="_self">CSpectrogramIf::MelSpectrogramConfig_t</a></td><td class="desc">Structure holding configuration specifics for the mel spectrogram computation </td></tr>
</table>
</div><!-- directory -->
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="footer">Generated on Fri Jun 17 2022 19:19:12 for ACA by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.4 </li>
  </ul>
</div>
</body>
</html>
