<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 4.0.0 (20220602.1335)
 -->
<!-- Title: CChordFromVector Pages: 1 -->
<!--zoomable 2153 -->
<svg id="main" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" onload="init(evt)">
<style type="text/css"><![CDATA[
.edge:hover path { stroke: red; }
.edge:hover polygon { stroke: red; fill: red; }
]]></style>
<script type="text/javascript"><![CDATA[
var edges = document.getElementsByTagName('g');
if (edges && edges.length) {
  for (var i=0;i<edges.length;i++) {
    if (edges[i].id.substr(0,4)=='edge') {
      edges[i].setAttribute('class','edge');
    }
  }
}
]]></script>
        <defs>
                <circle id="rim" cx="0" cy="0" r="7"/>
                <circle id="rim2" cx="0" cy="0" r="3.5"/>
                <g id="zoomPlus">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomplus.mouseover" end="zoomplus.mouseout"/>
                        </use>
                        <path d="M-4,0h8M0,-4v8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="zoomMin">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomminus.mouseover" end="zoomminus.mouseout"/>
                        </use>
                        <path d="M-4,0h8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="dirArrow">
                        <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
               <g id="resetDef">
                       <use xlink:href="#rim2" fill="#404040">
                               <set attributeName="fill" to="#808080" begin="reset.mouseover" end="reset.mouseout"/>
                       </use>
               </g>
        </defs>

<script type="text/javascript">
var viewWidth = 898;
var viewHeight = 2153;
var sectionId = 'dynsection-1';
</script>
<script xlink:href="svgpan.js"/>
<svg id="graph" class="graph">
<g id="viewport">
<title>CChordFromVector</title>
<polygon fill="white" stroke="transparent" points="-4,4 -4,-2149 893.5,-2149 893.5,4 -4,4"/>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title=" ">
<polygon fill="#bfbfbf" stroke="black" points="354.5,-0.5 354.5,-112.5 507.5,-112.5 507.5,-0.5 354.5,-0.5"/>
<text text-anchor="middle" x="431" y="-100.5" font-family="Helvetica,sans-Serif" font-size="10.00">CChordFromVector</text>
<polyline fill="none" stroke="black" points="354.5,-93.5 507.5,-93.5 "/>
<text text-anchor="middle" x="431" y="-81.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="354.5,-74.5 507.5,-74.5 "/>
<text text-anchor="start" x="362.5" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CChordFromVector(const</text>
<text text-anchor="start" x="362.5" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfAudio, long</text>
<text text-anchor="start" x="362.5" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00"> long iAudioLength, float</text>
<text text-anchor="start" x="362.5" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00"> fSampleRate, int iBlockLength,</text>
<text text-anchor="start" x="362.5" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iHopLength)</text>
<text text-anchor="start" x="362.5" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CChordFromVector()</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="a00445.xhtml" target="_top" xlink:title="class for computation of a magnitude Chord from either a file or a vector">
<polygon fill="white" stroke="black" points="354,-150.5 354,-702.5 508,-702.5 508,-150.5 354,-150.5"/>
<text text-anchor="middle" x="431" y="-690.5" font-family="Helvetica,sans-Serif" font-size="10.00">CChordIf</text>
<polyline fill="none" stroke="black" points="354,-683.5 508,-683.5 "/>
<text text-anchor="start" x="362" y="-671.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iBlockLength</text>
<text text-anchor="start" x="362" y="-660.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iHopLength</text>
<text text-anchor="start" x="362" y="-649.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float m_fSampleRate</text>
<text text-anchor="start" x="362" y="-638.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float * m_pfProcessBuff2</text>
<text text-anchor="start" x="362" y="-627.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float * m_pfProcessBuff1</text>
<text text-anchor="start" x="362" y="-616.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float ** m_ppfChordProbs</text>
<text text-anchor="start" x="362" y="-605.5" font-family="Helvetica,sans-Serif" font-size="10.00"># bool m_bIsInitialized</text>
<polyline fill="none" stroke="black" points="354,-598.5 508,-598.5 "/>
<text text-anchor="start" x="362" y="-586.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getNumBlocks</text>
<text text-anchor="start" x="362" y="-575.5" font-family="Helvetica,sans-Serif" font-size="10.00">(int &amp;iNumBlocks) const</text>
<text text-anchor="start" x="362" y="-564.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ int getNumBlocks()</text>
<text text-anchor="start" x="362" y="-553.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const</text>
<text text-anchor="start" x="362" y="-542.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ float getTimeStamp</text>
<text text-anchor="start" x="362" y="-531.5" font-family="Helvetica,sans-Serif" font-size="10.00">(int iBlockIdx) const</text>
<text text-anchor="start" x="362" y="-520.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getTimeStamps</text>
<text text-anchor="start" x="362" y="-509.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfAxisTicks) const</text>
<text text-anchor="start" x="362" y="-498.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compChords</text>
<text text-anchor="start" x="362" y="-487.5" font-family="Helvetica,sans-Serif" font-size="10.00">(Chords_t *peChord,</text>
<text text-anchor="start" x="362" y="-476.5" font-family="Helvetica,sans-Serif" font-size="10.00"> bool bWithViterbi=true)</text>
<text text-anchor="start" x="362" y="-465.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="362" y="-454.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CChordIf *&amp;pCInstance,</text>
<text text-anchor="start" x="362" y="-443.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const std::string &amp;strAudioFile</text>
<text text-anchor="start" x="362" y="-432.5" font-family="Helvetica,sans-Serif" font-size="10.00">Path, int iBlockLength=8192,</text>
<text text-anchor="start" x="362" y="-421.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iHopLength=2048)</text>
<text text-anchor="start" x="362" y="-410.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="362" y="-399.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CChordIf *&amp;pCInstance,</text>
<text text-anchor="start" x="362" y="-388.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const float *pfAudio,</text>
<text text-anchor="start" x="362" y="-377.5" font-family="Helvetica,sans-Serif" font-size="10.00"> long long iNumFrames, float</text>
<text text-anchor="start" x="362" y="-366.5" font-family="Helvetica,sans-Serif" font-size="10.00"> fSampleRate, int iBlockLength</text>
<text text-anchor="start" x="362" y="-355.5" font-family="Helvetica,sans-Serif" font-size="10.00">=8192, int iHopLength=2048)</text>
<text text-anchor="start" x="362" y="-344.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="362" y="-333.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CChordIf *&amp;pCInstance)</text>
<text text-anchor="start" x="362" y="-322.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static std::string</text>
<text text-anchor="start" x="362" y="-311.5" font-family="Helvetica,sans-Serif" font-size="10.00"> getChordString(Chords</text>
<text text-anchor="start" x="362" y="-300.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t eChordIdx)</text>
<text text-anchor="start" x="362" y="-289.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Chords_t getChord</text>
<text text-anchor="start" x="362" y="-278.5" font-family="Helvetica,sans-Serif" font-size="10.00">IdxFromString(std::string</text>
<text text-anchor="start" x="362" y="-267.5" font-family="Helvetica,sans-Serif" font-size="10.00"> sChordString)</text>
<text text-anchor="start" x="362" y="-256.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CChordIf()</text>
<text text-anchor="start" x="362" y="-245.5" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CChordIf()</text>
<text text-anchor="start" x="362" y="-234.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CChordIf(const CChordIf</text>
<text text-anchor="start" x="362" y="-223.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;that)</text>
<text text-anchor="start" x="362" y="-212.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CChordIf &amp; operator</text>
<text text-anchor="start" x="362" y="-201.5" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CChordIf &amp;c)</text>
<text text-anchor="start" x="362" y="-190.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t reset_()</text>
<text text-anchor="start" x="362" y="-179.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t init_()</text>
<text text-anchor="start" x="362" y="-168.5" font-family="Helvetica,sans-Serif" font-size="10.00"># void initViterbi_()</text>
<text text-anchor="start" x="362" y="-157.5" font-family="Helvetica,sans-Serif" font-size="10.00"># void computeMagSpectrum_()</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M431,-140.32C431,-130.46 431,-121.16 431,-112.61"/>
<polygon fill="none" stroke="midnightblue" points="427.5,-140.36 431,-150.36 434.5,-140.36 427.5,-140.36"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="a00577.xhtml" target="_top" xlink:title="class for audio normalization offering three options">
<polygon fill="white" stroke="black" points="0,-877 0,-1110 150,-1110 150,-877 0,-877"/>
<text text-anchor="middle" x="75" y="-1098" font-family="Helvetica,sans-Serif" font-size="10.00">CNormalizeAudio</text>
<polyline fill="none" stroke="black" points="0,-1091 150,-1091 "/>
<text text-anchor="start" x="8" y="-1079" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float m_fScaleFactor</text>
<polyline fill="none" stroke="black" points="0,-1072 150,-1072 "/>
<text text-anchor="start" x="8" y="-1060" font-family="Helvetica,sans-Serif" font-size="10.00">+ CNormalizeAudio(CAudioFile</text>
<text text-anchor="start" x="8" y="-1049" font-family="Helvetica,sans-Serif" font-size="10.00">If *pCAudioFile)</text>
<text text-anchor="start" x="8" y="-1038" font-family="Helvetica,sans-Serif" font-size="10.00">+ CNormalizeAudio(const</text>
<text text-anchor="start" x="8" y="-1027" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfAudioBuff, long</text>
<text text-anchor="start" x="8" y="-1016" font-family="Helvetica,sans-Serif" font-size="10.00"> long iAudioLength)</text>
<text text-anchor="start" x="8" y="-1005" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CNormalizeAudio()</text>
<text text-anchor="start" x="8" y="-994" font-family="Helvetica,sans-Serif" font-size="10.00">+ void normalizeBlock</text>
<text text-anchor="start" x="8" y="-983" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfAudioBlock,</text>
<text text-anchor="start" x="8" y="-972" font-family="Helvetica,sans-Serif" font-size="10.00"> long long iNumSamples)</text>
<text text-anchor="start" x="8" y="-961" font-family="Helvetica,sans-Serif" font-size="10.00">+ static void normalizeSignal</text>
<text text-anchor="start" x="8" y="-950" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfAudio, long long</text>
<text text-anchor="start" x="8" y="-939" font-family="Helvetica,sans-Serif" font-size="10.00"> iNumSamples)</text>
<text text-anchor="start" x="8" y="-928" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CNormalizeAudio()</text>
<text text-anchor="start" x="8" y="-917" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CNormalizeAudio(const</text>
<text text-anchor="start" x="8" y="-906" font-family="Helvetica,sans-Serif" font-size="10.00"> CNormalizeAudio &amp;that)</text>
<text text-anchor="start" x="8" y="-895" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CNormalizeAudio &amp; operator</text>
<text text-anchor="start" x="8" y="-884" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CNormalizeAudio &amp;c)</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node2 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node2</title>
<path fill="none" stroke="#404040" d="M105.53,-876.78C118.9,-835.34 136.7,-789.21 159,-750 209.64,-660.94 286.14,-572.93 345.13,-511.4"/>
<polygon fill="none" stroke="#404040" points="345.37,-511.16 346.65,-504.06 353.7,-502.52 352.41,-509.62 345.37,-511.16"/>
<text text-anchor="middle" x="209.5" y="-724" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCNormalize</text>
</g>
<!-- Node4 -->
<g id="node4" class="node">
<title>Node4</title>
<g id="a_node4"><a xlink:href="a00529.xhtml" target="_top" xlink:title="forward declaration">
<polygon fill="white" stroke="black" points="168,-778 168,-1209 328,-1209 328,-778 168,-778"/>
<text text-anchor="middle" x="248" y="-1197" font-family="Helvetica,sans-Serif" font-size="10.00">CBlockAudioIf</text>
<polyline fill="none" stroke="black" points="168,-1190 328,-1190 "/>
<text text-anchor="start" x="176" y="-1178" font-family="Helvetica,sans-Serif" font-size="10.00"># long long m_iNumBlocks</text>
<text text-anchor="start" x="176" y="-1167" font-family="Helvetica,sans-Serif" font-size="10.00"># long long m_iCurrBlock</text>
<text text-anchor="start" x="176" y="-1156" font-family="Helvetica,sans-Serif" font-size="10.00"># long long m_iAudioLength</text>
<text text-anchor="start" x="176" y="-1145" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iBlockLength</text>
<text text-anchor="start" x="176" y="-1134" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iNumChannels</text>
<text text-anchor="start" x="176" y="-1123" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iHopLength</text>
<text text-anchor="start" x="176" y="-1112" font-family="Helvetica,sans-Serif" font-size="10.00"># float m_fSampleRate</text>
<polyline fill="none" stroke="black" points="168,-1105 328,-1105 "/>
<text text-anchor="start" x="176" y="-1093" font-family="Helvetica,sans-Serif" font-size="10.00">+ long long getNumBlocks</text>
<text text-anchor="start" x="176" y="-1082" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="176" y="-1071" font-family="Helvetica,sans-Serif" font-size="10.00">+ long long getLengthInSamples</text>
<text text-anchor="start" x="176" y="-1060" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="176" y="-1049" font-family="Helvetica,sans-Serif" font-size="10.00">+ float getTimeStamp</text>
<text text-anchor="start" x="176" y="-1038" font-family="Helvetica,sans-Serif" font-size="10.00">(long long iBlockIdx)</text>
<text text-anchor="start" x="176" y="-1027" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual bool isEndOfData</text>
<text text-anchor="start" x="176" y="-1016" font-family="Helvetica,sans-Serif" font-size="10.00">() const =0</text>
<text text-anchor="start" x="176" y="-1005" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual int getNextBlock</text>
<text text-anchor="start" x="176" y="-994" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfBlock, float</text>
<text text-anchor="start" x="176" y="-983" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfTimeStampInS=0)=0</text>
<text text-anchor="start" x="176" y="-972" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="176" y="-961" font-family="Helvetica,sans-Serif" font-size="10.00">(CBlockAudioIf *&amp;pCInstance,</text>
<text text-anchor="start" x="176" y="-950" font-family="Helvetica,sans-Serif" font-size="10.00"> CAudioFileIf *pCAudioFile,</text>
<text text-anchor="start" x="176" y="-939" font-family="Helvetica,sans-Serif" font-size="10.00"> int iBlockLength, int iHopLength)</text>
<text text-anchor="start" x="176" y="-928" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="176" y="-917" font-family="Helvetica,sans-Serif" font-size="10.00">(CBlockAudioIf *&amp;pCInstance,</text>
<text text-anchor="start" x="176" y="-906" font-family="Helvetica,sans-Serif" font-size="10.00"> const float *pfAudioBuff,</text>
<text text-anchor="start" x="176" y="-895" font-family="Helvetica,sans-Serif" font-size="10.00"> long long iAudioLength, int</text>
<text text-anchor="start" x="176" y="-884" font-family="Helvetica,sans-Serif" font-size="10.00"> iBlockLength, int iHopLength,</text>
<text text-anchor="start" x="176" y="-873" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate)</text>
<text text-anchor="start" x="176" y="-862" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="176" y="-851" font-family="Helvetica,sans-Serif" font-size="10.00">(CBlockAudioIf *&amp;pCInstance)</text>
<text text-anchor="start" x="176" y="-840" font-family="Helvetica,sans-Serif" font-size="10.00"># CBlockAudioIf()</text>
<text text-anchor="start" x="176" y="-829" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CBlockAudioIf()</text>
<text text-anchor="start" x="176" y="-818" font-family="Helvetica,sans-Serif" font-size="10.00"># CBlockAudioIf(const</text>
<text text-anchor="start" x="176" y="-807" font-family="Helvetica,sans-Serif" font-size="10.00"> CBlockAudioIf &amp;that)</text>
<text text-anchor="start" x="176" y="-796" font-family="Helvetica,sans-Serif" font-size="10.00"># CBlockAudioIf &amp; operator</text>
<text text-anchor="start" x="176" y="-785" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CBlockAudioIf &amp;c)</text>
</a>
</g>
</g>
<!-- Node4&#45;&gt;Node2 -->
<g id="edge3" class="edge">
<title>Node4&#45;&gt;Node2</title>
<path fill="none" stroke="#404040" d="M317.58,-777.69C328.2,-744.89 339.24,-710.81 350.08,-677.34"/>
<polygon fill="none" stroke="#404040" points="350.21,-676.94 348.25,-670 353.9,-665.53 355.86,-672.47 350.21,-676.94"/>
<text text-anchor="middle" x="376.5" y="-724" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCBlockAudio</text>
</g>
<!-- Node5 -->
<g id="node5" class="node">
<title>Node5</title>
<g id="a_node5"><a xlink:href="a00449.xhtml" target="_top" xlink:title="class for computation of a chord from a magnitude spectrum">
<polygon fill="white" stroke="black" points="346,-844 346,-1143 516,-1143 516,-844 346,-844"/>
<text text-anchor="middle" x="431" y="-1131" font-family="Helvetica,sans-Serif" font-size="10.00">CChordFromBlockIf</text>
<polyline fill="none" stroke="black" points="346,-1124 516,-1124 "/>
<text text-anchor="start" x="354" y="-1112" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iMagSpecLength</text>
<text text-anchor="start" x="354" y="-1101" font-family="Helvetica,sans-Serif" font-size="10.00"># float m_fSampleRate</text>
<text text-anchor="start" x="354" y="-1090" font-family="Helvetica,sans-Serif" font-size="10.00"># float * m_pfPitchChroma</text>
<text text-anchor="start" x="354" y="-1079" font-family="Helvetica,sans-Serif" font-size="10.00"># float ** m_ppfTemplateMatrix</text>
<polyline fill="none" stroke="black" points="346,-1072 516,-1072 "/>
<text text-anchor="start" x="354" y="-1060" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Error_t compChord</text>
<text text-anchor="start" x="354" y="-1049" font-family="Helvetica,sans-Serif" font-size="10.00">Prob(float *pfChordProb,</text>
<text text-anchor="start" x="354" y="-1038" font-family="Helvetica,sans-Serif" font-size="10.00"> const float *pfInput)</text>
<text text-anchor="start" x="354" y="-1027" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="354" y="-1016" font-family="Helvetica,sans-Serif" font-size="10.00">(CChordFromBlockIf *&amp;pCInstance,</text>
<text text-anchor="start" x="354" y="-1005" font-family="Helvetica,sans-Serif" font-size="10.00"> int iMagSpecLength, float</text>
<text text-anchor="start" x="354" y="-994" font-family="Helvetica,sans-Serif" font-size="10.00"> fSampleRate=1.F)</text>
<text text-anchor="start" x="354" y="-983" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="354" y="-972" font-family="Helvetica,sans-Serif" font-size="10.00">(CChordFromBlockIf *&amp;pCInstance)</text>
<text text-anchor="start" x="354" y="-961" font-family="Helvetica,sans-Serif" font-size="10.00"># CChordFromBlockIf</text>
<text text-anchor="start" x="354" y="-950" font-family="Helvetica,sans-Serif" font-size="10.00">(int iMagSpecLength,</text>
<text text-anchor="start" x="354" y="-939" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate)</text>
<text text-anchor="start" x="354" y="-928" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CChordFromBlockIf()</text>
<text text-anchor="start" x="354" y="-917" font-family="Helvetica,sans-Serif" font-size="10.00"># CChordFromBlockIf</text>
<text text-anchor="start" x="354" y="-906" font-family="Helvetica,sans-Serif" font-size="10.00">(const CChordFromBlockIf</text>
<text text-anchor="start" x="354" y="-895" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;that)</text>
<text text-anchor="start" x="354" y="-884" font-family="Helvetica,sans-Serif" font-size="10.00"># CChordFromBlockIf &amp;</text>
<text text-anchor="start" x="354" y="-873" font-family="Helvetica,sans-Serif" font-size="10.00"> operator=(const CChordFrom</text>
<text text-anchor="start" x="354" y="-862" font-family="Helvetica,sans-Serif" font-size="10.00">BlockIf &amp;c)</text>
<text text-anchor="start" x="354" y="-851" font-family="Helvetica,sans-Serif" font-size="10.00"># void genTemplateMatrix_()</text>
</a>
</g>
</g>
<!-- Node5&#45;&gt;Node2 -->
<g id="edge4" class="edge">
<title>Node5&#45;&gt;Node2</title>
<path fill="none" stroke="#404040" d="M431,-843.68C431,-803.85 431,-759.41 431,-714.81"/>
<polygon fill="none" stroke="#404040" points="431,-714.54 427,-708.54 431,-702.54 435,-708.54 431,-714.54"/>
<text text-anchor="middle" x="460.5" y="-724" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCChord</text>
</g>
<!-- Node6 -->
<g id="node6" class="node">
<title>Node6</title>
<g id="a_node6"><a xlink:href="a00457.xhtml" target="_top" xlink:title="class for computation of a feature from a block of data (e.g., time or magnitude spectrum)">
<polygon fill="white" stroke="black" points="337,-1284.5 337,-2144.5 525,-2144.5 525,-1284.5 337,-1284.5"/>
<text text-anchor="middle" x="431" y="-2132.5" font-family="Helvetica,sans-Serif" font-size="10.00">CFeatureFromBlockIf</text>
<polyline fill="none" stroke="black" points="337,-2125.5 525,-2125.5 "/>
<text text-anchor="start" x="345" y="-2113.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static const float</text>
<text text-anchor="start" x="345" y="-2102.5" font-family="Helvetica,sans-Serif" font-size="10.00"> m_kfFloatThresh</text>
<text text-anchor="start" x="345" y="-2091.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CFeatureIf::Feature</text>
<text text-anchor="start" x="345" y="-2080.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t m_eFeatureIdx</text>
<text text-anchor="start" x="345" y="-2069.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iDataLength</text>
<text text-anchor="start" x="345" y="-2058.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float m_fSampleRate</text>
<text text-anchor="start" x="345" y="-2047.5" font-family="Helvetica,sans-Serif" font-size="10.00"># const std::map&lt; CFeature</text>
<text text-anchor="start" x="345" y="-2036.5" font-family="Helvetica,sans-Serif" font-size="10.00">If::Feature_t, std::function</text>
<text text-anchor="start" x="345" y="-2025.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; float(const float *, int,</text>
<text text-anchor="start" x="345" y="-2014.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float)&gt; &gt; m_DispatchMap</text>
<polyline fill="none" stroke="black" points="337,-2007.5 525,-2007.5 "/>
<text text-anchor="start" x="345" y="-1995.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual int getFeatureDimensions</text>
<text text-anchor="start" x="345" y="-1984.5" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="345" y="-1973.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CFeatureIf::Feature</text>
<text text-anchor="start" x="345" y="-1962.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t getFeatureIdx() const</text>
<text text-anchor="start" x="345" y="-1951.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Error_t compFeature</text>
<text text-anchor="start" x="345" y="-1940.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfFeature, const</text>
<text text-anchor="start" x="345" y="-1929.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfInput)</text>
<text text-anchor="start" x="345" y="-1918.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual bool hasAdditional</text>
<text text-anchor="start" x="345" y="-1907.5" font-family="Helvetica,sans-Serif" font-size="10.00">Param() const</text>
<text text-anchor="start" x="345" y="-1896.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Error_t setAdditional</text>
<text text-anchor="start" x="345" y="-1885.5" font-family="Helvetica,sans-Serif" font-size="10.00">Param(float fParamValue)</text>
<text text-anchor="start" x="345" y="-1874.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="345" y="-1863.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CFeatureFromBlockIf</text>
<text text-anchor="start" x="345" y="-1852.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *&amp;pCInstance, CFeatureIf</text>
<text text-anchor="start" x="345" y="-1841.5" font-family="Helvetica,sans-Serif" font-size="10.00">::Feature_t eFeatureIdx,</text>
<text text-anchor="start" x="345" y="-1830.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="345" y="-1819.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="345" y="-1808.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CFeatureFromBlockIf *&amp;pCInstance)</text>
<text text-anchor="start" x="345" y="-1797.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="345" y="-1786.5" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralCentroid(const</text>
<text text-anchor="start" x="345" y="-1775.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfMagSpec, int</text>
<text text-anchor="start" x="345" y="-1764.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="345" y="-1753.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="345" y="-1742.5" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralCrestFactor(const</text>
<text text-anchor="start" x="345" y="-1731.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfMagSpec, int iDataLength,</text>
<text text-anchor="start" x="345" y="-1720.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate=1.F)</text>
<text text-anchor="start" x="345" y="-1709.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="345" y="-1698.5" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralDecrease(const</text>
<text text-anchor="start" x="345" y="-1687.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfMagSpec, int</text>
<text text-anchor="start" x="345" y="-1676.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="345" y="-1665.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="345" y="-1654.5" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralFlatness(const</text>
<text text-anchor="start" x="345" y="-1643.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfMagSpec, int</text>
<text text-anchor="start" x="345" y="-1632.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="345" y="-1621.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="345" y="-1610.5" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralFlux(const float</text>
<text text-anchor="start" x="345" y="-1599.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfMagSpec, const float</text>
<text text-anchor="start" x="345" y="-1588.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfPrevSpec, int iDataLength,</text>
<text text-anchor="start" x="345" y="-1577.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate=1.F)</text>
<text text-anchor="start" x="345" y="-1566.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="345" y="-1555.5" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralKurtosis(const</text>
<text text-anchor="start" x="345" y="-1544.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfMagSpec, int</text>
<text text-anchor="start" x="345" y="-1533.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="345" y="-1522.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="345" y="-1511.5" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralRolloff(const</text>
<text text-anchor="start" x="345" y="-1500.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfMagSpec, int</text>
<text text-anchor="start" x="345" y="-1489.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iDataLength, float fSampleRate</text>
<text text-anchor="start" x="345" y="-1478.5" font-family="Helvetica,sans-Serif" font-size="10.00">=1.F, float fKappa=.85F)</text>
<text text-anchor="start" x="345" y="-1467.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="345" y="-1456.5" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralSkewness(const</text>
<text text-anchor="start" x="345" y="-1445.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfMagSpec, int</text>
<text text-anchor="start" x="345" y="-1434.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="345" y="-1423.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 8 more...</text>
<text text-anchor="start" x="345" y="-1412.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CFeatureFromBlockIf()</text>
<text text-anchor="start" x="345" y="-1401.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CFeatureFromBlockIf</text>
<text text-anchor="start" x="345" y="-1390.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CFeatureIf::Feature</text>
<text text-anchor="start" x="345" y="-1379.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t eFeatureIdx, int iDataLength,</text>
<text text-anchor="start" x="345" y="-1368.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate)</text>
<text text-anchor="start" x="345" y="-1357.5" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CFeatureFromBlockIf()</text>
<text text-anchor="start" x="345" y="-1346.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CFeatureFromBlockIf</text>
<text text-anchor="start" x="345" y="-1335.5" font-family="Helvetica,sans-Serif" font-size="10.00">(const CFeatureFromBlockIf</text>
<text text-anchor="start" x="345" y="-1324.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;that)</text>
<text text-anchor="start" x="345" y="-1313.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CFeatureFromBlockIf</text>
<text text-anchor="start" x="345" y="-1302.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp; operator=(const CFeature</text>
<text text-anchor="start" x="345" y="-1291.5" font-family="Helvetica,sans-Serif" font-size="10.00">FromBlockIf &amp;c)</text>
</a>
</g>
</g>
<!-- Node6&#45;&gt;Node5 -->
<g id="edge5" class="edge">
<title>Node6&#45;&gt;Node5</title>
<path fill="none" stroke="#404040" d="M431,-1284.35C431,-1238.77 431,-1194.73 431,-1155.34"/>
<polygon fill="none" stroke="#404040" points="431,-1155.26 427,-1149.26 431,-1143.26 435,-1149.26 431,-1155.26"/>
<text text-anchor="middle" x="483.5" y="-1258" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCFeatureExtractor</text>
</g>
<!-- Node7 -->
<g id="node7" class="node">
<title>Node7</title>
<g id="a_node7"><a xlink:href="a00461.xhtml" target="_top" xlink:title="class for FFT computation with windowing">
<polygon fill="white" stroke="black" points="534,-750.5 534,-1236.5 722,-1236.5 722,-750.5 534,-750.5"/>
<text text-anchor="middle" x="628" y="-1224.5" font-family="Helvetica,sans-Serif" font-size="10.00">CFft</text>
<polyline fill="none" stroke="black" points="534,-1217.5 722,-1217.5 "/>
<text text-anchor="start" x="542" y="-1205.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_pfProcessBuff</text>
<text text-anchor="start" x="542" y="-1194.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_pfWindowBuff</text>
<text text-anchor="start" x="542" y="-1183.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iDataLength</text>
<text text-anchor="start" x="542" y="-1172.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iFftLength</text>
<text text-anchor="start" x="542" y="-1161.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Windowing_t m_ePrePostWindowOpt</text>
<text text-anchor="start" x="542" y="-1150.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; bool m_bIsInitialized</text>
<text text-anchor="start" x="542" y="-1139.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; static const float m_Pi</text>
<text text-anchor="start" x="542" y="-1128.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; static const float</text>
<text text-anchor="start" x="542" y="-1117.5" font-family="Helvetica,sans-Serif" font-size="10.00"> m_Pi2</text>
<polyline fill="none" stroke="black" points="534,-1110.5 722,-1110.5 "/>
<text text-anchor="start" x="542" y="-1098.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CFft()</text>
<text text-anchor="start" x="542" y="-1087.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CFft()</text>
<text text-anchor="start" x="542" y="-1076.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t init(int iBlockLength,</text>
<text text-anchor="start" x="542" y="-1065.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iZeroPadFactor=1, WindowFunction</text>
<text text-anchor="start" x="542" y="-1054.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t eWindow=kWindowHann, Windowing</text>
<text text-anchor="start" x="542" y="-1043.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t eWindowing=kPreWindow)</text>
<text text-anchor="start" x="542" y="-1032.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t reset()</text>
<text text-anchor="start" x="542" y="-1021.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t overrideWindow</text>
<text text-anchor="start" x="542" y="-1010.5" font-family="Helvetica,sans-Serif" font-size="10.00">(const float *pfNewWindow)</text>
<text text-anchor="start" x="542" y="-999.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getWindow(float</text>
<text text-anchor="start" x="542" y="-988.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfWindow) const</text>
<text text-anchor="start" x="542" y="-977.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compFft(complex</text>
<text text-anchor="start" x="542" y="-966.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t *pfSpectrum, const</text>
<text text-anchor="start" x="542" y="-955.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfInput)</text>
<text text-anchor="start" x="542" y="-944.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compInvFft</text>
<text text-anchor="start" x="542" y="-933.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfOutput, const</text>
<text text-anchor="start" x="542" y="-922.5" font-family="Helvetica,sans-Serif" font-size="10.00"> complex_t *pfSpectrum)</text>
<text text-anchor="start" x="542" y="-911.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getMagnitude</text>
<text text-anchor="start" x="542" y="-900.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfMag, const</text>
<text text-anchor="start" x="542" y="-889.5" font-family="Helvetica,sans-Serif" font-size="10.00"> complex_t *pfSpectrum)</text>
<text text-anchor="start" x="542" y="-878.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const</text>
<text text-anchor="start" x="542" y="-867.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getPhase(float</text>
<text text-anchor="start" x="542" y="-856.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfPhase, const complex</text>
<text text-anchor="start" x="542" y="-845.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t *pfSpectrum) const</text>
<text text-anchor="start" x="542" y="-834.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 7 more...</text>
<text text-anchor="start" x="542" y="-823.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CFft(const CFft &amp;that)</text>
<text text-anchor="start" x="542" y="-812.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CFft &amp; operator=(const</text>
<text text-anchor="start" x="542" y="-801.5" font-family="Helvetica,sans-Serif" font-size="10.00"> CFft &amp;c)</text>
<text text-anchor="start" x="542" y="-790.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Error_t allocMemory_()</text>
<text text-anchor="start" x="542" y="-779.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Error_t freeMemory_()</text>
<text text-anchor="start" x="542" y="-768.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Error_t computeWindow</text>
<text text-anchor="start" x="542" y="-757.5" font-family="Helvetica,sans-Serif" font-size="10.00">_(WindowFunction_t eWindow)</text>
</a>
</g>
</g>
<!-- Node7&#45;&gt;Node2 -->
<g id="edge6" class="edge">
<title>Node7&#45;&gt;Node2</title>
<path fill="none" stroke="#404040" d="M543.6,-750.43C533.13,-720.42 522.45,-689.79 512.04,-659.93"/>
<polygon fill="none" stroke="#404040" points="512.02,-659.85 506.26,-655.5 508.06,-648.52 513.82,-652.87 512.02,-659.85"/>
<text text-anchor="middle" x="559" y="-724" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCFft</text>
</g>
<!-- Node8 -->
<g id="node8" class="node">
<title>Node8</title>
<g id="a_node8"><a xlink:href="a00601.xhtml" target="_top" xlink:title="viterbi algorithm">
<polygon fill="white" stroke="black" points="740.5,-794.5 740.5,-1192.5 889.5,-1192.5 889.5,-794.5 740.5,-794.5"/>
<text text-anchor="middle" x="815" y="-1180.5" font-family="Helvetica,sans-Serif" font-size="10.00">CViterbi</text>
<polyline fill="none" stroke="black" points="740.5,-1173.5 889.5,-1173.5 "/>
<text text-anchor="start" x="748.5" y="-1161.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float ** m_ppfProb</text>
<text text-anchor="start" x="748.5" y="-1150.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float ** m_ppfTransProb</text>
<text text-anchor="start" x="748.5" y="-1139.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_pfStart</text>
<text text-anchor="start" x="748.5" y="-1128.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float m_fOverallProb</text>
<text text-anchor="start" x="748.5" y="-1117.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; unsigned int ** m_ppiPathIdx</text>
<text text-anchor="start" x="748.5" y="-1106.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iNumStates</text>
<text text-anchor="start" x="748.5" y="-1095.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iNumObs</text>
<text text-anchor="start" x="748.5" y="-1084.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iEndState</text>
<text text-anchor="start" x="748.5" y="-1073.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; const float m_kLogMin</text>
<text text-anchor="start" x="748.5" y="-1062.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; bool m_bIsInitialized</text>
<text text-anchor="start" x="748.5" y="-1051.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; bool m_bWasProcessed</text>
<polyline fill="none" stroke="black" points="740.5,-1044.5 889.5,-1044.5 "/>
<text text-anchor="start" x="748.5" y="-1032.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CViterbi(void)</text>
<text text-anchor="start" x="748.5" y="-1021.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CViterbi(void)</text>
<text text-anchor="start" x="748.5" y="-1010.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t init(float</text>
<text text-anchor="start" x="748.5" y="-999.5" font-family="Helvetica,sans-Serif" font-size="10.00"> **ppfPTransition, float</text>
<text text-anchor="start" x="748.5" y="-988.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfPStart, int iNumStates,</text>
<text text-anchor="start" x="748.5" y="-977.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iNumObservations)</text>
<text text-anchor="start" x="748.5" y="-966.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t reset()</text>
<text text-anchor="start" x="748.5" y="-955.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compViterbi</text>
<text text-anchor="start" x="748.5" y="-944.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float **ppfPEmission,</text>
<text text-anchor="start" x="748.5" y="-933.5" font-family="Helvetica,sans-Serif" font-size="10.00"> bool bUseLogLikelihood=true)</text>
<text text-anchor="start" x="748.5" y="-922.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ float getOverallProbability</text>
<text text-anchor="start" x="748.5" y="-911.5" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="748.5" y="-900.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getStateSequence</text>
<text text-anchor="start" x="748.5" y="-889.5" font-family="Helvetica,sans-Serif" font-size="10.00">(int *pistateSequence) const</text>
<text text-anchor="start" x="748.5" y="-878.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CViterbi(const CViterbi</text>
<text text-anchor="start" x="748.5" y="-867.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;that)</text>
<text text-anchor="start" x="748.5" y="-856.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CViterbi &amp; operator</text>
<text text-anchor="start" x="748.5" y="-845.5" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CViterbi &amp;c)</text>
<text text-anchor="start" x="748.5" y="-834.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; void compProbability</text>
<text text-anchor="start" x="748.5" y="-823.5" font-family="Helvetica,sans-Serif" font-size="10.00">_(float **ppfPEmission)</text>
<text text-anchor="start" x="748.5" y="-812.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; void compLogLikelihood</text>
<text text-anchor="start" x="748.5" y="-801.5" font-family="Helvetica,sans-Serif" font-size="10.00">_(float **ppfPEmission)</text>
</a>
</g>
</g>
<!-- Node8&#45;&gt;Node2 -->
<g id="edge7" class="edge">
<title>Node8&#45;&gt;Node2</title>
<path fill="none" stroke="#404040" d="M754.26,-794.44C747.18,-779.03 739.44,-764.03 731,-750 673.32,-654.08 583.53,-562.42 517.2,-501.51"/>
<polygon fill="none" stroke="#404040" points="516.87,-501.2 509.74,-500.12 508.01,-493.12 515.13,-494.21 516.87,-501.2"/>
<text text-anchor="middle" x="748.5" y="-724" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCViterbi</text>
</g>
</g>
</svg>
        <g id="navigator" transform="translate(0 0)" fill="#404254">
                <rect fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width=".5" x="0" y="0" width="60" height="60"/>
                <use id="zoomplus" xlink:href="#zoomPlus" x="17" y="9" onmousedown="handleZoom(evt,'in')"/>
                <use id="zoomminus" xlink:href="#zoomMin" x="42" y="9" onmousedown="handleZoom(evt,'out')"/>
                <use id="reset" xlink:href="#resetDef" x="30" y="36" onmousedown="handleReset()"/>
                <g id="arrowUp" xlink:href="#dirArrow" transform="translate(30 24)" onmousedown="handlePan(0,-1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowUp.mouseover" end="arrowUp.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowRight" xlink:href="#dirArrow" transform="rotate(90) translate(36 -43)" onmousedown="handlePan(1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowRight.mouseover" end="arrowRight.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowDown" xlink:href="#dirArrow" transform="rotate(180) translate(-30 -48)" onmousedown="handlePan(0,1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowDown.mouseover" end="arrowDown.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowLeft" xlink:href="#dirArrow" transform="rotate(270) translate(-36 17)" onmousedown="handlePan(-1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowLeft.mouseover" end="arrowLeft.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
        </g>
        <svg viewBox="0 0 15 15" width="100%" height="30px" preserveAspectRatio="xMaxYMin meet">
         <g id="arrow_out" transform="scale(0.3 0.3)">
          <a xlink:href="a00303_org.svg" target="_base">
           <rect id="button" ry="5" rx="5" y="6" x="6" height="38" width="38"
                fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width="1.0"/>
           <path id="arrow"
             d="M 11.500037,31.436501 C 11.940474,20.09759 22.043105,11.32322 32.158766,21.979434 L 37.068811,17.246167 C 37.068811,17.246167 37.088388,32 37.088388,32 L 22.160133,31.978069 C 22.160133,31.978069 26.997745,27.140456 26.997745,27.140456 C 18.528582,18.264221 13.291696,25.230495 11.500037,31.436501 z"
             style="fill:#404040;"/>
          </a>
         </g>
        </svg>
</svg>
