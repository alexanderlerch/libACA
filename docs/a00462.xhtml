<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.4"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ACA: CClassifierBase Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">ACA<span id="projectnumber">&#160;0.3.1</span>
   </div>
   <div id="projectbrief">Example Code for Audio Content Analysis</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.4 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search",'Search','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('a00462.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-attribs">Static Public Attributes</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="a00459.xhtml">List of all members</a>  </div>
  <div class="headertitle"><div class="title">CClassifierBase Class Reference<span class="mlabels"><span class="mlabel">abstract</span></span></div></div>
</div><!--header-->
<div class="contents">

<p>abstract base class for traditional classifiers  
 <a href="a00462.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="a00245_source.xhtml">ClassifierBase.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for CClassifierBase:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00461.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<div class="dynheader">
Collaboration diagram for CClassifierBase:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00460.svg" width="298" height="382"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-types" name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:af377eef1d7dfdfabcdf7da4b069b5e7a"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00462.xhtml#af377eef1d7dfdfabcdf7da4b069b5e7a">Normalization_t</a> { <a class="el" href="a00462.xhtml#af377eef1d7dfdfabcdf7da4b069b5e7aa13644efee7aaca8e6257a398fce7d009">kNoNormalization</a>
, <a class="el" href="a00462.xhtml#af377eef1d7dfdfabcdf7da4b069b5e7aadc077b94c0074c958d27ed221a6dc41a">kZscoreNormalization</a>
, <a class="el" href="a00462.xhtml#af377eef1d7dfdfabcdf7da4b069b5e7aa2f9e22c352c5ba390e17bd44af9ae42a">kMinmaxNormalization</a>
, <a class="el" href="a00462.xhtml#af377eef1d7dfdfabcdf7da4b069b5e7aa7551b9946a039fd91846e27db7258801">kNumNormModes</a>
 }</td></tr>
<tr class="separator:af377eef1d7dfdfabcdf7da4b069b5e7a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a6175ec9334e19d0350f8e1b2e7eb8a34"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00462.xhtml#a6175ec9334e19d0350f8e1b2e7eb8a34">init</a> (int iNumFeatures, int iNumObs)=0</td></tr>
<tr class="separator:a6175ec9334e19d0350f8e1b2e7eb8a34"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5584fab7955acdaf55c5bd0bcf7eaecb"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00462.xhtml#a5584fab7955acdaf55c5bd0bcf7eaecb">train</a> (const float *const *const ppfTrainFeatures, const int *piTrainClassIndices, <a class="el" href="a00462.xhtml#af377eef1d7dfdfabcdf7da4b069b5e7a">Normalization_t</a> eNorm=<a class="el" href="a00462.xhtml#af377eef1d7dfdfabcdf7da4b069b5e7aa13644efee7aaca8e6257a398fce7d009">kNoNormalization</a>)=0</td></tr>
<tr class="separator:a5584fab7955acdaf55c5bd0bcf7eaecb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a132f6c33b7f0ec539dabce8c970eac9e"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00462.xhtml#a132f6c33b7f0ec539dabce8c970eac9e">reset</a> ()=0</td></tr>
<tr class="separator:a132f6c33b7f0ec539dabce8c970eac9e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae187572c8c6af54f060105b91cf72e9f"><td class="memItemLeft" align="right" valign="top">virtual int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00462.xhtml#ae187572c8c6af54f060105b91cf72e9f">classify</a> (const float *pfQuery)=0</td></tr>
<tr class="separator:ae187572c8c6af54f060105b91cf72e9f"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-static-attribs" name="pub-static-attribs"></a>
Static Public Attributes</h2></td></tr>
<tr class="memitem:ac4365e3be5e1cc7ac964fcb6294aaae1"><td class="memItemLeft" align="right" valign="top">static const int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00462.xhtml#ac4365e3be5e1cc7ac964fcb6294aaae1">kIllegalClassLabel</a> = -1111111111</td></tr>
<tr class="memdesc:ac4365e3be5e1cc7ac964fcb6294aaae1"><td class="mdescLeft">&#160;</td><td class="mdescRight">indicates something went wrong (this number should not be used as a class label)  <a href="a00462.xhtml#ac4365e3be5e1cc7ac964fcb6294aaae1">More...</a><br /></td></tr>
<tr class="separator:ac4365e3be5e1cc7ac964fcb6294aaae1"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pro-methods" name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a188fe66bc48b61ffc1f0648adc15d7ca"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00462.xhtml#a188fe66bc48b61ffc1f0648adc15d7ca">~CClassifierBase</a> ()</td></tr>
<tr class="separator:a188fe66bc48b61ffc1f0648adc15d7ca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9c21f9c80f6880682d822c53232bbff9"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00462.xhtml#a9c21f9c80f6880682d822c53232bbff9">compNormConstants</a> (const float *const *const ppfTrainFeatures, int iNumFeatures, int iNumObs, <a class="el" href="a00462.xhtml#af377eef1d7dfdfabcdf7da4b069b5e7a">Normalization_t</a> eNorm)</td></tr>
<tr class="separator:a9c21f9c80f6880682d822c53232bbff9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac6a2a71d24b2beaa2b183d8659fd93f8"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00462.xhtml#ac6a2a71d24b2beaa2b183d8659fd93f8">normalizeVector</a> (float *pfQuery, int iNumFeatures)</td></tr>
<tr class="separator:ac6a2a71d24b2beaa2b183d8659fd93f8"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pro-attribs" name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:ae9729a067f3756489d9226fbccb19ee0"><td class="memItemLeft" align="right" valign="top">float *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00462.xhtml#ae9729a067f3756489d9226fbccb19ee0">m_pfNormScale</a> = 0</td></tr>
<tr class="memdesc:ae9729a067f3756489d9226fbccb19ee0"><td class="mdescLeft">&#160;</td><td class="mdescRight">scaling constant for normalization (length m_iNumFeatures)  <a href="a00462.xhtml#ae9729a067f3756489d9226fbccb19ee0">More...</a><br /></td></tr>
<tr class="separator:ae9729a067f3756489d9226fbccb19ee0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af5d1fadf97cfa2d47235316815e70964"><td class="memItemLeft" align="right" valign="top">float *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00462.xhtml#af5d1fadf97cfa2d47235316815e70964">m_pfNormSub</a> = 0</td></tr>
<tr class="memdesc:af5d1fadf97cfa2d47235316815e70964"><td class="mdescLeft">&#160;</td><td class="mdescRight">offset for normalization (length m_iNumFeatures)  <a href="a00462.xhtml#af5d1fadf97cfa2d47235316815e70964">More...</a><br /></td></tr>
<tr class="separator:af5d1fadf97cfa2d47235316815e70964"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p >abstract base class for traditional classifiers </p>

<p class="definition">Definition at line <a class="el" href="a00245_source.xhtml#l00010">10</a> of file <a class="el" href="a00245_source.xhtml">ClassifierBase.h</a>.</p>
</div><h2 class="groupheader">Member Enumeration Documentation</h2>
<a id="af377eef1d7dfdfabcdf7da4b069b5e7a" name="af377eef1d7dfdfabcdf7da4b069b5e7a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af377eef1d7dfdfabcdf7da4b069b5e7a">&#9670;&nbsp;</a></span>Normalization_t</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="a00462.xhtml#af377eef1d7dfdfabcdf7da4b069b5e7a">CClassifierBase::Normalization_t</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="af377eef1d7dfdfabcdf7da4b069b5e7aa13644efee7aaca8e6257a398fce7d009" name="af377eef1d7dfdfabcdf7da4b069b5e7aa13644efee7aaca8e6257a398fce7d009"></a>kNoNormalization&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="af377eef1d7dfdfabcdf7da4b069b5e7aadc077b94c0074c958d27ed221a6dc41a" name="af377eef1d7dfdfabcdf7da4b069b5e7aadc077b94c0074c958d27ed221a6dc41a"></a>kZscoreNormalization&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="af377eef1d7dfdfabcdf7da4b069b5e7aa2f9e22c352c5ba390e17bd44af9ae42a" name="af377eef1d7dfdfabcdf7da4b069b5e7aa2f9e22c352c5ba390e17bd44af9ae42a"></a>kMinmaxNormalization&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="af377eef1d7dfdfabcdf7da4b069b5e7aa7551b9946a039fd91846e27db7258801" name="af377eef1d7dfdfabcdf7da4b069b5e7aa7551b9946a039fd91846e27db7258801"></a>kNumNormModes&#160;</td><td class="fielddoc"></td></tr>
</table>

<p class="definition">Definition at line <a class="el" href="a00245_source.xhtml#l00013">13</a> of file <a class="el" href="a00245_source.xhtml">ClassifierBase.h</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   14</span>    {</div>
<div class="line"><span class="lineno">   15</span>        <a class="code hl_enumvalue" href="a00462.xhtml#af377eef1d7dfdfabcdf7da4b069b5e7aa13644efee7aaca8e6257a398fce7d009">kNoNormalization</a>,</div>
<div class="line"><span class="lineno">   16</span>        <a class="code hl_enumvalue" href="a00462.xhtml#af377eef1d7dfdfabcdf7da4b069b5e7aadc077b94c0074c958d27ed221a6dc41a">kZscoreNormalization</a>,</div>
<div class="line"><span class="lineno">   17</span>        <a class="code hl_enumvalue" href="a00462.xhtml#af377eef1d7dfdfabcdf7da4b069b5e7aa2f9e22c352c5ba390e17bd44af9ae42a">kMinmaxNormalization</a>,</div>
<div class="line"><span class="lineno">   18</span> </div>
<div class="line"><span class="lineno">   19</span>        <a class="code hl_enumvalue" href="a00462.xhtml#af377eef1d7dfdfabcdf7da4b069b5e7aa7551b9946a039fd91846e27db7258801">kNumNormModes</a></div>
<div class="line"><span class="lineno">   20</span>    };</div>
<div class="ttc" id="aa00462_xhtml_af377eef1d7dfdfabcdf7da4b069b5e7aa13644efee7aaca8e6257a398fce7d009"><div class="ttname"><a href="a00462.xhtml#af377eef1d7dfdfabcdf7da4b069b5e7aa13644efee7aaca8e6257a398fce7d009">CClassifierBase::kNoNormalization</a></div><div class="ttdeci">@ kNoNormalization</div><div class="ttdef"><b>Definition:</b> <a href="a00245_source.xhtml#l00015">ClassifierBase.h:15</a></div></div>
<div class="ttc" id="aa00462_xhtml_af377eef1d7dfdfabcdf7da4b069b5e7aa2f9e22c352c5ba390e17bd44af9ae42a"><div class="ttname"><a href="a00462.xhtml#af377eef1d7dfdfabcdf7da4b069b5e7aa2f9e22c352c5ba390e17bd44af9ae42a">CClassifierBase::kMinmaxNormalization</a></div><div class="ttdeci">@ kMinmaxNormalization</div><div class="ttdef"><b>Definition:</b> <a href="a00245_source.xhtml#l00017">ClassifierBase.h:17</a></div></div>
<div class="ttc" id="aa00462_xhtml_af377eef1d7dfdfabcdf7da4b069b5e7aa7551b9946a039fd91846e27db7258801"><div class="ttname"><a href="a00462.xhtml#af377eef1d7dfdfabcdf7da4b069b5e7aa7551b9946a039fd91846e27db7258801">CClassifierBase::kNumNormModes</a></div><div class="ttdeci">@ kNumNormModes</div><div class="ttdef"><b>Definition:</b> <a href="a00245_source.xhtml#l00020">ClassifierBase.h:19</a></div></div>
<div class="ttc" id="aa00462_xhtml_af377eef1d7dfdfabcdf7da4b069b5e7aadc077b94c0074c958d27ed221a6dc41a"><div class="ttname"><a href="a00462.xhtml#af377eef1d7dfdfabcdf7da4b069b5e7aadc077b94c0074c958d27ed221a6dc41a">CClassifierBase::kZscoreNormalization</a></div><div class="ttdeci">@ kZscoreNormalization</div><div class="ttdef"><b>Definition:</b> <a href="a00245_source.xhtml#l00016">ClassifierBase.h:16</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a188fe66bc48b61ffc1f0648adc15d7ca" name="a188fe66bc48b61ffc1f0648adc15d7ca"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a188fe66bc48b61ffc1f0648adc15d7ca">&#9670;&nbsp;</a></span>~CClassifierBase()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual CClassifierBase::~CClassifierBase </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="a00245_source.xhtml#l00050">50</a> of file <a class="el" href="a00245_source.xhtml">ClassifierBase.h</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   51</span>    {</div>
<div class="line"><span class="lineno">   52</span>        <a class="code hl_function" href="a00502.xhtml#aa86bdb0c663d4d52f2765793756f8737">CVector::free</a>(<a class="code hl_variable" href="a00462.xhtml#ae9729a067f3756489d9226fbccb19ee0">m_pfNormScale</a>);</div>
<div class="line"><span class="lineno">   53</span>        <a class="code hl_function" href="a00502.xhtml#aa86bdb0c663d4d52f2765793756f8737">CVector::free</a>(<a class="code hl_variable" href="a00462.xhtml#af5d1fadf97cfa2d47235316815e70964">m_pfNormSub</a>);</div>
<div class="line"><span class="lineno">   54</span>    }</div>
<div class="ttc" id="aa00462_xhtml_ae9729a067f3756489d9226fbccb19ee0"><div class="ttname"><a href="a00462.xhtml#ae9729a067f3756489d9226fbccb19ee0">CClassifierBase::m_pfNormScale</a></div><div class="ttdeci">float * m_pfNormScale</div><div class="ttdoc">scaling constant for normalization (length m_iNumFeatures)</div><div class="ttdef"><b>Definition:</b> <a href="a00245_source.xhtml#l00105">ClassifierBase.h:105</a></div></div>
<div class="ttc" id="aa00462_xhtml_af5d1fadf97cfa2d47235316815e70964"><div class="ttname"><a href="a00462.xhtml#af5d1fadf97cfa2d47235316815e70964">CClassifierBase::m_pfNormSub</a></div><div class="ttdeci">float * m_pfNormSub</div><div class="ttdoc">offset for normalization (length m_iNumFeatures)</div><div class="ttdef"><b>Definition:</b> <a href="a00245_source.xhtml#l00106">ClassifierBase.h:106</a></div></div>
<div class="ttc" id="aa00502_xhtml_aa86bdb0c663d4d52f2765793756f8737"><div class="ttname"><a href="a00502.xhtml#aa86bdb0c663d4d52f2765793756f8737">CVector::free</a></div><div class="ttdeci">static void free(T *&amp;ptVec)</div><div class="ttdef"><b>Definition:</b> <a href="a00155_source.xhtml#l00057">Vector.h:57</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00155_source.xhtml#l00057">CVector::free()</a>, <a class="el" href="a00245_source.xhtml#l00105">m_pfNormScale</a>, and <a class="el" href="a00245_source.xhtml#l00106">m_pfNormSub</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00462_a188fe66bc48b61ffc1f0648adc15d7ca_cgraph.svg" width="375" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="ae187572c8c6af54f060105b91cf72e9f" name="ae187572c8c6af54f060105b91cf72e9f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae187572c8c6af54f060105b91cf72e9f">&#9670;&nbsp;</a></span>classify()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual int CClassifierBase::classify </td>
          <td>(</td>
          <td class="paramtype">const float *&#160;</td>
          <td class="paramname"><em>pfQuery</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p >classifies a new query vector </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pfQuery</td><td>vector of length iNumFeatures to classify </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>int class label of most likely class (returns <a class="el" href="a00462.xhtml#ac4365e3be5e1cc7ac964fcb6294aaae1" title="indicates something went wrong (this number should not be used as a class label)">CClassifierBase::kIllegalClassLabel</a> in case of error) </dd></dl>

<p>Implemented in <a class="el" href="a00570.xhtml#a6ddfb025951b2206db8f98f53275d509">CGmmClassifier</a>, and <a class="el" href="a00626.xhtml#a16bb56f19951aee5c4986a9dc7aeb853">CKnn</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00125_source.xhtml#l00061">CLeaveOneOutCrossVal::process()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00462_ae187572c8c6af54f060105b91cf72e9f_icgraph.svg" width="606" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a9c21f9c80f6880682d822c53232bbff9" name="a9c21f9c80f6880682d822c53232bbff9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9c21f9c80f6880682d822c53232bbff9">&#9670;&nbsp;</a></span>compNormConstants()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void CClassifierBase::compNormConstants </td>
          <td>(</td>
          <td class="paramtype">const float *const *const&#160;</td>
          <td class="paramname"><em>ppfTrainFeatures</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>iNumFeatures</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>iNumObs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="a00462.xhtml#af377eef1d7dfdfabcdf7da4b069b5e7a">Normalization_t</a>&#160;</td>
          <td class="paramname"><em>eNorm</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p >estimates the constants for data normalization </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ppfTrainFeatures</td><td>training feature matrix (iNumFeatures X iNumObs) </td></tr>
    <tr><td class="paramname">iNumFeatures</td><td>number of features (rows in the input matrix) </td></tr>
    <tr><td class="paramname">iNumObs</td><td>number of observations (columns in the feature matrix) </td></tr>
    <tr><td class="paramname">eNorm</td><td>method for normalization </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="a00245_source.xhtml#l00062">62</a> of file <a class="el" href="a00245_source.xhtml">ClassifierBase.h</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   63</span>    {</div>
<div class="line"><span class="lineno">   64</span>        assert(<a class="code hl_variable" href="a00462.xhtml#ae9729a067f3756489d9226fbccb19ee0">m_pfNormScale</a>);</div>
<div class="line"><span class="lineno">   65</span>        assert(<a class="code hl_variable" href="a00462.xhtml#af5d1fadf97cfa2d47235316815e70964">m_pfNormSub</a>);</div>
<div class="line"><span class="lineno">   66</span> </div>
<div class="line"><span class="lineno">   67</span>        <span class="comment">// normalization constants</span></div>
<div class="line"><span class="lineno">   68</span>        <span class="keywordflow">if</span> (eNorm == <a class="code hl_enumvalue" href="a00462.xhtml#af377eef1d7dfdfabcdf7da4b069b5e7aadc077b94c0074c958d27ed221a6dc41a">kZscoreNormalization</a>)</div>
<div class="line"><span class="lineno">   69</span>        {</div>
<div class="line"><span class="lineno">   70</span>            <span class="keywordflow">for</span> (<span class="keyword">auto</span> f = 0; f &lt; iNumFeatures; f++)</div>
<div class="line"><span class="lineno">   71</span>            {</div>
<div class="line"><span class="lineno">   72</span>                <a class="code hl_variable" href="a00462.xhtml#af5d1fadf97cfa2d47235316815e70964">m_pfNormSub</a>[f] = <a class="code hl_function" href="a00502.xhtml#ae6e3545cf196c5e2409365bc62b7c1de">CVector::getMean</a>(ppfTrainFeatures[f], iNumObs);</div>
<div class="line"><span class="lineno">   73</span>                <a class="code hl_variable" href="a00462.xhtml#ae9729a067f3756489d9226fbccb19ee0">m_pfNormScale</a>[f] = <a class="code hl_function" href="a00502.xhtml#ae2ed42101e3d7075f5dec265a23f3424">CVector::getStd</a>(ppfTrainFeatures[f], iNumObs, <a class="code hl_variable" href="a00462.xhtml#af5d1fadf97cfa2d47235316815e70964">m_pfNormSub</a>[f]);</div>
<div class="line"><span class="lineno">   74</span>                <span class="keywordflow">if</span> (<a class="code hl_variable" href="a00462.xhtml#ae9729a067f3756489d9226fbccb19ee0">m_pfNormScale</a>[f] &gt; 0)</div>
<div class="line"><span class="lineno">   75</span>                    <a class="code hl_variable" href="a00462.xhtml#ae9729a067f3756489d9226fbccb19ee0">m_pfNormScale</a>[f] = 1.F / <a class="code hl_variable" href="a00462.xhtml#ae9729a067f3756489d9226fbccb19ee0">m_pfNormScale</a>[f];</div>
<div class="line"><span class="lineno">   76</span>            }</div>
<div class="line"><span class="lineno">   77</span>        }</div>
<div class="line"><span class="lineno">   78</span>        <span class="keywordflow">else</span> <span class="keywordflow">if</span> (eNorm == <a class="code hl_enumvalue" href="a00462.xhtml#af377eef1d7dfdfabcdf7da4b069b5e7aa2f9e22c352c5ba390e17bd44af9ae42a">kMinmaxNormalization</a>)</div>
<div class="line"><span class="lineno">   79</span>        {</div>
<div class="line"><span class="lineno">   80</span>            <span class="keywordflow">for</span> (<span class="keyword">auto</span> f = 0; f &lt; iNumFeatures; f++)</div>
<div class="line"><span class="lineno">   81</span>            {</div>
<div class="line"><span class="lineno">   82</span>                <a class="code hl_variable" href="a00462.xhtml#af5d1fadf97cfa2d47235316815e70964">m_pfNormSub</a>[f] = <a class="code hl_function" href="a00502.xhtml#a1f7f307c20239cfd2007393e2b3b26df">CVector::getMin</a>(ppfTrainFeatures[f], iNumObs);</div>
<div class="line"><span class="lineno">   83</span>                <a class="code hl_variable" href="a00462.xhtml#ae9729a067f3756489d9226fbccb19ee0">m_pfNormScale</a>[f] = <a class="code hl_function" href="a00502.xhtml#a9f5be871090bc5a64a7732cebfb4f8ec">CVector::getMax</a>(ppfTrainFeatures[f], iNumObs) - <a class="code hl_variable" href="a00462.xhtml#af5d1fadf97cfa2d47235316815e70964">m_pfNormSub</a>[f];</div>
<div class="line"><span class="lineno">   84</span>                <span class="keywordflow">if</span> (<a class="code hl_variable" href="a00462.xhtml#ae9729a067f3756489d9226fbccb19ee0">m_pfNormScale</a>[f] != 0)</div>
<div class="line"><span class="lineno">   85</span>                    <a class="code hl_variable" href="a00462.xhtml#ae9729a067f3756489d9226fbccb19ee0">m_pfNormScale</a>[f] = 1.F / <a class="code hl_variable" href="a00462.xhtml#ae9729a067f3756489d9226fbccb19ee0">m_pfNormScale</a>[f];</div>
<div class="line"><span class="lineno">   86</span>            }</div>
<div class="line"><span class="lineno">   87</span>        }</div>
<div class="line"><span class="lineno">   88</span>        <span class="keywordflow">else</span></div>
<div class="line"><span class="lineno">   89</span>        {</div>
<div class="line"><span class="lineno">   90</span>            <a class="code hl_function" href="a00502.xhtml#a4cf9544dd96801e3ee47fd1ef2049a1b">CVector::setValue</a>(<a class="code hl_variable" href="a00462.xhtml#ae9729a067f3756489d9226fbccb19ee0">m_pfNormScale</a>, 1.F, iNumFeatures);</div>
<div class="line"><span class="lineno">   91</span>            <a class="code hl_function" href="a00502.xhtml#a6dbb3f9f480568b60f7fe50090d20003">CVector::setZero</a>(<a class="code hl_variable" href="a00462.xhtml#af5d1fadf97cfa2d47235316815e70964">m_pfNormSub</a>, iNumFeatures);</div>
<div class="line"><span class="lineno">   92</span>        }</div>
<div class="line"><span class="lineno">   93</span>    }</div>
<div class="ttc" id="aa00502_xhtml_a1f7f307c20239cfd2007393e2b3b26df"><div class="ttname"><a href="a00502.xhtml#a1f7f307c20239cfd2007393e2b3b26df">CVector::getMin</a></div><div class="ttdeci">static T getMin(const T *ptSrc, long long int iLength, bool bAbs=false)</div><div class="ttdef"><b>Definition:</b> <a href="a00155_source.xhtml#l00481">Vector.h:481</a></div></div>
<div class="ttc" id="aa00502_xhtml_a4cf9544dd96801e3ee47fd1ef2049a1b"><div class="ttname"><a href="a00502.xhtml#a4cf9544dd96801e3ee47fd1ef2049a1b">CVector::setValue</a></div><div class="ttdeci">static void setValue(T *ptDest, T tValue, long long iLength)</div><div class="ttdef"><b>Definition:</b> <a href="a00155_source.xhtml#l00100">Vector.h:100</a></div></div>
<div class="ttc" id="aa00502_xhtml_a6dbb3f9f480568b60f7fe50090d20003"><div class="ttname"><a href="a00502.xhtml#a6dbb3f9f480568b60f7fe50090d20003">CVector::setZero</a></div><div class="ttdeci">static void setZero(T *ptSrcDest, long long iLength)</div><div class="ttdef"><b>Definition:</b> <a href="a00155_source.xhtml#l00114">Vector.h:114</a></div></div>
<div class="ttc" id="aa00502_xhtml_a9f5be871090bc5a64a7732cebfb4f8ec"><div class="ttname"><a href="a00502.xhtml#a9f5be871090bc5a64a7732cebfb4f8ec">CVector::getMax</a></div><div class="ttdeci">static T getMax(const T *ptSrc, long long int iLength, bool bAbs=false)</div><div class="ttdef"><b>Definition:</b> <a href="a00155_source.xhtml#l00444">Vector.h:444</a></div></div>
<div class="ttc" id="aa00502_xhtml_ae2ed42101e3d7075f5dec265a23f3424"><div class="ttname"><a href="a00502.xhtml#ae2ed42101e3d7075f5dec265a23f3424">CVector::getStd</a></div><div class="ttdeci">static T getStd(const T *ptSrc, long long int iLength, T fMean=std::numeric_limits&lt; T &gt;::max())</div><div class="ttdef"><b>Definition:</b> <a href="a00155_source.xhtml#l00524">Vector.h:524</a></div></div>
<div class="ttc" id="aa00502_xhtml_ae6e3545cf196c5e2409365bc62b7c1de"><div class="ttname"><a href="a00502.xhtml#ae6e3545cf196c5e2409365bc62b7c1de">CVector::getMean</a></div><div class="ttdeci">static T getMean(const T *ptSrc, long long int iLength)</div><div class="ttdef"><b>Definition:</b> <a href="a00155_source.xhtml#l00460">Vector.h:460</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00155_source.xhtml#l00444">CVector::getMax()</a>, <a class="el" href="a00155_source.xhtml#l00460">CVector::getMean()</a>, <a class="el" href="a00155_source.xhtml#l00481">CVector::getMin()</a>, <a class="el" href="a00155_source.xhtml#l00524">CVector::getStd()</a>, <a class="el" href="a00245_source.xhtml#l00017">kMinmaxNormalization</a>, <a class="el" href="a00245_source.xhtml#l00016">kZscoreNormalization</a>, <a class="el" href="a00245_source.xhtml#l00105">m_pfNormScale</a>, <a class="el" href="a00245_source.xhtml#l00106">m_pfNormSub</a>, <a class="el" href="a00155_source.xhtml#l00100">CVector::setValue()</a>, and <a class="el" href="a00155_source.xhtml#l00114">CVector::setZero()</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00047_source.xhtml#l00032">CGmmClassifier::train()</a>, and <a class="el" href="a00110_source.xhtml#l00066">CKnn::train()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00462_a9c21f9c80f6880682d822c53232bbff9_cgraph.svg" width="100%" height="518"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00462_a9c21f9c80f6880682d822c53232bbff9_icgraph.svg" width="390" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a6175ec9334e19d0350f8e1b2e7eb8a34" name="a6175ec9334e19d0350f8e1b2e7eb8a34"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6175ec9334e19d0350f8e1b2e7eb8a34">&#9670;&nbsp;</a></span>init()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> CClassifierBase::init </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>iNumFeatures</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>iNumObs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p >initializes instance </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">iNumFeatures</td><td>number of features (rows in the input matrix) </td></tr>
    <tr><td class="paramname">iNumObs</td><td>number of observations (columns in the feature matrix) </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Error_t </dd></dl>

<p>Implemented in <a class="el" href="a00626.xhtml#a0897bf0a4e49a3779ecb2104ffe4ac56">CKnn</a>, and <a class="el" href="a00570.xhtml#a790d7dcc328db7a869dd3ccf0561c001">CGmmClassifier</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00125_source.xhtml#l00061">CLeaveOneOutCrossVal::process()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00462_a6175ec9334e19d0350f8e1b2e7eb8a34_icgraph.svg" width="579" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ac6a2a71d24b2beaa2b183d8659fd93f8" name="ac6a2a71d24b2beaa2b183d8659fd93f8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac6a2a71d24b2beaa2b183d8659fd93f8">&#9670;&nbsp;</a></span>normalizeVector()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void CClassifierBase::normalizeVector </td>
          <td>(</td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>pfQuery</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>iNumFeatures</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p >normalizes a new query vector according to previously extracted constants </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pfQuery</td><td>vector of length iNumFeatures to classify </td></tr>
    <tr><td class="paramname">iNumFeatures</td><td>number of features (rows in the input matrix) </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="a00245_source.xhtml#l00099">99</a> of file <a class="el" href="a00245_source.xhtml">ClassifierBase.h</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  100</span>    {</div>
<div class="line"><span class="lineno">  101</span>        <a class="code hl_function" href="a00502.xhtml#a39329371d828db80c2f0ad037074c998">CVector::sub_I</a>(pfQuery, <a class="code hl_variable" href="a00462.xhtml#af5d1fadf97cfa2d47235316815e70964">m_pfNormSub</a>, iNumFeatures);</div>
<div class="line"><span class="lineno">  102</span>        <a class="code hl_function" href="a00502.xhtml#a5fb59528a3f5d3968f988d550b270898">CVector::mul_I</a>(pfQuery, <a class="code hl_variable" href="a00462.xhtml#ae9729a067f3756489d9226fbccb19ee0">m_pfNormScale</a>, iNumFeatures);</div>
<div class="line"><span class="lineno">  103</span>    }</div>
<div class="ttc" id="aa00502_xhtml_a39329371d828db80c2f0ad037074c998"><div class="ttname"><a href="a00502.xhtml#a39329371d828db80c2f0ad037074c998">CVector::sub_I</a></div><div class="ttdeci">static void sub_I(T *ptSrcDest, const T *ptSrc, long long int iLength)</div><div class="ttdef"><b>Definition:</b> <a href="a00155_source.xhtml#l00265">Vector.h:265</a></div></div>
<div class="ttc" id="aa00502_xhtml_a5fb59528a3f5d3968f988d550b270898"><div class="ttname"><a href="a00502.xhtml#a5fb59528a3f5d3968f988d550b270898">CVector::mul_I</a></div><div class="ttdeci">static void mul_I(T *ptSrcDest, const T *ptSrc, long long int iLength)</div><div class="ttdef"><b>Definition:</b> <a href="a00155_source.xhtml#l00229">Vector.h:229</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00245_source.xhtml#l00105">m_pfNormScale</a>, <a class="el" href="a00245_source.xhtml#l00106">m_pfNormSub</a>, <a class="el" href="a00155_source.xhtml#l00229">CVector::mul_I()</a>, and <a class="el" href="a00155_source.xhtml#l00265">CVector::sub_I()</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00047_source.xhtml#l00135">CGmmClassifier::classify()</a>, <a class="el" href="a00110_source.xhtml#l00113">CKnn::classify()</a>, <a class="el" href="a00047_source.xhtml#l00032">CGmmClassifier::train()</a>, and <a class="el" href="a00110_source.xhtml#l00066">CKnn::train()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00462_ac6a2a71d24b2beaa2b183d8659fd93f8_cgraph.svg" width="340" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00462_ac6a2a71d24b2beaa2b183d8659fd93f8_icgraph.svg" width="400" height="190"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a132f6c33b7f0ec539dabce8c970eac9e" name="a132f6c33b7f0ec539dabce8c970eac9e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a132f6c33b7f0ec539dabce8c970eac9e">&#9670;&nbsp;</a></span>reset()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> CClassifierBase::reset </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p >resets classifier instance </p><dl class="section return"><dt>Returns</dt><dd>Error_t </dd></dl>

<p>Implemented in <a class="el" href="a00570.xhtml#a39ed30e82871139f97a97a9b078d1a6c">CGmmClassifier</a>, and <a class="el" href="a00626.xhtml#a75658b6df984b6a8c00049f35de655a8">CKnn</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00125_source.xhtml#l00010">CLeaveOneOutCrossVal::init()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00462_a132f6c33b7f0ec539dabce8c970eac9e_icgraph.svg" width="591" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a5584fab7955acdaf55c5bd0bcf7eaecb" name="a5584fab7955acdaf55c5bd0bcf7eaecb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5584fab7955acdaf55c5bd0bcf7eaecb">&#9670;&nbsp;</a></span>train()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> CClassifierBase::train </td>
          <td>(</td>
          <td class="paramtype">const float *const *const&#160;</td>
          <td class="paramname"><em>ppfTrainFeatures</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int *&#160;</td>
          <td class="paramname"><em>piTrainClassIndices</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="a00462.xhtml#af377eef1d7dfdfabcdf7da4b069b5e7a">Normalization_t</a>&#160;</td>
          <td class="paramname"><em>eNorm</em> = <code><a class="el" href="a00462.xhtml#af377eef1d7dfdfabcdf7da4b069b5e7aa13644efee7aaca8e6257a398fce7d009">kNoNormalization</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p >trains a classifier instance </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ppfTrainFeatures</td><td>feature data for 'training' (dimensions iNumFeatures X iNumObs) </td></tr>
    <tr><td class="paramname">piTrainClassIndices</td><td>ground truth class index for each observation </td></tr>
    <tr><td class="paramname">eNorm</td><td>specification of what normalization should be applied to the feature data </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Error_t </dd></dl>

<p>Implemented in <a class="el" href="a00570.xhtml#af086e0bae5cc3cb68c35745749b0fda5">CGmmClassifier</a>, and <a class="el" href="a00626.xhtml#aedd5ce22bf1cf98b70cc3757ba244b94">CKnn</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00125_source.xhtml#l00061">CLeaveOneOutCrossVal::process()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00462_a5584fab7955acdaf55c5bd0bcf7eaecb_icgraph.svg" width="587" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="ac4365e3be5e1cc7ac964fcb6294aaae1" name="ac4365e3be5e1cc7ac964fcb6294aaae1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac4365e3be5e1cc7ac964fcb6294aaae1">&#9670;&nbsp;</a></span>kIllegalClassLabel</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const int CClassifierBase::kIllegalClassLabel = -1111111111</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>indicates something went wrong (this number should not be used as a class label) </p>

<p class="definition">Definition at line <a class="el" href="a00245_source.xhtml#l00021">21</a> of file <a class="el" href="a00245_source.xhtml">ClassifierBase.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00110_source.xhtml#l00148">CKnn::buildHistogram_()</a>, <a class="el" href="a00047_source.xhtml#l00135">CGmmClassifier::classify()</a>, and <a class="el" href="a00110_source.xhtml#l00113">CKnn::classify()</a>.</p>

</div>
</div>
<a id="ae9729a067f3756489d9226fbccb19ee0" name="ae9729a067f3756489d9226fbccb19ee0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae9729a067f3756489d9226fbccb19ee0">&#9670;&nbsp;</a></span>m_pfNormScale</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float* CClassifierBase::m_pfNormScale = 0</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>scaling constant for normalization (length m_iNumFeatures) </p>

<p class="definition">Definition at line <a class="el" href="a00245_source.xhtml#l00105">105</a> of file <a class="el" href="a00245_source.xhtml">ClassifierBase.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00245_source.xhtml#l00062">compNormConstants()</a>, <a class="el" href="a00110_source.xhtml#l00015">CKnn::init()</a>, <a class="el" href="a00047_source.xhtml#l00009">CGmmClassifier::init()</a>, <a class="el" href="a00245_source.xhtml#l00099">normalizeVector()</a>, <a class="el" href="a00047_source.xhtml#l00092">CGmmClassifier::reset()</a>, <a class="el" href="a00110_source.xhtml#l00044">CKnn::reset()</a>, and <a class="el" href="a00245_source.xhtml#l00050">~CClassifierBase()</a>.</p>

</div>
</div>
<a id="af5d1fadf97cfa2d47235316815e70964" name="af5d1fadf97cfa2d47235316815e70964"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af5d1fadf97cfa2d47235316815e70964">&#9670;&nbsp;</a></span>m_pfNormSub</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float* CClassifierBase::m_pfNormSub = 0</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>offset for normalization (length m_iNumFeatures) </p>

<p class="definition">Definition at line <a class="el" href="a00245_source.xhtml#l00106">106</a> of file <a class="el" href="a00245_source.xhtml">ClassifierBase.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00245_source.xhtml#l00062">compNormConstants()</a>, <a class="el" href="a00110_source.xhtml#l00015">CKnn::init()</a>, <a class="el" href="a00047_source.xhtml#l00009">CGmmClassifier::init()</a>, <a class="el" href="a00245_source.xhtml#l00099">normalizeVector()</a>, <a class="el" href="a00047_source.xhtml#l00092">CGmmClassifier::reset()</a>, <a class="el" href="a00110_source.xhtml#l00044">CKnn::reset()</a>, and <a class="el" href="a00245_source.xhtml#l00050">~CClassifierBase()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="a00245_source.xhtml">ClassifierBase.h</a></li>
<li><a class="el" href="a00110_source.xhtml">ToolSimpleKnn.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="a00462.xhtml">CClassifierBase</a></li>
    <li class="footer">Generated on Sun Jun 19 2022 18:35:24 for ACA by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.4 </li>
  </ul>
</div>
</body>
</html>
