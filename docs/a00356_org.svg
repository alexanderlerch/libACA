<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 6.0.1 (20220911.1526)
 -->
<!-- Title: CFeatureTimeRms Pages: 1 -->
<svg width="364pt" height="1127pt"
 viewBox="0.00 0.00 363.50 1127.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 1123)">
<title>CFeatureTimeRms</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="class for computation of the rms">
<polygon fill="#999999" stroke="#666666" points="271.5,-217 102.5,-217 102.5,0 271.5,0 271.5,-217"/>
<text text-anchor="middle" x="187" y="-205" font-family="Helvetica,sans-Serif" font-size="10.00">{CFeatureTimeRms</text>
<text text-anchor="start" x="110.5" y="-194" font-family="Helvetica,sans-Serif" font-size="10.00">|&#45; float m_fIntegrationTimeInS</text>
<text text-anchor="start" x="110.5" y="-183" font-family="Helvetica,sans-Serif" font-size="10.00">|+ &#160;CFeatureTimeRms(CFeature</text>
<text text-anchor="start" x="110.5" y="-172" font-family="Helvetica,sans-Serif" font-size="10.00">If::Feature_t eFeatureIdx,</text>
<text text-anchor="start" x="110.5" y="-161" font-family="Helvetica,sans-Serif" font-size="10.00"> int iDataLength, float fSampleRate)</text>
<text text-anchor="start" x="110.5" y="-150" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CFeatureTimeRms()</text>
<text text-anchor="start" x="110.5" y="-139" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compFeature</text>
<text text-anchor="start" x="110.5" y="-128" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfFeature, const</text>
<text text-anchor="start" x="110.5" y="-117" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfIn) override</text>
<text text-anchor="start" x="110.5" y="-106" font-family="Helvetica,sans-Serif" font-size="10.00">+ int getFeatureDimensions</text>
<text text-anchor="start" x="110.5" y="-95" font-family="Helvetica,sans-Serif" font-size="10.00">() const override</text>
<text text-anchor="start" x="110.5" y="-84" font-family="Helvetica,sans-Serif" font-size="10.00">+ bool hasAdditionalParam</text>
<text text-anchor="start" x="110.5" y="-73" font-family="Helvetica,sans-Serif" font-size="10.00">() const override</text>
<text text-anchor="start" x="110.5" y="-62" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t setAdditionalParam</text>
<text text-anchor="start" x="110.5" y="-51" font-family="Helvetica,sans-Serif" font-size="10.00">(float fParamValue) override</text>
<text text-anchor="start" x="110.5" y="-40" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; &#160;CFeatureTimeRms()</text>
<text text-anchor="start" x="110.5" y="-29" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; &#160;CFeatureTimeRms(const</text>
<text text-anchor="start" x="110.5" y="-18" font-family="Helvetica,sans-Serif" font-size="10.00"> CFeatureTimeRms &amp;that)</text>
<text text-anchor="middle" x="187" y="-7" font-family="Helvetica,sans-Serif" font-size="10.00">}</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="a00470.xhtml" target="_top" xlink:title="class for computation of a feature from a block of data (e.g., time or magnitude spectrum)">
<polygon fill="white" stroke="#666666" points="188,-1119 0,-1119 0,-264 188,-264 188,-1119"/>
<text text-anchor="middle" x="94" y="-1107" font-family="Helvetica,sans-Serif" font-size="10.00">{CFeatureFromBlockIf</text>
<text text-anchor="start" x="8" y="-1096" font-family="Helvetica,sans-Serif" font-size="10.00">|+ static const float</text>
<text text-anchor="start" x="8" y="-1085" font-family="Helvetica,sans-Serif" font-size="10.00"> m_kfFloatThresh</text>
<text text-anchor="start" x="8" y="-1074" font-family="Helvetica,sans-Serif" font-size="10.00"># CFeatureIf::Feature</text>
<text text-anchor="start" x="8" y="-1063" font-family="Helvetica,sans-Serif" font-size="10.00">_t m_eFeatureIdx</text>
<text text-anchor="start" x="8" y="-1052" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iDataLength</text>
<text text-anchor="start" x="8" y="-1041" font-family="Helvetica,sans-Serif" font-size="10.00"># float m_fSampleRate</text>
<text text-anchor="start" x="8" y="-1030" font-family="Helvetica,sans-Serif" font-size="10.00"># const std::map&lt; CFeature</text>
<text text-anchor="start" x="8" y="-1019" font-family="Helvetica,sans-Serif" font-size="10.00">If::Feature_t, std::function</text>
<text text-anchor="start" x="8" y="-1008" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; float(const float *, int,</text>
<text text-anchor="start" x="8" y="-997" font-family="Helvetica,sans-Serif" font-size="10.00"> float)&gt; &gt; m_DispatchMap</text>
<text text-anchor="start" x="8" y="-986" font-family="Helvetica,sans-Serif" font-size="10.00">|+ virtual int getFeatureDimensions</text>
<text text-anchor="start" x="8" y="-975" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="8" y="-964" font-family="Helvetica,sans-Serif" font-size="10.00">+ CFeatureIf::Feature</text>
<text text-anchor="start" x="8" y="-953" font-family="Helvetica,sans-Serif" font-size="10.00">_t getFeatureIdx() const</text>
<text text-anchor="start" x="8" y="-942" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Error_t compFeature</text>
<text text-anchor="start" x="8" y="-931" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfFeature, const</text>
<text text-anchor="start" x="8" y="-920" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfIn)</text>
<text text-anchor="start" x="8" y="-909" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual bool hasAdditional</text>
<text text-anchor="start" x="8" y="-898" font-family="Helvetica,sans-Serif" font-size="10.00">Param() const</text>
<text text-anchor="start" x="8" y="-887" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Error_t setAdditional</text>
<text text-anchor="start" x="8" y="-876" font-family="Helvetica,sans-Serif" font-size="10.00">Param(float fParamValue)</text>
<text text-anchor="start" x="8" y="-865" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="8" y="-854" font-family="Helvetica,sans-Serif" font-size="10.00">(CFeatureFromBlockIf</text>
<text text-anchor="start" x="8" y="-843" font-family="Helvetica,sans-Serif" font-size="10.00"> *&amp;pCInstance, CFeatureIf</text>
<text text-anchor="start" x="8" y="-832" font-family="Helvetica,sans-Serif" font-size="10.00">::Feature_t eFeatureIdx,</text>
<text text-anchor="start" x="8" y="-821" font-family="Helvetica,sans-Serif" font-size="10.00"> int iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="8" y="-810" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="8" y="-799" font-family="Helvetica,sans-Serif" font-size="10.00">(CFeatureFromBlockIf *&amp;pCInstance)</text>
<text text-anchor="start" x="8" y="-788" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="8" y="-777" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralCentroid(const</text>
<text text-anchor="start" x="8" y="-766" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfMagSpec, int</text>
<text text-anchor="start" x="8" y="-755" font-family="Helvetica,sans-Serif" font-size="10.00"> iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="8" y="-744" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="8" y="-733" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralCrestFactor(const</text>
<text text-anchor="start" x="8" y="-722" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfMagSpec, int iDataLength,</text>
<text text-anchor="start" x="8" y="-711" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate=1.F)</text>
<text text-anchor="start" x="8" y="-700" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="8" y="-689" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralDecrease(const</text>
<text text-anchor="start" x="8" y="-678" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfMagSpec, int</text>
<text text-anchor="start" x="8" y="-667" font-family="Helvetica,sans-Serif" font-size="10.00"> iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="8" y="-656" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="8" y="-645" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralFlatness(const</text>
<text text-anchor="start" x="8" y="-634" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfMagSpec, int</text>
<text text-anchor="start" x="8" y="-623" font-family="Helvetica,sans-Serif" font-size="10.00"> iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="8" y="-612" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="8" y="-601" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralFlux(const float</text>
<text text-anchor="start" x="8" y="-590" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfMagSpec, const float</text>
<text text-anchor="start" x="8" y="-579" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfPrevSpec, int iDataLength,</text>
<text text-anchor="start" x="8" y="-568" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate=1.F)</text>
<text text-anchor="start" x="8" y="-557" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="8" y="-546" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralKurtosis(const</text>
<text text-anchor="start" x="8" y="-535" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfMagSpec, int</text>
<text text-anchor="start" x="8" y="-524" font-family="Helvetica,sans-Serif" font-size="10.00"> iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="8" y="-513" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="8" y="-502" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralRolloff(const</text>
<text text-anchor="start" x="8" y="-491" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfMagSpec, int</text>
<text text-anchor="start" x="8" y="-480" font-family="Helvetica,sans-Serif" font-size="10.00"> iDataLength, float fSampleRate</text>
<text text-anchor="start" x="8" y="-469" font-family="Helvetica,sans-Serif" font-size="10.00">=1.F, float fKappa=.85F)</text>
<text text-anchor="start" x="8" y="-458" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="8" y="-447" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralSkewness(const</text>
<text text-anchor="start" x="8" y="-436" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfMagSpec, int</text>
<text text-anchor="start" x="8" y="-425" font-family="Helvetica,sans-Serif" font-size="10.00"> iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="8" y="-414" font-family="Helvetica,sans-Serif" font-size="10.00">and 8 more...</text>
<text text-anchor="start" x="8" y="-403" font-family="Helvetica,sans-Serif" font-size="10.00"># &#160;CFeatureFromBlockIf()</text>
<text text-anchor="start" x="8" y="-392" font-family="Helvetica,sans-Serif" font-size="10.00"># &#160;CFeatureFromBlockIf</text>
<text text-anchor="start" x="8" y="-381" font-family="Helvetica,sans-Serif" font-size="10.00">(CFeatureIf::Feature</text>
<text text-anchor="start" x="8" y="-370" font-family="Helvetica,sans-Serif" font-size="10.00">_t eFeatureIdx, int iDataLength,</text>
<text text-anchor="start" x="8" y="-359" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate)</text>
<text text-anchor="start" x="8" y="-348" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CFeatureFromBlockIf()</text>
<text text-anchor="start" x="8" y="-337" font-family="Helvetica,sans-Serif" font-size="10.00"># &#160;CFeatureFromBlockIf</text>
<text text-anchor="start" x="8" y="-326" font-family="Helvetica,sans-Serif" font-size="10.00">(const CFeatureFromBlockIf</text>
<text text-anchor="start" x="8" y="-315" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;that)</text>
<text text-anchor="start" x="8" y="-304" font-family="Helvetica,sans-Serif" font-size="10.00"># CFeatureFromBlockIf</text>
<text text-anchor="start" x="8" y="-293" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp; operator=(const CFeature</text>
<text text-anchor="start" x="8" y="-282" font-family="Helvetica,sans-Serif" font-size="10.00">FromBlockIf &amp;c)</text>
<text text-anchor="middle" x="94" y="-271" font-family="Helvetica,sans-Serif" font-size="10.00">}</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="#63b8ff" d="M163.96,-253.46C165.97,-240.86 167.91,-228.75 169.75,-217.28"/>
<polygon fill="none" stroke="#63b8ff" points="160.45,-253.24 162.32,-263.67 167.36,-254.35 160.45,-253.24"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="a00582.xhtml" target="_top" xlink:title="class for single&#45;pole low pass filtering">
<polygon fill="white" stroke="#666666" points="355.5,-833 206.5,-833 206.5,-550 355.5,-550 355.5,-833"/>
<text text-anchor="middle" x="281" y="-821" font-family="Helvetica,sans-Serif" font-size="10.00">{CSinglePoleLp</text>
<text text-anchor="start" x="214.5" y="-810" font-family="Helvetica,sans-Serif" font-size="10.00">|&#45; float m_fAlpha</text>
<text text-anchor="start" x="214.5" y="-799" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float m_fPrevOut</text>
<text text-anchor="start" x="214.5" y="-788" font-family="Helvetica,sans-Serif" font-size="10.00">|+ Error_t setFilterParam</text>
<text text-anchor="start" x="214.5" y="-777" font-family="Helvetica,sans-Serif" font-size="10.00">(float fAlpha=.9F)</text>
<text text-anchor="start" x="214.5" y="-766" font-family="Helvetica,sans-Serif" font-size="10.00">+ float getFilterParam</text>
<text text-anchor="start" x="214.5" y="-755" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="214.5" y="-744" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t process(float</text>
<text text-anchor="start" x="214.5" y="-733" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfOut, const float</text>
<text text-anchor="start" x="214.5" y="-722" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfIn, long long iNumSamples)</text>
<text text-anchor="start" x="214.5" y="-711" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t reset()</text>
<text text-anchor="start" x="214.5" y="-700" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="214.5" y="-689" font-family="Helvetica,sans-Serif" font-size="10.00">(CSinglePoleLp *&amp;pCInstance)</text>
<text text-anchor="start" x="214.5" y="-678" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="214.5" y="-667" font-family="Helvetica,sans-Serif" font-size="10.00">(CSinglePoleLp *&amp;pCInstance)</text>
<text text-anchor="start" x="214.5" y="-656" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float calcFilterParam</text>
<text text-anchor="start" x="214.5" y="-645" font-family="Helvetica,sans-Serif" font-size="10.00">(float fIntegrationTimeInS,</text>
<text text-anchor="start" x="214.5" y="-634" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate)</text>
<text text-anchor="start" x="214.5" y="-623" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; &#160;CSinglePoleLp()</text>
<text text-anchor="start" x="214.5" y="-612" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; virtual ~CSinglePoleLp()</text>
<text text-anchor="start" x="214.5" y="-601" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; &#160;CSinglePoleLp(const</text>
<text text-anchor="start" x="214.5" y="-590" font-family="Helvetica,sans-Serif" font-size="10.00"> CSinglePoleLp &amp;that)</text>
<text text-anchor="start" x="214.5" y="-579" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CSinglePoleLp &amp; operator</text>
<text text-anchor="start" x="214.5" y="-568" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CSinglePoleLp &amp;c)</text>
<text text-anchor="middle" x="281" y="-557" font-family="Helvetica,sans-Serif" font-size="10.00">}</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node1 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node1</title>
<path fill="none" stroke="#404040" d="M258.25,-549.86C242.37,-451.73 221.41,-322.18 206.34,-229.04"/>
<polygon fill="none" stroke="#404040" points="206.31,-228.85 201.4,-223.57 204.39,-217.01 209.3,-222.29 206.31,-228.85"/>
<text text-anchor="middle" x="248" y="-238" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;m_pCSinglePole</text>
</g>
</g>
</svg>
