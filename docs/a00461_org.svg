<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 4.0.0 (20220602.1335)
 -->
<!-- Title: CClassifierBase Pages: 1 -->
<svg width="458pt" height="743pt"
 viewBox="0.00 0.00 458.00 743.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 739)">
<title>CClassifierBase</title>
<polygon fill="white" stroke="transparent" points="-4,4 -4,-739 454,-739 454,4 -4,4"/>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="abstract base class for traditional classifiers">
<polygon fill="#bfbfbf" stroke="black" points="117.5,-457.5 117.5,-734.5 332.5,-734.5 332.5,-457.5 117.5,-457.5"/>
<text text-anchor="middle" x="225" y="-722.5" font-family="Helvetica,sans-Serif" font-size="10.00">CClassifierBase</text>
<polyline fill="none" stroke="black" points="117.5,-715.5 332.5,-715.5 "/>
<text text-anchor="start" x="125.5" y="-703.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static const int kIllegal</text>
<text text-anchor="start" x="125.5" y="-692.5" font-family="Helvetica,sans-Serif" font-size="10.00">ClassLabel</text>
<text text-anchor="start" x="125.5" y="-681.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float * m_pfNormScale</text>
<text text-anchor="start" x="125.5" y="-670.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float * m_pfNormSub</text>
<polyline fill="none" stroke="black" points="117.5,-663.5 332.5,-663.5 "/>
<text text-anchor="start" x="125.5" y="-651.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Error_t init</text>
<text text-anchor="start" x="125.5" y="-640.5" font-family="Helvetica,sans-Serif" font-size="10.00">(int iNumFeatures, int</text>
<text text-anchor="start" x="125.5" y="-629.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iNumObservations)=0</text>
<text text-anchor="start" x="125.5" y="-618.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Error_t train</text>
<text text-anchor="start" x="125.5" y="-607.5" font-family="Helvetica,sans-Serif" font-size="10.00">(const float *const *const</text>
<text text-anchor="start" x="125.5" y="-596.5" font-family="Helvetica,sans-Serif" font-size="10.00"> ppfTrainFeatures, const</text>
<text text-anchor="start" x="125.5" y="-585.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int *piTrainClassIndices,</text>
<text text-anchor="start" x="125.5" y="-574.5" font-family="Helvetica,sans-Serif" font-size="10.00"> Normalization_t eNorm=kNoNormalization)=0</text>
<text text-anchor="start" x="125.5" y="-563.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Error_t reset()=0</text>
<text text-anchor="start" x="125.5" y="-552.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual int classify</text>
<text text-anchor="start" x="125.5" y="-541.5" font-family="Helvetica,sans-Serif" font-size="10.00">(const float *pfQuery)=0</text>
<text text-anchor="start" x="125.5" y="-530.5" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CClassifierBase()</text>
<text text-anchor="start" x="125.5" y="-519.5" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual void compNormConstants</text>
<text text-anchor="start" x="125.5" y="-508.5" font-family="Helvetica,sans-Serif" font-size="10.00">(const float *const *const</text>
<text text-anchor="start" x="125.5" y="-497.5" font-family="Helvetica,sans-Serif" font-size="10.00"> ppfTrainFeatures, int iNumFeatures,</text>
<text text-anchor="start" x="125.5" y="-486.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iNumObs, Normalization_t eNorm)</text>
<text text-anchor="start" x="125.5" y="-475.5" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual void normalizeVector</text>
<text text-anchor="start" x="125.5" y="-464.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfQuery, int iNumFeatures)</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="a00570.xhtml" target="_top" xlink:title="computation of k nearest neighbor">
<polygon fill="white" stroke="black" points="0,-11.5 0,-409.5 216,-409.5 216,-11.5 0,-11.5"/>
<text text-anchor="middle" x="108" y="-397.5" font-family="Helvetica,sans-Serif" font-size="10.00">CGmmClassifier</text>
<polyline fill="none" stroke="black" points="0,-390.5 216,-390.5 "/>
<text text-anchor="start" x="8" y="-378.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iNumFeatures</text>
<text text-anchor="start" x="8" y="-367.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iNumObs</text>
<text text-anchor="start" x="8" y="-356.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iNumClasses</text>
<text text-anchor="start" x="8" y="-345.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iK</text>
<text text-anchor="start" x="8" y="-334.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int * m_piClassLabels</text>
<text text-anchor="start" x="8" y="-323.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_pfQuery</text>
<text text-anchor="start" x="8" y="-312.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; bool m_bIsInitialized</text>
<text text-anchor="start" x="8" y="-301.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CGmmResult ** m_ppCGmmResult</text>
<polyline fill="none" stroke="black" points="0,-294.5 216,-294.5 "/>
<text text-anchor="start" x="8" y="-282.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CGmmClassifier(void)</text>
<text text-anchor="start" x="8" y="-271.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CGmmClassifier</text>
<text text-anchor="start" x="8" y="-260.5" font-family="Helvetica,sans-Serif" font-size="10.00">(void)</text>
<text text-anchor="start" x="8" y="-249.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t init(int iNumFeatures,</text>
<text text-anchor="start" x="8" y="-238.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iNumObservations) override</text>
<text text-anchor="start" x="8" y="-227.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t train(const</text>
<text text-anchor="start" x="8" y="-216.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *const *const</text>
<text text-anchor="start" x="8" y="-205.5" font-family="Helvetica,sans-Serif" font-size="10.00"> ppfTrainFeatures, const</text>
<text text-anchor="start" x="8" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int *piTrainClassIndices,</text>
<text text-anchor="start" x="8" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00"> CClassifierBase::Normalization</text>
<text text-anchor="start" x="8" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t eNorm=CClassifierBase::kNoNormalization)</text>
<text text-anchor="start" x="8" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00"> override</text>
<text text-anchor="start" x="8" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t reset() override</text>
<text text-anchor="start" x="8" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t setNumMixtures</text>
<text text-anchor="start" x="8" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00">(int iK=3)</text>
<text text-anchor="start" x="8" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ int getNumMixtures</text>
<text text-anchor="start" x="8" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="8" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ int classify(const</text>
<text text-anchor="start" x="8" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfQuery) override</text>
<text text-anchor="start" x="8" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CGmmClassifier(const</text>
<text text-anchor="start" x="8" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00"> CGmmClassifier &amp;that)</text>
<text text-anchor="start" x="8" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CGmmClassifier &amp; operator</text>
<text text-anchor="start" x="8" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CGmmClassifier &amp;c)</text>
<text text-anchor="start" x="8" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int countClasses(const</text>
<text text-anchor="start" x="8" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int *piClassLabels)</text>
</a>
</g>
</g>
<!-- Node1&#45;&gt;Node2 -->
<g id="edge1" class="edge">
<title>Node1&#45;&gt;Node2</title>
<path fill="none" stroke="midnightblue" d="M179.98,-447.44C176.18,-434.99 172.31,-422.28 168.42,-409.54"/>
<polygon fill="none" stroke="midnightblue" points="176.74,-448.82 183.01,-457.36 183.44,-446.77 176.74,-448.82"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="a00626.xhtml" target="_top" xlink:title="computation of k nearest neighbor">
<polygon fill="white" stroke="black" points="234,-0.5 234,-420.5 450,-420.5 450,-0.5 234,-0.5"/>
<text text-anchor="middle" x="342" y="-408.5" font-family="Helvetica,sans-Serif" font-size="10.00">CKnn</text>
<polyline fill="none" stroke="black" points="234,-401.5 450,-401.5 "/>
<text text-anchor="start" x="242" y="-389.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iNumFeatures</text>
<text text-anchor="start" x="242" y="-378.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iNumObs</text>
<text text-anchor="start" x="242" y="-367.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iK</text>
<text text-anchor="start" x="242" y="-356.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float ** m_ppfTrain</text>
<text text-anchor="start" x="242" y="-345.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int * m_piClassLabels</text>
<text text-anchor="start" x="242" y="-334.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_pfSortDist</text>
<text text-anchor="start" x="242" y="-323.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_pfQuery</text>
<text text-anchor="start" x="242" y="-312.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int * m_piSortIdx</text>
<text text-anchor="start" x="242" y="-301.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_pfHist</text>
<text text-anchor="start" x="242" y="-290.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int * m_piHistLabel</text>
<text text-anchor="start" x="242" y="-279.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int * m_piHistCount</text>
<text text-anchor="start" x="242" y="-268.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; bool m_bIsInitialized</text>
<polyline fill="none" stroke="black" points="234,-261.5 450,-261.5 "/>
<text text-anchor="start" x="242" y="-249.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CKnn(void)</text>
<text text-anchor="start" x="242" y="-238.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CKnn(void)</text>
<text text-anchor="start" x="242" y="-227.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t init(int iNumFeatures,</text>
<text text-anchor="start" x="242" y="-216.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iNumObservations) override</text>
<text text-anchor="start" x="242" y="-205.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t train(const</text>
<text text-anchor="start" x="242" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *const *const</text>
<text text-anchor="start" x="242" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00"> ppfTrainFeatures, const</text>
<text text-anchor="start" x="242" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int *piTrainClassIndices,</text>
<text text-anchor="start" x="242" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00"> CClassifierBase::Normalization</text>
<text text-anchor="start" x="242" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t eNorm=CClassifierBase::kNoNormalization)</text>
<text text-anchor="start" x="242" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00"> override</text>
<text text-anchor="start" x="242" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t reset() override</text>
<text text-anchor="start" x="242" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t setParamK(int</text>
<text text-anchor="start" x="242" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iK=3)</text>
<text text-anchor="start" x="242" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ int getParamK() const</text>
<text text-anchor="start" x="242" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ int classify(const</text>
<text text-anchor="start" x="242" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfQuery) override</text>
<text text-anchor="start" x="242" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CKnn(const CKnn &amp;that)</text>
<text text-anchor="start" x="242" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CKnn &amp; operator=(const</text>
<text text-anchor="start" x="242" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00"> CKnn &amp;c)</text>
<text text-anchor="start" x="242" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; void buildHistogram</text>
<text text-anchor="start" x="242" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">_(bool bUseDistance)</text>
<text text-anchor="start" x="242" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int countMaxima_()</text>
</a>
</g>
</g>
<!-- Node1&#45;&gt;Node3 -->
<g id="edge2" class="edge">
<title>Node1&#45;&gt;Node3</title>
<path fill="none" stroke="midnightblue" d="M269.94,-447.71C272.66,-438.77 275.43,-429.69 278.22,-420.55"/>
<polygon fill="none" stroke="midnightblue" points="266.56,-446.77 266.99,-457.36 273.26,-448.82 266.56,-446.77"/>
</g>
</g>
</svg>
