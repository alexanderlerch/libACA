<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 6.0.1 (20220911.1526)
 -->
<!-- Title: CPitchTimeAcf Pages: 1 -->
<svg width="370pt" height="1105pt"
 viewBox="0.00 0.00 369.50 1105.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 1101)">
<title>CPitchTimeAcf</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="class for computation of the pitch via the acf of the time domain signal">
<polygon fill="#999999" stroke="#666666" points="184,-184 15,-184 15,0 184,0 184,-184"/>
<text text-anchor="middle" x="99.5" y="-172" font-family="Helvetica,sans-Serif" font-size="10.00">{CPitchTimeAcf</text>
<text text-anchor="start" x="23" y="-161" font-family="Helvetica,sans-Serif" font-size="10.00">|&#45; float * m_pfAcf</text>
<text text-anchor="start" x="23" y="-150" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float m_fMax</text>
<text text-anchor="start" x="23" y="-139" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; const float m_fMinThresh</text>
<text text-anchor="start" x="23" y="-128" font-family="Helvetica,sans-Serif" font-size="10.00">|+ &#160;CPitchTimeAcf(CPitchIf</text>
<text text-anchor="start" x="23" y="-117" font-family="Helvetica,sans-Serif" font-size="10.00">::PitchExtractors_t ePitchIdx,</text>
<text text-anchor="start" x="23" y="-106" font-family="Helvetica,sans-Serif" font-size="10.00"> int iDataLength, float fSampleRate)</text>
<text text-anchor="start" x="23" y="-95" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CPitchTimeAcf()</text>
<text text-anchor="start" x="23" y="-84" font-family="Helvetica,sans-Serif" font-size="10.00">+ float compF0(const</text>
<text text-anchor="start" x="23" y="-73" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfIn) override</text>
<text text-anchor="start" x="23" y="-62" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; &#160;CPitchTimeAcf()</text>
<text text-anchor="start" x="23" y="-51" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; &#160;CPitchTimeAcf(const</text>
<text text-anchor="start" x="23" y="-40" font-family="Helvetica,sans-Serif" font-size="10.00"> CPitchTimeAcf &amp;that)</text>
<text text-anchor="start" x="23" y="-29" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CPitchTimeAcf &amp; operator</text>
<text text-anchor="start" x="23" y="-18" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CPitchTimeAcf &amp;c)</text>
<text text-anchor="middle" x="99.5" y="-7" font-family="Helvetica,sans-Serif" font-size="10.00">}</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="a00526.xhtml" target="_top" xlink:title="class for computation of f0 from a block of data (e.g., time or magnitude spectrum)">
<polygon fill="white" stroke="#666666" points="167,-569 0,-569 0,-231 167,-231 167,-569"/>
<text text-anchor="middle" x="83.5" y="-557" font-family="Helvetica,sans-Serif" font-size="10.00">{CPitchFromBlockIf</text>
<text text-anchor="start" x="8" y="-546" font-family="Helvetica,sans-Serif" font-size="10.00">|# CPitchIf::PitchExtractors</text>
<text text-anchor="start" x="8" y="-535" font-family="Helvetica,sans-Serif" font-size="10.00">_t m_ePitchIdx</text>
<text text-anchor="start" x="8" y="-524" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iDataLength</text>
<text text-anchor="start" x="8" y="-513" font-family="Helvetica,sans-Serif" font-size="10.00"># float m_fSampleRate</text>
<text text-anchor="start" x="8" y="-502" font-family="Helvetica,sans-Serif" font-size="10.00">|+ CPitchIf::PitchExtractors</text>
<text text-anchor="start" x="8" y="-491" font-family="Helvetica,sans-Serif" font-size="10.00">_t getPitchExtractorIdx</text>
<text text-anchor="start" x="8" y="-480" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="8" y="-469" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual float compF0</text>
<text text-anchor="start" x="8" y="-458" font-family="Helvetica,sans-Serif" font-size="10.00">(const float *pfIn)=0</text>
<text text-anchor="start" x="8" y="-447" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="8" y="-436" font-family="Helvetica,sans-Serif" font-size="10.00">(CPitchFromBlockIf *&amp;pCInstance,</text>
<text text-anchor="start" x="8" y="-425" font-family="Helvetica,sans-Serif" font-size="10.00"> CPitchIf::PitchExtractors</text>
<text text-anchor="start" x="8" y="-414" font-family="Helvetica,sans-Serif" font-size="10.00">_t ePitchIdx, int iDataLength,</text>
<text text-anchor="start" x="8" y="-403" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate=1.F)</text>
<text text-anchor="start" x="8" y="-392" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="8" y="-381" font-family="Helvetica,sans-Serif" font-size="10.00">(CPitchFromBlockIf *&amp;pCInstance)</text>
<text text-anchor="start" x="8" y="-370" font-family="Helvetica,sans-Serif" font-size="10.00"># &#160;CPitchFromBlockIf()</text>
<text text-anchor="start" x="8" y="-359" font-family="Helvetica,sans-Serif" font-size="10.00"># &#160;CPitchFromBlockIf</text>
<text text-anchor="start" x="8" y="-348" font-family="Helvetica,sans-Serif" font-size="10.00">(CPitchIf::PitchExtractors</text>
<text text-anchor="start" x="8" y="-337" font-family="Helvetica,sans-Serif" font-size="10.00">_t ePitchIdx, int iDataLength,</text>
<text text-anchor="start" x="8" y="-326" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate)</text>
<text text-anchor="start" x="8" y="-315" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CPitchFromBlockIf()</text>
<text text-anchor="start" x="8" y="-304" font-family="Helvetica,sans-Serif" font-size="10.00"># &#160;CPitchFromBlockIf</text>
<text text-anchor="start" x="8" y="-293" font-family="Helvetica,sans-Serif" font-size="10.00">(const CPitchFromBlockIf</text>
<text text-anchor="start" x="8" y="-282" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;that)</text>
<text text-anchor="start" x="8" y="-271" font-family="Helvetica,sans-Serif" font-size="10.00"># CPitchFromBlockIf &amp;</text>
<text text-anchor="start" x="8" y="-260" font-family="Helvetica,sans-Serif" font-size="10.00"> operator=(const CPitchFrom</text>
<text text-anchor="start" x="8" y="-249" font-family="Helvetica,sans-Serif" font-size="10.00">BlockIf &amp;c)</text>
<text text-anchor="middle" x="83.5" y="-238" font-family="Helvetica,sans-Serif" font-size="10.00">}</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="#63b8ff" d="M92.82,-220.71C93.48,-208.21 94.12,-195.94 94.73,-184.25"/>
<polygon fill="none" stroke="#63b8ff" points="89.32,-220.61 92.3,-230.78 96.31,-220.98 89.32,-220.61"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="a00546.xhtml" target="_top" xlink:title="computation of correlation (freq domain implementation)">
<polygon fill="white" stroke="#666666" points="349.5,-547 185.5,-547 185.5,-253 349.5,-253 349.5,-547"/>
<text text-anchor="middle" x="267.5" y="-535" font-family="Helvetica,sans-Serif" font-size="10.00">{CCcf</text>
<text text-anchor="start" x="193.5" y="-524" font-family="Helvetica,sans-Serif" font-size="10.00">|&#45; bool m_bIsInitialized</text>
<text text-anchor="start" x="193.5" y="-513" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; bool m_bWasProcessed</text>
<text text-anchor="start" x="193.5" y="-502" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_apfData</text>
<text text-anchor="start" x="193.5" y="-491" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iBlockLength</text>
<text text-anchor="start" x="193.5" y="-480" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iFftLength</text>
<text text-anchor="start" x="193.5" y="-469" font-family="Helvetica,sans-Serif" font-size="10.00">|+ &#160;CCcf(void)</text>
<text text-anchor="start" x="193.5" y="-458" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CCcf(void)</text>
<text text-anchor="start" x="193.5" y="-447" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t init(int iBlockLength)</text>
<text text-anchor="start" x="193.5" y="-436" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t reset()</text>
<text text-anchor="start" x="193.5" y="-425" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compCcf(const</text>
<text text-anchor="start" x="193.5" y="-414" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfIn1, const</text>
<text text-anchor="start" x="193.5" y="-403" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfIn2, bool bNormalize=true)</text>
<text text-anchor="start" x="193.5" y="-392" font-family="Helvetica,sans-Serif" font-size="10.00">+ int getCcfLength(bool</text>
<text text-anchor="start" x="193.5" y="-381" font-family="Helvetica,sans-Serif" font-size="10.00"> bisAcf=false)</text>
<text text-anchor="start" x="193.5" y="-370" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getCcf(float</text>
<text text-anchor="start" x="193.5" y="-359" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfCcfResult, bool bisAcf</text>
<text text-anchor="start" x="193.5" y="-348" font-family="Helvetica,sans-Serif" font-size="10.00">=false) const</text>
<text text-anchor="start" x="193.5" y="-337" font-family="Helvetica,sans-Serif" font-size="10.00">+ float getCcfMax(bool</text>
<text text-anchor="start" x="193.5" y="-326" font-family="Helvetica,sans-Serif" font-size="10.00"> bisAcf=false) const</text>
<text text-anchor="start" x="193.5" y="-315" font-family="Helvetica,sans-Serif" font-size="10.00">+ int getCcfMaxIdx(bool</text>
<text text-anchor="start" x="193.5" y="-304" font-family="Helvetica,sans-Serif" font-size="10.00"> bisAcf=false) const</text>
<text text-anchor="start" x="193.5" y="-293" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; &#160;CCcf(const CCcf &amp;that)</text>
<text text-anchor="start" x="193.5" y="-282" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CCcf &amp; operator=(const</text>
<text text-anchor="start" x="193.5" y="-271" font-family="Helvetica,sans-Serif" font-size="10.00"> CCcf &amp;c)</text>
<text text-anchor="middle" x="267.5" y="-260" font-family="Helvetica,sans-Serif" font-size="10.00">}</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node1 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node1</title>
<path fill="none" stroke="#404040" d="M187.49,-252.84C183.44,-245.45 179.42,-238.14 175.5,-231 169.08,-219.32 162.36,-207.08 155.67,-194.93"/>
<polygon fill="none" stroke="#404040" points="155.6,-194.8 149.2,-191.47 149.81,-184.29 156.21,-187.62 155.6,-194.8"/>
<text text-anchor="middle" x="187.5" y="-205" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;m_pCCcf</text>
</g>
<!-- Node4 -->
<g id="node4" class="node">
<title>Node4</title>
<g id="a_node4"><a xlink:href="a00474.xhtml" target="_top" xlink:title="class for FFT computation with windowing">
<polygon fill="white" stroke="#666666" points="361.5,-1097 173.5,-1097 173.5,-616 361.5,-616 361.5,-1097"/>
<text text-anchor="middle" x="267.5" y="-1085" font-family="Helvetica,sans-Serif" font-size="10.00">{CFft</text>
<text text-anchor="start" x="181.5" y="-1074" font-family="Helvetica,sans-Serif" font-size="10.00">|&#45; float * m_pfProcBuff</text>
<text text-anchor="start" x="181.5" y="-1063" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_pfWindowBuff</text>
<text text-anchor="start" x="181.5" y="-1052" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iDataLength</text>
<text text-anchor="start" x="181.5" y="-1041" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iFftLength</text>
<text text-anchor="start" x="181.5" y="-1030" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Windowing_t m_ePrePostWindowOpt</text>
<text text-anchor="start" x="181.5" y="-1019" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; bool m_bIsInitialized</text>
<text text-anchor="start" x="181.5" y="-1008" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; static const float m_Pi</text>
<text text-anchor="start" x="181.5" y="-997" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; static const float</text>
<text text-anchor="start" x="181.5" y="-986" font-family="Helvetica,sans-Serif" font-size="10.00"> m_Pi2</text>
<text text-anchor="start" x="181.5" y="-975" font-family="Helvetica,sans-Serif" font-size="10.00">|+ &#160;CFft()</text>
<text text-anchor="start" x="181.5" y="-964" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CFft()</text>
<text text-anchor="start" x="181.5" y="-953" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t init(int iBlockLength,</text>
<text text-anchor="start" x="181.5" y="-942" font-family="Helvetica,sans-Serif" font-size="10.00"> int iZeroPadFactor=1, WindowFunction</text>
<text text-anchor="start" x="181.5" y="-931" font-family="Helvetica,sans-Serif" font-size="10.00">_t eWindow=kWindowHann, Windowing</text>
<text text-anchor="start" x="181.5" y="-920" font-family="Helvetica,sans-Serif" font-size="10.00">_t eWindowing=kPreWindow)</text>
<text text-anchor="start" x="181.5" y="-909" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t reset()</text>
<text text-anchor="start" x="181.5" y="-898" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t overrideWindow</text>
<text text-anchor="start" x="181.5" y="-887" font-family="Helvetica,sans-Serif" font-size="10.00">(const float *pfNewWindow)</text>
<text text-anchor="start" x="181.5" y="-876" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getWindow(float</text>
<text text-anchor="start" x="181.5" y="-865" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfWindow) const</text>
<text text-anchor="start" x="181.5" y="-854" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compFft(complex</text>
<text text-anchor="start" x="181.5" y="-843" font-family="Helvetica,sans-Serif" font-size="10.00">_t *pfSpectrum, const</text>
<text text-anchor="start" x="181.5" y="-832" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfIn)</text>
<text text-anchor="start" x="181.5" y="-821" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compInvFft</text>
<text text-anchor="start" x="181.5" y="-810" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfOut, const</text>
<text text-anchor="start" x="181.5" y="-799" font-family="Helvetica,sans-Serif" font-size="10.00"> complex_t *pfSpectrum)</text>
<text text-anchor="start" x="181.5" y="-788" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getMagnitude</text>
<text text-anchor="start" x="181.5" y="-777" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfMag, const</text>
<text text-anchor="start" x="181.5" y="-766" font-family="Helvetica,sans-Serif" font-size="10.00"> complex_t *pfSpectrum)</text>
<text text-anchor="start" x="181.5" y="-755" font-family="Helvetica,sans-Serif" font-size="10.00"> const</text>
<text text-anchor="start" x="181.5" y="-744" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getPhase(float</text>
<text text-anchor="start" x="181.5" y="-733" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfPhase, const complex</text>
<text text-anchor="start" x="181.5" y="-722" font-family="Helvetica,sans-Serif" font-size="10.00">_t *pfSpectrum) const</text>
<text text-anchor="start" x="181.5" y="-711" font-family="Helvetica,sans-Serif" font-size="10.00">and 7 more...</text>
<text text-anchor="start" x="181.5" y="-700" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; &#160;CFft(const CFft &amp;that)</text>
<text text-anchor="start" x="181.5" y="-689" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CFft &amp; operator=(const</text>
<text text-anchor="start" x="181.5" y="-678" font-family="Helvetica,sans-Serif" font-size="10.00"> CFft &amp;c)</text>
<text text-anchor="start" x="181.5" y="-667" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Error_t allocMemory_()</text>
<text text-anchor="start" x="181.5" y="-656" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Error_t freeMemory_()</text>
<text text-anchor="start" x="181.5" y="-645" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Error_t computeWindow</text>
<text text-anchor="start" x="181.5" y="-634" font-family="Helvetica,sans-Serif" font-size="10.00">_(WindowFunction_t eWindow)</text>
<text text-anchor="middle" x="267.5" y="-623" font-family="Helvetica,sans-Serif" font-size="10.00">}</text>
</a>
</g>
</g>
<!-- Node4&#45;&gt;Node3 -->
<g id="edge3" class="edge">
<title>Node4&#45;&gt;Node3</title>
<path fill="none" stroke="#404040" d="M267.5,-615.94C267.5,-596.84 267.5,-577.86 267.5,-559.54"/>
<polygon fill="none" stroke="#404040" points="267.5,-559.28 263.5,-553.28 267.5,-547.28 271.5,-553.28 267.5,-559.28"/>
<text text-anchor="middle" x="289" y="-590" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;m_pCFft</text>
</g>
</g>
</svg>
