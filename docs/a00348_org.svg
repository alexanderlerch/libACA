<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 6.0.1 (20220911.1526)
 -->
<!-- Title: CFeatureTimeMaxAcf Pages: 1 -->
<svg width="390pt" height="1710pt"
 viewBox="0.00 0.00 390.00 1710.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 1706)">
<title>CFeatureTimeMaxAcf</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="class for computation of the maximum of the acf">
<polygon fill="#999999" stroke="#666666" points="226,-272 74,-272 74,0 226,0 226,-272"/>
<text text-anchor="middle" x="150" y="-260" font-family="Helvetica,sans-Serif" font-size="10.00">{CFeatureTimeMaxAcf</text>
<text text-anchor="start" x="82" y="-249" font-family="Helvetica,sans-Serif" font-size="10.00">|&#45; float * m_pfAcf</text>
<text text-anchor="start" x="82" y="-238" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float m_fMax</text>
<text text-anchor="start" x="82" y="-227" font-family="Helvetica,sans-Serif" font-size="10.00">|+ &#160;CFeatureTimeMaxAcf</text>
<text text-anchor="start" x="82" y="-216" font-family="Helvetica,sans-Serif" font-size="10.00">(CFeatureIf::Feature</text>
<text text-anchor="start" x="82" y="-205" font-family="Helvetica,sans-Serif" font-size="10.00">_t eFeatureIdx, int iDataLength,</text>
<text text-anchor="start" x="82" y="-194" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate)</text>
<text text-anchor="start" x="82" y="-183" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CFeatureTimeMax</text>
<text text-anchor="start" x="82" y="-172" font-family="Helvetica,sans-Serif" font-size="10.00">Acf()</text>
<text text-anchor="start" x="82" y="-161" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compFeature</text>
<text text-anchor="start" x="82" y="-150" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfFeature, const</text>
<text text-anchor="start" x="82" y="-139" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfIn) override</text>
<text text-anchor="start" x="82" y="-128" font-family="Helvetica,sans-Serif" font-size="10.00">+ bool hasAdditionalParam</text>
<text text-anchor="start" x="82" y="-117" font-family="Helvetica,sans-Serif" font-size="10.00">() const override</text>
<text text-anchor="start" x="82" y="-106" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t setAdditionalParam</text>
<text text-anchor="start" x="82" y="-95" font-family="Helvetica,sans-Serif" font-size="10.00">(float fParamValue) override</text>
<text text-anchor="start" x="82" y="-84" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; &#160;CFeatureTimeMaxAcf()</text>
<text text-anchor="start" x="82" y="-73" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; &#160;CFeatureTimeMaxAcf</text>
<text text-anchor="start" x="82" y="-62" font-family="Helvetica,sans-Serif" font-size="10.00">(const CFeatureTimeMaxAcf</text>
<text text-anchor="start" x="82" y="-51" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;that)</text>
<text text-anchor="start" x="82" y="-40" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CFeatureTimeMaxAcf</text>
<text text-anchor="start" x="82" y="-29" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp; operator=(const CFeature</text>
<text text-anchor="start" x="82" y="-18" font-family="Helvetica,sans-Serif" font-size="10.00">TimeMaxAcf &amp;c)</text>
<text text-anchor="middle" x="150" y="-7" font-family="Helvetica,sans-Serif" font-size="10.00">}</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="a00470.xhtml" target="_top" xlink:title="class for computation of a feature from a block of data (e.g., time or magnitude spectrum)">
<polygon fill="white" stroke="#666666" points="188,-1174 0,-1174 0,-319 188,-319 188,-1174"/>
<text text-anchor="middle" x="94" y="-1162" font-family="Helvetica,sans-Serif" font-size="10.00">{CFeatureFromBlockIf</text>
<text text-anchor="start" x="8" y="-1151" font-family="Helvetica,sans-Serif" font-size="10.00">|+ static const float</text>
<text text-anchor="start" x="8" y="-1140" font-family="Helvetica,sans-Serif" font-size="10.00"> m_kfFloatThresh</text>
<text text-anchor="start" x="8" y="-1129" font-family="Helvetica,sans-Serif" font-size="10.00"># CFeatureIf::Feature</text>
<text text-anchor="start" x="8" y="-1118" font-family="Helvetica,sans-Serif" font-size="10.00">_t m_eFeatureIdx</text>
<text text-anchor="start" x="8" y="-1107" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iDataLength</text>
<text text-anchor="start" x="8" y="-1096" font-family="Helvetica,sans-Serif" font-size="10.00"># float m_fSampleRate</text>
<text text-anchor="start" x="8" y="-1085" font-family="Helvetica,sans-Serif" font-size="10.00"># const std::map&lt; CFeature</text>
<text text-anchor="start" x="8" y="-1074" font-family="Helvetica,sans-Serif" font-size="10.00">If::Feature_t, std::function</text>
<text text-anchor="start" x="8" y="-1063" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; float(const float *, int,</text>
<text text-anchor="start" x="8" y="-1052" font-family="Helvetica,sans-Serif" font-size="10.00"> float)&gt; &gt; m_DispatchMap</text>
<text text-anchor="start" x="8" y="-1041" font-family="Helvetica,sans-Serif" font-size="10.00">|+ virtual int getFeatureDimensions</text>
<text text-anchor="start" x="8" y="-1030" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="8" y="-1019" font-family="Helvetica,sans-Serif" font-size="10.00">+ CFeatureIf::Feature</text>
<text text-anchor="start" x="8" y="-1008" font-family="Helvetica,sans-Serif" font-size="10.00">_t getFeatureIdx() const</text>
<text text-anchor="start" x="8" y="-997" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Error_t compFeature</text>
<text text-anchor="start" x="8" y="-986" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfFeature, const</text>
<text text-anchor="start" x="8" y="-975" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfIn)</text>
<text text-anchor="start" x="8" y="-964" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual bool hasAdditional</text>
<text text-anchor="start" x="8" y="-953" font-family="Helvetica,sans-Serif" font-size="10.00">Param() const</text>
<text text-anchor="start" x="8" y="-942" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Error_t setAdditional</text>
<text text-anchor="start" x="8" y="-931" font-family="Helvetica,sans-Serif" font-size="10.00">Param(float fParamValue)</text>
<text text-anchor="start" x="8" y="-920" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="8" y="-909" font-family="Helvetica,sans-Serif" font-size="10.00">(CFeatureFromBlockIf</text>
<text text-anchor="start" x="8" y="-898" font-family="Helvetica,sans-Serif" font-size="10.00"> *&amp;pCInstance, CFeatureIf</text>
<text text-anchor="start" x="8" y="-887" font-family="Helvetica,sans-Serif" font-size="10.00">::Feature_t eFeatureIdx,</text>
<text text-anchor="start" x="8" y="-876" font-family="Helvetica,sans-Serif" font-size="10.00"> int iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="8" y="-865" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="8" y="-854" font-family="Helvetica,sans-Serif" font-size="10.00">(CFeatureFromBlockIf *&amp;pCInstance)</text>
<text text-anchor="start" x="8" y="-843" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="8" y="-832" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralCentroid(const</text>
<text text-anchor="start" x="8" y="-821" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfMagSpec, int</text>
<text text-anchor="start" x="8" y="-810" font-family="Helvetica,sans-Serif" font-size="10.00"> iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="8" y="-799" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="8" y="-788" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralCrestFactor(const</text>
<text text-anchor="start" x="8" y="-777" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfMagSpec, int iDataLength,</text>
<text text-anchor="start" x="8" y="-766" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate=1.F)</text>
<text text-anchor="start" x="8" y="-755" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="8" y="-744" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralDecrease(const</text>
<text text-anchor="start" x="8" y="-733" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfMagSpec, int</text>
<text text-anchor="start" x="8" y="-722" font-family="Helvetica,sans-Serif" font-size="10.00"> iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="8" y="-711" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="8" y="-700" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralFlatness(const</text>
<text text-anchor="start" x="8" y="-689" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfMagSpec, int</text>
<text text-anchor="start" x="8" y="-678" font-family="Helvetica,sans-Serif" font-size="10.00"> iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="8" y="-667" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="8" y="-656" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralFlux(const float</text>
<text text-anchor="start" x="8" y="-645" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfMagSpec, const float</text>
<text text-anchor="start" x="8" y="-634" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfPrevSpec, int iDataLength,</text>
<text text-anchor="start" x="8" y="-623" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate=1.F)</text>
<text text-anchor="start" x="8" y="-612" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="8" y="-601" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralKurtosis(const</text>
<text text-anchor="start" x="8" y="-590" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfMagSpec, int</text>
<text text-anchor="start" x="8" y="-579" font-family="Helvetica,sans-Serif" font-size="10.00"> iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="8" y="-568" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="8" y="-557" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralRolloff(const</text>
<text text-anchor="start" x="8" y="-546" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfMagSpec, int</text>
<text text-anchor="start" x="8" y="-535" font-family="Helvetica,sans-Serif" font-size="10.00"> iDataLength, float fSampleRate</text>
<text text-anchor="start" x="8" y="-524" font-family="Helvetica,sans-Serif" font-size="10.00">=1.F, float fKappa=.85F)</text>
<text text-anchor="start" x="8" y="-513" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="8" y="-502" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralSkewness(const</text>
<text text-anchor="start" x="8" y="-491" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfMagSpec, int</text>
<text text-anchor="start" x="8" y="-480" font-family="Helvetica,sans-Serif" font-size="10.00"> iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="8" y="-469" font-family="Helvetica,sans-Serif" font-size="10.00">and 8 more...</text>
<text text-anchor="start" x="8" y="-458" font-family="Helvetica,sans-Serif" font-size="10.00"># &#160;CFeatureFromBlockIf()</text>
<text text-anchor="start" x="8" y="-447" font-family="Helvetica,sans-Serif" font-size="10.00"># &#160;CFeatureFromBlockIf</text>
<text text-anchor="start" x="8" y="-436" font-family="Helvetica,sans-Serif" font-size="10.00">(CFeatureIf::Feature</text>
<text text-anchor="start" x="8" y="-425" font-family="Helvetica,sans-Serif" font-size="10.00">_t eFeatureIdx, int iDataLength,</text>
<text text-anchor="start" x="8" y="-414" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate)</text>
<text text-anchor="start" x="8" y="-403" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CFeatureFromBlockIf()</text>
<text text-anchor="start" x="8" y="-392" font-family="Helvetica,sans-Serif" font-size="10.00"># &#160;CFeatureFromBlockIf</text>
<text text-anchor="start" x="8" y="-381" font-family="Helvetica,sans-Serif" font-size="10.00">(const CFeatureFromBlockIf</text>
<text text-anchor="start" x="8" y="-370" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;that)</text>
<text text-anchor="start" x="8" y="-359" font-family="Helvetica,sans-Serif" font-size="10.00"># CFeatureFromBlockIf</text>
<text text-anchor="start" x="8" y="-348" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp; operator=(const CFeature</text>
<text text-anchor="start" x="8" y="-337" font-family="Helvetica,sans-Serif" font-size="10.00">FromBlockIf &amp;c)</text>
<text text-anchor="middle" x="94" y="-326" font-family="Helvetica,sans-Serif" font-size="10.00">}</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="#63b8ff" d="M134.21,-308.56C135.37,-295.96 136.5,-283.74 137.58,-272"/>
<polygon fill="none" stroke="#63b8ff" points="130.71,-308.47 133.27,-318.75 137.68,-309.11 130.71,-308.47"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="a00546.xhtml" target="_top" xlink:title="computation of correlation (freq domain implementation)">
<polygon fill="white" stroke="#666666" points="370,-893.5 206,-893.5 206,-599.5 370,-599.5 370,-893.5"/>
<text text-anchor="middle" x="288" y="-881.5" font-family="Helvetica,sans-Serif" font-size="10.00">{CCcf</text>
<text text-anchor="start" x="214" y="-870.5" font-family="Helvetica,sans-Serif" font-size="10.00">|&#45; bool m_bIsInitialized</text>
<text text-anchor="start" x="214" y="-859.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; bool m_bWasProcessed</text>
<text text-anchor="start" x="214" y="-848.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_apfData</text>
<text text-anchor="start" x="214" y="-837.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iBlockLength</text>
<text text-anchor="start" x="214" y="-826.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iFftLength</text>
<text text-anchor="start" x="214" y="-815.5" font-family="Helvetica,sans-Serif" font-size="10.00">|+ &#160;CCcf(void)</text>
<text text-anchor="start" x="214" y="-804.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CCcf(void)</text>
<text text-anchor="start" x="214" y="-793.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t init(int iBlockLength)</text>
<text text-anchor="start" x="214" y="-782.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t reset()</text>
<text text-anchor="start" x="214" y="-771.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compCcf(const</text>
<text text-anchor="start" x="214" y="-760.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfIn1, const</text>
<text text-anchor="start" x="214" y="-749.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfIn2, bool bNormalize=true)</text>
<text text-anchor="start" x="214" y="-738.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ int getCcfLength(bool</text>
<text text-anchor="start" x="214" y="-727.5" font-family="Helvetica,sans-Serif" font-size="10.00"> bisAcf=false)</text>
<text text-anchor="start" x="214" y="-716.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getCcf(float</text>
<text text-anchor="start" x="214" y="-705.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfCcfResult, bool bisAcf</text>
<text text-anchor="start" x="214" y="-694.5" font-family="Helvetica,sans-Serif" font-size="10.00">=false) const</text>
<text text-anchor="start" x="214" y="-683.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ float getCcfMax(bool</text>
<text text-anchor="start" x="214" y="-672.5" font-family="Helvetica,sans-Serif" font-size="10.00"> bisAcf=false) const</text>
<text text-anchor="start" x="214" y="-661.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ int getCcfMaxIdx(bool</text>
<text text-anchor="start" x="214" y="-650.5" font-family="Helvetica,sans-Serif" font-size="10.00"> bisAcf=false) const</text>
<text text-anchor="start" x="214" y="-639.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; &#160;CCcf(const CCcf &amp;that)</text>
<text text-anchor="start" x="214" y="-628.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CCcf &amp; operator=(const</text>
<text text-anchor="start" x="214" y="-617.5" font-family="Helvetica,sans-Serif" font-size="10.00"> CCcf &amp;c)</text>
<text text-anchor="middle" x="288" y="-606.5" font-family="Helvetica,sans-Serif" font-size="10.00">}</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node1 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node1</title>
<path fill="none" stroke="#404040" d="M258.36,-599.09C241.27,-516.62 218.88,-411.85 197,-319 194.3,-307.57 191.44,-295.75 188.5,-283.88"/>
<polygon fill="none" stroke="#404040" points="188.45,-283.65 183.11,-278.8 185.55,-272.01 190.88,-276.86 188.45,-283.65"/>
<text text-anchor="middle" x="215" y="-293" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;m_pCCcf</text>
</g>
<!-- Node4 -->
<g id="node4" class="node">
<title>Node4</title>
<g id="a_node4"><a xlink:href="a00474.xhtml" target="_top" xlink:title="class for FFT computation with windowing">
<polygon fill="white" stroke="#666666" points="382,-1702 194,-1702 194,-1221 382,-1221 382,-1702"/>
<text text-anchor="middle" x="288" y="-1690" font-family="Helvetica,sans-Serif" font-size="10.00">{CFft</text>
<text text-anchor="start" x="202" y="-1679" font-family="Helvetica,sans-Serif" font-size="10.00">|&#45; float * m_pfProcBuff</text>
<text text-anchor="start" x="202" y="-1668" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_pfWindowBuff</text>
<text text-anchor="start" x="202" y="-1657" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iDataLength</text>
<text text-anchor="start" x="202" y="-1646" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iFftLength</text>
<text text-anchor="start" x="202" y="-1635" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Windowing_t m_ePrePostWindowOpt</text>
<text text-anchor="start" x="202" y="-1624" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; bool m_bIsInitialized</text>
<text text-anchor="start" x="202" y="-1613" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; static const float m_Pi</text>
<text text-anchor="start" x="202" y="-1602" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; static const float</text>
<text text-anchor="start" x="202" y="-1591" font-family="Helvetica,sans-Serif" font-size="10.00"> m_Pi2</text>
<text text-anchor="start" x="202" y="-1580" font-family="Helvetica,sans-Serif" font-size="10.00">|+ &#160;CFft()</text>
<text text-anchor="start" x="202" y="-1569" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CFft()</text>
<text text-anchor="start" x="202" y="-1558" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t init(int iBlockLength,</text>
<text text-anchor="start" x="202" y="-1547" font-family="Helvetica,sans-Serif" font-size="10.00"> int iZeroPadFactor=1, WindowFunction</text>
<text text-anchor="start" x="202" y="-1536" font-family="Helvetica,sans-Serif" font-size="10.00">_t eWindow=kWindowHann, Windowing</text>
<text text-anchor="start" x="202" y="-1525" font-family="Helvetica,sans-Serif" font-size="10.00">_t eWindowing=kPreWindow)</text>
<text text-anchor="start" x="202" y="-1514" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t reset()</text>
<text text-anchor="start" x="202" y="-1503" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t overrideWindow</text>
<text text-anchor="start" x="202" y="-1492" font-family="Helvetica,sans-Serif" font-size="10.00">(const float *pfNewWindow)</text>
<text text-anchor="start" x="202" y="-1481" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getWindow(float</text>
<text text-anchor="start" x="202" y="-1470" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfWindow) const</text>
<text text-anchor="start" x="202" y="-1459" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compFft(complex</text>
<text text-anchor="start" x="202" y="-1448" font-family="Helvetica,sans-Serif" font-size="10.00">_t *pfSpectrum, const</text>
<text text-anchor="start" x="202" y="-1437" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfIn)</text>
<text text-anchor="start" x="202" y="-1426" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compInvFft</text>
<text text-anchor="start" x="202" y="-1415" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfOut, const</text>
<text text-anchor="start" x="202" y="-1404" font-family="Helvetica,sans-Serif" font-size="10.00"> complex_t *pfSpectrum)</text>
<text text-anchor="start" x="202" y="-1393" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getMagnitude</text>
<text text-anchor="start" x="202" y="-1382" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfMag, const</text>
<text text-anchor="start" x="202" y="-1371" font-family="Helvetica,sans-Serif" font-size="10.00"> complex_t *pfSpectrum)</text>
<text text-anchor="start" x="202" y="-1360" font-family="Helvetica,sans-Serif" font-size="10.00"> const</text>
<text text-anchor="start" x="202" y="-1349" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getPhase(float</text>
<text text-anchor="start" x="202" y="-1338" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfPhase, const complex</text>
<text text-anchor="start" x="202" y="-1327" font-family="Helvetica,sans-Serif" font-size="10.00">_t *pfSpectrum) const</text>
<text text-anchor="start" x="202" y="-1316" font-family="Helvetica,sans-Serif" font-size="10.00">and 7 more...</text>
<text text-anchor="start" x="202" y="-1305" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; &#160;CFft(const CFft &amp;that)</text>
<text text-anchor="start" x="202" y="-1294" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CFft &amp; operator=(const</text>
<text text-anchor="start" x="202" y="-1283" font-family="Helvetica,sans-Serif" font-size="10.00"> CFft &amp;c)</text>
<text text-anchor="start" x="202" y="-1272" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Error_t allocMemory_()</text>
<text text-anchor="start" x="202" y="-1261" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Error_t freeMemory_()</text>
<text text-anchor="start" x="202" y="-1250" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Error_t computeWindow</text>
<text text-anchor="start" x="202" y="-1239" font-family="Helvetica,sans-Serif" font-size="10.00">_(WindowFunction_t eWindow)</text>
<text text-anchor="middle" x="288" y="-1228" font-family="Helvetica,sans-Serif" font-size="10.00">}</text>
</a>
</g>
</g>
<!-- Node4&#45;&gt;Node3 -->
<g id="edge3" class="edge">
<title>Node4&#45;&gt;Node3</title>
<path fill="none" stroke="#404040" d="M288,-1220.6C288,-1116.77 288,-998.1 288,-905.59"/>
<polygon fill="none" stroke="#404040" points="288,-905.58 284,-899.58 288,-893.58 292,-899.58 288,-905.58"/>
<text text-anchor="middle" x="309.5" y="-1195" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;m_pCFft</text>
</g>
</g>
</svg>
