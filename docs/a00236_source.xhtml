<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.4"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ACA: ToolPreProc.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">ACA<span id="projectnumber">&#160;0.3.1</span>
   </div>
   <div id="projectbrief">Example Code for Audio Content Analysis</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.4 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search",'Search','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('a00236_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle"><div class="title">ToolPreProc.h</div></div>
</div><!--header-->
<div class="contents">
<a href="a00236.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="preprocessor">#if !defined(__ACA_ToolPreProc_HEADER_INCLUDED__)</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span><span class="preprocessor">#define __ACA_ToolPreProc_HEADER_INCLUDED__</span></div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span> </div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span><span class="preprocessor">#include &lt;cassert&gt;</span></div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span> </div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span><span class="preprocessor">#include &quot;<a class="code" href="a00239.xhtml">AudioFileIf.h</a>&quot;</span></div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span> </div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span><span class="preprocessor">#include &quot;<a class="code" href="a00143.xhtml">Matrix.h</a>&quot;</span></div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span><span class="preprocessor">#include &quot;<a class="code" href="a00155.xhtml">Vector.h</a>&quot;</span></div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span><span class="comment"></span> </div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span><span class="comment">/*! \brief class with static utility functions for pre-processing</span></div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span><span class="comment">*/</span></div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno"><a class="line" href="a00602.xhtml">   13</a></span><span class="keyword">class </span><a class="code hl_class" href="a00602.xhtml">CPreProc</a></div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span>{</div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span><span class="keyword">public</span>:<span class="comment"></span></div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span><span class="comment">    /*! downmixes multichannel audio (can be inplace</span></div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span><span class="comment">    */</span></div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno"><a class="line" href="a00602.xhtml#aad7f6eaf40285ca192d27a7420aff724">   18</a></span>    <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code hl_function" href="a00602.xhtml#aad7f6eaf40285ca192d27a7420aff724">downmix</a>(<span class="keywordtype">float</span> *pfOut, <span class="keyword">const</span> <span class="keywordtype">float</span> *<span class="keyword">const</span> *<span class="keyword">const</span> ppfIn, <span class="keywordtype">int</span> iNumChannels, <span class="keywordtype">long</span> <span class="keywordtype">long</span> iNumSamples)</div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span>    {</div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span>        <span class="comment">// sanity checks</span></div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span>        assert(pfOut);</div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span>        assert(ppfIn);</div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span>        assert(ppfIn[0]);</div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span>        assert(iNumChannels &gt; 0);</div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span>        assert(iNumSamples &gt; 0);</div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span> </div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span>        <span class="comment">// copy in case of not inplace processing</span></div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span>        <span class="keywordflow">if</span> (pfOut != ppfIn[0])</div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span>            <a class="code hl_function" href="a00502.xhtml#ad7c5cba73e439adac77778f61c9418f0">CVector::copy</a>(pfOut, ppfIn[0], iNumSamples);</div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span> </div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span>        <span class="comment">// downmix</span></div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span>        <span class="keywordflow">for</span> (<span class="keyword">auto</span> c = 1; c &lt; iNumChannels; c++)</div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span>            <a class="code hl_function" href="a00502.xhtml#a3a052b83e62e5c5cc44829c64ffe42eb">CVector::add_I</a>(pfOut, ppfIn[c], iNumSamples);</div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span>        <a class="code hl_function" href="a00502.xhtml#a9811f50434dd058d201290b2dc98bfcd">CVector::mulC_I</a>(pfOut, 1.F / iNumChannels, iNumSamples);</div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span> </div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span>        <span class="keywordflow">return</span>;</div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span>    }</div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span>};</div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span> </div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span><span class="comment"></span> </div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span><span class="comment">/*! \brief class for audio normalization offering three options</span></div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span><span class="comment">* 1. normalize an audio file during blockwise reading with normalizeBlock (requires instance with audio file)</span></div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span><span class="comment">* 2. normalize an audio vector with blockwise reading with normalizeBlock (requires instance with buffer)</span></div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span><span class="comment">* 3. normalize an entire vector at once with normalizeSignal (static function does not require instance)</span></div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span><span class="comment">*/</span></div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno"><a class="line" href="a00606.xhtml">   46</a></span><span class="keyword">class </span><a class="code hl_class" href="a00606.xhtml">CNormalizeAudio</a></div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span>{</div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno"><a class="line" href="a00606.xhtml#a0f2e96a9c1a1ab0b85e1410b00f0aa8e">   49</a></span>    <span class="keyword">explicit</span> <a class="code hl_function" href="a00606.xhtml#a0f2e96a9c1a1ab0b85e1410b00f0aa8e">CNormalizeAudio</a>(<a class="code hl_class" href="a00442.xhtml">CAudioFileIf</a> *pCAudioFile) :</div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span>        <a class="code hl_variable" href="a00606.xhtml#a34d6ccbfca0389641039b4eab35b32c4">m_fScaleFactor</a>(1.F)</div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span>    {</div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span>        assert(pCAudioFile);</div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span> </div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span>        <a class="code hl_struct" href="a00446.xhtml">CAudioFileIf::FileSpec_t</a> stFileSpec;</div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span>        pCAudioFile-&gt;<a class="code hl_function" href="a00442.xhtml#a7ddbbf5f828e61db7fd75dbf47a33832">getFileSpec</a>(stFileSpec);</div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno">   56</span> </div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span>        <span class="keyword">const</span> <span class="keywordtype">int</span> iBlockLength = 4096;</div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span>        <span class="keywordtype">float</span> fGlobalMax = 0.F;</div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span>        <span class="keywordtype">long</span> <span class="keywordtype">long</span> iCurrPos = 0;</div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span>        <span class="keywordtype">float</span> **ppfAudioData = 0;</div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span> </div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span>        <span class="comment">// alloc read buffer</span></div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span>        <a class="code hl_function" href="a00486.xhtml#a6501b78d76c912d49eee88c8f7242923">CMatrix::alloc</a>(ppfAudioData, stFileSpec.<a class="code hl_variable" href="a00446.xhtml#a6bde1a697754401008208afbde6f368e">iNumChannels</a>, iBlockLength);</div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno">   64</span> </div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span>        <span class="comment">// store current file position for resetting later</span></div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span>        pCAudioFile-&gt;<a class="code hl_function" href="a00442.xhtml#a498e98b28fe76b712ef266faabce1b51">getPosition</a>(iCurrPos);</div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno">   67</span> </div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span>        pCAudioFile-&gt;<a class="code hl_function" href="a00442.xhtml#a7ddbbf5f828e61db7fd75dbf47a33832">getFileSpec</a>(stFileSpec);</div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span> </div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno">   70</span>        <span class="comment">// </span></div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span>        pCAudioFile-&gt;<a class="code hl_function" href="a00442.xhtml#a6f8c0aace3c8825c11a4ef106bc53ce1">setPosition</a>(0.);</div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span>        <span class="keywordflow">while</span> (!pCAudioFile-&gt;<a class="code hl_function" href="a00442.xhtml#a02a1c69fa0fc5b9aa8cb275315697be4">isEof</a>())</div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span>        {</div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span>            <span class="comment">// set block length variable</span></div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span>            <span class="keywordtype">long</span> <span class="keywordtype">long</span> iNumSamples = iBlockLength;</div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span>            <span class="keywordtype">float</span> fMax = 0;</div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span> </div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span>            <span class="comment">// read data (iNumSamples might be updated!)</span></div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span>            pCAudioFile-&gt;<a class="code hl_function" href="a00442.xhtml#ad86676f86c5a0c1fb23617b5e00014c4">readData</a>(ppfAudioData, iNumSamples);</div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span> </div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span>            <span class="comment">//downmix if multichannel</span></div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno">   82</span>            <a class="code hl_function" href="a00602.xhtml#aad7f6eaf40285ca192d27a7420aff724">CPreProc::downmix</a>(ppfAudioData[0], ppfAudioData, stFileSpec.<a class="code hl_variable" href="a00446.xhtml#a6bde1a697754401008208afbde6f368e">iNumChannels</a>, iNumSamples);</div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span> </div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span>            <span class="comment">// find max</span></div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span>            fMax = <a class="code hl_function" href="a00502.xhtml#a9f5be871090bc5a64a7732cebfb4f8ec">CVector::getMax</a>(ppfAudioData[0], iNumSamples, <span class="keyword">true</span>);</div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno">   86</span>            <span class="keywordflow">if</span> (fMax &gt; fGlobalMax)</div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span>                fGlobalMax = fMax;</div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span>        }</div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span>        <span class="keywordflow">if</span> (fGlobalMax &gt; 0)</div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span>            <a class="code hl_variable" href="a00606.xhtml#a34d6ccbfca0389641039b4eab35b32c4">m_fScaleFactor</a> = 1.F / fGlobalMax;</div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span> </div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span>        <span class="comment">// reset file read position</span></div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno">   93</span>        pCAudioFile-&gt;<a class="code hl_function" href="a00442.xhtml#a6f8c0aace3c8825c11a4ef106bc53ce1">setPosition</a>(iCurrPos);</div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span> </div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span>        <span class="comment">//free internal memory</span></div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span>        <a class="code hl_function" href="a00486.xhtml#a591097c6b1935c4d6273b3445f8f552b">CMatrix::free</a>(ppfAudioData, stFileSpec.<a class="code hl_variable" href="a00446.xhtml#a6bde1a697754401008208afbde6f368e">iNumChannels</a>);</div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno">   97</span>    };</div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno">   98</span> </div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno"><a class="line" href="a00606.xhtml#ae3b8b30f591e731707afa5cfc76a03bc">   99</a></span>    <a class="code hl_function" href="a00606.xhtml#ae3b8b30f591e731707afa5cfc76a03bc">CNormalizeAudio</a>(<span class="keyword">const</span> <span class="keywordtype">float</span> *pfAudioBuff, <span class="keywordtype">long</span> <span class="keywordtype">long</span> iAudioLength) :</div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span>        <a class="code hl_variable" href="a00606.xhtml#a34d6ccbfca0389641039b4eab35b32c4">m_fScaleFactor</a>(1.F)</div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno">  101</span>    {</div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno">  102</span>        assert(pfAudioBuff);</div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno">  103</span>        assert(iAudioLength &gt; 0);</div>
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno">  104</span> </div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno">  105</span>        <span class="keywordtype">float</span> fGlobalMax = <a class="code hl_function" href="a00502.xhtml#a9f5be871090bc5a64a7732cebfb4f8ec">CVector::getMax</a>(pfAudioBuff, iAudioLength, <span class="keyword">true</span>);</div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno">  106</span>        <span class="keywordflow">if</span> (fGlobalMax &gt; 0)</div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span>            <a class="code hl_variable" href="a00606.xhtml#a34d6ccbfca0389641039b4eab35b32c4">m_fScaleFactor</a> = 1.F / fGlobalMax;</div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno">  108</span>    };</div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span> </div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno"><a class="line" href="a00606.xhtml#a83e53e0b1e4883b8733e8bad48f565e5">  110</a></span>    <span class="keyword">virtual</span> <a class="code hl_function" href="a00606.xhtml#a83e53e0b1e4883b8733e8bad48f565e5">~CNormalizeAudio</a>() {};</div>
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno">  111</span><span class="comment"></span> </div>
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno">  112</span><span class="comment">    /*! performs the normalization on a buffer after previous file parsing to get the maximum</span></div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno">  113</span><span class="comment">    \param pfAudioBlock audio data, to be over-written</span></div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span><span class="comment">    \param  iNumSamples legnth of pfAudio</span></div>
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno">  115</span><span class="comment">    */</span></div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno"><a class="line" href="a00606.xhtml#aa8a561b4133585586c5b595116a9217f">  116</a></span>    <span class="keywordtype">void</span> <a class="code hl_function" href="a00606.xhtml#aa8a561b4133585586c5b595116a9217f">normalizeBlock</a>(<span class="keywordtype">float</span> *pfAudioBlock, <span class="keywordtype">long</span> <span class="keywordtype">long</span> iNumSamples)</div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno">  117</span>    {</div>
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno">  118</span>        assert(pfAudioBlock);</div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno">  119</span>        assert(iNumSamples &gt; 0);</div>
<div class="line"><a id="l00120" name="l00120"></a><span class="lineno">  120</span> </div>
<div class="line"><a id="l00121" name="l00121"></a><span class="lineno">  121</span>        <a class="code hl_function" href="a00502.xhtml#a9811f50434dd058d201290b2dc98bfcd">CVector::mulC_I</a>(pfAudioBlock, <a class="code hl_variable" href="a00606.xhtml#a34d6ccbfca0389641039b4eab35b32c4">m_fScaleFactor</a>, iNumSamples);</div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno">  122</span>    };</div>
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno">  123</span><span class="comment"></span> </div>
<div class="line"><a id="l00124" name="l00124"></a><span class="lineno">  124</span><span class="comment">    /*! performs the normalization inplace on a buffer</span></div>
<div class="line"><a id="l00125" name="l00125"></a><span class="lineno">  125</span><span class="comment">    \param pfAudio audio data, to be over-written</span></div>
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno">  126</span><span class="comment">    \param  iNumSamples legnth of pfAudio</span></div>
<div class="line"><a id="l00127" name="l00127"></a><span class="lineno">  127</span><span class="comment">    */</span></div>
<div class="line"><a id="l00128" name="l00128"></a><span class="lineno"><a class="line" href="a00606.xhtml#a9a0dbb8f97c757a13062370113d661c4">  128</a></span>    <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code hl_function" href="a00606.xhtml#a9a0dbb8f97c757a13062370113d661c4">normalizeSignal</a>(<span class="keywordtype">float</span> *pfAudio, <span class="keywordtype">long</span> <span class="keywordtype">long</span> iNumSamples)</div>
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno">  129</span>    {</div>
<div class="line"><a id="l00130" name="l00130"></a><span class="lineno">  130</span>        assert(pfAudio);</div>
<div class="line"><a id="l00131" name="l00131"></a><span class="lineno">  131</span>        assert(iNumSamples &gt; 0);</div>
<div class="line"><a id="l00132" name="l00132"></a><span class="lineno">  132</span> </div>
<div class="line"><a id="l00133" name="l00133"></a><span class="lineno">  133</span>        <span class="keywordtype">float</span> fMax = <a class="code hl_function" href="a00502.xhtml#a9f5be871090bc5a64a7732cebfb4f8ec">CVector::getMax</a>(pfAudio, iNumSamples, <span class="keyword">true</span>);</div>
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno">  134</span> </div>
<div class="line"><a id="l00135" name="l00135"></a><span class="lineno">  135</span>        <span class="keywordflow">if</span> (fMax &gt; 0)</div>
<div class="line"><a id="l00136" name="l00136"></a><span class="lineno">  136</span>            <a class="code hl_function" href="a00502.xhtml#a9811f50434dd058d201290b2dc98bfcd">CVector::mulC_I</a>(pfAudio, 1.F / fMax, iNumSamples);</div>
<div class="line"><a id="l00137" name="l00137"></a><span class="lineno">  137</span> </div>
<div class="line"><a id="l00138" name="l00138"></a><span class="lineno">  138</span>        <span class="keywordflow">return</span>;</div>
<div class="line"><a id="l00139" name="l00139"></a><span class="lineno">  139</span>    }</div>
<div class="line"><a id="l00140" name="l00140"></a><span class="lineno">  140</span><span class="keyword">private</span>:</div>
<div class="line"><a id="l00141" name="l00141"></a><span class="lineno"><a class="line" href="a00606.xhtml#a9a1dda606c9e5ed2671f9b8f5ff67f36">  141</a></span>    <a class="code hl_function" href="a00606.xhtml#a9a1dda606c9e5ed2671f9b8f5ff67f36">CNormalizeAudio</a>();</div>
<div class="line"><a id="l00142" name="l00142"></a><span class="lineno"><a class="line" href="a00606.xhtml#aaf6489c5dbf137788c7b2cdd8712699a">  142</a></span>    <a class="code hl_function" href="a00606.xhtml#aaf6489c5dbf137788c7b2cdd8712699a">CNormalizeAudio</a>(<span class="keyword">const</span> <a class="code hl_class" href="a00606.xhtml">CNormalizeAudio</a> &amp;that);</div>
<div class="line"><a id="l00143" name="l00143"></a><span class="lineno"><a class="line" href="a00606.xhtml#ac6e402e21d79f8b31104bcf89027e380">  143</a></span>    <a class="code hl_class" href="a00606.xhtml">CNormalizeAudio</a> &amp;<a class="code hl_function" href="a00606.xhtml#ac6e402e21d79f8b31104bcf89027e380">operator=</a>(<span class="keyword">const</span> <a class="code hl_class" href="a00606.xhtml">CNormalizeAudio</a> &amp;c);</div>
<div class="line"><a id="l00144" name="l00144"></a><span class="lineno">  144</span> </div>
<div class="line"><a id="l00145" name="l00145"></a><span class="lineno"><a class="line" href="a00606.xhtml#a34d6ccbfca0389641039b4eab35b32c4">  145</a></span>    <span class="keywordtype">float</span> <a class="code hl_variable" href="a00606.xhtml#a34d6ccbfca0389641039b4eab35b32c4">m_fScaleFactor</a>; <span class="comment">//!&lt; factor to normalize</span></div>
<div class="line"><a id="l00146" name="l00146"></a><span class="lineno">  146</span>};</div>
<div class="line"><a id="l00147" name="l00147"></a><span class="lineno">  147</span> </div>
<div class="line"><a id="l00148" name="l00148"></a><span class="lineno">  148</span><span class="preprocessor">#endif </span><span class="comment">// __ACA_ToolPreProc_HEADER_INCLUDED__</span></div>
<div class="ttc" id="aa00143_xhtml"><div class="ttname"><a href="a00143.xhtml">Matrix.h</a></div></div>
<div class="ttc" id="aa00155_xhtml"><div class="ttname"><a href="a00155.xhtml">Vector.h</a></div></div>
<div class="ttc" id="aa00239_xhtml"><div class="ttname"><a href="a00239.xhtml">AudioFileIf.h</a></div></div>
<div class="ttc" id="aa00442_xhtml"><div class="ttname"><a href="a00442.xhtml">CAudioFileIf</a></div><div class="ttdoc">open, read, and write audio files</div><div class="ttdef"><b>Definition:</b> <a href="a00239_source.xhtml#l00011">AudioFileIf.h:12</a></div></div>
<div class="ttc" id="aa00442_xhtml_a02a1c69fa0fc5b9aa8cb275315697be4"><div class="ttname"><a href="a00442.xhtml#a02a1c69fa0fc5b9aa8cb275315697be4">CAudioFileIf::isEof</a></div><div class="ttdeci">virtual bool isEof()=0</div></div>
<div class="ttc" id="aa00442_xhtml_a498e98b28fe76b712ef266faabce1b51"><div class="ttname"><a href="a00442.xhtml#a498e98b28fe76b712ef266faabce1b51">CAudioFileIf::getPosition</a></div><div class="ttdeci">Error_t getPosition(long long &amp;iFrame)</div><div class="ttdef"><b>Definition:</b> <a href="a00008_source.xhtml#l00206">AudioFileIf.cpp:206</a></div></div>
<div class="ttc" id="aa00442_xhtml_a6f8c0aace3c8825c11a4ef106bc53ce1"><div class="ttname"><a href="a00442.xhtml#a6f8c0aace3c8825c11a4ef106bc53ce1">CAudioFileIf::setPosition</a></div><div class="ttdeci">virtual Error_t setPosition(long long iFrame=0)</div><div class="ttdef"><b>Definition:</b> <a href="a00008_source.xhtml#l00165">AudioFileIf.cpp:165</a></div></div>
<div class="ttc" id="aa00442_xhtml_a7ddbbf5f828e61db7fd75dbf47a33832"><div class="ttname"><a href="a00442.xhtml#a7ddbbf5f828e61db7fd75dbf47a33832">CAudioFileIf::getFileSpec</a></div><div class="ttdeci">Error_t getFileSpec(FileSpec_t &amp;sFileSpec)</div><div class="ttdef"><b>Definition:</b> <a href="a00008_source.xhtml#l00152">AudioFileIf.cpp:152</a></div></div>
<div class="ttc" id="aa00442_xhtml_ad86676f86c5a0c1fb23617b5e00014c4"><div class="ttname"><a href="a00442.xhtml#ad86676f86c5a0c1fb23617b5e00014c4">CAudioFileIf::readData</a></div><div class="ttdeci">virtual Error_t readData(float **ppfAudioData, long long int &amp;iNumFrames)</div><div class="ttdef"><b>Definition:</b> <a href="a00008_source.xhtml#l00097">AudioFileIf.cpp:97</a></div></div>
<div class="ttc" id="aa00446_xhtml"><div class="ttname"><a href="a00446.xhtml">CAudioFileIf::FileSpec_t</a></div><div class="ttdoc">structure containing basic data specs of the file</div><div class="ttdef"><b>Definition:</b> <a href="a00239_source.xhtml#l00040">AudioFileIf.h:41</a></div></div>
<div class="ttc" id="aa00446_xhtml_a6bde1a697754401008208afbde6f368e"><div class="ttname"><a href="a00446.xhtml#a6bde1a697754401008208afbde6f368e">CAudioFileIf::FileSpec_t::iNumChannels</a></div><div class="ttdeci">int iNumChannels</div><div class="ttdoc">number of audio channels</div><div class="ttdef"><b>Definition:</b> <a href="a00239_source.xhtml#l00044">AudioFileIf.h:44</a></div></div>
<div class="ttc" id="aa00486_xhtml_a591097c6b1935c4d6273b3445f8f552b"><div class="ttname"><a href="a00486.xhtml#a591097c6b1935c4d6273b3445f8f552b">CMatrix::free</a></div><div class="ttdeci">static void free(T **&amp;pptMat, int iNumRows)</div><div class="ttdef"><b>Definition:</b> <a href="a00143_source.xhtml#l00058">Matrix.h:58</a></div></div>
<div class="ttc" id="aa00486_xhtml_a6501b78d76c912d49eee88c8f7242923"><div class="ttname"><a href="a00486.xhtml#a6501b78d76c912d49eee88c8f7242923">CMatrix::alloc</a></div><div class="ttdeci">static void alloc(T **&amp;pptMat, int iNumRows, int iNumCols)</div><div class="ttdef"><b>Definition:</b> <a href="a00143_source.xhtml#l00023">Matrix.h:23</a></div></div>
<div class="ttc" id="aa00502_xhtml_a3a052b83e62e5c5cc44829c64ffe42eb"><div class="ttname"><a href="a00502.xhtml#a3a052b83e62e5c5cc44829c64ffe42eb">CVector::add_I</a></div><div class="ttdeci">static void add_I(T *ptSrcDest, const T *ptSrc, long long int iLength)</div><div class="ttdef"><b>Definition:</b> <a href="a00155_source.xhtml#l00147">Vector.h:147</a></div></div>
<div class="ttc" id="aa00502_xhtml_a9811f50434dd058d201290b2dc98bfcd"><div class="ttname"><a href="a00502.xhtml#a9811f50434dd058d201290b2dc98bfcd">CVector::mulC_I</a></div><div class="ttdeci">static void mulC_I(T *ptSrcDest, T fScale, long long int iLength)</div><div class="ttdef"><b>Definition:</b> <a href="a00155_source.xhtml#l00214">Vector.h:214</a></div></div>
<div class="ttc" id="aa00502_xhtml_a9f5be871090bc5a64a7732cebfb4f8ec"><div class="ttname"><a href="a00502.xhtml#a9f5be871090bc5a64a7732cebfb4f8ec">CVector::getMax</a></div><div class="ttdeci">static T getMax(const T *ptSrc, long long int iLength, bool bAbs=false)</div><div class="ttdef"><b>Definition:</b> <a href="a00155_source.xhtml#l00444">Vector.h:444</a></div></div>
<div class="ttc" id="aa00502_xhtml_ad7c5cba73e439adac77778f61c9418f0"><div class="ttname"><a href="a00502.xhtml#ad7c5cba73e439adac77778f61c9418f0">CVector::copy</a></div><div class="ttdeci">static void copy(T *ptDest, const T *ptSrc, long long int iLength)</div><div class="ttdef"><b>Definition:</b> <a href="a00155_source.xhtml#l00041">Vector.h:41</a></div></div>
<div class="ttc" id="aa00602_xhtml"><div class="ttname"><a href="a00602.xhtml">CPreProc</a></div><div class="ttdoc">class with static utility functions for pre-processing</div><div class="ttdef"><b>Definition:</b> <a href="a00236_source.xhtml#l00013">ToolPreProc.h:14</a></div></div>
<div class="ttc" id="aa00602_xhtml_aad7f6eaf40285ca192d27a7420aff724"><div class="ttname"><a href="a00602.xhtml#aad7f6eaf40285ca192d27a7420aff724">CPreProc::downmix</a></div><div class="ttdeci">static void downmix(float *pfOut, const float *const *const ppfIn, int iNumChannels, long long iNumSamples)</div><div class="ttdef"><b>Definition:</b> <a href="a00236_source.xhtml#l00018">ToolPreProc.h:18</a></div></div>
<div class="ttc" id="aa00606_xhtml"><div class="ttname"><a href="a00606.xhtml">CNormalizeAudio</a></div><div class="ttdoc">class for audio normalization offering three options</div><div class="ttdef"><b>Definition:</b> <a href="a00236_source.xhtml#l00046">ToolPreProc.h:47</a></div></div>
<div class="ttc" id="aa00606_xhtml_a0f2e96a9c1a1ab0b85e1410b00f0aa8e"><div class="ttname"><a href="a00606.xhtml#a0f2e96a9c1a1ab0b85e1410b00f0aa8e">CNormalizeAudio::CNormalizeAudio</a></div><div class="ttdeci">CNormalizeAudio(CAudioFileIf *pCAudioFile)</div><div class="ttdef"><b>Definition:</b> <a href="a00236_source.xhtml#l00049">ToolPreProc.h:49</a></div></div>
<div class="ttc" id="aa00606_xhtml_a34d6ccbfca0389641039b4eab35b32c4"><div class="ttname"><a href="a00606.xhtml#a34d6ccbfca0389641039b4eab35b32c4">CNormalizeAudio::m_fScaleFactor</a></div><div class="ttdeci">float m_fScaleFactor</div><div class="ttdoc">factor to normalize</div><div class="ttdef"><b>Definition:</b> <a href="a00236_source.xhtml#l00145">ToolPreProc.h:145</a></div></div>
<div class="ttc" id="aa00606_xhtml_a83e53e0b1e4883b8733e8bad48f565e5"><div class="ttname"><a href="a00606.xhtml#a83e53e0b1e4883b8733e8bad48f565e5">CNormalizeAudio::~CNormalizeAudio</a></div><div class="ttdeci">virtual ~CNormalizeAudio()</div><div class="ttdef"><b>Definition:</b> <a href="a00236_source.xhtml#l00110">ToolPreProc.h:110</a></div></div>
<div class="ttc" id="aa00606_xhtml_a9a0dbb8f97c757a13062370113d661c4"><div class="ttname"><a href="a00606.xhtml#a9a0dbb8f97c757a13062370113d661c4">CNormalizeAudio::normalizeSignal</a></div><div class="ttdeci">static void normalizeSignal(float *pfAudio, long long iNumSamples)</div><div class="ttdef"><b>Definition:</b> <a href="a00236_source.xhtml#l00128">ToolPreProc.h:128</a></div></div>
<div class="ttc" id="aa00606_xhtml_a9a1dda606c9e5ed2671f9b8f5ff67f36"><div class="ttname"><a href="a00606.xhtml#a9a1dda606c9e5ed2671f9b8f5ff67f36">CNormalizeAudio::CNormalizeAudio</a></div><div class="ttdeci">CNormalizeAudio()</div></div>
<div class="ttc" id="aa00606_xhtml_aa8a561b4133585586c5b595116a9217f"><div class="ttname"><a href="a00606.xhtml#aa8a561b4133585586c5b595116a9217f">CNormalizeAudio::normalizeBlock</a></div><div class="ttdeci">void normalizeBlock(float *pfAudioBlock, long long iNumSamples)</div><div class="ttdef"><b>Definition:</b> <a href="a00236_source.xhtml#l00116">ToolPreProc.h:116</a></div></div>
<div class="ttc" id="aa00606_xhtml_aaf6489c5dbf137788c7b2cdd8712699a"><div class="ttname"><a href="a00606.xhtml#aaf6489c5dbf137788c7b2cdd8712699a">CNormalizeAudio::CNormalizeAudio</a></div><div class="ttdeci">CNormalizeAudio(const CNormalizeAudio &amp;that)</div></div>
<div class="ttc" id="aa00606_xhtml_ac6e402e21d79f8b31104bcf89027e380"><div class="ttname"><a href="a00606.xhtml#ac6e402e21d79f8b31104bcf89027e380">CNormalizeAudio::operator=</a></div><div class="ttdeci">CNormalizeAudio &amp; operator=(const CNormalizeAudio &amp;c)</div></div>
<div class="ttc" id="aa00606_xhtml_ae3b8b30f591e731707afa5cfc76a03bc"><div class="ttname"><a href="a00606.xhtml#ae3b8b30f591e731707afa5cfc76a03bc">CNormalizeAudio::CNormalizeAudio</a></div><div class="ttdeci">CNormalizeAudio(const float *pfAudioBuff, long long iAudioLength)</div><div class="ttdef"><b>Definition:</b> <a href="a00236_source.xhtml#l00099">ToolPreProc.h:99</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_bfccd401955b95cf8c75461437045ac0.xhtml">inc</a></li><li class="navelem"><a class="el" href="a00236.xhtml">ToolPreProc.h</a></li>
    <li class="footer">Generated on Sun Jun 19 2022 14:39:00 for ACA by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.4 </li>
  </ul>
</div>
</body>
</html>
