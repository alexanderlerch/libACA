<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.4"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ACA: CFeatureFromBlockIf Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">ACA<span id="projectnumber">&#160;0.2.6</span>
   </div>
   <div id="projectbrief">Example Code for Audio Content Analysis</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.4 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search",'Search','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('a00457.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pub-static-attribs">Static Public Attributes</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="a00454.xhtml">List of all members</a>  </div>
  <div class="headertitle"><div class="title">CFeatureFromBlockIf Class Reference</div></div>
</div><!--header-->
<div class="contents">

<p>class for computation of a feature from a block of data (e.g., time or magnitude spectrum)  
 <a href="a00457.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="a00128_source.xhtml">FeatureFromBlock.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for CFeatureFromBlockIf:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00456.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<div class="dynheader">
Collaboration diagram for CFeatureFromBlockIf:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00455.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a8bf822f58aa66fc4787c5528352575c0"><td class="memItemLeft" align="right" valign="top">virtual int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00457.xhtml#a8bf822f58aa66fc4787c5528352575c0">getFeatureDimensions</a> () const</td></tr>
<tr class="separator:a8bf822f58aa66fc4787c5528352575c0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab6ab50f7ebebbabec7e1610bc04a3328"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00453.xhtml#a47ca14941c604beb42d60164b3e5e6b3">CFeatureIf::Feature_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00457.xhtml#ab6ab50f7ebebbabec7e1610bc04a3328">getFeatureIdx</a> () const</td></tr>
<tr class="separator:ab6ab50f7ebebbabec7e1610bc04a3328"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aefd1cebf296212209ba41f38939e07bf"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a00116.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00457.xhtml#aefd1cebf296212209ba41f38939e07bf">compFeature</a> (float *pfFeature, const float *pfInput)</td></tr>
<tr class="separator:aefd1cebf296212209ba41f38939e07bf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a41daabd1afa9c2307c64b431fcf8da62"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a00239.xhtml#abb452686968e48b67397da5f97445f5b">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00457.xhtml#a41daabd1afa9c2307c64b431fcf8da62">hasAdditionalParam</a> () const</td></tr>
<tr class="separator:a41daabd1afa9c2307c64b431fcf8da62"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7f3f62f3787b0ddc4c8938f5d54170af"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a00116.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00457.xhtml#a7f3f62f3787b0ddc4c8938f5d54170af">setAdditionalParam</a> (float fParamValue)</td></tr>
<tr class="separator:a7f3f62f3787b0ddc4c8938f5d54170af"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-static-methods" name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a6d3ca4f66582ae352e3addfd7f99a752"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="a00116.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00457.xhtml#a6d3ca4f66582ae352e3addfd7f99a752">create</a> (<a class="el" href="a00457.xhtml">CFeatureFromBlockIf</a> *&amp;pCInstance, <a class="el" href="a00453.xhtml#a47ca14941c604beb42d60164b3e5e6b3">CFeatureIf::Feature_t</a> eFeatureIdx, int iDataLength, float fSampleRate=1.F)</td></tr>
<tr class="separator:a6d3ca4f66582ae352e3addfd7f99a752"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a300e7b2134b2bd0faaa24cfecbd9cb51"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="a00116.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00457.xhtml#a300e7b2134b2bd0faaa24cfecbd9cb51">destroy</a> (<a class="el" href="a00457.xhtml">CFeatureFromBlockIf</a> *&amp;pCInstance)</td></tr>
<tr class="separator:a300e7b2134b2bd0faaa24cfecbd9cb51"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a880a58f05522dfd1f0f16f26c34703db"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00457.xhtml#a880a58f05522dfd1f0f16f26c34703db">compFeatureSpectralCentroid</a> (const float *pfMagSpec, int iDataLength, float fSampleRate=1.F)</td></tr>
<tr class="separator:a880a58f05522dfd1f0f16f26c34703db"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a15df133306497e4f85929692354f378a"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00457.xhtml#a15df133306497e4f85929692354f378a">compFeatureSpectralCrestFactor</a> (const float *pfMagSpec, int iDataLength, float fSampleRate=1.F)</td></tr>
<tr class="separator:a15df133306497e4f85929692354f378a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9e03b3181d7ff9d8a9b0eaedabff9899"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00457.xhtml#a9e03b3181d7ff9d8a9b0eaedabff9899">compFeatureSpectralDecrease</a> (const float *pfMagSpec, int iDataLength, float fSampleRate=1.F)</td></tr>
<tr class="separator:a9e03b3181d7ff9d8a9b0eaedabff9899"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a361ef81afe12623645546fbbeab30b14"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00457.xhtml#a361ef81afe12623645546fbbeab30b14">compFeatureSpectralFlatness</a> (const float *pfMagSpec, int iDataLength, float fSampleRate=1.F)</td></tr>
<tr class="separator:a361ef81afe12623645546fbbeab30b14"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a42b11faa0f65881702ad7dcc1398ec5f"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00457.xhtml#a42b11faa0f65881702ad7dcc1398ec5f">compFeatureSpectralFlux</a> (const float *pfMagSpec, const float *pfPrevSpec, int iDataLength, float fSampleRate=1.F)</td></tr>
<tr class="separator:a42b11faa0f65881702ad7dcc1398ec5f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aff5ebe0708311c49ba85c03c4546b6cf"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00457.xhtml#aff5ebe0708311c49ba85c03c4546b6cf">compFeatureSpectralKurtosis</a> (const float *pfMagSpec, int iDataLength, float fSampleRate=1.F)</td></tr>
<tr class="separator:aff5ebe0708311c49ba85c03c4546b6cf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a28b9430a480ce697a7dbd73527057ac6"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00457.xhtml#a28b9430a480ce697a7dbd73527057ac6">compFeatureSpectralRolloff</a> (const float *pfMagSpec, int iDataLength, float fSampleRate=1.F, float fKappa=.85F)</td></tr>
<tr class="separator:a28b9430a480ce697a7dbd73527057ac6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af130d46bb6a964262acb138fc7b7b9fd"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00457.xhtml#af130d46bb6a964262acb138fc7b7b9fd">compFeatureSpectralSkewness</a> (const float *pfMagSpec, int iDataLength, float fSampleRate=1.F)</td></tr>
<tr class="separator:af130d46bb6a964262acb138fc7b7b9fd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8c8ded721d053ed4f34565a1392993fc"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00457.xhtml#a8c8ded721d053ed4f34565a1392993fc">compFeatureSpectralSlope</a> (const float *pfMagSpec, int iDataLength, float fSampleRate=1.F)</td></tr>
<tr class="separator:a8c8ded721d053ed4f34565a1392993fc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa97614c73430e57facec7a88bee49c9f"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00457.xhtml#aa97614c73430e57facec7a88bee49c9f">compFeatureSpectralSpread</a> (const float *pfMagSpec, int iDataLength, float fSampleRate=1.F)</td></tr>
<tr class="separator:aa97614c73430e57facec7a88bee49c9f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abdd05ed6160f4154fd4aae2816939f5e"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00457.xhtml#abdd05ed6160f4154fd4aae2816939f5e">compFeatureSpectralTonalPowerRatio</a> (const float *pfMagSpec, int iDataLength, float fSampleRate=1.F, float fThresh=5e-4)</td></tr>
<tr class="separator:abdd05ed6160f4154fd4aae2816939f5e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a665af5d570876cc41adc56185201cd8c"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00457.xhtml#a665af5d570876cc41adc56185201cd8c">compFeatureTimeAcfCoeff</a> (const float *pfSamples, int iDataLength, float fSampleRate=1.F, int iEta=19)</td></tr>
<tr class="separator:a665af5d570876cc41adc56185201cd8c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8343fab849f52e77639b46e759e7e49d"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00457.xhtml#a8343fab849f52e77639b46e759e7e49d">compFeatureTimePeakEnvelope</a> (const float *pfSamples, int iDataLength, float fSampleRate=1.F)</td></tr>
<tr class="separator:a8343fab849f52e77639b46e759e7e49d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a46500f9eaa49f3860afa5f1fce555415"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00457.xhtml#a46500f9eaa49f3860afa5f1fce555415">compFeatureTimeRms</a> (const float *pfSamples, int iDataLength, float fSampleRate=1.F)</td></tr>
<tr class="separator:a46500f9eaa49f3860afa5f1fce555415"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4eca7f209c771fb5008fa08facffd598"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00457.xhtml#a4eca7f209c771fb5008fa08facffd598">compFeatureTimeStd</a> (const float *pfSamples, int iDataLength, float fSampleRate=1.F)</td></tr>
<tr class="separator:a4eca7f209c771fb5008fa08facffd598"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:add9e6742349500c1323607b2508d311d"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00457.xhtml#add9e6742349500c1323607b2508d311d">compFeatureTimeZeroCrossingRate</a> (const float *pfSamples, int iDataLength, float fSampleRate=1.F)</td></tr>
<tr class="separator:add9e6742349500c1323607b2508d311d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-static-attribs" name="pub-static-attribs"></a>
Static Public Attributes</h2></td></tr>
<tr class="memitem:a23b1d6639637a13587d5529a57f3bf78"><td class="memItemLeft" align="right" valign="top">static const float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00457.xhtml#a23b1d6639637a13587d5529a57f3bf78">m_kfFloatThresh</a> = 1e-30F</td></tr>
<tr class="memdesc:a23b1d6639637a13587d5529a57f3bf78"><td class="mdescLeft">&#160;</td><td class="mdescRight">below this we just assume it's zero  <a href="a00457.xhtml#a23b1d6639637a13587d5529a57f3bf78">More...</a><br /></td></tr>
<tr class="separator:a23b1d6639637a13587d5529a57f3bf78"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pro-methods" name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a483bca508e2817799a3173a6180d245e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00457.xhtml#a483bca508e2817799a3173a6180d245e">CFeatureFromBlockIf</a> ()</td></tr>
<tr class="separator:a483bca508e2817799a3173a6180d245e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a26bc5632321408486bf3fccfa3fbfa1c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00457.xhtml#a26bc5632321408486bf3fccfa3fbfa1c">CFeatureFromBlockIf</a> (<a class="el" href="a00453.xhtml#a47ca14941c604beb42d60164b3e5e6b3">CFeatureIf::Feature_t</a> eFeatureIdx, int iDataLength, float fSampleRate)</td></tr>
<tr class="separator:a26bc5632321408486bf3fccfa3fbfa1c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab3e21cffc4d8fb5851c9564671cad2cd"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00457.xhtml#ab3e21cffc4d8fb5851c9564671cad2cd">~CFeatureFromBlockIf</a> ()</td></tr>
<tr class="separator:ab3e21cffc4d8fb5851c9564671cad2cd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3ca29d1d628143cb11f1c3400f6b23c4"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00457.xhtml#a3ca29d1d628143cb11f1c3400f6b23c4">CFeatureFromBlockIf</a> (const <a class="el" href="a00457.xhtml">CFeatureFromBlockIf</a> &amp;that)</td></tr>
<tr class="separator:a3ca29d1d628143cb11f1c3400f6b23c4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af9650d7b6bb5362a2c4be9154e777089"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00457.xhtml">CFeatureFromBlockIf</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00457.xhtml#af9650d7b6bb5362a2c4be9154e777089">operator=</a> (const <a class="el" href="a00457.xhtml">CFeatureFromBlockIf</a> &amp;c)</td></tr>
<tr class="separator:af9650d7b6bb5362a2c4be9154e777089"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pro-attribs" name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:a3cdaa6a50139576cf1aaa73f4b0d3b6f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00453.xhtml#a47ca14941c604beb42d60164b3e5e6b3">CFeatureIf::Feature_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00457.xhtml#a3cdaa6a50139576cf1aaa73f4b0d3b6f">m_eFeatureIdx</a> = <a class="el" href="a00453.xhtml#a47ca14941c604beb42d60164b3e5e6b3abe9b4914b84bc00da1aacb5f0068545d">CFeatureIf::kNumFeatures</a></td></tr>
<tr class="memdesc:a3cdaa6a50139576cf1aaa73f4b0d3b6f"><td class="mdescLeft">&#160;</td><td class="mdescRight">index of feature to extract  <a href="a00457.xhtml#a3cdaa6a50139576cf1aaa73f4b0d3b6f">More...</a><br /></td></tr>
<tr class="separator:a3cdaa6a50139576cf1aaa73f4b0d3b6f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2fefdb1b1217edd46c2b4e9336fa2aed"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00457.xhtml#a2fefdb1b1217edd46c2b4e9336fa2aed">m_iDataLength</a> = 0</td></tr>
<tr class="memdesc:a2fefdb1b1217edd46c2b4e9336fa2aed"><td class="mdescLeft">&#160;</td><td class="mdescRight">block length  <a href="a00457.xhtml#a2fefdb1b1217edd46c2b4e9336fa2aed">More...</a><br /></td></tr>
<tr class="separator:a2fefdb1b1217edd46c2b4e9336fa2aed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a75ac4ef94667058662a8100bb1c1e1cd"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00457.xhtml#a75ac4ef94667058662a8100bb1c1e1cd">m_fSampleRate</a> = 0</td></tr>
<tr class="memdesc:a75ac4ef94667058662a8100bb1c1e1cd"><td class="mdescLeft">&#160;</td><td class="mdescRight">sample rate  <a href="a00457.xhtml#a75ac4ef94667058662a8100bb1c1e1cd">More...</a><br /></td></tr>
<tr class="separator:a75ac4ef94667058662a8100bb1c1e1cd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a21d3edee07a3b9f4d0af407479591a6c"><td class="memItemLeft" align="right" valign="top">const std::map&lt; <a class="el" href="a00453.xhtml#a47ca14941c604beb42d60164b3e5e6b3">CFeatureIf::Feature_t</a>, std::function&lt; float(const float *, int, float)&gt; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00457.xhtml#a21d3edee07a3b9f4d0af407479591a6c">m_DispatchMap</a></td></tr>
<tr class="separator:a21d3edee07a3b9f4d0af407479591a6c"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p >class for computation of a feature from a block of data (e.g., time or magnitude spectrum) </p>

<p class="definition">Definition at line <a class="el" href="a00128_source.xhtml#l00014">14</a> of file <a class="el" href="a00128_source.xhtml">FeatureFromBlock.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a483bca508e2817799a3173a6180d245e" name="a483bca508e2817799a3173a6180d245e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a483bca508e2817799a3173a6180d245e">&#9670;&nbsp;</a></span>CFeatureFromBlockIf() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">CFeatureFromBlockIf::CFeatureFromBlockIf </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="a00128_source.xhtml#l00088">88</a> of file <a class="el" href="a00128_source.xhtml">FeatureFromBlock.h</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   88</span>{};</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="a00038_source.xhtml#l00950">create()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00457_a483bca508e2817799a3173a6180d245e_icgraph.svg" width="100%" height="454"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="a26bc5632321408486bf3fccfa3fbfa1c" name="a26bc5632321408486bf3fccfa3fbfa1c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a26bc5632321408486bf3fccfa3fbfa1c">&#9670;&nbsp;</a></span>CFeatureFromBlockIf() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">CFeatureFromBlockIf::CFeatureFromBlockIf </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="a00453.xhtml#a47ca14941c604beb42d60164b3e5e6b3">CFeatureIf::Feature_t</a>&#160;</td>
          <td class="paramname"><em>eFeatureIdx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>iDataLength</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fSampleRate</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="a00038_source.xhtml#l00323">323</a> of file <a class="el" href="a00038_source.xhtml">FeatureFromBlock.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  323</span>: <a class="code hl_variable" href="a00457.xhtml#a3cdaa6a50139576cf1aaa73f4b0d3b6f">m_eFeatureIdx</a>(eFeatureIdx), <a class="code hl_variable" href="a00457.xhtml#a2fefdb1b1217edd46c2b4e9336fa2aed">m_iDataLength</a>(iDataLength), <a class="code hl_variable" href="a00457.xhtml#a75ac4ef94667058662a8100bb1c1e1cd">m_fSampleRate</a>(fSampleRate) { assert(iDataLength &gt; 0); }</div>
<div class="ttc" id="aa00457_xhtml_a2fefdb1b1217edd46c2b4e9336fa2aed"><div class="ttname"><a href="a00457.xhtml#a2fefdb1b1217edd46c2b4e9336fa2aed">CFeatureFromBlockIf::m_iDataLength</a></div><div class="ttdeci">int m_iDataLength</div><div class="ttdoc">block length</div><div class="ttdef"><b>Definition:</b> <a href="a00128_source.xhtml#l00096">FeatureFromBlock.h:96</a></div></div>
<div class="ttc" id="aa00457_xhtml_a3cdaa6a50139576cf1aaa73f4b0d3b6f"><div class="ttname"><a href="a00457.xhtml#a3cdaa6a50139576cf1aaa73f4b0d3b6f">CFeatureFromBlockIf::m_eFeatureIdx</a></div><div class="ttdeci">CFeatureIf::Feature_t m_eFeatureIdx</div><div class="ttdoc">index of feature to extract</div><div class="ttdef"><b>Definition:</b> <a href="a00128_source.xhtml#l00094">FeatureFromBlock.h:94</a></div></div>
<div class="ttc" id="aa00457_xhtml_a75ac4ef94667058662a8100bb1c1e1cd"><div class="ttname"><a href="a00457.xhtml#a75ac4ef94667058662a8100bb1c1e1cd">CFeatureFromBlockIf::m_fSampleRate</a></div><div class="ttdeci">float m_fSampleRate</div><div class="ttdoc">sample rate</div><div class="ttdef"><b>Definition:</b> <a href="a00128_source.xhtml#l00098">FeatureFromBlock.h:98</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ab3e21cffc4d8fb5851c9564671cad2cd" name="ab3e21cffc4d8fb5851c9564671cad2cd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab3e21cffc4d8fb5851c9564671cad2cd">&#9670;&nbsp;</a></span>~CFeatureFromBlockIf()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual CFeatureFromBlockIf::~CFeatureFromBlockIf </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="a00128_source.xhtml#l00090">90</a> of file <a class="el" href="a00128_source.xhtml">FeatureFromBlock.h</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   90</span>{};</div>
</div><!-- fragment -->
</div>
</div>
<a id="a3ca29d1d628143cb11f1c3400f6b23c4" name="a3ca29d1d628143cb11f1c3400f6b23c4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3ca29d1d628143cb11f1c3400f6b23c4">&#9670;&nbsp;</a></span>CFeatureFromBlockIf() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">CFeatureFromBlockIf::CFeatureFromBlockIf </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="a00457.xhtml">CFeatureFromBlockIf</a> &amp;&#160;</td>
          <td class="paramname"><em>that</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="aefd1cebf296212209ba41f38939e07bf" name="aefd1cebf296212209ba41f38939e07bf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aefd1cebf296212209ba41f38939e07bf">&#9670;&nbsp;</a></span>compFeature()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00116.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> CFeatureFromBlockIf::compFeature </td>
          <td>(</td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>pfFeature</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float *&#160;</td>
          <td class="paramname"><em>pfInput</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p >performs the FeatureFromBlock computation </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pfFeature</td><td>feature result (user-allocated, to be written, length from <a class="el" href="a00457.xhtml#a8bf822f58aa66fc4787c5528352575c0">CFeatureFromBlockIf::getFeatureDimensions</a>) </td></tr>
    <tr><td class="paramname">pfInput</td><td>input data of length iDataLength </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Error_t </dd></dl>

<p>Reimplemented in <a class="el" href="a00317.xhtml#a7708c61b60debf97d717d637677fc36f">CFeatureSpectralFlux</a>, <a class="el" href="a00321.xhtml#a92ff3ebff9377acf3573f6b4d87a4bcd">CFeatureSpectralMfccs</a>, <a class="el" href="a00325.xhtml#a049a6c2d11108c7d14111790447f5d84">CFeatureSpectralPitchChroma</a>, <a class="el" href="a00329.xhtml#a05fb25d2482c0add358ab03042df55d2">CFeatureSpectralRolloff</a>, <a class="el" href="a00333.xhtml#a082f6b5f0e32c5ea667437398bbfc8df">CFeatureSpectralTonalPowerRatio</a>, <a class="el" href="a00337.xhtml#abc5455e83eba5a49954ae64833d1d084">CFeatureTimeAcfCoeff</a>, <a class="el" href="a00341.xhtml#af20724e23d18c1126e2edf4186cc8005">CFeatureTimeMaxAcf</a>, <a class="el" href="a00345.xhtml#a238861a45b720d2b5a4974ea2dde9bad">CFeatureTimePeakEnvelope</a>, and <a class="el" href="a00349.xhtml#a0d5c1ad84a07183a43397c5666489733">CFeatureTimeRms</a>.</p>

<p class="definition">Definition at line <a class="el" href="a00038_source.xhtml#l01027">1027</a> of file <a class="el" href="a00038_source.xhtml">FeatureFromBlock.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno"> 1028</span>{</div>
<div class="line"><span class="lineno"> 1029</span>    <span class="comment">// default: use one of the static functions</span></div>
<div class="line"><span class="lineno"> 1030</span>    *pfFeature = <a class="code hl_variable" href="a00457.xhtml#a21d3edee07a3b9f4d0af407479591a6c">m_DispatchMap</a>.at(<a class="code hl_variable" href="a00457.xhtml#a3cdaa6a50139576cf1aaa73f4b0d3b6f">m_eFeatureIdx</a>)(pfInput, <a class="code hl_variable" href="a00457.xhtml#a2fefdb1b1217edd46c2b4e9336fa2aed">m_iDataLength</a>, <a class="code hl_variable" href="a00457.xhtml#a75ac4ef94667058662a8100bb1c1e1cd">m_fSampleRate</a>);</div>
<div class="line"><span class="lineno"> 1031</span> </div>
<div class="line"><span class="lineno"> 1032</span>    <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00116.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><span class="lineno"> 1033</span>}</div>
<div class="ttc" id="aa00116_xhtml_a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b"><div class="ttname"><a href="a00116.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a></div><div class="ttdeci">@ kNoError</div></div>
<div class="ttc" id="aa00457_xhtml_a21d3edee07a3b9f4d0af407479591a6c"><div class="ttname"><a href="a00457.xhtml#a21d3edee07a3b9f4d0af407479591a6c">CFeatureFromBlockIf::m_DispatchMap</a></div><div class="ttdeci">const std::map&lt; CFeatureIf::Feature_t, std::function&lt; float(const float *, int, float)&gt; &gt; m_DispatchMap</div><div class="ttdef"><b>Definition:</b> <a href="a00128_source.xhtml#l00101">FeatureFromBlock.h:102</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00116.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">kNoError</a>, <a class="el" href="a00128_source.xhtml#l00102">m_DispatchMap</a>, <a class="el" href="a00128_source.xhtml#l00094">m_eFeatureIdx</a>, <a class="el" href="a00128_source.xhtml#l00098">m_fSampleRate</a>, and <a class="el" href="a00128_source.xhtml#l00096">m_iDataLength</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00056_source.xhtml#l00030">CChordFromBlockIf::compChordProb()</a>, <a class="el" href="a00050_source.xhtml#l00179">CFeatureIf::compFeature1Dim()</a>, and <a class="el" href="a00050_source.xhtml#l00213">CFeatureIf::compFeatureNDim()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00457_aefd1cebf296212209ba41f38939e07bf_icgraph.svg" width="100%" height="416"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="a880a58f05522dfd1f0f16f26c34703db" name="a880a58f05522dfd1f0f16f26c34703db"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a880a58f05522dfd1f0f16f26c34703db">&#9670;&nbsp;</a></span>compFeatureSpectralCentroid()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float CFeatureFromBlockIf::compFeatureSpectralCentroid </td>
          <td>(</td>
          <td class="paramtype">const float *&#160;</td>
          <td class="paramname"><em>pfMagSpec</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>iDataLength</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fSampleRate</em> = <code>1.F</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="a00038_source.xhtml#l00016">16</a> of file <a class="el" href="a00038_source.xhtml">FeatureFromBlock.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   17</span>{</div>
<div class="line"><span class="lineno">   18</span>    assert(pfMagSpec);</div>
<div class="line"><span class="lineno">   19</span>    assert(iDataLength &gt; 0);</div>
<div class="line"><span class="lineno">   20</span>    assert(fSampleRate &gt; 0);</div>
<div class="line"><span class="lineno">   21</span> </div>
<div class="line"><span class="lineno">   22</span>    <span class="keywordtype">float</span> fNorm = 0;</div>
<div class="line"><span class="lineno">   23</span>    <span class="keywordtype">float</span> fvsc = 0;</div>
<div class="line"><span class="lineno">   24</span> </div>
<div class="line"><span class="lineno">   25</span>    <span class="keywordflow">for</span> (<span class="keyword">auto</span> k = 0; k &lt; iDataLength; k++)</div>
<div class="line"><span class="lineno">   26</span>    {</div>
<div class="line"><span class="lineno">   27</span>        fNorm += pfMagSpec[k];</div>
<div class="line"><span class="lineno">   28</span>        fvsc += k * pfMagSpec[k];</div>
<div class="line"><span class="lineno">   29</span>    }</div>
<div class="line"><span class="lineno">   30</span> </div>
<div class="line"><span class="lineno">   31</span>    <span class="keywordflow">if</span> (fNorm &lt; <a class="code hl_variable" href="a00457.xhtml#a23b1d6639637a13587d5529a57f3bf78">m_kfFloatThresh</a>)</div>
<div class="line"><span class="lineno">   32</span>        <span class="keywordflow">return</span> 0;</div>
<div class="line"><span class="lineno">   33</span> </div>
<div class="line"><span class="lineno">   34</span>    <span class="comment">// convert from index to Hz</span></div>
<div class="line"><span class="lineno">   35</span>    <span class="keywordflow">return</span> fvsc * fSampleRate / (2.F * fNorm * (iDataLength - 1));</div>
<div class="line"><span class="lineno">   36</span>}</div>
<div class="ttc" id="aa00457_xhtml_a23b1d6639637a13587d5529a57f3bf78"><div class="ttname"><a href="a00457.xhtml#a23b1d6639637a13587d5529a57f3bf78">CFeatureFromBlockIf::m_kfFloatThresh</a></div><div class="ttdeci">static const float m_kfFloatThresh</div><div class="ttdoc">below this we just assume it's zero</div><div class="ttdef"><b>Definition:</b> <a href="a00128_source.xhtml#l00084">FeatureFromBlock.h:84</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00128_source.xhtml#l00084">m_kfFloatThresh</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00038_source.xhtml#l00130">compFeatureSpectralKurtosis()</a>, <a class="el" href="a00038_source.xhtml#l00185">compFeatureSpectralSkewness()</a>, <a class="el" href="a00038_source.xhtml#l00212">compFeatureSpectralSlope()</a>, and <a class="el" href="a00038_source.xhtml#l00106">compFeatureSpectralSpread()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00457_a880a58f05522dfd1f0f16f26c34703db_icgraph.svg" width="100%" height="427"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="a15df133306497e4f85929692354f378a" name="a15df133306497e4f85929692354f378a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a15df133306497e4f85929692354f378a">&#9670;&nbsp;</a></span>compFeatureSpectralCrestFactor()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float CFeatureFromBlockIf::compFeatureSpectralCrestFactor </td>
          <td>(</td>
          <td class="paramtype">const float *&#160;</td>
          <td class="paramname"><em>pfMagSpec</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>iDataLength</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fSampleRate</em> = <code>1.F</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="a00038_source.xhtml#l00038">38</a> of file <a class="el" href="a00038_source.xhtml">FeatureFromBlock.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   39</span>{</div>
<div class="line"><span class="lineno">   40</span>    assert(pfMagSpec);</div>
<div class="line"><span class="lineno">   41</span>    assert(iDataLength &gt; 0);</div>
<div class="line"><span class="lineno">   42</span> </div>
<div class="line"><span class="lineno">   43</span>    <span class="keywordtype">float</span> fNorm = <a class="code hl_function" href="a00489.xhtml#abdbcc3898121387f3694f74491b7331e">CVector::getSum</a>(pfMagSpec, iDataLength);</div>
<div class="line"><span class="lineno">   44</span> </div>
<div class="line"><span class="lineno">   45</span>    <span class="keywordflow">if</span> (fNorm &lt; <a class="code hl_variable" href="a00457.xhtml#a23b1d6639637a13587d5529a57f3bf78">m_kfFloatThresh</a>)</div>
<div class="line"><span class="lineno">   46</span>        <span class="keywordflow">return</span> 0;</div>
<div class="line"><span class="lineno">   47</span> </div>
<div class="line"><span class="lineno">   48</span>    <span class="keywordflow">return</span> <a class="code hl_function" href="a00489.xhtml#a9f5be871090bc5a64a7732cebfb4f8ec">CVector::getMax</a>(pfMagSpec, iDataLength) / fNorm;</div>
<div class="line"><span class="lineno">   49</span>}</div>
<div class="ttc" id="aa00489_xhtml_a9f5be871090bc5a64a7732cebfb4f8ec"><div class="ttname"><a href="a00489.xhtml#a9f5be871090bc5a64a7732cebfb4f8ec">CVector::getMax</a></div><div class="ttdeci">static T getMax(const T *ptSrc, long long int iLength, bool bAbs=false)</div><div class="ttdef"><b>Definition:</b> <a href="a00152_source.xhtml#l00559">Vector.h:559</a></div></div>
<div class="ttc" id="aa00489_xhtml_abdbcc3898121387f3694f74491b7331e"><div class="ttname"><a href="a00489.xhtml#abdbcc3898121387f3694f74491b7331e">CVector::getSum</a></div><div class="ttdeci">static T getSum(const T *ptSrc, long long int iLength, bool bAbs=false)</div><div class="ttdef"><b>Definition:</b> <a href="a00152_source.xhtml#l00439">Vector.h:439</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00152_source.xhtml#l00559">CVector::getMax()</a>, <a class="el" href="a00152_source.xhtml#l00439">CVector::getSum()</a>, and <a class="el" href="a00128_source.xhtml#l00084">m_kfFloatThresh</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00457_a15df133306497e4f85929692354f378a_cgraph.svg" width="528" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a9e03b3181d7ff9d8a9b0eaedabff9899" name="a9e03b3181d7ff9d8a9b0eaedabff9899"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9e03b3181d7ff9d8a9b0eaedabff9899">&#9670;&nbsp;</a></span>compFeatureSpectralDecrease()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float CFeatureFromBlockIf::compFeatureSpectralDecrease </td>
          <td>(</td>
          <td class="paramtype">const float *&#160;</td>
          <td class="paramname"><em>pfMagSpec</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>iDataLength</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fSampleRate</em> = <code>1.F</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="a00038_source.xhtml#l00051">51</a> of file <a class="el" href="a00038_source.xhtml">FeatureFromBlock.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   52</span>{</div>
<div class="line"><span class="lineno">   53</span>    assert(pfMagSpec);</div>
<div class="line"><span class="lineno">   54</span>    assert(iDataLength &gt; 0);</div>
<div class="line"><span class="lineno">   55</span> </div>
<div class="line"><span class="lineno">   56</span>    <span class="keywordtype">float</span> fNorm = 0;</div>
<div class="line"><span class="lineno">   57</span>    <span class="keywordtype">float</span> fvsd = 0;</div>
<div class="line"><span class="lineno">   58</span> </div>
<div class="line"><span class="lineno">   59</span>    <span class="keywordflow">for</span> (<span class="keyword">auto</span> k = 1; k &lt; iDataLength; k++)</div>
<div class="line"><span class="lineno">   60</span>    {</div>
<div class="line"><span class="lineno">   61</span>        fNorm += pfMagSpec[k];</div>
<div class="line"><span class="lineno">   62</span>        fvsd += (pfMagSpec[k] - pfMagSpec[0]) / k;</div>
<div class="line"><span class="lineno">   63</span>    }</div>
<div class="line"><span class="lineno">   64</span> </div>
<div class="line"><span class="lineno">   65</span>    <span class="keywordflow">if</span> (fNorm &lt; <a class="code hl_variable" href="a00457.xhtml#a23b1d6639637a13587d5529a57f3bf78">m_kfFloatThresh</a>)</div>
<div class="line"><span class="lineno">   66</span>        <span class="keywordflow">return</span> 0;</div>
<div class="line"><span class="lineno">   67</span> </div>
<div class="line"><span class="lineno">   68</span>    <span class="keywordflow">return</span> fvsd / fNorm;</div>
<div class="line"><span class="lineno">   69</span>}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00128_source.xhtml#l00084">m_kfFloatThresh</a>.</p>

</div>
</div>
<a id="a361ef81afe12623645546fbbeab30b14" name="a361ef81afe12623645546fbbeab30b14"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a361ef81afe12623645546fbbeab30b14">&#9670;&nbsp;</a></span>compFeatureSpectralFlatness()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float CFeatureFromBlockIf::compFeatureSpectralFlatness </td>
          <td>(</td>
          <td class="paramtype">const float *&#160;</td>
          <td class="paramname"><em>pfMagSpec</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>iDataLength</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fSampleRate</em> = <code>1.F</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="a00038_source.xhtml#l00071">71</a> of file <a class="el" href="a00038_source.xhtml">FeatureFromBlock.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   72</span>{</div>
<div class="line"><span class="lineno">   73</span>    assert(pfMagSpec);</div>
<div class="line"><span class="lineno">   74</span>    assert(iDataLength &gt; 0);</div>
<div class="line"><span class="lineno">   75</span> </div>
<div class="line"><span class="lineno">   76</span>    <span class="keywordtype">float</span> fNorm = <a class="code hl_function" href="a00489.xhtml#ae6e3545cf196c5e2409365bc62b7c1de">CVector::getMean</a>(pfMagSpec, iDataLength);</div>
<div class="line"><span class="lineno">   77</span>    <span class="keywordtype">float</span> fGeoMean = 0;</div>
<div class="line"><span class="lineno">   78</span> </div>
<div class="line"><span class="lineno">   79</span>    <span class="comment">// avoid unnecessary complications</span></div>
<div class="line"><span class="lineno">   80</span>    <span class="keywordflow">if</span> (fNorm &lt; <a class="code hl_variable" href="a00457.xhtml#a23b1d6639637a13587d5529a57f3bf78">m_kfFloatThresh</a> || <a class="code hl_function" href="a00489.xhtml#a1f7f307c20239cfd2007393e2b3b26df">CVector::getMin</a>(pfMagSpec, iDataLength) &lt; <a class="code hl_variable" href="a00457.xhtml#a23b1d6639637a13587d5529a57f3bf78">m_kfFloatThresh</a>)</div>
<div class="line"><span class="lineno">   81</span>        <span class="keywordflow">return</span> 0;</div>
<div class="line"><span class="lineno">   82</span> </div>
<div class="line"><span class="lineno">   83</span>    <span class="comment">// compute geometric mean through log</span></div>
<div class="line"><span class="lineno">   84</span>    <span class="keywordflow">for</span> (<span class="keyword">auto</span> k = 0; k &lt; iDataLength; k++)</div>
<div class="line"><span class="lineno">   85</span>        fGeoMean += std::log(pfMagSpec[k]);</div>
<div class="line"><span class="lineno">   86</span> </div>
<div class="line"><span class="lineno">   87</span>    <span class="keywordflow">return</span> std::exp(fGeoMean / iDataLength) / fNorm;</div>
<div class="line"><span class="lineno">   88</span>}</div>
<div class="ttc" id="aa00489_xhtml_a1f7f307c20239cfd2007393e2b3b26df"><div class="ttname"><a href="a00489.xhtml#a1f7f307c20239cfd2007393e2b3b26df">CVector::getMin</a></div><div class="ttdeci">static T getMin(const T *ptSrc, long long int iLength, bool bAbs=false)</div><div class="ttdef"><b>Definition:</b> <a href="a00152_source.xhtml#l00612">Vector.h:612</a></div></div>
<div class="ttc" id="aa00489_xhtml_ae6e3545cf196c5e2409365bc62b7c1de"><div class="ttname"><a href="a00489.xhtml#ae6e3545cf196c5e2409365bc62b7c1de">CVector::getMean</a></div><div class="ttdeci">static T getMean(const T *ptSrc, long long int iLength)</div><div class="ttdef"><b>Definition:</b> <a href="a00152_source.xhtml#l00480">Vector.h:480</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00152_source.xhtml#l00480">CVector::getMean()</a>, <a class="el" href="a00152_source.xhtml#l00612">CVector::getMin()</a>, and <a class="el" href="a00128_source.xhtml#l00084">m_kfFloatThresh</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00457_a361ef81afe12623645546fbbeab30b14_cgraph.svg" width="555" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a42b11faa0f65881702ad7dcc1398ec5f" name="a42b11faa0f65881702ad7dcc1398ec5f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a42b11faa0f65881702ad7dcc1398ec5f">&#9670;&nbsp;</a></span>compFeatureSpectralFlux()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float CFeatureFromBlockIf::compFeatureSpectralFlux </td>
          <td>(</td>
          <td class="paramtype">const float *&#160;</td>
          <td class="paramname"><em>pfMagSpec</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float *&#160;</td>
          <td class="paramname"><em>pfPrevSpec</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>iDataLength</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fSampleRate</em> = <code>1.F</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="a00038_source.xhtml#l00090">90</a> of file <a class="el" href="a00038_source.xhtml">FeatureFromBlock.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   91</span>{</div>
<div class="line"><span class="lineno">   92</span>    assert(pfMagSpec);</div>
<div class="line"><span class="lineno">   93</span>    assert(pfPrevSpec);</div>
<div class="line"><span class="lineno">   94</span>    assert(iDataLength &gt; 0);</div>
<div class="line"><span class="lineno">   95</span> </div>
<div class="line"><span class="lineno">   96</span>    <span class="keywordtype">float</span> fSum = 0;</div>
<div class="line"><span class="lineno">   97</span>    <span class="keywordflow">for</span> (<span class="keyword">auto</span> k = 0; k &lt; iDataLength; k++)</div>
<div class="line"><span class="lineno">   98</span>    {</div>
<div class="line"><span class="lineno">   99</span>        <span class="keywordtype">float</span> fDiff = pfMagSpec[k] - pfPrevSpec[k];</div>
<div class="line"><span class="lineno">  100</span>        fSum += fDiff * fDiff;</div>
<div class="line"><span class="lineno">  101</span>    }</div>
<div class="line"><span class="lineno">  102</span> </div>
<div class="line"><span class="lineno">  103</span>    <span class="keywordflow">return</span> std::sqrt(fSum) / iDataLength;</div>
<div class="line"><span class="lineno">  104</span>}</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="a00038_source.xhtml#l00342">CFeatureSpectralFlux::compFeature()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00457_a42b11faa0f65881702ad7dcc1398ec5f_icgraph.svg" width="382" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="aff5ebe0708311c49ba85c03c4546b6cf" name="aff5ebe0708311c49ba85c03c4546b6cf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aff5ebe0708311c49ba85c03c4546b6cf">&#9670;&nbsp;</a></span>compFeatureSpectralKurtosis()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float CFeatureFromBlockIf::compFeatureSpectralKurtosis </td>
          <td>(</td>
          <td class="paramtype">const float *&#160;</td>
          <td class="paramname"><em>pfMagSpec</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>iDataLength</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fSampleRate</em> = <code>1.F</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="a00038_source.xhtml#l00130">130</a> of file <a class="el" href="a00038_source.xhtml">FeatureFromBlock.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  131</span>{</div>
<div class="line"><span class="lineno">  132</span>    assert(pfMagSpec);</div>
<div class="line"><span class="lineno">  133</span>    assert(iDataLength &gt; 0);</div>
<div class="line"><span class="lineno">  134</span>    assert(fSampleRate &gt; 0);</div>
<div class="line"><span class="lineno">  135</span> </div>
<div class="line"><span class="lineno">  136</span>    <span class="keywordtype">float</span> fNorm = 0;</div>
<div class="line"><span class="lineno">  137</span>    <span class="keywordtype">float</span> fvsk = 0;</div>
<div class="line"><span class="lineno">  138</span>    <span class="keywordtype">float</span> fvsc = <a class="code hl_function" href="a00457.xhtml#a880a58f05522dfd1f0f16f26c34703db">compFeatureSpectralCentroid</a>(pfMagSpec, iDataLength, fSampleRate) * 2 / fSampleRate * (iDataLength - 1);</div>
<div class="line"><span class="lineno">  139</span>    <span class="keywordtype">float</span> fvss = <a class="code hl_function" href="a00457.xhtml#aa97614c73430e57facec7a88bee49c9f">compFeatureSpectralSpread</a>(pfMagSpec, iDataLength, fSampleRate) * 2 / fSampleRate * (iDataLength - 1);</div>
<div class="line"><span class="lineno">  140</span> </div>
<div class="line"><span class="lineno">  141</span>    <span class="keywordflow">if</span> (fvsc &lt; <a class="code hl_variable" href="a00457.xhtml#a23b1d6639637a13587d5529a57f3bf78">m_kfFloatThresh</a> || fvss &lt; <a class="code hl_variable" href="a00457.xhtml#a23b1d6639637a13587d5529a57f3bf78">m_kfFloatThresh</a>)</div>
<div class="line"><span class="lineno">  142</span>        <span class="keywordflow">return</span> 0;</div>
<div class="line"><span class="lineno">  143</span> </div>
<div class="line"><span class="lineno">  144</span>    <span class="keywordflow">for</span> (<span class="keyword">auto</span> k = 0; k &lt; iDataLength; k++)</div>
<div class="line"><span class="lineno">  145</span>    {</div>
<div class="line"><span class="lineno">  146</span>        <span class="keywordtype">float</span> fAgg = (k - fvsc) * (k - fvsc);</div>
<div class="line"><span class="lineno">  147</span>        fAgg *= fAgg;</div>
<div class="line"><span class="lineno">  148</span>        fNorm += pfMagSpec[k];</div>
<div class="line"><span class="lineno">  149</span>        fvsk += fAgg * pfMagSpec[k];</div>
<div class="line"><span class="lineno">  150</span>    }</div>
<div class="line"><span class="lineno">  151</span> </div>
<div class="line"><span class="lineno">  152</span>    <span class="keywordflow">if</span> (fNorm &lt; <a class="code hl_variable" href="a00457.xhtml#a23b1d6639637a13587d5529a57f3bf78">m_kfFloatThresh</a>)</div>
<div class="line"><span class="lineno">  153</span>        <span class="keywordflow">return</span> 0;</div>
<div class="line"><span class="lineno">  154</span> </div>
<div class="line"><span class="lineno">  155</span>    <span class="keywordflow">return</span> fvsk / (fvss * fvss * fvss * fvss * fNorm) - 3;</div>
<div class="line"><span class="lineno">  156</span>}</div>
<div class="ttc" id="aa00457_xhtml_a880a58f05522dfd1f0f16f26c34703db"><div class="ttname"><a href="a00457.xhtml#a880a58f05522dfd1f0f16f26c34703db">CFeatureFromBlockIf::compFeatureSpectralCentroid</a></div><div class="ttdeci">static float compFeatureSpectralCentroid(const float *pfMagSpec, int iDataLength, float fSampleRate=1.F)</div><div class="ttdef"><b>Definition:</b> <a href="a00038_source.xhtml#l00016">FeatureFromBlock.cpp:16</a></div></div>
<div class="ttc" id="aa00457_xhtml_aa97614c73430e57facec7a88bee49c9f"><div class="ttname"><a href="a00457.xhtml#aa97614c73430e57facec7a88bee49c9f">CFeatureFromBlockIf::compFeatureSpectralSpread</a></div><div class="ttdeci">static float compFeatureSpectralSpread(const float *pfMagSpec, int iDataLength, float fSampleRate=1.F)</div><div class="ttdef"><b>Definition:</b> <a href="a00038_source.xhtml#l00106">FeatureFromBlock.cpp:106</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00038_source.xhtml#l00016">compFeatureSpectralCentroid()</a>, <a class="el" href="a00038_source.xhtml#l00106">compFeatureSpectralSpread()</a>, and <a class="el" href="a00128_source.xhtml#l00084">m_kfFloatThresh</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00457_aff5ebe0708311c49ba85c03c4546b6cf_cgraph.svg" width="100%" height="361"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="a28b9430a480ce697a7dbd73527057ac6" name="a28b9430a480ce697a7dbd73527057ac6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a28b9430a480ce697a7dbd73527057ac6">&#9670;&nbsp;</a></span>compFeatureSpectralRolloff()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float CFeatureFromBlockIf::compFeatureSpectralRolloff </td>
          <td>(</td>
          <td class="paramtype">const float *&#160;</td>
          <td class="paramname"><em>pfMagSpec</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>iDataLength</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fSampleRate</em> = <code>1.F</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fKappa</em> = <code>.85F</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="a00038_source.xhtml#l00158">158</a> of file <a class="el" href="a00038_source.xhtml">FeatureFromBlock.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  159</span>{</div>
<div class="line"><span class="lineno">  160</span>    assert(pfMagSpec);</div>
<div class="line"><span class="lineno">  161</span>    assert(iDataLength &gt; 0);</div>
<div class="line"><span class="lineno">  162</span>    assert(fSampleRate &gt; 0);</div>
<div class="line"><span class="lineno">  163</span>    assert(fKappa &gt; 0 &amp;&amp; fKappa &lt;= 1);</div>
<div class="line"><span class="lineno">  164</span> </div>
<div class="line"><span class="lineno">  165</span>    <span class="keywordtype">float</span> fNorm = <a class="code hl_function" href="a00489.xhtml#abdbcc3898121387f3694f74491b7331e">CVector::getSum</a>(pfMagSpec, iDataLength);</div>
<div class="line"><span class="lineno">  166</span>    <span class="keywordtype">float</span> fSum = 0;</div>
<div class="line"><span class="lineno">  167</span>    <span class="keywordtype">int</span> k = 0;</div>
<div class="line"><span class="lineno">  168</span> </div>
<div class="line"><span class="lineno">  169</span>    <span class="keywordflow">if</span> (fNorm &lt; <a class="code hl_variable" href="a00457.xhtml#a23b1d6639637a13587d5529a57f3bf78">m_kfFloatThresh</a>)</div>
<div class="line"><span class="lineno">  170</span>        <span class="keywordflow">return</span> 0;</div>
<div class="line"><span class="lineno">  171</span> </div>
<div class="line"><span class="lineno">  172</span>    fNorm *= fKappa;</div>
<div class="line"><span class="lineno">  173</span>    <span class="keywordflow">while</span> (fSum &lt;= fNorm)</div>
<div class="line"><span class="lineno">  174</span>    {</div>
<div class="line"><span class="lineno">  175</span>        fSum += pfMagSpec[k];</div>
<div class="line"><span class="lineno">  176</span>        k++;</div>
<div class="line"><span class="lineno">  177</span> </div>
<div class="line"><span class="lineno">  178</span>        assert(k &lt; iDataLength);</div>
<div class="line"><span class="lineno">  179</span>    }</div>
<div class="line"><span class="lineno">  180</span> </div>
<div class="line"><span class="lineno">  181</span>    <span class="comment">// convert from index to Hz</span></div>
<div class="line"><span class="lineno">  182</span>    <span class="keywordflow">return</span> (k - 1) * fSampleRate / (2.F * (iDataLength - 1));</div>
<div class="line"><span class="lineno">  183</span>}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00152_source.xhtml#l00439">CVector::getSum()</a>, and <a class="el" href="a00128_source.xhtml#l00084">m_kfFloatThresh</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00038_source.xhtml#l00628">CFeatureSpectralRolloff::compFeature()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00457_a28b9430a480ce697a7dbd73527057ac6_cgraph.svg" width="367" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00457_a28b9430a480ce697a7dbd73527057ac6_icgraph.svg" width="406" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="af130d46bb6a964262acb138fc7b7b9fd" name="af130d46bb6a964262acb138fc7b7b9fd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af130d46bb6a964262acb138fc7b7b9fd">&#9670;&nbsp;</a></span>compFeatureSpectralSkewness()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float CFeatureFromBlockIf::compFeatureSpectralSkewness </td>
          <td>(</td>
          <td class="paramtype">const float *&#160;</td>
          <td class="paramname"><em>pfMagSpec</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>iDataLength</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fSampleRate</em> = <code>1.F</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="a00038_source.xhtml#l00185">185</a> of file <a class="el" href="a00038_source.xhtml">FeatureFromBlock.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  186</span>{</div>
<div class="line"><span class="lineno">  187</span>    assert(pfMagSpec);</div>
<div class="line"><span class="lineno">  188</span>    assert(iDataLength &gt; 0);</div>
<div class="line"><span class="lineno">  189</span>    assert(fSampleRate &gt; 0);</div>
<div class="line"><span class="lineno">  190</span> </div>
<div class="line"><span class="lineno">  191</span>    <span class="keywordtype">float</span> fNorm = 0;</div>
<div class="line"><span class="lineno">  192</span>    <span class="keywordtype">float</span> fvssk = 0;</div>
<div class="line"><span class="lineno">  193</span>    <span class="keywordtype">float</span> fvsc = <a class="code hl_function" href="a00457.xhtml#a880a58f05522dfd1f0f16f26c34703db">compFeatureSpectralCentroid</a>(pfMagSpec, iDataLength, fSampleRate) * 2 / fSampleRate * (iDataLength - 1);</div>
<div class="line"><span class="lineno">  194</span>    <span class="keywordtype">float</span> fvss = <a class="code hl_function" href="a00457.xhtml#aa97614c73430e57facec7a88bee49c9f">compFeatureSpectralSpread</a>(pfMagSpec, iDataLength, fSampleRate) * 2 / fSampleRate * (iDataLength - 1);</div>
<div class="line"><span class="lineno">  195</span> </div>
<div class="line"><span class="lineno">  196</span>    <span class="keywordflow">if</span> (fvsc &lt; <a class="code hl_variable" href="a00457.xhtml#a23b1d6639637a13587d5529a57f3bf78">m_kfFloatThresh</a> || fvss &lt; <a class="code hl_variable" href="a00457.xhtml#a23b1d6639637a13587d5529a57f3bf78">m_kfFloatThresh</a>)</div>
<div class="line"><span class="lineno">  197</span>        <span class="keywordflow">return</span> 0;</div>
<div class="line"><span class="lineno">  198</span> </div>
<div class="line"><span class="lineno">  199</span>    <span class="keywordflow">for</span> (<span class="keyword">auto</span> k = 0; k &lt; iDataLength; k++)</div>
<div class="line"><span class="lineno">  200</span>    {</div>
<div class="line"><span class="lineno">  201</span>        <span class="keywordtype">float</span> fAgg = (k - fvsc) * (k - fvsc) * (k - fvsc);</div>
<div class="line"><span class="lineno">  202</span>        fNorm += pfMagSpec[k];</div>
<div class="line"><span class="lineno">  203</span>        fvssk += fAgg * pfMagSpec[k];</div>
<div class="line"><span class="lineno">  204</span>    }</div>
<div class="line"><span class="lineno">  205</span> </div>
<div class="line"><span class="lineno">  206</span>    <span class="keywordflow">if</span> (fNorm &lt; <a class="code hl_variable" href="a00457.xhtml#a23b1d6639637a13587d5529a57f3bf78">m_kfFloatThresh</a>)</div>
<div class="line"><span class="lineno">  207</span>        <span class="keywordflow">return</span> 0;</div>
<div class="line"><span class="lineno">  208</span> </div>
<div class="line"><span class="lineno">  209</span>    <span class="keywordflow">return</span> fvssk / (fvss * fvss * fvss * fNorm);</div>
<div class="line"><span class="lineno">  210</span>}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00038_source.xhtml#l00016">compFeatureSpectralCentroid()</a>, <a class="el" href="a00038_source.xhtml#l00106">compFeatureSpectralSpread()</a>, and <a class="el" href="a00128_source.xhtml#l00084">m_kfFloatThresh</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00457_af130d46bb6a964262acb138fc7b7b9fd_cgraph.svg" width="100%" height="361"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="a8c8ded721d053ed4f34565a1392993fc" name="a8c8ded721d053ed4f34565a1392993fc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8c8ded721d053ed4f34565a1392993fc">&#9670;&nbsp;</a></span>compFeatureSpectralSlope()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float CFeatureFromBlockIf::compFeatureSpectralSlope </td>
          <td>(</td>
          <td class="paramtype">const float *&#160;</td>
          <td class="paramname"><em>pfMagSpec</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>iDataLength</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fSampleRate</em> = <code>1.F</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="a00038_source.xhtml#l00212">212</a> of file <a class="el" href="a00038_source.xhtml">FeatureFromBlock.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  213</span>{</div>
<div class="line"><span class="lineno">  214</span>    assert(pfMagSpec);</div>
<div class="line"><span class="lineno">  215</span>    assert(iDataLength &gt; 0);</div>
<div class="line"><span class="lineno">  216</span>    assert(fSampleRate &gt; 0);</div>
<div class="line"><span class="lineno">  217</span> </div>
<div class="line"><span class="lineno">  218</span>    <span class="comment">// compute mean</span></div>
<div class="line"><span class="lineno">  219</span>    <span class="keywordtype">float</span> fvsc = <a class="code hl_function" href="a00457.xhtml#a880a58f05522dfd1f0f16f26c34703db">compFeatureSpectralCentroid</a>(pfMagSpec, iDataLength, fSampleRate) * 2 / fSampleRate * (iDataLength - 1);</div>
<div class="line"><span class="lineno">  220</span>    <span class="keywordtype">float</span> fvssl = 0;</div>
<div class="line"><span class="lineno">  221</span>    <span class="keywordtype">float</span> fNorm = 0;</div>
<div class="line"><span class="lineno">  222</span> </div>
<div class="line"><span class="lineno">  223</span>    <span class="keywordflow">if</span> (fvsc &lt; <a class="code hl_variable" href="a00457.xhtml#a23b1d6639637a13587d5529a57f3bf78">m_kfFloatThresh</a>)</div>
<div class="line"><span class="lineno">  224</span>        <span class="keywordflow">return</span> 0;</div>
<div class="line"><span class="lineno">  225</span> </div>
<div class="line"><span class="lineno">  226</span>    <span class="keywordflow">for</span> (<span class="keyword">auto</span> k = 0; k &lt; iDataLength; k++)</div>
<div class="line"><span class="lineno">  227</span>    {</div>
<div class="line"><span class="lineno">  228</span>        <span class="keywordtype">float</span> fk = k - (iDataLength + 1) / 2.F;</div>
<div class="line"><span class="lineno">  229</span>        fvssl += fk * (pfMagSpec[k] - fvsc);</div>
<div class="line"><span class="lineno">  230</span>        fNorm += fk * fk;</div>
<div class="line"><span class="lineno">  231</span>    }</div>
<div class="line"><span class="lineno">  232</span> </div>
<div class="line"><span class="lineno">  233</span>    <span class="keywordflow">if</span> (fNorm &lt; <a class="code hl_variable" href="a00457.xhtml#a23b1d6639637a13587d5529a57f3bf78">m_kfFloatThresh</a>)</div>
<div class="line"><span class="lineno">  234</span>        <span class="keywordflow">return</span> 0;</div>
<div class="line"><span class="lineno">  235</span> </div>
<div class="line"><span class="lineno">  236</span>    <span class="keywordflow">return</span> fvssl / fNorm;</div>
<div class="line"><span class="lineno">  237</span>}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00038_source.xhtml#l00016">compFeatureSpectralCentroid()</a>, and <a class="el" href="a00128_source.xhtml#l00084">m_kfFloatThresh</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00457_a8c8ded721d053ed4f34565a1392993fc_cgraph.svg" width="444" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="aa97614c73430e57facec7a88bee49c9f" name="aa97614c73430e57facec7a88bee49c9f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa97614c73430e57facec7a88bee49c9f">&#9670;&nbsp;</a></span>compFeatureSpectralSpread()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float CFeatureFromBlockIf::compFeatureSpectralSpread </td>
          <td>(</td>
          <td class="paramtype">const float *&#160;</td>
          <td class="paramname"><em>pfMagSpec</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>iDataLength</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fSampleRate</em> = <code>1.F</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="a00038_source.xhtml#l00106">106</a> of file <a class="el" href="a00038_source.xhtml">FeatureFromBlock.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  107</span>{</div>
<div class="line"><span class="lineno">  108</span>    assert(pfMagSpec);</div>
<div class="line"><span class="lineno">  109</span>    assert(iDataLength &gt; 0);</div>
<div class="line"><span class="lineno">  110</span>    assert(fSampleRate &gt; 0);</div>
<div class="line"><span class="lineno">  111</span> </div>
<div class="line"><span class="lineno">  112</span>    <span class="keywordtype">float</span> fNorm = 0;</div>
<div class="line"><span class="lineno">  113</span>    <span class="keywordtype">float</span> fvss = 0;</div>
<div class="line"><span class="lineno">  114</span>    <span class="keywordtype">float</span> fvsc = <a class="code hl_function" href="a00457.xhtml#a880a58f05522dfd1f0f16f26c34703db">compFeatureSpectralCentroid</a>(pfMagSpec, iDataLength, fSampleRate) * 2 / fSampleRate * (iDataLength - 1);</div>
<div class="line"><span class="lineno">  115</span> </div>
<div class="line"><span class="lineno">  116</span>    <span class="keywordflow">if</span> (fvsc &lt; <a class="code hl_variable" href="a00457.xhtml#a23b1d6639637a13587d5529a57f3bf78">m_kfFloatThresh</a>)</div>
<div class="line"><span class="lineno">  117</span>        <span class="keywordflow">return</span> 0;</div>
<div class="line"><span class="lineno">  118</span> </div>
<div class="line"><span class="lineno">  119</span>    <span class="keywordflow">for</span> (<span class="keyword">auto</span> k = 0; k &lt; iDataLength; k++)</div>
<div class="line"><span class="lineno">  120</span>    {</div>
<div class="line"><span class="lineno">  121</span>        <span class="keywordtype">float</span> fAgg = (k - fvsc) * (k - fvsc);</div>
<div class="line"><span class="lineno">  122</span>        fNorm += pfMagSpec[k];</div>
<div class="line"><span class="lineno">  123</span>        fvss += fAgg * pfMagSpec[k];</div>
<div class="line"><span class="lineno">  124</span>    }</div>
<div class="line"><span class="lineno">  125</span> </div>
<div class="line"><span class="lineno">  126</span>    <span class="comment">// convert from index to Hz</span></div>
<div class="line"><span class="lineno">  127</span>    <span class="keywordflow">return</span> std::sqrt(fvss / fNorm) * fSampleRate / (2.F * (iDataLength - 1));</div>
<div class="line"><span class="lineno">  128</span>}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00038_source.xhtml#l00016">compFeatureSpectralCentroid()</a>, and <a class="el" href="a00128_source.xhtml#l00084">m_kfFloatThresh</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00038_source.xhtml#l00130">compFeatureSpectralKurtosis()</a>, and <a class="el" href="a00038_source.xhtml#l00185">compFeatureSpectralSkewness()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00457_aa97614c73430e57facec7a88bee49c9f_cgraph.svg" width="452" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00457_aa97614c73430e57facec7a88bee49c9f_icgraph.svg" width="466" height="118"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="abdd05ed6160f4154fd4aae2816939f5e" name="abdd05ed6160f4154fd4aae2816939f5e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abdd05ed6160f4154fd4aae2816939f5e">&#9670;&nbsp;</a></span>compFeatureSpectralTonalPowerRatio()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float CFeatureFromBlockIf::compFeatureSpectralTonalPowerRatio </td>
          <td>(</td>
          <td class="paramtype">const float *&#160;</td>
          <td class="paramname"><em>pfMagSpec</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>iDataLength</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fSampleRate</em> = <code>1.F</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fThresh</em> = <code>5e-4</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="a00038_source.xhtml#l00238">238</a> of file <a class="el" href="a00038_source.xhtml">FeatureFromBlock.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  239</span>{</div>
<div class="line"><span class="lineno">  240</span>    assert(pfMagSpec);</div>
<div class="line"><span class="lineno">  241</span>    assert(iDataLength &gt; 0);</div>
<div class="line"><span class="lineno">  242</span> </div>
<div class="line"><span class="lineno">  243</span>    <span class="comment">// initialize</span></div>
<div class="line"><span class="lineno">  244</span>    <span class="keywordtype">float</span> fvtpr = 0;</div>
<div class="line"><span class="lineno">  245</span>    <span class="keywordtype">float</span> fNorm = pfMagSpec[0] * pfMagSpec[0] + pfMagSpec[iDataLength - 1] * pfMagSpec[iDataLength - 1];</div>
<div class="line"><span class="lineno">  246</span> </div>
<div class="line"><span class="lineno">  247</span>    <span class="keywordflow">for</span> (<span class="keyword">auto</span> k = 1; k &lt; iDataLength - 1; k++)</div>
<div class="line"><span class="lineno">  248</span>    {</div>
<div class="line"><span class="lineno">  249</span>        <span class="keywordtype">float</span> fSquare = pfMagSpec[k] * pfMagSpec[k];</div>
<div class="line"><span class="lineno">  250</span>        fNorm += fSquare;</div>
<div class="line"><span class="lineno">  251</span> </div>
<div class="line"><span class="lineno">  252</span>        <span class="comment">// search for local maxima</span></div>
<div class="line"><span class="lineno">  253</span>        <span class="keywordflow">if</span> (pfMagSpec[k] &lt;= pfMagSpec[k - 1] || pfMagSpec[k] &lt;= pfMagSpec[k + 1] || pfMagSpec[k] &lt;= fThresh)</div>
<div class="line"><span class="lineno">  254</span>            <span class="keywordflow">continue</span>;</div>
<div class="line"><span class="lineno">  255</span>        <span class="keywordflow">else</span></div>
<div class="line"><span class="lineno">  256</span>        {</div>
<div class="line"><span class="lineno">  257</span>            fvtpr += fSquare;</div>
<div class="line"><span class="lineno">  258</span> </div>
<div class="line"><span class="lineno">  259</span>            <span class="comment">// increment because the next bin cannot be a local max but don&#39;t forget fNorm</span></div>
<div class="line"><span class="lineno">  260</span>            fNorm += pfMagSpec[k + 1] * pfMagSpec[k + 1];</div>
<div class="line"><span class="lineno">  261</span>            k++; </div>
<div class="line"><span class="lineno">  262</span>        }</div>
<div class="line"><span class="lineno">  263</span>    }</div>
<div class="line"><span class="lineno">  264</span> </div>
<div class="line"><span class="lineno">  265</span>    <span class="keywordflow">if</span> (fNorm &lt; <a class="code hl_variable" href="a00457.xhtml#a23b1d6639637a13587d5529a57f3bf78">m_kfFloatThresh</a>)</div>
<div class="line"><span class="lineno">  266</span>        <span class="keywordflow">return</span> 0;</div>
<div class="line"><span class="lineno">  267</span> </div>
<div class="line"><span class="lineno">  268</span>    <span class="keywordflow">return</span> fvtpr / fNorm;</div>
<div class="line"><span class="lineno">  269</span>}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00128_source.xhtml#l00084">m_kfFloatThresh</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00038_source.xhtml#l00663">CFeatureSpectralTonalPowerRatio::compFeature()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00457_abdd05ed6160f4154fd4aae2816939f5e_icgraph.svg" width="435" height="67"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a665af5d570876cc41adc56185201cd8c" name="a665af5d570876cc41adc56185201cd8c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a665af5d570876cc41adc56185201cd8c">&#9670;&nbsp;</a></span>compFeatureTimeAcfCoeff()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float CFeatureFromBlockIf::compFeatureTimeAcfCoeff </td>
          <td>(</td>
          <td class="paramtype">const float *&#160;</td>
          <td class="paramname"><em>pfSamples</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>iDataLength</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fSampleRate</em> = <code>1.F</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>iEta</em> = <code>19</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="a00038_source.xhtml#l00271">271</a> of file <a class="el" href="a00038_source.xhtml">FeatureFromBlock.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  272</span>{</div>
<div class="line"><span class="lineno">  273</span>    assert(pfSamples);</div>
<div class="line"><span class="lineno">  274</span>    assert(iDataLength &gt; iEta);</div>
<div class="line"><span class="lineno">  275</span>    assert(iEta &gt;= 0);</div>
<div class="line"><span class="lineno">  276</span> </div>
<div class="line"><span class="lineno">  277</span>    <span class="keywordflow">return</span> <a class="code hl_function" href="a00489.xhtml#a269d316eeb6000aac4f57ade32c83127">CVector::mulScalar</a>(pfSamples, &amp;pfSamples[iEta], <span class="keyword">static_cast&lt;</span><span class="keywordtype">long</span> <span class="keywordtype">long</span><span class="keyword">&gt;</span>(iDataLength) - iEta);</div>
<div class="line"><span class="lineno">  278</span>}</div>
<div class="ttc" id="aa00489_xhtml_a269d316eeb6000aac4f57ade32c83127"><div class="ttname"><a href="a00489.xhtml#a269d316eeb6000aac4f57ade32c83127">CVector::mulScalar</a></div><div class="ttdeci">static T mulScalar(const T *ptSrc1, const T *ptSrc2, long long int iLength)</div><div class="ttdef"><b>Definition:</b> <a href="a00152_source.xhtml#l00205">Vector.h:205</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00152_source.xhtml#l00205">CVector::mulScalar()</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00038_source.xhtml#l00698">CFeatureTimeAcfCoeff::compFeature()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00457_a665af5d570876cc41adc56185201cd8c_cgraph.svg" width="375" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00457_a665af5d570876cc41adc56185201cd8c_icgraph.svg" width="396" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a8343fab849f52e77639b46e759e7e49d" name="a8343fab849f52e77639b46e759e7e49d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8343fab849f52e77639b46e759e7e49d">&#9670;&nbsp;</a></span>compFeatureTimePeakEnvelope()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float CFeatureFromBlockIf::compFeatureTimePeakEnvelope </td>
          <td>(</td>
          <td class="paramtype">const float *&#160;</td>
          <td class="paramname"><em>pfSamples</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>iDataLength</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fSampleRate</em> = <code>1.F</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="a00038_source.xhtml#l00280">280</a> of file <a class="el" href="a00038_source.xhtml">FeatureFromBlock.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  281</span>{</div>
<div class="line"><span class="lineno">  282</span>    assert(pfSamples);</div>
<div class="line"><span class="lineno">  283</span>    assert(iDataLength &gt; 0);</div>
<div class="line"><span class="lineno">  284</span> </div>
<div class="line"><span class="lineno">  285</span>    <span class="keywordflow">return</span> <a class="code hl_function" href="a00489.xhtml#a9f5be871090bc5a64a7732cebfb4f8ec">CVector::getMax</a>(pfSamples, iDataLength);</div>
<div class="line"><span class="lineno">  286</span>}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00152_source.xhtml#l00559">CVector::getMax()</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00038_source.xhtml#l00819">CFeatureTimePeakEnvelope::compFeature()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00457_a8343fab849f52e77639b46e759e7e49d_cgraph.svg" width="559" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00457_a8343fab849f52e77639b46e759e7e49d_icgraph.svg" width="462" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a46500f9eaa49f3860afa5f1fce555415" name="a46500f9eaa49f3860afa5f1fce555415"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a46500f9eaa49f3860afa5f1fce555415">&#9670;&nbsp;</a></span>compFeatureTimeRms()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float CFeatureFromBlockIf::compFeatureTimeRms </td>
          <td>(</td>
          <td class="paramtype">const float *&#160;</td>
          <td class="paramname"><em>pfSamples</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>iDataLength</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fSampleRate</em> = <code>1.F</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="a00038_source.xhtml#l00296">296</a> of file <a class="el" href="a00038_source.xhtml">FeatureFromBlock.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  297</span>{</div>
<div class="line"><span class="lineno">  298</span>    assert(pfSamples);</div>
<div class="line"><span class="lineno">  299</span>    assert(iDataLength &gt; 0);</div>
<div class="line"><span class="lineno">  300</span> </div>
<div class="line"><span class="lineno">  301</span>    <span class="keywordflow">return</span> <a class="code hl_function" href="a00489.xhtml#ae2ed42101e3d7075f5dec265a23f3424">CVector::getStd</a>(pfSamples, iDataLength, 0.F);</div>
<div class="line"><span class="lineno">  302</span>}</div>
<div class="ttc" id="aa00489_xhtml_ae2ed42101e3d7075f5dec265a23f3424"><div class="ttname"><a href="a00489.xhtml#ae2ed42101e3d7075f5dec265a23f3424">CVector::getStd</a></div><div class="ttdeci">static T getStd(const T *ptSrc, long long int iLength, T fMean=std::numeric_limits&lt; T &gt;::max())</div><div class="ttdef"><b>Definition:</b> <a href="a00152_source.xhtml#l00501">Vector.h:501</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00152_source.xhtml#l00501">CVector::getStd()</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00038_source.xhtml#l00893">CFeatureTimeRms::compFeature()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00457_a46500f9eaa49f3860afa5f1fce555415_cgraph.svg" width="100%" height="300"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00457_a46500f9eaa49f3860afa5f1fce555415_icgraph.svg" width="432" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a4eca7f209c771fb5008fa08facffd598" name="a4eca7f209c771fb5008fa08facffd598"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4eca7f209c771fb5008fa08facffd598">&#9670;&nbsp;</a></span>compFeatureTimeStd()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float CFeatureFromBlockIf::compFeatureTimeStd </td>
          <td>(</td>
          <td class="paramtype">const float *&#160;</td>
          <td class="paramname"><em>pfSamples</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>iDataLength</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fSampleRate</em> = <code>1.F</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="a00038_source.xhtml#l00288">288</a> of file <a class="el" href="a00038_source.xhtml">FeatureFromBlock.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  289</span>{</div>
<div class="line"><span class="lineno">  290</span>    assert(pfSamples);</div>
<div class="line"><span class="lineno">  291</span>    assert(iDataLength &gt; 0);</div>
<div class="line"><span class="lineno">  292</span> </div>
<div class="line"><span class="lineno">  293</span>    <span class="keywordflow">return</span> <a class="code hl_function" href="a00489.xhtml#ae2ed42101e3d7075f5dec265a23f3424">CVector::getStd</a>(pfSamples, iDataLength);</div>
<div class="line"><span class="lineno">  294</span>}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00152_source.xhtml#l00501">CVector::getStd()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00457_a4eca7f209c771fb5008fa08facffd598_cgraph.svg" width="667" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="add9e6742349500c1323607b2508d311d" name="add9e6742349500c1323607b2508d311d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#add9e6742349500c1323607b2508d311d">&#9670;&nbsp;</a></span>compFeatureTimeZeroCrossingRate()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float CFeatureFromBlockIf::compFeatureTimeZeroCrossingRate </td>
          <td>(</td>
          <td class="paramtype">const float *&#160;</td>
          <td class="paramname"><em>pfSamples</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>iDataLength</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fSampleRate</em> = <code>1.F</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="a00038_source.xhtml#l00304">304</a> of file <a class="el" href="a00038_source.xhtml">FeatureFromBlock.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  305</span>{</div>
<div class="line"><span class="lineno">  306</span>    assert(pfSamples);</div>
<div class="line"><span class="lineno">  307</span>    assert(iDataLength &gt; 0);</div>
<div class="line"><span class="lineno">  308</span> </div>
<div class="line"><span class="lineno">  309</span>    <span class="keywordtype">float</span> fvzc = 0;</div>
<div class="line"><span class="lineno">  310</span> </div>
<div class="line"><span class="lineno">  311</span>    <span class="keywordtype">float</span> fPrevSign = 0;</div>
<div class="line"><span class="lineno">  312</span>    <span class="keywordflow">for</span> (<span class="keyword">auto</span> i = 0; i &lt; iDataLength; i++)</div>
<div class="line"><span class="lineno">  313</span>    {</div>
<div class="line"><span class="lineno">  314</span>        <span class="keywordtype">float</span> fCurrSign = <a class="code hl_function" href="a00485.xhtml#a8d740c45e33ce98f9415bdcf78174600">CUtil::sign</a>(pfSamples[i]);</div>
<div class="line"><span class="lineno">  315</span>        fvzc += std::abs(fCurrSign - fPrevSign);</div>
<div class="line"><span class="lineno">  316</span>        fPrevSign = fCurrSign;</div>
<div class="line"><span class="lineno">  317</span>    }</div>
<div class="line"><span class="lineno">  318</span> </div>
<div class="line"><span class="lineno">  319</span>    <span class="comment">// standardize feature </span></div>
<div class="line"><span class="lineno">  320</span>    <span class="keywordflow">return</span> fvzc / (2 * iDataLength);</div>
<div class="line"><span class="lineno">  321</span>}</div>
<div class="ttc" id="aa00485_xhtml_a8d740c45e33ce98f9415bdcf78174600"><div class="ttname"><a href="a00485.xhtml#a8d740c45e33ce98f9415bdcf78174600">CUtil::sign</a></div><div class="ttdeci">static float sign(float fValue)</div><div class="ttdef"><b>Definition:</b> <a href="a00158_source.xhtml#l00085">Util.h:85</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00158_source.xhtml#l00085">CUtil::sign()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00457_add9e6742349500c1323607b2508d311d_cgraph.svg" width="378" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a6d3ca4f66582ae352e3addfd7f99a752" name="a6d3ca4f66582ae352e3addfd7f99a752"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6d3ca4f66582ae352e3addfd7f99a752">&#9670;&nbsp;</a></span>create()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00116.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> CFeatureFromBlockIf::create </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="a00457.xhtml">CFeatureFromBlockIf</a> *&amp;&#160;</td>
          <td class="paramname"><em>pCInstance</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="a00453.xhtml#a47ca14941c604beb42d60164b3e5e6b3">CFeatureIf::Feature_t</a>&#160;</td>
          <td class="paramname"><em>eFeatureIdx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>iDataLength</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fSampleRate</em> = <code>1.F</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p >initializes a FeatureFromBlock instance </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pCInstance</td><td>pointer to instance to be written </td></tr>
    <tr><td class="paramname">eFeatureIdx</td><td>index of Feature to extract </td></tr>
    <tr><td class="paramname">iDataLength</td><td>block length </td></tr>
    <tr><td class="paramname">fSampleRate</td><td>sample rate (only used when needed) </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Error_t </dd></dl>

<p class="definition">Definition at line <a class="el" href="a00038_source.xhtml#l00950">950</a> of file <a class="el" href="a00038_source.xhtml">FeatureFromBlock.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  951</span>{</div>
<div class="line"><span class="lineno">  952</span>    <span class="keywordflow">if</span> (iDataLength &lt;= 0 || fSampleRate &lt;= 0)</div>
<div class="line"><span class="lineno">  953</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00116.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248">Error_t::kFunctionInvalidArgsError</a>;</div>
<div class="line"><span class="lineno">  954</span> </div>
<div class="line"><span class="lineno">  955</span> </div>
<div class="line"><span class="lineno">  956</span>    <span class="keywordflow">switch</span> (eFeatureIdx)</div>
<div class="line"><span class="lineno">  957</span>    {</div>
<div class="line"><span class="lineno">  958</span>    <span class="keywordflow">default</span>:</div>
<div class="line"><span class="lineno">  959</span>    <span class="keywordflow">case</span> <a class="code hl_enumvalue" href="a00453.xhtml#a47ca14941c604beb42d60164b3e5e6b3af835ba1196c45135d5b2c14bd71765fe">CFeatureIf::kFeatureSpectralCentroid</a>:</div>
<div class="line"><span class="lineno">  960</span>    <span class="keywordflow">case</span> <a class="code hl_enumvalue" href="a00453.xhtml#a47ca14941c604beb42d60164b3e5e6b3a56e83df863061d4093933f57dc036fd0">CFeatureIf::kFeatureSpectralCrestFactor</a>:</div>
<div class="line"><span class="lineno">  961</span>    <span class="keywordflow">case</span> <a class="code hl_enumvalue" href="a00453.xhtml#a47ca14941c604beb42d60164b3e5e6b3a73840e0ec4ffc58aac491b51add4ebae">CFeatureIf::kFeatureSpectralDecrease</a>:</div>
<div class="line"><span class="lineno">  962</span>    <span class="keywordflow">case</span> <a class="code hl_enumvalue" href="a00453.xhtml#a47ca14941c604beb42d60164b3e5e6b3abe659e5b25086d04ed78c40d7411b71d">CFeatureIf::kFeatureSpectralFlatness</a>:</div>
<div class="line"><span class="lineno">  963</span>    <span class="keywordflow">case</span> <a class="code hl_enumvalue" href="a00453.xhtml#a47ca14941c604beb42d60164b3e5e6b3aa0fa60f5d1741a50b4e018ae35c53084">CFeatureIf::kFeatureSpectralKurtosis</a>:</div>
<div class="line"><span class="lineno">  964</span>    <span class="keywordflow">case</span> <a class="code hl_enumvalue" href="a00453.xhtml#a47ca14941c604beb42d60164b3e5e6b3adc99879506ae42b73740c06987993d6b">CFeatureIf::kFeatureSpectralSkewness</a>:</div>
<div class="line"><span class="lineno">  965</span>    <span class="keywordflow">case</span> <a class="code hl_enumvalue" href="a00453.xhtml#a47ca14941c604beb42d60164b3e5e6b3ab48b0af125a41eb628e2867f53248828">CFeatureIf::kFeatureSpectralSlope</a>:</div>
<div class="line"><span class="lineno">  966</span>    <span class="keywordflow">case</span> <a class="code hl_enumvalue" href="a00453.xhtml#a47ca14941c604beb42d60164b3e5e6b3a2e51955c0f5d4edf37bb8b0c0b7af6f5">CFeatureIf::kFeatureSpectralSpread</a>:</div>
<div class="line"><span class="lineno">  967</span>    <span class="keywordflow">case</span> <a class="code hl_enumvalue" href="a00453.xhtml#a47ca14941c604beb42d60164b3e5e6b3aa7fcbc742fe20a02ec32aa842ef5d9ac">CFeatureIf::kFeatureTimeStd</a>:</div>
<div class="line"><span class="lineno">  968</span>    <span class="keywordflow">case</span> <a class="code hl_enumvalue" href="a00453.xhtml#a47ca14941c604beb42d60164b3e5e6b3a4358b37321d69645738c1494bb94b925">CFeatureIf::kFeatureTimeZeroCrossingRate</a>:</div>
<div class="line"><span class="lineno">  969</span>        pCInstance = <span class="keyword">new</span> <a class="code hl_function" href="a00457.xhtml#a483bca508e2817799a3173a6180d245e">CFeatureFromBlockIf</a>(eFeatureIdx, iDataLength, fSampleRate);</div>
<div class="line"><span class="lineno">  970</span>        <span class="keywordflow">break</span>;</div>
<div class="line"><span class="lineno">  971</span> </div>
<div class="line"><span class="lineno">  972</span>    <span class="keywordflow">case</span> <a class="code hl_enumvalue" href="a00453.xhtml#a47ca14941c604beb42d60164b3e5e6b3ababfc8ce9c5b272fd805b5e8a1fb5ff6">CFeatureIf::kFeatureSpectralFlux</a>:</div>
<div class="line"><span class="lineno">  973</span>        pCInstance = <span class="keyword">new</span> <a class="code hl_class" href="a00317.xhtml">CFeatureSpectralFlux</a>(eFeatureIdx, iDataLength, fSampleRate);</div>
<div class="line"><span class="lineno">  974</span>        <span class="keywordflow">break</span>;</div>
<div class="line"><span class="lineno">  975</span> </div>
<div class="line"><span class="lineno">  976</span>    <span class="keywordflow">case</span> <a class="code hl_enumvalue" href="a00453.xhtml#a47ca14941c604beb42d60164b3e5e6b3a47c4f31d2c8d477f955da1281c8bda85">CFeatureIf::kFeatureSpectralMfccs</a>:</div>
<div class="line"><span class="lineno">  977</span>        pCInstance = <span class="keyword">new</span> <a class="code hl_class" href="a00321.xhtml">CFeatureSpectralMfccs</a>(eFeatureIdx, iDataLength, fSampleRate);</div>
<div class="line"><span class="lineno">  978</span>        <span class="keywordflow">break</span>;</div>
<div class="line"><span class="lineno">  979</span> </div>
<div class="line"><span class="lineno">  980</span>    <span class="keywordflow">case</span> <a class="code hl_enumvalue" href="a00453.xhtml#a47ca14941c604beb42d60164b3e5e6b3a6cca75d6d116b2284ae19d2b75093198">CFeatureIf::kFeatureSpectralPitchChroma</a>:</div>
<div class="line"><span class="lineno">  981</span>        pCInstance = <span class="keyword">new</span> <a class="code hl_class" href="a00325.xhtml">CFeatureSpectralPitchChroma</a>(eFeatureIdx, iDataLength, fSampleRate);</div>
<div class="line"><span class="lineno">  982</span>        <span class="keywordflow">break</span>;</div>
<div class="line"><span class="lineno">  983</span> </div>
<div class="line"><span class="lineno">  984</span>    <span class="keywordflow">case</span> <a class="code hl_enumvalue" href="a00453.xhtml#a47ca14941c604beb42d60164b3e5e6b3a0fe1e0e5caf8fd22c48abcde74028c8f">CFeatureIf::kFeatureSpectralRolloff</a>:</div>
<div class="line"><span class="lineno">  985</span>        pCInstance = <span class="keyword">new</span> <a class="code hl_class" href="a00329.xhtml">CFeatureSpectralRolloff</a>(eFeatureIdx, iDataLength, fSampleRate);</div>
<div class="line"><span class="lineno">  986</span>        <span class="keywordflow">break</span>;</div>
<div class="line"><span class="lineno">  987</span> </div>
<div class="line"><span class="lineno">  988</span>    <span class="keywordflow">case</span> <a class="code hl_enumvalue" href="a00453.xhtml#a47ca14941c604beb42d60164b3e5e6b3ab91719fe00fbcbbd34b7b5b0e7631dfd">CFeatureIf::kFeatureSpectralTonalPowerRatio</a>:</div>
<div class="line"><span class="lineno">  989</span>        pCInstance = <span class="keyword">new</span> <a class="code hl_class" href="a00333.xhtml">CFeatureSpectralTonalPowerRatio</a>(eFeatureIdx, iDataLength, fSampleRate);</div>
<div class="line"><span class="lineno">  990</span>        <span class="keywordflow">break</span>;</div>
<div class="line"><span class="lineno">  991</span> </div>
<div class="line"><span class="lineno">  992</span>    <span class="keywordflow">case</span> <a class="code hl_enumvalue" href="a00453.xhtml#a47ca14941c604beb42d60164b3e5e6b3ab6c784d49502082864d1ff9170564dcd">CFeatureIf::kFeatureTimeAcfCoeff</a>:</div>
<div class="line"><span class="lineno">  993</span>        pCInstance = <span class="keyword">new</span> <a class="code hl_class" href="a00337.xhtml">CFeatureTimeAcfCoeff</a>(eFeatureIdx, iDataLength, fSampleRate);</div>
<div class="line"><span class="lineno">  994</span>        <span class="keywordflow">break</span>;</div>
<div class="line"><span class="lineno">  995</span> </div>
<div class="line"><span class="lineno">  996</span>    <span class="keywordflow">case</span> <a class="code hl_enumvalue" href="a00453.xhtml#a47ca14941c604beb42d60164b3e5e6b3a1fcad202a3cfc949aed26a5ff806a180">CFeatureIf::kFeatureTimeMaxAcf</a>:</div>
<div class="line"><span class="lineno">  997</span>        pCInstance = <span class="keyword">new</span> <a class="code hl_class" href="a00341.xhtml">CFeatureTimeMaxAcf</a>(eFeatureIdx, iDataLength, fSampleRate);</div>
<div class="line"><span class="lineno">  998</span>        <span class="keywordflow">break</span>;</div>
<div class="line"><span class="lineno">  999</span> </div>
<div class="line"><span class="lineno"> 1000</span>    <span class="keywordflow">case</span> <a class="code hl_enumvalue" href="a00453.xhtml#a47ca14941c604beb42d60164b3e5e6b3a138118ff8341d41558cd0b32a85eafd3">CFeatureIf::kFeatureTimePeakEnvelope</a>:</div>
<div class="line"><span class="lineno"> 1001</span>        pCInstance = <span class="keyword">new</span> <a class="code hl_class" href="a00345.xhtml">CFeatureTimePeakEnvelope</a>(eFeatureIdx, iDataLength, fSampleRate);</div>
<div class="line"><span class="lineno"> 1002</span>        <span class="keywordflow">break</span>;</div>
<div class="line"><span class="lineno"> 1003</span> </div>
<div class="line"><span class="lineno"> 1004</span>    <span class="keywordflow">case</span> <a class="code hl_enumvalue" href="a00453.xhtml#a47ca14941c604beb42d60164b3e5e6b3aedb0c71ed62a6df3eb21f53cad93682a">CFeatureIf::kFeatureTimeRms</a>:</div>
<div class="line"><span class="lineno"> 1005</span>        pCInstance = <span class="keyword">new</span> <a class="code hl_class" href="a00349.xhtml">CFeatureTimeRms</a>(eFeatureIdx, iDataLength, fSampleRate);</div>
<div class="line"><span class="lineno"> 1006</span>        <span class="keywordflow">break</span>;</div>
<div class="line"><span class="lineno"> 1007</span>    }</div>
<div class="line"><span class="lineno"> 1008</span> </div>
<div class="line"><span class="lineno"> 1009</span>    <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00116.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><span class="lineno"> 1010</span>}</div>
<div class="ttc" id="aa00116_xhtml_a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248"><div class="ttname"><a href="a00116.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248">Error_t::kFunctionInvalidArgsError</a></div><div class="ttdeci">@ kFunctionInvalidArgsError</div></div>
<div class="ttc" id="aa00317_xhtml"><div class="ttname"><a href="a00317.xhtml">CFeatureSpectralFlux</a></div><div class="ttdef"><b>Definition:</b> <a href="a00038_source.xhtml#l00328">FeatureFromBlock.cpp:329</a></div></div>
<div class="ttc" id="aa00321_xhtml"><div class="ttname"><a href="a00321.xhtml">CFeatureSpectralMfccs</a></div><div class="ttdef"><b>Definition:</b> <a href="a00038_source.xhtml#l00359">FeatureFromBlock.cpp:360</a></div></div>
<div class="ttc" id="aa00325_xhtml"><div class="ttname"><a href="a00325.xhtml">CFeatureSpectralPitchChroma</a></div><div class="ttdef"><b>Definition:</b> <a href="a00038_source.xhtml#l00509">FeatureFromBlock.cpp:510</a></div></div>
<div class="ttc" id="aa00329_xhtml"><div class="ttname"><a href="a00329.xhtml">CFeatureSpectralRolloff</a></div><div class="ttdef"><b>Definition:</b> <a href="a00038_source.xhtml#l00621">FeatureFromBlock.cpp:622</a></div></div>
<div class="ttc" id="aa00333_xhtml"><div class="ttname"><a href="a00333.xhtml">CFeatureSpectralTonalPowerRatio</a></div><div class="ttdef"><b>Definition:</b> <a href="a00038_source.xhtml#l00656">FeatureFromBlock.cpp:657</a></div></div>
<div class="ttc" id="aa00337_xhtml"><div class="ttname"><a href="a00337.xhtml">CFeatureTimeAcfCoeff</a></div><div class="ttdef"><b>Definition:</b> <a href="a00038_source.xhtml#l00691">FeatureFromBlock.cpp:692</a></div></div>
<div class="ttc" id="aa00341_xhtml"><div class="ttname"><a href="a00341.xhtml">CFeatureTimeMaxAcf</a></div><div class="ttdef"><b>Definition:</b> <a href="a00038_source.xhtml#l00726">FeatureFromBlock.cpp:727</a></div></div>
<div class="ttc" id="aa00345_xhtml"><div class="ttname"><a href="a00345.xhtml">CFeatureTimePeakEnvelope</a></div><div class="ttdef"><b>Definition:</b> <a href="a00038_source.xhtml#l00808">FeatureFromBlock.cpp:809</a></div></div>
<div class="ttc" id="aa00349_xhtml"><div class="ttname"><a href="a00349.xhtml">CFeatureTimeRms</a></div><div class="ttdef"><b>Definition:</b> <a href="a00038_source.xhtml#l00879">FeatureFromBlock.cpp:880</a></div></div>
<div class="ttc" id="aa00453_xhtml_a47ca14941c604beb42d60164b3e5e6b3a0fe1e0e5caf8fd22c48abcde74028c8f"><div class="ttname"><a href="a00453.xhtml#a47ca14941c604beb42d60164b3e5e6b3a0fe1e0e5caf8fd22c48abcde74028c8f">CFeatureIf::kFeatureSpectralRolloff</a></div><div class="ttdeci">@ kFeatureSpectralRolloff</div><div class="ttdef"><b>Definition:</b> <a href="a00215_source.xhtml#l00033">Feature.h:33</a></div></div>
<div class="ttc" id="aa00453_xhtml_a47ca14941c604beb42d60164b3e5e6b3a138118ff8341d41558cd0b32a85eafd3"><div class="ttname"><a href="a00453.xhtml#a47ca14941c604beb42d60164b3e5e6b3a138118ff8341d41558cd0b32a85eafd3">CFeatureIf::kFeatureTimePeakEnvelope</a></div><div class="ttdeci">@ kFeatureTimePeakEnvelope</div><div class="ttdef"><b>Definition:</b> <a href="a00215_source.xhtml#l00041">Feature.h:41</a></div></div>
<div class="ttc" id="aa00453_xhtml_a47ca14941c604beb42d60164b3e5e6b3a1fcad202a3cfc949aed26a5ff806a180"><div class="ttname"><a href="a00453.xhtml#a47ca14941c604beb42d60164b3e5e6b3a1fcad202a3cfc949aed26a5ff806a180">CFeatureIf::kFeatureTimeMaxAcf</a></div><div class="ttdeci">@ kFeatureTimeMaxAcf</div><div class="ttdef"><b>Definition:</b> <a href="a00215_source.xhtml#l00040">Feature.h:40</a></div></div>
<div class="ttc" id="aa00453_xhtml_a47ca14941c604beb42d60164b3e5e6b3a2e51955c0f5d4edf37bb8b0c0b7af6f5"><div class="ttname"><a href="a00453.xhtml#a47ca14941c604beb42d60164b3e5e6b3a2e51955c0f5d4edf37bb8b0c0b7af6f5">CFeatureIf::kFeatureSpectralSpread</a></div><div class="ttdeci">@ kFeatureSpectralSpread</div><div class="ttdef"><b>Definition:</b> <a href="a00215_source.xhtml#l00036">Feature.h:36</a></div></div>
<div class="ttc" id="aa00453_xhtml_a47ca14941c604beb42d60164b3e5e6b3a4358b37321d69645738c1494bb94b925"><div class="ttname"><a href="a00453.xhtml#a47ca14941c604beb42d60164b3e5e6b3a4358b37321d69645738c1494bb94b925">CFeatureIf::kFeatureTimeZeroCrossingRate</a></div><div class="ttdeci">@ kFeatureTimeZeroCrossingRate</div><div class="ttdef"><b>Definition:</b> <a href="a00215_source.xhtml#l00044">Feature.h:44</a></div></div>
<div class="ttc" id="aa00453_xhtml_a47ca14941c604beb42d60164b3e5e6b3a47c4f31d2c8d477f955da1281c8bda85"><div class="ttname"><a href="a00453.xhtml#a47ca14941c604beb42d60164b3e5e6b3a47c4f31d2c8d477f955da1281c8bda85">CFeatureIf::kFeatureSpectralMfccs</a></div><div class="ttdeci">@ kFeatureSpectralMfccs</div><div class="ttdef"><b>Definition:</b> <a href="a00215_source.xhtml#l00031">Feature.h:31</a></div></div>
<div class="ttc" id="aa00453_xhtml_a47ca14941c604beb42d60164b3e5e6b3a56e83df863061d4093933f57dc036fd0"><div class="ttname"><a href="a00453.xhtml#a47ca14941c604beb42d60164b3e5e6b3a56e83df863061d4093933f57dc036fd0">CFeatureIf::kFeatureSpectralCrestFactor</a></div><div class="ttdeci">@ kFeatureSpectralCrestFactor</div><div class="ttdef"><b>Definition:</b> <a href="a00215_source.xhtml#l00026">Feature.h:26</a></div></div>
<div class="ttc" id="aa00453_xhtml_a47ca14941c604beb42d60164b3e5e6b3a6cca75d6d116b2284ae19d2b75093198"><div class="ttname"><a href="a00453.xhtml#a47ca14941c604beb42d60164b3e5e6b3a6cca75d6d116b2284ae19d2b75093198">CFeatureIf::kFeatureSpectralPitchChroma</a></div><div class="ttdeci">@ kFeatureSpectralPitchChroma</div><div class="ttdef"><b>Definition:</b> <a href="a00215_source.xhtml#l00032">Feature.h:32</a></div></div>
<div class="ttc" id="aa00453_xhtml_a47ca14941c604beb42d60164b3e5e6b3a73840e0ec4ffc58aac491b51add4ebae"><div class="ttname"><a href="a00453.xhtml#a47ca14941c604beb42d60164b3e5e6b3a73840e0ec4ffc58aac491b51add4ebae">CFeatureIf::kFeatureSpectralDecrease</a></div><div class="ttdeci">@ kFeatureSpectralDecrease</div><div class="ttdef"><b>Definition:</b> <a href="a00215_source.xhtml#l00027">Feature.h:27</a></div></div>
<div class="ttc" id="aa00453_xhtml_a47ca14941c604beb42d60164b3e5e6b3aa0fa60f5d1741a50b4e018ae35c53084"><div class="ttname"><a href="a00453.xhtml#a47ca14941c604beb42d60164b3e5e6b3aa0fa60f5d1741a50b4e018ae35c53084">CFeatureIf::kFeatureSpectralKurtosis</a></div><div class="ttdeci">@ kFeatureSpectralKurtosis</div><div class="ttdef"><b>Definition:</b> <a href="a00215_source.xhtml#l00030">Feature.h:30</a></div></div>
<div class="ttc" id="aa00453_xhtml_a47ca14941c604beb42d60164b3e5e6b3aa7fcbc742fe20a02ec32aa842ef5d9ac"><div class="ttname"><a href="a00453.xhtml#a47ca14941c604beb42d60164b3e5e6b3aa7fcbc742fe20a02ec32aa842ef5d9ac">CFeatureIf::kFeatureTimeStd</a></div><div class="ttdeci">@ kFeatureTimeStd</div><div class="ttdef"><b>Definition:</b> <a href="a00215_source.xhtml#l00043">Feature.h:43</a></div></div>
<div class="ttc" id="aa00453_xhtml_a47ca14941c604beb42d60164b3e5e6b3ab48b0af125a41eb628e2867f53248828"><div class="ttname"><a href="a00453.xhtml#a47ca14941c604beb42d60164b3e5e6b3ab48b0af125a41eb628e2867f53248828">CFeatureIf::kFeatureSpectralSlope</a></div><div class="ttdeci">@ kFeatureSpectralSlope</div><div class="ttdef"><b>Definition:</b> <a href="a00215_source.xhtml#l00035">Feature.h:35</a></div></div>
<div class="ttc" id="aa00453_xhtml_a47ca14941c604beb42d60164b3e5e6b3ab6c784d49502082864d1ff9170564dcd"><div class="ttname"><a href="a00453.xhtml#a47ca14941c604beb42d60164b3e5e6b3ab6c784d49502082864d1ff9170564dcd">CFeatureIf::kFeatureTimeAcfCoeff</a></div><div class="ttdeci">@ kFeatureTimeAcfCoeff</div><div class="ttdef"><b>Definition:</b> <a href="a00215_source.xhtml#l00039">Feature.h:39</a></div></div>
<div class="ttc" id="aa00453_xhtml_a47ca14941c604beb42d60164b3e5e6b3ab91719fe00fbcbbd34b7b5b0e7631dfd"><div class="ttname"><a href="a00453.xhtml#a47ca14941c604beb42d60164b3e5e6b3ab91719fe00fbcbbd34b7b5b0e7631dfd">CFeatureIf::kFeatureSpectralTonalPowerRatio</a></div><div class="ttdeci">@ kFeatureSpectralTonalPowerRatio</div><div class="ttdef"><b>Definition:</b> <a href="a00215_source.xhtml#l00037">Feature.h:37</a></div></div>
<div class="ttc" id="aa00453_xhtml_a47ca14941c604beb42d60164b3e5e6b3ababfc8ce9c5b272fd805b5e8a1fb5ff6"><div class="ttname"><a href="a00453.xhtml#a47ca14941c604beb42d60164b3e5e6b3ababfc8ce9c5b272fd805b5e8a1fb5ff6">CFeatureIf::kFeatureSpectralFlux</a></div><div class="ttdeci">@ kFeatureSpectralFlux</div><div class="ttdef"><b>Definition:</b> <a href="a00215_source.xhtml#l00029">Feature.h:29</a></div></div>
<div class="ttc" id="aa00453_xhtml_a47ca14941c604beb42d60164b3e5e6b3abe659e5b25086d04ed78c40d7411b71d"><div class="ttname"><a href="a00453.xhtml#a47ca14941c604beb42d60164b3e5e6b3abe659e5b25086d04ed78c40d7411b71d">CFeatureIf::kFeatureSpectralFlatness</a></div><div class="ttdeci">@ kFeatureSpectralFlatness</div><div class="ttdef"><b>Definition:</b> <a href="a00215_source.xhtml#l00028">Feature.h:28</a></div></div>
<div class="ttc" id="aa00453_xhtml_a47ca14941c604beb42d60164b3e5e6b3adc99879506ae42b73740c06987993d6b"><div class="ttname"><a href="a00453.xhtml#a47ca14941c604beb42d60164b3e5e6b3adc99879506ae42b73740c06987993d6b">CFeatureIf::kFeatureSpectralSkewness</a></div><div class="ttdeci">@ kFeatureSpectralSkewness</div><div class="ttdef"><b>Definition:</b> <a href="a00215_source.xhtml#l00034">Feature.h:34</a></div></div>
<div class="ttc" id="aa00453_xhtml_a47ca14941c604beb42d60164b3e5e6b3aedb0c71ed62a6df3eb21f53cad93682a"><div class="ttname"><a href="a00453.xhtml#a47ca14941c604beb42d60164b3e5e6b3aedb0c71ed62a6df3eb21f53cad93682a">CFeatureIf::kFeatureTimeRms</a></div><div class="ttdeci">@ kFeatureTimeRms</div><div class="ttdef"><b>Definition:</b> <a href="a00215_source.xhtml#l00042">Feature.h:42</a></div></div>
<div class="ttc" id="aa00453_xhtml_a47ca14941c604beb42d60164b3e5e6b3af835ba1196c45135d5b2c14bd71765fe"><div class="ttname"><a href="a00453.xhtml#a47ca14941c604beb42d60164b3e5e6b3af835ba1196c45135d5b2c14bd71765fe">CFeatureIf::kFeatureSpectralCentroid</a></div><div class="ttdeci">@ kFeatureSpectralCentroid</div><div class="ttdef"><b>Definition:</b> <a href="a00215_source.xhtml#l00025">Feature.h:25</a></div></div>
<div class="ttc" id="aa00457_xhtml_a483bca508e2817799a3173a6180d245e"><div class="ttname"><a href="a00457.xhtml#a483bca508e2817799a3173a6180d245e">CFeatureFromBlockIf::CFeatureFromBlockIf</a></div><div class="ttdeci">CFeatureFromBlockIf()</div><div class="ttdef"><b>Definition:</b> <a href="a00128_source.xhtml#l00088">FeatureFromBlock.h:88</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00128_source.xhtml#l00088">CFeatureFromBlockIf()</a>, <a class="el" href="a00215_source.xhtml#l00025">CFeatureIf::kFeatureSpectralCentroid</a>, <a class="el" href="a00215_source.xhtml#l00026">CFeatureIf::kFeatureSpectralCrestFactor</a>, <a class="el" href="a00215_source.xhtml#l00027">CFeatureIf::kFeatureSpectralDecrease</a>, <a class="el" href="a00215_source.xhtml#l00028">CFeatureIf::kFeatureSpectralFlatness</a>, <a class="el" href="a00215_source.xhtml#l00029">CFeatureIf::kFeatureSpectralFlux</a>, <a class="el" href="a00215_source.xhtml#l00030">CFeatureIf::kFeatureSpectralKurtosis</a>, <a class="el" href="a00215_source.xhtml#l00031">CFeatureIf::kFeatureSpectralMfccs</a>, <a class="el" href="a00215_source.xhtml#l00032">CFeatureIf::kFeatureSpectralPitchChroma</a>, <a class="el" href="a00215_source.xhtml#l00033">CFeatureIf::kFeatureSpectralRolloff</a>, <a class="el" href="a00215_source.xhtml#l00034">CFeatureIf::kFeatureSpectralSkewness</a>, <a class="el" href="a00215_source.xhtml#l00035">CFeatureIf::kFeatureSpectralSlope</a>, <a class="el" href="a00215_source.xhtml#l00036">CFeatureIf::kFeatureSpectralSpread</a>, <a class="el" href="a00215_source.xhtml#l00037">CFeatureIf::kFeatureSpectralTonalPowerRatio</a>, <a class="el" href="a00215_source.xhtml#l00039">CFeatureIf::kFeatureTimeAcfCoeff</a>, <a class="el" href="a00215_source.xhtml#l00040">CFeatureIf::kFeatureTimeMaxAcf</a>, <a class="el" href="a00215_source.xhtml#l00041">CFeatureIf::kFeatureTimePeakEnvelope</a>, <a class="el" href="a00215_source.xhtml#l00042">CFeatureIf::kFeatureTimeRms</a>, <a class="el" href="a00215_source.xhtml#l00043">CFeatureIf::kFeatureTimeStd</a>, <a class="el" href="a00215_source.xhtml#l00044">CFeatureIf::kFeatureTimeZeroCrossingRate</a>, <a class="el" href="a00116.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248">kFunctionInvalidArgsError</a>, and <a class="el" href="a00116.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">kNoError</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00056_source.xhtml#l00053">CChordFromBlockIf::CChordFromBlockIf()</a>, and <a class="el" href="a00050_source.xhtml#l00349">CFeatureIf::init_()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00457_a6d3ca4f66582ae352e3addfd7f99a752_cgraph.svg" width="358" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00457_a6d3ca4f66582ae352e3addfd7f99a752_icgraph.svg" width="100%" height="454"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="a300e7b2134b2bd0faaa24cfecbd9cb51" name="a300e7b2134b2bd0faaa24cfecbd9cb51"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a300e7b2134b2bd0faaa24cfecbd9cb51">&#9670;&nbsp;</a></span>destroy()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00116.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> CFeatureFromBlockIf::destroy </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="a00457.xhtml">CFeatureFromBlockIf</a> *&amp;&#160;</td>
          <td class="paramname"><em>pCInstance</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p >destroys a FeatureFromBlock instance </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pCInstance</td><td>pointer to instance to be destroyed </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Error_t </dd></dl>

<p class="definition">Definition at line <a class="el" href="a00038_source.xhtml#l01012">1012</a> of file <a class="el" href="a00038_source.xhtml">FeatureFromBlock.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno"> 1013</span>{</div>
<div class="line"><span class="lineno"> 1014</span>    <span class="keyword">delete</span> pCInstance;</div>
<div class="line"><span class="lineno"> 1015</span> </div>
<div class="line"><span class="lineno"> 1016</span>    pCInstance = 0;</div>
<div class="line"><span class="lineno"> 1017</span> </div>
<div class="line"><span class="lineno"> 1018</span>    <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00116.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><span class="lineno"> 1019</span>}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00116.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">kNoError</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00050_source.xhtml#l00326">CFeatureIf::reset_()</a>, and <a class="el" href="a00056_source.xhtml#l00063">CChordFromBlockIf::~CChordFromBlockIf()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00457_a300e7b2134b2bd0faaa24cfecbd9cb51_icgraph.svg" width="582" height="170"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a8bf822f58aa66fc4787c5528352575c0" name="a8bf822f58aa66fc4787c5528352575c0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8bf822f58aa66fc4787c5528352575c0">&#9670;&nbsp;</a></span>getFeatureDimensions()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int CFeatureFromBlockIf::getFeatureDimensions </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p >returns size of output feature (1 in most cases) </p><dl class="section return"><dt>Returns</dt><dd>int </dd></dl>

<p>Reimplemented in <a class="el" href="a00321.xhtml#a8cf08736ea318aa731360a217eba5340">CFeatureSpectralMfccs</a>, <a class="el" href="a00325.xhtml#a3da23c0c38b2876adb5e302419817592">CFeatureSpectralPitchChroma</a>, <a class="el" href="a00345.xhtml#a55891d1e487afbe095399d19ab078469">CFeatureTimePeakEnvelope</a>, and <a class="el" href="a00349.xhtml#a69b3e227ffcbca082fbe0aac97a8e267">CFeatureTimeRms</a>.</p>

<p class="definition">Definition at line <a class="el" href="a00038_source.xhtml#l01021">1021</a> of file <a class="el" href="a00038_source.xhtml">FeatureFromBlock.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno"> 1022</span>{</div>
<div class="line"><span class="lineno"> 1023</span>    <span class="comment">// default: 1 value per block</span></div>
<div class="line"><span class="lineno"> 1024</span>    <span class="keywordflow">return</span> 1;</div>
<div class="line"><span class="lineno"> 1025</span>}</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="a00050_source.xhtml#l00213">CFeatureIf::compFeatureNDim()</a>, and <a class="el" href="a00050_source.xhtml#l00138">CFeatureIf::getFeatureDimensions()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00457_a8bf822f58aa66fc4787c5528352575c0_icgraph.svg" width="100%" height="366"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="ab6ab50f7ebebbabec7e1610bc04a3328" name="ab6ab50f7ebebbabec7e1610bc04a3328"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab6ab50f7ebebbabec7e1610bc04a3328">&#9670;&nbsp;</a></span>getFeatureIdx()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00453.xhtml#a47ca14941c604beb42d60164b3e5e6b3">CFeatureIf::Feature_t</a> CFeatureFromBlockIf::getFeatureIdx </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p >returns index of the feature to extract </p><dl class="section return"><dt>Returns</dt><dd><a class="el" href="a00453.xhtml#a47ca14941c604beb42d60164b3e5e6b3" title="enum to index all features note: update CFeatureIf::isFeatureSpectral_() when modifying">CFeatureIf::Feature_t</a> </dd></dl>

<p class="definition">Definition at line <a class="el" href="a00128_source.xhtml#l00041">41</a> of file <a class="el" href="a00128_source.xhtml">FeatureFromBlock.h</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   42</span>    {</div>
<div class="line"><span class="lineno">   43</span>        <span class="keywordflow">return</span> <a class="code hl_variable" href="a00457.xhtml#a3cdaa6a50139576cf1aaa73f4b0d3b6f">m_eFeatureIdx</a>;</div>
<div class="line"><span class="lineno">   44</span>    }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00128_source.xhtml#l00094">m_eFeatureIdx</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00050_source.xhtml#l00179">CFeatureIf::compFeature1Dim()</a>, and <a class="el" href="a00050_source.xhtml#l00213">CFeatureIf::compFeatureNDim()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00457_ab6ab50f7ebebbabec7e1610bc04a3328_icgraph.svg" width="664" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a41daabd1afa9c2307c64b431fcf8da62" name="a41daabd1afa9c2307c64b431fcf8da62"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a41daabd1afa9c2307c64b431fcf8da62">&#9670;&nbsp;</a></span>hasAdditionalParam()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00239.xhtml#abb452686968e48b67397da5f97445f5b">bool</a> CFeatureFromBlockIf::hasAdditionalParam </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p >returns true if there is an additional parameter </p><dl class="section return"><dt>Returns</dt><dd>bool </dd></dl>

<p>Reimplemented in <a class="el" href="a00321.xhtml#ab3adc3df302d75ed8be5918eb18a52ab">CFeatureSpectralMfccs</a>, <a class="el" href="a00325.xhtml#acc84644f16e3d4518062e2843ab896e5">CFeatureSpectralPitchChroma</a>, <a class="el" href="a00329.xhtml#aace9db3eee49887a8fae69c07475fe19">CFeatureSpectralRolloff</a>, <a class="el" href="a00333.xhtml#abbf784ac24f69555002f2bae7fec93bf">CFeatureSpectralTonalPowerRatio</a>, <a class="el" href="a00337.xhtml#a799b62c99e4e4ab09aae77e73f85a1af">CFeatureTimeAcfCoeff</a>, <a class="el" href="a00341.xhtml#a03964245e9d7da47e512283728da4cd4">CFeatureTimeMaxAcf</a>, and <a class="el" href="a00349.xhtml#a0ac27ca50b3a6e88b08536fdcdd2b466">CFeatureTimeRms</a>.</p>

<p class="definition">Definition at line <a class="el" href="a00038_source.xhtml#l01035">1035</a> of file <a class="el" href="a00038_source.xhtml">FeatureFromBlock.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno"> 1036</span>{</div>
<div class="line"><span class="lineno"> 1037</span>    <span class="comment">// default: feature doesn&#39;t need any additional parameters</span></div>
<div class="line"><span class="lineno"> 1038</span>    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><span class="lineno"> 1039</span>}</div>
</div><!-- fragment -->
</div>
</div>
<a id="af9650d7b6bb5362a2c4be9154e777089" name="af9650d7b6bb5362a2c4be9154e777089"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af9650d7b6bb5362a2c4be9154e777089">&#9670;&nbsp;</a></span>operator=()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00457.xhtml">CFeatureFromBlockIf</a> &amp; CFeatureFromBlockIf::operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="a00457.xhtml">CFeatureFromBlockIf</a> &amp;&#160;</td>
          <td class="paramname"><em>c</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a7f3f62f3787b0ddc4c8938f5d54170af" name="a7f3f62f3787b0ddc4c8938f5d54170af"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7f3f62f3787b0ddc4c8938f5d54170af">&#9670;&nbsp;</a></span>setAdditionalParam()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00116.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> CFeatureFromBlockIf::setAdditionalParam </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fParamValue</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p >returns true if there is an additional parameter </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">fParamValue</td><td>new parameter value </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>bool </dd></dl>

<p>Reimplemented in <a class="el" href="a00321.xhtml#a6ffd2585db71bf5b44aedc15223525e6">CFeatureSpectralMfccs</a>, <a class="el" href="a00325.xhtml#a6b4b3032eb9b09d9f64811613448c994">CFeatureSpectralPitchChroma</a>, <a class="el" href="a00329.xhtml#ae0c52ddeb125740c60dd33c003e6b257">CFeatureSpectralRolloff</a>, <a class="el" href="a00333.xhtml#a0f92352db0347a6295d817ddc2a5d5db">CFeatureSpectralTonalPowerRatio</a>, <a class="el" href="a00337.xhtml#a6c123f32dc4ddf5b63ff41d03ea574a2">CFeatureTimeAcfCoeff</a>, <a class="el" href="a00341.xhtml#ad08d755145fa0227b7e489000703ee30">CFeatureTimeMaxAcf</a>, and <a class="el" href="a00349.xhtml#af460352621ac7a18676d0a361c1df51e">CFeatureTimeRms</a>.</p>

<p class="definition">Definition at line <a class="el" href="a00038_source.xhtml#l01041">1041</a> of file <a class="el" href="a00038_source.xhtml">FeatureFromBlock.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno"> 1042</span>{</div>
<div class="line"><span class="lineno"> 1043</span>    <span class="comment">// default: setting a parameter that doesn&#39;t exist</span></div>
<div class="line"><span class="lineno"> 1044</span>    <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00116.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fad7652bf47cff43c21f12cb7df4ca66ec">Error_t::kFunctionIllegalCallError</a>;</div>
<div class="line"><span class="lineno"> 1045</span>}</div>
<div class="ttc" id="aa00116_xhtml_a4e8c0d09726859e3d3369c0da5a1aa7fad7652bf47cff43c21f12cb7df4ca66ec"><div class="ttname"><a href="a00116.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fad7652bf47cff43c21f12cb7df4ca66ec">Error_t::kFunctionIllegalCallError</a></div><div class="ttdeci">@ kFunctionIllegalCallError</div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00116.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fad7652bf47cff43c21f12cb7df4ca66ec">kFunctionIllegalCallError</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="a21d3edee07a3b9f4d0af407479591a6c" name="a21d3edee07a3b9f4d0af407479591a6c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a21d3edee07a3b9f4d0af407479591a6c">&#9670;&nbsp;</a></span>m_DispatchMap</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const std::map&lt;<a class="el" href="a00453.xhtml#a47ca14941c604beb42d60164b3e5e6b3">CFeatureIf::Feature_t</a>, std::function&lt;float(const float*, int, float)&gt; &gt; CFeatureFromBlockIf::m_DispatchMap</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line">{</div>
<div class="line">            {<a class="code hl_enumvalue" href="a00453.xhtml#a47ca14941c604beb42d60164b3e5e6b3af835ba1196c45135d5b2c14bd71765fe">CFeatureIf::kFeatureSpectralCentroid</a>, &amp;<a class="code hl_function" href="a00457.xhtml#a880a58f05522dfd1f0f16f26c34703db">compFeatureSpectralCentroid</a>},</div>
<div class="line">            {<a class="code hl_enumvalue" href="a00453.xhtml#a47ca14941c604beb42d60164b3e5e6b3a56e83df863061d4093933f57dc036fd0">CFeatureIf::kFeatureSpectralCrestFactor</a>, &amp;<a class="code hl_function" href="a00457.xhtml#a15df133306497e4f85929692354f378a">compFeatureSpectralCrestFactor</a>},</div>
<div class="line">            {<a class="code hl_enumvalue" href="a00453.xhtml#a47ca14941c604beb42d60164b3e5e6b3a73840e0ec4ffc58aac491b51add4ebae">CFeatureIf::kFeatureSpectralDecrease</a>, &amp;<a class="code hl_function" href="a00457.xhtml#a9e03b3181d7ff9d8a9b0eaedabff9899">compFeatureSpectralDecrease</a>},</div>
<div class="line">            {<a class="code hl_enumvalue" href="a00453.xhtml#a47ca14941c604beb42d60164b3e5e6b3abe659e5b25086d04ed78c40d7411b71d">CFeatureIf::kFeatureSpectralFlatness</a>, &amp;<a class="code hl_function" href="a00457.xhtml#a361ef81afe12623645546fbbeab30b14">compFeatureSpectralFlatness</a>},</div>
<div class="line">            {<a class="code hl_enumvalue" href="a00453.xhtml#a47ca14941c604beb42d60164b3e5e6b3aa0fa60f5d1741a50b4e018ae35c53084">CFeatureIf::kFeatureSpectralKurtosis</a>, &amp;<a class="code hl_function" href="a00457.xhtml#aff5ebe0708311c49ba85c03c4546b6cf">compFeatureSpectralKurtosis</a>},</div>
<div class="line">            {<a class="code hl_enumvalue" href="a00453.xhtml#a47ca14941c604beb42d60164b3e5e6b3adc99879506ae42b73740c06987993d6b">CFeatureIf::kFeatureSpectralSkewness</a>, &amp;<a class="code hl_function" href="a00457.xhtml#af130d46bb6a964262acb138fc7b7b9fd">compFeatureSpectralSkewness</a>},</div>
<div class="line">            {<a class="code hl_enumvalue" href="a00453.xhtml#a47ca14941c604beb42d60164b3e5e6b3ab48b0af125a41eb628e2867f53248828">CFeatureIf::kFeatureSpectralSlope</a>, &amp;<a class="code hl_function" href="a00457.xhtml#a8c8ded721d053ed4f34565a1392993fc">compFeatureSpectralSlope</a>},</div>
<div class="line">            {<a class="code hl_enumvalue" href="a00453.xhtml#a47ca14941c604beb42d60164b3e5e6b3a2e51955c0f5d4edf37bb8b0c0b7af6f5">CFeatureIf::kFeatureSpectralSpread</a>, &amp;<a class="code hl_function" href="a00457.xhtml#aa97614c73430e57facec7a88bee49c9f">compFeatureSpectralSpread</a>},</div>
<div class="line">            {<a class="code hl_enumvalue" href="a00453.xhtml#a47ca14941c604beb42d60164b3e5e6b3aa7fcbc742fe20a02ec32aa842ef5d9ac">CFeatureIf::kFeatureTimeStd</a>, &amp;<a class="code hl_function" href="a00457.xhtml#a4eca7f209c771fb5008fa08facffd598">compFeatureTimeStd</a>},</div>
<div class="line">            {<a class="code hl_enumvalue" href="a00453.xhtml#a47ca14941c604beb42d60164b3e5e6b3a4358b37321d69645738c1494bb94b925">CFeatureIf::kFeatureTimeZeroCrossingRate</a>, &amp;<a class="code hl_function" href="a00457.xhtml#add9e6742349500c1323607b2508d311d">compFeatureTimeZeroCrossingRate</a>}</div>
<div class="line">    }</div>
<div class="ttc" id="aa00457_xhtml_a15df133306497e4f85929692354f378a"><div class="ttname"><a href="a00457.xhtml#a15df133306497e4f85929692354f378a">CFeatureFromBlockIf::compFeatureSpectralCrestFactor</a></div><div class="ttdeci">static float compFeatureSpectralCrestFactor(const float *pfMagSpec, int iDataLength, float fSampleRate=1.F)</div><div class="ttdef"><b>Definition:</b> <a href="a00038_source.xhtml#l00038">FeatureFromBlock.cpp:38</a></div></div>
<div class="ttc" id="aa00457_xhtml_a361ef81afe12623645546fbbeab30b14"><div class="ttname"><a href="a00457.xhtml#a361ef81afe12623645546fbbeab30b14">CFeatureFromBlockIf::compFeatureSpectralFlatness</a></div><div class="ttdeci">static float compFeatureSpectralFlatness(const float *pfMagSpec, int iDataLength, float fSampleRate=1.F)</div><div class="ttdef"><b>Definition:</b> <a href="a00038_source.xhtml#l00071">FeatureFromBlock.cpp:71</a></div></div>
<div class="ttc" id="aa00457_xhtml_a4eca7f209c771fb5008fa08facffd598"><div class="ttname"><a href="a00457.xhtml#a4eca7f209c771fb5008fa08facffd598">CFeatureFromBlockIf::compFeatureTimeStd</a></div><div class="ttdeci">static float compFeatureTimeStd(const float *pfSamples, int iDataLength, float fSampleRate=1.F)</div><div class="ttdef"><b>Definition:</b> <a href="a00038_source.xhtml#l00288">FeatureFromBlock.cpp:288</a></div></div>
<div class="ttc" id="aa00457_xhtml_a8c8ded721d053ed4f34565a1392993fc"><div class="ttname"><a href="a00457.xhtml#a8c8ded721d053ed4f34565a1392993fc">CFeatureFromBlockIf::compFeatureSpectralSlope</a></div><div class="ttdeci">static float compFeatureSpectralSlope(const float *pfMagSpec, int iDataLength, float fSampleRate=1.F)</div><div class="ttdef"><b>Definition:</b> <a href="a00038_source.xhtml#l00212">FeatureFromBlock.cpp:212</a></div></div>
<div class="ttc" id="aa00457_xhtml_a9e03b3181d7ff9d8a9b0eaedabff9899"><div class="ttname"><a href="a00457.xhtml#a9e03b3181d7ff9d8a9b0eaedabff9899">CFeatureFromBlockIf::compFeatureSpectralDecrease</a></div><div class="ttdeci">static float compFeatureSpectralDecrease(const float *pfMagSpec, int iDataLength, float fSampleRate=1.F)</div><div class="ttdef"><b>Definition:</b> <a href="a00038_source.xhtml#l00051">FeatureFromBlock.cpp:51</a></div></div>
<div class="ttc" id="aa00457_xhtml_add9e6742349500c1323607b2508d311d"><div class="ttname"><a href="a00457.xhtml#add9e6742349500c1323607b2508d311d">CFeatureFromBlockIf::compFeatureTimeZeroCrossingRate</a></div><div class="ttdeci">static float compFeatureTimeZeroCrossingRate(const float *pfSamples, int iDataLength, float fSampleRate=1.F)</div><div class="ttdef"><b>Definition:</b> <a href="a00038_source.xhtml#l00304">FeatureFromBlock.cpp:304</a></div></div>
<div class="ttc" id="aa00457_xhtml_af130d46bb6a964262acb138fc7b7b9fd"><div class="ttname"><a href="a00457.xhtml#af130d46bb6a964262acb138fc7b7b9fd">CFeatureFromBlockIf::compFeatureSpectralSkewness</a></div><div class="ttdeci">static float compFeatureSpectralSkewness(const float *pfMagSpec, int iDataLength, float fSampleRate=1.F)</div><div class="ttdef"><b>Definition:</b> <a href="a00038_source.xhtml#l00185">FeatureFromBlock.cpp:185</a></div></div>
<div class="ttc" id="aa00457_xhtml_aff5ebe0708311c49ba85c03c4546b6cf"><div class="ttname"><a href="a00457.xhtml#aff5ebe0708311c49ba85c03c4546b6cf">CFeatureFromBlockIf::compFeatureSpectralKurtosis</a></div><div class="ttdeci">static float compFeatureSpectralKurtosis(const float *pfMagSpec, int iDataLength, float fSampleRate=1.F)</div><div class="ttdef"><b>Definition:</b> <a href="a00038_source.xhtml#l00130">FeatureFromBlock.cpp:130</a></div></div>
</div><!-- fragment -->
<p class="definition">Definition at line <a class="el" href="a00128_source.xhtml#l00101">101</a> of file <a class="el" href="a00128_source.xhtml">FeatureFromBlock.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00038_source.xhtml#l01027">compFeature()</a>.</p>

</div>
</div>
<a id="a3cdaa6a50139576cf1aaa73f4b0d3b6f" name="a3cdaa6a50139576cf1aaa73f4b0d3b6f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3cdaa6a50139576cf1aaa73f4b0d3b6f">&#9670;&nbsp;</a></span>m_eFeatureIdx</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00453.xhtml#a47ca14941c604beb42d60164b3e5e6b3">CFeatureIf::Feature_t</a> CFeatureFromBlockIf::m_eFeatureIdx = <a class="el" href="a00453.xhtml#a47ca14941c604beb42d60164b3e5e6b3abe9b4914b84bc00da1aacb5f0068545d">CFeatureIf::kNumFeatures</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>index of feature to extract </p>

<p class="definition">Definition at line <a class="el" href="a00128_source.xhtml#l00094">94</a> of file <a class="el" href="a00128_source.xhtml">FeatureFromBlock.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00038_source.xhtml#l01027">compFeature()</a>, and <a class="el" href="a00128_source.xhtml#l00041">getFeatureIdx()</a>.</p>

</div>
</div>
<a id="a75ac4ef94667058662a8100bb1c1e1cd" name="a75ac4ef94667058662a8100bb1c1e1cd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a75ac4ef94667058662a8100bb1c1e1cd">&#9670;&nbsp;</a></span>m_fSampleRate</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float CFeatureFromBlockIf::m_fSampleRate = 0</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>sample rate </p>
<p >dispatcher map for static functions without additional arguments </p>

<p class="definition">Definition at line <a class="el" href="a00128_source.xhtml#l00098">98</a> of file <a class="el" href="a00128_source.xhtml">FeatureFromBlock.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00038_source.xhtml#l01027">compFeature()</a>, <a class="el" href="a00038_source.xhtml#l00342">CFeatureSpectralFlux::compFeature()</a>, <a class="el" href="a00038_source.xhtml#l00628">CFeatureSpectralRolloff::compFeature()</a>, <a class="el" href="a00038_source.xhtml#l00663">CFeatureSpectralTonalPowerRatio::compFeature()</a>, <a class="el" href="a00038_source.xhtml#l00698">CFeatureTimeAcfCoeff::compFeature()</a>, <a class="el" href="a00038_source.xhtml#l00745">CFeatureTimeMaxAcf::compFeature()</a>, <a class="el" href="a00038_source.xhtml#l00819">CFeatureTimePeakEnvelope::compFeature()</a>, <a class="el" href="a00038_source.xhtml#l00893">CFeatureTimeRms::compFeature()</a>, <a class="el" href="a00038_source.xhtml#l00425">CFeatureSpectralMfccs::genMfccFilters_()</a>, <a class="el" href="a00038_source.xhtml#l00577">CFeatureSpectralPitchChroma::genPcFilters_()</a>, and <a class="el" href="a00038_source.xhtml#l00787">CFeatureTimeMaxAcf::setAdditionalParam()</a>.</p>

</div>
</div>
<a id="a2fefdb1b1217edd46c2b4e9336fa2aed" name="a2fefdb1b1217edd46c2b4e9336fa2aed"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2fefdb1b1217edd46c2b4e9336fa2aed">&#9670;&nbsp;</a></span>m_iDataLength</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int CFeatureFromBlockIf::m_iDataLength = 0</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>block length </p>

<p class="definition">Definition at line <a class="el" href="a00128_source.xhtml#l00096">96</a> of file <a class="el" href="a00128_source.xhtml">FeatureFromBlock.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00038_source.xhtml#l00331">CFeatureSpectralFlux::CFeatureSpectralFlux()</a>, <a class="el" href="a00038_source.xhtml#l01027">compFeature()</a>, <a class="el" href="a00038_source.xhtml#l00342">CFeatureSpectralFlux::compFeature()</a>, <a class="el" href="a00038_source.xhtml#l00382">CFeatureSpectralMfccs::compFeature()</a>, <a class="el" href="a00038_source.xhtml#l00525">CFeatureSpectralPitchChroma::compFeature()</a>, <a class="el" href="a00038_source.xhtml#l00628">CFeatureSpectralRolloff::compFeature()</a>, <a class="el" href="a00038_source.xhtml#l00663">CFeatureSpectralTonalPowerRatio::compFeature()</a>, <a class="el" href="a00038_source.xhtml#l00698">CFeatureTimeAcfCoeff::compFeature()</a>, <a class="el" href="a00038_source.xhtml#l00745">CFeatureTimeMaxAcf::compFeature()</a>, <a class="el" href="a00038_source.xhtml#l00819">CFeatureTimePeakEnvelope::compFeature()</a>, <a class="el" href="a00038_source.xhtml#l00893">CFeatureTimeRms::compFeature()</a>, <a class="el" href="a00038_source.xhtml#l00425">CFeatureSpectralMfccs::genMfccFilters_()</a>, and <a class="el" href="a00038_source.xhtml#l00577">CFeatureSpectralPitchChroma::genPcFilters_()</a>.</p>

</div>
</div>
<a id="a23b1d6639637a13587d5529a57f3bf78" name="a23b1d6639637a13587d5529a57f3bf78"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a23b1d6639637a13587d5529a57f3bf78">&#9670;&nbsp;</a></span>m_kfFloatThresh</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const float CFeatureFromBlockIf::m_kfFloatThresh = 1e-30F</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>below this we just assume it's zero </p>

<p class="definition">Definition at line <a class="el" href="a00128_source.xhtml#l00084">84</a> of file <a class="el" href="a00128_source.xhtml">FeatureFromBlock.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00038_source.xhtml#l00016">compFeatureSpectralCentroid()</a>, <a class="el" href="a00038_source.xhtml#l00038">compFeatureSpectralCrestFactor()</a>, <a class="el" href="a00038_source.xhtml#l00051">compFeatureSpectralDecrease()</a>, <a class="el" href="a00038_source.xhtml#l00071">compFeatureSpectralFlatness()</a>, <a class="el" href="a00038_source.xhtml#l00130">compFeatureSpectralKurtosis()</a>, <a class="el" href="a00038_source.xhtml#l00158">compFeatureSpectralRolloff()</a>, <a class="el" href="a00038_source.xhtml#l00185">compFeatureSpectralSkewness()</a>, <a class="el" href="a00038_source.xhtml#l00212">compFeatureSpectralSlope()</a>, <a class="el" href="a00038_source.xhtml#l00106">compFeatureSpectralSpread()</a>, and <a class="el" href="a00038_source.xhtml#l00238">compFeatureSpectralTonalPowerRatio()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="a00128_source.xhtml">FeatureFromBlock.h</a></li>
<li><a class="el" href="a00038_source.xhtml">FeatureFromBlock.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="a00457.xhtml">CFeatureFromBlockIf</a></li>
    <li class="footer">Generated on Sun Jun 12 2022 20:38:38 for ACA by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.4 </li>
  </ul>
</div>
</body>
</html>
