<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.4"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ACA: Class Index</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">ACA<span id="projectnumber">&#160;0.2.6</span>
   </div>
   <div id="projectbrief">Example Code for Audio Content Analysis</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.4 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search",'Search','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('classes.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle"><div class="title">Class Index</div></div>
</div><!--header-->
<div class="contents">
<div class="qindex"><a class="qindex" href="#letter_A">A</a>&#160;|&#160;<a class="qindex" href="#letter_B">B</a>&#160;|&#160;<a class="qindex" href="#letter_C">C</a>&#160;|&#160;<a class="qindex" href="#letter_D">D</a>&#160;|&#160;<a class="qindex" href="#letter_E">E</a>&#160;|&#160;<a class="qindex" href="#letter_F">F</a>&#160;|&#160;<a class="qindex" href="#letter_G">G</a>&#160;|&#160;<a class="qindex" href="#letter_I">I</a>&#160;|&#160;<a class="qindex" href="#letter_L">L</a>&#160;|&#160;<a class="qindex" href="#letter_M">M</a>&#160;|&#160;<a class="qindex" href="#letter_N">N</a>&#160;|&#160;<a class="qindex" href="#letter_O">O</a>&#160;|&#160;<a class="qindex" href="#letter_P">P</a>&#160;|&#160;<a class="qindex" href="#letter_R">R</a>&#160;|&#160;<a class="qindex" href="#letter_S">S</a>&#160;|&#160;<a class="qindex" href="#letter_T">T</a>&#160;|&#160;<a class="qindex" href="#letter_U">U</a>&#160;|&#160;<a class="qindex" href="#letter_V">V</a>&#160;|&#160;<a class="qindex" href="#letter_W">W</a></div>
<div class="classindex">
<dl class="classindex even">
<dt class="alphachar"><a id="letter_A" name="letter_A">A</a></dt>
<dd><a class="el" href="a00655.xhtml">always_false</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd><dd><a class="el" href="a00951.xhtml">Approx</a> (<a class="el" href="a00289.xhtml">Catch::Detail</a>)</dd><dd><a class="el" href="a01047.xhtml">ApproxMatcher</a> (<a class="el" href="a00299.xhtml">Catch::Matchers::Vector</a>)</dd><dd><a class="el" href="a01091.xhtml">as</a> (<a class="el" href="a00300.xhtml">Catch::Generators</a>)</dd><dd><a class="el" href="a00879.xhtml">AssertionHandler</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd><dd><a class="el" href="a00695.xhtml">AssertionInfo</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd><dd><a class="el" href="a00875.xhtml">AssertionReaction</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd><dd><a class="el" href="a00683.xhtml">AutoReg</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd></dl>
<dl class="classindex odd">
<dt class="alphachar"><a id="letter_B" name="letter_B">B</a></dt>
<dd><a class="el" href="a00847.xhtml">BinaryExpr</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd></dl>
<dl class="classindex even">
<dt class="alphachar"><a id="letter_C" name="letter_C">C</a></dt>
<dd><a class="el" href="a00899.xhtml">Capturer</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd><dd><a class="el" href="a01007.xhtml">CasedString</a> (<a class="el" href="a00298.xhtml">Catch::Matchers::StdString</a>)</dd><dd><a class="el" href="a00623.xhtml">CaseSensitive</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd><dd><a class="el" href="a00619.xhtml">Catch_global_namespace_dummy</a></dd><dd><a class="el" href="a00439.xhtml">CAudioFileIf</a></dd><dd><a class="el" href="a00431.xhtml">CAudioFileRaw</a></dd><dd><a class="el" href="a00435.xhtml">CAudioFileSndLib</a></dd><dd><a class="el" href="a00447.xhtml">CBeatHistoIf</a></dd><dd><a class="el" href="a00411.xhtml">CBlockAudioBuffer</a></dd><dd><a class="el" href="a00407.xhtml">CBlockAudioFile</a></dd><dd><a class="el" href="a00535.xhtml">CBlockAudioIf</a></dd><dd><a class="el" href="a00475.xhtml">CButterLp</a></dd><dd><a class="el" href="a00539.xhtml">CCcf</a></dd><dd><a class="el" href="a00455.xhtml">CChordFromBlockIf</a></dd><dd><a class="el" href="a00307.xhtml">CChordFromFile</a></dd><dd><a class="el" href="a00311.xhtml">CChordFromVector</a></dd><dd><a class="el" href="a00451.xhtml">CChordIf</a></dd><dd><a class="el" href="a00607.xhtml">CClassifierBase</a></dd><dd><a class="el" href="a00543.xhtml">CConversion</a></dd><dd><a class="el" href="a00599.xhtml">CDtw</a></dd><dd><a class="el" href="a00463.xhtml">CFeatureFromBlockIf</a></dd><dd><a class="el" href="a00315.xhtml">CFeatureFromFile</a></dd><dd><a class="el" href="a00319.xhtml">CFeatureFromVector</a></dd><dd><a class="el" href="a00459.xhtml">CFeatureIf</a></dd><dd><a class="el" href="a00323.xhtml">CFeatureSpectralFlux</a></dd><dd><a class="el" href="a00327.xhtml">CFeatureSpectralMfccs</a></dd><dd><a class="el" href="a00331.xhtml">CFeatureSpectralPitchChroma</a></dd><dd><a class="el" href="a00335.xhtml">CFeatureSpectralRolloff</a></dd><dd><a class="el" href="a00339.xhtml">CFeatureSpectralTonalPowerRatio</a></dd><dd><a class="el" href="a00343.xhtml">CFeatureTimeAcfCoeff</a></dd><dd><a class="el" href="a00347.xhtml">CFeatureTimeMaxAcf</a></dd><dd><a class="el" href="a00351.xhtml">CFeatureTimePeakEnvelope</a></dd><dd><a class="el" href="a00355.xhtml">CFeatureTimeRms</a></dd><dd><a class="el" href="a00467.xhtml">CFft</a></dd><dd><a class="el" href="a00471.xhtml">CFilter</a></dd><dd><a class="el" href="a00547.xhtml">CFingerprint</a></dd><dd><a class="el" href="a00415.xhtml">CGammatone</a></dd><dd><a class="el" href="a00419.xhtml">CGammaToneFbFromFile</a></dd><dd><a class="el" href="a00423.xhtml">CGammaToneFbFromVector</a></dd><dd><a class="el" href="a00551.xhtml">CGammaToneFbIf</a></dd><dd><a class="el" href="a00427.xhtml">CGammaToneFbRealTime</a></dd><dd><a class="el" href="a00559.xhtml">CGmm</a></dd><dd><a class="el" href="a00555.xhtml">CGmmResult</a></dd><dd><a class="el" href="a01111.xhtml">ChunkGenerator</a> (<a class="el" href="a00300.xhtml">Catch::Generators</a>)</dd><dd><a class="el" href="a00563.xhtml">CInstFreq</a></dd><dd><a class="el" href="a00499.xhtml">CKey</a></dd><dd><a class="el" href="a00503.xhtml">CKeyFromChroma</a></dd><dd><a class="el" href="a00603.xhtml">CKmeans</a></dd><dd><a class="el" href="a00611.xhtml">CKnn</a></dd><dd><a class="el" href="a00479.xhtml">CMatrix</a></dd><dd><a class="el" href="a00571.xhtml">CMovingAverage</a></dd><dd><a class="el" href="a00579.xhtml">CNmf</a></dd><dd><a class="el" href="a00575.xhtml">CNmfResult</a></dd><dd><a class="el" href="a00591.xhtml">CNormalizeAudio</a></dd><dd><a class="el" href="a00511.xhtml">CNoveltyFromBlockIf</a></dd><dd><a class="el" href="a00359.xhtml">CNoveltyFromFile</a></dd><dd><a class="el" href="a00363.xhtml">CNoveltyFromVector</a></dd><dd><a class="el" href="a00507.xhtml">CNoveltyIf</a></dd><dd><a class="el" href="a01035.xhtml">ContainsElementMatcher</a> (<a class="el" href="a00299.xhtml">Catch::Matchers::Vector</a>)</dd><dd><a class="el" href="a01019.xhtml">ContainsMatcher</a> (<a class="el" href="a00298.xhtml">Catch::Matchers::StdString</a>)</dd><dd><a class="el" href="a01039.xhtml">ContainsMatcher</a> (<a class="el" href="a00299.xhtml">Catch::Matchers::Vector</a>)</dd><dd><a class="el" href="a00903.xhtml">Counts</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd><dd><a class="el" href="a00583.xhtml">CPca</a></dd><dd><a class="el" href="a00519.xhtml">CPitchFromBlockIf</a></dd><dd><a class="el" href="a00367.xhtml">CPitchFromFile</a></dd><dd><a class="el" href="a00371.xhtml">CPitchFromVector</a></dd><dd><a class="el" href="a00515.xhtml">CPitchIf</a></dd><dd><a class="el" href="a00375.xhtml">CPitchSpectralAcf</a></dd><dd><a class="el" href="a00379.xhtml">CPitchSpectralHps</a></dd><dd><a class="el" href="a00383.xhtml">CPitchTimeAcf</a></dd><dd><a class="el" href="a00391.xhtml">CPitchTimeAmdf</a></dd><dd><a class="el" href="a00387.xhtml">CPitchTimeAuditory</a></dd><dd><a class="el" href="a00395.xhtml">CPitchTimeZeroCrossings</a></dd><dd><a class="el" href="a00587.xhtml">CPreProc</a></dd><dd><a class="el" href="a00595.xhtml">CResample</a></dd><dd><a class="el" href="a00483.xhtml">CRingBuffer</a></dd><dd><a class="el" href="a00567.xhtml">CSinglePoleLp</a></dd><dd><a class="el" href="a00399.xhtml">CSpectrogramFromFile</a></dd><dd><a class="el" href="a00403.xhtml">CSpectrogramFromVector</a></dd><dd><a class="el" href="a00523.xhtml">CSpectrogramIf</a></dd><dd><a class="el" href="a00531.xhtml">CSubFingerprint</a></dd><dd><a class="el" href="a00487.xhtml">CSynthesis</a></dd><dd><a class="el" href="a00491.xhtml">CUtil</a></dd><dd><a class="el" href="a00495.xhtml">CVector</a></dd><dd><a class="el" href="a00615.xhtml">CViterbi</a></dd></dl>
<dl class="classindex odd">
<dt class="alphachar"><a id="letter_D" name="letter_D">D</a></dt>
<dd><a class="el" href="a00859.xhtml">Decomposer</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd></dl>
<dl class="classindex even">
<dt class="alphachar"><a id="letter_E" name="letter_E">E</a></dt>
<dd><a class="el" href="a01027.xhtml">EndsWithMatcher</a> (<a class="el" href="a00298.xhtml">Catch::Matchers::StdString</a>)</dd><dd><a class="el" href="a00707.xhtml">EnumInfo</a> (<a class="el" href="a00289.xhtml">Catch::Detail</a>)</dd><dd><a class="el" href="a01015.xhtml">EqualsMatcher</a> (<a class="el" href="a00298.xhtml">Catch::Matchers::StdString</a>)</dd><dd><a class="el" href="a01043.xhtml">EqualsMatcher</a> (<a class="el" href="a00299.xhtml">Catch::Matchers::Vector</a>)</dd><dd><a class="el" href="a00987.xhtml">ExceptionMessageMatcher</a> (<a class="el" href="a00294.xhtml">Catch::Matchers::Exception</a>)</dd><dd><a class="el" href="a00947.xhtml">ExceptionTranslatorRegistrar::ExceptionTranslator</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd><dd><a class="el" href="a00943.xhtml">ExceptionTranslatorRegistrar</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd><dd><a class="el" href="a00855.xhtml">ExprLhs</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd></dl>
<dl class="classindex odd">
<dt class="alphachar"><a id="letter_F" name="letter_F">F</a></dt>
<dd><a class="el" href="a00443.xhtml">CAudioFileIf::FileSpec_t</a></dd><dd><a class="el" href="a01099.xhtml">FilterGenerator</a> (<a class="el" href="a00300.xhtml">Catch::Generators</a>)</dd><dd><a class="el" href="a01079.xhtml">FixedValuesGenerator</a> (<a class="el" href="a00300.xhtml">Catch::Generators</a>)</dd></dl>
<dl class="classindex even">
<dt class="alphachar"><a id="letter_G" name="letter_G">G</a></dt>
<dd><a class="el" href="a01067.xhtml">GeneratorException</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd><dd><a class="el" href="a01087.xhtml">Generators</a> (<a class="el" href="a00300.xhtml">Catch::Generators</a>)</dd><dd><a class="el" href="a01059.xhtml">GeneratorUntypedBase</a> (<a class="el" href="a00300.xhtml">Catch::Generators</a>)</dd><dd><a class="el" href="a01083.xhtml">GeneratorWrapper</a> (<a class="el" href="a00300.xhtml">Catch::Generators</a>)</dd></dl>
<dl class="classindex odd">
<dt class="alphachar"><a id="letter_I" name="letter_I">I</a></dt>
<dd><a class="el" href="a01147.xhtml">IConfig</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd><dd><a class="el" href="a01115.xhtml">IContext</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd><dd><a class="el" href="a00935.xhtml">IExceptionTranslator</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd><dd><a class="el" href="a00939.xhtml">IExceptionTranslatorRegistry</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd><dd><a class="el" href="a01071.xhtml">IGenerator</a> (<a class="el" href="a00300.xhtml">Catch::Generators</a>)</dd><dd><a class="el" href="a01063.xhtml">IGeneratorTracker</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd><dd><a class="el" href="a01119.xhtml">IMutableContext</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd><dd><a class="el" href="a00711.xhtml">IMutableEnumValuesRegistry</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd><dd><a class="el" href="a00931.xhtml">IMutableRegistryHub</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd><dd><a class="el" href="a00927.xhtml">IRegistryHub</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd><dd><a class="el" href="a00863.xhtml">IResultCapture</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd><dd><a class="el" href="a01179.xhtml">IRunner</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd><dd><a class="el" href="a00667.xhtml">is_callable</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd><dd><a class="el" href="a00671.xhtml">is_callable&lt; Fun(Args...)&gt;</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd><dd><a class="el" href="a00663.xhtml">is_callable_tester</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd><dd><a class="el" href="a00831.xhtml">is_range</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd><dd><a class="el" href="a00823.xhtml">is_range_impl</a> (<a class="el" href="a00290.xhtml">Catch::detail</a>)</dd><dd><a class="el" href="a00827.xhtml">is_range_impl&lt; T, typename void_type&lt; decltype(begin(std::declval&lt; T &gt;()))&gt;::type &gt;</a> (<a class="el" href="a00290.xhtml">Catch::detail</a>)</dd><dd><a class="el" href="a00715.xhtml">IsStreamInsertable</a> (<a class="el" href="a00289.xhtml">Catch::Detail</a>)</dd><dd><a class="el" href="a00699.xhtml">IStream</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd><dd><a class="el" href="a01167.xhtml">IteratorGenerator</a> (<a class="el" href="a00300.xhtml">Catch::Generators</a>)</dd><dd><a class="el" href="a00647.xhtml">ITestCaseRegistry</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd><dd><a class="el" href="a00643.xhtml">ITestInvoker</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd><dd><a class="el" href="a00843.xhtml">ITransientExpression</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd></dl>
<dl class="classindex even">
<dt class="alphachar"><a id="letter_L" name="letter_L">L</a></dt>
<dd><a class="el" href="a00871.xhtml">LazyExpression</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd></dl>
<dl class="classindex odd">
<dt class="alphachar"><a id="letter_M" name="letter_M">M</a></dt>
<dd><a class="el" href="a01107.xhtml">MapGenerator</a> (<a class="el" href="a00300.xhtml">Catch::Generators</a>)</dd><dd><a class="el" href="a00963.xhtml">MatchAllOf</a> (<a class="el" href="a00293.xhtml">Catch::Matchers::Impl</a>)</dd><dd><a class="el" href="a00967.xhtml">MatchAnyOf</a> (<a class="el" href="a00293.xhtml">Catch::Matchers::Impl</a>)</dd><dd><a class="el" href="a00983.xhtml">MatcherBase</a> (<a class="el" href="a00293.xhtml">Catch::Matchers::Impl</a>)</dd><dd><a class="el" href="a00979.xhtml">MatcherMethod</a> (<a class="el" href="a00293.xhtml">Catch::Matchers::Impl</a>)</dd><dd><a class="el" href="a00975.xhtml">MatcherUntypedBase</a> (<a class="el" href="a00293.xhtml">Catch::Matchers::Impl</a>)</dd><dd><a class="el" href="a01055.xhtml">MatchExpr</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd><dd><a class="el" href="a00971.xhtml">MatchNotOf</a> (<a class="el" href="a00293.xhtml">Catch::Matchers::Impl</a>)</dd><dd><a class="el" href="a00527.xhtml">CSpectrogramIf::MelSpectrogramConfig_t</a></dd><dd><a class="el" href="a00891.xhtml">MessageBuilder</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd><dd><a class="el" href="a00883.xhtml">MessageInfo</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd><dd><a class="el" href="a00887.xhtml">MessageStream</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd><dd><a class="el" href="a01183.xhtml">mus_any</a></dd></dl>
<dl class="classindex even">
<dt class="alphachar"><a id="letter_N" name="letter_N">N</a></dt>
<dd><a class="el" href="a00679.xhtml">NameAndTags</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd><dd><a class="el" href="a00627.xhtml">NonCopyable</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd></dl>
<dl class="classindex odd">
<dt class="alphachar"><a id="letter_O" name="letter_O">O</a></dt>
<dd><a class="el" href="a01123.xhtml">Option</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd></dl>
<dl class="classindex even">
<dt class="alphachar"><a id="letter_P" name="letter_P">P</a></dt>
<dd><a class="el" href="a00959.xhtml">pluralise</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd><dd><a class="el" href="a01003.xhtml">PredicateMatcher</a> (<a class="el" href="a00296.xhtml">Catch::Matchers::Generic</a>)</dd></dl>
<dl class="classindex odd">
<dt class="alphachar"><a id="letter_R" name="letter_R">R</a></dt>
<dd><a class="el" href="a01155.xhtml">RandomFloatingGenerator</a> (<a class="el" href="a00300.xhtml">Catch::Generators</a>)</dd><dd><a class="el" href="a01159.xhtml">RandomIntegerGenerator</a> (<a class="el" href="a00300.xhtml">Catch::Generators</a>)</dd><dd><a class="el" href="a01163.xhtml">RangeGenerator</a> (<a class="el" href="a00300.xhtml">Catch::Generators</a>)</dd><dd><a class="el" href="a01031.xhtml">RegexMatcher</a> (<a class="el" href="a00298.xhtml">Catch::Matchers::StdString</a>)</dd><dd><a class="el" href="a00639.xhtml">RegistrarForTagAliases</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd><dd><a class="el" href="a01103.xhtml">RepeatGenerator</a> (<a class="el" href="a00300.xhtml">Catch::Generators</a>)</dd><dd><a class="el" href="a00691.xhtml">ResultDisposition</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd><dd><a class="el" href="a00687.xhtml">ResultWas</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd><dd><a class="el" href="a00703.xhtml">ReusableStringStream</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd><dd><a class="el" href="a01135.xhtml">RunTests</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd></dl>
<dl class="classindex even">
<dt class="alphachar"><a id="letter_S" name="letter_S">S</a></dt>
<dd><a class="el" href="a01187.xhtml">s7_ex</a></dd><dd><a class="el" href="a00895.xhtml">ScopedMessage</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd><dd><a class="el" href="a00923.xhtml">Section</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd><dd><a class="el" href="a00915.xhtml">SectionEndInfo</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd><dd><a class="el" href="a00911.xhtml">SectionInfo</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd><dd><a class="el" href="a01131.xhtml">ShowDurations</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd><dd><a class="el" href="a01151.xhtml">SimplePcg32</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd><dd><a class="el" href="a01075.xhtml">SingleValueGenerator</a> (<a class="el" href="a00300.xhtml">Catch::Generators</a>)</dd><dd><a class="el" href="a00631.xhtml">SourceLineInfo</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd><dd><a class="el" href="a01023.xhtml">StartsWithMatcher</a> (<a class="el" href="a00298.xhtml">Catch::Matchers::StdString</a>)</dd><dd><a class="el" href="a00635.xhtml">StreamEndStop</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd><dd><a class="el" href="a00719.xhtml">StringMaker</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd><dd><a class="el" href="a00783.xhtml">StringMaker&lt; bool &gt;</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd><dd><a class="el" href="a00955.xhtml">StringMaker&lt; Catch::Detail::Approx &gt;</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd><dd><a class="el" href="a00731.xhtml">StringMaker&lt; char * &gt;</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd><dd><a class="el" href="a00787.xhtml">StringMaker&lt; char &gt;</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd><dd><a class="el" href="a00727.xhtml">StringMaker&lt; char const * &gt;</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd><dd><a class="el" href="a00747.xhtml">StringMaker&lt; char[SZ]&gt;</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd><dd><a class="el" href="a00807.xhtml">StringMaker&lt; double &gt;</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd><dd><a class="el" href="a00803.xhtml">StringMaker&lt; float &gt;</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd><dd><a class="el" href="a00759.xhtml">StringMaker&lt; int &gt;</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd><dd><a class="el" href="a00763.xhtml">StringMaker&lt; long &gt;</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd><dd><a class="el" href="a00767.xhtml">StringMaker&lt; long long &gt;</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd><dd><a class="el" href="a00815.xhtml">StringMaker&lt; R C::* &gt;</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd><dd><a class="el" href="a00835.xhtml">StringMaker&lt; R, typename std::enable_if&lt; is_range&lt; R &gt;::value &amp;&amp;!::Catch::Detail::IsStreamInsertable&lt; R &gt;::value &gt;::type &gt;</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd><dd><a class="el" href="a00791.xhtml">StringMaker&lt; signed char &gt;</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd><dd><a class="el" href="a00751.xhtml">StringMaker&lt; signed char[SZ]&gt;</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd><dd><a class="el" href="a00799.xhtml">StringMaker&lt; std::nullptr_t &gt;</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd><dd><a class="el" href="a00723.xhtml">StringMaker&lt; std::string &gt;</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd><dd><a class="el" href="a00735.xhtml">StringMaker&lt; std::wstring &gt;</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd><dd><a class="el" href="a00811.xhtml">StringMaker&lt; T * &gt;</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd><dd><a class="el" href="a00839.xhtml">StringMaker&lt; T[SZ]&gt;</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd><dd><a class="el" href="a00795.xhtml">StringMaker&lt; unsigned char &gt;</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd><dd><a class="el" href="a00755.xhtml">StringMaker&lt; unsigned char[SZ]&gt;</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd><dd><a class="el" href="a00771.xhtml">StringMaker&lt; unsigned int &gt;</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd><dd><a class="el" href="a00775.xhtml">StringMaker&lt; unsigned long &gt;</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd><dd><a class="el" href="a00779.xhtml">StringMaker&lt; unsigned long long &gt;</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd><dd><a class="el" href="a00743.xhtml">StringMaker&lt; wchar_t * &gt;</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd><dd><a class="el" href="a00739.xhtml">StringMaker&lt; wchar_t const * &gt;</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd><dd><a class="el" href="a01011.xhtml">StringMatcherBase</a> (<a class="el" href="a00298.xhtml">Catch::Matchers::StdString</a>)</dd><dd><a class="el" href="a00651.xhtml">StringRef</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd></dl>
<dl class="classindex odd">
<dt class="alphachar"><a id="letter_T" name="letter_T">T</a></dt>
<dd><a class="el" href="a01095.xhtml">TakeGenerator</a> (<a class="el" href="a00300.xhtml">Catch::Generators</a>)</dd><dd><a class="el" href="a01175.xhtml">TestCase</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd><dd><a class="el" href="a01171.xhtml">TestCaseInfo</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd><dd><a class="el" href="a00867.xhtml">TestFailureException</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd><dd><a class="el" href="a00675.xhtml">TestInvokerAsMethod</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd><dd><a class="el" href="a00919.xhtml">Timer</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd><dd><a class="el" href="a00907.xhtml">Totals</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd><dd><a class="el" href="a00659.xhtml">true_given</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd></dl>
<dl class="classindex even">
<dt class="alphachar"><a id="letter_U" name="letter_U">U</a></dt>
<dd><a class="el" href="a00851.xhtml">UnaryExpr</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd><dd><a class="el" href="a01051.xhtml">UnorderedEqualsMatcher</a> (<a class="el" href="a00299.xhtml">Catch::Matchers::Vector</a>)</dd><dd><a class="el" href="a01139.xhtml">UseColour</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd></dl>
<dl class="classindex odd">
<dt class="alphachar"><a id="letter_V" name="letter_V">V</a></dt>
<dd><a class="el" href="a00819.xhtml">void_type</a> (<a class="el" href="a00290.xhtml">Catch::detail</a>)</dd></dl>
<dl class="classindex even">
<dt class="alphachar"><a id="letter_W" name="letter_W">W</a></dt>
<dd><a class="el" href="a01143.xhtml">WaitForKeypress</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd><dd><a class="el" href="a01127.xhtml">WarnAbout</a> (<a class="el" href="a00287.xhtml">Catch</a>)</dd><dd><a class="el" href="a00991.xhtml">WithinAbsMatcher</a> (<a class="el" href="a00295.xhtml">Catch::Matchers::Floating</a>)</dd><dd><a class="el" href="a00999.xhtml">WithinRelMatcher</a> (<a class="el" href="a00295.xhtml">Catch::Matchers::Floating</a>)</dd><dd><a class="el" href="a00995.xhtml">WithinUlpsMatcher</a> (<a class="el" href="a00295.xhtml">Catch::Matchers::Floating</a>)</dd></dl>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="footer">Generated on Mon Jun 13 2022 22:01:51 for ACA by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.4 </li>
  </ul>
</div>
</body>
</html>
