<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.13.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ACA: FeatureFromBlock.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="clipboard.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="cookie.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">ACA<span id="projectnumber">&#160;0.3.1</span>
   </div>
   <div id="projectbrief">Example Code for Audio Content Analysis</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.13.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(0); });
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('a00047_source.xhtml',''); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">FeatureFromBlock.cpp</div></div>
</div><!--header-->
<div class="contents">
<a href="a00047.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span> </div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span><span class="preprocessor">#include &quot;<a class="code" href="a00185.xhtml">Vector.h</a>&quot;</span></div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="preprocessor">#include &quot;<a class="code" href="a00188.xhtml">Matrix.h</a>&quot;</span></div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span><span class="preprocessor">#include &quot;<a class="code" href="a00191.xhtml">Util.h</a>&quot;</span></div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span> </div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span><span class="preprocessor">#include &quot;<a class="code" href="a00248.xhtml">ToolConversion.h</a>&quot;</span></div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span><span class="preprocessor">#include &quot;<a class="code" href="a00146.xhtml">ToolCcf.h</a>&quot;</span></div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span><span class="preprocessor">#include &quot;<a class="code" href="a00206.xhtml">ToolLowPass.h</a>&quot;</span></div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span> </div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span><span class="preprocessor">#include &quot;<a class="code" href="a00227.xhtml">FeatureFromBlock.h</a>&quot;</span></div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span> </div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span><span class="keyword">const</span> <span class="keywordtype">float</span> <a class="code hl_variable" href="a00473.xhtml#a23b1d6639637a13587d5529a57f3bf78">CFeatureFromBlockIf::m_kfFloatThresh</a> = 1e-30F;</div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span><span class="comment"></span> </div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span><span class="comment">////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span><span class="comment">// static member functions</span></div>
<div class="foldopen" id="foldopen00016" data-start="{" data-end="}">
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno"><a class="line" href="a00473.xhtml#a880a58f05522dfd1f0f16f26c34703db">   16</a></span><span class="keywordtype">float</span> <a class="code hl_function" href="a00473.xhtml#a880a58f05522dfd1f0f16f26c34703db">CFeatureFromBlockIf::compFeatureSpectralCentroid</a>(<span class="keyword">const</span> <span class="keywordtype">float</span> *pfMagSpec, <span class="keywordtype">int</span> iDataLength, <span class="keywordtype">float</span> fSampleRate <span class="comment">/*= 1.F*/</span>)</div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span>{</div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span>    assert(pfMagSpec);</div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span>    assert(iDataLength &gt; 0);</div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span>    assert(fSampleRate &gt; 0);</div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span> </div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span>    <span class="keywordtype">float</span> fNorm = 0;</div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span>    <span class="keywordtype">float</span> fvsc = 0;</div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span> </div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span>    <span class="keywordflow">for</span> (<span class="keyword">auto</span> k = 0; k &lt; iDataLength; k++)</div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span>    {</div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span>        fNorm += pfMagSpec[k];</div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span>        fvsc += k * pfMagSpec[k];</div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span>    }</div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span> </div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span>    <span class="comment">// check if zero</span></div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span>    <span class="keywordflow">if</span> (fNorm &lt; <a class="code hl_variable" href="a00473.xhtml#a23b1d6639637a13587d5529a57f3bf78">m_kfFloatThresh</a>)</div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span>        <span class="keywordflow">return</span> 0;</div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span> </div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span>    <span class="comment">// convert from index to Hz</span></div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span>    <span class="keywordflow">return</span> fvsc * fSampleRate / (2.F * fNorm * (iDataLength - 1));</div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span>}</div>
</div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span> </div>
<div class="foldopen" id="foldopen00039" data-start="{" data-end="}">
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno"><a class="line" href="a00473.xhtml#a15df133306497e4f85929692354f378a">   39</a></span><span class="keywordtype">float</span> <a class="code hl_function" href="a00473.xhtml#a15df133306497e4f85929692354f378a">CFeatureFromBlockIf::compFeatureSpectralCrestFactor</a>(<span class="keyword">const</span> <span class="keywordtype">float</span> *pfMagSpec, <span class="keywordtype">int</span> iDataLength, <span class="keywordtype">float</span> <span class="comment">/*fSampleRate = 1.F*/</span>)</div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span>{</div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span>    assert(pfMagSpec);</div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span>    assert(iDataLength &gt; 0);</div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span> </div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span>    <span class="keywordtype">float</span> fNorm = <a class="code hl_function" href="a00505.xhtml#abdbcc3898121387f3694f74491b7331e">CVector::getSum</a>(pfMagSpec, iDataLength);</div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span> </div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span>    <span class="comment">// check if zero</span></div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span>    <span class="keywordflow">if</span> (fNorm &lt; <a class="code hl_variable" href="a00473.xhtml#a23b1d6639637a13587d5529a57f3bf78">m_kfFloatThresh</a>)</div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span>        <span class="keywordflow">return</span> 0;</div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span> </div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span>    <span class="keywordflow">return</span> <a class="code hl_function" href="a00505.xhtml#a9f5be871090bc5a64a7732cebfb4f8ec">CVector::getMax</a>(pfMagSpec, iDataLength) / fNorm;</div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span>}</div>
</div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span> </div>
<div class="foldopen" id="foldopen00053" data-start="{" data-end="}">
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno"><a class="line" href="a00473.xhtml#a9e03b3181d7ff9d8a9b0eaedabff9899">   53</a></span><span class="keywordtype">float</span> <a class="code hl_function" href="a00473.xhtml#a9e03b3181d7ff9d8a9b0eaedabff9899">CFeatureFromBlockIf::compFeatureSpectralDecrease</a>(<span class="keyword">const</span> <span class="keywordtype">float</span> *pfMagSpec, <span class="keywordtype">int</span> iDataLength, <span class="keywordtype">float</span> <span class="comment">/*fSampleRate = 1.F*/</span>)</div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span>{</div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span>    assert(pfMagSpec);</div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno">   56</span>    assert(iDataLength &gt; 0);</div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span> </div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span>    <span class="keywordtype">float</span> fNorm = 0;</div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span>    <span class="keywordtype">float</span> fvsd = 0;</div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span> </div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span>    <span class="keywordflow">for</span> (<span class="keyword">auto</span> k = 1; k &lt; iDataLength; k++)</div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span>    {</div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span>        fNorm += pfMagSpec[k];</div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno">   64</span>        fvsd += (pfMagSpec[k] - pfMagSpec[0]) / k;</div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span>    }</div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span> </div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno">   67</span>    <span class="comment">// check if zero</span></div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span>    <span class="keywordflow">if</span> (fNorm &lt; <a class="code hl_variable" href="a00473.xhtml#a23b1d6639637a13587d5529a57f3bf78">m_kfFloatThresh</a>)</div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span>        <span class="keywordflow">return</span> 0;</div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno">   70</span> </div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span>    <span class="keywordflow">return</span> fvsd / fNorm;</div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span>}</div>
</div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span> </div>
<div class="foldopen" id="foldopen00074" data-start="{" data-end="}">
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno"><a class="line" href="a00473.xhtml#a361ef81afe12623645546fbbeab30b14">   74</a></span><span class="keywordtype">float</span> <a class="code hl_function" href="a00473.xhtml#a361ef81afe12623645546fbbeab30b14">CFeatureFromBlockIf::compFeatureSpectralFlatness</a>(<span class="keyword">const</span> <span class="keywordtype">float</span> *pfMagSpec, <span class="keywordtype">int</span> iDataLength, <span class="keywordtype">float</span> <span class="comment">/*fSampleRate = 1.F*/</span>)</div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span>{</div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span>    assert(pfMagSpec);</div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span>    assert(iDataLength &gt; 0);</div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span> </div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span>    <span class="keywordtype">float</span> fNorm = <a class="code hl_function" href="a00505.xhtml#ae6e3545cf196c5e2409365bc62b7c1de">CVector::getMean</a>(pfMagSpec, iDataLength);</div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span>    <span class="keywordtype">float</span> fGeoMean = 0;</div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span> </div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno">   82</span>    <span class="comment">// avoid unnecessary complications</span></div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span>    <span class="keywordflow">if</span> (fNorm &lt; <a class="code hl_variable" href="a00473.xhtml#a23b1d6639637a13587d5529a57f3bf78">m_kfFloatThresh</a> || <a class="code hl_function" href="a00505.xhtml#a1f7f307c20239cfd2007393e2b3b26df">CVector::getMin</a>(pfMagSpec, iDataLength) &lt; <a class="code hl_variable" href="a00473.xhtml#a23b1d6639637a13587d5529a57f3bf78">m_kfFloatThresh</a>)</div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span>        <span class="keywordflow">return</span> 0;</div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span> </div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno">   86</span>    <span class="comment">// compute geometric mean through log</span></div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span>    <span class="keywordflow">for</span> (<span class="keyword">auto</span> k = 0; k &lt; iDataLength; k++)</div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span>        fGeoMean += std::log(pfMagSpec[k]);</div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span> </div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span>    <span class="keywordflow">return</span> std::exp(fGeoMean / iDataLength) / fNorm;</div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span>}</div>
</div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span> </div>
<div class="foldopen" id="foldopen00093" data-start="{" data-end="}">
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno"><a class="line" href="a00473.xhtml#a42b11faa0f65881702ad7dcc1398ec5f">   93</a></span><span class="keywordtype">float</span> <a class="code hl_function" href="a00473.xhtml#a42b11faa0f65881702ad7dcc1398ec5f">CFeatureFromBlockIf::compFeatureSpectralFlux</a>(<span class="keyword">const</span> <span class="keywordtype">float</span> *pfMagSpec, <span class="keyword">const</span> <span class="keywordtype">float</span> *pfPrevSpec, <span class="keywordtype">int</span> iDataLength, <span class="keywordtype">float</span> <span class="comment">/*fSampleRate = 1.F*/</span>)</div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span>{</div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span>    assert(pfMagSpec);</div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span>    assert(pfPrevSpec);</div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno">   97</span>    assert(iDataLength &gt; 0);</div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno">   98</span> </div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno">   99</span>    <span class="keywordtype">float</span> fSum = 0;</div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span>    <span class="keywordflow">for</span> (<span class="keyword">auto</span> k = 0; k &lt; iDataLength; k++)</div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno">  101</span>    {</div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno">  102</span>        <span class="keywordtype">float</span> fDiff = pfMagSpec[k] - pfPrevSpec[k];</div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno">  103</span>        fSum += fDiff * fDiff;</div>
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno">  104</span>    }</div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno">  105</span> </div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno">  106</span>    <span class="keywordflow">return</span> std::sqrt(fSum) / iDataLength;</div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span>}</div>
</div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno">  108</span> </div>
<div class="foldopen" id="foldopen00109" data-start="{" data-end="}">
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno"><a class="line" href="a00473.xhtml#aa97614c73430e57facec7a88bee49c9f">  109</a></span><span class="keywordtype">float</span> <a class="code hl_function" href="a00473.xhtml#aa97614c73430e57facec7a88bee49c9f">CFeatureFromBlockIf::compFeatureSpectralSpread</a>(<span class="keyword">const</span> <span class="keywordtype">float</span> *pfMagSpec, <span class="keywordtype">int</span> iDataLength, <span class="keywordtype">float</span> fSampleRate <span class="comment">/*= 1.F*/</span>)</div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span>{</div>
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno">  111</span>    assert(pfMagSpec);</div>
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno">  112</span>    assert(iDataLength &gt; 0);</div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno">  113</span>    assert(fSampleRate &gt; 0);</div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span> </div>
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno">  115</span>    <span class="keywordtype">float</span> fNorm = 0;</div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span>    <span class="keywordtype">float</span> fvss = 0;</div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno">  117</span>    <span class="keywordtype">float</span> fvsc = <a class="code hl_function" href="a00473.xhtml#a880a58f05522dfd1f0f16f26c34703db">compFeatureSpectralCentroid</a>(pfMagSpec, iDataLength, fSampleRate) * 2 / fSampleRate * (iDataLength - 1);</div>
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno">  118</span> </div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno">  119</span>    <span class="comment">// check if zero</span></div>
<div class="line"><a id="l00120" name="l00120"></a><span class="lineno">  120</span>    <span class="keywordflow">if</span> (fvsc &lt; <a class="code hl_variable" href="a00473.xhtml#a23b1d6639637a13587d5529a57f3bf78">m_kfFloatThresh</a>)</div>
<div class="line"><a id="l00121" name="l00121"></a><span class="lineno">  121</span>        <span class="keywordflow">return</span> 0;</div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno">  122</span> </div>
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno">  123</span>    <span class="keywordflow">for</span> (<span class="keyword">auto</span> k = 0; k &lt; iDataLength; k++)</div>
<div class="line"><a id="l00124" name="l00124"></a><span class="lineno">  124</span>    {</div>
<div class="line"><a id="l00125" name="l00125"></a><span class="lineno">  125</span>        <span class="keywordtype">float</span> fAgg = (k - fvsc) * (k - fvsc);</div>
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno">  126</span>        fNorm += pfMagSpec[k];</div>
<div class="line"><a id="l00127" name="l00127"></a><span class="lineno">  127</span>        fvss += fAgg * pfMagSpec[k];</div>
<div class="line"><a id="l00128" name="l00128"></a><span class="lineno">  128</span>    }</div>
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno">  129</span> </div>
<div class="line"><a id="l00130" name="l00130"></a><span class="lineno">  130</span>    <span class="comment">// convert from index to Hz</span></div>
<div class="line"><a id="l00131" name="l00131"></a><span class="lineno">  131</span>    <span class="keywordflow">return</span> std::sqrt(fvss / fNorm) * fSampleRate / (2.F * (iDataLength - 1));</div>
<div class="line"><a id="l00132" name="l00132"></a><span class="lineno">  132</span>}</div>
</div>
<div class="line"><a id="l00133" name="l00133"></a><span class="lineno">  133</span> </div>
<div class="foldopen" id="foldopen00134" data-start="{" data-end="}">
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno"><a class="line" href="a00473.xhtml#aff5ebe0708311c49ba85c03c4546b6cf">  134</a></span><span class="keywordtype">float</span> <a class="code hl_function" href="a00473.xhtml#aff5ebe0708311c49ba85c03c4546b6cf">CFeatureFromBlockIf::compFeatureSpectralKurtosis</a>(<span class="keyword">const</span> <span class="keywordtype">float</span> *pfMagSpec, <span class="keywordtype">int</span> iDataLength, <span class="keywordtype">float</span> fSampleRate <span class="comment">/*= 1.F*/</span>)</div>
<div class="line"><a id="l00135" name="l00135"></a><span class="lineno">  135</span>{</div>
<div class="line"><a id="l00136" name="l00136"></a><span class="lineno">  136</span>    assert(pfMagSpec);</div>
<div class="line"><a id="l00137" name="l00137"></a><span class="lineno">  137</span>    assert(iDataLength &gt; 0);</div>
<div class="line"><a id="l00138" name="l00138"></a><span class="lineno">  138</span>    assert(fSampleRate &gt; 0);</div>
<div class="line"><a id="l00139" name="l00139"></a><span class="lineno">  139</span> </div>
<div class="line"><a id="l00140" name="l00140"></a><span class="lineno">  140</span>    <span class="keywordtype">float</span> fNorm = 0;</div>
<div class="line"><a id="l00141" name="l00141"></a><span class="lineno">  141</span>    <span class="keywordtype">float</span> fvsk = 0;</div>
<div class="line"><a id="l00142" name="l00142"></a><span class="lineno">  142</span>    <span class="keywordtype">float</span> fvsc = <a class="code hl_function" href="a00473.xhtml#a880a58f05522dfd1f0f16f26c34703db">compFeatureSpectralCentroid</a>(pfMagSpec, iDataLength, fSampleRate) * 2 / fSampleRate * (iDataLength - 1);</div>
<div class="line"><a id="l00143" name="l00143"></a><span class="lineno">  143</span>    <span class="keywordtype">float</span> fvss = <a class="code hl_function" href="a00473.xhtml#aa97614c73430e57facec7a88bee49c9f">compFeatureSpectralSpread</a>(pfMagSpec, iDataLength, fSampleRate) * 2 / fSampleRate * (iDataLength - 1);</div>
<div class="line"><a id="l00144" name="l00144"></a><span class="lineno">  144</span> </div>
<div class="line"><a id="l00145" name="l00145"></a><span class="lineno">  145</span>    <span class="comment">// check if zero</span></div>
<div class="line"><a id="l00146" name="l00146"></a><span class="lineno">  146</span>    <span class="keywordflow">if</span> (fvsc &lt; <a class="code hl_variable" href="a00473.xhtml#a23b1d6639637a13587d5529a57f3bf78">m_kfFloatThresh</a> || fvss &lt; <a class="code hl_variable" href="a00473.xhtml#a23b1d6639637a13587d5529a57f3bf78">m_kfFloatThresh</a>)</div>
<div class="line"><a id="l00147" name="l00147"></a><span class="lineno">  147</span>        <span class="keywordflow">return</span> 0;</div>
<div class="line"><a id="l00148" name="l00148"></a><span class="lineno">  148</span> </div>
<div class="line"><a id="l00149" name="l00149"></a><span class="lineno">  149</span>    <span class="keywordflow">for</span> (<span class="keyword">auto</span> k = 0; k &lt; iDataLength; k++)</div>
<div class="line"><a id="l00150" name="l00150"></a><span class="lineno">  150</span>    {</div>
<div class="line"><a id="l00151" name="l00151"></a><span class="lineno">  151</span>        <span class="keywordtype">float</span> fAgg = (k - fvsc) * (k - fvsc);</div>
<div class="line"><a id="l00152" name="l00152"></a><span class="lineno">  152</span>        fAgg *= fAgg;</div>
<div class="line"><a id="l00153" name="l00153"></a><span class="lineno">  153</span>        fNorm += pfMagSpec[k];</div>
<div class="line"><a id="l00154" name="l00154"></a><span class="lineno">  154</span>        fvsk += fAgg * pfMagSpec[k];</div>
<div class="line"><a id="l00155" name="l00155"></a><span class="lineno">  155</span>    }</div>
<div class="line"><a id="l00156" name="l00156"></a><span class="lineno">  156</span> </div>
<div class="line"><a id="l00157" name="l00157"></a><span class="lineno">  157</span>    <span class="comment">// check if zero</span></div>
<div class="line"><a id="l00158" name="l00158"></a><span class="lineno">  158</span>    <span class="keywordflow">if</span> (fNorm &lt; <a class="code hl_variable" href="a00473.xhtml#a23b1d6639637a13587d5529a57f3bf78">m_kfFloatThresh</a>)</div>
<div class="line"><a id="l00159" name="l00159"></a><span class="lineno">  159</span>        <span class="keywordflow">return</span> 0;</div>
<div class="line"><a id="l00160" name="l00160"></a><span class="lineno">  160</span> </div>
<div class="line"><a id="l00161" name="l00161"></a><span class="lineno">  161</span>    <span class="keywordflow">return</span> fvsk / (fvss * fvss * fvss * fvss * fNorm) - 3;</div>
<div class="line"><a id="l00162" name="l00162"></a><span class="lineno">  162</span>}</div>
</div>
<div class="line"><a id="l00163" name="l00163"></a><span class="lineno">  163</span> </div>
<div class="foldopen" id="foldopen00164" data-start="{" data-end="}">
<div class="line"><a id="l00164" name="l00164"></a><span class="lineno"><a class="line" href="a00473.xhtml#a28b9430a480ce697a7dbd73527057ac6">  164</a></span><span class="keywordtype">float</span> <a class="code hl_function" href="a00473.xhtml#a28b9430a480ce697a7dbd73527057ac6">CFeatureFromBlockIf::compFeatureSpectralRolloff</a>(<span class="keyword">const</span> <span class="keywordtype">float</span> *pfMagSpec, <span class="keywordtype">int</span> iDataLength, <span class="keywordtype">float</span> fSampleRate <span class="comment">/*= 1.F*/</span>, <span class="keywordtype">float</span> fKappa <span class="comment">/*= .85F*/</span>)</div>
<div class="line"><a id="l00165" name="l00165"></a><span class="lineno">  165</span>{</div>
<div class="line"><a id="l00166" name="l00166"></a><span class="lineno">  166</span>    assert(pfMagSpec);</div>
<div class="line"><a id="l00167" name="l00167"></a><span class="lineno">  167</span>    assert(iDataLength &gt; 0);</div>
<div class="line"><a id="l00168" name="l00168"></a><span class="lineno">  168</span>    assert(fSampleRate &gt; 0);</div>
<div class="line"><a id="l00169" name="l00169"></a><span class="lineno">  169</span>    assert(fKappa &gt; 0 &amp;&amp; fKappa &lt;= 1);</div>
<div class="line"><a id="l00170" name="l00170"></a><span class="lineno">  170</span> </div>
<div class="line"><a id="l00171" name="l00171"></a><span class="lineno">  171</span>    <span class="keywordtype">float</span> fNorm = <a class="code hl_function" href="a00505.xhtml#abdbcc3898121387f3694f74491b7331e">CVector::getSum</a>(pfMagSpec, iDataLength);</div>
<div class="line"><a id="l00172" name="l00172"></a><span class="lineno">  172</span>    <span class="keywordtype">float</span> fSum = 0;</div>
<div class="line"><a id="l00173" name="l00173"></a><span class="lineno">  173</span>    <span class="keywordtype">int</span> k = 0;</div>
<div class="line"><a id="l00174" name="l00174"></a><span class="lineno">  174</span> </div>
<div class="line"><a id="l00175" name="l00175"></a><span class="lineno">  175</span>    <span class="comment">// check if zero</span></div>
<div class="line"><a id="l00176" name="l00176"></a><span class="lineno">  176</span>    <span class="keywordflow">if</span> (fNorm &lt; <a class="code hl_variable" href="a00473.xhtml#a23b1d6639637a13587d5529a57f3bf78">m_kfFloatThresh</a>)</div>
<div class="line"><a id="l00177" name="l00177"></a><span class="lineno">  177</span>        <span class="keywordflow">return</span> 0;</div>
<div class="line"><a id="l00178" name="l00178"></a><span class="lineno">  178</span> </div>
<div class="line"><a id="l00179" name="l00179"></a><span class="lineno">  179</span>    fNorm *= fKappa;</div>
<div class="line"><a id="l00180" name="l00180"></a><span class="lineno">  180</span>    <span class="keywordflow">while</span> (fSum &lt;= fNorm)</div>
<div class="line"><a id="l00181" name="l00181"></a><span class="lineno">  181</span>    {</div>
<div class="line"><a id="l00182" name="l00182"></a><span class="lineno">  182</span>        fSum += pfMagSpec[k];</div>
<div class="line"><a id="l00183" name="l00183"></a><span class="lineno">  183</span>        k++;</div>
<div class="line"><a id="l00184" name="l00184"></a><span class="lineno">  184</span> </div>
<div class="line"><a id="l00185" name="l00185"></a><span class="lineno">  185</span>        assert(k &lt; iDataLength);</div>
<div class="line"><a id="l00186" name="l00186"></a><span class="lineno">  186</span>    }</div>
<div class="line"><a id="l00187" name="l00187"></a><span class="lineno">  187</span> </div>
<div class="line"><a id="l00188" name="l00188"></a><span class="lineno">  188</span>    <span class="comment">// convert from index to Hz</span></div>
<div class="line"><a id="l00189" name="l00189"></a><span class="lineno">  189</span>    <span class="keywordflow">return</span> (k - 1) * fSampleRate / (2.F * (iDataLength - 1));</div>
<div class="line"><a id="l00190" name="l00190"></a><span class="lineno">  190</span>}</div>
</div>
<div class="line"><a id="l00191" name="l00191"></a><span class="lineno">  191</span> </div>
<div class="foldopen" id="foldopen00192" data-start="{" data-end="}">
<div class="line"><a id="l00192" name="l00192"></a><span class="lineno"><a class="line" href="a00473.xhtml#af130d46bb6a964262acb138fc7b7b9fd">  192</a></span><span class="keywordtype">float</span> <a class="code hl_function" href="a00473.xhtml#af130d46bb6a964262acb138fc7b7b9fd">CFeatureFromBlockIf::compFeatureSpectralSkewness</a>(<span class="keyword">const</span> <span class="keywordtype">float</span> *pfMagSpec, <span class="keywordtype">int</span> iDataLength, <span class="keywordtype">float</span> fSampleRate <span class="comment">/*= 1.F*/</span>)</div>
<div class="line"><a id="l00193" name="l00193"></a><span class="lineno">  193</span>{</div>
<div class="line"><a id="l00194" name="l00194"></a><span class="lineno">  194</span>    assert(pfMagSpec);</div>
<div class="line"><a id="l00195" name="l00195"></a><span class="lineno">  195</span>    assert(iDataLength &gt; 0);</div>
<div class="line"><a id="l00196" name="l00196"></a><span class="lineno">  196</span>    assert(fSampleRate &gt; 0);</div>
<div class="line"><a id="l00197" name="l00197"></a><span class="lineno">  197</span> </div>
<div class="line"><a id="l00198" name="l00198"></a><span class="lineno">  198</span>    <span class="keywordtype">float</span> fNorm = 0;</div>
<div class="line"><a id="l00199" name="l00199"></a><span class="lineno">  199</span>    <span class="keywordtype">float</span> fvssk = 0;</div>
<div class="line"><a id="l00200" name="l00200"></a><span class="lineno">  200</span>    <span class="keywordtype">float</span> fvsc = <a class="code hl_function" href="a00473.xhtml#a880a58f05522dfd1f0f16f26c34703db">compFeatureSpectralCentroid</a>(pfMagSpec, iDataLength, fSampleRate) * 2 / fSampleRate * (iDataLength - 1);</div>
<div class="line"><a id="l00201" name="l00201"></a><span class="lineno">  201</span>    <span class="keywordtype">float</span> fvss = <a class="code hl_function" href="a00473.xhtml#aa97614c73430e57facec7a88bee49c9f">compFeatureSpectralSpread</a>(pfMagSpec, iDataLength, fSampleRate) * 2 / fSampleRate * (iDataLength - 1);</div>
<div class="line"><a id="l00202" name="l00202"></a><span class="lineno">  202</span> </div>
<div class="line"><a id="l00203" name="l00203"></a><span class="lineno">  203</span>    <span class="comment">// check if zero</span></div>
<div class="line"><a id="l00204" name="l00204"></a><span class="lineno">  204</span>    <span class="keywordflow">if</span> (fvsc &lt; <a class="code hl_variable" href="a00473.xhtml#a23b1d6639637a13587d5529a57f3bf78">m_kfFloatThresh</a> || fvss &lt; <a class="code hl_variable" href="a00473.xhtml#a23b1d6639637a13587d5529a57f3bf78">m_kfFloatThresh</a>)</div>
<div class="line"><a id="l00205" name="l00205"></a><span class="lineno">  205</span>        <span class="keywordflow">return</span> 0;</div>
<div class="line"><a id="l00206" name="l00206"></a><span class="lineno">  206</span> </div>
<div class="line"><a id="l00207" name="l00207"></a><span class="lineno">  207</span>    <span class="keywordflow">for</span> (<span class="keyword">auto</span> k = 0; k &lt; iDataLength; k++)</div>
<div class="line"><a id="l00208" name="l00208"></a><span class="lineno">  208</span>    {</div>
<div class="line"><a id="l00209" name="l00209"></a><span class="lineno">  209</span>        <span class="keywordtype">float</span> fAgg = (k - fvsc) * (k - fvsc) * (k - fvsc);</div>
<div class="line"><a id="l00210" name="l00210"></a><span class="lineno">  210</span>        fNorm += pfMagSpec[k];</div>
<div class="line"><a id="l00211" name="l00211"></a><span class="lineno">  211</span>        fvssk += fAgg * pfMagSpec[k];</div>
<div class="line"><a id="l00212" name="l00212"></a><span class="lineno">  212</span>    }</div>
<div class="line"><a id="l00213" name="l00213"></a><span class="lineno">  213</span> </div>
<div class="line"><a id="l00214" name="l00214"></a><span class="lineno">  214</span>    <span class="comment">// check if zero</span></div>
<div class="line"><a id="l00215" name="l00215"></a><span class="lineno">  215</span>    <span class="keywordflow">if</span> (fNorm &lt; <a class="code hl_variable" href="a00473.xhtml#a23b1d6639637a13587d5529a57f3bf78">m_kfFloatThresh</a>)</div>
<div class="line"><a id="l00216" name="l00216"></a><span class="lineno">  216</span>        <span class="keywordflow">return</span> 0;</div>
<div class="line"><a id="l00217" name="l00217"></a><span class="lineno">  217</span> </div>
<div class="line"><a id="l00218" name="l00218"></a><span class="lineno">  218</span>    <span class="keywordflow">return</span> fvssk / (fvss * fvss * fvss * fNorm);</div>
<div class="line"><a id="l00219" name="l00219"></a><span class="lineno">  219</span>}</div>
</div>
<div class="line"><a id="l00220" name="l00220"></a><span class="lineno">  220</span> </div>
<div class="foldopen" id="foldopen00221" data-start="{" data-end="}">
<div class="line"><a id="l00221" name="l00221"></a><span class="lineno"><a class="line" href="a00473.xhtml#a8c8ded721d053ed4f34565a1392993fc">  221</a></span><span class="keywordtype">float</span> <a class="code hl_function" href="a00473.xhtml#a8c8ded721d053ed4f34565a1392993fc">CFeatureFromBlockIf::compFeatureSpectralSlope</a>(<span class="keyword">const</span> <span class="keywordtype">float</span> *pfMagSpec, <span class="keywordtype">int</span> iDataLength, <span class="keywordtype">float</span> fSampleRate <span class="comment">/*= 1.F*/</span>)</div>
<div class="line"><a id="l00222" name="l00222"></a><span class="lineno">  222</span>{</div>
<div class="line"><a id="l00223" name="l00223"></a><span class="lineno">  223</span>    assert(pfMagSpec);</div>
<div class="line"><a id="l00224" name="l00224"></a><span class="lineno">  224</span>    assert(iDataLength &gt; 0);</div>
<div class="line"><a id="l00225" name="l00225"></a><span class="lineno">  225</span>    assert(fSampleRate &gt; 0);</div>
<div class="line"><a id="l00226" name="l00226"></a><span class="lineno">  226</span> </div>
<div class="line"><a id="l00227" name="l00227"></a><span class="lineno">  227</span>    <span class="comment">// compute mean</span></div>
<div class="line"><a id="l00228" name="l00228"></a><span class="lineno">  228</span>    <span class="keywordtype">float</span> fvsc = <a class="code hl_function" href="a00473.xhtml#a880a58f05522dfd1f0f16f26c34703db">compFeatureSpectralCentroid</a>(pfMagSpec, iDataLength, fSampleRate) * 2 / fSampleRate * (iDataLength - 1);</div>
<div class="line"><a id="l00229" name="l00229"></a><span class="lineno">  229</span>    <span class="keywordtype">float</span> fvssl = 0;</div>
<div class="line"><a id="l00230" name="l00230"></a><span class="lineno">  230</span>    <span class="keywordtype">float</span> fNorm = 0;</div>
<div class="line"><a id="l00231" name="l00231"></a><span class="lineno">  231</span> </div>
<div class="line"><a id="l00232" name="l00232"></a><span class="lineno">  232</span>    <span class="comment">// check if zero</span></div>
<div class="line"><a id="l00233" name="l00233"></a><span class="lineno">  233</span>    <span class="keywordflow">if</span> (fvsc &lt; <a class="code hl_variable" href="a00473.xhtml#a23b1d6639637a13587d5529a57f3bf78">m_kfFloatThresh</a>)</div>
<div class="line"><a id="l00234" name="l00234"></a><span class="lineno">  234</span>        <span class="keywordflow">return</span> 0;</div>
<div class="line"><a id="l00235" name="l00235"></a><span class="lineno">  235</span> </div>
<div class="line"><a id="l00236" name="l00236"></a><span class="lineno">  236</span>    <span class="keywordflow">for</span> (<span class="keyword">auto</span> k = 0; k &lt; iDataLength; k++)</div>
<div class="line"><a id="l00237" name="l00237"></a><span class="lineno">  237</span>    {</div>
<div class="line"><a id="l00238" name="l00238"></a><span class="lineno">  238</span>        <span class="keywordtype">float</span> fk = k - (iDataLength + 1) / 2.F;</div>
<div class="line"><a id="l00239" name="l00239"></a><span class="lineno">  239</span>        fvssl += fk * (pfMagSpec[k] - fvsc);</div>
<div class="line"><a id="l00240" name="l00240"></a><span class="lineno">  240</span>        fNorm += fk * fk;</div>
<div class="line"><a id="l00241" name="l00241"></a><span class="lineno">  241</span>    }</div>
<div class="line"><a id="l00242" name="l00242"></a><span class="lineno">  242</span> </div>
<div class="line"><a id="l00243" name="l00243"></a><span class="lineno">  243</span>    <span class="comment">// check if zero</span></div>
<div class="line"><a id="l00244" name="l00244"></a><span class="lineno">  244</span>    <span class="keywordflow">if</span> (fNorm &lt; <a class="code hl_variable" href="a00473.xhtml#a23b1d6639637a13587d5529a57f3bf78">m_kfFloatThresh</a>)</div>
<div class="line"><a id="l00245" name="l00245"></a><span class="lineno">  245</span>        <span class="keywordflow">return</span> 0;</div>
<div class="line"><a id="l00246" name="l00246"></a><span class="lineno">  246</span> </div>
<div class="line"><a id="l00247" name="l00247"></a><span class="lineno">  247</span>    <span class="keywordflow">return</span> fvssl / fNorm;</div>
<div class="line"><a id="l00248" name="l00248"></a><span class="lineno">  248</span>}</div>
</div>
<div class="foldopen" id="foldopen00249" data-start="{" data-end="}">
<div class="line"><a id="l00249" name="l00249"></a><span class="lineno"><a class="line" href="a00473.xhtml#abdd05ed6160f4154fd4aae2816939f5e">  249</a></span><span class="keywordtype">float</span> <a class="code hl_function" href="a00473.xhtml#abdd05ed6160f4154fd4aae2816939f5e">CFeatureFromBlockIf::compFeatureSpectralTonalPowerRatio</a>(<span class="keyword">const</span> <span class="keywordtype">float</span> *pfMagSpec, <span class="keywordtype">int</span> iDataLength, <span class="keywordtype">float</span> <span class="comment">/*fSampleRate = 1.F*/</span>, <span class="keywordtype">float</span> fThresh <span class="comment">/*= 5e-4F*/</span>)</div>
<div class="line"><a id="l00250" name="l00250"></a><span class="lineno">  250</span>{</div>
<div class="line"><a id="l00251" name="l00251"></a><span class="lineno">  251</span>    assert(pfMagSpec);</div>
<div class="line"><a id="l00252" name="l00252"></a><span class="lineno">  252</span>    assert(iDataLength &gt; 0);</div>
<div class="line"><a id="l00253" name="l00253"></a><span class="lineno">  253</span> </div>
<div class="line"><a id="l00254" name="l00254"></a><span class="lineno">  254</span>    <span class="comment">// initialize</span></div>
<div class="line"><a id="l00255" name="l00255"></a><span class="lineno">  255</span>    <span class="keywordtype">float</span> fvtpr = 0;</div>
<div class="line"><a id="l00256" name="l00256"></a><span class="lineno">  256</span>    <span class="keywordtype">float</span> fNorm = pfMagSpec[0] * pfMagSpec[0] + pfMagSpec[iDataLength - 1] * pfMagSpec[iDataLength - 1];</div>
<div class="line"><a id="l00257" name="l00257"></a><span class="lineno">  257</span> </div>
<div class="line"><a id="l00258" name="l00258"></a><span class="lineno">  258</span>    <span class="keywordflow">for</span> (<span class="keyword">auto</span> k = 1; k &lt; iDataLength - 1; k++)</div>
<div class="line"><a id="l00259" name="l00259"></a><span class="lineno">  259</span>    {</div>
<div class="line"><a id="l00260" name="l00260"></a><span class="lineno">  260</span>        <span class="keywordtype">float</span> fSquare = pfMagSpec[k] * pfMagSpec[k];</div>
<div class="line"><a id="l00261" name="l00261"></a><span class="lineno">  261</span>        fNorm += fSquare;</div>
<div class="line"><a id="l00262" name="l00262"></a><span class="lineno">  262</span> </div>
<div class="line"><a id="l00263" name="l00263"></a><span class="lineno">  263</span>        <span class="comment">// search for local maxima</span></div>
<div class="line"><a id="l00264" name="l00264"></a><span class="lineno">  264</span>        <span class="keywordflow">if</span> (pfMagSpec[k] &lt;= pfMagSpec[k - 1] || pfMagSpec[k] &lt;= pfMagSpec[k + 1] || pfMagSpec[k] &lt;= fThresh)</div>
<div class="line"><a id="l00265" name="l00265"></a><span class="lineno">  265</span>            <span class="keywordflow">continue</span>;</div>
<div class="line"><a id="l00266" name="l00266"></a><span class="lineno">  266</span>        <span class="keywordflow">else</span></div>
<div class="line"><a id="l00267" name="l00267"></a><span class="lineno">  267</span>        {</div>
<div class="line"><a id="l00268" name="l00268"></a><span class="lineno">  268</span>            fvtpr += fSquare;</div>
<div class="line"><a id="l00269" name="l00269"></a><span class="lineno">  269</span> </div>
<div class="line"><a id="l00270" name="l00270"></a><span class="lineno">  270</span>            <span class="comment">// increment because the next bin cannot be a local max but don&#39;t forget fNorm</span></div>
<div class="line"><a id="l00271" name="l00271"></a><span class="lineno">  271</span>            fNorm += pfMagSpec[k + 1] * pfMagSpec[k + 1];</div>
<div class="line"><a id="l00272" name="l00272"></a><span class="lineno">  272</span>            k++;</div>
<div class="line"><a id="l00273" name="l00273"></a><span class="lineno">  273</span>        }</div>
<div class="line"><a id="l00274" name="l00274"></a><span class="lineno">  274</span>    }</div>
<div class="line"><a id="l00275" name="l00275"></a><span class="lineno">  275</span> </div>
<div class="line"><a id="l00276" name="l00276"></a><span class="lineno">  276</span>    <span class="comment">// check if zero</span></div>
<div class="line"><a id="l00277" name="l00277"></a><span class="lineno">  277</span>    <span class="keywordflow">if</span> (fNorm &lt; <a class="code hl_variable" href="a00473.xhtml#a23b1d6639637a13587d5529a57f3bf78">m_kfFloatThresh</a>)</div>
<div class="line"><a id="l00278" name="l00278"></a><span class="lineno">  278</span>        <span class="keywordflow">return</span> 0;</div>
<div class="line"><a id="l00279" name="l00279"></a><span class="lineno">  279</span> </div>
<div class="line"><a id="l00280" name="l00280"></a><span class="lineno">  280</span>    <span class="keywordflow">return</span> fvtpr / fNorm;</div>
<div class="line"><a id="l00281" name="l00281"></a><span class="lineno">  281</span>}</div>
</div>
<div class="line"><a id="l00282" name="l00282"></a><span class="lineno">  282</span> </div>
<div class="foldopen" id="foldopen00283" data-start="{" data-end="}">
<div class="line"><a id="l00283" name="l00283"></a><span class="lineno"><a class="line" href="a00473.xhtml#a665af5d570876cc41adc56185201cd8c">  283</a></span><span class="keywordtype">float</span> <a class="code hl_function" href="a00473.xhtml#a665af5d570876cc41adc56185201cd8c">CFeatureFromBlockIf::compFeatureTimeAcfCoeff</a>(<span class="keyword">const</span> <span class="keywordtype">float</span> *pfSamples, <span class="keywordtype">int</span> iDataLength, <span class="keywordtype">float</span> <span class="comment">/*fSampleRate = 1.F*/</span>, <span class="keywordtype">int</span>  iEta <span class="comment">/*= 19*/</span>)</div>
<div class="line"><a id="l00284" name="l00284"></a><span class="lineno">  284</span>{</div>
<div class="line"><a id="l00285" name="l00285"></a><span class="lineno">  285</span>    assert(pfSamples);</div>
<div class="line"><a id="l00286" name="l00286"></a><span class="lineno">  286</span>    assert(iDataLength &gt; iEta);</div>
<div class="line"><a id="l00287" name="l00287"></a><span class="lineno">  287</span>    assert(iEta &gt;= 0);</div>
<div class="line"><a id="l00288" name="l00288"></a><span class="lineno">  288</span> </div>
<div class="line"><a id="l00289" name="l00289"></a><span class="lineno">  289</span>    <span class="keywordflow">return</span> <a class="code hl_function" href="a00505.xhtml#a269d316eeb6000aac4f57ade32c83127">CVector::mulScalar</a>(pfSamples, &amp;pfSamples[iEta], <span class="keyword">static_cast&lt;</span><span class="keywordtype">long</span> <span class="keywordtype">long</span><span class="keyword">&gt;</span>(iDataLength) - iEta);</div>
<div class="line"><a id="l00290" name="l00290"></a><span class="lineno">  290</span>}</div>
</div>
<div class="line"><a id="l00291" name="l00291"></a><span class="lineno">  291</span> </div>
<div class="foldopen" id="foldopen00292" data-start="{" data-end="}">
<div class="line"><a id="l00292" name="l00292"></a><span class="lineno"><a class="line" href="a00473.xhtml#a8343fab849f52e77639b46e759e7e49d">  292</a></span><span class="keywordtype">float</span> <a class="code hl_function" href="a00473.xhtml#a8343fab849f52e77639b46e759e7e49d">CFeatureFromBlockIf::compFeatureTimePeakEnvelope</a>(<span class="keyword">const</span> <span class="keywordtype">float</span> *pfSamples, <span class="keywordtype">int</span> iDataLength, <span class="keywordtype">float</span> <span class="comment">/*fSampleRate = 1.F*/</span>)</div>
<div class="line"><a id="l00293" name="l00293"></a><span class="lineno">  293</span>{</div>
<div class="line"><a id="l00294" name="l00294"></a><span class="lineno">  294</span>    assert(pfSamples);</div>
<div class="line"><a id="l00295" name="l00295"></a><span class="lineno">  295</span>    assert(iDataLength &gt; 0);</div>
<div class="line"><a id="l00296" name="l00296"></a><span class="lineno">  296</span> </div>
<div class="line"><a id="l00297" name="l00297"></a><span class="lineno">  297</span>    <span class="keywordflow">return</span> <a class="code hl_function" href="a00505.xhtml#a9f5be871090bc5a64a7732cebfb4f8ec">CVector::getMax</a>(pfSamples, iDataLength);</div>
<div class="line"><a id="l00298" name="l00298"></a><span class="lineno">  298</span>}</div>
</div>
<div class="line"><a id="l00299" name="l00299"></a><span class="lineno">  299</span> </div>
<div class="foldopen" id="foldopen00300" data-start="{" data-end="}">
<div class="line"><a id="l00300" name="l00300"></a><span class="lineno"><a class="line" href="a00473.xhtml#a4eca7f209c771fb5008fa08facffd598">  300</a></span><span class="keywordtype">float</span> <a class="code hl_function" href="a00473.xhtml#a4eca7f209c771fb5008fa08facffd598">CFeatureFromBlockIf::compFeatureTimeStd</a>(<span class="keyword">const</span> <span class="keywordtype">float</span> *pfSamples, <span class="keywordtype">int</span> iDataLength, <span class="keywordtype">float</span> <span class="comment">/*fSampleRate = 1.F*/</span>)</div>
<div class="line"><a id="l00301" name="l00301"></a><span class="lineno">  301</span>{</div>
<div class="line"><a id="l00302" name="l00302"></a><span class="lineno">  302</span>    assert(pfSamples);</div>
<div class="line"><a id="l00303" name="l00303"></a><span class="lineno">  303</span>    assert(iDataLength &gt; 0);</div>
<div class="line"><a id="l00304" name="l00304"></a><span class="lineno">  304</span> </div>
<div class="line"><a id="l00305" name="l00305"></a><span class="lineno">  305</span>    <span class="keywordflow">return</span> <a class="code hl_function" href="a00505.xhtml#ae2ed42101e3d7075f5dec265a23f3424">CVector::getStd</a>(pfSamples, iDataLength);</div>
<div class="line"><a id="l00306" name="l00306"></a><span class="lineno">  306</span>}</div>
</div>
<div class="line"><a id="l00307" name="l00307"></a><span class="lineno">  307</span> </div>
<div class="foldopen" id="foldopen00308" data-start="{" data-end="}">
<div class="line"><a id="l00308" name="l00308"></a><span class="lineno"><a class="line" href="a00473.xhtml#a46500f9eaa49f3860afa5f1fce555415">  308</a></span><span class="keywordtype">float</span> <a class="code hl_function" href="a00473.xhtml#a46500f9eaa49f3860afa5f1fce555415">CFeatureFromBlockIf::compFeatureTimeRms</a>(<span class="keyword">const</span> <span class="keywordtype">float</span> *pfSamples, <span class="keywordtype">int</span> iDataLength, <span class="keywordtype">float</span> <span class="comment">/*fSampleRate = 1.F*/</span>)</div>
<div class="line"><a id="l00309" name="l00309"></a><span class="lineno">  309</span>{</div>
<div class="line"><a id="l00310" name="l00310"></a><span class="lineno">  310</span>    assert(pfSamples);</div>
<div class="line"><a id="l00311" name="l00311"></a><span class="lineno">  311</span>    assert(iDataLength &gt; 0);</div>
<div class="line"><a id="l00312" name="l00312"></a><span class="lineno">  312</span> </div>
<div class="line"><a id="l00313" name="l00313"></a><span class="lineno">  313</span>    <span class="keywordflow">return</span> <a class="code hl_function" href="a00505.xhtml#ae2ed42101e3d7075f5dec265a23f3424">CVector::getStd</a>(pfSamples, iDataLength, 0.F);</div>
<div class="line"><a id="l00314" name="l00314"></a><span class="lineno">  314</span>}</div>
</div>
<div class="line"><a id="l00315" name="l00315"></a><span class="lineno">  315</span> </div>
<div class="foldopen" id="foldopen00316" data-start="{" data-end="}">
<div class="line"><a id="l00316" name="l00316"></a><span class="lineno"><a class="line" href="a00473.xhtml#add9e6742349500c1323607b2508d311d">  316</a></span><span class="keywordtype">float</span> <a class="code hl_function" href="a00473.xhtml#add9e6742349500c1323607b2508d311d">CFeatureFromBlockIf::compFeatureTimeZeroCrossingRate</a>(<span class="keyword">const</span> <span class="keywordtype">float</span> *pfSamples, <span class="keywordtype">int</span> iDataLength, <span class="keywordtype">float</span> <span class="comment">/*fSampleRate = 1.F*/</span>)</div>
<div class="line"><a id="l00317" name="l00317"></a><span class="lineno">  317</span>{</div>
<div class="line"><a id="l00318" name="l00318"></a><span class="lineno">  318</span>    assert(pfSamples);</div>
<div class="line"><a id="l00319" name="l00319"></a><span class="lineno">  319</span>    assert(iDataLength &gt; 0);</div>
<div class="line"><a id="l00320" name="l00320"></a><span class="lineno">  320</span> </div>
<div class="line"><a id="l00321" name="l00321"></a><span class="lineno">  321</span>    <span class="keywordtype">float</span> fvzc = 0;</div>
<div class="line"><a id="l00322" name="l00322"></a><span class="lineno">  322</span> </div>
<div class="line"><a id="l00323" name="l00323"></a><span class="lineno">  323</span>    <span class="keywordtype">float</span> fPrevSign = 0;</div>
<div class="line"><a id="l00324" name="l00324"></a><span class="lineno">  324</span>    <span class="keywordflow">for</span> (<span class="keyword">auto</span> i = 0; i &lt; iDataLength; i++)</div>
<div class="line"><a id="l00325" name="l00325"></a><span class="lineno">  325</span>    {</div>
<div class="line"><a id="l00326" name="l00326"></a><span class="lineno">  326</span>        <span class="keywordtype">float</span> fCurrSign = <a class="code hl_function" href="a00501.xhtml#a8d740c45e33ce98f9415bdcf78174600">CUtil::sign</a>(pfSamples[i]);</div>
<div class="line"><a id="l00327" name="l00327"></a><span class="lineno">  327</span>        fvzc += std::abs(fCurrSign - fPrevSign);</div>
<div class="line"><a id="l00328" name="l00328"></a><span class="lineno">  328</span>        fPrevSign = fCurrSign;</div>
<div class="line"><a id="l00329" name="l00329"></a><span class="lineno">  329</span>    }</div>
<div class="line"><a id="l00330" name="l00330"></a><span class="lineno">  330</span> </div>
<div class="line"><a id="l00331" name="l00331"></a><span class="lineno">  331</span>    <span class="comment">// standardize feature </span></div>
<div class="line"><a id="l00332" name="l00332"></a><span class="lineno">  332</span>    <span class="keywordflow">return</span> fvzc / (2 * iDataLength);</div>
<div class="line"><a id="l00333" name="l00333"></a><span class="lineno">  333</span>}</div>
</div>
<div class="line"><a id="l00334" name="l00334"></a><span class="lineno">  334</span> </div>
<div class="line"><a id="l00335" name="l00335"></a><span class="lineno"><a class="line" href="a00473.xhtml#a26bc5632321408486bf3fccfa3fbfa1c">  335</a></span><a class="code hl_function" href="a00473.xhtml#a483bca508e2817799a3173a6180d245e">CFeatureFromBlockIf::CFeatureFromBlockIf</a>(<a class="code hl_enumeration" href="a00469.xhtml#a47ca14941c604beb42d60164b3e5e6b3">CFeatureIf::Feature_t</a> eFeatureIdx, <span class="keywordtype">int</span> iDataLength, <span class="keywordtype">float</span> fSampleRate) : <a class="code hl_variable" href="a00473.xhtml#a3cdaa6a50139576cf1aaa73f4b0d3b6f">m_eFeatureIdx</a>(eFeatureIdx), <a class="code hl_variable" href="a00473.xhtml#a2fefdb1b1217edd46c2b4e9336fa2aed">m_iDataLength</a>(iDataLength), <a class="code hl_variable" href="a00473.xhtml#a75ac4ef94667058662a8100bb1c1e1cd">m_fSampleRate</a>(fSampleRate) { assert(iDataLength &gt; 0); }</div>
<div class="line"><a id="l00336" name="l00336"></a><span class="lineno">  336</span> </div>
<div class="line"><a id="l00337" name="l00337"></a><span class="lineno">  337</span><span class="comment"></span> </div>
<div class="line"><a id="l00338" name="l00338"></a><span class="lineno">  338</span><span class="comment">///////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a id="l00339" name="l00339"></a><span class="lineno">  339</span><span class="comment">// features that need &quot;memory&quot; so can&#39;t easily work as static functions</span></div>
<div class="line"><a id="l00340" name="l00340"></a><span class="lineno">  340</span><span class="comment"></span> </div>
<div class="line"><a id="l00341" name="l00341"></a><span class="lineno">  341</span><span class="comment">/*! \brief class for computation of the spectral flux</span></div>
<div class="line"><a id="l00342" name="l00342"></a><span class="lineno">  342</span><span class="comment">*/</span></div>
<div class="foldopen" id="foldopen00343" data-start="{" data-end="};">
<div class="line"><a id="l00343" name="l00343"></a><span class="lineno"><a class="line" href="a00329.xhtml">  343</a></span><span class="keyword">class </span><a class="code hl_function" href="a00329.xhtml#a1a45f132f54b2f2f3d63f0827dc8300f">CFeatureSpectralFlux</a> : <span class="keyword">public</span> <a class="code hl_function" href="a00473.xhtml#a483bca508e2817799a3173a6180d245e">CFeatureFromBlockIf</a></div>
<div class="line"><a id="l00344" name="l00344"></a><span class="lineno">  344</span>{</div>
<div class="line"><a id="l00345" name="l00345"></a><span class="lineno">  345</span><span class="keyword">public</span>:</div>
<div class="foldopen" id="foldopen00346" data-start="{" data-end="}">
<div class="line"><a id="l00346" name="l00346"></a><span class="lineno"><a class="line" href="a00329.xhtml#a1a45f132f54b2f2f3d63f0827dc8300f">  346</a></span>    <a class="code hl_function" href="a00329.xhtml#a1a45f132f54b2f2f3d63f0827dc8300f">CFeatureSpectralFlux</a>(<a class="code hl_enumeration" href="a00469.xhtml#a47ca14941c604beb42d60164b3e5e6b3">CFeatureIf::Feature_t</a> eFeatureIdx, <span class="keywordtype">int</span> iDataLength, <span class="keywordtype">float</span> fSampleRate) : <a class="code hl_function" href="a00473.xhtml#a483bca508e2817799a3173a6180d245e">CFeatureFromBlockIf</a>(eFeatureIdx, iDataLength, fSampleRate)</div>
<div class="line"><a id="l00347" name="l00347"></a><span class="lineno">  347</span>    {</div>
<div class="line"><a id="l00348" name="l00348"></a><span class="lineno">  348</span>        <a class="code hl_function" href="a00505.xhtml#abaadac98b1cad18b7b568852bc951696">CVector::alloc</a>(<a class="code hl_variable" href="a00329.xhtml#a0e7559e5ea0ca227f148f06aaa8edc06">m_pfPrevSpec</a>, <a class="code hl_variable" href="a00473.xhtml#a2fefdb1b1217edd46c2b4e9336fa2aed">m_iDataLength</a>);</div>
<div class="line"><a id="l00349" name="l00349"></a><span class="lineno">  349</span>        <a class="code hl_function" href="a00505.xhtml#a6dbb3f9f480568b60f7fe50090d20003">CVector::setZero</a>(<a class="code hl_variable" href="a00329.xhtml#a0e7559e5ea0ca227f148f06aaa8edc06">m_pfPrevSpec</a>, <a class="code hl_variable" href="a00473.xhtml#a2fefdb1b1217edd46c2b4e9336fa2aed">m_iDataLength</a>);</div>
<div class="line"><a id="l00350" name="l00350"></a><span class="lineno">  350</span>    };</div>
</div>
<div class="line"><a id="l00351" name="l00351"></a><span class="lineno">  351</span> </div>
<div class="foldopen" id="foldopen00352" data-start="{" data-end="}">
<div class="line"><a id="l00352" name="l00352"></a><span class="lineno"><a class="line" href="a00329.xhtml#a3c5685b11c974c54df140122f7cbae9d">  352</a></span>    <span class="keyword">virtual</span> <a class="code hl_function" href="a00329.xhtml#a3c5685b11c974c54df140122f7cbae9d">~CFeatureSpectralFlux</a>()</div>
<div class="line"><a id="l00353" name="l00353"></a><span class="lineno">  353</span>    {</div>
<div class="line"><a id="l00354" name="l00354"></a><span class="lineno">  354</span>        <a class="code hl_function" href="a00505.xhtml#aa86bdb0c663d4d52f2765793756f8737">CVector::free</a>(<a class="code hl_variable" href="a00329.xhtml#a0e7559e5ea0ca227f148f06aaa8edc06">m_pfPrevSpec</a>);</div>
<div class="line"><a id="l00355" name="l00355"></a><span class="lineno">  355</span>    };</div>
</div>
<div class="line"><a id="l00356" name="l00356"></a><span class="lineno">  356</span> </div>
<div class="foldopen" id="foldopen00357" data-start="{" data-end="}">
<div class="line"><a id="l00357" name="l00357"></a><span class="lineno"><a class="line" href="a00329.xhtml#a01d9b56bba6b925332816534765b7723">  357</a></span>    <a class="code hl_enumeration" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> <a class="code hl_function" href="a00329.xhtml#a01d9b56bba6b925332816534765b7723">compFeature</a>(<span class="keywordtype">float</span> *pfFeature, <span class="keyword">const</span> <span class="keywordtype">float</span> *pfIn)<span class="keyword"> override</span></div>
<div class="line"><a id="l00358" name="l00358"></a><span class="lineno">  358</span><span class="keyword">    </span>{</div>
<div class="line"><a id="l00359" name="l00359"></a><span class="lineno">  359</span>        *pfFeature = <a class="code hl_function" href="a00473.xhtml#a42b11faa0f65881702ad7dcc1398ec5f">compFeatureSpectralFlux</a>(pfIn, <a class="code hl_variable" href="a00329.xhtml#a0e7559e5ea0ca227f148f06aaa8edc06">m_pfPrevSpec</a>, <a class="code hl_variable" href="a00473.xhtml#a2fefdb1b1217edd46c2b4e9336fa2aed">m_iDataLength</a>, <a class="code hl_variable" href="a00473.xhtml#a75ac4ef94667058662a8100bb1c1e1cd">m_fSampleRate</a>);</div>
<div class="line"><a id="l00360" name="l00360"></a><span class="lineno">  360</span> </div>
<div class="line"><a id="l00361" name="l00361"></a><span class="lineno">  361</span>        <a class="code hl_function" href="a00505.xhtml#ad7c5cba73e439adac77778f61c9418f0">CVector::copy</a>(<a class="code hl_variable" href="a00329.xhtml#a0e7559e5ea0ca227f148f06aaa8edc06">m_pfPrevSpec</a>, pfIn, <a class="code hl_variable" href="a00473.xhtml#a2fefdb1b1217edd46c2b4e9336fa2aed">m_iDataLength</a>);</div>
<div class="line"><a id="l00362" name="l00362"></a><span class="lineno">  362</span> </div>
<div class="line"><a id="l00363" name="l00363"></a><span class="lineno">  363</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><a id="l00364" name="l00364"></a><span class="lineno">  364</span>    };</div>
</div>
<div class="line"><a id="l00365" name="l00365"></a><span class="lineno">  365</span> </div>
<div class="line"><a id="l00366" name="l00366"></a><span class="lineno">  366</span><span class="keyword">private</span>:</div>
<div class="line"><a id="l00367" name="l00367"></a><span class="lineno"><a class="line" href="a00329.xhtml#a3d14a66015eeea822a51bc8011e7ffa6">  367</a></span>    <a class="code hl_function" href="a00329.xhtml#a3d14a66015eeea822a51bc8011e7ffa6">CFeatureSpectralFlux</a>() {};</div>
<div class="line"><a id="l00368" name="l00368"></a><span class="lineno"><a class="line" href="a00329.xhtml#a384605d1f9d59006342d548e7da1fd5c">  368</a></span>    <a class="code hl_function" href="a00329.xhtml#a384605d1f9d59006342d548e7da1fd5c">CFeatureSpectralFlux</a>(<span class="keyword">const</span> <a class="code hl_function" href="a00329.xhtml#a1a45f132f54b2f2f3d63f0827dc8300f">CFeatureSpectralFlux</a> &amp;that);     <span class="comment">//!&lt; disallow copy construction</span></div>
<div class="line"><a id="l00369" name="l00369"></a><span class="lineno"><a class="line" href="a00329.xhtml#a7edd2e4909ab2b6bda983779fa3b7fed">  369</a></span>    <a class="code hl_function" href="a00329.xhtml#a1a45f132f54b2f2f3d63f0827dc8300f">CFeatureSpectralFlux</a> &amp;<a class="code hl_function" href="a00329.xhtml#a7edd2e4909ab2b6bda983779fa3b7fed">operator=</a>(<span class="keyword">const</span> <a class="code hl_function" href="a00329.xhtml#a1a45f132f54b2f2f3d63f0827dc8300f">CFeatureSpectralFlux</a> &amp;c);</div>
<div class="line"><a id="l00370" name="l00370"></a><span class="lineno">  370</span> </div>
<div class="line"><a id="l00371" name="l00371"></a><span class="lineno"><a class="line" href="a00329.xhtml#a0e7559e5ea0ca227f148f06aaa8edc06">  371</a></span>    <span class="keywordtype">float</span> *<a class="code hl_variable" href="a00329.xhtml#a0e7559e5ea0ca227f148f06aaa8edc06">m_pfPrevSpec</a> = 0; <span class="comment">//!&lt; memory of previous spectrum</span></div>
<div class="line"><a id="l00372" name="l00372"></a><span class="lineno">  372</span>};</div>
</div>
<div class="line"><a id="l00373" name="l00373"></a><span class="lineno">  373</span><span class="comment"></span> </div>
<div class="line"><a id="l00374" name="l00374"></a><span class="lineno">  374</span><span class="comment">/*! \brief class for computation of the mfccs</span></div>
<div class="line"><a id="l00375" name="l00375"></a><span class="lineno">  375</span><span class="comment">*/</span></div>
<div class="foldopen" id="foldopen00376" data-start="{" data-end="};">
<div class="line"><a id="l00376" name="l00376"></a><span class="lineno"><a class="line" href="a00333.xhtml">  376</a></span><span class="keyword">class </span><a class="code hl_function" href="a00333.xhtml#a4ffe272900bf3ba5bbab219262506455">CFeatureSpectralMfccs</a> : <span class="keyword">public</span> <a class="code hl_function" href="a00473.xhtml#a483bca508e2817799a3173a6180d245e">CFeatureFromBlockIf</a></div>
<div class="line"><a id="l00377" name="l00377"></a><span class="lineno">  377</span>{</div>
<div class="line"><a id="l00378" name="l00378"></a><span class="lineno">  378</span><span class="keyword">public</span>:</div>
<div class="foldopen" id="foldopen00379" data-start="{" data-end="}">
<div class="line"><a id="l00379" name="l00379"></a><span class="lineno"><a class="line" href="a00333.xhtml#a4ffe272900bf3ba5bbab219262506455">  379</a></span>    <a class="code hl_function" href="a00333.xhtml#a4ffe272900bf3ba5bbab219262506455">CFeatureSpectralMfccs</a>(<a class="code hl_enumeration" href="a00469.xhtml#a47ca14941c604beb42d60164b3e5e6b3">CFeatureIf::Feature_t</a> eFeatureIdx, <span class="keywordtype">int</span> iDataLength, <span class="keywordtype">float</span> fSampleRate) : <a class="code hl_function" href="a00473.xhtml#a483bca508e2817799a3173a6180d245e">CFeatureFromBlockIf</a>(eFeatureIdx, iDataLength, fSampleRate)</div>
<div class="line"><a id="l00380" name="l00380"></a><span class="lineno">  380</span>    {</div>
<div class="line"><a id="l00381" name="l00381"></a><span class="lineno">  381</span>        <span class="comment">// alloc transfer function memory</span></div>
<div class="line"><a id="l00382" name="l00382"></a><span class="lineno">  382</span>        <a class="code hl_function" href="a00489.xhtml#a6501b78d76c912d49eee88c8f7242923">CMatrix::alloc</a>(<a class="code hl_variable" href="a00333.xhtml#ad58efcd5d0eebe8e956ff1e07a0edc17">m_ppfH</a>, <a class="code hl_variable" href="a00333.xhtml#ad8bac3da17b240643991fc6bf5840f32">m_iNumBands</a>, iDataLength);</div>
<div class="line"><a id="l00383" name="l00383"></a><span class="lineno">  383</span> </div>
<div class="line"><a id="l00384" name="l00384"></a><span class="lineno">  384</span>        <span class="comment">// init MFCC filters</span></div>
<div class="line"><a id="l00385" name="l00385"></a><span class="lineno">  385</span>        <a class="code hl_function" href="a00333.xhtml#a2123af520406a1b09fcf2437043c3b92">genMfccFilters_</a>();</div>
<div class="line"><a id="l00386" name="l00386"></a><span class="lineno">  386</span> </div>
<div class="line"><a id="l00387" name="l00387"></a><span class="lineno">  387</span>        <span class="comment">// init dct transform</span></div>
<div class="line"><a id="l00388" name="l00388"></a><span class="lineno">  388</span>        <a class="code hl_function" href="a00333.xhtml#a4fd7b7171c56ba1be8191ca660f6fbcc">genDctMat_</a>(<a class="code hl_variable" href="a00333.xhtml#acc5746c538c81cbbbc91b4c4558f7dd5">m_iNumMfcCoeffs</a>);</div>
<div class="line"><a id="l00389" name="l00389"></a><span class="lineno">  389</span> </div>
<div class="line"><a id="l00390" name="l00390"></a><span class="lineno">  390</span>        <a class="code hl_function" href="a00505.xhtml#abaadac98b1cad18b7b568852bc951696">CVector::alloc</a>(<a class="code hl_variable" href="a00333.xhtml#ab929d28489bf815a6b685c0348410422">m_pfMelSpec</a>, <a class="code hl_variable" href="a00333.xhtml#ad8bac3da17b240643991fc6bf5840f32">m_iNumBands</a>);</div>
<div class="line"><a id="l00391" name="l00391"></a><span class="lineno">  391</span>    }</div>
</div>
<div class="line"><a id="l00392" name="l00392"></a><span class="lineno">  392</span> </div>
<div class="foldopen" id="foldopen00393" data-start="{" data-end="}">
<div class="line"><a id="l00393" name="l00393"></a><span class="lineno"><a class="line" href="a00333.xhtml#abc120e956529cb5d1f6bf881d151bf19">  393</a></span>    <span class="keyword">virtual</span> <a class="code hl_function" href="a00333.xhtml#abc120e956529cb5d1f6bf881d151bf19">~CFeatureSpectralMfccs</a>()</div>
<div class="line"><a id="l00394" name="l00394"></a><span class="lineno">  394</span>    {</div>
<div class="line"><a id="l00395" name="l00395"></a><span class="lineno">  395</span>        <a class="code hl_function" href="a00489.xhtml#a591097c6b1935c4d6273b3445f8f552b">CMatrix::free</a>(<a class="code hl_variable" href="a00333.xhtml#ad58efcd5d0eebe8e956ff1e07a0edc17">m_ppfH</a>, <a class="code hl_variable" href="a00333.xhtml#ad8bac3da17b240643991fc6bf5840f32">m_iNumBands</a>);</div>
<div class="line"><a id="l00396" name="l00396"></a><span class="lineno">  396</span> </div>
<div class="line"><a id="l00397" name="l00397"></a><span class="lineno">  397</span>        <a class="code hl_function" href="a00333.xhtml#a9ad8bb5ff88bbbfe48231eab00e5e1d4">deleteDctMat_</a>();</div>
<div class="line"><a id="l00398" name="l00398"></a><span class="lineno">  398</span> </div>
<div class="line"><a id="l00399" name="l00399"></a><span class="lineno">  399</span>        <a class="code hl_function" href="a00505.xhtml#aa86bdb0c663d4d52f2765793756f8737">CVector::free</a>(<a class="code hl_variable" href="a00333.xhtml#ab929d28489bf815a6b685c0348410422">m_pfMelSpec</a>);</div>
<div class="line"><a id="l00400" name="l00400"></a><span class="lineno">  400</span>    }</div>
</div>
<div class="line"><a id="l00401" name="l00401"></a><span class="lineno">  401</span> </div>
<div class="foldopen" id="foldopen00402" data-start="{" data-end="}">
<div class="line"><a id="l00402" name="l00402"></a><span class="lineno"><a class="line" href="a00333.xhtml#aeccf9a57b512f1c7de90b4e260482f8a">  402</a></span>    <a class="code hl_enumeration" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> <a class="code hl_function" href="a00333.xhtml#aeccf9a57b512f1c7de90b4e260482f8a">compFeature</a>(<span class="keywordtype">float</span> *pfFeature, <span class="keyword">const</span> <span class="keywordtype">float</span> *pfIn)<span class="keyword"> override</span></div>
<div class="line"><a id="l00403" name="l00403"></a><span class="lineno">  403</span><span class="keyword">    </span>{</div>
<div class="line"><a id="l00404" name="l00404"></a><span class="lineno">  404</span>        assert(pfFeature);</div>
<div class="line"><a id="l00405" name="l00405"></a><span class="lineno">  405</span>        assert(pfIn);</div>
<div class="line"><a id="l00406" name="l00406"></a><span class="lineno">  406</span> </div>
<div class="line"><a id="l00407" name="l00407"></a><span class="lineno">  407</span>        <a class="code hl_function" href="a00505.xhtml#a6dbb3f9f480568b60f7fe50090d20003">CVector::setZero</a>(pfFeature, <a class="code hl_variable" href="a00333.xhtml#acc5746c538c81cbbbc91b4c4558f7dd5">m_iNumMfcCoeffs</a>);</div>
<div class="line"><a id="l00408" name="l00408"></a><span class="lineno">  408</span> </div>
<div class="line"><a id="l00409" name="l00409"></a><span class="lineno">  409</span>        <span class="comment">// compute mel spectrum</span></div>
<div class="line"><a id="l00410" name="l00410"></a><span class="lineno">  410</span>        <span class="keywordflow">for</span> (<span class="keyword">auto</span> c = 0; c &lt; <a class="code hl_variable" href="a00333.xhtml#ad8bac3da17b240643991fc6bf5840f32">m_iNumBands</a>; c++)</div>
<div class="line"><a id="l00411" name="l00411"></a><span class="lineno">  411</span>            <a class="code hl_variable" href="a00333.xhtml#ab929d28489bf815a6b685c0348410422">m_pfMelSpec</a>[c] = std::log10(<a class="code hl_function" href="a00505.xhtml#a269d316eeb6000aac4f57ade32c83127">CVector::mulScalar</a>(<a class="code hl_variable" href="a00333.xhtml#ad58efcd5d0eebe8e956ff1e07a0edc17">m_ppfH</a>[c], pfIn, <a class="code hl_variable" href="a00473.xhtml#a2fefdb1b1217edd46c2b4e9336fa2aed">m_iDataLength</a>) + 1e-20F);</div>
<div class="line"><a id="l00412" name="l00412"></a><span class="lineno">  412</span> </div>
<div class="line"><a id="l00413" name="l00413"></a><span class="lineno">  413</span>        <span class="comment">// compute dct</span></div>
<div class="line"><a id="l00414" name="l00414"></a><span class="lineno">  414</span>        <span class="keywordflow">for</span> (<span class="keyword">auto</span> j = 0; j &lt; <a class="code hl_variable" href="a00333.xhtml#acc5746c538c81cbbbc91b4c4558f7dd5">m_iNumMfcCoeffs</a>; j++)</div>
<div class="line"><a id="l00415" name="l00415"></a><span class="lineno">  415</span>            pfFeature[j] = <a class="code hl_function" href="a00505.xhtml#a269d316eeb6000aac4f57ade32c83127">CVector::mulScalar</a>(<a class="code hl_variable" href="a00333.xhtml#a5db1108b35d1c58451ae1eb617cf8591">m_ppfDct</a>[j], <a class="code hl_variable" href="a00333.xhtml#ab929d28489bf815a6b685c0348410422">m_pfMelSpec</a>, <a class="code hl_variable" href="a00333.xhtml#ad8bac3da17b240643991fc6bf5840f32">m_iNumBands</a>);</div>
<div class="line"><a id="l00416" name="l00416"></a><span class="lineno">  416</span> </div>
<div class="line"><a id="l00417" name="l00417"></a><span class="lineno">  417</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><a id="l00418" name="l00418"></a><span class="lineno">  418</span>    };</div>
</div>
<div class="line"><a id="l00419" name="l00419"></a><span class="lineno">  419</span> </div>
<div class="line"><a id="l00420" name="l00420"></a><span class="lineno">  420</span> </div>
<div class="foldopen" id="foldopen00421" data-start="{" data-end="}">
<div class="line"><a id="l00421" name="l00421"></a><span class="lineno"><a class="line" href="a00333.xhtml#a8cf08736ea318aa731360a217eba5340">  421</a></span>    <span class="keywordtype">int</span> <a class="code hl_function" href="a00333.xhtml#a8cf08736ea318aa731360a217eba5340">getFeatureDimensions</a>()<span class="keyword"> const override</span></div>
<div class="line"><a id="l00422" name="l00422"></a><span class="lineno">  422</span><span class="keyword">    </span>{</div>
<div class="line"><a id="l00423" name="l00423"></a><span class="lineno">  423</span>        <span class="keywordflow">return</span> <a class="code hl_variable" href="a00333.xhtml#acc5746c538c81cbbbc91b4c4558f7dd5">m_iNumMfcCoeffs</a>;</div>
<div class="line"><a id="l00424" name="l00424"></a><span class="lineno">  424</span>    }</div>
</div>
<div class="line"><a id="l00425" name="l00425"></a><span class="lineno">  425</span> </div>
<div class="foldopen" id="foldopen00426" data-start="{" data-end="}">
<div class="line"><a id="l00426" name="l00426"></a><span class="lineno"><a class="line" href="a00333.xhtml#ab3adc3df302d75ed8be5918eb18a52ab">  426</a></span>    <span class="keywordtype">bool</span> <a class="code hl_function" href="a00333.xhtml#ab3adc3df302d75ed8be5918eb18a52ab">hasAdditionalParam</a>()<span class="keyword"> const override</span></div>
<div class="line"><a id="l00427" name="l00427"></a><span class="lineno">  427</span><span class="keyword">    </span>{</div>
<div class="line"><a id="l00428" name="l00428"></a><span class="lineno">  428</span>        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a id="l00429" name="l00429"></a><span class="lineno">  429</span>    }</div>
</div>
<div class="line"><a id="l00430" name="l00430"></a><span class="lineno">  430</span> </div>
<div class="foldopen" id="foldopen00431" data-start="{" data-end="}">
<div class="line"><a id="l00431" name="l00431"></a><span class="lineno"><a class="line" href="a00333.xhtml#a6ffd2585db71bf5b44aedc15223525e6">  431</a></span>    <a class="code hl_enumeration" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> <a class="code hl_function" href="a00333.xhtml#a6ffd2585db71bf5b44aedc15223525e6">setAdditionalParam</a>(<span class="keywordtype">float</span> fParamValue)<span class="keyword"> override</span></div>
<div class="line"><a id="l00432" name="l00432"></a><span class="lineno">  432</span><span class="keyword">    </span>{</div>
<div class="line"><a id="l00433" name="l00433"></a><span class="lineno">  433</span>        <span class="keywordflow">if</span> (fParamValue &lt;= 0)</div>
<div class="line"><a id="l00434" name="l00434"></a><span class="lineno">  434</span>            <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248">Error_t::kFunctionInvalidArgsError</a>;</div>
<div class="line"><a id="l00435" name="l00435"></a><span class="lineno">  435</span> </div>
<div class="line"><a id="l00436" name="l00436"></a><span class="lineno">  436</span>        <a class="code hl_function" href="a00333.xhtml#a4fd7b7171c56ba1be8191ca660f6fbcc">genDctMat_</a>(<a class="code hl_function" href="a00501.xhtml#a9edb25bb88d789958e1740578b65cbbb">CUtil::float2int&lt;int&gt;</a>(fParamValue));</div>
<div class="line"><a id="l00437" name="l00437"></a><span class="lineno">  437</span> </div>
<div class="line"><a id="l00438" name="l00438"></a><span class="lineno">  438</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><a id="l00439" name="l00439"></a><span class="lineno">  439</span>    }</div>
</div>
<div class="line"><a id="l00440" name="l00440"></a><span class="lineno">  440</span><span class="keyword">private</span>:</div>
<div class="line"><a id="l00441" name="l00441"></a><span class="lineno"><a class="line" href="a00333.xhtml#a4aa17843a870798cf3d832dfb2eaaa03">  441</a></span>    <a class="code hl_function" href="a00333.xhtml#a4aa17843a870798cf3d832dfb2eaaa03">CFeatureSpectralMfccs</a>() {};</div>
<div class="line"><a id="l00442" name="l00442"></a><span class="lineno"><a class="line" href="a00333.xhtml#a889bd4dcf169493969f357136bc28781">  442</a></span>    <a class="code hl_function" href="a00333.xhtml#a889bd4dcf169493969f357136bc28781">CFeatureSpectralMfccs</a>(<span class="keyword">const</span> <a class="code hl_function" href="a00333.xhtml#a4ffe272900bf3ba5bbab219262506455">CFeatureSpectralMfccs</a> &amp;that);     <span class="comment">//!&lt; disallow copy construction  </span></div>
<div class="line"><a id="l00443" name="l00443"></a><span class="lineno"><a class="line" href="a00333.xhtml#a8a617855193547e88f305b0a20c91045">  443</a></span>    <a class="code hl_function" href="a00333.xhtml#a4ffe272900bf3ba5bbab219262506455">CFeatureSpectralMfccs</a> &amp;<a class="code hl_function" href="a00333.xhtml#a8a617855193547e88f305b0a20c91045">operator=</a>(<span class="keyword">const</span> <a class="code hl_function" href="a00333.xhtml#a4ffe272900bf3ba5bbab219262506455">CFeatureSpectralMfccs</a> &amp;c);</div>
<div class="line"><a id="l00444" name="l00444"></a><span class="lineno">  444</span> </div>
<div class="foldopen" id="foldopen00445" data-start="{" data-end="}">
<div class="line"><a id="l00445" name="l00445"></a><span class="lineno"><a class="line" href="a00333.xhtml#a2123af520406a1b09fcf2437043c3b92">  445</a></span>    <span class="keywordtype">void</span> <a class="code hl_function" href="a00333.xhtml#a2123af520406a1b09fcf2437043c3b92">genMfccFilters_</a>()</div>
<div class="line"><a id="l00446" name="l00446"></a><span class="lineno">  446</span>    {</div>
<div class="line"><a id="l00447" name="l00447"></a><span class="lineno">  447</span>        <span class="keyword">const</span> <span class="keywordtype">double</span> dFreq = 400. / 3.;</div>
<div class="line"><a id="l00448" name="l00448"></a><span class="lineno">  448</span>        <span class="keyword">const</span> <span class="keywordtype">int</span> iNumLinFilters = 13;</div>
<div class="line"><a id="l00449" name="l00449"></a><span class="lineno">  449</span>        <span class="keyword">const</span> <span class="keywordtype">double</span> dLinSpacing = 200. / 3.,</div>
<div class="line"><a id="l00450" name="l00450"></a><span class="lineno">  450</span>            dLogSpacing = 1.0711703; <span class="comment">// note sure where this mel resolution comes from exactly</span></div>
<div class="line"><a id="l00451" name="l00451"></a><span class="lineno">  451</span> </div>
<div class="line"><a id="l00452" name="l00452"></a><span class="lineno">  452</span>        assert(<a class="code hl_variable" href="a00333.xhtml#ad8bac3da17b240643991fc6bf5840f32">m_iNumBands</a> &gt; iNumLinFilters);</div>
<div class="line"><a id="l00453" name="l00453"></a><span class="lineno">  453</span>        <span class="keywordtype">double</span> adBoundFreqs[3] = { dFreq,</div>
<div class="line"><a id="l00454" name="l00454"></a><span class="lineno">  454</span>            dFreq + dLinSpacing,</div>
<div class="line"><a id="l00455" name="l00455"></a><span class="lineno">  455</span>            dFreq + 2. * dLinSpacing };</div>
<div class="line"><a id="l00456" name="l00456"></a><span class="lineno">  456</span>        <span class="keywordtype">int</span> aiBoundIdx[3] = { <span class="keyword">static_cast&lt;</span><span class="keywordtype">int</span><span class="keyword">&gt;</span>(<a class="code hl_function" href="a00553.xhtml#ada82d84a69f4c77266835f1f06ca2ecb">CConversion::convertFreq2Bin</a>(<span class="keyword">static_cast&lt;</span><span class="keywordtype">float</span><span class="keyword">&gt;</span>(adBoundFreqs[0]), (<a class="code hl_variable" href="a00473.xhtml#a2fefdb1b1217edd46c2b4e9336fa2aed">m_iDataLength</a> - 1) * 2, <a class="code hl_variable" href="a00473.xhtml#a75ac4ef94667058662a8100bb1c1e1cd">m_fSampleRate</a>)),</div>
<div class="line"><a id="l00457" name="l00457"></a><span class="lineno">  457</span>            <span class="keyword">static_cast&lt;</span><span class="keywordtype">int</span><span class="keyword">&gt;</span>(<a class="code hl_function" href="a00553.xhtml#ada82d84a69f4c77266835f1f06ca2ecb">CConversion::convertFreq2Bin</a>(<span class="keyword">static_cast&lt;</span><span class="keywordtype">float</span><span class="keyword">&gt;</span>(adBoundFreqs[1]), (<a class="code hl_variable" href="a00473.xhtml#a2fefdb1b1217edd46c2b4e9336fa2aed">m_iDataLength</a> - 1) * 2, <a class="code hl_variable" href="a00473.xhtml#a75ac4ef94667058662a8100bb1c1e1cd">m_fSampleRate</a>)),</div>
<div class="line"><a id="l00458" name="l00458"></a><span class="lineno">  458</span>            <span class="keyword">static_cast&lt;</span><span class="keywordtype">int</span><span class="keyword">&gt;</span>(<a class="code hl_function" href="a00553.xhtml#ada82d84a69f4c77266835f1f06ca2ecb">CConversion::convertFreq2Bin</a>(<span class="keyword">static_cast&lt;</span><span class="keywordtype">float</span><span class="keyword">&gt;</span>(adBoundFreqs[2]), (<a class="code hl_variable" href="a00473.xhtml#a2fefdb1b1217edd46c2b4e9336fa2aed">m_iDataLength</a> - 1) * 2, <a class="code hl_variable" href="a00473.xhtml#a75ac4ef94667058662a8100bb1c1e1cd">m_fSampleRate</a>)) };</div>
<div class="line"><a id="l00459" name="l00459"></a><span class="lineno">  459</span> </div>
<div class="line"><a id="l00460" name="l00460"></a><span class="lineno">  460</span>        <span class="keywordflow">for</span> (<span class="keyword">auto</span> c = 0; c &lt; <a class="code hl_variable" href="a00333.xhtml#ad8bac3da17b240643991fc6bf5840f32">m_iNumBands</a>; c++)</div>
<div class="line"><a id="l00461" name="l00461"></a><span class="lineno">  461</span>        {</div>
<div class="line"><a id="l00462" name="l00462"></a><span class="lineno">  462</span>            <span class="keywordtype">double</span> dFilterAmp = 2. / (adBoundFreqs[2] - adBoundFreqs[0]);</div>
<div class="line"><a id="l00463" name="l00463"></a><span class="lineno">  463</span> </div>
<div class="line"><a id="l00464" name="l00464"></a><span class="lineno">  464</span>            <span class="comment">// upward slope</span></div>
<div class="line"><a id="l00465" name="l00465"></a><span class="lineno">  465</span>            <span class="keywordflow">for</span> (<span class="keyword">auto</span> k = aiBoundIdx[0]; k &lt;= aiBoundIdx[1]; k++)</div>
<div class="line"><a id="l00466" name="l00466"></a><span class="lineno">  466</span>            {</div>
<div class="line"><a id="l00467" name="l00467"></a><span class="lineno">  467</span>                <span class="keywordtype">float</span> fFreqk = <a class="code hl_function" href="a00553.xhtml#aebe59f905b1dd02058cccbb062de6507">CConversion::convertBin2Freq</a>(1.F * k, (<a class="code hl_variable" href="a00473.xhtml#a2fefdb1b1217edd46c2b4e9336fa2aed">m_iDataLength</a> - 1) * 2, <a class="code hl_variable" href="a00473.xhtml#a75ac4ef94667058662a8100bb1c1e1cd">m_fSampleRate</a>);</div>
<div class="line"><a id="l00468" name="l00468"></a><span class="lineno">  468</span>                <span class="keywordflow">if</span> ((fFreqk - adBoundFreqs[0]) &lt;= 0.F)</div>
<div class="line"><a id="l00469" name="l00469"></a><span class="lineno">  469</span>                    <span class="keywordflow">continue</span>;</div>
<div class="line"><a id="l00470" name="l00470"></a><span class="lineno">  470</span>                <a class="code hl_variable" href="a00333.xhtml#ad58efcd5d0eebe8e956ff1e07a0edc17">m_ppfH</a>[c][k] = <span class="keyword">static_cast&lt;</span><span class="keywordtype">float</span><span class="keyword">&gt;</span>(dFilterAmp * (fFreqk - adBoundFreqs[0]) / (adBoundFreqs[1] - adBoundFreqs[0]));</div>
<div class="line"><a id="l00471" name="l00471"></a><span class="lineno">  471</span>                assert(<a class="code hl_variable" href="a00333.xhtml#ad58efcd5d0eebe8e956ff1e07a0edc17">m_ppfH</a>[c][k] &gt;= 0);</div>
<div class="line"><a id="l00472" name="l00472"></a><span class="lineno">  472</span>            }</div>
<div class="line"><a id="l00473" name="l00473"></a><span class="lineno">  473</span> </div>
<div class="line"><a id="l00474" name="l00474"></a><span class="lineno">  474</span>            <span class="comment">// downward slope</span></div>
<div class="line"><a id="l00475" name="l00475"></a><span class="lineno">  475</span>            <span class="keywordflow">for</span> (<span class="keyword">auto</span> k = aiBoundIdx[1] + 1; k &lt;= aiBoundIdx[2]; k++)</div>
<div class="line"><a id="l00476" name="l00476"></a><span class="lineno">  476</span>            {</div>
<div class="line"><a id="l00477" name="l00477"></a><span class="lineno">  477</span>                <span class="keywordtype">float</span> fFreqk = <a class="code hl_function" href="a00553.xhtml#aebe59f905b1dd02058cccbb062de6507">CConversion::convertBin2Freq</a>(1.F * k, (<a class="code hl_variable" href="a00473.xhtml#a2fefdb1b1217edd46c2b4e9336fa2aed">m_iDataLength</a> - 1) * 2, <a class="code hl_variable" href="a00473.xhtml#a75ac4ef94667058662a8100bb1c1e1cd">m_fSampleRate</a>);</div>
<div class="line"><a id="l00478" name="l00478"></a><span class="lineno">  478</span>                <a class="code hl_variable" href="a00333.xhtml#ad58efcd5d0eebe8e956ff1e07a0edc17">m_ppfH</a>[c][k] = <span class="keyword">static_cast&lt;</span><span class="keywordtype">float</span><span class="keyword">&gt;</span>(dFilterAmp * (adBoundFreqs[2] - fFreqk) / (adBoundFreqs[2] - adBoundFreqs[1]));</div>
<div class="line"><a id="l00479" name="l00479"></a><span class="lineno">  479</span>                assert(<a class="code hl_variable" href="a00333.xhtml#ad58efcd5d0eebe8e956ff1e07a0edc17">m_ppfH</a>[c][k] &gt;= 0);</div>
<div class="line"><a id="l00480" name="l00480"></a><span class="lineno">  480</span>            }</div>
<div class="line"><a id="l00481" name="l00481"></a><span class="lineno">  481</span> </div>
<div class="line"><a id="l00482" name="l00482"></a><span class="lineno">  482</span>            <span class="comment">// proceed to next band</span></div>
<div class="line"><a id="l00483" name="l00483"></a><span class="lineno">  483</span>            adBoundFreqs[0] = adBoundFreqs[1];</div>
<div class="line"><a id="l00484" name="l00484"></a><span class="lineno">  484</span>            adBoundFreqs[1] = adBoundFreqs[2];</div>
<div class="line"><a id="l00485" name="l00485"></a><span class="lineno">  485</span>            adBoundFreqs[2] = (c &lt; iNumLinFilters - 3) ? adBoundFreqs[1] + dLinSpacing : adBoundFreqs[2] * dLogSpacing; <span class="comment">//!&lt; Check me</span></div>
<div class="line"><a id="l00486" name="l00486"></a><span class="lineno">  486</span>            aiBoundIdx[0] = aiBoundIdx[1];</div>
<div class="line"><a id="l00487" name="l00487"></a><span class="lineno">  487</span>            aiBoundIdx[1] = aiBoundIdx[2];</div>
<div class="line"><a id="l00488" name="l00488"></a><span class="lineno">  488</span>            aiBoundIdx[2] = <span class="keyword">static_cast&lt;</span><span class="keywordtype">int</span><span class="keyword">&gt;</span>(<a class="code hl_function" href="a00553.xhtml#ada82d84a69f4c77266835f1f06ca2ecb">CConversion::convertFreq2Bin</a>(<span class="keyword">static_cast&lt;</span><span class="keywordtype">float</span><span class="keyword">&gt;</span>(adBoundFreqs[2]), (<a class="code hl_variable" href="a00473.xhtml#a2fefdb1b1217edd46c2b4e9336fa2aed">m_iDataLength</a> - 1) * 2, <a class="code hl_variable" href="a00473.xhtml#a75ac4ef94667058662a8100bb1c1e1cd">m_fSampleRate</a>));</div>
<div class="line"><a id="l00489" name="l00489"></a><span class="lineno">  489</span>        }</div>
<div class="line"><a id="l00490" name="l00490"></a><span class="lineno">  490</span>    }</div>
</div>
<div class="line"><a id="l00491" name="l00491"></a><span class="lineno">  491</span> </div>
<div class="foldopen" id="foldopen00492" data-start="{" data-end="}">
<div class="line"><a id="l00492" name="l00492"></a><span class="lineno"><a class="line" href="a00333.xhtml#a4fd7b7171c56ba1be8191ca660f6fbcc">  492</a></span>    <span class="keywordtype">void</span> <a class="code hl_function" href="a00333.xhtml#a4fd7b7171c56ba1be8191ca660f6fbcc">genDctMat_</a>(<span class="keywordtype">int</span> iNumCoeffs)</div>
<div class="line"><a id="l00493" name="l00493"></a><span class="lineno">  493</span>    {</div>
<div class="line"><a id="l00494" name="l00494"></a><span class="lineno">  494</span>        <a class="code hl_function" href="a00333.xhtml#a939a14f9a0c6b6a7ac974b2899b57e95">allocDctMat_</a>(iNumCoeffs);</div>
<div class="line"><a id="l00495" name="l00495"></a><span class="lineno">  495</span> </div>
<div class="line"><a id="l00496" name="l00496"></a><span class="lineno">  496</span>        <span class="keywordflow">for</span> (<span class="keyword">auto</span> c = 0; c &lt; iNumCoeffs; c++)</div>
<div class="line"><a id="l00497" name="l00497"></a><span class="lineno">  497</span>        {</div>
<div class="line"><a id="l00498" name="l00498"></a><span class="lineno">  498</span>            <span class="keywordflow">for</span> (<span class="keyword">auto</span> b = 0; b &lt; <a class="code hl_variable" href="a00333.xhtml#ad8bac3da17b240643991fc6bf5840f32">m_iNumBands</a>; b++)</div>
<div class="line"><a id="l00499" name="l00499"></a><span class="lineno">  499</span>                <a class="code hl_variable" href="a00333.xhtml#a5db1108b35d1c58451ae1eb617cf8591">m_ppfDct</a>[c][b] = <span class="keyword">static_cast&lt;</span><span class="keywordtype">float</span><span class="keyword">&gt;</span>(std::cos(c * (2. * b + 1) * <a class="code hl_define" href="a00269.xhtml#ae71449b1cc6e6250b91f539153a7a0d3">M_PI</a> / 2. / <a class="code hl_variable" href="a00333.xhtml#ad8bac3da17b240643991fc6bf5840f32">m_iNumBands</a>));</div>
<div class="line"><a id="l00500" name="l00500"></a><span class="lineno">  500</span> </div>
<div class="line"><a id="l00501" name="l00501"></a><span class="lineno">  501</span>            <a class="code hl_function" href="a00505.xhtml#a9811f50434dd058d201290b2dc98bfcd">CVector::mulC_I</a>(<a class="code hl_variable" href="a00333.xhtml#a5db1108b35d1c58451ae1eb617cf8591">m_ppfDct</a>[c], 1 / std::sqrt(<a class="code hl_variable" href="a00333.xhtml#ad8bac3da17b240643991fc6bf5840f32">m_iNumBands</a> / 2.F), <a class="code hl_variable" href="a00333.xhtml#ad8bac3da17b240643991fc6bf5840f32">m_iNumBands</a>);</div>
<div class="line"><a id="l00502" name="l00502"></a><span class="lineno">  502</span>        }</div>
<div class="line"><a id="l00503" name="l00503"></a><span class="lineno">  503</span>        <a class="code hl_function" href="a00505.xhtml#a9811f50434dd058d201290b2dc98bfcd">CVector::mulC_I</a>(<a class="code hl_variable" href="a00333.xhtml#a5db1108b35d1c58451ae1eb617cf8591">m_ppfDct</a>[0], 1.F / std::sqrt(2.f), <a class="code hl_variable" href="a00333.xhtml#ad8bac3da17b240643991fc6bf5840f32">m_iNumBands</a>);</div>
<div class="line"><a id="l00504" name="l00504"></a><span class="lineno">  504</span> </div>
<div class="line"><a id="l00505" name="l00505"></a><span class="lineno">  505</span>        <a class="code hl_variable" href="a00333.xhtml#acc5746c538c81cbbbc91b4c4558f7dd5">m_iNumMfcCoeffs</a> = iNumCoeffs;</div>
<div class="line"><a id="l00506" name="l00506"></a><span class="lineno">  506</span>    }</div>
</div>
<div class="foldopen" id="foldopen00507" data-start="{" data-end="}">
<div class="line"><a id="l00507" name="l00507"></a><span class="lineno"><a class="line" href="a00333.xhtml#a939a14f9a0c6b6a7ac974b2899b57e95">  507</a></span>    <span class="keywordtype">void</span> <a class="code hl_function" href="a00333.xhtml#a939a14f9a0c6b6a7ac974b2899b57e95">allocDctMat_</a>(<span class="keywordtype">int</span> iNumCoeffs)</div>
<div class="line"><a id="l00508" name="l00508"></a><span class="lineno">  508</span>    {</div>
<div class="line"><a id="l00509" name="l00509"></a><span class="lineno">  509</span>        <span class="keywordflow">if</span> (<a class="code hl_variable" href="a00333.xhtml#a5db1108b35d1c58451ae1eb617cf8591">m_ppfDct</a>)</div>
<div class="line"><a id="l00510" name="l00510"></a><span class="lineno">  510</span>            <a class="code hl_function" href="a00333.xhtml#a9ad8bb5ff88bbbfe48231eab00e5e1d4">deleteDctMat_</a>();</div>
<div class="line"><a id="l00511" name="l00511"></a><span class="lineno">  511</span> </div>
<div class="line"><a id="l00512" name="l00512"></a><span class="lineno">  512</span>        <a class="code hl_function" href="a00489.xhtml#a6501b78d76c912d49eee88c8f7242923">CMatrix::alloc</a>(<a class="code hl_variable" href="a00333.xhtml#a5db1108b35d1c58451ae1eb617cf8591">m_ppfDct</a>, iNumCoeffs, <a class="code hl_variable" href="a00333.xhtml#ad8bac3da17b240643991fc6bf5840f32">m_iNumBands</a>);</div>
<div class="line"><a id="l00513" name="l00513"></a><span class="lineno">  513</span>    }</div>
</div>
<div class="foldopen" id="foldopen00514" data-start="{" data-end="}">
<div class="line"><a id="l00514" name="l00514"></a><span class="lineno"><a class="line" href="a00333.xhtml#a9ad8bb5ff88bbbfe48231eab00e5e1d4">  514</a></span>    <span class="keywordtype">void</span> <a class="code hl_function" href="a00333.xhtml#a9ad8bb5ff88bbbfe48231eab00e5e1d4">deleteDctMat_</a>()</div>
<div class="line"><a id="l00515" name="l00515"></a><span class="lineno">  515</span>    {</div>
<div class="line"><a id="l00516" name="l00516"></a><span class="lineno">  516</span>        <a class="code hl_function" href="a00489.xhtml#a591097c6b1935c4d6273b3445f8f552b">CMatrix::free</a>(<a class="code hl_variable" href="a00333.xhtml#a5db1108b35d1c58451ae1eb617cf8591">m_ppfDct</a>, <a class="code hl_variable" href="a00333.xhtml#acc5746c538c81cbbbc91b4c4558f7dd5">m_iNumMfcCoeffs</a>);</div>
<div class="line"><a id="l00517" name="l00517"></a><span class="lineno">  517</span>    }</div>
</div>
<div class="line"><a id="l00518" name="l00518"></a><span class="lineno">  518</span> </div>
<div class="line"><a id="l00519" name="l00519"></a><span class="lineno"><a class="line" href="a00333.xhtml#ad8bac3da17b240643991fc6bf5840f32">  519</a></span>    <span class="keyword">const</span> <span class="keywordtype">int</span> <a class="code hl_variable" href="a00333.xhtml#ad8bac3da17b240643991fc6bf5840f32">m_iNumBands</a> = 40; <span class="comment">//!&lt; number of mel bands</span></div>
<div class="line"><a id="l00520" name="l00520"></a><span class="lineno"><a class="line" href="a00333.xhtml#acc5746c538c81cbbbc91b4c4558f7dd5">  520</a></span>    <span class="keywordtype">int</span> <a class="code hl_variable" href="a00333.xhtml#acc5746c538c81cbbbc91b4c4558f7dd5">m_iNumMfcCoeffs</a> = 13; <span class="comment">//!&lt; number of dct coefficients to extract</span></div>
<div class="line"><a id="l00521" name="l00521"></a><span class="lineno">  521</span> </div>
<div class="line"><a id="l00522" name="l00522"></a><span class="lineno"><a class="line" href="a00333.xhtml#ad58efcd5d0eebe8e956ff1e07a0edc17">  522</a></span>    <span class="keywordtype">float</span> **<a class="code hl_variable" href="a00333.xhtml#ad58efcd5d0eebe8e956ff1e07a0edc17">m_ppfH</a> = 0, <span class="comment">//!&lt; filter bank matrix</span></div>
<div class="line"><a id="l00523" name="l00523"></a><span class="lineno"><a class="line" href="a00333.xhtml#a5db1108b35d1c58451ae1eb617cf8591">  523</a></span>        **<a class="code hl_variable" href="a00333.xhtml#a5db1108b35d1c58451ae1eb617cf8591">m_ppfDct</a> = 0; <span class="comment">//!&lt; dct matrix</span></div>
<div class="line"><a id="l00524" name="l00524"></a><span class="lineno">  524</span> </div>
<div class="line"><a id="l00525" name="l00525"></a><span class="lineno"><a class="line" href="a00333.xhtml#ab929d28489bf815a6b685c0348410422">  525</a></span>    <span class="keywordtype">float</span> *<a class="code hl_variable" href="a00333.xhtml#ab929d28489bf815a6b685c0348410422">m_pfMelSpec</a> = 0; <span class="comment">//!&lt; mel-transformed spectrum</span></div>
<div class="line"><a id="l00526" name="l00526"></a><span class="lineno">  526</span>};</div>
</div>
<div class="line"><a id="l00527" name="l00527"></a><span class="lineno">  527</span><span class="comment"></span> </div>
<div class="line"><a id="l00528" name="l00528"></a><span class="lineno">  528</span><span class="comment">/*! \brief class for computation of the pitch chroma</span></div>
<div class="line"><a id="l00529" name="l00529"></a><span class="lineno">  529</span><span class="comment">*/</span></div>
<div class="foldopen" id="foldopen00530" data-start="{" data-end="};">
<div class="line"><a id="l00530" name="l00530"></a><span class="lineno"><a class="line" href="a00337.xhtml">  530</a></span><span class="keyword">class </span><a class="code hl_function" href="a00337.xhtml#a388f9c7dd2074706d723e31b421f16fa">CFeatureSpectralPitchChroma</a> : <span class="keyword">public</span> <a class="code hl_function" href="a00473.xhtml#a483bca508e2817799a3173a6180d245e">CFeatureFromBlockIf</a></div>
<div class="line"><a id="l00531" name="l00531"></a><span class="lineno">  531</span>{</div>
<div class="line"><a id="l00532" name="l00532"></a><span class="lineno">  532</span><span class="keyword">public</span>:</div>
<div class="foldopen" id="foldopen00533" data-start="{" data-end="}">
<div class="line"><a id="l00533" name="l00533"></a><span class="lineno"><a class="line" href="a00337.xhtml#a388f9c7dd2074706d723e31b421f16fa">  533</a></span>    <a class="code hl_function" href="a00337.xhtml#a388f9c7dd2074706d723e31b421f16fa">CFeatureSpectralPitchChroma</a>(<a class="code hl_enumeration" href="a00469.xhtml#a47ca14941c604beb42d60164b3e5e6b3">CFeatureIf::Feature_t</a> eFeatureIdx, <span class="keywordtype">int</span> iDataLength, <span class="keywordtype">float</span> fSampleRate) : <a class="code hl_function" href="a00473.xhtml#a483bca508e2817799a3173a6180d245e">CFeatureFromBlockIf</a>(eFeatureIdx, iDataLength, fSampleRate)</div>
<div class="line"><a id="l00534" name="l00534"></a><span class="lineno">  534</span>    {</div>
<div class="line"><a id="l00535" name="l00535"></a><span class="lineno">  535</span>        <span class="comment">// alloc transfer function memory</span></div>
<div class="line"><a id="l00536" name="l00536"></a><span class="lineno">  536</span>        <a class="code hl_function" href="a00489.xhtml#a6501b78d76c912d49eee88c8f7242923">CMatrix::alloc</a>(<a class="code hl_variable" href="a00337.xhtml#a8fbd2f0b1785563f6aceb78c067718c0">m_ppfH</a>, <a class="code hl_variable" href="a00337.xhtml#a143343cbcd9f206e5c22a9af056c5d66">m_iNumPitchClasses</a>, iDataLength);</div>
<div class="line"><a id="l00537" name="l00537"></a><span class="lineno">  537</span> </div>
<div class="line"><a id="l00538" name="l00538"></a><span class="lineno">  538</span>        <a class="code hl_function" href="a00337.xhtml#a88b4352ab8251a177a5351c638ad5b3c">genPcFilters_</a>();</div>
<div class="line"><a id="l00539" name="l00539"></a><span class="lineno">  539</span>    };</div>
</div>
<div class="line"><a id="l00540" name="l00540"></a><span class="lineno">  540</span> </div>
<div class="foldopen" id="foldopen00541" data-start="{" data-end="}">
<div class="line"><a id="l00541" name="l00541"></a><span class="lineno"><a class="line" href="a00337.xhtml#a2a538aa6aba4b54cc8968b0a757c3996">  541</a></span>    <span class="keyword">virtual</span> <a class="code hl_function" href="a00337.xhtml#a2a538aa6aba4b54cc8968b0a757c3996">~CFeatureSpectralPitchChroma</a>()</div>
<div class="line"><a id="l00542" name="l00542"></a><span class="lineno">  542</span>    {</div>
<div class="line"><a id="l00543" name="l00543"></a><span class="lineno">  543</span>        <a class="code hl_function" href="a00489.xhtml#a591097c6b1935c4d6273b3445f8f552b">CMatrix::free</a>(<a class="code hl_variable" href="a00337.xhtml#a8fbd2f0b1785563f6aceb78c067718c0">m_ppfH</a>, <a class="code hl_variable" href="a00337.xhtml#a143343cbcd9f206e5c22a9af056c5d66">m_iNumPitchClasses</a>);</div>
<div class="line"><a id="l00544" name="l00544"></a><span class="lineno">  544</span>    };</div>
</div>
<div class="line"><a id="l00545" name="l00545"></a><span class="lineno">  545</span> </div>
<div class="foldopen" id="foldopen00546" data-start="{" data-end="}">
<div class="line"><a id="l00546" name="l00546"></a><span class="lineno"><a class="line" href="a00337.xhtml#ac659cc10bad8a91121cd14533270497f">  546</a></span>    <a class="code hl_enumeration" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> <a class="code hl_function" href="a00337.xhtml#ac659cc10bad8a91121cd14533270497f">compFeature</a>(<span class="keywordtype">float</span> *pfFeature, <span class="keyword">const</span> <span class="keywordtype">float</span> *pfIn)<span class="keyword"> override</span></div>
<div class="line"><a id="l00547" name="l00547"></a><span class="lineno">  547</span><span class="keyword">    </span>{</div>
<div class="line"><a id="l00548" name="l00548"></a><span class="lineno">  548</span>        assert(pfFeature);</div>
<div class="line"><a id="l00549" name="l00549"></a><span class="lineno">  549</span>        assert(pfIn);</div>
<div class="line"><a id="l00550" name="l00550"></a><span class="lineno">  550</span> </div>
<div class="line"><a id="l00551" name="l00551"></a><span class="lineno">  551</span>        <a class="code hl_function" href="a00505.xhtml#a6dbb3f9f480568b60f7fe50090d20003">CVector::setZero</a>(pfFeature, <a class="code hl_variable" href="a00337.xhtml#a143343cbcd9f206e5c22a9af056c5d66">m_iNumPitchClasses</a>);</div>
<div class="line"><a id="l00552" name="l00552"></a><span class="lineno">  552</span> </div>
<div class="line"><a id="l00553" name="l00553"></a><span class="lineno">  553</span>        <span class="keywordflow">for</span> (<span class="keyword">auto</span> p = 0; p &lt; <a class="code hl_variable" href="a00337.xhtml#a143343cbcd9f206e5c22a9af056c5d66">m_iNumPitchClasses</a>; p++)</div>
<div class="line"><a id="l00554" name="l00554"></a><span class="lineno">  554</span>        {</div>
<div class="line"><a id="l00555" name="l00555"></a><span class="lineno">  555</span>            <span class="comment">// we could do this nicer with CVector::mulScalar if we allocated memory</span></div>
<div class="line"><a id="l00556" name="l00556"></a><span class="lineno">  556</span>            <span class="keywordflow">for</span> (<span class="keyword">auto</span> k = 0; k &lt; <a class="code hl_variable" href="a00473.xhtml#a2fefdb1b1217edd46c2b4e9336fa2aed">m_iDataLength</a>; k++)</div>
<div class="line"><a id="l00557" name="l00557"></a><span class="lineno">  557</span>                pfFeature[p] += <a class="code hl_variable" href="a00337.xhtml#a8fbd2f0b1785563f6aceb78c067718c0">m_ppfH</a>[p][k] * (pfIn[k] * pfIn[k]);</div>
<div class="line"><a id="l00558" name="l00558"></a><span class="lineno">  558</span>        }</div>
<div class="line"><a id="l00559" name="l00559"></a><span class="lineno">  559</span> </div>
<div class="line"><a id="l00560" name="l00560"></a><span class="lineno">  560</span>        <span class="comment">// normalize chroma</span></div>
<div class="line"><a id="l00561" name="l00561"></a><span class="lineno">  561</span>        <span class="keywordtype">float</span> fSum = <a class="code hl_function" href="a00505.xhtml#abdbcc3898121387f3694f74491b7331e">CVector::getSum</a>(pfFeature, <a class="code hl_variable" href="a00337.xhtml#a143343cbcd9f206e5c22a9af056c5d66">m_iNumPitchClasses</a>);</div>
<div class="line"><a id="l00562" name="l00562"></a><span class="lineno">  562</span>        <span class="keywordflow">if</span> (fSum &gt; 0)</div>
<div class="line"><a id="l00563" name="l00563"></a><span class="lineno">  563</span>            <a class="code hl_function" href="a00505.xhtml#a9811f50434dd058d201290b2dc98bfcd">CVector::mulC_I</a>(pfFeature, 1.F / fSum, <a class="code hl_variable" href="a00337.xhtml#a143343cbcd9f206e5c22a9af056c5d66">m_iNumPitchClasses</a>);</div>
<div class="line"><a id="l00564" name="l00564"></a><span class="lineno">  564</span> </div>
<div class="line"><a id="l00565" name="l00565"></a><span class="lineno">  565</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><a id="l00566" name="l00566"></a><span class="lineno">  566</span>    };</div>
</div>
<div class="line"><a id="l00567" name="l00567"></a><span class="lineno">  567</span> </div>
<div class="line"><a id="l00568" name="l00568"></a><span class="lineno">  568</span> </div>
<div class="foldopen" id="foldopen00569" data-start="{" data-end="}">
<div class="line"><a id="l00569" name="l00569"></a><span class="lineno"><a class="line" href="a00337.xhtml#a3da23c0c38b2876adb5e302419817592">  569</a></span>    <span class="keywordtype">int</span> <a class="code hl_function" href="a00337.xhtml#a3da23c0c38b2876adb5e302419817592">getFeatureDimensions</a>()<span class="keyword"> const override</span></div>
<div class="line"><a id="l00570" name="l00570"></a><span class="lineno">  570</span><span class="keyword">    </span>{</div>
<div class="line"><a id="l00571" name="l00571"></a><span class="lineno">  571</span>        <span class="keywordflow">return</span> <a class="code hl_variable" href="a00337.xhtml#a143343cbcd9f206e5c22a9af056c5d66">m_iNumPitchClasses</a>;</div>
<div class="line"><a id="l00572" name="l00572"></a><span class="lineno">  572</span>    }</div>
</div>
<div class="line"><a id="l00573" name="l00573"></a><span class="lineno">  573</span> </div>
<div class="foldopen" id="foldopen00574" data-start="{" data-end="}">
<div class="line"><a id="l00574" name="l00574"></a><span class="lineno"><a class="line" href="a00337.xhtml#acc84644f16e3d4518062e2843ab896e5">  574</a></span>    <span class="keywordtype">bool</span> <a class="code hl_function" href="a00337.xhtml#acc84644f16e3d4518062e2843ab896e5">hasAdditionalParam</a>()<span class="keyword"> const override</span></div>
<div class="line"><a id="l00575" name="l00575"></a><span class="lineno">  575</span><span class="keyword">    </span>{</div>
<div class="line"><a id="l00576" name="l00576"></a><span class="lineno">  576</span>        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a id="l00577" name="l00577"></a><span class="lineno">  577</span>    }</div>
</div>
<div class="line"><a id="l00578" name="l00578"></a><span class="lineno">  578</span> </div>
<div class="foldopen" id="foldopen00579" data-start="{" data-end="}">
<div class="line"><a id="l00579" name="l00579"></a><span class="lineno"><a class="line" href="a00337.xhtml#a6b4b3032eb9b09d9f64811613448c994">  579</a></span>    <a class="code hl_enumeration" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> <a class="code hl_function" href="a00337.xhtml#a6b4b3032eb9b09d9f64811613448c994">setAdditionalParam</a>(<span class="keywordtype">float</span> fParamValue)<span class="keyword"> override</span></div>
<div class="line"><a id="l00580" name="l00580"></a><span class="lineno">  580</span><span class="keyword">    </span>{</div>
<div class="line"><a id="l00581" name="l00581"></a><span class="lineno">  581</span>        <span class="keywordflow">if</span> (fParamValue &lt;= 0)</div>
<div class="line"><a id="l00582" name="l00582"></a><span class="lineno">  582</span>            <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248">Error_t::kFunctionInvalidArgsError</a>;</div>
<div class="line"><a id="l00583" name="l00583"></a><span class="lineno">  583</span> </div>
<div class="line"><a id="l00584" name="l00584"></a><span class="lineno">  584</span>        <a class="code hl_variable" href="a00337.xhtml#a775238351566f33d88f8b5a4b01792c2">m_iNumOctaves</a> = <a class="code hl_function" href="a00501.xhtml#a9edb25bb88d789958e1740578b65cbbb">CUtil::float2int&lt;int&gt;</a>(fParamValue);</div>
<div class="line"><a id="l00585" name="l00585"></a><span class="lineno">  585</span> </div>
<div class="line"><a id="l00586" name="l00586"></a><span class="lineno">  586</span>        <span class="comment">// recompute transformation matrix</span></div>
<div class="line"><a id="l00587" name="l00587"></a><span class="lineno">  587</span>        <a class="code hl_function" href="a00337.xhtml#a88b4352ab8251a177a5351c638ad5b3c">genPcFilters_</a>();</div>
<div class="line"><a id="l00588" name="l00588"></a><span class="lineno">  588</span> </div>
<div class="line"><a id="l00589" name="l00589"></a><span class="lineno">  589</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><a id="l00590" name="l00590"></a><span class="lineno">  590</span>    }</div>
</div>
<div class="line"><a id="l00591" name="l00591"></a><span class="lineno">  591</span><span class="keyword">private</span>:</div>
<div class="line"><a id="l00592" name="l00592"></a><span class="lineno"><a class="line" href="a00337.xhtml#adf053872d501f88bda80d2d789a2d9e2">  592</a></span>    <a class="code hl_function" href="a00337.xhtml#adf053872d501f88bda80d2d789a2d9e2">CFeatureSpectralPitchChroma</a>() {};</div>
<div class="line"><a id="l00593" name="l00593"></a><span class="lineno"><a class="line" href="a00337.xhtml#a65459d5a7887ad976fa88d8c3982b6a9">  593</a></span>    <a class="code hl_function" href="a00337.xhtml#a65459d5a7887ad976fa88d8c3982b6a9">CFeatureSpectralPitchChroma</a>(<span class="keyword">const</span> <a class="code hl_function" href="a00337.xhtml#a388f9c7dd2074706d723e31b421f16fa">CFeatureSpectralPitchChroma</a> &amp;that);     <span class="comment">//!&lt; disallow copy construction</span></div>
<div class="line"><a id="l00594" name="l00594"></a><span class="lineno"><a class="line" href="a00337.xhtml#ae1d53b43f413bc5c0f8800ca89d9e145">  594</a></span>    <a class="code hl_function" href="a00337.xhtml#a388f9c7dd2074706d723e31b421f16fa">CFeatureSpectralPitchChroma</a> &amp;<a class="code hl_function" href="a00337.xhtml#ae1d53b43f413bc5c0f8800ca89d9e145">operator=</a>(<span class="keyword">const</span> <a class="code hl_function" href="a00337.xhtml#a388f9c7dd2074706d723e31b421f16fa">CFeatureSpectralPitchChroma</a> &amp;c);</div>
<div class="line"><a id="l00595" name="l00595"></a><span class="lineno">  595</span> </div>
<div class="foldopen" id="foldopen00596" data-start="{" data-end="}">
<div class="line"><a id="l00596" name="l00596"></a><span class="lineno"><a class="line" href="a00337.xhtml#a88b4352ab8251a177a5351c638ad5b3c">  596</a></span>    <span class="keywordtype">void</span> <a class="code hl_function" href="a00337.xhtml#a88b4352ab8251a177a5351c638ad5b3c">genPcFilters_</a>()</div>
<div class="line"><a id="l00597" name="l00597"></a><span class="lineno">  597</span>    {</div>
<div class="line"><a id="l00598" name="l00598"></a><span class="lineno">  598</span>        <span class="keyword">const</span> <span class="keywordtype">float</span> fStartPitch = 60; <span class="comment">//!&lt; C4</span></div>
<div class="line"><a id="l00599" name="l00599"></a><span class="lineno">  599</span>        <span class="keywordtype">float</span> fMid = <a class="code hl_function" href="a00553.xhtml#a3461898be6be7ae7059904860f5231e1">CConversion::convertMidi2Freq</a>(fStartPitch, <a class="code hl_variable" href="a00337.xhtml#afed3f9bf0d871cd19bcb9a936b9343d8">m_fA4</a>);</div>
<div class="line"><a id="l00600" name="l00600"></a><span class="lineno">  600</span> </div>
<div class="line"><a id="l00601" name="l00601"></a><span class="lineno">  601</span>        <span class="comment">//sanity check: reduce number of octaves if highest freq is higher than half fs</span></div>
<div class="line"><a id="l00602" name="l00602"></a><span class="lineno">  602</span>        <span class="keywordflow">while</span> (fMid * std::exp2(<a class="code hl_variable" href="a00337.xhtml#a775238351566f33d88f8b5a4b01792c2">m_iNumOctaves</a>) &gt; <a class="code hl_variable" href="a00473.xhtml#a75ac4ef94667058662a8100bb1c1e1cd">m_fSampleRate</a> / 2)</div>
<div class="line"><a id="l00603" name="l00603"></a><span class="lineno">  603</span>            <a class="code hl_variable" href="a00337.xhtml#a775238351566f33d88f8b5a4b01792c2">m_iNumOctaves</a>--;</div>
<div class="line"><a id="l00604" name="l00604"></a><span class="lineno">  604</span>        <span class="keywordflow">if</span> (<a class="code hl_variable" href="a00337.xhtml#a775238351566f33d88f8b5a4b01792c2">m_iNumOctaves</a> &lt;= 0)</div>
<div class="line"><a id="l00605" name="l00605"></a><span class="lineno">  605</span>            <span class="keywordflow">return</span>;</div>
<div class="line"><a id="l00606" name="l00606"></a><span class="lineno">  606</span> </div>
<div class="line"><a id="l00607" name="l00607"></a><span class="lineno">  607</span>        <span class="keywordflow">for</span> (<span class="keyword">auto</span> p = 0; p &lt; <a class="code hl_variable" href="a00337.xhtml#a143343cbcd9f206e5c22a9af056c5d66">m_iNumPitchClasses</a>; p++)</div>
<div class="line"><a id="l00608" name="l00608"></a><span class="lineno">  608</span>        {</div>
<div class="line"><a id="l00609" name="l00609"></a><span class="lineno">  609</span>            <span class="keyword">const</span> <span class="keywordtype">float</span> fQuarterToneRatio = 1.02930223664349F;</div>
<div class="line"><a id="l00610" name="l00610"></a><span class="lineno">  610</span>            <span class="keywordtype">float</span> afBoundFreqs[2] = { fMid / fQuarterToneRatio,</div>
<div class="line"><a id="l00611" name="l00611"></a><span class="lineno">  611</span>                fMid * fQuarterToneRatio };</div>
<div class="line"><a id="l00612" name="l00612"></a><span class="lineno">  612</span> </div>
<div class="line"><a id="l00613" name="l00613"></a><span class="lineno">  613</span>            <span class="keywordflow">for</span> (<span class="keyword">auto</span> o = 0; o &lt; <a class="code hl_variable" href="a00337.xhtml#a775238351566f33d88f8b5a4b01792c2">m_iNumOctaves</a>; o++)</div>
<div class="line"><a id="l00614" name="l00614"></a><span class="lineno">  614</span>            {</div>
<div class="line"><a id="l00615" name="l00615"></a><span class="lineno">  615</span>                <span class="comment">// get indices from freqs</span></div>
<div class="line"><a id="l00616" name="l00616"></a><span class="lineno">  616</span>                <span class="keyword">const</span> <span class="keywordtype">int</span> aiBoundIdx[2] = { <span class="keyword">static_cast&lt;</span><span class="keywordtype">int</span><span class="keyword">&gt;</span>(<a class="code hl_function" href="a00553.xhtml#ada82d84a69f4c77266835f1f06ca2ecb">CConversion::convertFreq2Bin</a>(afBoundFreqs[0], (<a class="code hl_variable" href="a00473.xhtml#a2fefdb1b1217edd46c2b4e9336fa2aed">m_iDataLength</a> - 1) * 2, <a class="code hl_variable" href="a00473.xhtml#a75ac4ef94667058662a8100bb1c1e1cd">m_fSampleRate</a>)) + 1,</div>
<div class="line"><a id="l00617" name="l00617"></a><span class="lineno">  617</span>                    <span class="keyword">static_cast&lt;</span><span class="keywordtype">int</span><span class="keyword">&gt;</span>(<a class="code hl_function" href="a00553.xhtml#ada82d84a69f4c77266835f1f06ca2ecb">CConversion::convertFreq2Bin</a>(afBoundFreqs[1], (<a class="code hl_variable" href="a00473.xhtml#a2fefdb1b1217edd46c2b4e9336fa2aed">m_iDataLength</a> - 1) * 2, <a class="code hl_variable" href="a00473.xhtml#a75ac4ef94667058662a8100bb1c1e1cd">m_fSampleRate</a>)) };</div>
<div class="line"><a id="l00618" name="l00618"></a><span class="lineno">  618</span> </div>
<div class="line"><a id="l00619" name="l00619"></a><span class="lineno">  619</span>                <span class="comment">// set transfer function</span></div>
<div class="line"><a id="l00620" name="l00620"></a><span class="lineno">  620</span>                <a class="code hl_function" href="a00505.xhtml#a4cf9544dd96801e3ee47fd1ef2049a1b">CVector::setValue</a>(&amp;<a class="code hl_variable" href="a00337.xhtml#a8fbd2f0b1785563f6aceb78c067718c0">m_ppfH</a>[p][aiBoundIdx[0]], 1.F / (aiBoundIdx[1] - aiBoundIdx[0] + 1), <span class="keyword">static_cast&lt;</span><span class="keywordtype">long</span> <span class="keywordtype">long</span><span class="keyword">&gt;</span>(aiBoundIdx[1]) - aiBoundIdx[0] + 1);</div>
<div class="line"><a id="l00621" name="l00621"></a><span class="lineno">  621</span> </div>
<div class="line"><a id="l00622" name="l00622"></a><span class="lineno">  622</span>                <span class="comment">// proceed to next octave</span></div>
<div class="line"><a id="l00623" name="l00623"></a><span class="lineno">  623</span>                <span class="keywordflow">for</span> (<span class="keyword">auto</span> i = 0; i &lt; 2; i++)</div>
<div class="line"><a id="l00624" name="l00624"></a><span class="lineno">  624</span>                    afBoundFreqs[i] *= 2.F;</div>
<div class="line"><a id="l00625" name="l00625"></a><span class="lineno">  625</span>            }</div>
<div class="line"><a id="l00626" name="l00626"></a><span class="lineno">  626</span> </div>
<div class="line"><a id="l00627" name="l00627"></a><span class="lineno">  627</span>            <span class="comment">// proceed to next pitch class</span></div>
<div class="line"><a id="l00628" name="l00628"></a><span class="lineno">  628</span>            fMid *= fQuarterToneRatio * fQuarterToneRatio;</div>
<div class="line"><a id="l00629" name="l00629"></a><span class="lineno">  629</span>        }</div>
<div class="line"><a id="l00630" name="l00630"></a><span class="lineno">  630</span>    }</div>
</div>
<div class="line"><a id="l00631" name="l00631"></a><span class="lineno">  631</span> </div>
<div class="line"><a id="l00632" name="l00632"></a><span class="lineno"><a class="line" href="a00337.xhtml#a143343cbcd9f206e5c22a9af056c5d66">  632</a></span>    <span class="keyword">const</span> <span class="keywordtype">int</span> <a class="code hl_variable" href="a00337.xhtml#a143343cbcd9f206e5c22a9af056c5d66">m_iNumPitchClasses</a> = 12; <span class="comment">//!&lt; number of pitch classes</span></div>
<div class="line"><a id="l00633" name="l00633"></a><span class="lineno">  633</span> </div>
<div class="line"><a id="l00634" name="l00634"></a><span class="lineno"><a class="line" href="a00337.xhtml#afed3f9bf0d871cd19bcb9a936b9343d8">  634</a></span>    <span class="keyword">const</span> <span class="keywordtype">float</span> <a class="code hl_variable" href="a00337.xhtml#afed3f9bf0d871cd19bcb9a936b9343d8">m_fA4</a> = 440.F; <span class="comment">//!&lt; frequency of concert pitch</span></div>
<div class="line"><a id="l00635" name="l00635"></a><span class="lineno"><a class="line" href="a00337.xhtml#a775238351566f33d88f8b5a4b01792c2">  635</a></span>    <span class="keywordtype">int</span> <a class="code hl_variable" href="a00337.xhtml#a775238351566f33d88f8b5a4b01792c2">m_iNumOctaves</a> = 4; <span class="comment">//!&lt; number of octaves to aggregate</span></div>
<div class="line"><a id="l00636" name="l00636"></a><span class="lineno">  636</span> </div>
<div class="line"><a id="l00637" name="l00637"></a><span class="lineno"><a class="line" href="a00337.xhtml#a8fbd2f0b1785563f6aceb78c067718c0">  637</a></span>    <span class="keywordtype">float</span> **<a class="code hl_variable" href="a00337.xhtml#a8fbd2f0b1785563f6aceb78c067718c0">m_ppfH</a> = 0; <span class="comment">//!&lt; pitch filter bank matrix</span></div>
<div class="line"><a id="l00638" name="l00638"></a><span class="lineno">  638</span>};</div>
</div>
<div class="line"><a id="l00639" name="l00639"></a><span class="lineno">  639</span><span class="comment"></span> </div>
<div class="line"><a id="l00640" name="l00640"></a><span class="lineno">  640</span><span class="comment">/*! \brief class for computation of the spectral rolloff</span></div>
<div class="line"><a id="l00641" name="l00641"></a><span class="lineno">  641</span><span class="comment">*/</span></div>
<div class="foldopen" id="foldopen00642" data-start="{" data-end="};">
<div class="line"><a id="l00642" name="l00642"></a><span class="lineno"><a class="line" href="a00341.xhtml">  642</a></span><span class="keyword">class </span><a class="code hl_function" href="a00341.xhtml#a359548bbc22d19f80107d6a5be02ff3f">CFeatureSpectralRolloff</a> : <span class="keyword">public</span> <a class="code hl_function" href="a00473.xhtml#a483bca508e2817799a3173a6180d245e">CFeatureFromBlockIf</a></div>
<div class="line"><a id="l00643" name="l00643"></a><span class="lineno">  643</span>{</div>
<div class="line"><a id="l00644" name="l00644"></a><span class="lineno">  644</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00645" name="l00645"></a><span class="lineno"><a class="line" href="a00341.xhtml#a359548bbc22d19f80107d6a5be02ff3f">  645</a></span>    <a class="code hl_function" href="a00341.xhtml#a359548bbc22d19f80107d6a5be02ff3f">CFeatureSpectralRolloff</a>(<a class="code hl_enumeration" href="a00469.xhtml#a47ca14941c604beb42d60164b3e5e6b3">CFeatureIf::Feature_t</a> eFeatureIdx, <span class="keywordtype">int</span> iDataLength, <span class="keywordtype">float</span> fSampleRate) : <a class="code hl_function" href="a00473.xhtml#a483bca508e2817799a3173a6180d245e">CFeatureFromBlockIf</a>(eFeatureIdx, iDataLength, fSampleRate) {};</div>
<div class="line"><a id="l00646" name="l00646"></a><span class="lineno">  646</span> </div>
<div class="line"><a id="l00647" name="l00647"></a><span class="lineno"><a class="line" href="a00341.xhtml#a306b5b080d6754bd3363d140a8569ac4">  647</a></span>    <span class="keyword">virtual</span> <a class="code hl_function" href="a00341.xhtml#a306b5b080d6754bd3363d140a8569ac4">~CFeatureSpectralRolloff</a>() {};</div>
<div class="line"><a id="l00648" name="l00648"></a><span class="lineno">  648</span> </div>
<div class="foldopen" id="foldopen00649" data-start="{" data-end="}">
<div class="line"><a id="l00649" name="l00649"></a><span class="lineno"><a class="line" href="a00341.xhtml#ac52fdefa069114d576a8105182084648">  649</a></span>    <a class="code hl_enumeration" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> <a class="code hl_function" href="a00341.xhtml#ac52fdefa069114d576a8105182084648">compFeature</a>(<span class="keywordtype">float</span> *pfFeature, <span class="keyword">const</span> <span class="keywordtype">float</span> *pfIn)<span class="keyword"> override</span></div>
<div class="line"><a id="l00650" name="l00650"></a><span class="lineno">  650</span><span class="keyword">    </span>{</div>
<div class="line"><a id="l00651" name="l00651"></a><span class="lineno">  651</span>        *pfFeature = <a class="code hl_function" href="a00473.xhtml#a28b9430a480ce697a7dbd73527057ac6">compFeatureSpectralRolloff</a>(pfIn, <a class="code hl_variable" href="a00473.xhtml#a2fefdb1b1217edd46c2b4e9336fa2aed">m_iDataLength</a>, <a class="code hl_variable" href="a00473.xhtml#a75ac4ef94667058662a8100bb1c1e1cd">m_fSampleRate</a>, <a class="code hl_variable" href="a00341.xhtml#a02a9041087ff93f1a406103f34772a9c">m_fKappa</a>);</div>
<div class="line"><a id="l00652" name="l00652"></a><span class="lineno">  652</span> </div>
<div class="line"><a id="l00653" name="l00653"></a><span class="lineno">  653</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><a id="l00654" name="l00654"></a><span class="lineno">  654</span>    };</div>
</div>
<div class="line"><a id="l00655" name="l00655"></a><span class="lineno">  655</span> </div>
<div class="foldopen" id="foldopen00656" data-start="{" data-end="}">
<div class="line"><a id="l00656" name="l00656"></a><span class="lineno"><a class="line" href="a00341.xhtml#aace9db3eee49887a8fae69c07475fe19">  656</a></span>    <span class="keywordtype">bool</span> <a class="code hl_function" href="a00341.xhtml#aace9db3eee49887a8fae69c07475fe19">hasAdditionalParam</a>()<span class="keyword"> const override</span></div>
<div class="line"><a id="l00657" name="l00657"></a><span class="lineno">  657</span><span class="keyword">    </span>{</div>
<div class="line"><a id="l00658" name="l00658"></a><span class="lineno">  658</span>        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a id="l00659" name="l00659"></a><span class="lineno">  659</span>    }</div>
</div>
<div class="line"><a id="l00660" name="l00660"></a><span class="lineno">  660</span> </div>
<div class="foldopen" id="foldopen00661" data-start="{" data-end="}">
<div class="line"><a id="l00661" name="l00661"></a><span class="lineno"><a class="line" href="a00341.xhtml#ae0c52ddeb125740c60dd33c003e6b257">  661</a></span>    <a class="code hl_enumeration" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> <a class="code hl_function" href="a00341.xhtml#ae0c52ddeb125740c60dd33c003e6b257">setAdditionalParam</a>(<span class="keywordtype">float</span> fParamValue)<span class="keyword"> override</span></div>
<div class="line"><a id="l00662" name="l00662"></a><span class="lineno">  662</span><span class="keyword">    </span>{</div>
<div class="line"><a id="l00663" name="l00663"></a><span class="lineno">  663</span>        <span class="keywordflow">if</span> (fParamValue &lt;= 0 || fParamValue &gt; 1)</div>
<div class="line"><a id="l00664" name="l00664"></a><span class="lineno">  664</span>            <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><a id="l00665" name="l00665"></a><span class="lineno">  665</span> </div>
<div class="line"><a id="l00666" name="l00666"></a><span class="lineno">  666</span>        <a class="code hl_variable" href="a00341.xhtml#a02a9041087ff93f1a406103f34772a9c">m_fKappa</a> = fParamValue;</div>
<div class="line"><a id="l00667" name="l00667"></a><span class="lineno">  667</span> </div>
<div class="line"><a id="l00668" name="l00668"></a><span class="lineno">  668</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><a id="l00669" name="l00669"></a><span class="lineno">  669</span>    }</div>
</div>
<div class="line"><a id="l00670" name="l00670"></a><span class="lineno">  670</span> </div>
<div class="line"><a id="l00671" name="l00671"></a><span class="lineno">  671</span><span class="keyword">private</span>:</div>
<div class="line"><a id="l00672" name="l00672"></a><span class="lineno"><a class="line" href="a00341.xhtml#a45483b9e6364cf0b5a40109bae814c9a">  672</a></span>    <a class="code hl_function" href="a00341.xhtml#a45483b9e6364cf0b5a40109bae814c9a">CFeatureSpectralRolloff</a>() {};</div>
<div class="line"><a id="l00673" name="l00673"></a><span class="lineno">  673</span> </div>
<div class="line"><a id="l00674" name="l00674"></a><span class="lineno"><a class="line" href="a00341.xhtml#a02a9041087ff93f1a406103f34772a9c">  674</a></span>    <span class="keywordtype">float</span> <a class="code hl_variable" href="a00341.xhtml#a02a9041087ff93f1a406103f34772a9c">m_fKappa</a> = 0.85F; <span class="comment">//!&lt; bandwidth parameter</span></div>
<div class="line"><a id="l00675" name="l00675"></a><span class="lineno">  675</span>};</div>
</div>
<div class="line"><a id="l00676" name="l00676"></a><span class="lineno">  676</span><span class="comment"></span> </div>
<div class="line"><a id="l00677" name="l00677"></a><span class="lineno">  677</span><span class="comment">/*! \brief class for computation of the tonal power ratio</span></div>
<div class="line"><a id="l00678" name="l00678"></a><span class="lineno">  678</span><span class="comment">*/</span></div>
<div class="foldopen" id="foldopen00679" data-start="{" data-end="};">
<div class="line"><a id="l00679" name="l00679"></a><span class="lineno"><a class="line" href="a00345.xhtml">  679</a></span><span class="keyword">class </span><a class="code hl_function" href="a00345.xhtml#a7764422109054089962bc42187381be3">CFeatureSpectralTonalPowerRatio</a> : <span class="keyword">public</span> <a class="code hl_function" href="a00473.xhtml#a483bca508e2817799a3173a6180d245e">CFeatureFromBlockIf</a></div>
<div class="line"><a id="l00680" name="l00680"></a><span class="lineno">  680</span>{</div>
<div class="line"><a id="l00681" name="l00681"></a><span class="lineno">  681</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00682" name="l00682"></a><span class="lineno"><a class="line" href="a00345.xhtml#a7764422109054089962bc42187381be3">  682</a></span>    <a class="code hl_function" href="a00345.xhtml#a7764422109054089962bc42187381be3">CFeatureSpectralTonalPowerRatio</a>(<a class="code hl_enumeration" href="a00469.xhtml#a47ca14941c604beb42d60164b3e5e6b3">CFeatureIf::Feature_t</a> eFeatureIdx, <span class="keywordtype">int</span> iDataLength, <span class="keywordtype">float</span> fSampleRate) : <a class="code hl_function" href="a00473.xhtml#a483bca508e2817799a3173a6180d245e">CFeatureFromBlockIf</a>(eFeatureIdx, iDataLength, fSampleRate) {};</div>
<div class="line"><a id="l00683" name="l00683"></a><span class="lineno">  683</span> </div>
<div class="line"><a id="l00684" name="l00684"></a><span class="lineno"><a class="line" href="a00345.xhtml#a2f591e8bf6d09ec04fef149e581e769e">  684</a></span>    <span class="keyword">virtual</span> <a class="code hl_function" href="a00345.xhtml#a2f591e8bf6d09ec04fef149e581e769e">~CFeatureSpectralTonalPowerRatio</a>() {};</div>
<div class="line"><a id="l00685" name="l00685"></a><span class="lineno">  685</span> </div>
<div class="foldopen" id="foldopen00686" data-start="{" data-end="}">
<div class="line"><a id="l00686" name="l00686"></a><span class="lineno"><a class="line" href="a00345.xhtml#a43b303cd9ae3ec40f0f8a552fa7be4fe">  686</a></span>    <a class="code hl_enumeration" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> <a class="code hl_function" href="a00345.xhtml#a43b303cd9ae3ec40f0f8a552fa7be4fe">compFeature</a>(<span class="keywordtype">float</span> *pfFeature, <span class="keyword">const</span> <span class="keywordtype">float</span> *pfIn)<span class="keyword"> override</span></div>
<div class="line"><a id="l00687" name="l00687"></a><span class="lineno">  687</span><span class="keyword">    </span>{</div>
<div class="line"><a id="l00688" name="l00688"></a><span class="lineno">  688</span>        *pfFeature = <a class="code hl_function" href="a00473.xhtml#abdd05ed6160f4154fd4aae2816939f5e">compFeatureSpectralTonalPowerRatio</a>(pfIn, <a class="code hl_variable" href="a00473.xhtml#a2fefdb1b1217edd46c2b4e9336fa2aed">m_iDataLength</a>, <a class="code hl_variable" href="a00473.xhtml#a75ac4ef94667058662a8100bb1c1e1cd">m_fSampleRate</a>, <a class="code hl_variable" href="a00345.xhtml#aa12751fa8cb1b3a8b48452cc2b2421f4">m_fThresh</a>);</div>
<div class="line"><a id="l00689" name="l00689"></a><span class="lineno">  689</span> </div>
<div class="line"><a id="l00690" name="l00690"></a><span class="lineno">  690</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><a id="l00691" name="l00691"></a><span class="lineno">  691</span>    };</div>
</div>
<div class="line"><a id="l00692" name="l00692"></a><span class="lineno">  692</span> </div>
<div class="foldopen" id="foldopen00693" data-start="{" data-end="}">
<div class="line"><a id="l00693" name="l00693"></a><span class="lineno"><a class="line" href="a00345.xhtml#abbf784ac24f69555002f2bae7fec93bf">  693</a></span>    <span class="keywordtype">bool</span> <a class="code hl_function" href="a00345.xhtml#abbf784ac24f69555002f2bae7fec93bf">hasAdditionalParam</a>()<span class="keyword"> const override</span></div>
<div class="line"><a id="l00694" name="l00694"></a><span class="lineno">  694</span><span class="keyword">    </span>{</div>
<div class="line"><a id="l00695" name="l00695"></a><span class="lineno">  695</span>        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a id="l00696" name="l00696"></a><span class="lineno">  696</span>    }</div>
</div>
<div class="line"><a id="l00697" name="l00697"></a><span class="lineno">  697</span> </div>
<div class="foldopen" id="foldopen00698" data-start="{" data-end="}">
<div class="line"><a id="l00698" name="l00698"></a><span class="lineno"><a class="line" href="a00345.xhtml#a0f92352db0347a6295d817ddc2a5d5db">  698</a></span>    <a class="code hl_enumeration" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> <a class="code hl_function" href="a00345.xhtml#a0f92352db0347a6295d817ddc2a5d5db">setAdditionalParam</a>(<span class="keywordtype">float</span> fParamValue)<span class="keyword"> override</span></div>
<div class="line"><a id="l00699" name="l00699"></a><span class="lineno">  699</span><span class="keyword">    </span>{</div>
<div class="line"><a id="l00700" name="l00700"></a><span class="lineno">  700</span>        <span class="keywordflow">if</span> (fParamValue &lt;= 0)</div>
<div class="line"><a id="l00701" name="l00701"></a><span class="lineno">  701</span>            <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><a id="l00702" name="l00702"></a><span class="lineno">  702</span> </div>
<div class="line"><a id="l00703" name="l00703"></a><span class="lineno">  703</span>        <a class="code hl_variable" href="a00345.xhtml#aa12751fa8cb1b3a8b48452cc2b2421f4">m_fThresh</a> = fParamValue;</div>
<div class="line"><a id="l00704" name="l00704"></a><span class="lineno">  704</span> </div>
<div class="line"><a id="l00705" name="l00705"></a><span class="lineno">  705</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><a id="l00706" name="l00706"></a><span class="lineno">  706</span>    }</div>
</div>
<div class="line"><a id="l00707" name="l00707"></a><span class="lineno">  707</span> </div>
<div class="line"><a id="l00708" name="l00708"></a><span class="lineno">  708</span><span class="keyword">private</span>:</div>
<div class="line"><a id="l00709" name="l00709"></a><span class="lineno"><a class="line" href="a00345.xhtml#aaf8ec498a5d6e6a8d27db98ae4808448">  709</a></span>    <a class="code hl_function" href="a00345.xhtml#aaf8ec498a5d6e6a8d27db98ae4808448">CFeatureSpectralTonalPowerRatio</a>() {};</div>
<div class="line"><a id="l00710" name="l00710"></a><span class="lineno">  710</span> </div>
<div class="line"><a id="l00711" name="l00711"></a><span class="lineno"><a class="line" href="a00345.xhtml#aa12751fa8cb1b3a8b48452cc2b2421f4">  711</a></span>    <span class="keywordtype">float</span> <a class="code hl_variable" href="a00345.xhtml#aa12751fa8cb1b3a8b48452cc2b2421f4">m_fThresh</a> = 5e-4F;</div>
<div class="line"><a id="l00712" name="l00712"></a><span class="lineno">  712</span>};</div>
</div>
<div class="line"><a id="l00713" name="l00713"></a><span class="lineno">  713</span><span class="comment"></span> </div>
<div class="line"><a id="l00714" name="l00714"></a><span class="lineno">  714</span><span class="comment">/*! \brief class for computation of an acf coefficient</span></div>
<div class="line"><a id="l00715" name="l00715"></a><span class="lineno">  715</span><span class="comment">*/</span></div>
<div class="foldopen" id="foldopen00716" data-start="{" data-end="};">
<div class="line"><a id="l00716" name="l00716"></a><span class="lineno"><a class="line" href="a00349.xhtml">  716</a></span><span class="keyword">class </span><a class="code hl_function" href="a00349.xhtml#a4d9f483ca05473ce8e9f1cc608dd03af">CFeatureTimeAcfCoeff</a> : <span class="keyword">public</span> <a class="code hl_function" href="a00473.xhtml#a483bca508e2817799a3173a6180d245e">CFeatureFromBlockIf</a></div>
<div class="line"><a id="l00717" name="l00717"></a><span class="lineno">  717</span>{</div>
<div class="line"><a id="l00718" name="l00718"></a><span class="lineno">  718</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00719" name="l00719"></a><span class="lineno"><a class="line" href="a00349.xhtml#a4d9f483ca05473ce8e9f1cc608dd03af">  719</a></span>    <a class="code hl_function" href="a00349.xhtml#a4d9f483ca05473ce8e9f1cc608dd03af">CFeatureTimeAcfCoeff</a>(<a class="code hl_enumeration" href="a00469.xhtml#a47ca14941c604beb42d60164b3e5e6b3">CFeatureIf::Feature_t</a> eFeatureIdx, <span class="keywordtype">int</span> iDataLength, <span class="keywordtype">float</span> fSampleRate) : <a class="code hl_function" href="a00473.xhtml#a483bca508e2817799a3173a6180d245e">CFeatureFromBlockIf</a>(eFeatureIdx, iDataLength, fSampleRate) {};</div>
<div class="line"><a id="l00720" name="l00720"></a><span class="lineno">  720</span> </div>
<div class="line"><a id="l00721" name="l00721"></a><span class="lineno"><a class="line" href="a00349.xhtml#a333eda68b61727626bc1b9c24bfff337">  721</a></span>    <span class="keyword">virtual</span> <a class="code hl_function" href="a00349.xhtml#a333eda68b61727626bc1b9c24bfff337">~CFeatureTimeAcfCoeff</a>() {};</div>
<div class="line"><a id="l00722" name="l00722"></a><span class="lineno">  722</span> </div>
<div class="foldopen" id="foldopen00723" data-start="{" data-end="}">
<div class="line"><a id="l00723" name="l00723"></a><span class="lineno"><a class="line" href="a00349.xhtml#af3ad1fd2ce06c1a9fe976c9b962eccfe">  723</a></span>    <a class="code hl_enumeration" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> <a class="code hl_function" href="a00349.xhtml#af3ad1fd2ce06c1a9fe976c9b962eccfe">compFeature</a>(<span class="keywordtype">float</span> *pfFeature, <span class="keyword">const</span> <span class="keywordtype">float</span> *pfIn)<span class="keyword"> override</span></div>
<div class="line"><a id="l00724" name="l00724"></a><span class="lineno">  724</span><span class="keyword">    </span>{</div>
<div class="line"><a id="l00725" name="l00725"></a><span class="lineno">  725</span>        *pfFeature = <a class="code hl_function" href="a00473.xhtml#a665af5d570876cc41adc56185201cd8c">compFeatureTimeAcfCoeff</a>(pfIn, <a class="code hl_variable" href="a00473.xhtml#a2fefdb1b1217edd46c2b4e9336fa2aed">m_iDataLength</a>, <a class="code hl_variable" href="a00473.xhtml#a75ac4ef94667058662a8100bb1c1e1cd">m_fSampleRate</a>, <a class="code hl_variable" href="a00349.xhtml#ab062957c171d0fa090ec2cf567907477">m_iEta</a>);</div>
<div class="line"><a id="l00726" name="l00726"></a><span class="lineno">  726</span> </div>
<div class="line"><a id="l00727" name="l00727"></a><span class="lineno">  727</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><a id="l00728" name="l00728"></a><span class="lineno">  728</span>    };</div>
</div>
<div class="line"><a id="l00729" name="l00729"></a><span class="lineno">  729</span> </div>
<div class="foldopen" id="foldopen00730" data-start="{" data-end="}">
<div class="line"><a id="l00730" name="l00730"></a><span class="lineno"><a class="line" href="a00349.xhtml#a799b62c99e4e4ab09aae77e73f85a1af">  730</a></span>    <span class="keywordtype">bool</span> <a class="code hl_function" href="a00349.xhtml#a799b62c99e4e4ab09aae77e73f85a1af">hasAdditionalParam</a>()<span class="keyword"> const override</span></div>
<div class="line"><a id="l00731" name="l00731"></a><span class="lineno">  731</span><span class="keyword">    </span>{</div>
<div class="line"><a id="l00732" name="l00732"></a><span class="lineno">  732</span>        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a id="l00733" name="l00733"></a><span class="lineno">  733</span>    }</div>
</div>
<div class="line"><a id="l00734" name="l00734"></a><span class="lineno">  734</span> </div>
<div class="foldopen" id="foldopen00735" data-start="{" data-end="}">
<div class="line"><a id="l00735" name="l00735"></a><span class="lineno"><a class="line" href="a00349.xhtml#a6c123f32dc4ddf5b63ff41d03ea574a2">  735</a></span>    <a class="code hl_enumeration" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> <a class="code hl_function" href="a00349.xhtml#a6c123f32dc4ddf5b63ff41d03ea574a2">setAdditionalParam</a>(<span class="keywordtype">float</span> fParamValue)<span class="keyword"> override</span></div>
<div class="line"><a id="l00736" name="l00736"></a><span class="lineno">  736</span><span class="keyword">    </span>{</div>
<div class="line"><a id="l00737" name="l00737"></a><span class="lineno">  737</span>        <span class="keywordflow">if</span> (fParamValue &lt;= 0)</div>
<div class="line"><a id="l00738" name="l00738"></a><span class="lineno">  738</span>            <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><a id="l00739" name="l00739"></a><span class="lineno">  739</span> </div>
<div class="line"><a id="l00740" name="l00740"></a><span class="lineno">  740</span>        <a class="code hl_variable" href="a00349.xhtml#ab062957c171d0fa090ec2cf567907477">m_iEta</a> = <a class="code hl_function" href="a00501.xhtml#a9edb25bb88d789958e1740578b65cbbb">CUtil::float2int&lt;int&gt;</a>(fParamValue);</div>
<div class="line"><a id="l00741" name="l00741"></a><span class="lineno">  741</span> </div>
<div class="line"><a id="l00742" name="l00742"></a><span class="lineno">  742</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><a id="l00743" name="l00743"></a><span class="lineno">  743</span>    }</div>
</div>
<div class="line"><a id="l00744" name="l00744"></a><span class="lineno">  744</span> </div>
<div class="line"><a id="l00745" name="l00745"></a><span class="lineno">  745</span><span class="keyword">private</span>:</div>
<div class="line"><a id="l00746" name="l00746"></a><span class="lineno"><a class="line" href="a00349.xhtml#a033ad4a66e7e62644a250a872651f9db">  746</a></span>    <a class="code hl_function" href="a00349.xhtml#a033ad4a66e7e62644a250a872651f9db">CFeatureTimeAcfCoeff</a>() {};</div>
<div class="line"><a id="l00747" name="l00747"></a><span class="lineno">  747</span> </div>
<div class="line"><a id="l00748" name="l00748"></a><span class="lineno"><a class="line" href="a00349.xhtml#ab062957c171d0fa090ec2cf567907477">  748</a></span>    <span class="keywordtype">int</span> <a class="code hl_variable" href="a00349.xhtml#ab062957c171d0fa090ec2cf567907477">m_iEta</a> = 19; <span class="comment">//!&lt; int this example implementation, we chose the 19th coefficient</span></div>
<div class="line"><a id="l00749" name="l00749"></a><span class="lineno">  749</span>};</div>
</div>
<div class="line"><a id="l00750" name="l00750"></a><span class="lineno">  750</span><span class="comment"></span> </div>
<div class="line"><a id="l00751" name="l00751"></a><span class="lineno">  751</span><span class="comment">/*! \brief class for computation of the maximum of the acf</span></div>
<div class="line"><a id="l00752" name="l00752"></a><span class="lineno">  752</span><span class="comment">*/</span></div>
<div class="foldopen" id="foldopen00753" data-start="{" data-end="};">
<div class="line"><a id="l00753" name="l00753"></a><span class="lineno"><a class="line" href="a00353.xhtml">  753</a></span><span class="keyword">class </span><a class="code hl_function" href="a00353.xhtml#a541f40820696e37cc302fc780b8313ee">CFeatureTimeMaxAcf</a> : <span class="keyword">public</span> <a class="code hl_function" href="a00473.xhtml#a483bca508e2817799a3173a6180d245e">CFeatureFromBlockIf</a></div>
<div class="line"><a id="l00754" name="l00754"></a><span class="lineno">  754</span>{</div>
<div class="line"><a id="l00755" name="l00755"></a><span class="lineno">  755</span><span class="keyword">public</span>:</div>
<div class="foldopen" id="foldopen00756" data-start="{" data-end="}">
<div class="line"><a id="l00756" name="l00756"></a><span class="lineno"><a class="line" href="a00353.xhtml#a541f40820696e37cc302fc780b8313ee">  756</a></span>    <a class="code hl_function" href="a00353.xhtml#a541f40820696e37cc302fc780b8313ee">CFeatureTimeMaxAcf</a>(<a class="code hl_enumeration" href="a00469.xhtml#a47ca14941c604beb42d60164b3e5e6b3">CFeatureIf::Feature_t</a> eFeatureIdx, <span class="keywordtype">int</span> iDataLength, <span class="keywordtype">float</span> fSampleRate) : <a class="code hl_function" href="a00473.xhtml#a483bca508e2817799a3173a6180d245e">CFeatureFromBlockIf</a>(eFeatureIdx, iDataLength, fSampleRate)</div>
<div class="line"><a id="l00757" name="l00757"></a><span class="lineno">  757</span>    {</div>
<div class="line"><a id="l00758" name="l00758"></a><span class="lineno">  758</span>        <a class="code hl_variable" href="a00353.xhtml#a9fb60b727600dc5d28d874349adb5dc0">m_pCCcf</a> = <span class="keyword">new</span> <a class="code hl_class" href="a00549.xhtml">CCcf</a>();</div>
<div class="line"><a id="l00759" name="l00759"></a><span class="lineno">  759</span>        <a class="code hl_variable" href="a00353.xhtml#a9fb60b727600dc5d28d874349adb5dc0">m_pCCcf</a>-&gt;init(iDataLength);</div>
<div class="line"><a id="l00760" name="l00760"></a><span class="lineno">  760</span> </div>
<div class="line"><a id="l00761" name="l00761"></a><span class="lineno">  761</span>        <a class="code hl_function" href="a00505.xhtml#abaadac98b1cad18b7b568852bc951696">CVector::alloc</a>(<a class="code hl_variable" href="a00353.xhtml#ac15ec6a2d0fdf91df801d6befd4117db">m_pfAcf</a>, <a class="code hl_variable" href="a00353.xhtml#a9fb60b727600dc5d28d874349adb5dc0">m_pCCcf</a>-&gt;getCcfLength(<span class="keyword">true</span>));</div>
<div class="line"><a id="l00762" name="l00762"></a><span class="lineno">  762</span>    };</div>
</div>
<div class="line"><a id="l00763" name="l00763"></a><span class="lineno">  763</span> </div>
<div class="foldopen" id="foldopen00764" data-start="{" data-end="}">
<div class="line"><a id="l00764" name="l00764"></a><span class="lineno"><a class="line" href="a00353.xhtml#a48c4e7762ac0c1bbbb91a50ccc2a4ffc">  764</a></span>    <span class="keyword">virtual</span> <a class="code hl_function" href="a00353.xhtml#a48c4e7762ac0c1bbbb91a50ccc2a4ffc">~CFeatureTimeMaxAcf</a>()</div>
<div class="line"><a id="l00765" name="l00765"></a><span class="lineno">  765</span>    {</div>
<div class="line"><a id="l00766" name="l00766"></a><span class="lineno">  766</span>        <a class="code hl_function" href="a00505.xhtml#aa86bdb0c663d4d52f2765793756f8737">CVector::free</a>(<a class="code hl_variable" href="a00353.xhtml#ac15ec6a2d0fdf91df801d6befd4117db">m_pfAcf</a>);</div>
<div class="line"><a id="l00767" name="l00767"></a><span class="lineno">  767</span> </div>
<div class="line"><a id="l00768" name="l00768"></a><span class="lineno">  768</span>        <span class="keyword">delete</span> <a class="code hl_variable" href="a00353.xhtml#a9fb60b727600dc5d28d874349adb5dc0">m_pCCcf</a>;</div>
<div class="line"><a id="l00769" name="l00769"></a><span class="lineno">  769</span>        <a class="code hl_variable" href="a00353.xhtml#a9fb60b727600dc5d28d874349adb5dc0">m_pCCcf</a> = 0;</div>
<div class="line"><a id="l00770" name="l00770"></a><span class="lineno">  770</span>    };</div>
</div>
<div class="line"><a id="l00771" name="l00771"></a><span class="lineno">  771</span> </div>
<div class="foldopen" id="foldopen00772" data-start="{" data-end="}">
<div class="line"><a id="l00772" name="l00772"></a><span class="lineno"><a class="line" href="a00353.xhtml#a9edc446602d49a15cf4c978289e2094a">  772</a></span>    <a class="code hl_enumeration" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> <a class="code hl_function" href="a00353.xhtml#a9edc446602d49a15cf4c978289e2094a">compFeature</a>(<span class="keywordtype">float</span> *pfFeature, <span class="keyword">const</span> <span class="keywordtype">float</span> *pfIn)<span class="keyword"> override</span></div>
<div class="line"><a id="l00773" name="l00773"></a><span class="lineno">  773</span><span class="keyword">    </span>{</div>
<div class="line"><a id="l00774" name="l00774"></a><span class="lineno">  774</span>        <span class="keywordtype">float</span> fMinThresh = 0.35F;</div>
<div class="line"><a id="l00775" name="l00775"></a><span class="lineno">  775</span> </div>
<div class="line"><a id="l00776" name="l00776"></a><span class="lineno">  776</span>        <span class="keywordtype">int</span> iEta = 0,</div>
<div class="line"><a id="l00777" name="l00777"></a><span class="lineno">  777</span>            iEtaMin = <span class="keyword">static_cast&lt;</span><span class="keywordtype">int</span><span class="keyword">&gt;</span>(<a class="code hl_variable" href="a00473.xhtml#a75ac4ef94667058662a8100bb1c1e1cd">m_fSampleRate</a> / <a class="code hl_variable" href="a00353.xhtml#aeb05f443644d9e5db8bfd9a18af380a8">m_fMax</a>);</div>
<div class="line"><a id="l00778" name="l00778"></a><span class="lineno">  778</span> </div>
<div class="line"><a id="l00779" name="l00779"></a><span class="lineno">  779</span>        <span class="comment">// compute ACF</span></div>
<div class="line"><a id="l00780" name="l00780"></a><span class="lineno">  780</span>        <a class="code hl_variable" href="a00353.xhtml#a9fb60b727600dc5d28d874349adb5dc0">m_pCCcf</a>-&gt;compCcf(pfIn, pfIn, <span class="keyword">true</span>);</div>
<div class="line"><a id="l00781" name="l00781"></a><span class="lineno">  781</span>        <a class="code hl_variable" href="a00353.xhtml#a9fb60b727600dc5d28d874349adb5dc0">m_pCCcf</a>-&gt;getCcf(<a class="code hl_variable" href="a00353.xhtml#ac15ec6a2d0fdf91df801d6befd4117db">m_pfAcf</a>, <span class="keyword">true</span>);</div>
<div class="line"><a id="l00782" name="l00782"></a><span class="lineno">  782</span> </div>
<div class="line"><a id="l00783" name="l00783"></a><span class="lineno">  783</span>        <span class="comment">// avoid main lobe</span></div>
<div class="line"><a id="l00784" name="l00784"></a><span class="lineno">  784</span>        <span class="keywordflow">while</span> (<a class="code hl_variable" href="a00353.xhtml#ac15ec6a2d0fdf91df801d6befd4117db">m_pfAcf</a>[iEta] &gt; fMinThresh)</div>
<div class="line"><a id="l00785" name="l00785"></a><span class="lineno">  785</span>            iEta++;</div>
<div class="line"><a id="l00786" name="l00786"></a><span class="lineno">  786</span>        <span class="keywordflow">if</span> (iEtaMin &lt; iEta)</div>
<div class="line"><a id="l00787" name="l00787"></a><span class="lineno">  787</span>            iEtaMin = iEta;</div>
<div class="line"><a id="l00788" name="l00788"></a><span class="lineno">  788</span> </div>
<div class="line"><a id="l00789" name="l00789"></a><span class="lineno">  789</span>        <span class="comment">// only look after first minimum</span></div>
<div class="line"><a id="l00790" name="l00790"></a><span class="lineno">  790</span>        iEta = 0;</div>
<div class="line"><a id="l00791" name="l00791"></a><span class="lineno">  791</span>        <span class="keywordflow">while</span> (<a class="code hl_variable" href="a00353.xhtml#ac15ec6a2d0fdf91df801d6befd4117db">m_pfAcf</a>[iEta] &gt; <a class="code hl_variable" href="a00353.xhtml#ac15ec6a2d0fdf91df801d6befd4117db">m_pfAcf</a>[iEta + 1])</div>
<div class="line"><a id="l00792" name="l00792"></a><span class="lineno">  792</span>        {</div>
<div class="line"><a id="l00793" name="l00793"></a><span class="lineno">  793</span>            iEta++;</div>
<div class="line"><a id="l00794" name="l00794"></a><span class="lineno">  794</span>            <span class="keywordflow">if</span> (iEta &gt;= <a class="code hl_variable" href="a00473.xhtml#a2fefdb1b1217edd46c2b4e9336fa2aed">m_iDataLength</a>-1)</div>
<div class="line"><a id="l00795" name="l00795"></a><span class="lineno">  795</span>                <span class="keywordflow">break</span>;</div>
<div class="line"><a id="l00796" name="l00796"></a><span class="lineno">  796</span>        }</div>
<div class="line"><a id="l00797" name="l00797"></a><span class="lineno">  797</span> </div>
<div class="line"><a id="l00798" name="l00798"></a><span class="lineno">  798</span>        <span class="keywordflow">if</span> (iEta &gt;= <a class="code hl_variable" href="a00473.xhtml#a2fefdb1b1217edd46c2b4e9336fa2aed">m_iDataLength</a>-1)</div>
<div class="line"><a id="l00799" name="l00799"></a><span class="lineno">  799</span>            iEtaMin = 0;</div>
<div class="line"><a id="l00800" name="l00800"></a><span class="lineno">  800</span>        <span class="keywordflow">else</span> <span class="keywordflow">if</span> (iEtaMin &lt; iEta)</div>
<div class="line"><a id="l00801" name="l00801"></a><span class="lineno">  801</span>            iEtaMin = iEta;</div>
<div class="line"><a id="l00802" name="l00802"></a><span class="lineno">  802</span> </div>
<div class="line"><a id="l00803" name="l00803"></a><span class="lineno">  803</span>        <span class="comment">// get the maximum given the constraints above</span></div>
<div class="line"><a id="l00804" name="l00804"></a><span class="lineno">  804</span>        *pfFeature = <a class="code hl_function" href="a00505.xhtml#a9f5be871090bc5a64a7732cebfb4f8ec">CVector::getMax</a>(&amp;<a class="code hl_variable" href="a00353.xhtml#ac15ec6a2d0fdf91df801d6befd4117db">m_pfAcf</a>[iEtaMin], <span class="keyword">static_cast&lt;</span><span class="keywordtype">long</span> <span class="keywordtype">long</span><span class="keyword">&gt;</span>(<a class="code hl_variable" href="a00473.xhtml#a2fefdb1b1217edd46c2b4e9336fa2aed">m_iDataLength</a>) - iEtaMin, <span class="keyword">true</span>);</div>
<div class="line"><a id="l00805" name="l00805"></a><span class="lineno">  805</span> </div>
<div class="line"><a id="l00806" name="l00806"></a><span class="lineno">  806</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><a id="l00807" name="l00807"></a><span class="lineno">  807</span>    };</div>
</div>
<div class="line"><a id="l00808" name="l00808"></a><span class="lineno">  808</span> </div>
<div class="foldopen" id="foldopen00809" data-start="{" data-end="}">
<div class="line"><a id="l00809" name="l00809"></a><span class="lineno"><a class="line" href="a00353.xhtml#a03964245e9d7da47e512283728da4cd4">  809</a></span>    <span class="keywordtype">bool</span> <a class="code hl_function" href="a00353.xhtml#a03964245e9d7da47e512283728da4cd4">hasAdditionalParam</a>()<span class="keyword"> const override</span></div>
<div class="line"><a id="l00810" name="l00810"></a><span class="lineno">  810</span><span class="keyword">    </span>{</div>
<div class="line"><a id="l00811" name="l00811"></a><span class="lineno">  811</span>        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a id="l00812" name="l00812"></a><span class="lineno">  812</span>    }</div>
</div>
<div class="line"><a id="l00813" name="l00813"></a><span class="lineno">  813</span> </div>
<div class="foldopen" id="foldopen00814" data-start="{" data-end="}">
<div class="line"><a id="l00814" name="l00814"></a><span class="lineno"><a class="line" href="a00353.xhtml#ad08d755145fa0227b7e489000703ee30">  814</a></span>    <a class="code hl_enumeration" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> <a class="code hl_function" href="a00353.xhtml#ad08d755145fa0227b7e489000703ee30">setAdditionalParam</a>(<span class="keywordtype">float</span> fParamValue)<span class="keyword"> override</span></div>
<div class="line"><a id="l00815" name="l00815"></a><span class="lineno">  815</span><span class="keyword">    </span>{</div>
<div class="line"><a id="l00816" name="l00816"></a><span class="lineno">  816</span>        <span class="keywordflow">if</span> (fParamValue &lt;= 0 || fParamValue &gt; <a class="code hl_variable" href="a00473.xhtml#a75ac4ef94667058662a8100bb1c1e1cd">m_fSampleRate</a> / 2)</div>
<div class="line"><a id="l00817" name="l00817"></a><span class="lineno">  817</span>            <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><a id="l00818" name="l00818"></a><span class="lineno">  818</span> </div>
<div class="line"><a id="l00819" name="l00819"></a><span class="lineno">  819</span>        <a class="code hl_variable" href="a00353.xhtml#aeb05f443644d9e5db8bfd9a18af380a8">m_fMax</a> = fParamValue;</div>
<div class="line"><a id="l00820" name="l00820"></a><span class="lineno">  820</span> </div>
<div class="line"><a id="l00821" name="l00821"></a><span class="lineno">  821</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><a id="l00822" name="l00822"></a><span class="lineno">  822</span>    }</div>
</div>
<div class="line"><a id="l00823" name="l00823"></a><span class="lineno">  823</span> </div>
<div class="line"><a id="l00824" name="l00824"></a><span class="lineno">  824</span><span class="keyword">private</span>:</div>
<div class="line"><a id="l00825" name="l00825"></a><span class="lineno"><a class="line" href="a00353.xhtml#a8c9233f1ab2a403e78a7e03feefc2161">  825</a></span>    <a class="code hl_function" href="a00353.xhtml#a8c9233f1ab2a403e78a7e03feefc2161">CFeatureTimeMaxAcf</a>() {};</div>
<div class="line"><a id="l00826" name="l00826"></a><span class="lineno"><a class="line" href="a00353.xhtml#ae651e7f716957560053ef017f839346b">  826</a></span>    <a class="code hl_function" href="a00353.xhtml#ae651e7f716957560053ef017f839346b">CFeatureTimeMaxAcf</a>(<span class="keyword">const</span> <a class="code hl_function" href="a00353.xhtml#a541f40820696e37cc302fc780b8313ee">CFeatureTimeMaxAcf</a> &amp;that);     <span class="comment">//!&lt; disallow copy construction</span></div>
<div class="line"><a id="l00827" name="l00827"></a><span class="lineno"><a class="line" href="a00353.xhtml#adbb3dc0caf773c6fb706bbff9d0b7126">  827</a></span>    <a class="code hl_function" href="a00353.xhtml#a541f40820696e37cc302fc780b8313ee">CFeatureTimeMaxAcf</a> &amp;<a class="code hl_function" href="a00353.xhtml#adbb3dc0caf773c6fb706bbff9d0b7126">operator=</a>(<span class="keyword">const</span> <a class="code hl_function" href="a00353.xhtml#a541f40820696e37cc302fc780b8313ee">CFeatureTimeMaxAcf</a> &amp;c);</div>
<div class="line"><a id="l00828" name="l00828"></a><span class="lineno">  828</span> </div>
<div class="line"><a id="l00829" name="l00829"></a><span class="lineno"><a class="line" href="a00353.xhtml#a9fb60b727600dc5d28d874349adb5dc0">  829</a></span>    <a class="code hl_class" href="a00549.xhtml">CCcf</a> *<a class="code hl_variable" href="a00353.xhtml#a9fb60b727600dc5d28d874349adb5dc0">m_pCCcf</a> = 0; <span class="comment">//!&lt; correlation instance</span></div>
<div class="line"><a id="l00830" name="l00830"></a><span class="lineno"><a class="line" href="a00353.xhtml#ac15ec6a2d0fdf91df801d6befd4117db">  830</a></span>    <span class="keywordtype">float</span> *<a class="code hl_variable" href="a00353.xhtml#ac15ec6a2d0fdf91df801d6befd4117db">m_pfAcf</a> = 0; <span class="comment">//!&lt; acf result</span></div>
<div class="line"><a id="l00831" name="l00831"></a><span class="lineno">  831</span> </div>
<div class="line"><a id="l00832" name="l00832"></a><span class="lineno"><a class="line" href="a00353.xhtml#aeb05f443644d9e5db8bfd9a18af380a8">  832</a></span>    <span class="keywordtype">float</span> <a class="code hl_variable" href="a00353.xhtml#aeb05f443644d9e5db8bfd9a18af380a8">m_fMax</a> = 2000.F; <span class="comment">//!&lt; upper frequency boundary</span></div>
<div class="line"><a id="l00833" name="l00833"></a><span class="lineno">  833</span>};</div>
</div>
<div class="line"><a id="l00834" name="l00834"></a><span class="lineno">  834</span><span class="comment"></span> </div>
<div class="line"><a id="l00835" name="l00835"></a><span class="lineno">  835</span><span class="comment">/*! \brief class for computation of the peak envelope</span></div>
<div class="line"><a id="l00836" name="l00836"></a><span class="lineno">  836</span><span class="comment">*/</span></div>
<div class="foldopen" id="foldopen00837" data-start="{" data-end="};">
<div class="line"><a id="l00837" name="l00837"></a><span class="lineno"><a class="line" href="a00357.xhtml">  837</a></span><span class="keyword">class </span><a class="code hl_function" href="a00357.xhtml#af43ac71fb7b58e2ae9897e33bae488f3">CFeatureTimePeakEnvelope</a> : <span class="keyword">public</span> <a class="code hl_function" href="a00473.xhtml#a483bca508e2817799a3173a6180d245e">CFeatureFromBlockIf</a></div>
<div class="line"><a id="l00838" name="l00838"></a><span class="lineno">  838</span>{</div>
<div class="line"><a id="l00839" name="l00839"></a><span class="lineno">  839</span><span class="keyword">public</span>:</div>
<div class="foldopen" id="foldopen00840" data-start="{" data-end="}">
<div class="line"><a id="l00840" name="l00840"></a><span class="lineno"><a class="line" href="a00357.xhtml#af43ac71fb7b58e2ae9897e33bae488f3">  840</a></span>    <a class="code hl_function" href="a00357.xhtml#af43ac71fb7b58e2ae9897e33bae488f3">CFeatureTimePeakEnvelope</a>(<a class="code hl_enumeration" href="a00469.xhtml#a47ca14941c604beb42d60164b3e5e6b3">CFeatureIf::Feature_t</a> eFeatureIdx, <span class="keywordtype">int</span> iDataLength, <span class="keywordtype">float</span> fSampleRate) : <a class="code hl_function" href="a00473.xhtml#a483bca508e2817799a3173a6180d245e">CFeatureFromBlockIf</a>(eFeatureIdx, iDataLength, fSampleRate)</div>
<div class="line"><a id="l00841" name="l00841"></a><span class="lineno">  841</span>    {</div>
<div class="line"><a id="l00842" name="l00842"></a><span class="lineno">  842</span>        <span class="keywordflow">for</span> (<span class="keyword">auto</span> i = 0; i &lt; <a class="code hl_enumvalue" href="a00357.xhtml#acd92b000d83f9ec3613b59a995c6d296a244967a35270c25af7fbf24a22b4b986">kNumPpmFilters</a>; i++)</div>
<div class="line"><a id="l00843" name="l00843"></a><span class="lineno">  843</span>            <a class="code hl_variable" href="a00357.xhtml#af43fa882d3241bd471c366ad4494ae84">m_afAlpha</a>[i] = <a class="code hl_function" href="a00585.xhtml#afedab0de8491f604e797ada1fb0e5899">CSinglePoleLp::calcFilterParam</a>(<a class="code hl_variable" href="a00357.xhtml#a176af3836a0fb75c200c02ed66485852">m_afIntegrationTimeInS</a>[i], fSampleRate);</div>
<div class="line"><a id="l00844" name="l00844"></a><span class="lineno">  844</span>    };</div>
</div>
<div class="line"><a id="l00845" name="l00845"></a><span class="lineno">  845</span> </div>
<div class="line"><a id="l00846" name="l00846"></a><span class="lineno"><a class="line" href="a00357.xhtml#af2b23785ea04505ff4a889d8313c2169">  846</a></span>    <span class="keyword">virtual</span> <a class="code hl_function" href="a00357.xhtml#af2b23785ea04505ff4a889d8313c2169">~CFeatureTimePeakEnvelope</a>() {};</div>
<div class="line"><a id="l00847" name="l00847"></a><span class="lineno">  847</span> </div>
<div class="foldopen" id="foldopen00848" data-start="{" data-end="}">
<div class="line"><a id="l00848" name="l00848"></a><span class="lineno"><a class="line" href="a00357.xhtml#a804fcf1a03e0bb857bdbec4454803b96">  848</a></span>    <a class="code hl_enumeration" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> <a class="code hl_function" href="a00357.xhtml#a804fcf1a03e0bb857bdbec4454803b96">compFeature</a>(<span class="keywordtype">float</span> *pfFeature, <span class="keyword">const</span> <span class="keywordtype">float</span> *pfIn)<span class="keyword"> override</span></div>
<div class="line"><a id="l00849" name="l00849"></a><span class="lineno">  849</span><span class="keyword">    </span>{</div>
<div class="line"><a id="l00850" name="l00850"></a><span class="lineno">  850</span>        <span class="comment">// extract 1st variant: maximum per block</span></div>
<div class="line"><a id="l00851" name="l00851"></a><span class="lineno">  851</span>        pfFeature[<a class="code hl_enumvalue" href="a00357.xhtml#a7edc97c9ab3cfb28e51b7f041b93c503aa4b1dc46f0fce8ded1e48cbf6c3bd3b0">kBlockMax</a>] = <a class="code hl_function" href="a00473.xhtml#a8343fab849f52e77639b46e759e7e49d">compFeatureTimePeakEnvelope</a>(pfIn, <a class="code hl_variable" href="a00473.xhtml#a2fefdb1b1217edd46c2b4e9336fa2aed">m_iDataLength</a>, <a class="code hl_variable" href="a00473.xhtml#a75ac4ef94667058662a8100bb1c1e1cd">m_fSampleRate</a>);</div>
<div class="line"><a id="l00852" name="l00852"></a><span class="lineno">  852</span> </div>
<div class="line"><a id="l00853" name="l00853"></a><span class="lineno">  853</span>        <span class="comment">// extract 2nd variant: maximum of ppm</span></div>
<div class="line"><a id="l00854" name="l00854"></a><span class="lineno">  854</span>        pfFeature[<a class="code hl_enumvalue" href="a00357.xhtml#a7edc97c9ab3cfb28e51b7f041b93c503a6bd88cda995b797a44ad0d9f8da29f13">kPpmMax</a>] = 0;</div>
<div class="line"><a id="l00855" name="l00855"></a><span class="lineno">  855</span>        <span class="keywordflow">for</span> (<span class="keyword">auto</span> i = 0; i &lt; <a class="code hl_variable" href="a00473.xhtml#a2fefdb1b1217edd46c2b4e9336fa2aed">m_iDataLength</a>; i++)</div>
<div class="line"><a id="l00856" name="l00856"></a><span class="lineno">  856</span>        {</div>
<div class="line"><a id="l00857" name="l00857"></a><span class="lineno">  857</span>            <span class="keywordtype">float</span> fOut = <a class="code hl_function" href="a00357.xhtml#a1a8760a574baf47c90caf0ea1d3e5053">ppm_I</a>(pfIn[i]);</div>
<div class="line"><a id="l00858" name="l00858"></a><span class="lineno">  858</span>            <span class="keywordflow">if</span> (fOut &gt; pfFeature[<a class="code hl_enumvalue" href="a00357.xhtml#a7edc97c9ab3cfb28e51b7f041b93c503a6bd88cda995b797a44ad0d9f8da29f13">kPpmMax</a>])</div>
<div class="line"><a id="l00859" name="l00859"></a><span class="lineno">  859</span>                pfFeature[<a class="code hl_enumvalue" href="a00357.xhtml#a7edc97c9ab3cfb28e51b7f041b93c503a6bd88cda995b797a44ad0d9f8da29f13">kPpmMax</a>] = fOut;</div>
<div class="line"><a id="l00860" name="l00860"></a><span class="lineno">  860</span>        }</div>
<div class="line"><a id="l00861" name="l00861"></a><span class="lineno">  861</span> </div>
<div class="line"><a id="l00862" name="l00862"></a><span class="lineno">  862</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><a id="l00863" name="l00863"></a><span class="lineno">  863</span>    };</div>
</div>
<div class="line"><a id="l00864" name="l00864"></a><span class="lineno">  864</span> </div>
<div class="foldopen" id="foldopen00865" data-start="{" data-end="}">
<div class="line"><a id="l00865" name="l00865"></a><span class="lineno"><a class="line" href="a00357.xhtml#a55891d1e487afbe095399d19ab078469">  865</a></span>    <span class="keywordtype">int</span> <a class="code hl_function" href="a00357.xhtml#a55891d1e487afbe095399d19ab078469">getFeatureDimensions</a>()<span class="keyword"> const override</span></div>
<div class="line"><a id="l00866" name="l00866"></a><span class="lineno">  866</span><span class="keyword">    </span>{</div>
<div class="line"><a id="l00867" name="l00867"></a><span class="lineno">  867</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00357.xhtml#a7edc97c9ab3cfb28e51b7f041b93c503ab044c98fa4caca6d1300b5adb1365c70">kNumPeakTypes</a>;</div>
<div class="line"><a id="l00868" name="l00868"></a><span class="lineno">  868</span>    }</div>
</div>
<div class="line"><a id="l00869" name="l00869"></a><span class="lineno">  869</span> </div>
<div class="line"><a id="l00870" name="l00870"></a><span class="lineno">  870</span><span class="keyword">private</span>:</div>
<div class="line"><a id="l00871" name="l00871"></a><span class="lineno"><a class="line" href="a00357.xhtml#ab29ce4890eab1620a0e9ad62acf3fe2e">  871</a></span>    <a class="code hl_function" href="a00357.xhtml#ab29ce4890eab1620a0e9ad62acf3fe2e">CFeatureTimePeakEnvelope</a>() {};</div>
<div class="line"><a id="l00872" name="l00872"></a><span class="lineno">  872</span> </div>
<div class="foldopen" id="foldopen00873" data-start="{" data-end="};">
<div class="line"><a id="l00873" name="l00873"></a><span class="lineno"><a class="line" href="a00357.xhtml#a7edc97c9ab3cfb28e51b7f041b93c503">  873</a></span>    <span class="keyword">enum</span> <a class="code hl_enumeration" href="a00357.xhtml#a7edc97c9ab3cfb28e51b7f041b93c503">PeakType_t</a></div>
<div class="line"><a id="l00874" name="l00874"></a><span class="lineno">  874</span>    {</div>
<div class="line"><a id="l00875" name="l00875"></a><span class="lineno"><a class="line" href="a00357.xhtml#a7edc97c9ab3cfb28e51b7f041b93c503aa4b1dc46f0fce8ded1e48cbf6c3bd3b0">  875</a></span>        <a class="code hl_enumvalue" href="a00357.xhtml#a7edc97c9ab3cfb28e51b7f041b93c503aa4b1dc46f0fce8ded1e48cbf6c3bd3b0">kBlockMax</a>,</div>
<div class="line"><a id="l00876" name="l00876"></a><span class="lineno"><a class="line" href="a00357.xhtml#a7edc97c9ab3cfb28e51b7f041b93c503a6bd88cda995b797a44ad0d9f8da29f13">  876</a></span>        <a class="code hl_enumvalue" href="a00357.xhtml#a7edc97c9ab3cfb28e51b7f041b93c503a6bd88cda995b797a44ad0d9f8da29f13">kPpmMax</a>,</div>
<div class="line"><a id="l00877" name="l00877"></a><span class="lineno">  877</span> </div>
<div class="line"><a id="l00878" name="l00878"></a><span class="lineno"><a class="line" href="a00357.xhtml#a7edc97c9ab3cfb28e51b7f041b93c503ab044c98fa4caca6d1300b5adb1365c70">  878</a></span>        <a class="code hl_enumvalue" href="a00357.xhtml#a7edc97c9ab3cfb28e51b7f041b93c503ab044c98fa4caca6d1300b5adb1365c70">kNumPeakTypes</a></div>
<div class="line"><a id="l00879" name="l00879"></a><span class="lineno">  879</span>    };</div>
</div>
<div class="line"><a id="l00880" name="l00880"></a><span class="lineno">  880</span> </div>
<div class="foldopen" id="foldopen00881" data-start="{" data-end="};">
<div class="line"><a id="l00881" name="l00881"></a><span class="lineno"><a class="line" href="a00357.xhtml#acd92b000d83f9ec3613b59a995c6d296">  881</a></span>    <span class="keyword">enum</span> <a class="code hl_enumeration" href="a00357.xhtml#acd92b000d83f9ec3613b59a995c6d296">PpmFilters_t</a></div>
<div class="line"><a id="l00882" name="l00882"></a><span class="lineno">  882</span>    {</div>
<div class="line"><a id="l00883" name="l00883"></a><span class="lineno"><a class="line" href="a00357.xhtml#acd92b000d83f9ec3613b59a995c6d296ab728d46d8acd39d42832d6982013dba5">  883</a></span>        <a class="code hl_enumvalue" href="a00357.xhtml#acd92b000d83f9ec3613b59a995c6d296ab728d46d8acd39d42832d6982013dba5">kAttack</a>,</div>
<div class="line"><a id="l00884" name="l00884"></a><span class="lineno"><a class="line" href="a00357.xhtml#acd92b000d83f9ec3613b59a995c6d296afcf3cedb9d4d092a341bd5b2ed1ffab5">  884</a></span>        <a class="code hl_enumvalue" href="a00357.xhtml#acd92b000d83f9ec3613b59a995c6d296afcf3cedb9d4d092a341bd5b2ed1ffab5">kRelease</a>,</div>
<div class="line"><a id="l00885" name="l00885"></a><span class="lineno">  885</span> </div>
<div class="line"><a id="l00886" name="l00886"></a><span class="lineno"><a class="line" href="a00357.xhtml#acd92b000d83f9ec3613b59a995c6d296a244967a35270c25af7fbf24a22b4b986">  886</a></span>        <a class="code hl_enumvalue" href="a00357.xhtml#acd92b000d83f9ec3613b59a995c6d296a244967a35270c25af7fbf24a22b4b986">kNumPpmFilters</a></div>
<div class="line"><a id="l00887" name="l00887"></a><span class="lineno">  887</span>    };</div>
</div>
<div class="line"><a id="l00888" name="l00888"></a><span class="lineno">  888</span> </div>
<div class="foldopen" id="foldopen00889" data-start="{" data-end="}">
<div class="line"><a id="l00889" name="l00889"></a><span class="lineno"><a class="line" href="a00357.xhtml#a1a8760a574baf47c90caf0ea1d3e5053">  889</a></span>    <span class="keywordtype">float</span> <a class="code hl_function" href="a00357.xhtml#a1a8760a574baf47c90caf0ea1d3e5053">ppm_I</a>(<span class="keywordtype">float</span> fIn)</div>
<div class="line"><a id="l00890" name="l00890"></a><span class="lineno">  890</span>    {</div>
<div class="line"><a id="l00891" name="l00891"></a><span class="lineno">  891</span>        <span class="keywordtype">float</span> fOut = 0;</div>
<div class="line"><a id="l00892" name="l00892"></a><span class="lineno">  892</span> </div>
<div class="line"><a id="l00893" name="l00893"></a><span class="lineno">  893</span>        fIn = std::abs(fIn);</div>
<div class="line"><a id="l00894" name="l00894"></a><span class="lineno">  894</span> </div>
<div class="line"><a id="l00895" name="l00895"></a><span class="lineno">  895</span>        <span class="comment">// check release vs. attack phase</span></div>
<div class="line"><a id="l00896" name="l00896"></a><span class="lineno">  896</span>        <span class="keywordflow">if</span> (<a class="code hl_variable" href="a00357.xhtml#a03dcdc58bb508eedc93c0261cfaa1843">m_fFilterBuff</a> &gt; fIn)</div>
<div class="line"><a id="l00897" name="l00897"></a><span class="lineno">  897</span>            fOut = <a class="code hl_variable" href="a00357.xhtml#af43fa882d3241bd471c366ad4494ae84">m_afAlpha</a>[<a class="code hl_enumvalue" href="a00357.xhtml#acd92b000d83f9ec3613b59a995c6d296afcf3cedb9d4d092a341bd5b2ed1ffab5">kRelease</a>] * <a class="code hl_variable" href="a00357.xhtml#a03dcdc58bb508eedc93c0261cfaa1843">m_fFilterBuff</a>;</div>
<div class="line"><a id="l00898" name="l00898"></a><span class="lineno">  898</span>        <span class="keywordflow">else</span></div>
<div class="line"><a id="l00899" name="l00899"></a><span class="lineno">  899</span>            fOut = (1.F - <a class="code hl_variable" href="a00357.xhtml#af43fa882d3241bd471c366ad4494ae84">m_afAlpha</a>[<a class="code hl_enumvalue" href="a00357.xhtml#acd92b000d83f9ec3613b59a995c6d296ab728d46d8acd39d42832d6982013dba5">kAttack</a>]) * fIn + <a class="code hl_variable" href="a00357.xhtml#af43fa882d3241bd471c366ad4494ae84">m_afAlpha</a>[<a class="code hl_enumvalue" href="a00357.xhtml#acd92b000d83f9ec3613b59a995c6d296ab728d46d8acd39d42832d6982013dba5">kAttack</a>] * <a class="code hl_variable" href="a00357.xhtml#a03dcdc58bb508eedc93c0261cfaa1843">m_fFilterBuff</a>;</div>
<div class="line"><a id="l00900" name="l00900"></a><span class="lineno">  900</span> </div>
<div class="line"><a id="l00901" name="l00901"></a><span class="lineno">  901</span>        <a class="code hl_variable" href="a00357.xhtml#a03dcdc58bb508eedc93c0261cfaa1843">m_fFilterBuff</a> = fOut;</div>
<div class="line"><a id="l00902" name="l00902"></a><span class="lineno">  902</span> </div>
<div class="line"><a id="l00903" name="l00903"></a><span class="lineno">  903</span>        <span class="keywordflow">return</span> fOut;</div>
<div class="line"><a id="l00904" name="l00904"></a><span class="lineno">  904</span>    }</div>
</div>
<div class="line"><a id="l00905" name="l00905"></a><span class="lineno">  905</span> </div>
<div class="line"><a id="l00906" name="l00906"></a><span class="lineno"><a class="line" href="a00357.xhtml#a176af3836a0fb75c200c02ed66485852">  906</a></span>    <span class="keyword">const</span> <span class="keywordtype">float</span> <a class="code hl_variable" href="a00357.xhtml#a176af3836a0fb75c200c02ed66485852">m_afIntegrationTimeInS</a>[<a class="code hl_enumvalue" href="a00357.xhtml#acd92b000d83f9ec3613b59a995c6d296a244967a35270c25af7fbf24a22b4b986">kNumPpmFilters</a>] = { .01F, 1.5F }; <span class="comment">//!&lt; integration times for filter initialization</span></div>
<div class="line"><a id="l00907" name="l00907"></a><span class="lineno"><a class="line" href="a00357.xhtml#af43fa882d3241bd471c366ad4494ae84">  907</a></span>    <span class="keywordtype">float</span> <a class="code hl_variable" href="a00357.xhtml#af43fa882d3241bd471c366ad4494ae84">m_afAlpha</a>[<a class="code hl_enumvalue" href="a00357.xhtml#acd92b000d83f9ec3613b59a995c6d296a244967a35270c25af7fbf24a22b4b986">kNumPpmFilters</a>] = { 0,0 }; <span class="comment">//!&lt; filter coefficients</span></div>
<div class="line"><a id="l00908" name="l00908"></a><span class="lineno"><a class="line" href="a00357.xhtml#a03dcdc58bb508eedc93c0261cfaa1843">  908</a></span>    <span class="keywordtype">float</span> <a class="code hl_variable" href="a00357.xhtml#a03dcdc58bb508eedc93c0261cfaa1843">m_fFilterBuff</a> = 0.F; <span class="comment">//!&lt; internal filter memory</span></div>
<div class="line"><a id="l00909" name="l00909"></a><span class="lineno">  909</span>};</div>
</div>
<div class="line"><a id="l00910" name="l00910"></a><span class="lineno">  910</span><span class="comment"></span> </div>
<div class="line"><a id="l00911" name="l00911"></a><span class="lineno">  911</span><span class="comment">/*! \brief class for computation of the rms</span></div>
<div class="line"><a id="l00912" name="l00912"></a><span class="lineno">  912</span><span class="comment">*/</span></div>
<div class="foldopen" id="foldopen00913" data-start="{" data-end="};">
<div class="line"><a id="l00913" name="l00913"></a><span class="lineno"><a class="line" href="a00361.xhtml">  913</a></span><span class="keyword">class </span><a class="code hl_function" href="a00361.xhtml#a84b694f264292580080e3604e30b3409">CFeatureTimeRms</a> : <span class="keyword">public</span> <a class="code hl_function" href="a00473.xhtml#a483bca508e2817799a3173a6180d245e">CFeatureFromBlockIf</a></div>
<div class="line"><a id="l00914" name="l00914"></a><span class="lineno">  914</span>{</div>
<div class="line"><a id="l00915" name="l00915"></a><span class="lineno">  915</span><span class="keyword">public</span>:</div>
<div class="foldopen" id="foldopen00916" data-start="{" data-end="}">
<div class="line"><a id="l00916" name="l00916"></a><span class="lineno"><a class="line" href="a00361.xhtml#a84b694f264292580080e3604e30b3409">  916</a></span>    <a class="code hl_function" href="a00361.xhtml#a84b694f264292580080e3604e30b3409">CFeatureTimeRms</a>(<a class="code hl_enumeration" href="a00469.xhtml#a47ca14941c604beb42d60164b3e5e6b3">CFeatureIf::Feature_t</a> eFeatureIdx, <span class="keywordtype">int</span> iDataLength, <span class="keywordtype">float</span> fSampleRate) : <a class="code hl_function" href="a00473.xhtml#a483bca508e2817799a3173a6180d245e">CFeatureFromBlockIf</a>(eFeatureIdx, iDataLength, fSampleRate)</div>
<div class="line"><a id="l00917" name="l00917"></a><span class="lineno">  917</span>    {</div>
<div class="line"><a id="l00918" name="l00918"></a><span class="lineno">  918</span>        <a class="code hl_function" href="a00585.xhtml#a36c98d6494cc1ac1e7bf35bec6891b3c">CSinglePoleLp::create</a>(<a class="code hl_variable" href="a00361.xhtml#a6109ba1cfd030906ae6339ff43ccb676">m_pCSinglePole</a>);</div>
<div class="line"><a id="l00919" name="l00919"></a><span class="lineno">  919</span>        <a class="code hl_variable" href="a00361.xhtml#a6109ba1cfd030906ae6339ff43ccb676">m_pCSinglePole</a>-&gt;setFilterParam(<a class="code hl_function" href="a00585.xhtml#afedab0de8491f604e797ada1fb0e5899">CSinglePoleLp::calcFilterParam</a>(<a class="code hl_variable" href="a00361.xhtml#ae069b181a2b3f12ad4dc76a81f81962e">m_fIntegrationTimeInS</a>, fSampleRate));</div>
<div class="line"><a id="l00920" name="l00920"></a><span class="lineno">  920</span>    };</div>
</div>
<div class="line"><a id="l00921" name="l00921"></a><span class="lineno">  921</span> </div>
<div class="foldopen" id="foldopen00922" data-start="{" data-end="}">
<div class="line"><a id="l00922" name="l00922"></a><span class="lineno"><a class="line" href="a00361.xhtml#aaa2ceab5029b9d648e492ddc0b6ffb4f">  922</a></span>    <span class="keyword">virtual</span> <a class="code hl_function" href="a00361.xhtml#aaa2ceab5029b9d648e492ddc0b6ffb4f">~CFeatureTimeRms</a>()</div>
<div class="line"><a id="l00923" name="l00923"></a><span class="lineno">  923</span>    {</div>
<div class="line"><a id="l00924" name="l00924"></a><span class="lineno">  924</span>        <a class="code hl_function" href="a00585.xhtml#ac0aa215647a41e3a3de44ad6474c6be3">CSinglePoleLp::destroy</a>(<a class="code hl_variable" href="a00361.xhtml#a6109ba1cfd030906ae6339ff43ccb676">m_pCSinglePole</a>);</div>
<div class="line"><a id="l00925" name="l00925"></a><span class="lineno">  925</span>    };</div>
</div>
<div class="line"><a id="l00926" name="l00926"></a><span class="lineno">  926</span> </div>
<div class="foldopen" id="foldopen00927" data-start="{" data-end="}">
<div class="line"><a id="l00927" name="l00927"></a><span class="lineno"><a class="line" href="a00361.xhtml#ab68abfdfc2f9477c81b9d43015ab9ebe">  927</a></span>    <a class="code hl_enumeration" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> <a class="code hl_function" href="a00361.xhtml#ab68abfdfc2f9477c81b9d43015ab9ebe">compFeature</a>(<span class="keywordtype">float</span> *pfFeature, <span class="keyword">const</span> <span class="keywordtype">float</span> *pfIn)<span class="keyword"> override</span></div>
<div class="line"><a id="l00928" name="l00928"></a><span class="lineno">  928</span><span class="keyword">    </span>{</div>
<div class="line"><a id="l00929" name="l00929"></a><span class="lineno">  929</span>        <span class="comment">// extract 1st variant: rms per block</span></div>
<div class="line"><a id="l00930" name="l00930"></a><span class="lineno">  930</span>        pfFeature[<a class="code hl_enumvalue" href="a00361.xhtml#a7807a1c5f7cf3b671f91c2c219dc0710ac1487bbff575acc504653aa6d692eb03">kBlockRms</a>] = <a class="code hl_function" href="a00473.xhtml#a46500f9eaa49f3860afa5f1fce555415">compFeatureTimeRms</a>(pfIn, <a class="code hl_variable" href="a00473.xhtml#a2fefdb1b1217edd46c2b4e9336fa2aed">m_iDataLength</a>, <a class="code hl_variable" href="a00473.xhtml#a75ac4ef94667058662a8100bb1c1e1cd">m_fSampleRate</a>);</div>
<div class="line"><a id="l00931" name="l00931"></a><span class="lineno">  931</span> </div>
<div class="line"><a id="l00932" name="l00932"></a><span class="lineno">  932</span>        <span class="comment">// extract 2nd variant: rms from single pole</span></div>
<div class="line"><a id="l00933" name="l00933"></a><span class="lineno">  933</span>        <span class="comment">// do inefficient sample based processing so we don&#39;t have to alloc extra memory</span></div>
<div class="line"><a id="l00934" name="l00934"></a><span class="lineno">  934</span>        pfFeature[<a class="code hl_enumvalue" href="a00361.xhtml#a7807a1c5f7cf3b671f91c2c219dc0710a5199de0b5750680928c9a0315be4c4b0">kLowpass</a>] = 0;</div>
<div class="line"><a id="l00935" name="l00935"></a><span class="lineno">  935</span>        <span class="keywordflow">for</span> (<span class="keyword">auto</span> i = 0; i &lt; <a class="code hl_variable" href="a00473.xhtml#a2fefdb1b1217edd46c2b4e9336fa2aed">m_iDataLength</a>; i++)</div>
<div class="line"><a id="l00936" name="l00936"></a><span class="lineno">  936</span>        {</div>
<div class="line"><a id="l00937" name="l00937"></a><span class="lineno">  937</span>            <span class="keywordtype">float</span> fIn = pfIn[i] * pfIn[i];</div>
<div class="line"><a id="l00938" name="l00938"></a><span class="lineno">  938</span>            <span class="keywordtype">float</span> fOut = 0;</div>
<div class="line"><a id="l00939" name="l00939"></a><span class="lineno">  939</span>            <a class="code hl_variable" href="a00361.xhtml#a6109ba1cfd030906ae6339ff43ccb676">m_pCSinglePole</a>-&gt;process(&amp;fOut, &amp;fIn, 1);</div>
<div class="line"><a id="l00940" name="l00940"></a><span class="lineno">  940</span>            <span class="keywordflow">if</span> (fOut &gt; pfFeature[<a class="code hl_enumvalue" href="a00361.xhtml#a7807a1c5f7cf3b671f91c2c219dc0710a5199de0b5750680928c9a0315be4c4b0">kLowpass</a>])</div>
<div class="line"><a id="l00941" name="l00941"></a><span class="lineno">  941</span>                pfFeature[<a class="code hl_enumvalue" href="a00361.xhtml#a7807a1c5f7cf3b671f91c2c219dc0710a5199de0b5750680928c9a0315be4c4b0">kLowpass</a>] = fOut;</div>
<div class="line"><a id="l00942" name="l00942"></a><span class="lineno">  942</span>        }</div>
<div class="line"><a id="l00943" name="l00943"></a><span class="lineno">  943</span>        pfFeature[<a class="code hl_enumvalue" href="a00361.xhtml#a7807a1c5f7cf3b671f91c2c219dc0710a5199de0b5750680928c9a0315be4c4b0">kLowpass</a>] = std::sqrt(pfFeature[<a class="code hl_enumvalue" href="a00361.xhtml#a7807a1c5f7cf3b671f91c2c219dc0710a5199de0b5750680928c9a0315be4c4b0">kLowpass</a>]);</div>
<div class="line"><a id="l00944" name="l00944"></a><span class="lineno">  944</span> </div>
<div class="line"><a id="l00945" name="l00945"></a><span class="lineno">  945</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><a id="l00946" name="l00946"></a><span class="lineno">  946</span>    };</div>
</div>
<div class="line"><a id="l00947" name="l00947"></a><span class="lineno">  947</span> </div>
<div class="foldopen" id="foldopen00948" data-start="{" data-end="}">
<div class="line"><a id="l00948" name="l00948"></a><span class="lineno"><a class="line" href="a00361.xhtml#a69b3e227ffcbca082fbe0aac97a8e267">  948</a></span>    <span class="keywordtype">int</span> <a class="code hl_function" href="a00361.xhtml#a69b3e227ffcbca082fbe0aac97a8e267">getFeatureDimensions</a>()<span class="keyword"> const override</span></div>
<div class="line"><a id="l00949" name="l00949"></a><span class="lineno">  949</span><span class="keyword">    </span>{</div>
<div class="line"><a id="l00950" name="l00950"></a><span class="lineno">  950</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00361.xhtml#a7807a1c5f7cf3b671f91c2c219dc0710aa5e73589fa65c485c38b59d19906004d">kNumRmsTypes</a>;</div>
<div class="line"><a id="l00951" name="l00951"></a><span class="lineno">  951</span>    }</div>
</div>
<div class="line"><a id="l00952" name="l00952"></a><span class="lineno">  952</span> </div>
<div class="foldopen" id="foldopen00953" data-start="{" data-end="}">
<div class="line"><a id="l00953" name="l00953"></a><span class="lineno"><a class="line" href="a00361.xhtml#a0ac27ca50b3a6e88b08536fdcdd2b466">  953</a></span>    <span class="keywordtype">bool</span> <a class="code hl_function" href="a00361.xhtml#a0ac27ca50b3a6e88b08536fdcdd2b466">hasAdditionalParam</a>()<span class="keyword"> const override</span></div>
<div class="line"><a id="l00954" name="l00954"></a><span class="lineno">  954</span><span class="keyword">    </span>{</div>
<div class="line"><a id="l00955" name="l00955"></a><span class="lineno">  955</span>        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a id="l00956" name="l00956"></a><span class="lineno">  956</span>    }</div>
</div>
<div class="line"><a id="l00957" name="l00957"></a><span class="lineno">  957</span> </div>
<div class="foldopen" id="foldopen00958" data-start="{" data-end="}">
<div class="line"><a id="l00958" name="l00958"></a><span class="lineno"><a class="line" href="a00361.xhtml#af460352621ac7a18676d0a361c1df51e">  958</a></span>    <a class="code hl_enumeration" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> <a class="code hl_function" href="a00361.xhtml#af460352621ac7a18676d0a361c1df51e">setAdditionalParam</a>(<span class="keywordtype">float</span> fParamValue)<span class="keyword"> override</span></div>
<div class="line"><a id="l00959" name="l00959"></a><span class="lineno">  959</span><span class="keyword">    </span>{</div>
<div class="line"><a id="l00960" name="l00960"></a><span class="lineno">  960</span>        <span class="keywordflow">if</span> (fParamValue &lt;= 0)</div>
<div class="line"><a id="l00961" name="l00961"></a><span class="lineno">  961</span>            <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><a id="l00962" name="l00962"></a><span class="lineno">  962</span> </div>
<div class="line"><a id="l00963" name="l00963"></a><span class="lineno">  963</span>        <a class="code hl_variable" href="a00361.xhtml#ae069b181a2b3f12ad4dc76a81f81962e">m_fIntegrationTimeInS</a> = fParamValue;</div>
<div class="line"><a id="l00964" name="l00964"></a><span class="lineno">  964</span> </div>
<div class="line"><a id="l00965" name="l00965"></a><span class="lineno">  965</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><a id="l00966" name="l00966"></a><span class="lineno">  966</span>    }</div>
</div>
<div class="line"><a id="l00967" name="l00967"></a><span class="lineno">  967</span> </div>
<div class="line"><a id="l00968" name="l00968"></a><span class="lineno">  968</span><span class="keyword">private</span>:</div>
<div class="foldopen" id="foldopen00969" data-start="{" data-end="};">
<div class="line"><a id="l00969" name="l00969"></a><span class="lineno"><a class="line" href="a00361.xhtml#a7807a1c5f7cf3b671f91c2c219dc0710">  969</a></span>    <span class="keyword">enum</span> <a class="code hl_enumeration" href="a00361.xhtml#a7807a1c5f7cf3b671f91c2c219dc0710">RmsType_t</a></div>
<div class="line"><a id="l00970" name="l00970"></a><span class="lineno">  970</span>    {</div>
<div class="line"><a id="l00971" name="l00971"></a><span class="lineno"><a class="line" href="a00361.xhtml#a7807a1c5f7cf3b671f91c2c219dc0710ac1487bbff575acc504653aa6d692eb03">  971</a></span>        <a class="code hl_enumvalue" href="a00361.xhtml#a7807a1c5f7cf3b671f91c2c219dc0710ac1487bbff575acc504653aa6d692eb03">kBlockRms</a>,</div>
<div class="line"><a id="l00972" name="l00972"></a><span class="lineno"><a class="line" href="a00361.xhtml#a7807a1c5f7cf3b671f91c2c219dc0710a5199de0b5750680928c9a0315be4c4b0">  972</a></span>        <a class="code hl_enumvalue" href="a00361.xhtml#a7807a1c5f7cf3b671f91c2c219dc0710a5199de0b5750680928c9a0315be4c4b0">kLowpass</a>,</div>
<div class="line"><a id="l00973" name="l00973"></a><span class="lineno">  973</span> </div>
<div class="line"><a id="l00974" name="l00974"></a><span class="lineno"><a class="line" href="a00361.xhtml#a7807a1c5f7cf3b671f91c2c219dc0710aa5e73589fa65c485c38b59d19906004d">  974</a></span>        <a class="code hl_enumvalue" href="a00361.xhtml#a7807a1c5f7cf3b671f91c2c219dc0710aa5e73589fa65c485c38b59d19906004d">kNumRmsTypes</a></div>
<div class="line"><a id="l00975" name="l00975"></a><span class="lineno">  975</span>    };</div>
</div>
<div class="line"><a id="l00976" name="l00976"></a><span class="lineno"><a class="line" href="a00361.xhtml#a32543ce16ae631547984c2927d64d9ac">  976</a></span>    <a class="code hl_function" href="a00361.xhtml#a32543ce16ae631547984c2927d64d9ac">CFeatureTimeRms</a>() {};</div>
<div class="line"><a id="l00977" name="l00977"></a><span class="lineno"><a class="line" href="a00361.xhtml#acb267f4c5c9b8a53384fc44b602eaa24">  977</a></span>    <a class="code hl_function" href="a00361.xhtml#acb267f4c5c9b8a53384fc44b602eaa24">CFeatureTimeRms</a>(<span class="keyword">const</span> <a class="code hl_function" href="a00361.xhtml#a84b694f264292580080e3604e30b3409">CFeatureTimeRms</a> &amp;that); <span class="comment">//!&lt; disallow copy construction   </span></div>
<div class="line"><a id="l00978" name="l00978"></a><span class="lineno">  978</span> </div>
<div class="line"><a id="l00979" name="l00979"></a><span class="lineno"><a class="line" href="a00361.xhtml#a6109ba1cfd030906ae6339ff43ccb676">  979</a></span>    <a class="code hl_class" href="a00585.xhtml">CSinglePoleLp</a> *<a class="code hl_variable" href="a00361.xhtml#a6109ba1cfd030906ae6339ff43ccb676">m_pCSinglePole</a> = 0; <span class="comment">//!&lt; instance of low pass filter</span></div>
<div class="line"><a id="l00980" name="l00980"></a><span class="lineno">  980</span> </div>
<div class="line"><a id="l00981" name="l00981"></a><span class="lineno"><a class="line" href="a00361.xhtml#ae069b181a2b3f12ad4dc76a81f81962e">  981</a></span>    <span class="keywordtype">float</span> <a class="code hl_variable" href="a00361.xhtml#ae069b181a2b3f12ad4dc76a81f81962e">m_fIntegrationTimeInS</a> = .3F; <span class="comment">//!&lt; integration time for filter coeff calculation</span></div>
<div class="line"><a id="l00982" name="l00982"></a><span class="lineno">  982</span>};</div>
</div>
<div class="line"><a id="l00983" name="l00983"></a><span class="lineno">  983</span><span class="comment"></span> </div>
<div class="line"><a id="l00984" name="l00984"></a><span class="lineno">  984</span><span class="comment">///////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a id="l00985" name="l00985"></a><span class="lineno">  985</span><span class="comment">// normal member functions</span></div>
<div class="foldopen" id="foldopen00986" data-start="{" data-end="}">
<div class="line"><a id="l00986" name="l00986"></a><span class="lineno"><a class="line" href="a00473.xhtml#a6d3ca4f66582ae352e3addfd7f99a752">  986</a></span><a class="code hl_enumeration" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> <a class="code hl_function" href="a00473.xhtml#a6d3ca4f66582ae352e3addfd7f99a752">CFeatureFromBlockIf::create</a>(<a class="code hl_function" href="a00473.xhtml#a483bca508e2817799a3173a6180d245e">CFeatureFromBlockIf</a> *&amp;pCInstance, <a class="code hl_enumeration" href="a00469.xhtml#a47ca14941c604beb42d60164b3e5e6b3">CFeatureIf::Feature_t</a> eFeatureIdx, <span class="keywordtype">int</span> iDataLength, <span class="keywordtype">float</span> fSampleRate)</div>
<div class="line"><a id="l00987" name="l00987"></a><span class="lineno">  987</span>{</div>
<div class="line"><a id="l00988" name="l00988"></a><span class="lineno">  988</span>    <span class="keywordflow">if</span> (iDataLength &lt;= 0 || fSampleRate &lt;= 0)</div>
<div class="line"><a id="l00989" name="l00989"></a><span class="lineno">  989</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248">Error_t::kFunctionInvalidArgsError</a>;</div>
<div class="line"><a id="l00990" name="l00990"></a><span class="lineno">  990</span> </div>
<div class="line"><a id="l00991" name="l00991"></a><span class="lineno">  991</span>    <span class="comment">// see if we can compute this feature directly or have a derive class</span></div>
<div class="line"><a id="l00992" name="l00992"></a><span class="lineno">  992</span>    <span class="keywordflow">switch</span> (eFeatureIdx)</div>
<div class="line"><a id="l00993" name="l00993"></a><span class="lineno">  993</span>    {</div>
<div class="line"><a id="l00994" name="l00994"></a><span class="lineno">  994</span>    <span class="keywordflow">default</span>:</div>
<div class="line"><a id="l00995" name="l00995"></a><span class="lineno">  995</span>    <span class="keywordflow">case</span> <a class="code hl_enumvalue" href="a00469.xhtml#a47ca14941c604beb42d60164b3e5e6b3af835ba1196c45135d5b2c14bd71765fe">CFeatureIf::kFeatureSpectralCentroid</a>:</div>
<div class="line"><a id="l00996" name="l00996"></a><span class="lineno">  996</span>    <span class="keywordflow">case</span> <a class="code hl_enumvalue" href="a00469.xhtml#a47ca14941c604beb42d60164b3e5e6b3a56e83df863061d4093933f57dc036fd0">CFeatureIf::kFeatureSpectralCrestFactor</a>:</div>
<div class="line"><a id="l00997" name="l00997"></a><span class="lineno">  997</span>    <span class="keywordflow">case</span> <a class="code hl_enumvalue" href="a00469.xhtml#a47ca14941c604beb42d60164b3e5e6b3a73840e0ec4ffc58aac491b51add4ebae">CFeatureIf::kFeatureSpectralDecrease</a>:</div>
<div class="line"><a id="l00998" name="l00998"></a><span class="lineno">  998</span>    <span class="keywordflow">case</span> <a class="code hl_enumvalue" href="a00469.xhtml#a47ca14941c604beb42d60164b3e5e6b3abe659e5b25086d04ed78c40d7411b71d">CFeatureIf::kFeatureSpectralFlatness</a>:</div>
<div class="line"><a id="l00999" name="l00999"></a><span class="lineno">  999</span>    <span class="keywordflow">case</span> <a class="code hl_enumvalue" href="a00469.xhtml#a47ca14941c604beb42d60164b3e5e6b3aa0fa60f5d1741a50b4e018ae35c53084">CFeatureIf::kFeatureSpectralKurtosis</a>:</div>
<div class="line"><a id="l01000" name="l01000"></a><span class="lineno"> 1000</span>    <span class="keywordflow">case</span> <a class="code hl_enumvalue" href="a00469.xhtml#a47ca14941c604beb42d60164b3e5e6b3adc99879506ae42b73740c06987993d6b">CFeatureIf::kFeatureSpectralSkewness</a>:</div>
<div class="line"><a id="l01001" name="l01001"></a><span class="lineno"> 1001</span>    <span class="keywordflow">case</span> <a class="code hl_enumvalue" href="a00469.xhtml#a47ca14941c604beb42d60164b3e5e6b3ab48b0af125a41eb628e2867f53248828">CFeatureIf::kFeatureSpectralSlope</a>:</div>
<div class="line"><a id="l01002" name="l01002"></a><span class="lineno"> 1002</span>    <span class="keywordflow">case</span> <a class="code hl_enumvalue" href="a00469.xhtml#a47ca14941c604beb42d60164b3e5e6b3a2e51955c0f5d4edf37bb8b0c0b7af6f5">CFeatureIf::kFeatureSpectralSpread</a>:</div>
<div class="line"><a id="l01003" name="l01003"></a><span class="lineno"> 1003</span>    <span class="keywordflow">case</span> <a class="code hl_enumvalue" href="a00469.xhtml#a47ca14941c604beb42d60164b3e5e6b3aa7fcbc742fe20a02ec32aa842ef5d9ac">CFeatureIf::kFeatureTimeStd</a>:</div>
<div class="line"><a id="l01004" name="l01004"></a><span class="lineno"> 1004</span>    <span class="keywordflow">case</span> <a class="code hl_enumvalue" href="a00469.xhtml#a47ca14941c604beb42d60164b3e5e6b3a4358b37321d69645738c1494bb94b925">CFeatureIf::kFeatureTimeZeroCrossingRate</a>:</div>
<div class="line"><a id="l01005" name="l01005"></a><span class="lineno"> 1005</span>        pCInstance = <span class="keyword">new</span> <a class="code hl_function" href="a00473.xhtml#a483bca508e2817799a3173a6180d245e">CFeatureFromBlockIf</a>(eFeatureIdx, iDataLength, fSampleRate);</div>
<div class="line"><a id="l01006" name="l01006"></a><span class="lineno"> 1006</span>        <span class="keywordflow">break</span>;</div>
<div class="line"><a id="l01007" name="l01007"></a><span class="lineno"> 1007</span> </div>
<div class="line"><a id="l01008" name="l01008"></a><span class="lineno"> 1008</span>    <span class="keywordflow">case</span> <a class="code hl_enumvalue" href="a00469.xhtml#a47ca14941c604beb42d60164b3e5e6b3ababfc8ce9c5b272fd805b5e8a1fb5ff6">CFeatureIf::kFeatureSpectralFlux</a>:</div>
<div class="line"><a id="l01009" name="l01009"></a><span class="lineno"> 1009</span>        pCInstance = <span class="keyword">new</span> <a class="code hl_class" href="a00329.xhtml">CFeatureSpectralFlux</a>(eFeatureIdx, iDataLength, fSampleRate);</div>
<div class="line"><a id="l01010" name="l01010"></a><span class="lineno"> 1010</span>        <span class="keywordflow">break</span>;</div>
<div class="line"><a id="l01011" name="l01011"></a><span class="lineno"> 1011</span> </div>
<div class="line"><a id="l01012" name="l01012"></a><span class="lineno"> 1012</span>    <span class="keywordflow">case</span> <a class="code hl_enumvalue" href="a00469.xhtml#a47ca14941c604beb42d60164b3e5e6b3a47c4f31d2c8d477f955da1281c8bda85">CFeatureIf::kFeatureSpectralMfccs</a>:</div>
<div class="line"><a id="l01013" name="l01013"></a><span class="lineno"> 1013</span>        pCInstance = <span class="keyword">new</span> <a class="code hl_class" href="a00333.xhtml">CFeatureSpectralMfccs</a>(eFeatureIdx, iDataLength, fSampleRate);</div>
<div class="line"><a id="l01014" name="l01014"></a><span class="lineno"> 1014</span>        <span class="keywordflow">break</span>;</div>
<div class="line"><a id="l01015" name="l01015"></a><span class="lineno"> 1015</span> </div>
<div class="line"><a id="l01016" name="l01016"></a><span class="lineno"> 1016</span>    <span class="keywordflow">case</span> <a class="code hl_enumvalue" href="a00469.xhtml#a47ca14941c604beb42d60164b3e5e6b3a6cca75d6d116b2284ae19d2b75093198">CFeatureIf::kFeatureSpectralPitchChroma</a>:</div>
<div class="line"><a id="l01017" name="l01017"></a><span class="lineno"> 1017</span>        pCInstance = <span class="keyword">new</span> <a class="code hl_class" href="a00337.xhtml">CFeatureSpectralPitchChroma</a>(eFeatureIdx, iDataLength, fSampleRate);</div>
<div class="line"><a id="l01018" name="l01018"></a><span class="lineno"> 1018</span>        <span class="keywordflow">break</span>;</div>
<div class="line"><a id="l01019" name="l01019"></a><span class="lineno"> 1019</span> </div>
<div class="line"><a id="l01020" name="l01020"></a><span class="lineno"> 1020</span>    <span class="keywordflow">case</span> <a class="code hl_enumvalue" href="a00469.xhtml#a47ca14941c604beb42d60164b3e5e6b3a0fe1e0e5caf8fd22c48abcde74028c8f">CFeatureIf::kFeatureSpectralRolloff</a>:</div>
<div class="line"><a id="l01021" name="l01021"></a><span class="lineno"> 1021</span>        pCInstance = <span class="keyword">new</span> <a class="code hl_class" href="a00341.xhtml">CFeatureSpectralRolloff</a>(eFeatureIdx, iDataLength, fSampleRate);</div>
<div class="line"><a id="l01022" name="l01022"></a><span class="lineno"> 1022</span>        <span class="keywordflow">break</span>;</div>
<div class="line"><a id="l01023" name="l01023"></a><span class="lineno"> 1023</span> </div>
<div class="line"><a id="l01024" name="l01024"></a><span class="lineno"> 1024</span>    <span class="keywordflow">case</span> <a class="code hl_enumvalue" href="a00469.xhtml#a47ca14941c604beb42d60164b3e5e6b3ab91719fe00fbcbbd34b7b5b0e7631dfd">CFeatureIf::kFeatureSpectralTonalPowerRatio</a>:</div>
<div class="line"><a id="l01025" name="l01025"></a><span class="lineno"> 1025</span>        pCInstance = <span class="keyword">new</span> <a class="code hl_class" href="a00345.xhtml">CFeatureSpectralTonalPowerRatio</a>(eFeatureIdx, iDataLength, fSampleRate);</div>
<div class="line"><a id="l01026" name="l01026"></a><span class="lineno"> 1026</span>        <span class="keywordflow">break</span>;</div>
<div class="line"><a id="l01027" name="l01027"></a><span class="lineno"> 1027</span> </div>
<div class="line"><a id="l01028" name="l01028"></a><span class="lineno"> 1028</span>    <span class="keywordflow">case</span> <a class="code hl_enumvalue" href="a00469.xhtml#a47ca14941c604beb42d60164b3e5e6b3ab6c784d49502082864d1ff9170564dcd">CFeatureIf::kFeatureTimeAcfCoeff</a>:</div>
<div class="line"><a id="l01029" name="l01029"></a><span class="lineno"> 1029</span>        pCInstance = <span class="keyword">new</span> <a class="code hl_class" href="a00349.xhtml">CFeatureTimeAcfCoeff</a>(eFeatureIdx, iDataLength, fSampleRate);</div>
<div class="line"><a id="l01030" name="l01030"></a><span class="lineno"> 1030</span>        <span class="keywordflow">break</span>;</div>
<div class="line"><a id="l01031" name="l01031"></a><span class="lineno"> 1031</span> </div>
<div class="line"><a id="l01032" name="l01032"></a><span class="lineno"> 1032</span>    <span class="keywordflow">case</span> <a class="code hl_enumvalue" href="a00469.xhtml#a47ca14941c604beb42d60164b3e5e6b3a1fcad202a3cfc949aed26a5ff806a180">CFeatureIf::kFeatureTimeMaxAcf</a>:</div>
<div class="line"><a id="l01033" name="l01033"></a><span class="lineno"> 1033</span>        pCInstance = <span class="keyword">new</span> <a class="code hl_class" href="a00353.xhtml">CFeatureTimeMaxAcf</a>(eFeatureIdx, iDataLength, fSampleRate);</div>
<div class="line"><a id="l01034" name="l01034"></a><span class="lineno"> 1034</span>        <span class="keywordflow">break</span>;</div>
<div class="line"><a id="l01035" name="l01035"></a><span class="lineno"> 1035</span> </div>
<div class="line"><a id="l01036" name="l01036"></a><span class="lineno"> 1036</span>    <span class="keywordflow">case</span> <a class="code hl_enumvalue" href="a00469.xhtml#a47ca14941c604beb42d60164b3e5e6b3a138118ff8341d41558cd0b32a85eafd3">CFeatureIf::kFeatureTimePeakEnvelope</a>:</div>
<div class="line"><a id="l01037" name="l01037"></a><span class="lineno"> 1037</span>        pCInstance = <span class="keyword">new</span> <a class="code hl_class" href="a00357.xhtml">CFeatureTimePeakEnvelope</a>(eFeatureIdx, iDataLength, fSampleRate);</div>
<div class="line"><a id="l01038" name="l01038"></a><span class="lineno"> 1038</span>        <span class="keywordflow">break</span>;</div>
<div class="line"><a id="l01039" name="l01039"></a><span class="lineno"> 1039</span> </div>
<div class="line"><a id="l01040" name="l01040"></a><span class="lineno"> 1040</span>    <span class="keywordflow">case</span> <a class="code hl_enumvalue" href="a00469.xhtml#a47ca14941c604beb42d60164b3e5e6b3aedb0c71ed62a6df3eb21f53cad93682a">CFeatureIf::kFeatureTimeRms</a>:</div>
<div class="line"><a id="l01041" name="l01041"></a><span class="lineno"> 1041</span>        pCInstance = <span class="keyword">new</span> <a class="code hl_class" href="a00361.xhtml">CFeatureTimeRms</a>(eFeatureIdx, iDataLength, fSampleRate);</div>
<div class="line"><a id="l01042" name="l01042"></a><span class="lineno"> 1042</span>        <span class="keywordflow">break</span>;</div>
<div class="line"><a id="l01043" name="l01043"></a><span class="lineno"> 1043</span>    }</div>
<div class="line"><a id="l01044" name="l01044"></a><span class="lineno"> 1044</span> </div>
<div class="line"><a id="l01045" name="l01045"></a><span class="lineno"> 1045</span>    <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><a id="l01046" name="l01046"></a><span class="lineno"> 1046</span>}</div>
</div>
<div class="line"><a id="l01047" name="l01047"></a><span class="lineno"> 1047</span> </div>
<div class="foldopen" id="foldopen01048" data-start="{" data-end="}">
<div class="line"><a id="l01048" name="l01048"></a><span class="lineno"><a class="line" href="a00473.xhtml#a300e7b2134b2bd0faaa24cfecbd9cb51"> 1048</a></span><a class="code hl_enumeration" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> <a class="code hl_function" href="a00473.xhtml#a300e7b2134b2bd0faaa24cfecbd9cb51">CFeatureFromBlockIf::destroy</a>(<a class="code hl_function" href="a00473.xhtml#a483bca508e2817799a3173a6180d245e">CFeatureFromBlockIf</a> *&amp;pCInstance)</div>
<div class="line"><a id="l01049" name="l01049"></a><span class="lineno"> 1049</span>{</div>
<div class="line"><a id="l01050" name="l01050"></a><span class="lineno"> 1050</span>    <span class="keyword">delete</span> pCInstance;</div>
<div class="line"><a id="l01051" name="l01051"></a><span class="lineno"> 1051</span> </div>
<div class="line"><a id="l01052" name="l01052"></a><span class="lineno"> 1052</span>    pCInstance = 0;</div>
<div class="line"><a id="l01053" name="l01053"></a><span class="lineno"> 1053</span> </div>
<div class="line"><a id="l01054" name="l01054"></a><span class="lineno"> 1054</span>    <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><a id="l01055" name="l01055"></a><span class="lineno"> 1055</span>}</div>
</div>
<div class="line"><a id="l01056" name="l01056"></a><span class="lineno"> 1056</span> </div>
<div class="foldopen" id="foldopen01057" data-start="{" data-end="}">
<div class="line"><a id="l01057" name="l01057"></a><span class="lineno"><a class="line" href="a00473.xhtml#a8bf822f58aa66fc4787c5528352575c0"> 1057</a></span><span class="keywordtype">int</span> <a class="code hl_function" href="a00473.xhtml#a8bf822f58aa66fc4787c5528352575c0">CFeatureFromBlockIf::getFeatureDimensions</a>()<span class="keyword"> const</span></div>
<div class="line"><a id="l01058" name="l01058"></a><span class="lineno"> 1058</span><span class="keyword"></span>{</div>
<div class="line"><a id="l01059" name="l01059"></a><span class="lineno"> 1059</span>    <span class="comment">// default: 1 value per block (can be overridden)</span></div>
<div class="line"><a id="l01060" name="l01060"></a><span class="lineno"> 1060</span>    <span class="keywordflow">return</span> 1;</div>
<div class="line"><a id="l01061" name="l01061"></a><span class="lineno"> 1061</span>}</div>
</div>
<div class="line"><a id="l01062" name="l01062"></a><span class="lineno"> 1062</span> </div>
<div class="foldopen" id="foldopen01063" data-start="{" data-end="}">
<div class="line"><a id="l01063" name="l01063"></a><span class="lineno"><a class="line" href="a00473.xhtml#a7eea1378e1f161f7a69c4723405efa8a"> 1063</a></span><a class="code hl_enumeration" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> <a class="code hl_function" href="a00473.xhtml#a7eea1378e1f161f7a69c4723405efa8a">CFeatureFromBlockIf::compFeature</a>(<span class="keywordtype">float</span> *pfFeature, <span class="keyword">const</span> <span class="keywordtype">float</span> *pfIn)</div>
<div class="line"><a id="l01064" name="l01064"></a><span class="lineno"> 1064</span>{</div>
<div class="line"><a id="l01065" name="l01065"></a><span class="lineno"> 1065</span>    <span class="comment">// default: use one of the static functions (can be overridden)</span></div>
<div class="line"><a id="l01066" name="l01066"></a><span class="lineno"> 1066</span>    *pfFeature = <a class="code hl_variable" href="a00473.xhtml#abcd848057f825a60c88ca74394fbee6d">m_DispatchMap</a>.at(<a class="code hl_variable" href="a00473.xhtml#a3cdaa6a50139576cf1aaa73f4b0d3b6f">m_eFeatureIdx</a>)(pfIn, <a class="code hl_variable" href="a00473.xhtml#a2fefdb1b1217edd46c2b4e9336fa2aed">m_iDataLength</a>, <a class="code hl_variable" href="a00473.xhtml#a75ac4ef94667058662a8100bb1c1e1cd">m_fSampleRate</a>);</div>
<div class="line"><a id="l01067" name="l01067"></a><span class="lineno"> 1067</span> </div>
<div class="line"><a id="l01068" name="l01068"></a><span class="lineno"> 1068</span>    <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><a id="l01069" name="l01069"></a><span class="lineno"> 1069</span>}</div>
</div>
<div class="line"><a id="l01070" name="l01070"></a><span class="lineno"> 1070</span> </div>
<div class="foldopen" id="foldopen01071" data-start="{" data-end="}">
<div class="line"><a id="l01071" name="l01071"></a><span class="lineno"><a class="line" href="a00473.xhtml#a41daabd1afa9c2307c64b431fcf8da62"> 1071</a></span><span class="keywordtype">bool</span> <a class="code hl_function" href="a00473.xhtml#a41daabd1afa9c2307c64b431fcf8da62">CFeatureFromBlockIf::hasAdditionalParam</a>()<span class="keyword"> const</span></div>
<div class="line"><a id="l01072" name="l01072"></a><span class="lineno"> 1072</span><span class="keyword"></span>{</div>
<div class="line"><a id="l01073" name="l01073"></a><span class="lineno"> 1073</span>    <span class="comment">// default: feature doesn&#39;t need any additional parameter (can be overridden)</span></div>
<div class="line"><a id="l01074" name="l01074"></a><span class="lineno"> 1074</span>    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a id="l01075" name="l01075"></a><span class="lineno"> 1075</span>}</div>
</div>
<div class="line"><a id="l01076" name="l01076"></a><span class="lineno"> 1076</span> </div>
<div class="foldopen" id="foldopen01077" data-start="{" data-end="}">
<div class="line"><a id="l01077" name="l01077"></a><span class="lineno"><a class="line" href="a00473.xhtml#a7f3f62f3787b0ddc4c8938f5d54170af"> 1077</a></span><a class="code hl_enumeration" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> <a class="code hl_function" href="a00473.xhtml#a7f3f62f3787b0ddc4c8938f5d54170af">CFeatureFromBlockIf::setAdditionalParam</a>(<span class="keywordtype">float</span> <span class="comment">/*fParamValue*/</span>)</div>
<div class="line"><a id="l01078" name="l01078"></a><span class="lineno"> 1078</span>{</div>
<div class="line"><a id="l01079" name="l01079"></a><span class="lineno"> 1079</span>    <span class="comment">// default: setting a parameter that doesn&#39;t exist (can be overridden)</span></div>
<div class="line"><a id="l01080" name="l01080"></a><span class="lineno"> 1080</span>    <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fad7652bf47cff43c21f12cb7df4ca66ec">Error_t::kFunctionIllegalCallError</a>;</div>
<div class="line"><a id="l01081" name="l01081"></a><span class="lineno"> 1081</span>}</div>
</div>
<div class="ttc" id="aa00146_xhtml"><div class="ttname"><a href="a00146.xhtml">ToolCcf.h</a></div></div>
<div class="ttc" id="aa00167_xhtml_a4e8c0d09726859e3d3369c0da5a1aa7f"><div class="ttname"><a href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a></div><div class="ttdeci">Error_t</div><div class="ttdef"><b>Definition</b> <a href="a00167_source.xhtml#l00004">ErrorDef.h:5</a></div></div>
<div class="ttc" id="aa00167_xhtml_a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248"><div class="ttname"><a href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248">Error_t::kFunctionInvalidArgsError</a></div><div class="ttdeci">@ kFunctionInvalidArgsError</div><div class="ttdef"><b>Definition</b> <a href="a00167_source.xhtml#l00011">ErrorDef.h:11</a></div></div>
<div class="ttc" id="aa00167_xhtml_a4e8c0d09726859e3d3369c0da5a1aa7fad7652bf47cff43c21f12cb7df4ca66ec"><div class="ttname"><a href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fad7652bf47cff43c21f12cb7df4ca66ec">Error_t::kFunctionIllegalCallError</a></div><div class="ttdeci">@ kFunctionIllegalCallError</div><div class="ttdef"><b>Definition</b> <a href="a00167_source.xhtml#l00014">ErrorDef.h:14</a></div></div>
<div class="ttc" id="aa00167_xhtml_a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b"><div class="ttname"><a href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a></div><div class="ttdeci">@ kNoError</div><div class="ttdef"><b>Definition</b> <a href="a00167_source.xhtml#l00006">ErrorDef.h:6</a></div></div>
<div class="ttc" id="aa00185_xhtml"><div class="ttname"><a href="a00185.xhtml">Vector.h</a></div></div>
<div class="ttc" id="aa00188_xhtml"><div class="ttname"><a href="a00188.xhtml">Matrix.h</a></div></div>
<div class="ttc" id="aa00191_xhtml"><div class="ttname"><a href="a00191.xhtml">Util.h</a></div></div>
<div class="ttc" id="aa00206_xhtml"><div class="ttname"><a href="a00206.xhtml">ToolLowPass.h</a></div></div>
<div class="ttc" id="aa00227_xhtml"><div class="ttname"><a href="a00227.xhtml">FeatureFromBlock.h</a></div></div>
<div class="ttc" id="aa00248_xhtml"><div class="ttname"><a href="a00248.xhtml">ToolConversion.h</a></div></div>
<div class="ttc" id="aa00269_xhtml_ae71449b1cc6e6250b91f539153a7a0d3"><div class="ttname"><a href="a00269.xhtml#ae71449b1cc6e6250b91f539153a7a0d3">M_PI</a></div><div class="ttdeci">#define M_PI</div><div class="ttdef"><b>Definition</b> <a href="a00269_source.xhtml#l00018">_sndlib.h:18</a></div></div>
<div class="ttc" id="aa00329_xhtml"><div class="ttname"><a href="a00329.xhtml">CFeatureSpectralFlux</a></div><div class="ttdoc">class for computation of the spectral flux</div><div class="ttdef"><b>Definition</b> <a href="#l00343">FeatureFromBlock.cpp:344</a></div></div>
<div class="ttc" id="aa00329_xhtml_a01d9b56bba6b925332816534765b7723"><div class="ttname"><a href="a00329.xhtml#a01d9b56bba6b925332816534765b7723">CFeatureSpectralFlux::compFeature</a></div><div class="ttdeci">Error_t compFeature(float *pfFeature, const float *pfIn) override</div><div class="ttdef"><b>Definition</b> <a href="#l00357">FeatureFromBlock.cpp:357</a></div></div>
<div class="ttc" id="aa00329_xhtml_a0e7559e5ea0ca227f148f06aaa8edc06"><div class="ttname"><a href="a00329.xhtml#a0e7559e5ea0ca227f148f06aaa8edc06">CFeatureSpectralFlux::m_pfPrevSpec</a></div><div class="ttdeci">float * m_pfPrevSpec</div><div class="ttdoc">memory of previous spectrum</div><div class="ttdef"><b>Definition</b> <a href="#l00371">FeatureFromBlock.cpp:371</a></div></div>
<div class="ttc" id="aa00329_xhtml_a1a45f132f54b2f2f3d63f0827dc8300f"><div class="ttname"><a href="a00329.xhtml#a1a45f132f54b2f2f3d63f0827dc8300f">CFeatureSpectralFlux::CFeatureSpectralFlux</a></div><div class="ttdeci">CFeatureSpectralFlux(CFeatureIf::Feature_t eFeatureIdx, int iDataLength, float fSampleRate)</div><div class="ttdef"><b>Definition</b> <a href="#l00346">FeatureFromBlock.cpp:346</a></div></div>
<div class="ttc" id="aa00329_xhtml_a384605d1f9d59006342d548e7da1fd5c"><div class="ttname"><a href="a00329.xhtml#a384605d1f9d59006342d548e7da1fd5c">CFeatureSpectralFlux::CFeatureSpectralFlux</a></div><div class="ttdeci">CFeatureSpectralFlux(const CFeatureSpectralFlux &amp;that)</div><div class="ttdoc">disallow copy construction</div></div>
<div class="ttc" id="aa00329_xhtml_a3c5685b11c974c54df140122f7cbae9d"><div class="ttname"><a href="a00329.xhtml#a3c5685b11c974c54df140122f7cbae9d">CFeatureSpectralFlux::~CFeatureSpectralFlux</a></div><div class="ttdeci">virtual ~CFeatureSpectralFlux()</div><div class="ttdef"><b>Definition</b> <a href="#l00352">FeatureFromBlock.cpp:352</a></div></div>
<div class="ttc" id="aa00329_xhtml_a3d14a66015eeea822a51bc8011e7ffa6"><div class="ttname"><a href="a00329.xhtml#a3d14a66015eeea822a51bc8011e7ffa6">CFeatureSpectralFlux::CFeatureSpectralFlux</a></div><div class="ttdeci">CFeatureSpectralFlux()</div><div class="ttdef"><b>Definition</b> <a href="#l00367">FeatureFromBlock.cpp:367</a></div></div>
<div class="ttc" id="aa00329_xhtml_a7edd2e4909ab2b6bda983779fa3b7fed"><div class="ttname"><a href="a00329.xhtml#a7edd2e4909ab2b6bda983779fa3b7fed">CFeatureSpectralFlux::operator=</a></div><div class="ttdeci">CFeatureSpectralFlux &amp; operator=(const CFeatureSpectralFlux &amp;c)</div></div>
<div class="ttc" id="aa00333_xhtml"><div class="ttname"><a href="a00333.xhtml">CFeatureSpectralMfccs</a></div><div class="ttdoc">class for computation of the mfccs</div><div class="ttdef"><b>Definition</b> <a href="#l00376">FeatureFromBlock.cpp:377</a></div></div>
<div class="ttc" id="aa00333_xhtml_a2123af520406a1b09fcf2437043c3b92"><div class="ttname"><a href="a00333.xhtml#a2123af520406a1b09fcf2437043c3b92">CFeatureSpectralMfccs::genMfccFilters_</a></div><div class="ttdeci">void genMfccFilters_()</div><div class="ttdef"><b>Definition</b> <a href="#l00445">FeatureFromBlock.cpp:445</a></div></div>
<div class="ttc" id="aa00333_xhtml_a4aa17843a870798cf3d832dfb2eaaa03"><div class="ttname"><a href="a00333.xhtml#a4aa17843a870798cf3d832dfb2eaaa03">CFeatureSpectralMfccs::CFeatureSpectralMfccs</a></div><div class="ttdeci">CFeatureSpectralMfccs()</div><div class="ttdef"><b>Definition</b> <a href="#l00441">FeatureFromBlock.cpp:441</a></div></div>
<div class="ttc" id="aa00333_xhtml_a4fd7b7171c56ba1be8191ca660f6fbcc"><div class="ttname"><a href="a00333.xhtml#a4fd7b7171c56ba1be8191ca660f6fbcc">CFeatureSpectralMfccs::genDctMat_</a></div><div class="ttdeci">void genDctMat_(int iNumCoeffs)</div><div class="ttdef"><b>Definition</b> <a href="#l00492">FeatureFromBlock.cpp:492</a></div></div>
<div class="ttc" id="aa00333_xhtml_a4ffe272900bf3ba5bbab219262506455"><div class="ttname"><a href="a00333.xhtml#a4ffe272900bf3ba5bbab219262506455">CFeatureSpectralMfccs::CFeatureSpectralMfccs</a></div><div class="ttdeci">CFeatureSpectralMfccs(CFeatureIf::Feature_t eFeatureIdx, int iDataLength, float fSampleRate)</div><div class="ttdef"><b>Definition</b> <a href="#l00379">FeatureFromBlock.cpp:379</a></div></div>
<div class="ttc" id="aa00333_xhtml_a5db1108b35d1c58451ae1eb617cf8591"><div class="ttname"><a href="a00333.xhtml#a5db1108b35d1c58451ae1eb617cf8591">CFeatureSpectralMfccs::m_ppfDct</a></div><div class="ttdeci">float ** m_ppfDct</div><div class="ttdoc">dct matrix</div><div class="ttdef"><b>Definition</b> <a href="#l00523">FeatureFromBlock.cpp:523</a></div></div>
<div class="ttc" id="aa00333_xhtml_a6ffd2585db71bf5b44aedc15223525e6"><div class="ttname"><a href="a00333.xhtml#a6ffd2585db71bf5b44aedc15223525e6">CFeatureSpectralMfccs::setAdditionalParam</a></div><div class="ttdeci">Error_t setAdditionalParam(float fParamValue) override</div><div class="ttdef"><b>Definition</b> <a href="#l00431">FeatureFromBlock.cpp:431</a></div></div>
<div class="ttc" id="aa00333_xhtml_a889bd4dcf169493969f357136bc28781"><div class="ttname"><a href="a00333.xhtml#a889bd4dcf169493969f357136bc28781">CFeatureSpectralMfccs::CFeatureSpectralMfccs</a></div><div class="ttdeci">CFeatureSpectralMfccs(const CFeatureSpectralMfccs &amp;that)</div><div class="ttdoc">disallow copy construction</div></div>
<div class="ttc" id="aa00333_xhtml_a8a617855193547e88f305b0a20c91045"><div class="ttname"><a href="a00333.xhtml#a8a617855193547e88f305b0a20c91045">CFeatureSpectralMfccs::operator=</a></div><div class="ttdeci">CFeatureSpectralMfccs &amp; operator=(const CFeatureSpectralMfccs &amp;c)</div></div>
<div class="ttc" id="aa00333_xhtml_a8cf08736ea318aa731360a217eba5340"><div class="ttname"><a href="a00333.xhtml#a8cf08736ea318aa731360a217eba5340">CFeatureSpectralMfccs::getFeatureDimensions</a></div><div class="ttdeci">int getFeatureDimensions() const override</div><div class="ttdef"><b>Definition</b> <a href="#l00421">FeatureFromBlock.cpp:421</a></div></div>
<div class="ttc" id="aa00333_xhtml_a939a14f9a0c6b6a7ac974b2899b57e95"><div class="ttname"><a href="a00333.xhtml#a939a14f9a0c6b6a7ac974b2899b57e95">CFeatureSpectralMfccs::allocDctMat_</a></div><div class="ttdeci">void allocDctMat_(int iNumCoeffs)</div><div class="ttdef"><b>Definition</b> <a href="#l00507">FeatureFromBlock.cpp:507</a></div></div>
<div class="ttc" id="aa00333_xhtml_a9ad8bb5ff88bbbfe48231eab00e5e1d4"><div class="ttname"><a href="a00333.xhtml#a9ad8bb5ff88bbbfe48231eab00e5e1d4">CFeatureSpectralMfccs::deleteDctMat_</a></div><div class="ttdeci">void deleteDctMat_()</div><div class="ttdef"><b>Definition</b> <a href="#l00514">FeatureFromBlock.cpp:514</a></div></div>
<div class="ttc" id="aa00333_xhtml_ab3adc3df302d75ed8be5918eb18a52ab"><div class="ttname"><a href="a00333.xhtml#ab3adc3df302d75ed8be5918eb18a52ab">CFeatureSpectralMfccs::hasAdditionalParam</a></div><div class="ttdeci">bool hasAdditionalParam() const override</div><div class="ttdef"><b>Definition</b> <a href="#l00426">FeatureFromBlock.cpp:426</a></div></div>
<div class="ttc" id="aa00333_xhtml_ab929d28489bf815a6b685c0348410422"><div class="ttname"><a href="a00333.xhtml#ab929d28489bf815a6b685c0348410422">CFeatureSpectralMfccs::m_pfMelSpec</a></div><div class="ttdeci">float * m_pfMelSpec</div><div class="ttdoc">mel-transformed spectrum</div><div class="ttdef"><b>Definition</b> <a href="#l00525">FeatureFromBlock.cpp:525</a></div></div>
<div class="ttc" id="aa00333_xhtml_abc120e956529cb5d1f6bf881d151bf19"><div class="ttname"><a href="a00333.xhtml#abc120e956529cb5d1f6bf881d151bf19">CFeatureSpectralMfccs::~CFeatureSpectralMfccs</a></div><div class="ttdeci">virtual ~CFeatureSpectralMfccs()</div><div class="ttdef"><b>Definition</b> <a href="#l00393">FeatureFromBlock.cpp:393</a></div></div>
<div class="ttc" id="aa00333_xhtml_acc5746c538c81cbbbc91b4c4558f7dd5"><div class="ttname"><a href="a00333.xhtml#acc5746c538c81cbbbc91b4c4558f7dd5">CFeatureSpectralMfccs::m_iNumMfcCoeffs</a></div><div class="ttdeci">int m_iNumMfcCoeffs</div><div class="ttdoc">number of dct coefficients to extract</div><div class="ttdef"><b>Definition</b> <a href="#l00520">FeatureFromBlock.cpp:520</a></div></div>
<div class="ttc" id="aa00333_xhtml_ad58efcd5d0eebe8e956ff1e07a0edc17"><div class="ttname"><a href="a00333.xhtml#ad58efcd5d0eebe8e956ff1e07a0edc17">CFeatureSpectralMfccs::m_ppfH</a></div><div class="ttdeci">float ** m_ppfH</div><div class="ttdoc">filter bank matrix</div><div class="ttdef"><b>Definition</b> <a href="#l00522">FeatureFromBlock.cpp:522</a></div></div>
<div class="ttc" id="aa00333_xhtml_ad8bac3da17b240643991fc6bf5840f32"><div class="ttname"><a href="a00333.xhtml#ad8bac3da17b240643991fc6bf5840f32">CFeatureSpectralMfccs::m_iNumBands</a></div><div class="ttdeci">const int m_iNumBands</div><div class="ttdoc">number of mel bands</div><div class="ttdef"><b>Definition</b> <a href="#l00519">FeatureFromBlock.cpp:519</a></div></div>
<div class="ttc" id="aa00333_xhtml_aeccf9a57b512f1c7de90b4e260482f8a"><div class="ttname"><a href="a00333.xhtml#aeccf9a57b512f1c7de90b4e260482f8a">CFeatureSpectralMfccs::compFeature</a></div><div class="ttdeci">Error_t compFeature(float *pfFeature, const float *pfIn) override</div><div class="ttdef"><b>Definition</b> <a href="#l00402">FeatureFromBlock.cpp:402</a></div></div>
<div class="ttc" id="aa00337_xhtml"><div class="ttname"><a href="a00337.xhtml">CFeatureSpectralPitchChroma</a></div><div class="ttdoc">class for computation of the pitch chroma</div><div class="ttdef"><b>Definition</b> <a href="#l00530">FeatureFromBlock.cpp:531</a></div></div>
<div class="ttc" id="aa00337_xhtml_a143343cbcd9f206e5c22a9af056c5d66"><div class="ttname"><a href="a00337.xhtml#a143343cbcd9f206e5c22a9af056c5d66">CFeatureSpectralPitchChroma::m_iNumPitchClasses</a></div><div class="ttdeci">const int m_iNumPitchClasses</div><div class="ttdoc">number of pitch classes</div><div class="ttdef"><b>Definition</b> <a href="#l00632">FeatureFromBlock.cpp:632</a></div></div>
<div class="ttc" id="aa00337_xhtml_a2a538aa6aba4b54cc8968b0a757c3996"><div class="ttname"><a href="a00337.xhtml#a2a538aa6aba4b54cc8968b0a757c3996">CFeatureSpectralPitchChroma::~CFeatureSpectralPitchChroma</a></div><div class="ttdeci">virtual ~CFeatureSpectralPitchChroma()</div><div class="ttdef"><b>Definition</b> <a href="#l00541">FeatureFromBlock.cpp:541</a></div></div>
<div class="ttc" id="aa00337_xhtml_a388f9c7dd2074706d723e31b421f16fa"><div class="ttname"><a href="a00337.xhtml#a388f9c7dd2074706d723e31b421f16fa">CFeatureSpectralPitchChroma::CFeatureSpectralPitchChroma</a></div><div class="ttdeci">CFeatureSpectralPitchChroma(CFeatureIf::Feature_t eFeatureIdx, int iDataLength, float fSampleRate)</div><div class="ttdef"><b>Definition</b> <a href="#l00533">FeatureFromBlock.cpp:533</a></div></div>
<div class="ttc" id="aa00337_xhtml_a3da23c0c38b2876adb5e302419817592"><div class="ttname"><a href="a00337.xhtml#a3da23c0c38b2876adb5e302419817592">CFeatureSpectralPitchChroma::getFeatureDimensions</a></div><div class="ttdeci">int getFeatureDimensions() const override</div><div class="ttdef"><b>Definition</b> <a href="#l00569">FeatureFromBlock.cpp:569</a></div></div>
<div class="ttc" id="aa00337_xhtml_a65459d5a7887ad976fa88d8c3982b6a9"><div class="ttname"><a href="a00337.xhtml#a65459d5a7887ad976fa88d8c3982b6a9">CFeatureSpectralPitchChroma::CFeatureSpectralPitchChroma</a></div><div class="ttdeci">CFeatureSpectralPitchChroma(const CFeatureSpectralPitchChroma &amp;that)</div><div class="ttdoc">disallow copy construction</div></div>
<div class="ttc" id="aa00337_xhtml_a6b4b3032eb9b09d9f64811613448c994"><div class="ttname"><a href="a00337.xhtml#a6b4b3032eb9b09d9f64811613448c994">CFeatureSpectralPitchChroma::setAdditionalParam</a></div><div class="ttdeci">Error_t setAdditionalParam(float fParamValue) override</div><div class="ttdef"><b>Definition</b> <a href="#l00579">FeatureFromBlock.cpp:579</a></div></div>
<div class="ttc" id="aa00337_xhtml_a775238351566f33d88f8b5a4b01792c2"><div class="ttname"><a href="a00337.xhtml#a775238351566f33d88f8b5a4b01792c2">CFeatureSpectralPitchChroma::m_iNumOctaves</a></div><div class="ttdeci">int m_iNumOctaves</div><div class="ttdoc">number of octaves to aggregate</div><div class="ttdef"><b>Definition</b> <a href="#l00635">FeatureFromBlock.cpp:635</a></div></div>
<div class="ttc" id="aa00337_xhtml_a88b4352ab8251a177a5351c638ad5b3c"><div class="ttname"><a href="a00337.xhtml#a88b4352ab8251a177a5351c638ad5b3c">CFeatureSpectralPitchChroma::genPcFilters_</a></div><div class="ttdeci">void genPcFilters_()</div><div class="ttdef"><b>Definition</b> <a href="#l00596">FeatureFromBlock.cpp:596</a></div></div>
<div class="ttc" id="aa00337_xhtml_a8fbd2f0b1785563f6aceb78c067718c0"><div class="ttname"><a href="a00337.xhtml#a8fbd2f0b1785563f6aceb78c067718c0">CFeatureSpectralPitchChroma::m_ppfH</a></div><div class="ttdeci">float ** m_ppfH</div><div class="ttdoc">pitch filter bank matrix</div><div class="ttdef"><b>Definition</b> <a href="#l00637">FeatureFromBlock.cpp:637</a></div></div>
<div class="ttc" id="aa00337_xhtml_ac659cc10bad8a91121cd14533270497f"><div class="ttname"><a href="a00337.xhtml#ac659cc10bad8a91121cd14533270497f">CFeatureSpectralPitchChroma::compFeature</a></div><div class="ttdeci">Error_t compFeature(float *pfFeature, const float *pfIn) override</div><div class="ttdef"><b>Definition</b> <a href="#l00546">FeatureFromBlock.cpp:546</a></div></div>
<div class="ttc" id="aa00337_xhtml_acc84644f16e3d4518062e2843ab896e5"><div class="ttname"><a href="a00337.xhtml#acc84644f16e3d4518062e2843ab896e5">CFeatureSpectralPitchChroma::hasAdditionalParam</a></div><div class="ttdeci">bool hasAdditionalParam() const override</div><div class="ttdef"><b>Definition</b> <a href="#l00574">FeatureFromBlock.cpp:574</a></div></div>
<div class="ttc" id="aa00337_xhtml_adf053872d501f88bda80d2d789a2d9e2"><div class="ttname"><a href="a00337.xhtml#adf053872d501f88bda80d2d789a2d9e2">CFeatureSpectralPitchChroma::CFeatureSpectralPitchChroma</a></div><div class="ttdeci">CFeatureSpectralPitchChroma()</div><div class="ttdef"><b>Definition</b> <a href="#l00592">FeatureFromBlock.cpp:592</a></div></div>
<div class="ttc" id="aa00337_xhtml_ae1d53b43f413bc5c0f8800ca89d9e145"><div class="ttname"><a href="a00337.xhtml#ae1d53b43f413bc5c0f8800ca89d9e145">CFeatureSpectralPitchChroma::operator=</a></div><div class="ttdeci">CFeatureSpectralPitchChroma &amp; operator=(const CFeatureSpectralPitchChroma &amp;c)</div></div>
<div class="ttc" id="aa00337_xhtml_afed3f9bf0d871cd19bcb9a936b9343d8"><div class="ttname"><a href="a00337.xhtml#afed3f9bf0d871cd19bcb9a936b9343d8">CFeatureSpectralPitchChroma::m_fA4</a></div><div class="ttdeci">const float m_fA4</div><div class="ttdoc">frequency of concert pitch</div><div class="ttdef"><b>Definition</b> <a href="#l00634">FeatureFromBlock.cpp:634</a></div></div>
<div class="ttc" id="aa00341_xhtml"><div class="ttname"><a href="a00341.xhtml">CFeatureSpectralRolloff</a></div><div class="ttdoc">class for computation of the spectral rolloff</div><div class="ttdef"><b>Definition</b> <a href="#l00642">FeatureFromBlock.cpp:643</a></div></div>
<div class="ttc" id="aa00341_xhtml_a02a9041087ff93f1a406103f34772a9c"><div class="ttname"><a href="a00341.xhtml#a02a9041087ff93f1a406103f34772a9c">CFeatureSpectralRolloff::m_fKappa</a></div><div class="ttdeci">float m_fKappa</div><div class="ttdoc">bandwidth parameter</div><div class="ttdef"><b>Definition</b> <a href="#l00674">FeatureFromBlock.cpp:674</a></div></div>
<div class="ttc" id="aa00341_xhtml_a306b5b080d6754bd3363d140a8569ac4"><div class="ttname"><a href="a00341.xhtml#a306b5b080d6754bd3363d140a8569ac4">CFeatureSpectralRolloff::~CFeatureSpectralRolloff</a></div><div class="ttdeci">virtual ~CFeatureSpectralRolloff()</div><div class="ttdef"><b>Definition</b> <a href="#l00647">FeatureFromBlock.cpp:647</a></div></div>
<div class="ttc" id="aa00341_xhtml_a359548bbc22d19f80107d6a5be02ff3f"><div class="ttname"><a href="a00341.xhtml#a359548bbc22d19f80107d6a5be02ff3f">CFeatureSpectralRolloff::CFeatureSpectralRolloff</a></div><div class="ttdeci">CFeatureSpectralRolloff(CFeatureIf::Feature_t eFeatureIdx, int iDataLength, float fSampleRate)</div><div class="ttdef"><b>Definition</b> <a href="#l00645">FeatureFromBlock.cpp:645</a></div></div>
<div class="ttc" id="aa00341_xhtml_a45483b9e6364cf0b5a40109bae814c9a"><div class="ttname"><a href="a00341.xhtml#a45483b9e6364cf0b5a40109bae814c9a">CFeatureSpectralRolloff::CFeatureSpectralRolloff</a></div><div class="ttdeci">CFeatureSpectralRolloff()</div><div class="ttdef"><b>Definition</b> <a href="#l00672">FeatureFromBlock.cpp:672</a></div></div>
<div class="ttc" id="aa00341_xhtml_aace9db3eee49887a8fae69c07475fe19"><div class="ttname"><a href="a00341.xhtml#aace9db3eee49887a8fae69c07475fe19">CFeatureSpectralRolloff::hasAdditionalParam</a></div><div class="ttdeci">bool hasAdditionalParam() const override</div><div class="ttdef"><b>Definition</b> <a href="#l00656">FeatureFromBlock.cpp:656</a></div></div>
<div class="ttc" id="aa00341_xhtml_ac52fdefa069114d576a8105182084648"><div class="ttname"><a href="a00341.xhtml#ac52fdefa069114d576a8105182084648">CFeatureSpectralRolloff::compFeature</a></div><div class="ttdeci">Error_t compFeature(float *pfFeature, const float *pfIn) override</div><div class="ttdef"><b>Definition</b> <a href="#l00649">FeatureFromBlock.cpp:649</a></div></div>
<div class="ttc" id="aa00341_xhtml_ae0c52ddeb125740c60dd33c003e6b257"><div class="ttname"><a href="a00341.xhtml#ae0c52ddeb125740c60dd33c003e6b257">CFeatureSpectralRolloff::setAdditionalParam</a></div><div class="ttdeci">Error_t setAdditionalParam(float fParamValue) override</div><div class="ttdef"><b>Definition</b> <a href="#l00661">FeatureFromBlock.cpp:661</a></div></div>
<div class="ttc" id="aa00345_xhtml"><div class="ttname"><a href="a00345.xhtml">CFeatureSpectralTonalPowerRatio</a></div><div class="ttdoc">class for computation of the tonal power ratio</div><div class="ttdef"><b>Definition</b> <a href="#l00679">FeatureFromBlock.cpp:680</a></div></div>
<div class="ttc" id="aa00345_xhtml_a0f92352db0347a6295d817ddc2a5d5db"><div class="ttname"><a href="a00345.xhtml#a0f92352db0347a6295d817ddc2a5d5db">CFeatureSpectralTonalPowerRatio::setAdditionalParam</a></div><div class="ttdeci">Error_t setAdditionalParam(float fParamValue) override</div><div class="ttdef"><b>Definition</b> <a href="#l00698">FeatureFromBlock.cpp:698</a></div></div>
<div class="ttc" id="aa00345_xhtml_a2f591e8bf6d09ec04fef149e581e769e"><div class="ttname"><a href="a00345.xhtml#a2f591e8bf6d09ec04fef149e581e769e">CFeatureSpectralTonalPowerRatio::~CFeatureSpectralTonalPowerRatio</a></div><div class="ttdeci">virtual ~CFeatureSpectralTonalPowerRatio()</div><div class="ttdef"><b>Definition</b> <a href="#l00684">FeatureFromBlock.cpp:684</a></div></div>
<div class="ttc" id="aa00345_xhtml_a43b303cd9ae3ec40f0f8a552fa7be4fe"><div class="ttname"><a href="a00345.xhtml#a43b303cd9ae3ec40f0f8a552fa7be4fe">CFeatureSpectralTonalPowerRatio::compFeature</a></div><div class="ttdeci">Error_t compFeature(float *pfFeature, const float *pfIn) override</div><div class="ttdef"><b>Definition</b> <a href="#l00686">FeatureFromBlock.cpp:686</a></div></div>
<div class="ttc" id="aa00345_xhtml_a7764422109054089962bc42187381be3"><div class="ttname"><a href="a00345.xhtml#a7764422109054089962bc42187381be3">CFeatureSpectralTonalPowerRatio::CFeatureSpectralTonalPowerRatio</a></div><div class="ttdeci">CFeatureSpectralTonalPowerRatio(CFeatureIf::Feature_t eFeatureIdx, int iDataLength, float fSampleRate)</div><div class="ttdef"><b>Definition</b> <a href="#l00682">FeatureFromBlock.cpp:682</a></div></div>
<div class="ttc" id="aa00345_xhtml_aa12751fa8cb1b3a8b48452cc2b2421f4"><div class="ttname"><a href="a00345.xhtml#aa12751fa8cb1b3a8b48452cc2b2421f4">CFeatureSpectralTonalPowerRatio::m_fThresh</a></div><div class="ttdeci">float m_fThresh</div><div class="ttdef"><b>Definition</b> <a href="#l00711">FeatureFromBlock.cpp:711</a></div></div>
<div class="ttc" id="aa00345_xhtml_aaf8ec498a5d6e6a8d27db98ae4808448"><div class="ttname"><a href="a00345.xhtml#aaf8ec498a5d6e6a8d27db98ae4808448">CFeatureSpectralTonalPowerRatio::CFeatureSpectralTonalPowerRatio</a></div><div class="ttdeci">CFeatureSpectralTonalPowerRatio()</div><div class="ttdef"><b>Definition</b> <a href="#l00709">FeatureFromBlock.cpp:709</a></div></div>
<div class="ttc" id="aa00345_xhtml_abbf784ac24f69555002f2bae7fec93bf"><div class="ttname"><a href="a00345.xhtml#abbf784ac24f69555002f2bae7fec93bf">CFeatureSpectralTonalPowerRatio::hasAdditionalParam</a></div><div class="ttdeci">bool hasAdditionalParam() const override</div><div class="ttdef"><b>Definition</b> <a href="#l00693">FeatureFromBlock.cpp:693</a></div></div>
<div class="ttc" id="aa00349_xhtml"><div class="ttname"><a href="a00349.xhtml">CFeatureTimeAcfCoeff</a></div><div class="ttdoc">class for computation of an acf coefficient</div><div class="ttdef"><b>Definition</b> <a href="#l00716">FeatureFromBlock.cpp:717</a></div></div>
<div class="ttc" id="aa00349_xhtml_a033ad4a66e7e62644a250a872651f9db"><div class="ttname"><a href="a00349.xhtml#a033ad4a66e7e62644a250a872651f9db">CFeatureTimeAcfCoeff::CFeatureTimeAcfCoeff</a></div><div class="ttdeci">CFeatureTimeAcfCoeff()</div><div class="ttdef"><b>Definition</b> <a href="#l00746">FeatureFromBlock.cpp:746</a></div></div>
<div class="ttc" id="aa00349_xhtml_a333eda68b61727626bc1b9c24bfff337"><div class="ttname"><a href="a00349.xhtml#a333eda68b61727626bc1b9c24bfff337">CFeatureTimeAcfCoeff::~CFeatureTimeAcfCoeff</a></div><div class="ttdeci">virtual ~CFeatureTimeAcfCoeff()</div><div class="ttdef"><b>Definition</b> <a href="#l00721">FeatureFromBlock.cpp:721</a></div></div>
<div class="ttc" id="aa00349_xhtml_a4d9f483ca05473ce8e9f1cc608dd03af"><div class="ttname"><a href="a00349.xhtml#a4d9f483ca05473ce8e9f1cc608dd03af">CFeatureTimeAcfCoeff::CFeatureTimeAcfCoeff</a></div><div class="ttdeci">CFeatureTimeAcfCoeff(CFeatureIf::Feature_t eFeatureIdx, int iDataLength, float fSampleRate)</div><div class="ttdef"><b>Definition</b> <a href="#l00719">FeatureFromBlock.cpp:719</a></div></div>
<div class="ttc" id="aa00349_xhtml_a6c123f32dc4ddf5b63ff41d03ea574a2"><div class="ttname"><a href="a00349.xhtml#a6c123f32dc4ddf5b63ff41d03ea574a2">CFeatureTimeAcfCoeff::setAdditionalParam</a></div><div class="ttdeci">Error_t setAdditionalParam(float fParamValue) override</div><div class="ttdef"><b>Definition</b> <a href="#l00735">FeatureFromBlock.cpp:735</a></div></div>
<div class="ttc" id="aa00349_xhtml_a799b62c99e4e4ab09aae77e73f85a1af"><div class="ttname"><a href="a00349.xhtml#a799b62c99e4e4ab09aae77e73f85a1af">CFeatureTimeAcfCoeff::hasAdditionalParam</a></div><div class="ttdeci">bool hasAdditionalParam() const override</div><div class="ttdef"><b>Definition</b> <a href="#l00730">FeatureFromBlock.cpp:730</a></div></div>
<div class="ttc" id="aa00349_xhtml_ab062957c171d0fa090ec2cf567907477"><div class="ttname"><a href="a00349.xhtml#ab062957c171d0fa090ec2cf567907477">CFeatureTimeAcfCoeff::m_iEta</a></div><div class="ttdeci">int m_iEta</div><div class="ttdoc">int this example implementation, we chose the 19th coefficient</div><div class="ttdef"><b>Definition</b> <a href="#l00748">FeatureFromBlock.cpp:748</a></div></div>
<div class="ttc" id="aa00349_xhtml_af3ad1fd2ce06c1a9fe976c9b962eccfe"><div class="ttname"><a href="a00349.xhtml#af3ad1fd2ce06c1a9fe976c9b962eccfe">CFeatureTimeAcfCoeff::compFeature</a></div><div class="ttdeci">Error_t compFeature(float *pfFeature, const float *pfIn) override</div><div class="ttdef"><b>Definition</b> <a href="#l00723">FeatureFromBlock.cpp:723</a></div></div>
<div class="ttc" id="aa00353_xhtml"><div class="ttname"><a href="a00353.xhtml">CFeatureTimeMaxAcf</a></div><div class="ttdoc">class for computation of the maximum of the acf</div><div class="ttdef"><b>Definition</b> <a href="#l00753">FeatureFromBlock.cpp:754</a></div></div>
<div class="ttc" id="aa00353_xhtml_a03964245e9d7da47e512283728da4cd4"><div class="ttname"><a href="a00353.xhtml#a03964245e9d7da47e512283728da4cd4">CFeatureTimeMaxAcf::hasAdditionalParam</a></div><div class="ttdeci">bool hasAdditionalParam() const override</div><div class="ttdef"><b>Definition</b> <a href="#l00809">FeatureFromBlock.cpp:809</a></div></div>
<div class="ttc" id="aa00353_xhtml_a48c4e7762ac0c1bbbb91a50ccc2a4ffc"><div class="ttname"><a href="a00353.xhtml#a48c4e7762ac0c1bbbb91a50ccc2a4ffc">CFeatureTimeMaxAcf::~CFeatureTimeMaxAcf</a></div><div class="ttdeci">virtual ~CFeatureTimeMaxAcf()</div><div class="ttdef"><b>Definition</b> <a href="#l00764">FeatureFromBlock.cpp:764</a></div></div>
<div class="ttc" id="aa00353_xhtml_a541f40820696e37cc302fc780b8313ee"><div class="ttname"><a href="a00353.xhtml#a541f40820696e37cc302fc780b8313ee">CFeatureTimeMaxAcf::CFeatureTimeMaxAcf</a></div><div class="ttdeci">CFeatureTimeMaxAcf(CFeatureIf::Feature_t eFeatureIdx, int iDataLength, float fSampleRate)</div><div class="ttdef"><b>Definition</b> <a href="#l00756">FeatureFromBlock.cpp:756</a></div></div>
<div class="ttc" id="aa00353_xhtml_a8c9233f1ab2a403e78a7e03feefc2161"><div class="ttname"><a href="a00353.xhtml#a8c9233f1ab2a403e78a7e03feefc2161">CFeatureTimeMaxAcf::CFeatureTimeMaxAcf</a></div><div class="ttdeci">CFeatureTimeMaxAcf()</div><div class="ttdef"><b>Definition</b> <a href="#l00825">FeatureFromBlock.cpp:825</a></div></div>
<div class="ttc" id="aa00353_xhtml_a9edc446602d49a15cf4c978289e2094a"><div class="ttname"><a href="a00353.xhtml#a9edc446602d49a15cf4c978289e2094a">CFeatureTimeMaxAcf::compFeature</a></div><div class="ttdeci">Error_t compFeature(float *pfFeature, const float *pfIn) override</div><div class="ttdef"><b>Definition</b> <a href="#l00772">FeatureFromBlock.cpp:772</a></div></div>
<div class="ttc" id="aa00353_xhtml_a9fb60b727600dc5d28d874349adb5dc0"><div class="ttname"><a href="a00353.xhtml#a9fb60b727600dc5d28d874349adb5dc0">CFeatureTimeMaxAcf::m_pCCcf</a></div><div class="ttdeci">CCcf * m_pCCcf</div><div class="ttdoc">correlation instance</div><div class="ttdef"><b>Definition</b> <a href="#l00829">FeatureFromBlock.cpp:829</a></div></div>
<div class="ttc" id="aa00353_xhtml_ac15ec6a2d0fdf91df801d6befd4117db"><div class="ttname"><a href="a00353.xhtml#ac15ec6a2d0fdf91df801d6befd4117db">CFeatureTimeMaxAcf::m_pfAcf</a></div><div class="ttdeci">float * m_pfAcf</div><div class="ttdoc">acf result</div><div class="ttdef"><b>Definition</b> <a href="#l00830">FeatureFromBlock.cpp:830</a></div></div>
<div class="ttc" id="aa00353_xhtml_ad08d755145fa0227b7e489000703ee30"><div class="ttname"><a href="a00353.xhtml#ad08d755145fa0227b7e489000703ee30">CFeatureTimeMaxAcf::setAdditionalParam</a></div><div class="ttdeci">Error_t setAdditionalParam(float fParamValue) override</div><div class="ttdef"><b>Definition</b> <a href="#l00814">FeatureFromBlock.cpp:814</a></div></div>
<div class="ttc" id="aa00353_xhtml_adbb3dc0caf773c6fb706bbff9d0b7126"><div class="ttname"><a href="a00353.xhtml#adbb3dc0caf773c6fb706bbff9d0b7126">CFeatureTimeMaxAcf::operator=</a></div><div class="ttdeci">CFeatureTimeMaxAcf &amp; operator=(const CFeatureTimeMaxAcf &amp;c)</div></div>
<div class="ttc" id="aa00353_xhtml_ae651e7f716957560053ef017f839346b"><div class="ttname"><a href="a00353.xhtml#ae651e7f716957560053ef017f839346b">CFeatureTimeMaxAcf::CFeatureTimeMaxAcf</a></div><div class="ttdeci">CFeatureTimeMaxAcf(const CFeatureTimeMaxAcf &amp;that)</div><div class="ttdoc">disallow copy construction</div></div>
<div class="ttc" id="aa00353_xhtml_aeb05f443644d9e5db8bfd9a18af380a8"><div class="ttname"><a href="a00353.xhtml#aeb05f443644d9e5db8bfd9a18af380a8">CFeatureTimeMaxAcf::m_fMax</a></div><div class="ttdeci">float m_fMax</div><div class="ttdoc">upper frequency boundary</div><div class="ttdef"><b>Definition</b> <a href="#l00832">FeatureFromBlock.cpp:832</a></div></div>
<div class="ttc" id="aa00357_xhtml"><div class="ttname"><a href="a00357.xhtml">CFeatureTimePeakEnvelope</a></div><div class="ttdoc">class for computation of the peak envelope</div><div class="ttdef"><b>Definition</b> <a href="#l00837">FeatureFromBlock.cpp:838</a></div></div>
<div class="ttc" id="aa00357_xhtml_a03dcdc58bb508eedc93c0261cfaa1843"><div class="ttname"><a href="a00357.xhtml#a03dcdc58bb508eedc93c0261cfaa1843">CFeatureTimePeakEnvelope::m_fFilterBuff</a></div><div class="ttdeci">float m_fFilterBuff</div><div class="ttdoc">internal filter memory</div><div class="ttdef"><b>Definition</b> <a href="#l00908">FeatureFromBlock.cpp:908</a></div></div>
<div class="ttc" id="aa00357_xhtml_a176af3836a0fb75c200c02ed66485852"><div class="ttname"><a href="a00357.xhtml#a176af3836a0fb75c200c02ed66485852">CFeatureTimePeakEnvelope::m_afIntegrationTimeInS</a></div><div class="ttdeci">const float m_afIntegrationTimeInS[kNumPpmFilters]</div><div class="ttdoc">integration times for filter initialization</div><div class="ttdef"><b>Definition</b> <a href="#l00906">FeatureFromBlock.cpp:906</a></div></div>
<div class="ttc" id="aa00357_xhtml_a1a8760a574baf47c90caf0ea1d3e5053"><div class="ttname"><a href="a00357.xhtml#a1a8760a574baf47c90caf0ea1d3e5053">CFeatureTimePeakEnvelope::ppm_I</a></div><div class="ttdeci">float ppm_I(float fIn)</div><div class="ttdef"><b>Definition</b> <a href="#l00889">FeatureFromBlock.cpp:889</a></div></div>
<div class="ttc" id="aa00357_xhtml_a55891d1e487afbe095399d19ab078469"><div class="ttname"><a href="a00357.xhtml#a55891d1e487afbe095399d19ab078469">CFeatureTimePeakEnvelope::getFeatureDimensions</a></div><div class="ttdeci">int getFeatureDimensions() const override</div><div class="ttdef"><b>Definition</b> <a href="#l00865">FeatureFromBlock.cpp:865</a></div></div>
<div class="ttc" id="aa00357_xhtml_a7edc97c9ab3cfb28e51b7f041b93c503"><div class="ttname"><a href="a00357.xhtml#a7edc97c9ab3cfb28e51b7f041b93c503">CFeatureTimePeakEnvelope::PeakType_t</a></div><div class="ttdeci">PeakType_t</div><div class="ttdef"><b>Definition</b> <a href="#l00873">FeatureFromBlock.cpp:874</a></div></div>
<div class="ttc" id="aa00357_xhtml_a7edc97c9ab3cfb28e51b7f041b93c503a6bd88cda995b797a44ad0d9f8da29f13"><div class="ttname"><a href="a00357.xhtml#a7edc97c9ab3cfb28e51b7f041b93c503a6bd88cda995b797a44ad0d9f8da29f13">CFeatureTimePeakEnvelope::kPpmMax</a></div><div class="ttdeci">@ kPpmMax</div><div class="ttdef"><b>Definition</b> <a href="#l00876">FeatureFromBlock.cpp:876</a></div></div>
<div class="ttc" id="aa00357_xhtml_a7edc97c9ab3cfb28e51b7f041b93c503aa4b1dc46f0fce8ded1e48cbf6c3bd3b0"><div class="ttname"><a href="a00357.xhtml#a7edc97c9ab3cfb28e51b7f041b93c503aa4b1dc46f0fce8ded1e48cbf6c3bd3b0">CFeatureTimePeakEnvelope::kBlockMax</a></div><div class="ttdeci">@ kBlockMax</div><div class="ttdef"><b>Definition</b> <a href="#l00875">FeatureFromBlock.cpp:875</a></div></div>
<div class="ttc" id="aa00357_xhtml_a7edc97c9ab3cfb28e51b7f041b93c503ab044c98fa4caca6d1300b5adb1365c70"><div class="ttname"><a href="a00357.xhtml#a7edc97c9ab3cfb28e51b7f041b93c503ab044c98fa4caca6d1300b5adb1365c70">CFeatureTimePeakEnvelope::kNumPeakTypes</a></div><div class="ttdeci">@ kNumPeakTypes</div><div class="ttdef"><b>Definition</b> <a href="#l00878">FeatureFromBlock.cpp:878</a></div></div>
<div class="ttc" id="aa00357_xhtml_a804fcf1a03e0bb857bdbec4454803b96"><div class="ttname"><a href="a00357.xhtml#a804fcf1a03e0bb857bdbec4454803b96">CFeatureTimePeakEnvelope::compFeature</a></div><div class="ttdeci">Error_t compFeature(float *pfFeature, const float *pfIn) override</div><div class="ttdef"><b>Definition</b> <a href="#l00848">FeatureFromBlock.cpp:848</a></div></div>
<div class="ttc" id="aa00357_xhtml_ab29ce4890eab1620a0e9ad62acf3fe2e"><div class="ttname"><a href="a00357.xhtml#ab29ce4890eab1620a0e9ad62acf3fe2e">CFeatureTimePeakEnvelope::CFeatureTimePeakEnvelope</a></div><div class="ttdeci">CFeatureTimePeakEnvelope()</div><div class="ttdef"><b>Definition</b> <a href="#l00871">FeatureFromBlock.cpp:871</a></div></div>
<div class="ttc" id="aa00357_xhtml_acd92b000d83f9ec3613b59a995c6d296"><div class="ttname"><a href="a00357.xhtml#acd92b000d83f9ec3613b59a995c6d296">CFeatureTimePeakEnvelope::PpmFilters_t</a></div><div class="ttdeci">PpmFilters_t</div><div class="ttdef"><b>Definition</b> <a href="#l00881">FeatureFromBlock.cpp:882</a></div></div>
<div class="ttc" id="aa00357_xhtml_acd92b000d83f9ec3613b59a995c6d296a244967a35270c25af7fbf24a22b4b986"><div class="ttname"><a href="a00357.xhtml#acd92b000d83f9ec3613b59a995c6d296a244967a35270c25af7fbf24a22b4b986">CFeatureTimePeakEnvelope::kNumPpmFilters</a></div><div class="ttdeci">@ kNumPpmFilters</div><div class="ttdef"><b>Definition</b> <a href="#l00886">FeatureFromBlock.cpp:886</a></div></div>
<div class="ttc" id="aa00357_xhtml_acd92b000d83f9ec3613b59a995c6d296ab728d46d8acd39d42832d6982013dba5"><div class="ttname"><a href="a00357.xhtml#acd92b000d83f9ec3613b59a995c6d296ab728d46d8acd39d42832d6982013dba5">CFeatureTimePeakEnvelope::kAttack</a></div><div class="ttdeci">@ kAttack</div><div class="ttdef"><b>Definition</b> <a href="#l00883">FeatureFromBlock.cpp:883</a></div></div>
<div class="ttc" id="aa00357_xhtml_acd92b000d83f9ec3613b59a995c6d296afcf3cedb9d4d092a341bd5b2ed1ffab5"><div class="ttname"><a href="a00357.xhtml#acd92b000d83f9ec3613b59a995c6d296afcf3cedb9d4d092a341bd5b2ed1ffab5">CFeatureTimePeakEnvelope::kRelease</a></div><div class="ttdeci">@ kRelease</div><div class="ttdef"><b>Definition</b> <a href="#l00884">FeatureFromBlock.cpp:884</a></div></div>
<div class="ttc" id="aa00357_xhtml_af2b23785ea04505ff4a889d8313c2169"><div class="ttname"><a href="a00357.xhtml#af2b23785ea04505ff4a889d8313c2169">CFeatureTimePeakEnvelope::~CFeatureTimePeakEnvelope</a></div><div class="ttdeci">virtual ~CFeatureTimePeakEnvelope()</div><div class="ttdef"><b>Definition</b> <a href="#l00846">FeatureFromBlock.cpp:846</a></div></div>
<div class="ttc" id="aa00357_xhtml_af43ac71fb7b58e2ae9897e33bae488f3"><div class="ttname"><a href="a00357.xhtml#af43ac71fb7b58e2ae9897e33bae488f3">CFeatureTimePeakEnvelope::CFeatureTimePeakEnvelope</a></div><div class="ttdeci">CFeatureTimePeakEnvelope(CFeatureIf::Feature_t eFeatureIdx, int iDataLength, float fSampleRate)</div><div class="ttdef"><b>Definition</b> <a href="#l00840">FeatureFromBlock.cpp:840</a></div></div>
<div class="ttc" id="aa00357_xhtml_af43fa882d3241bd471c366ad4494ae84"><div class="ttname"><a href="a00357.xhtml#af43fa882d3241bd471c366ad4494ae84">CFeatureTimePeakEnvelope::m_afAlpha</a></div><div class="ttdeci">float m_afAlpha[kNumPpmFilters]</div><div class="ttdoc">filter coefficients</div><div class="ttdef"><b>Definition</b> <a href="#l00907">FeatureFromBlock.cpp:907</a></div></div>
<div class="ttc" id="aa00361_xhtml"><div class="ttname"><a href="a00361.xhtml">CFeatureTimeRms</a></div><div class="ttdoc">class for computation of the rms</div><div class="ttdef"><b>Definition</b> <a href="#l00913">FeatureFromBlock.cpp:914</a></div></div>
<div class="ttc" id="aa00361_xhtml_a0ac27ca50b3a6e88b08536fdcdd2b466"><div class="ttname"><a href="a00361.xhtml#a0ac27ca50b3a6e88b08536fdcdd2b466">CFeatureTimeRms::hasAdditionalParam</a></div><div class="ttdeci">bool hasAdditionalParam() const override</div><div class="ttdef"><b>Definition</b> <a href="#l00953">FeatureFromBlock.cpp:953</a></div></div>
<div class="ttc" id="aa00361_xhtml_a32543ce16ae631547984c2927d64d9ac"><div class="ttname"><a href="a00361.xhtml#a32543ce16ae631547984c2927d64d9ac">CFeatureTimeRms::CFeatureTimeRms</a></div><div class="ttdeci">CFeatureTimeRms()</div><div class="ttdef"><b>Definition</b> <a href="#l00976">FeatureFromBlock.cpp:976</a></div></div>
<div class="ttc" id="aa00361_xhtml_a6109ba1cfd030906ae6339ff43ccb676"><div class="ttname"><a href="a00361.xhtml#a6109ba1cfd030906ae6339ff43ccb676">CFeatureTimeRms::m_pCSinglePole</a></div><div class="ttdeci">CSinglePoleLp * m_pCSinglePole</div><div class="ttdoc">instance of low pass filter</div><div class="ttdef"><b>Definition</b> <a href="#l00979">FeatureFromBlock.cpp:979</a></div></div>
<div class="ttc" id="aa00361_xhtml_a69b3e227ffcbca082fbe0aac97a8e267"><div class="ttname"><a href="a00361.xhtml#a69b3e227ffcbca082fbe0aac97a8e267">CFeatureTimeRms::getFeatureDimensions</a></div><div class="ttdeci">int getFeatureDimensions() const override</div><div class="ttdef"><b>Definition</b> <a href="#l00948">FeatureFromBlock.cpp:948</a></div></div>
<div class="ttc" id="aa00361_xhtml_a7807a1c5f7cf3b671f91c2c219dc0710"><div class="ttname"><a href="a00361.xhtml#a7807a1c5f7cf3b671f91c2c219dc0710">CFeatureTimeRms::RmsType_t</a></div><div class="ttdeci">RmsType_t</div><div class="ttdef"><b>Definition</b> <a href="#l00969">FeatureFromBlock.cpp:970</a></div></div>
<div class="ttc" id="aa00361_xhtml_a7807a1c5f7cf3b671f91c2c219dc0710a5199de0b5750680928c9a0315be4c4b0"><div class="ttname"><a href="a00361.xhtml#a7807a1c5f7cf3b671f91c2c219dc0710a5199de0b5750680928c9a0315be4c4b0">CFeatureTimeRms::kLowpass</a></div><div class="ttdeci">@ kLowpass</div><div class="ttdef"><b>Definition</b> <a href="#l00972">FeatureFromBlock.cpp:972</a></div></div>
<div class="ttc" id="aa00361_xhtml_a7807a1c5f7cf3b671f91c2c219dc0710aa5e73589fa65c485c38b59d19906004d"><div class="ttname"><a href="a00361.xhtml#a7807a1c5f7cf3b671f91c2c219dc0710aa5e73589fa65c485c38b59d19906004d">CFeatureTimeRms::kNumRmsTypes</a></div><div class="ttdeci">@ kNumRmsTypes</div><div class="ttdef"><b>Definition</b> <a href="#l00974">FeatureFromBlock.cpp:974</a></div></div>
<div class="ttc" id="aa00361_xhtml_a7807a1c5f7cf3b671f91c2c219dc0710ac1487bbff575acc504653aa6d692eb03"><div class="ttname"><a href="a00361.xhtml#a7807a1c5f7cf3b671f91c2c219dc0710ac1487bbff575acc504653aa6d692eb03">CFeatureTimeRms::kBlockRms</a></div><div class="ttdeci">@ kBlockRms</div><div class="ttdef"><b>Definition</b> <a href="#l00971">FeatureFromBlock.cpp:971</a></div></div>
<div class="ttc" id="aa00361_xhtml_a84b694f264292580080e3604e30b3409"><div class="ttname"><a href="a00361.xhtml#a84b694f264292580080e3604e30b3409">CFeatureTimeRms::CFeatureTimeRms</a></div><div class="ttdeci">CFeatureTimeRms(CFeatureIf::Feature_t eFeatureIdx, int iDataLength, float fSampleRate)</div><div class="ttdef"><b>Definition</b> <a href="#l00916">FeatureFromBlock.cpp:916</a></div></div>
<div class="ttc" id="aa00361_xhtml_aaa2ceab5029b9d648e492ddc0b6ffb4f"><div class="ttname"><a href="a00361.xhtml#aaa2ceab5029b9d648e492ddc0b6ffb4f">CFeatureTimeRms::~CFeatureTimeRms</a></div><div class="ttdeci">virtual ~CFeatureTimeRms()</div><div class="ttdef"><b>Definition</b> <a href="#l00922">FeatureFromBlock.cpp:922</a></div></div>
<div class="ttc" id="aa00361_xhtml_ab68abfdfc2f9477c81b9d43015ab9ebe"><div class="ttname"><a href="a00361.xhtml#ab68abfdfc2f9477c81b9d43015ab9ebe">CFeatureTimeRms::compFeature</a></div><div class="ttdeci">Error_t compFeature(float *pfFeature, const float *pfIn) override</div><div class="ttdef"><b>Definition</b> <a href="#l00927">FeatureFromBlock.cpp:927</a></div></div>
<div class="ttc" id="aa00361_xhtml_acb267f4c5c9b8a53384fc44b602eaa24"><div class="ttname"><a href="a00361.xhtml#acb267f4c5c9b8a53384fc44b602eaa24">CFeatureTimeRms::CFeatureTimeRms</a></div><div class="ttdeci">CFeatureTimeRms(const CFeatureTimeRms &amp;that)</div><div class="ttdoc">disallow copy construction</div></div>
<div class="ttc" id="aa00361_xhtml_ae069b181a2b3f12ad4dc76a81f81962e"><div class="ttname"><a href="a00361.xhtml#ae069b181a2b3f12ad4dc76a81f81962e">CFeatureTimeRms::m_fIntegrationTimeInS</a></div><div class="ttdeci">float m_fIntegrationTimeInS</div><div class="ttdoc">integration time for filter coeff calculation</div><div class="ttdef"><b>Definition</b> <a href="#l00981">FeatureFromBlock.cpp:981</a></div></div>
<div class="ttc" id="aa00361_xhtml_af460352621ac7a18676d0a361c1df51e"><div class="ttname"><a href="a00361.xhtml#af460352621ac7a18676d0a361c1df51e">CFeatureTimeRms::setAdditionalParam</a></div><div class="ttdeci">Error_t setAdditionalParam(float fParamValue) override</div><div class="ttdef"><b>Definition</b> <a href="#l00958">FeatureFromBlock.cpp:958</a></div></div>
<div class="ttc" id="aa00469_xhtml_a47ca14941c604beb42d60164b3e5e6b3"><div class="ttname"><a href="a00469.xhtml#a47ca14941c604beb42d60164b3e5e6b3">CFeatureIf::Feature_t</a></div><div class="ttdeci">Feature_t</div><div class="ttdoc">enum to index all features note: update CFeatureIf::isFeatureSpectral_() when modifying</div><div class="ttdef"><b>Definition</b> <a href="a00251_source.xhtml#l00024">Feature.h:25</a></div></div>
<div class="ttc" id="aa00469_xhtml_a47ca14941c604beb42d60164b3e5e6b3a0fe1e0e5caf8fd22c48abcde74028c8f"><div class="ttname"><a href="a00469.xhtml#a47ca14941c604beb42d60164b3e5e6b3a0fe1e0e5caf8fd22c48abcde74028c8f">CFeatureIf::kFeatureSpectralRolloff</a></div><div class="ttdeci">@ kFeatureSpectralRolloff</div><div class="ttdef"><b>Definition</b> <a href="a00251_source.xhtml#l00034">Feature.h:34</a></div></div>
<div class="ttc" id="aa00469_xhtml_a47ca14941c604beb42d60164b3e5e6b3a138118ff8341d41558cd0b32a85eafd3"><div class="ttname"><a href="a00469.xhtml#a47ca14941c604beb42d60164b3e5e6b3a138118ff8341d41558cd0b32a85eafd3">CFeatureIf::kFeatureTimePeakEnvelope</a></div><div class="ttdeci">@ kFeatureTimePeakEnvelope</div><div class="ttdef"><b>Definition</b> <a href="a00251_source.xhtml#l00042">Feature.h:42</a></div></div>
<div class="ttc" id="aa00469_xhtml_a47ca14941c604beb42d60164b3e5e6b3a1fcad202a3cfc949aed26a5ff806a180"><div class="ttname"><a href="a00469.xhtml#a47ca14941c604beb42d60164b3e5e6b3a1fcad202a3cfc949aed26a5ff806a180">CFeatureIf::kFeatureTimeMaxAcf</a></div><div class="ttdeci">@ kFeatureTimeMaxAcf</div><div class="ttdef"><b>Definition</b> <a href="a00251_source.xhtml#l00041">Feature.h:41</a></div></div>
<div class="ttc" id="aa00469_xhtml_a47ca14941c604beb42d60164b3e5e6b3a2e51955c0f5d4edf37bb8b0c0b7af6f5"><div class="ttname"><a href="a00469.xhtml#a47ca14941c604beb42d60164b3e5e6b3a2e51955c0f5d4edf37bb8b0c0b7af6f5">CFeatureIf::kFeatureSpectralSpread</a></div><div class="ttdeci">@ kFeatureSpectralSpread</div><div class="ttdef"><b>Definition</b> <a href="a00251_source.xhtml#l00037">Feature.h:37</a></div></div>
<div class="ttc" id="aa00469_xhtml_a47ca14941c604beb42d60164b3e5e6b3a4358b37321d69645738c1494bb94b925"><div class="ttname"><a href="a00469.xhtml#a47ca14941c604beb42d60164b3e5e6b3a4358b37321d69645738c1494bb94b925">CFeatureIf::kFeatureTimeZeroCrossingRate</a></div><div class="ttdeci">@ kFeatureTimeZeroCrossingRate</div><div class="ttdef"><b>Definition</b> <a href="a00251_source.xhtml#l00045">Feature.h:45</a></div></div>
<div class="ttc" id="aa00469_xhtml_a47ca14941c604beb42d60164b3e5e6b3a47c4f31d2c8d477f955da1281c8bda85"><div class="ttname"><a href="a00469.xhtml#a47ca14941c604beb42d60164b3e5e6b3a47c4f31d2c8d477f955da1281c8bda85">CFeatureIf::kFeatureSpectralMfccs</a></div><div class="ttdeci">@ kFeatureSpectralMfccs</div><div class="ttdef"><b>Definition</b> <a href="a00251_source.xhtml#l00032">Feature.h:32</a></div></div>
<div class="ttc" id="aa00469_xhtml_a47ca14941c604beb42d60164b3e5e6b3a56e83df863061d4093933f57dc036fd0"><div class="ttname"><a href="a00469.xhtml#a47ca14941c604beb42d60164b3e5e6b3a56e83df863061d4093933f57dc036fd0">CFeatureIf::kFeatureSpectralCrestFactor</a></div><div class="ttdeci">@ kFeatureSpectralCrestFactor</div><div class="ttdef"><b>Definition</b> <a href="a00251_source.xhtml#l00027">Feature.h:27</a></div></div>
<div class="ttc" id="aa00469_xhtml_a47ca14941c604beb42d60164b3e5e6b3a6cca75d6d116b2284ae19d2b75093198"><div class="ttname"><a href="a00469.xhtml#a47ca14941c604beb42d60164b3e5e6b3a6cca75d6d116b2284ae19d2b75093198">CFeatureIf::kFeatureSpectralPitchChroma</a></div><div class="ttdeci">@ kFeatureSpectralPitchChroma</div><div class="ttdef"><b>Definition</b> <a href="a00251_source.xhtml#l00033">Feature.h:33</a></div></div>
<div class="ttc" id="aa00469_xhtml_a47ca14941c604beb42d60164b3e5e6b3a73840e0ec4ffc58aac491b51add4ebae"><div class="ttname"><a href="a00469.xhtml#a47ca14941c604beb42d60164b3e5e6b3a73840e0ec4ffc58aac491b51add4ebae">CFeatureIf::kFeatureSpectralDecrease</a></div><div class="ttdeci">@ kFeatureSpectralDecrease</div><div class="ttdef"><b>Definition</b> <a href="a00251_source.xhtml#l00028">Feature.h:28</a></div></div>
<div class="ttc" id="aa00469_xhtml_a47ca14941c604beb42d60164b3e5e6b3aa0fa60f5d1741a50b4e018ae35c53084"><div class="ttname"><a href="a00469.xhtml#a47ca14941c604beb42d60164b3e5e6b3aa0fa60f5d1741a50b4e018ae35c53084">CFeatureIf::kFeatureSpectralKurtosis</a></div><div class="ttdeci">@ kFeatureSpectralKurtosis</div><div class="ttdef"><b>Definition</b> <a href="a00251_source.xhtml#l00031">Feature.h:31</a></div></div>
<div class="ttc" id="aa00469_xhtml_a47ca14941c604beb42d60164b3e5e6b3aa7fcbc742fe20a02ec32aa842ef5d9ac"><div class="ttname"><a href="a00469.xhtml#a47ca14941c604beb42d60164b3e5e6b3aa7fcbc742fe20a02ec32aa842ef5d9ac">CFeatureIf::kFeatureTimeStd</a></div><div class="ttdeci">@ kFeatureTimeStd</div><div class="ttdef"><b>Definition</b> <a href="a00251_source.xhtml#l00044">Feature.h:44</a></div></div>
<div class="ttc" id="aa00469_xhtml_a47ca14941c604beb42d60164b3e5e6b3ab48b0af125a41eb628e2867f53248828"><div class="ttname"><a href="a00469.xhtml#a47ca14941c604beb42d60164b3e5e6b3ab48b0af125a41eb628e2867f53248828">CFeatureIf::kFeatureSpectralSlope</a></div><div class="ttdeci">@ kFeatureSpectralSlope</div><div class="ttdef"><b>Definition</b> <a href="a00251_source.xhtml#l00036">Feature.h:36</a></div></div>
<div class="ttc" id="aa00469_xhtml_a47ca14941c604beb42d60164b3e5e6b3ab6c784d49502082864d1ff9170564dcd"><div class="ttname"><a href="a00469.xhtml#a47ca14941c604beb42d60164b3e5e6b3ab6c784d49502082864d1ff9170564dcd">CFeatureIf::kFeatureTimeAcfCoeff</a></div><div class="ttdeci">@ kFeatureTimeAcfCoeff</div><div class="ttdef"><b>Definition</b> <a href="a00251_source.xhtml#l00040">Feature.h:40</a></div></div>
<div class="ttc" id="aa00469_xhtml_a47ca14941c604beb42d60164b3e5e6b3ab91719fe00fbcbbd34b7b5b0e7631dfd"><div class="ttname"><a href="a00469.xhtml#a47ca14941c604beb42d60164b3e5e6b3ab91719fe00fbcbbd34b7b5b0e7631dfd">CFeatureIf::kFeatureSpectralTonalPowerRatio</a></div><div class="ttdeci">@ kFeatureSpectralTonalPowerRatio</div><div class="ttdef"><b>Definition</b> <a href="a00251_source.xhtml#l00038">Feature.h:38</a></div></div>
<div class="ttc" id="aa00469_xhtml_a47ca14941c604beb42d60164b3e5e6b3ababfc8ce9c5b272fd805b5e8a1fb5ff6"><div class="ttname"><a href="a00469.xhtml#a47ca14941c604beb42d60164b3e5e6b3ababfc8ce9c5b272fd805b5e8a1fb5ff6">CFeatureIf::kFeatureSpectralFlux</a></div><div class="ttdeci">@ kFeatureSpectralFlux</div><div class="ttdef"><b>Definition</b> <a href="a00251_source.xhtml#l00030">Feature.h:30</a></div></div>
<div class="ttc" id="aa00469_xhtml_a47ca14941c604beb42d60164b3e5e6b3abe659e5b25086d04ed78c40d7411b71d"><div class="ttname"><a href="a00469.xhtml#a47ca14941c604beb42d60164b3e5e6b3abe659e5b25086d04ed78c40d7411b71d">CFeatureIf::kFeatureSpectralFlatness</a></div><div class="ttdeci">@ kFeatureSpectralFlatness</div><div class="ttdef"><b>Definition</b> <a href="a00251_source.xhtml#l00029">Feature.h:29</a></div></div>
<div class="ttc" id="aa00469_xhtml_a47ca14941c604beb42d60164b3e5e6b3adc99879506ae42b73740c06987993d6b"><div class="ttname"><a href="a00469.xhtml#a47ca14941c604beb42d60164b3e5e6b3adc99879506ae42b73740c06987993d6b">CFeatureIf::kFeatureSpectralSkewness</a></div><div class="ttdeci">@ kFeatureSpectralSkewness</div><div class="ttdef"><b>Definition</b> <a href="a00251_source.xhtml#l00035">Feature.h:35</a></div></div>
<div class="ttc" id="aa00469_xhtml_a47ca14941c604beb42d60164b3e5e6b3aedb0c71ed62a6df3eb21f53cad93682a"><div class="ttname"><a href="a00469.xhtml#a47ca14941c604beb42d60164b3e5e6b3aedb0c71ed62a6df3eb21f53cad93682a">CFeatureIf::kFeatureTimeRms</a></div><div class="ttdeci">@ kFeatureTimeRms</div><div class="ttdef"><b>Definition</b> <a href="a00251_source.xhtml#l00043">Feature.h:43</a></div></div>
<div class="ttc" id="aa00469_xhtml_a47ca14941c604beb42d60164b3e5e6b3af835ba1196c45135d5b2c14bd71765fe"><div class="ttname"><a href="a00469.xhtml#a47ca14941c604beb42d60164b3e5e6b3af835ba1196c45135d5b2c14bd71765fe">CFeatureIf::kFeatureSpectralCentroid</a></div><div class="ttdeci">@ kFeatureSpectralCentroid</div><div class="ttdef"><b>Definition</b> <a href="a00251_source.xhtml#l00026">Feature.h:26</a></div></div>
<div class="ttc" id="aa00473_xhtml_a15df133306497e4f85929692354f378a"><div class="ttname"><a href="a00473.xhtml#a15df133306497e4f85929692354f378a">CFeatureFromBlockIf::compFeatureSpectralCrestFactor</a></div><div class="ttdeci">static float compFeatureSpectralCrestFactor(const float *pfMagSpec, int iDataLength, float fSampleRate=1.F)</div><div class="ttdef"><b>Definition</b> <a href="#l00039">FeatureFromBlock.cpp:39</a></div></div>
<div class="ttc" id="aa00473_xhtml_a23b1d6639637a13587d5529a57f3bf78"><div class="ttname"><a href="a00473.xhtml#a23b1d6639637a13587d5529a57f3bf78">CFeatureFromBlockIf::m_kfFloatThresh</a></div><div class="ttdeci">static const float m_kfFloatThresh</div><div class="ttdoc">below this we just assume everything&#39;s zero</div><div class="ttdef"><b>Definition</b> <a href="a00227_source.xhtml#l00184">FeatureFromBlock.h:184</a></div></div>
<div class="ttc" id="aa00473_xhtml_a28b9430a480ce697a7dbd73527057ac6"><div class="ttname"><a href="a00473.xhtml#a28b9430a480ce697a7dbd73527057ac6">CFeatureFromBlockIf::compFeatureSpectralRolloff</a></div><div class="ttdeci">static float compFeatureSpectralRolloff(const float *pfMagSpec, int iDataLength, float fSampleRate=1.F, float fKappa=.85F)</div><div class="ttdef"><b>Definition</b> <a href="#l00164">FeatureFromBlock.cpp:164</a></div></div>
<div class="ttc" id="aa00473_xhtml_a2fefdb1b1217edd46c2b4e9336fa2aed"><div class="ttname"><a href="a00473.xhtml#a2fefdb1b1217edd46c2b4e9336fa2aed">CFeatureFromBlockIf::m_iDataLength</a></div><div class="ttdeci">int m_iDataLength</div><div class="ttdoc">block length</div><div class="ttdef"><b>Definition</b> <a href="a00227_source.xhtml#l00196">FeatureFromBlock.h:196</a></div></div>
<div class="ttc" id="aa00473_xhtml_a300e7b2134b2bd0faaa24cfecbd9cb51"><div class="ttname"><a href="a00473.xhtml#a300e7b2134b2bd0faaa24cfecbd9cb51">CFeatureFromBlockIf::destroy</a></div><div class="ttdeci">static Error_t destroy(CFeatureFromBlockIf *&amp;pCInstance)</div><div class="ttdef"><b>Definition</b> <a href="#l01048">FeatureFromBlock.cpp:1048</a></div></div>
<div class="ttc" id="aa00473_xhtml_a361ef81afe12623645546fbbeab30b14"><div class="ttname"><a href="a00473.xhtml#a361ef81afe12623645546fbbeab30b14">CFeatureFromBlockIf::compFeatureSpectralFlatness</a></div><div class="ttdeci">static float compFeatureSpectralFlatness(const float *pfMagSpec, int iDataLength, float fSampleRate=1.F)</div><div class="ttdef"><b>Definition</b> <a href="#l00074">FeatureFromBlock.cpp:74</a></div></div>
<div class="ttc" id="aa00473_xhtml_a3cdaa6a50139576cf1aaa73f4b0d3b6f"><div class="ttname"><a href="a00473.xhtml#a3cdaa6a50139576cf1aaa73f4b0d3b6f">CFeatureFromBlockIf::m_eFeatureIdx</a></div><div class="ttdeci">CFeatureIf::Feature_t m_eFeatureIdx</div><div class="ttdoc">index of feature to extract</div><div class="ttdef"><b>Definition</b> <a href="a00227_source.xhtml#l00194">FeatureFromBlock.h:194</a></div></div>
<div class="ttc" id="aa00473_xhtml_a41daabd1afa9c2307c64b431fcf8da62"><div class="ttname"><a href="a00473.xhtml#a41daabd1afa9c2307c64b431fcf8da62">CFeatureFromBlockIf::hasAdditionalParam</a></div><div class="ttdeci">virtual bool hasAdditionalParam() const</div><div class="ttdef"><b>Definition</b> <a href="#l01071">FeatureFromBlock.cpp:1071</a></div></div>
<div class="ttc" id="aa00473_xhtml_a42b11faa0f65881702ad7dcc1398ec5f"><div class="ttname"><a href="a00473.xhtml#a42b11faa0f65881702ad7dcc1398ec5f">CFeatureFromBlockIf::compFeatureSpectralFlux</a></div><div class="ttdeci">static float compFeatureSpectralFlux(const float *pfMagSpec, const float *pfPrevSpec, int iDataLength, float fSampleRate=1.F)</div><div class="ttdef"><b>Definition</b> <a href="#l00093">FeatureFromBlock.cpp:93</a></div></div>
<div class="ttc" id="aa00473_xhtml_a46500f9eaa49f3860afa5f1fce555415"><div class="ttname"><a href="a00473.xhtml#a46500f9eaa49f3860afa5f1fce555415">CFeatureFromBlockIf::compFeatureTimeRms</a></div><div class="ttdeci">static float compFeatureTimeRms(const float *pfSamples, int iDataLength, float fSampleRate=1.F)</div><div class="ttdef"><b>Definition</b> <a href="#l00308">FeatureFromBlock.cpp:308</a></div></div>
<div class="ttc" id="aa00473_xhtml_a483bca508e2817799a3173a6180d245e"><div class="ttname"><a href="a00473.xhtml#a483bca508e2817799a3173a6180d245e">CFeatureFromBlockIf::CFeatureFromBlockIf</a></div><div class="ttdeci">CFeatureFromBlockIf()</div><div class="ttdef"><b>Definition</b> <a href="a00227_source.xhtml#l00188">FeatureFromBlock.h:188</a></div></div>
<div class="ttc" id="aa00473_xhtml_a4eca7f209c771fb5008fa08facffd598"><div class="ttname"><a href="a00473.xhtml#a4eca7f209c771fb5008fa08facffd598">CFeatureFromBlockIf::compFeatureTimeStd</a></div><div class="ttdeci">static float compFeatureTimeStd(const float *pfSamples, int iDataLength, float fSampleRate=1.F)</div><div class="ttdef"><b>Definition</b> <a href="#l00300">FeatureFromBlock.cpp:300</a></div></div>
<div class="ttc" id="aa00473_xhtml_a665af5d570876cc41adc56185201cd8c"><div class="ttname"><a href="a00473.xhtml#a665af5d570876cc41adc56185201cd8c">CFeatureFromBlockIf::compFeatureTimeAcfCoeff</a></div><div class="ttdeci">static float compFeatureTimeAcfCoeff(const float *pfSamples, int iDataLength, float fSampleRate=1.F, int iEta=19)</div><div class="ttdef"><b>Definition</b> <a href="#l00283">FeatureFromBlock.cpp:283</a></div></div>
<div class="ttc" id="aa00473_xhtml_a6d3ca4f66582ae352e3addfd7f99a752"><div class="ttname"><a href="a00473.xhtml#a6d3ca4f66582ae352e3addfd7f99a752">CFeatureFromBlockIf::create</a></div><div class="ttdeci">static Error_t create(CFeatureFromBlockIf *&amp;pCInstance, CFeatureIf::Feature_t eFeatureIdx, int iDataLength, float fSampleRate=1.F)</div><div class="ttdef"><b>Definition</b> <a href="#l00986">FeatureFromBlock.cpp:986</a></div></div>
<div class="ttc" id="aa00473_xhtml_a75ac4ef94667058662a8100bb1c1e1cd"><div class="ttname"><a href="a00473.xhtml#a75ac4ef94667058662a8100bb1c1e1cd">CFeatureFromBlockIf::m_fSampleRate</a></div><div class="ttdeci">float m_fSampleRate</div><div class="ttdoc">sample rate</div><div class="ttdef"><b>Definition</b> <a href="a00227_source.xhtml#l00197">FeatureFromBlock.h:197</a></div></div>
<div class="ttc" id="aa00473_xhtml_a7eea1378e1f161f7a69c4723405efa8a"><div class="ttname"><a href="a00473.xhtml#a7eea1378e1f161f7a69c4723405efa8a">CFeatureFromBlockIf::compFeature</a></div><div class="ttdeci">virtual Error_t compFeature(float *pfFeature, const float *pfIn)</div><div class="ttdef"><b>Definition</b> <a href="#l01063">FeatureFromBlock.cpp:1063</a></div></div>
<div class="ttc" id="aa00473_xhtml_a7f3f62f3787b0ddc4c8938f5d54170af"><div class="ttname"><a href="a00473.xhtml#a7f3f62f3787b0ddc4c8938f5d54170af">CFeatureFromBlockIf::setAdditionalParam</a></div><div class="ttdeci">virtual Error_t setAdditionalParam(float fParamValue)</div><div class="ttdef"><b>Definition</b> <a href="#l01077">FeatureFromBlock.cpp:1077</a></div></div>
<div class="ttc" id="aa00473_xhtml_a8343fab849f52e77639b46e759e7e49d"><div class="ttname"><a href="a00473.xhtml#a8343fab849f52e77639b46e759e7e49d">CFeatureFromBlockIf::compFeatureTimePeakEnvelope</a></div><div class="ttdeci">static float compFeatureTimePeakEnvelope(const float *pfSamples, int iDataLength, float fSampleRate=1.F)</div><div class="ttdef"><b>Definition</b> <a href="#l00292">FeatureFromBlock.cpp:292</a></div></div>
<div class="ttc" id="aa00473_xhtml_a880a58f05522dfd1f0f16f26c34703db"><div class="ttname"><a href="a00473.xhtml#a880a58f05522dfd1f0f16f26c34703db">CFeatureFromBlockIf::compFeatureSpectralCentroid</a></div><div class="ttdeci">static float compFeatureSpectralCentroid(const float *pfMagSpec, int iDataLength, float fSampleRate=1.F)</div><div class="ttdef"><b>Definition</b> <a href="#l00016">FeatureFromBlock.cpp:16</a></div></div>
<div class="ttc" id="aa00473_xhtml_a8bf822f58aa66fc4787c5528352575c0"><div class="ttname"><a href="a00473.xhtml#a8bf822f58aa66fc4787c5528352575c0">CFeatureFromBlockIf::getFeatureDimensions</a></div><div class="ttdeci">virtual int getFeatureDimensions() const</div><div class="ttdef"><b>Definition</b> <a href="#l01057">FeatureFromBlock.cpp:1057</a></div></div>
<div class="ttc" id="aa00473_xhtml_a8c8ded721d053ed4f34565a1392993fc"><div class="ttname"><a href="a00473.xhtml#a8c8ded721d053ed4f34565a1392993fc">CFeatureFromBlockIf::compFeatureSpectralSlope</a></div><div class="ttdeci">static float compFeatureSpectralSlope(const float *pfMagSpec, int iDataLength, float fSampleRate=1.F)</div><div class="ttdef"><b>Definition</b> <a href="#l00221">FeatureFromBlock.cpp:221</a></div></div>
<div class="ttc" id="aa00473_xhtml_a9e03b3181d7ff9d8a9b0eaedabff9899"><div class="ttname"><a href="a00473.xhtml#a9e03b3181d7ff9d8a9b0eaedabff9899">CFeatureFromBlockIf::compFeatureSpectralDecrease</a></div><div class="ttdeci">static float compFeatureSpectralDecrease(const float *pfMagSpec, int iDataLength, float fSampleRate=1.F)</div><div class="ttdef"><b>Definition</b> <a href="#l00053">FeatureFromBlock.cpp:53</a></div></div>
<div class="ttc" id="aa00473_xhtml_aa97614c73430e57facec7a88bee49c9f"><div class="ttname"><a href="a00473.xhtml#aa97614c73430e57facec7a88bee49c9f">CFeatureFromBlockIf::compFeatureSpectralSpread</a></div><div class="ttdeci">static float compFeatureSpectralSpread(const float *pfMagSpec, int iDataLength, float fSampleRate=1.F)</div><div class="ttdef"><b>Definition</b> <a href="#l00109">FeatureFromBlock.cpp:109</a></div></div>
<div class="ttc" id="aa00473_xhtml_abcd848057f825a60c88ca74394fbee6d"><div class="ttname"><a href="a00473.xhtml#abcd848057f825a60c88ca74394fbee6d">CFeatureFromBlockIf::m_DispatchMap</a></div><div class="ttdeci">const std::map&lt; CFeatureIf::Feature_t, std::function&lt; float(const float *, int, float)&gt; &gt; m_DispatchMap</div><div class="ttdef"><b>Definition</b> <a href="a00227_source.xhtml#l00200">FeatureFromBlock.h:201</a></div></div>
<div class="ttc" id="aa00473_xhtml_abdd05ed6160f4154fd4aae2816939f5e"><div class="ttname"><a href="a00473.xhtml#abdd05ed6160f4154fd4aae2816939f5e">CFeatureFromBlockIf::compFeatureSpectralTonalPowerRatio</a></div><div class="ttdeci">static float compFeatureSpectralTonalPowerRatio(const float *pfMagSpec, int iDataLength, float fSampleRate=1.F, float fThresh=5e-4)</div><div class="ttdef"><b>Definition</b> <a href="#l00249">FeatureFromBlock.cpp:249</a></div></div>
<div class="ttc" id="aa00473_xhtml_add9e6742349500c1323607b2508d311d"><div class="ttname"><a href="a00473.xhtml#add9e6742349500c1323607b2508d311d">CFeatureFromBlockIf::compFeatureTimeZeroCrossingRate</a></div><div class="ttdeci">static float compFeatureTimeZeroCrossingRate(const float *pfSamples, int iDataLength, float fSampleRate=1.F)</div><div class="ttdef"><b>Definition</b> <a href="#l00316">FeatureFromBlock.cpp:316</a></div></div>
<div class="ttc" id="aa00473_xhtml_af130d46bb6a964262acb138fc7b7b9fd"><div class="ttname"><a href="a00473.xhtml#af130d46bb6a964262acb138fc7b7b9fd">CFeatureFromBlockIf::compFeatureSpectralSkewness</a></div><div class="ttdeci">static float compFeatureSpectralSkewness(const float *pfMagSpec, int iDataLength, float fSampleRate=1.F)</div><div class="ttdef"><b>Definition</b> <a href="#l00192">FeatureFromBlock.cpp:192</a></div></div>
<div class="ttc" id="aa00473_xhtml_aff5ebe0708311c49ba85c03c4546b6cf"><div class="ttname"><a href="a00473.xhtml#aff5ebe0708311c49ba85c03c4546b6cf">CFeatureFromBlockIf::compFeatureSpectralKurtosis</a></div><div class="ttdeci">static float compFeatureSpectralKurtosis(const float *pfMagSpec, int iDataLength, float fSampleRate=1.F)</div><div class="ttdef"><b>Definition</b> <a href="#l00134">FeatureFromBlock.cpp:134</a></div></div>
<div class="ttc" id="aa00489_xhtml_a591097c6b1935c4d6273b3445f8f552b"><div class="ttname"><a href="a00489.xhtml#a591097c6b1935c4d6273b3445f8f552b">CMatrix::free</a></div><div class="ttdeci">static void free(T **&amp;pptMat, int iNumRows)</div><div class="ttdef"><b>Definition</b> <a href="a00188_source.xhtml#l00058">Matrix.h:58</a></div></div>
<div class="ttc" id="aa00489_xhtml_a6501b78d76c912d49eee88c8f7242923"><div class="ttname"><a href="a00489.xhtml#a6501b78d76c912d49eee88c8f7242923">CMatrix::alloc</a></div><div class="ttdeci">static void alloc(T **&amp;pptMat, int iNumRows, int iNumCols)</div><div class="ttdef"><b>Definition</b> <a href="a00188_source.xhtml#l00023">Matrix.h:23</a></div></div>
<div class="ttc" id="aa00501_xhtml_a8d740c45e33ce98f9415bdcf78174600"><div class="ttname"><a href="a00501.xhtml#a8d740c45e33ce98f9415bdcf78174600">CUtil::sign</a></div><div class="ttdeci">static float sign(float fValue)</div><div class="ttdef"><b>Definition</b> <a href="a00191_source.xhtml#l00084">Util.h:84</a></div></div>
<div class="ttc" id="aa00501_xhtml_a9edb25bb88d789958e1740578b65cbbb"><div class="ttname"><a href="a00501.xhtml#a9edb25bb88d789958e1740578b65cbbb">CUtil::float2int</a></div><div class="ttdeci">static T float2int(float fIn)</div><div class="ttdef"><b>Definition</b> <a href="a00191_source.xhtml#l00018">Util.h:18</a></div></div>
<div class="ttc" id="aa00505_xhtml_a1f7f307c20239cfd2007393e2b3b26df"><div class="ttname"><a href="a00505.xhtml#a1f7f307c20239cfd2007393e2b3b26df">CVector::getMin</a></div><div class="ttdeci">static T getMin(const T *ptSrc, long long int iLength, bool bAbs=false)</div><div class="ttdef"><b>Definition</b> <a href="a00185_source.xhtml#l00481">Vector.h:481</a></div></div>
<div class="ttc" id="aa00505_xhtml_a269d316eeb6000aac4f57ade32c83127"><div class="ttname"><a href="a00505.xhtml#a269d316eeb6000aac4f57ade32c83127">CVector::mulScalar</a></div><div class="ttdeci">static T mulScalar(const T *ptSrc1, const T *ptSrc2, long long int iLength)</div><div class="ttdef"><b>Definition</b> <a href="a00185_source.xhtml#l00246">Vector.h:246</a></div></div>
<div class="ttc" id="aa00505_xhtml_a4cf9544dd96801e3ee47fd1ef2049a1b"><div class="ttname"><a href="a00505.xhtml#a4cf9544dd96801e3ee47fd1ef2049a1b">CVector::setValue</a></div><div class="ttdeci">static void setValue(T *ptDest, T tValue, long long iLength)</div><div class="ttdef"><b>Definition</b> <a href="a00185_source.xhtml#l00100">Vector.h:100</a></div></div>
<div class="ttc" id="aa00505_xhtml_a6dbb3f9f480568b60f7fe50090d20003"><div class="ttname"><a href="a00505.xhtml#a6dbb3f9f480568b60f7fe50090d20003">CVector::setZero</a></div><div class="ttdeci">static void setZero(T *ptSrcDest, long long iLength)</div><div class="ttdef"><b>Definition</b> <a href="a00185_source.xhtml#l00114">Vector.h:114</a></div></div>
<div class="ttc" id="aa00505_xhtml_a9811f50434dd058d201290b2dc98bfcd"><div class="ttname"><a href="a00505.xhtml#a9811f50434dd058d201290b2dc98bfcd">CVector::mulC_I</a></div><div class="ttdeci">static void mulC_I(T *ptSrcDest, T fScale, long long int iLength)</div><div class="ttdef"><b>Definition</b> <a href="a00185_source.xhtml#l00214">Vector.h:214</a></div></div>
<div class="ttc" id="aa00505_xhtml_a9f5be871090bc5a64a7732cebfb4f8ec"><div class="ttname"><a href="a00505.xhtml#a9f5be871090bc5a64a7732cebfb4f8ec">CVector::getMax</a></div><div class="ttdeci">static T getMax(const T *ptSrc, long long int iLength, bool bAbs=false)</div><div class="ttdef"><b>Definition</b> <a href="a00185_source.xhtml#l00444">Vector.h:444</a></div></div>
<div class="ttc" id="aa00505_xhtml_aa86bdb0c663d4d52f2765793756f8737"><div class="ttname"><a href="a00505.xhtml#aa86bdb0c663d4d52f2765793756f8737">CVector::free</a></div><div class="ttdeci">static void free(T *&amp;ptVec)</div><div class="ttdef"><b>Definition</b> <a href="a00185_source.xhtml#l00057">Vector.h:57</a></div></div>
<div class="ttc" id="aa00505_xhtml_abaadac98b1cad18b7b568852bc951696"><div class="ttname"><a href="a00505.xhtml#abaadac98b1cad18b7b568852bc951696">CVector::alloc</a></div><div class="ttdeci">static void alloc(T *&amp;ptVec, long long iLength)</div><div class="ttdef"><b>Definition</b> <a href="a00185_source.xhtml#l00025">Vector.h:25</a></div></div>
<div class="ttc" id="aa00505_xhtml_abdbcc3898121387f3694f74491b7331e"><div class="ttname"><a href="a00505.xhtml#abdbcc3898121387f3694f74491b7331e">CVector::getSum</a></div><div class="ttdeci">static T getSum(const T *ptSrc, long long int iLength, bool bAbs=false)</div><div class="ttdef"><b>Definition</b> <a href="a00185_source.xhtml#l00556">Vector.h:556</a></div></div>
<div class="ttc" id="aa00505_xhtml_ad7c5cba73e439adac77778f61c9418f0"><div class="ttname"><a href="a00505.xhtml#ad7c5cba73e439adac77778f61c9418f0">CVector::copy</a></div><div class="ttdeci">static void copy(T *ptDest, const T *ptSrc, long long int iLength)</div><div class="ttdef"><b>Definition</b> <a href="a00185_source.xhtml#l00041">Vector.h:41</a></div></div>
<div class="ttc" id="aa00505_xhtml_ae2ed42101e3d7075f5dec265a23f3424"><div class="ttname"><a href="a00505.xhtml#ae2ed42101e3d7075f5dec265a23f3424">CVector::getStd</a></div><div class="ttdeci">static T getStd(const T *ptSrc, long long int iLength, T fMean=std::numeric_limits&lt; T &gt;::max())</div><div class="ttdef"><b>Definition</b> <a href="a00185_source.xhtml#l00524">Vector.h:524</a></div></div>
<div class="ttc" id="aa00505_xhtml_ae6e3545cf196c5e2409365bc62b7c1de"><div class="ttname"><a href="a00505.xhtml#ae6e3545cf196c5e2409365bc62b7c1de">CVector::getMean</a></div><div class="ttdeci">static T getMean(const T *ptSrc, long long int iLength)</div><div class="ttdef"><b>Definition</b> <a href="a00185_source.xhtml#l00460">Vector.h:460</a></div></div>
<div class="ttc" id="aa00549_xhtml"><div class="ttname"><a href="a00549.xhtml">CCcf</a></div><div class="ttdoc">computation of correlation (freq domain implementation)</div><div class="ttdef"><b>Definition</b> <a href="a00146_source.xhtml#l00013">ToolCcf.h:14</a></div></div>
<div class="ttc" id="aa00553_xhtml_a3461898be6be7ae7059904860f5231e1"><div class="ttname"><a href="a00553.xhtml#a3461898be6be7ae7059904860f5231e1">CConversion::convertMidi2Freq</a></div><div class="ttdeci">static float convertMidi2Freq(float fMidi, float fA4InHz=440.F)</div><div class="ttdef"><b>Definition</b> <a href="a00248_source.xhtml#l00138">ToolConversion.h:138</a></div></div>
<div class="ttc" id="aa00553_xhtml_ada82d84a69f4c77266835f1f06ca2ecb"><div class="ttname"><a href="a00553.xhtml#ada82d84a69f4c77266835f1f06ca2ecb">CConversion::convertFreq2Bin</a></div><div class="ttdeci">static float convertFreq2Bin(float fInHz, int iFftLength, float fSampleRate=44100.F)</div><div class="ttdef"><b>Definition</b> <a href="a00248_source.xhtml#l00169">ToolConversion.h:169</a></div></div>
<div class="ttc" id="aa00553_xhtml_aebe59f905b1dd02058cccbb062de6507"><div class="ttname"><a href="a00553.xhtml#aebe59f905b1dd02058cccbb062de6507">CConversion::convertBin2Freq</a></div><div class="ttdeci">static float convertBin2Freq(float fBin, int iFftLength, float fSampleRate=44100.F)</div><div class="ttdef"><b>Definition</b> <a href="a00248_source.xhtml#l00204">ToolConversion.h:204</a></div></div>
<div class="ttc" id="aa00585_xhtml"><div class="ttname"><a href="a00585.xhtml">CSinglePoleLp</a></div><div class="ttdoc">class for single-pole low pass filtering</div><div class="ttdef"><b>Definition</b> <a href="a00206_source.xhtml#l00012">ToolLowPass.h:13</a></div></div>
<div class="ttc" id="aa00585_xhtml_a36c98d6494cc1ac1e7bf35bec6891b3c"><div class="ttname"><a href="a00585.xhtml#a36c98d6494cc1ac1e7bf35bec6891b3c">CSinglePoleLp::create</a></div><div class="ttdeci">static Error_t create(CSinglePoleLp *&amp;pCInstance)</div><div class="ttdef"><b>Definition</b> <a href="a00206_source.xhtml#l00020">ToolLowPass.h:20</a></div></div>
<div class="ttc" id="aa00585_xhtml_ac0aa215647a41e3a3de44ad6474c6be3"><div class="ttname"><a href="a00585.xhtml#ac0aa215647a41e3a3de44ad6474c6be3">CSinglePoleLp::destroy</a></div><div class="ttdeci">static Error_t destroy(CSinglePoleLp *&amp;pCInstance)</div><div class="ttdef"><b>Definition</b> <a href="a00206_source.xhtml#l00031">ToolLowPass.h:31</a></div></div>
<div class="ttc" id="aa00585_xhtml_afedab0de8491f604e797ada1fb0e5899"><div class="ttname"><a href="a00585.xhtml#afedab0de8491f604e797ada1fb0e5899">CSinglePoleLp::calcFilterParam</a></div><div class="ttdeci">static float calcFilterParam(float fIntegrationTimeInS, float fSampleRate)</div><div class="ttdef"><b>Definition</b> <a href="a00206_source.xhtml#l00098">ToolLowPass.h:98</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_bc10c4dd205ae2a1e415269a4536b5cd.xhtml">ACA</a></li><li class="navelem"><a class="el" href="a00047.xhtml">FeatureFromBlock.cpp</a></li>
    <li class="footer">Generated on Sat Jan 11 2025 20:33:58 for ACA by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.13.1 </li>
  </ul>
</div>
</body>
</html>
