<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 4.0.0 (20220602.1335)
 -->
<!-- Title: CPitchSpectralAcf Pages: 1 -->
<svg width="370pt" height="1156pt"
 viewBox="0.00 0.00 369.50 1156.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 1152)">
<title>CPitchSpectralAcf</title>
<polygon fill="white" stroke="transparent" points="-4,4 -4,-1152 365.5,-1152 365.5,4 -4,4"/>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="class for computation of the pitch via the acf of the magnitude spectrum">
<polygon fill="#bfbfbf" stroke="black" points="22,-0.5 22,-222.5 177,-222.5 177,-0.5 22,-0.5"/>
<text text-anchor="middle" x="99.5" y="-210.5" font-family="Helvetica,sans-Serif" font-size="10.00">CPitchSpectralAcf</text>
<polyline fill="none" stroke="black" points="22,-203.5 177,-203.5 "/>
<text text-anchor="start" x="30" y="-191.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_pfAcf</text>
<text text-anchor="start" x="30" y="-180.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_pfProcBuff</text>
<text text-anchor="start" x="30" y="-169.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float m_fMin</text>
<polyline fill="none" stroke="black" points="22,-162.5 177,-162.5 "/>
<text text-anchor="start" x="30" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CPitchSpectralAcf</text>
<text text-anchor="start" x="30" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CPitchIf::PitchExtractors</text>
<text text-anchor="start" x="30" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t ePitchIdx, int iDataLength,</text>
<text text-anchor="start" x="30" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate)</text>
<text text-anchor="start" x="30" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CPitchSpectralAcf()</text>
<text text-anchor="start" x="30" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ float compF0(const</text>
<text text-anchor="start" x="30" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfIn) override</text>
<text text-anchor="start" x="30" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CPitchSpectralAcf()</text>
<text text-anchor="start" x="30" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CPitchSpectralAcf</text>
<text text-anchor="start" x="30" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">(const CPitchSpectralAcf</text>
<text text-anchor="start" x="30" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;that)</text>
<text text-anchor="start" x="30" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CPitchSpectralAcf &amp;</text>
<text text-anchor="start" x="30" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00"> operator=(const CPitchSpectral</text>
<text text-anchor="start" x="30" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">Acf &amp;c)</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="a00526.xhtml" target="_top" xlink:title="class for computation of f0 from a block of data (e.g., time or magnitude spectrum)">
<polygon fill="white" stroke="black" points="0,-270.5 0,-613.5 167,-613.5 167,-270.5 0,-270.5"/>
<text text-anchor="middle" x="83.5" y="-601.5" font-family="Helvetica,sans-Serif" font-size="10.00">CPitchFromBlockIf</text>
<polyline fill="none" stroke="black" points="0,-594.5 167,-594.5 "/>
<text text-anchor="start" x="8" y="-582.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CPitchIf::PitchExtractors</text>
<text text-anchor="start" x="8" y="-571.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t m_ePitchIdx</text>
<text text-anchor="start" x="8" y="-560.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iDataLength</text>
<text text-anchor="start" x="8" y="-549.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float m_fSampleRate</text>
<polyline fill="none" stroke="black" points="0,-542.5 167,-542.5 "/>
<text text-anchor="start" x="8" y="-530.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CPitchIf::PitchExtractors</text>
<text text-anchor="start" x="8" y="-519.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t getPitchExtractorIdx</text>
<text text-anchor="start" x="8" y="-508.5" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="8" y="-497.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual float compF0</text>
<text text-anchor="start" x="8" y="-486.5" font-family="Helvetica,sans-Serif" font-size="10.00">(const float *pfIn)=0</text>
<text text-anchor="start" x="8" y="-475.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="8" y="-464.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CPitchFromBlockIf *&amp;pCInstance,</text>
<text text-anchor="start" x="8" y="-453.5" font-family="Helvetica,sans-Serif" font-size="10.00"> CPitchIf::PitchExtractors</text>
<text text-anchor="start" x="8" y="-442.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t ePitchIdx, int iDataLength,</text>
<text text-anchor="start" x="8" y="-431.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate=1.F)</text>
<text text-anchor="start" x="8" y="-420.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="8" y="-409.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CPitchFromBlockIf *&amp;pCInstance)</text>
<text text-anchor="start" x="8" y="-398.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CPitchFromBlockIf()</text>
<text text-anchor="start" x="8" y="-387.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CPitchFromBlockIf</text>
<text text-anchor="start" x="8" y="-376.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CPitchIf::PitchExtractors</text>
<text text-anchor="start" x="8" y="-365.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t ePitchIdx, int iDataLength,</text>
<text text-anchor="start" x="8" y="-354.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate)</text>
<text text-anchor="start" x="8" y="-343.5" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CPitchFromBlockIf()</text>
<text text-anchor="start" x="8" y="-332.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CPitchFromBlockIf</text>
<text text-anchor="start" x="8" y="-321.5" font-family="Helvetica,sans-Serif" font-size="10.00">(const CPitchFromBlockIf</text>
<text text-anchor="start" x="8" y="-310.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;that)</text>
<text text-anchor="start" x="8" y="-299.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CPitchFromBlockIf &amp;</text>
<text text-anchor="start" x="8" y="-288.5" font-family="Helvetica,sans-Serif" font-size="10.00"> operator=(const CPitchFrom</text>
<text text-anchor="start" x="8" y="-277.5" font-family="Helvetica,sans-Serif" font-size="10.00">BlockIf &amp;c)</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M92.3,-260.23C92.93,-247.46 93.54,-234.82 94.14,-222.64"/>
<polygon fill="none" stroke="midnightblue" points="88.8,-260.34 91.8,-270.5 95.79,-260.68 88.8,-260.34"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="a00546.xhtml" target="_top" xlink:title="computation of correlation (freq domain implementation)">
<polygon fill="white" stroke="black" points="185.5,-292.5 185.5,-591.5 349.5,-591.5 349.5,-292.5 185.5,-292.5"/>
<text text-anchor="middle" x="267.5" y="-579.5" font-family="Helvetica,sans-Serif" font-size="10.00">CCcf</text>
<polyline fill="none" stroke="black" points="185.5,-572.5 349.5,-572.5 "/>
<text text-anchor="start" x="193.5" y="-560.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; bool m_bIsInitialized</text>
<text text-anchor="start" x="193.5" y="-549.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; bool m_bWasProcessed</text>
<text text-anchor="start" x="193.5" y="-538.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_apfData</text>
<text text-anchor="start" x="193.5" y="-527.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iBlockLength</text>
<text text-anchor="start" x="193.5" y="-516.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iFftLength</text>
<polyline fill="none" stroke="black" points="185.5,-509.5 349.5,-509.5 "/>
<text text-anchor="start" x="193.5" y="-497.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CCcf(void)</text>
<text text-anchor="start" x="193.5" y="-486.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CCcf(void)</text>
<text text-anchor="start" x="193.5" y="-475.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t init(int iBlockLength)</text>
<text text-anchor="start" x="193.5" y="-464.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t reset()</text>
<text text-anchor="start" x="193.5" y="-453.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compCcf(const</text>
<text text-anchor="start" x="193.5" y="-442.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfIn1, const</text>
<text text-anchor="start" x="193.5" y="-431.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfIn2, bool bNormalize=true)</text>
<text text-anchor="start" x="193.5" y="-420.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ int getCcfLength(bool</text>
<text text-anchor="start" x="193.5" y="-409.5" font-family="Helvetica,sans-Serif" font-size="10.00"> bisAcf=false)</text>
<text text-anchor="start" x="193.5" y="-398.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getCcf(float</text>
<text text-anchor="start" x="193.5" y="-387.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfCcfResult, bool bisAcf</text>
<text text-anchor="start" x="193.5" y="-376.5" font-family="Helvetica,sans-Serif" font-size="10.00">=false) const</text>
<text text-anchor="start" x="193.5" y="-365.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ float getCcfMax(bool</text>
<text text-anchor="start" x="193.5" y="-354.5" font-family="Helvetica,sans-Serif" font-size="10.00"> bisAcf=false) const</text>
<text text-anchor="start" x="193.5" y="-343.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ int getCcfMaxIdx(bool</text>
<text text-anchor="start" x="193.5" y="-332.5" font-family="Helvetica,sans-Serif" font-size="10.00"> bisAcf=false) const</text>
<text text-anchor="start" x="193.5" y="-321.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CCcf(const CCcf &amp;that)</text>
<text text-anchor="start" x="193.5" y="-310.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CCcf &amp; operator=(const</text>
<text text-anchor="start" x="193.5" y="-299.5" font-family="Helvetica,sans-Serif" font-size="10.00"> CCcf &amp;c)</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node1 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node1</title>
<path fill="none" stroke="#404040" d="M191.36,-292.13C181.3,-272.45 171.09,-252.48 161.31,-233.36"/>
<polygon fill="none" stroke="#404040" points="161.23,-233.2 154.93,-229.68 155.76,-222.51 162.06,-226.03 161.23,-233.2"/>
<text text-anchor="middle" x="190.5" y="-244" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;m_pCCcf</text>
</g>
<!-- Node4 -->
<g id="node4" class="node">
<title>Node4</title>
<g id="a_node4"><a xlink:href="a00474.xhtml" target="_top" xlink:title="class for FFT computation with windowing">
<polygon fill="white" stroke="black" points="173.5,-661.5 173.5,-1147.5 361.5,-1147.5 361.5,-661.5 173.5,-661.5"/>
<text text-anchor="middle" x="267.5" y="-1135.5" font-family="Helvetica,sans-Serif" font-size="10.00">CFft</text>
<polyline fill="none" stroke="black" points="173.5,-1128.5 361.5,-1128.5 "/>
<text text-anchor="start" x="181.5" y="-1116.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_pfProcBuff</text>
<text text-anchor="start" x="181.5" y="-1105.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_pfWindowBuff</text>
<text text-anchor="start" x="181.5" y="-1094.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iDataLength</text>
<text text-anchor="start" x="181.5" y="-1083.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iFftLength</text>
<text text-anchor="start" x="181.5" y="-1072.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Windowing_t m_ePrePostWindowOpt</text>
<text text-anchor="start" x="181.5" y="-1061.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; bool m_bIsInitialized</text>
<text text-anchor="start" x="181.5" y="-1050.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; static const float m_Pi</text>
<text text-anchor="start" x="181.5" y="-1039.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; static const float</text>
<text text-anchor="start" x="181.5" y="-1028.5" font-family="Helvetica,sans-Serif" font-size="10.00"> m_Pi2</text>
<polyline fill="none" stroke="black" points="173.5,-1021.5 361.5,-1021.5 "/>
<text text-anchor="start" x="181.5" y="-1009.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CFft()</text>
<text text-anchor="start" x="181.5" y="-998.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CFft()</text>
<text text-anchor="start" x="181.5" y="-987.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t init(int iBlockLength,</text>
<text text-anchor="start" x="181.5" y="-976.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iZeroPadFactor=1, WindowFunction</text>
<text text-anchor="start" x="181.5" y="-965.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t eWindow=kWindowHann, Windowing</text>
<text text-anchor="start" x="181.5" y="-954.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t eWindowing=kPreWindow)</text>
<text text-anchor="start" x="181.5" y="-943.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t reset()</text>
<text text-anchor="start" x="181.5" y="-932.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t overrideWindow</text>
<text text-anchor="start" x="181.5" y="-921.5" font-family="Helvetica,sans-Serif" font-size="10.00">(const float *pfNewWindow)</text>
<text text-anchor="start" x="181.5" y="-910.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getWindow(float</text>
<text text-anchor="start" x="181.5" y="-899.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfWindow) const</text>
<text text-anchor="start" x="181.5" y="-888.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compFft(complex</text>
<text text-anchor="start" x="181.5" y="-877.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t *pfSpectrum, const</text>
<text text-anchor="start" x="181.5" y="-866.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfIn)</text>
<text text-anchor="start" x="181.5" y="-855.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compInvFft</text>
<text text-anchor="start" x="181.5" y="-844.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfOut, const</text>
<text text-anchor="start" x="181.5" y="-833.5" font-family="Helvetica,sans-Serif" font-size="10.00"> complex_t *pfSpectrum)</text>
<text text-anchor="start" x="181.5" y="-822.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getMagnitude</text>
<text text-anchor="start" x="181.5" y="-811.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfMag, const</text>
<text text-anchor="start" x="181.5" y="-800.5" font-family="Helvetica,sans-Serif" font-size="10.00"> complex_t *pfSpectrum)</text>
<text text-anchor="start" x="181.5" y="-789.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const</text>
<text text-anchor="start" x="181.5" y="-778.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getPhase(float</text>
<text text-anchor="start" x="181.5" y="-767.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfPhase, const complex</text>
<text text-anchor="start" x="181.5" y="-756.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t *pfSpectrum) const</text>
<text text-anchor="start" x="181.5" y="-745.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 7 more...</text>
<text text-anchor="start" x="181.5" y="-734.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CFft(const CFft &amp;that)</text>
<text text-anchor="start" x="181.5" y="-723.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CFft &amp; operator=(const</text>
<text text-anchor="start" x="181.5" y="-712.5" font-family="Helvetica,sans-Serif" font-size="10.00"> CFft &amp;c)</text>
<text text-anchor="start" x="181.5" y="-701.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Error_t allocMemory_()</text>
<text text-anchor="start" x="181.5" y="-690.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Error_t freeMemory_()</text>
<text text-anchor="start" x="181.5" y="-679.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Error_t computeWindow</text>
<text text-anchor="start" x="181.5" y="-668.5" font-family="Helvetica,sans-Serif" font-size="10.00">_(WindowFunction_t eWindow)</text>
</a>
</g>
</g>
<!-- Node4&#45;&gt;Node3 -->
<g id="edge3" class="edge">
<title>Node4&#45;&gt;Node3</title>
<path fill="none" stroke="#404040" d="M267.5,-661.45C267.5,-641.97 267.5,-622.59 267.5,-603.9"/>
<polygon fill="none" stroke="#404040" points="267.5,-603.71 263.5,-597.71 267.5,-591.71 271.5,-597.71 267.5,-603.71"/>
<text text-anchor="middle" x="289" y="-635" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;m_pCFft</text>
</g>
</g>
</svg>
