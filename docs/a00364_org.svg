<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 6.0.1 (20220911.1526)
 -->
<!-- Title: CNoveltyFromVector Pages: 1 -->
<svg width="931pt" height="2096pt"
 viewBox="0.00 0.00 931.00 2096.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 2092)">
<title>CNoveltyFromVector</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="class for computation of the novelty function from a vector of audio data">
<polygon fill="#999999" stroke="#666666" points="523,-107 368,-107 368,0 523,0 523,-107"/>
<text text-anchor="middle" x="445.5" y="-95" font-family="Helvetica,sans-Serif" font-size="10.00">{CNoveltyFromVector</text>
<text text-anchor="start" x="376" y="-84" font-family="Helvetica,sans-Serif" font-size="10.00">||+ &#160;CNoveltyFromVector</text>
<text text-anchor="start" x="376" y="-73" font-family="Helvetica,sans-Serif" font-size="10.00">(Novelty_t eNoveltyIdx,</text>
<text text-anchor="start" x="376" y="-62" font-family="Helvetica,sans-Serif" font-size="10.00"> const float *pfAudio,</text>
<text text-anchor="start" x="376" y="-51" font-family="Helvetica,sans-Serif" font-size="10.00"> long long iAudioLength,</text>
<text text-anchor="start" x="376" y="-40" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate, int</text>
<text text-anchor="start" x="376" y="-29" font-family="Helvetica,sans-Serif" font-size="10.00"> iBlockLength, int iHopLength)</text>
<text text-anchor="start" x="376" y="-18" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CNoveltyFromVector()</text>
<text text-anchor="middle" x="445.5" y="-7" font-family="Helvetica,sans-Serif" font-size="10.00">}</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="a00514.xhtml" target="_top" xlink:title="class for computation of a magnitude Novelty from either a file or a vector">
<polygon fill="white" stroke="#666666" points="550,-691 341,-691 341,-144 550,-144 550,-691"/>
<text text-anchor="middle" x="445.5" y="-679" font-family="Helvetica,sans-Serif" font-size="10.00">{CNoveltyIf</text>
<text text-anchor="start" x="349" y="-668" font-family="Helvetica,sans-Serif" font-size="10.00">|# int m_iBlockLength</text>
<text text-anchor="start" x="349" y="-657" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iHopLength</text>
<text text-anchor="start" x="349" y="-646" font-family="Helvetica,sans-Serif" font-size="10.00"># float m_fSampleRate</text>
<text text-anchor="start" x="349" y="-635" font-family="Helvetica,sans-Serif" font-size="10.00"># float * m_pfProcBuff2</text>
<text text-anchor="start" x="349" y="-624" font-family="Helvetica,sans-Serif" font-size="10.00"># float * m_pfProcBuff1</text>
<text text-anchor="start" x="349" y="-613" font-family="Helvetica,sans-Serif" font-size="10.00"># bool m_bIsInitialized</text>
<text text-anchor="start" x="349" y="-602" font-family="Helvetica,sans-Serif" font-size="10.00">|+ Error_t getNumBlocks</text>
<text text-anchor="start" x="349" y="-591" font-family="Helvetica,sans-Serif" font-size="10.00">(int &amp;iNumBlocks) const</text>
<text text-anchor="start" x="349" y="-580" font-family="Helvetica,sans-Serif" font-size="10.00">+ int getNumBlocks()</text>
<text text-anchor="start" x="349" y="-569" font-family="Helvetica,sans-Serif" font-size="10.00"> const</text>
<text text-anchor="start" x="349" y="-558" font-family="Helvetica,sans-Serif" font-size="10.00">+ float getTimeStamp</text>
<text text-anchor="start" x="349" y="-547" font-family="Helvetica,sans-Serif" font-size="10.00">(int iBlockIdx) const</text>
<text text-anchor="start" x="349" y="-536" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getTimeStamps</text>
<text text-anchor="start" x="349" y="-525" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfAxisTicks) const</text>
<text text-anchor="start" x="349" y="-514" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compNovelty</text>
<text text-anchor="start" x="349" y="-503" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfNovelty, bool</text>
<text text-anchor="start" x="349" y="-492" font-family="Helvetica,sans-Serif" font-size="10.00"> *pbisOnset=0)</text>
<text text-anchor="start" x="349" y="-481" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="349" y="-470" font-family="Helvetica,sans-Serif" font-size="10.00">(CNoveltyIf *&amp;pCInstance,</text>
<text text-anchor="start" x="349" y="-459" font-family="Helvetica,sans-Serif" font-size="10.00"> Novelty_t eNoveltyIdx,</text>
<text text-anchor="start" x="349" y="-448" font-family="Helvetica,sans-Serif" font-size="10.00"> const std::string &amp;strAudioFile</text>
<text text-anchor="start" x="349" y="-437" font-family="Helvetica,sans-Serif" font-size="10.00">Path, int iBlockLength=4096,</text>
<text text-anchor="start" x="349" y="-426" font-family="Helvetica,sans-Serif" font-size="10.00"> int iHopLength=512)</text>
<text text-anchor="start" x="349" y="-415" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="349" y="-404" font-family="Helvetica,sans-Serif" font-size="10.00">(CNoveltyIf *&amp;pCInstance,</text>
<text text-anchor="start" x="349" y="-393" font-family="Helvetica,sans-Serif" font-size="10.00"> Novelty_t eNoveltyIdx,</text>
<text text-anchor="start" x="349" y="-382" font-family="Helvetica,sans-Serif" font-size="10.00"> const float *pfAudio, long</text>
<text text-anchor="start" x="349" y="-371" font-family="Helvetica,sans-Serif" font-size="10.00"> long iNumSamples, float fSampleRate,</text>
<text text-anchor="start" x="349" y="-360" font-family="Helvetica,sans-Serif" font-size="10.00"> int iBlockLength=4096, int iHopLength=512)</text>
<text text-anchor="start" x="349" y="-349" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="349" y="-338" font-family="Helvetica,sans-Serif" font-size="10.00">(CNoveltyIf *&amp;pCInstance)</text>
<text text-anchor="start" x="349" y="-327" font-family="Helvetica,sans-Serif" font-size="10.00">+ static std::string</text>
<text text-anchor="start" x="349" y="-316" font-family="Helvetica,sans-Serif" font-size="10.00"> getNoveltyString(Novelty</text>
<text text-anchor="start" x="349" y="-305" font-family="Helvetica,sans-Serif" font-size="10.00">_t eNoveltyIdx)</text>
<text text-anchor="start" x="349" y="-294" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Novelty_t getNovelty</text>
<text text-anchor="start" x="349" y="-283" font-family="Helvetica,sans-Serif" font-size="10.00">IdxFromString(std::string</text>
<text text-anchor="start" x="349" y="-272" font-family="Helvetica,sans-Serif" font-size="10.00"> sNoveltyString)</text>
<text text-anchor="start" x="349" y="-261" font-family="Helvetica,sans-Serif" font-size="10.00"># &#160;CNoveltyIf()</text>
<text text-anchor="start" x="349" y="-250" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CNoveltyIf()</text>
<text text-anchor="start" x="349" y="-239" font-family="Helvetica,sans-Serif" font-size="10.00"># &#160;CNoveltyIf(const CNovelty</text>
<text text-anchor="start" x="349" y="-228" font-family="Helvetica,sans-Serif" font-size="10.00">If &amp;that)</text>
<text text-anchor="start" x="349" y="-217" font-family="Helvetica,sans-Serif" font-size="10.00"># CNoveltyIf &amp; operator</text>
<text text-anchor="start" x="349" y="-206" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CNoveltyIf &amp;c)</text>
<text text-anchor="start" x="349" y="-195" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t reset_()</text>
<text text-anchor="start" x="349" y="-184" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t init_(Novelty</text>
<text text-anchor="start" x="349" y="-173" font-family="Helvetica,sans-Serif" font-size="10.00">_t eNoveltyIdx)</text>
<text text-anchor="start" x="349" y="-162" font-family="Helvetica,sans-Serif" font-size="10.00"># void computeMagSpectrum_()</text>
<text text-anchor="middle" x="445.5" y="-151" font-family="Helvetica,sans-Serif" font-size="10.00">}</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="#63b8ff" d="M445.5,-133.84C445.5,-124.29 445.5,-115.3 445.5,-107.04"/>
<polygon fill="none" stroke="#63b8ff" points="442,-133.98 445.5,-143.98 449,-133.98 442,-133.98"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="a00606.xhtml" target="_top" xlink:title="class for audio normalization offering three options">
<polygon fill="white" stroke="#666666" points="155,-1131 0,-1131 0,-903 155,-903 155,-1131"/>
<text text-anchor="middle" x="77.5" y="-1119" font-family="Helvetica,sans-Serif" font-size="10.00">{CNormalizeAudio</text>
<text text-anchor="start" x="8" y="-1108" font-family="Helvetica,sans-Serif" font-size="10.00">|&#45; float m_fScaleFactor</text>
<text text-anchor="start" x="8" y="-1097" font-family="Helvetica,sans-Serif" font-size="10.00">|+ &#160;CNormalizeAudio(CAudioFile</text>
<text text-anchor="start" x="8" y="-1086" font-family="Helvetica,sans-Serif" font-size="10.00">If *pCAudioFile)</text>
<text text-anchor="start" x="8" y="-1075" font-family="Helvetica,sans-Serif" font-size="10.00">+ &#160;CNormalizeAudio(const</text>
<text text-anchor="start" x="8" y="-1064" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfAudioBuff, long</text>
<text text-anchor="start" x="8" y="-1053" font-family="Helvetica,sans-Serif" font-size="10.00"> long iAudioLength)</text>
<text text-anchor="start" x="8" y="-1042" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CNormalizeAudio()</text>
<text text-anchor="start" x="8" y="-1031" font-family="Helvetica,sans-Serif" font-size="10.00">+ void normalizeBlock</text>
<text text-anchor="start" x="8" y="-1020" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfAudioBlock,</text>
<text text-anchor="start" x="8" y="-1009" font-family="Helvetica,sans-Serif" font-size="10.00"> long long iNumSamples)</text>
<text text-anchor="start" x="8" y="-998" font-family="Helvetica,sans-Serif" font-size="10.00">+ static void normalizeSignal</text>
<text text-anchor="start" x="8" y="-987" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfAudio, long long</text>
<text text-anchor="start" x="8" y="-976" font-family="Helvetica,sans-Serif" font-size="10.00"> iNumSamples)</text>
<text text-anchor="start" x="8" y="-965" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; &#160;CNormalizeAudio()</text>
<text text-anchor="start" x="8" y="-954" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; &#160;CNormalizeAudio(const</text>
<text text-anchor="start" x="8" y="-943" font-family="Helvetica,sans-Serif" font-size="10.00"> CNormalizeAudio &amp;that)</text>
<text text-anchor="start" x="8" y="-932" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CNormalizeAudio &amp; operator</text>
<text text-anchor="start" x="8" y="-921" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CNormalizeAudio &amp;c)</text>
<text text-anchor="middle" x="77.5" y="-910" font-family="Helvetica,sans-Serif" font-size="10.00">}</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node2 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node2</title>
<path fill="none" stroke="#404040" d="M101.48,-902.71C115.36,-850.47 135.87,-788.91 164.5,-738 208.85,-659.15 275.07,-582.63 332.09,-524.25"/>
<polygon fill="none" stroke="#404040" points="332.38,-523.95 333.73,-516.87 340.79,-515.4 339.44,-522.48 332.38,-523.95"/>
<text text-anchor="middle" x="215" y="-712" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCNormalize</text>
</g>
<!-- Node4 -->
<g id="node4" class="node">
<title>Node4</title>
<g id="a_node4"><a xlink:href="a00542.xhtml" target="_top" xlink:title="forward declaration">
<polygon fill="white" stroke="#666666" points="333.5,-1230 173.5,-1230 173.5,-804 333.5,-804 333.5,-1230"/>
<text text-anchor="middle" x="253.5" y="-1218" font-family="Helvetica,sans-Serif" font-size="10.00">{CBlockAudioIf</text>
<text text-anchor="start" x="181.5" y="-1207" font-family="Helvetica,sans-Serif" font-size="10.00">|# long long m_iNumBlocks</text>
<text text-anchor="start" x="181.5" y="-1196" font-family="Helvetica,sans-Serif" font-size="10.00"># long long m_iCurrBlock</text>
<text text-anchor="start" x="181.5" y="-1185" font-family="Helvetica,sans-Serif" font-size="10.00"># long long m_iAudioLength</text>
<text text-anchor="start" x="181.5" y="-1174" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iBlockLength</text>
<text text-anchor="start" x="181.5" y="-1163" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iNumChannels</text>
<text text-anchor="start" x="181.5" y="-1152" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iHopLength</text>
<text text-anchor="start" x="181.5" y="-1141" font-family="Helvetica,sans-Serif" font-size="10.00"># float m_fSampleRate</text>
<text text-anchor="start" x="181.5" y="-1130" font-family="Helvetica,sans-Serif" font-size="10.00">|+ long long getNumBlocks</text>
<text text-anchor="start" x="181.5" y="-1119" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="181.5" y="-1108" font-family="Helvetica,sans-Serif" font-size="10.00">+ long long getLengthInSamples</text>
<text text-anchor="start" x="181.5" y="-1097" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="181.5" y="-1086" font-family="Helvetica,sans-Serif" font-size="10.00">+ float getTimeStamp</text>
<text text-anchor="start" x="181.5" y="-1075" font-family="Helvetica,sans-Serif" font-size="10.00">(long long iBlockIdx)</text>
<text text-anchor="start" x="181.5" y="-1064" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual bool isEndOfData</text>
<text text-anchor="start" x="181.5" y="-1053" font-family="Helvetica,sans-Serif" font-size="10.00">() const =0</text>
<text text-anchor="start" x="181.5" y="-1042" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual int getNextBlock</text>
<text text-anchor="start" x="181.5" y="-1031" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfBlock, float</text>
<text text-anchor="start" x="181.5" y="-1020" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfTimeStampInS=0)=0</text>
<text text-anchor="start" x="181.5" y="-1009" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="181.5" y="-998" font-family="Helvetica,sans-Serif" font-size="10.00">(CBlockAudioIf *&amp;pCInstance,</text>
<text text-anchor="start" x="181.5" y="-987" font-family="Helvetica,sans-Serif" font-size="10.00"> CAudioFileIf *pCAudioFile,</text>
<text text-anchor="start" x="181.5" y="-976" font-family="Helvetica,sans-Serif" font-size="10.00"> int iBlockLength, int iHopLength)</text>
<text text-anchor="start" x="181.5" y="-965" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="181.5" y="-954" font-family="Helvetica,sans-Serif" font-size="10.00">(CBlockAudioIf *&amp;pCInstance,</text>
<text text-anchor="start" x="181.5" y="-943" font-family="Helvetica,sans-Serif" font-size="10.00"> const float *pfAudioBuff,</text>
<text text-anchor="start" x="181.5" y="-932" font-family="Helvetica,sans-Serif" font-size="10.00"> long long iAudioLength, int</text>
<text text-anchor="start" x="181.5" y="-921" font-family="Helvetica,sans-Serif" font-size="10.00"> iBlockLength, int iHopLength,</text>
<text text-anchor="start" x="181.5" y="-910" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate)</text>
<text text-anchor="start" x="181.5" y="-899" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="181.5" y="-888" font-family="Helvetica,sans-Serif" font-size="10.00">(CBlockAudioIf *&amp;pCInstance)</text>
<text text-anchor="start" x="181.5" y="-877" font-family="Helvetica,sans-Serif" font-size="10.00"># &#160;CBlockAudioIf()</text>
<text text-anchor="start" x="181.5" y="-866" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CBlockAudioIf()</text>
<text text-anchor="start" x="181.5" y="-855" font-family="Helvetica,sans-Serif" font-size="10.00"># &#160;CBlockAudioIf(const</text>
<text text-anchor="start" x="181.5" y="-844" font-family="Helvetica,sans-Serif" font-size="10.00"> CBlockAudioIf &amp;that)</text>
<text text-anchor="start" x="181.5" y="-833" font-family="Helvetica,sans-Serif" font-size="10.00"># CBlockAudioIf &amp; operator</text>
<text text-anchor="start" x="181.5" y="-822" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CBlockAudioIf &amp;c)</text>
<text text-anchor="middle" x="253.5" y="-811" font-family="Helvetica,sans-Serif" font-size="10.00">}</text>
</a>
</g>
</g>
<!-- Node4&#45;&gt;Node2 -->
<g id="edge3" class="edge">
<title>Node4&#45;&gt;Node2</title>
<path fill="none" stroke="#404040" d="M321.36,-803.87C328.49,-781.62 335.64,-759.35 342.5,-738 346.21,-726.44 350.01,-714.64 353.84,-702.72"/>
<polygon fill="none" stroke="#404040" points="353.85,-702.68 351.88,-695.75 357.53,-691.26 359.5,-698.2 353.85,-702.68"/>
<text text-anchor="middle" x="393" y="-712" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCBlockAudio</text>
</g>
<!-- Node5 -->
<g id="node5" class="node">
<title>Node5</title>
<g id="a_node5"><a xlink:href="a00518.xhtml" target="_top" xlink:title="class for computation of a Novelty from a block of data (e.g., time or magnitude spectrum)">
<polygon fill="white" stroke="#666666" points="539.5,-1296 351.5,-1296 351.5,-738 539.5,-738 539.5,-1296"/>
<text text-anchor="middle" x="445.5" y="-1284" font-family="Helvetica,sans-Serif" font-size="10.00">{CNoveltyFromBlockIf</text>
<text text-anchor="start" x="359.5" y="-1273" font-family="Helvetica,sans-Serif" font-size="10.00">|# CNoveltyIf::Novelty</text>
<text text-anchor="start" x="359.5" y="-1262" font-family="Helvetica,sans-Serif" font-size="10.00">_t m_eNoveltyIdx</text>
<text text-anchor="start" x="359.5" y="-1251" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iDataLength</text>
<text text-anchor="start" x="359.5" y="-1240" font-family="Helvetica,sans-Serif" font-size="10.00"># float m_fSampleRate</text>
<text text-anchor="start" x="359.5" y="-1229" font-family="Helvetica,sans-Serif" font-size="10.00"># float * m_pfPrevSpec</text>
<text text-anchor="start" x="359.5" y="-1218" font-family="Helvetica,sans-Serif" font-size="10.00"># const std::map&lt; CNovelty</text>
<text text-anchor="start" x="359.5" y="-1207" font-family="Helvetica,sans-Serif" font-size="10.00">If::Novelty_t, std::function</text>
<text text-anchor="start" x="359.5" y="-1196" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; float(const float *, const</text>
<text text-anchor="start" x="359.5" y="-1185" font-family="Helvetica,sans-Serif" font-size="10.00"> float *, int, float)&gt; &gt; m_DispatchMap</text>
<text text-anchor="start" x="359.5" y="-1174" font-family="Helvetica,sans-Serif" font-size="10.00">|+ virtual int getNoveltyDimension</text>
<text text-anchor="start" x="359.5" y="-1163" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="359.5" y="-1152" font-family="Helvetica,sans-Serif" font-size="10.00">+ CNoveltyIf::Novelty</text>
<text text-anchor="start" x="359.5" y="-1141" font-family="Helvetica,sans-Serif" font-size="10.00">_t getNoveltyIdx() const</text>
<text text-anchor="start" x="359.5" y="-1130" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Error_t compNovelty</text>
<text text-anchor="start" x="359.5" y="-1119" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfNovelty, const</text>
<text text-anchor="start" x="359.5" y="-1108" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfIn)</text>
<text text-anchor="start" x="359.5" y="-1097" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="359.5" y="-1086" font-family="Helvetica,sans-Serif" font-size="10.00">(CNoveltyFromBlockIf</text>
<text text-anchor="start" x="359.5" y="-1075" font-family="Helvetica,sans-Serif" font-size="10.00"> *&amp;pCInstance, CNoveltyIf</text>
<text text-anchor="start" x="359.5" y="-1064" font-family="Helvetica,sans-Serif" font-size="10.00">::Novelty_t eNoveltyIdx,</text>
<text text-anchor="start" x="359.5" y="-1053" font-family="Helvetica,sans-Serif" font-size="10.00"> int iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="359.5" y="-1042" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="359.5" y="-1031" font-family="Helvetica,sans-Serif" font-size="10.00">(CNoveltyFromBlockIf *&amp;pCInstance)</text>
<text text-anchor="start" x="359.5" y="-1020" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compNovelty</text>
<text text-anchor="start" x="359.5" y="-1009" font-family="Helvetica,sans-Serif" font-size="10.00">Flux(const float *pfMagSpec,</text>
<text text-anchor="start" x="359.5" y="-998" font-family="Helvetica,sans-Serif" font-size="10.00"> const float *pfPrevSpec,</text>
<text text-anchor="start" x="359.5" y="-987" font-family="Helvetica,sans-Serif" font-size="10.00"> int iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="359.5" y="-976" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compNovelty</text>
<text text-anchor="start" x="359.5" y="-965" font-family="Helvetica,sans-Serif" font-size="10.00">Hainsworth(const float</text>
<text text-anchor="start" x="359.5" y="-954" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfMagSpec, const float</text>
<text text-anchor="start" x="359.5" y="-943" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfPrevSpec, int iDataLength,</text>
<text text-anchor="start" x="359.5" y="-932" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate=1.F)</text>
<text text-anchor="start" x="359.5" y="-921" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compNovelty</text>
<text text-anchor="start" x="359.5" y="-910" font-family="Helvetica,sans-Serif" font-size="10.00">Laroche(const float *pfMagSpec,</text>
<text text-anchor="start" x="359.5" y="-899" font-family="Helvetica,sans-Serif" font-size="10.00"> const float *pfPrevSpec, int</text>
<text text-anchor="start" x="359.5" y="-888" font-family="Helvetica,sans-Serif" font-size="10.00"> iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="359.5" y="-877" font-family="Helvetica,sans-Serif" font-size="10.00"># &#160;CNoveltyFromBlockIf()</text>
<text text-anchor="start" x="359.5" y="-866" font-family="Helvetica,sans-Serif" font-size="10.00"># &#160;CNoveltyFromBlockIf</text>
<text text-anchor="start" x="359.5" y="-855" font-family="Helvetica,sans-Serif" font-size="10.00">(CNoveltyIf::Novelty</text>
<text text-anchor="start" x="359.5" y="-844" font-family="Helvetica,sans-Serif" font-size="10.00">_t eNoveltyIdx, int iDataLength,</text>
<text text-anchor="start" x="359.5" y="-833" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate)</text>
<text text-anchor="start" x="359.5" y="-822" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CNoveltyFromBlockIf()</text>
<text text-anchor="start" x="359.5" y="-811" font-family="Helvetica,sans-Serif" font-size="10.00"># &#160;CNoveltyFromBlockIf</text>
<text text-anchor="start" x="359.5" y="-800" font-family="Helvetica,sans-Serif" font-size="10.00">(const CNoveltyFromBlockIf</text>
<text text-anchor="start" x="359.5" y="-789" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;that)</text>
<text text-anchor="start" x="359.5" y="-778" font-family="Helvetica,sans-Serif" font-size="10.00"># CNoveltyFromBlockIf</text>
<text text-anchor="start" x="359.5" y="-767" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp; operator=(const CNovelty</text>
<text text-anchor="start" x="359.5" y="-756" font-family="Helvetica,sans-Serif" font-size="10.00">FromBlockIf &amp;c)</text>
<text text-anchor="middle" x="445.5" y="-745" font-family="Helvetica,sans-Serif" font-size="10.00">}</text>
</a>
</g>
</g>
<!-- Node5&#45;&gt;Node2 -->
<g id="edge4" class="edge">
<title>Node5&#45;&gt;Node2</title>
<path fill="none" stroke="#404040" d="M445.5,-737.8C445.5,-726.28 445.5,-714.71 445.5,-703.17"/>
<polygon fill="none" stroke="#404040" points="445.5,-703.16 441.5,-697.16 445.5,-691.16 449.5,-697.16 445.5,-703.16"/>
<text text-anchor="middle" x="479" y="-712" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCNovelty</text>
</g>
<!-- Node6 -->
<g id="node6" class="node">
<title>Node6</title>
<g id="a_node6"><a xlink:href="a00474.xhtml" target="_top" xlink:title="class for FFT computation with windowing">
<polygon fill="white" stroke="#666666" points="745.5,-1257.5 557.5,-1257.5 557.5,-776.5 745.5,-776.5 745.5,-1257.5"/>
<text text-anchor="middle" x="651.5" y="-1245.5" font-family="Helvetica,sans-Serif" font-size="10.00">{CFft</text>
<text text-anchor="start" x="565.5" y="-1234.5" font-family="Helvetica,sans-Serif" font-size="10.00">|&#45; float * m_pfProcBuff</text>
<text text-anchor="start" x="565.5" y="-1223.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_pfWindowBuff</text>
<text text-anchor="start" x="565.5" y="-1212.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iDataLength</text>
<text text-anchor="start" x="565.5" y="-1201.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iFftLength</text>
<text text-anchor="start" x="565.5" y="-1190.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Windowing_t m_ePrePostWindowOpt</text>
<text text-anchor="start" x="565.5" y="-1179.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; bool m_bIsInitialized</text>
<text text-anchor="start" x="565.5" y="-1168.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; static const float m_Pi</text>
<text text-anchor="start" x="565.5" y="-1157.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; static const float</text>
<text text-anchor="start" x="565.5" y="-1146.5" font-family="Helvetica,sans-Serif" font-size="10.00"> m_Pi2</text>
<text text-anchor="start" x="565.5" y="-1135.5" font-family="Helvetica,sans-Serif" font-size="10.00">|+ &#160;CFft()</text>
<text text-anchor="start" x="565.5" y="-1124.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CFft()</text>
<text text-anchor="start" x="565.5" y="-1113.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t init(int iBlockLength,</text>
<text text-anchor="start" x="565.5" y="-1102.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iZeroPadFactor=1, WindowFunction</text>
<text text-anchor="start" x="565.5" y="-1091.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t eWindow=kWindowHann, Windowing</text>
<text text-anchor="start" x="565.5" y="-1080.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t eWindowing=kPreWindow)</text>
<text text-anchor="start" x="565.5" y="-1069.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t reset()</text>
<text text-anchor="start" x="565.5" y="-1058.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t overrideWindow</text>
<text text-anchor="start" x="565.5" y="-1047.5" font-family="Helvetica,sans-Serif" font-size="10.00">(const float *pfNewWindow)</text>
<text text-anchor="start" x="565.5" y="-1036.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getWindow(float</text>
<text text-anchor="start" x="565.5" y="-1025.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfWindow) const</text>
<text text-anchor="start" x="565.5" y="-1014.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compFft(complex</text>
<text text-anchor="start" x="565.5" y="-1003.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t *pfSpectrum, const</text>
<text text-anchor="start" x="565.5" y="-992.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfIn)</text>
<text text-anchor="start" x="565.5" y="-981.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compInvFft</text>
<text text-anchor="start" x="565.5" y="-970.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfOut, const</text>
<text text-anchor="start" x="565.5" y="-959.5" font-family="Helvetica,sans-Serif" font-size="10.00"> complex_t *pfSpectrum)</text>
<text text-anchor="start" x="565.5" y="-948.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getMagnitude</text>
<text text-anchor="start" x="565.5" y="-937.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfMag, const</text>
<text text-anchor="start" x="565.5" y="-926.5" font-family="Helvetica,sans-Serif" font-size="10.00"> complex_t *pfSpectrum)</text>
<text text-anchor="start" x="565.5" y="-915.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const</text>
<text text-anchor="start" x="565.5" y="-904.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getPhase(float</text>
<text text-anchor="start" x="565.5" y="-893.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfPhase, const complex</text>
<text text-anchor="start" x="565.5" y="-882.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t *pfSpectrum) const</text>
<text text-anchor="start" x="565.5" y="-871.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 7 more...</text>
<text text-anchor="start" x="565.5" y="-860.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; &#160;CFft(const CFft &amp;that)</text>
<text text-anchor="start" x="565.5" y="-849.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CFft &amp; operator=(const</text>
<text text-anchor="start" x="565.5" y="-838.5" font-family="Helvetica,sans-Serif" font-size="10.00"> CFft &amp;c)</text>
<text text-anchor="start" x="565.5" y="-827.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Error_t allocMemory_()</text>
<text text-anchor="start" x="565.5" y="-816.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Error_t freeMemory_()</text>
<text text-anchor="start" x="565.5" y="-805.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Error_t computeWindow</text>
<text text-anchor="start" x="565.5" y="-794.5" font-family="Helvetica,sans-Serif" font-size="10.00">_(WindowFunction_t eWindow)</text>
<text text-anchor="middle" x="651.5" y="-783.5" font-family="Helvetica,sans-Serif" font-size="10.00">}</text>
</a>
</g>
</g>
<!-- Node6&#45;&gt;Node2 -->
<g id="edge5" class="edge">
<title>Node6&#45;&gt;Node2</title>
<path fill="none" stroke="#404040" d="M568.9,-776.42C560.5,-752.06 551.92,-727.16 543.38,-702.4"/>
<polygon fill="none" stroke="#404040" points="543.37,-702.38 537.64,-698.01 539.46,-691.03 545.2,-695.4 543.37,-702.38"/>
<text text-anchor="middle" x="571.5" y="-712" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCFft</text>
</g>
<!-- Node7 -->
<g id="node7" class="node">
<title>Node7</title>
<g id="a_node7"><a xlink:href="a00586.xhtml" target="_top" xlink:title="class for moving average low pass filtering">
<polygon fill="white" stroke="#666666" points="923,-1169.5 764,-1169.5 764,-864.5 923,-864.5 923,-1169.5"/>
<text text-anchor="middle" x="843.5" y="-1157.5" font-family="Helvetica,sans-Serif" font-size="10.00">{CMovingAverage</text>
<text text-anchor="start" x="772" y="-1146.5" font-family="Helvetica,sans-Serif" font-size="10.00">|&#45; float m_fPrevOut</text>
<text text-anchor="start" x="772" y="-1135.5" font-family="Helvetica,sans-Serif" font-size="10.00">|+ Error_t setFilterParam</text>
<text text-anchor="start" x="772" y="-1124.5" font-family="Helvetica,sans-Serif" font-size="10.00">(int iFilterLength=64)</text>
<text text-anchor="start" x="772" y="-1113.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ int getFilterParam</text>
<text text-anchor="start" x="772" y="-1102.5" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="772" y="-1091.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t process(float</text>
<text text-anchor="start" x="772" y="-1080.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfOut, const float</text>
<text text-anchor="start" x="772" y="-1069.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfIn, long long iLenBuff)</text>
<text text-anchor="start" x="772" y="-1058.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t reset()</text>
<text text-anchor="start" x="772" y="-1047.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void filtfilt(float</text>
<text text-anchor="start" x="772" y="-1036.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfOut, const float</text>
<text text-anchor="start" x="772" y="-1025.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfIn, long long iLenBuff)</text>
<text text-anchor="start" x="772" y="-1014.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="772" y="-1003.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CMovingAverage *&amp;pCInstance)</text>
<text text-anchor="start" x="772" y="-992.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="772" y="-981.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CMovingAverage *&amp;pCInstance)</text>
<text text-anchor="start" x="772" y="-970.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static int calcFilterLength</text>
<text text-anchor="start" x="772" y="-959.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float fIntegrationTimeInS,</text>
<text text-anchor="start" x="772" y="-948.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate)</text>
<text text-anchor="start" x="772" y="-937.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; &#160;CMovingAverage()</text>
<text text-anchor="start" x="772" y="-926.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; virtual ~CMovingAverage()</text>
<text text-anchor="start" x="772" y="-915.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; &#160;CMovingAverage(const</text>
<text text-anchor="start" x="772" y="-904.5" font-family="Helvetica,sans-Serif" font-size="10.00"> CMovingAverage &amp;that)</text>
<text text-anchor="start" x="772" y="-893.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CMovingAverage &amp; operator</text>
<text text-anchor="start" x="772" y="-882.5" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CMovingAverage &amp;c)</text>
<text text-anchor="middle" x="843.5" y="-871.5" font-family="Helvetica,sans-Serif" font-size="10.00">}</text>
</a>
</g>
</g>
<!-- Node7&#45;&gt;Node2 -->
<g id="edge6" class="edge">
<title>Node7&#45;&gt;Node2</title>
<path fill="none" stroke="#404040" d="M808.75,-864.49C795.37,-821.84 777.6,-776.59 754.5,-738 703.03,-651.99 624.24,-571.01 559.11,-512.1"/>
<polygon fill="none" stroke="#404040" points="558.94,-511.95 551.8,-510.92 550.01,-503.93 557.15,-504.96 558.94,-511.95"/>
<text text-anchor="middle" x="775" y="-712" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCLpFilter</text>
</g>
<!-- Node8 -->
<g id="node8" class="node">
<title>Node8</title>
<g id="a_node8"><a xlink:href="a00490.xhtml" target="_top" xlink:title=" ">
<polygon fill="white" stroke="#666666" points="910,-1703 777,-1703 777,-1343 910,-1343 910,-1703"/>
<text text-anchor="middle" x="843.5" y="-1691" font-family="Helvetica,sans-Serif" font-size="10.00">{CRingBuffer&lt; float &gt;</text>
<text text-anchor="start" x="785" y="-1680" font-family="Helvetica,sans-Serif" font-size="10.00">|&#45; int m_iBuffLength</text>
<text text-anchor="start" x="785" y="-1669" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iReadIdx</text>
<text text-anchor="start" x="785" y="-1658" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iWriteIdx</text>
<text text-anchor="start" x="785" y="-1647" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_ptBuff</text>
<text text-anchor="start" x="785" y="-1636" font-family="Helvetica,sans-Serif" font-size="10.00">|+ &#160;CRingBuffer(int iBuffer</text>
<text text-anchor="start" x="785" y="-1625" font-family="Helvetica,sans-Serif" font-size="10.00">LengthInSamples)</text>
<text text-anchor="start" x="785" y="-1614" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CRingBuffer()</text>
<text text-anchor="start" x="785" y="-1603" font-family="Helvetica,sans-Serif" font-size="10.00">+ void putPostInc(float</text>
<text text-anchor="start" x="785" y="-1592" font-family="Helvetica,sans-Serif" font-size="10.00"> tNewValue)</text>
<text text-anchor="start" x="785" y="-1581" font-family="Helvetica,sans-Serif" font-size="10.00">+ void putPostInc(const</text>
<text text-anchor="start" x="785" y="-1570" font-family="Helvetica,sans-Serif" font-size="10.00"> float *ptNewBuff, int</text>
<text text-anchor="start" x="785" y="-1559" font-family="Helvetica,sans-Serif" font-size="10.00"> iLength)</text>
<text text-anchor="start" x="785" y="-1548" font-family="Helvetica,sans-Serif" font-size="10.00">+ void put(float tNewValue)</text>
<text text-anchor="start" x="785" y="-1537" font-family="Helvetica,sans-Serif" font-size="10.00">+ void put(const float</text>
<text text-anchor="start" x="785" y="-1526" font-family="Helvetica,sans-Serif" font-size="10.00"> *ptNewBuff, int iLength)</text>
<text text-anchor="start" x="785" y="-1515" font-family="Helvetica,sans-Serif" font-size="10.00">+ float getPostInc()</text>
<text text-anchor="start" x="785" y="-1504" font-family="Helvetica,sans-Serif" font-size="10.00">+ void getPostInc(float</text>
<text text-anchor="start" x="785" y="-1493" font-family="Helvetica,sans-Serif" font-size="10.00"> *ptBuff, int iLength)</text>
<text text-anchor="start" x="785" y="-1482" font-family="Helvetica,sans-Serif" font-size="10.00">+ float get(float fOffset</text>
<text text-anchor="start" x="785" y="-1471" font-family="Helvetica,sans-Serif" font-size="10.00">=0) const</text>
<text text-anchor="start" x="785" y="-1460" font-family="Helvetica,sans-Serif" font-size="10.00">+ void get(float *ptBuff,</text>
<text text-anchor="start" x="785" y="-1449" font-family="Helvetica,sans-Serif" font-size="10.00"> int iLength) const</text>
<text text-anchor="start" x="785" y="-1438" font-family="Helvetica,sans-Serif" font-size="10.00">and 7 more...</text>
<text text-anchor="start" x="785" y="-1427" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; &#160;CRingBuffer()</text>
<text text-anchor="start" x="785" y="-1416" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; &#160;CRingBuffer(const</text>
<text text-anchor="start" x="785" y="-1405" font-family="Helvetica,sans-Serif" font-size="10.00"> CRingBuffer &amp;that)</text>
<text text-anchor="start" x="785" y="-1394" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CRingBuffer &amp; operator</text>
<text text-anchor="start" x="785" y="-1383" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CRingBuffer &amp;c)</text>
<text text-anchor="start" x="785" y="-1372" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; void incIdx(int &amp;iIdx,</text>
<text text-anchor="start" x="785" y="-1361" font-family="Helvetica,sans-Serif" font-size="10.00"> int iOffset=1)</text>
<text text-anchor="middle" x="843.5" y="-1350" font-family="Helvetica,sans-Serif" font-size="10.00">}</text>
</a>
</g>
</g>
<!-- Node8&#45;&gt;Node7 -->
<g id="edge7" class="edge">
<title>Node8&#45;&gt;Node7</title>
<path fill="none" stroke="#404040" d="M843.5,-1342.89C843.5,-1290.5 843.5,-1233.52 843.5,-1182.11"/>
<polygon fill="none" stroke="#404040" points="843.5,-1181.86 839.5,-1175.86 843.5,-1169.86 847.5,-1175.86 843.5,-1181.86"/>
<text text-anchor="middle" x="877.5" y="-1317" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;m_pCRingBuff</text>
</g>
<!-- Node9 -->
<g id="node9" class="node">
<title>Node9</title>
<g id="a_node9"><a xlink:href="a00490.xhtml" target="_top" xlink:title="implement a circular buffer of type T">
<polygon fill="white" stroke="#666666" points="921,-2088 766,-2088 766,-1750 921,-1750 921,-2088"/>
<text text-anchor="middle" x="843.5" y="-2076" font-family="Helvetica,sans-Serif" font-size="10.00">{CRingBuffer&lt; T &gt;</text>
<text text-anchor="start" x="774" y="-2065" font-family="Helvetica,sans-Serif" font-size="10.00">|&#45; int m_iBuffLength</text>
<text text-anchor="start" x="774" y="-2054" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iReadIdx</text>
<text text-anchor="start" x="774" y="-2043" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iWriteIdx</text>
<text text-anchor="start" x="774" y="-2032" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; T * m_ptBuff</text>
<text text-anchor="start" x="774" y="-2021" font-family="Helvetica,sans-Serif" font-size="10.00">|+ &#160;CRingBuffer(int iBuffer</text>
<text text-anchor="start" x="774" y="-2010" font-family="Helvetica,sans-Serif" font-size="10.00">LengthInSamples)</text>
<text text-anchor="start" x="774" y="-1999" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CRingBuffer()</text>
<text text-anchor="start" x="774" y="-1988" font-family="Helvetica,sans-Serif" font-size="10.00">+ void putPostInc(T tNewValue)</text>
<text text-anchor="start" x="774" y="-1977" font-family="Helvetica,sans-Serif" font-size="10.00">+ void putPostInc(const</text>
<text text-anchor="start" x="774" y="-1966" font-family="Helvetica,sans-Serif" font-size="10.00"> T *ptNewBuff, int iLength)</text>
<text text-anchor="start" x="774" y="-1955" font-family="Helvetica,sans-Serif" font-size="10.00">+ void put(T tNewValue)</text>
<text text-anchor="start" x="774" y="-1944" font-family="Helvetica,sans-Serif" font-size="10.00">+ void put(const T *ptNewBuff,</text>
<text text-anchor="start" x="774" y="-1933" font-family="Helvetica,sans-Serif" font-size="10.00"> int iLength)</text>
<text text-anchor="start" x="774" y="-1922" font-family="Helvetica,sans-Serif" font-size="10.00">+ T getPostInc()</text>
<text text-anchor="start" x="774" y="-1911" font-family="Helvetica,sans-Serif" font-size="10.00">+ void getPostInc(T *ptBuff,</text>
<text text-anchor="start" x="774" y="-1900" font-family="Helvetica,sans-Serif" font-size="10.00"> int iLength)</text>
<text text-anchor="start" x="774" y="-1889" font-family="Helvetica,sans-Serif" font-size="10.00">+ T get(float fOffset</text>
<text text-anchor="start" x="774" y="-1878" font-family="Helvetica,sans-Serif" font-size="10.00">=0) const</text>
<text text-anchor="start" x="774" y="-1867" font-family="Helvetica,sans-Serif" font-size="10.00">+ void get(T *ptBuff,</text>
<text text-anchor="start" x="774" y="-1856" font-family="Helvetica,sans-Serif" font-size="10.00"> int iLength) const</text>
<text text-anchor="start" x="774" y="-1845" font-family="Helvetica,sans-Serif" font-size="10.00">and 7 more...</text>
<text text-anchor="start" x="774" y="-1834" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; &#160;CRingBuffer()</text>
<text text-anchor="start" x="774" y="-1823" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; &#160;CRingBuffer(const</text>
<text text-anchor="start" x="774" y="-1812" font-family="Helvetica,sans-Serif" font-size="10.00"> CRingBuffer &amp;that)</text>
<text text-anchor="start" x="774" y="-1801" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CRingBuffer &amp; operator</text>
<text text-anchor="start" x="774" y="-1790" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CRingBuffer &amp;c)</text>
<text text-anchor="start" x="774" y="-1779" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; void incIdx(int &amp;iIdx,</text>
<text text-anchor="start" x="774" y="-1768" font-family="Helvetica,sans-Serif" font-size="10.00"> int iOffset=1)</text>
<text text-anchor="middle" x="843.5" y="-1757" font-family="Helvetica,sans-Serif" font-size="10.00">}</text>
</a>
</g>
</g>
<!-- Node9&#45;&gt;Node8 -->
<g id="edge8" class="edge">
<title>Node9&#45;&gt;Node8</title>
<path fill="none" stroke="orange" d="M843.5,-1739.65C843.5,-1727.57 843.5,-1715.4 843.5,-1703.32"/>
<polygon fill="orange" stroke="orange" points="840,-1739.77 843.5,-1749.77 847,-1739.77 840,-1739.77"/>
<text text-anchor="middle" x="862" y="-1724" font-family="Helvetica,sans-Serif" font-size="10.00"> &lt; float &gt;</text>
</g>
</g>
</svg>
