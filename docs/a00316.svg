<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 4.0.0 (20220602.1335)
 -->
<!-- Title: CFeatureFromFile Pages: 1 -->
<!--zoomable 1970 -->
<svg id="main" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" onload="init(evt)">
<style type="text/css"><![CDATA[
.edge:hover path { stroke: red; }
.edge:hover polygon { stroke: red; fill: red; }
]]></style>
<script type="text/javascript"><![CDATA[
var edges = document.getElementsByTagName('g');
if (edges && edges.length) {
  for (var i=0;i<edges.length;i++) {
    if (edges[i].id.substr(0,4)=='edge') {
      edges[i].setAttribute('class','edge');
    }
  }
}
]]></script>
        <defs>
                <circle id="rim" cx="0" cy="0" r="7"/>
                <circle id="rim2" cx="0" cy="0" r="3.5"/>
                <g id="zoomPlus">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomplus.mouseover" end="zoomplus.mouseout"/>
                        </use>
                        <path d="M-4,0h8M0,-4v8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="zoomMin">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomminus.mouseover" end="zoomminus.mouseout"/>
                        </use>
                        <path d="M-4,0h8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="dirArrow">
                        <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
               <g id="resetDef">
                       <use xlink:href="#rim2" fill="#404040">
                               <set attributeName="fill" to="#808080" begin="reset.mouseover" end="reset.mouseout"/>
                       </use>
               </g>
        </defs>

<script type="text/javascript">
var viewWidth = 916;
var viewHeight = 1970;
var sectionId = 'dynsection-1';
</script>
<script xlink:href="svgpan.js"/>
<svg id="graph" class="graph">
<g id="viewport">
<title>CFeatureFromFile</title>
<polygon fill="white" stroke="transparent" points="-4,4 -4,-1966 911.5,-1966 911.5,4 -4,4"/>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title=" ">
<polygon fill="#bfbfbf" stroke="black" points="457.5,-0.5 457.5,-101.5 626.5,-101.5 626.5,-0.5 457.5,-0.5"/>
<text text-anchor="middle" x="542" y="-89.5" font-family="Helvetica,sans-Serif" font-size="10.00">CFeatureFromFile</text>
<polyline fill="none" stroke="black" points="457.5,-82.5 626.5,-82.5 "/>
<text text-anchor="middle" x="542" y="-70.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="457.5,-63.5 626.5,-63.5 "/>
<text text-anchor="start" x="465.5" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CFeatureFromFile(Feature</text>
<text text-anchor="start" x="465.5" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t eFeatureIdx, std::string</text>
<text text-anchor="start" x="465.5" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00"> strAudioFilePath, int iBlockLength,</text>
<text text-anchor="start" x="465.5" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iHopLength)</text>
<text text-anchor="start" x="465.5" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CFeatureFromFile()</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="a00466.xhtml" target="_top" xlink:title="class for computation of a magnitude Feature from either a file or a vector">
<polygon fill="white" stroke="black" points="333,-320 333,-883 547,-883 547,-320 333,-320"/>
<text text-anchor="middle" x="440" y="-871" font-family="Helvetica,sans-Serif" font-size="10.00">CFeatureIf</text>
<polyline fill="none" stroke="black" points="333,-864 547,-864 "/>
<text text-anchor="start" x="341" y="-852" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iBlockLength</text>
<text text-anchor="start" x="341" y="-841" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iHopLength</text>
<text text-anchor="start" x="341" y="-830" font-family="Helvetica,sans-Serif" font-size="10.00"># float m_fSampleRate</text>
<text text-anchor="start" x="341" y="-819" font-family="Helvetica,sans-Serif" font-size="10.00"># float * m_pfProcessBuff2</text>
<text text-anchor="start" x="341" y="-808" font-family="Helvetica,sans-Serif" font-size="10.00"># float * m_pfProcessBuff1</text>
<text text-anchor="start" x="341" y="-797" font-family="Helvetica,sans-Serif" font-size="10.00"># bool m_bIsInitialized</text>
<polyline fill="none" stroke="black" points="333,-790 547,-790 "/>
<text text-anchor="start" x="341" y="-778" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getFeatureDimensions</text>
<text text-anchor="start" x="341" y="-767" font-family="Helvetica,sans-Serif" font-size="10.00">(int &amp;iNumRows, int &amp;iNumCols) const</text>
<text text-anchor="start" x="341" y="-756" font-family="Helvetica,sans-Serif" font-size="10.00">+ float getTimeStamp</text>
<text text-anchor="start" x="341" y="-745" font-family="Helvetica,sans-Serif" font-size="10.00">(int iBlockIdx) const</text>
<text text-anchor="start" x="341" y="-734" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getTimeStamps</text>
<text text-anchor="start" x="341" y="-723" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfAxisTicks) const</text>
<text text-anchor="start" x="341" y="-712" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compFeature1Dim</text>
<text text-anchor="start" x="341" y="-701" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfFeature)</text>
<text text-anchor="start" x="341" y="-690" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compFeatureNDim</text>
<text text-anchor="start" x="341" y="-679" font-family="Helvetica,sans-Serif" font-size="10.00">(float **ppfFeature)</text>
<text text-anchor="start" x="341" y="-668" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="341" y="-657" font-family="Helvetica,sans-Serif" font-size="10.00">(CFeatureIf *&amp;pCInstance,</text>
<text text-anchor="start" x="341" y="-646" font-family="Helvetica,sans-Serif" font-size="10.00"> Feature_t eFeatureIdx,</text>
<text text-anchor="start" x="341" y="-635" font-family="Helvetica,sans-Serif" font-size="10.00"> const std::string &amp;strAudioFile</text>
<text text-anchor="start" x="341" y="-624" font-family="Helvetica,sans-Serif" font-size="10.00">Path, int iBlockLength=2048,</text>
<text text-anchor="start" x="341" y="-613" font-family="Helvetica,sans-Serif" font-size="10.00"> int iHopLength=1024)</text>
<text text-anchor="start" x="341" y="-602" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="341" y="-591" font-family="Helvetica,sans-Serif" font-size="10.00">(CFeatureIf *&amp;pCInstance,</text>
<text text-anchor="start" x="341" y="-580" font-family="Helvetica,sans-Serif" font-size="10.00"> Feature_t eFeatureIdx,</text>
<text text-anchor="start" x="341" y="-569" font-family="Helvetica,sans-Serif" font-size="10.00"> const float *pfAudio, long</text>
<text text-anchor="start" x="341" y="-558" font-family="Helvetica,sans-Serif" font-size="10.00"> long iNumFrames, float fSampleRate,</text>
<text text-anchor="start" x="341" y="-547" font-family="Helvetica,sans-Serif" font-size="10.00"> int iBlockLength=2048, int iHopLength=1024)</text>
<text text-anchor="start" x="341" y="-536" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="341" y="-525" font-family="Helvetica,sans-Serif" font-size="10.00">(CFeatureIf *&amp;pCInstance)</text>
<text text-anchor="start" x="341" y="-514" font-family="Helvetica,sans-Serif" font-size="10.00">+ static std::string</text>
<text text-anchor="start" x="341" y="-503" font-family="Helvetica,sans-Serif" font-size="10.00"> getFeatureString(Feature</text>
<text text-anchor="start" x="341" y="-492" font-family="Helvetica,sans-Serif" font-size="10.00">_t eFeatureIdx)</text>
<text text-anchor="start" x="341" y="-481" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Feature_t getFeature</text>
<text text-anchor="start" x="341" y="-470" font-family="Helvetica,sans-Serif" font-size="10.00">IdxFromString(std::string</text>
<text text-anchor="start" x="341" y="-459" font-family="Helvetica,sans-Serif" font-size="10.00"> sFeatureString)</text>
<text text-anchor="start" x="341" y="-448" font-family="Helvetica,sans-Serif" font-size="10.00"># CFeatureIf()</text>
<text text-anchor="start" x="341" y="-437" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CFeatureIf()</text>
<text text-anchor="start" x="341" y="-426" font-family="Helvetica,sans-Serif" font-size="10.00"># CFeatureIf(const CFeature</text>
<text text-anchor="start" x="341" y="-415" font-family="Helvetica,sans-Serif" font-size="10.00">If &amp;that)</text>
<text text-anchor="start" x="341" y="-404" font-family="Helvetica,sans-Serif" font-size="10.00"># CFeatureIf &amp; operator</text>
<text text-anchor="start" x="341" y="-393" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CFeatureIf &amp;c)</text>
<text text-anchor="start" x="341" y="-382" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t reset_()</text>
<text text-anchor="start" x="341" y="-371" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t init_(Feature</text>
<text text-anchor="start" x="341" y="-360" font-family="Helvetica,sans-Serif" font-size="10.00">_t eFeatureIdx)</text>
<text text-anchor="start" x="341" y="-349" font-family="Helvetica,sans-Serif" font-size="10.00"># bool isFeatureSpectral</text>
<text text-anchor="start" x="341" y="-338" font-family="Helvetica,sans-Serif" font-size="10.00">_(Feature_t eFeatureIdx)</text>
<text text-anchor="start" x="341" y="-327" font-family="Helvetica,sans-Serif" font-size="10.00"># void computeMagSpectrum_()</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M494.03,-309.98C509.03,-229.29 523.69,-150.48 532.77,-101.64"/>
<polygon fill="none" stroke="midnightblue" points="490.58,-309.35 492.2,-319.82 497.46,-310.63 490.58,-309.35"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="a00606.xhtml" target="_top" xlink:title="class for audio normalization offering three options">
<polygon fill="white" stroke="black" points="0,-1415 0,-1648 150,-1648 150,-1415 0,-1415"/>
<text text-anchor="middle" x="75" y="-1636" font-family="Helvetica,sans-Serif" font-size="10.00">CNormalizeAudio</text>
<polyline fill="none" stroke="black" points="0,-1629 150,-1629 "/>
<text text-anchor="start" x="8" y="-1617" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float m_fScaleFactor</text>
<polyline fill="none" stroke="black" points="0,-1610 150,-1610 "/>
<text text-anchor="start" x="8" y="-1598" font-family="Helvetica,sans-Serif" font-size="10.00">+ CNormalizeAudio(CAudioFile</text>
<text text-anchor="start" x="8" y="-1587" font-family="Helvetica,sans-Serif" font-size="10.00">If *pCAudioFile)</text>
<text text-anchor="start" x="8" y="-1576" font-family="Helvetica,sans-Serif" font-size="10.00">+ CNormalizeAudio(const</text>
<text text-anchor="start" x="8" y="-1565" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfAudioBuff, long</text>
<text text-anchor="start" x="8" y="-1554" font-family="Helvetica,sans-Serif" font-size="10.00"> long iAudioLength)</text>
<text text-anchor="start" x="8" y="-1543" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CNormalizeAudio()</text>
<text text-anchor="start" x="8" y="-1532" font-family="Helvetica,sans-Serif" font-size="10.00">+ void normalizeBlock</text>
<text text-anchor="start" x="8" y="-1521" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfAudioBlock,</text>
<text text-anchor="start" x="8" y="-1510" font-family="Helvetica,sans-Serif" font-size="10.00"> long long iNumSamples)</text>
<text text-anchor="start" x="8" y="-1499" font-family="Helvetica,sans-Serif" font-size="10.00">+ static void normalizeSignal</text>
<text text-anchor="start" x="8" y="-1488" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfAudio, long long</text>
<text text-anchor="start" x="8" y="-1477" font-family="Helvetica,sans-Serif" font-size="10.00"> iNumSamples)</text>
<text text-anchor="start" x="8" y="-1466" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CNormalizeAudio()</text>
<text text-anchor="start" x="8" y="-1455" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CNormalizeAudio(const</text>
<text text-anchor="start" x="8" y="-1444" font-family="Helvetica,sans-Serif" font-size="10.00"> CNormalizeAudio &amp;that)</text>
<text text-anchor="start" x="8" y="-1433" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CNormalizeAudio &amp; operator</text>
<text text-anchor="start" x="8" y="-1422" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CNormalizeAudio &amp;c)</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node2 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node2</title>
<path fill="none" stroke="#404040" d="M87.43,-1414.75C99.31,-1326.72 121.15,-1203.65 159,-1101 201.48,-985.77 268.46,-865.59 326.37,-772.11"/>
<polygon fill="none" stroke="#404040" points="326.5,-771.9 326.27,-764.69 332.84,-761.71 333.06,-768.92 326.5,-771.9"/>
<text text-anchor="middle" x="209.5" y="-1075" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCNormalize</text>
</g>
<!-- Node4 -->
<g id="node4" class="node">
<title>Node4</title>
<g id="a_node4"><a xlink:href="a00542.xhtml" target="_top" xlink:title="forward declaration">
<polygon fill="white" stroke="black" points="168,-1316 168,-1747 328,-1747 328,-1316 168,-1316"/>
<text text-anchor="middle" x="248" y="-1735" font-family="Helvetica,sans-Serif" font-size="10.00">CBlockAudioIf</text>
<polyline fill="none" stroke="black" points="168,-1728 328,-1728 "/>
<text text-anchor="start" x="176" y="-1716" font-family="Helvetica,sans-Serif" font-size="10.00"># long long m_iNumBlocks</text>
<text text-anchor="start" x="176" y="-1705" font-family="Helvetica,sans-Serif" font-size="10.00"># long long m_iCurrBlock</text>
<text text-anchor="start" x="176" y="-1694" font-family="Helvetica,sans-Serif" font-size="10.00"># long long m_iAudioLength</text>
<text text-anchor="start" x="176" y="-1683" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iBlockLength</text>
<text text-anchor="start" x="176" y="-1672" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iNumChannels</text>
<text text-anchor="start" x="176" y="-1661" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iHopLength</text>
<text text-anchor="start" x="176" y="-1650" font-family="Helvetica,sans-Serif" font-size="10.00"># float m_fSampleRate</text>
<polyline fill="none" stroke="black" points="168,-1643 328,-1643 "/>
<text text-anchor="start" x="176" y="-1631" font-family="Helvetica,sans-Serif" font-size="10.00">+ long long getNumBlocks</text>
<text text-anchor="start" x="176" y="-1620" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="176" y="-1609" font-family="Helvetica,sans-Serif" font-size="10.00">+ long long getLengthInSamples</text>
<text text-anchor="start" x="176" y="-1598" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="176" y="-1587" font-family="Helvetica,sans-Serif" font-size="10.00">+ float getTimeStamp</text>
<text text-anchor="start" x="176" y="-1576" font-family="Helvetica,sans-Serif" font-size="10.00">(long long iBlockIdx)</text>
<text text-anchor="start" x="176" y="-1565" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual bool isEndOfData</text>
<text text-anchor="start" x="176" y="-1554" font-family="Helvetica,sans-Serif" font-size="10.00">() const =0</text>
<text text-anchor="start" x="176" y="-1543" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual int getNextBlock</text>
<text text-anchor="start" x="176" y="-1532" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfBlock, float</text>
<text text-anchor="start" x="176" y="-1521" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfTimeStampInS=0)=0</text>
<text text-anchor="start" x="176" y="-1510" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="176" y="-1499" font-family="Helvetica,sans-Serif" font-size="10.00">(CBlockAudioIf *&amp;pCInstance,</text>
<text text-anchor="start" x="176" y="-1488" font-family="Helvetica,sans-Serif" font-size="10.00"> CAudioFileIf *pCAudioFile,</text>
<text text-anchor="start" x="176" y="-1477" font-family="Helvetica,sans-Serif" font-size="10.00"> int iBlockLength, int iHopLength)</text>
<text text-anchor="start" x="176" y="-1466" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="176" y="-1455" font-family="Helvetica,sans-Serif" font-size="10.00">(CBlockAudioIf *&amp;pCInstance,</text>
<text text-anchor="start" x="176" y="-1444" font-family="Helvetica,sans-Serif" font-size="10.00"> const float *pfAudioBuff,</text>
<text text-anchor="start" x="176" y="-1433" font-family="Helvetica,sans-Serif" font-size="10.00"> long long iAudioLength, int</text>
<text text-anchor="start" x="176" y="-1422" font-family="Helvetica,sans-Serif" font-size="10.00"> iBlockLength, int iHopLength,</text>
<text text-anchor="start" x="176" y="-1411" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate)</text>
<text text-anchor="start" x="176" y="-1400" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="176" y="-1389" font-family="Helvetica,sans-Serif" font-size="10.00">(CBlockAudioIf *&amp;pCInstance)</text>
<text text-anchor="start" x="176" y="-1378" font-family="Helvetica,sans-Serif" font-size="10.00"># CBlockAudioIf()</text>
<text text-anchor="start" x="176" y="-1367" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CBlockAudioIf()</text>
<text text-anchor="start" x="176" y="-1356" font-family="Helvetica,sans-Serif" font-size="10.00"># CBlockAudioIf(const</text>
<text text-anchor="start" x="176" y="-1345" font-family="Helvetica,sans-Serif" font-size="10.00"> CBlockAudioIf &amp;that)</text>
<text text-anchor="start" x="176" y="-1334" font-family="Helvetica,sans-Serif" font-size="10.00"># CBlockAudioIf &amp; operator</text>
<text text-anchor="start" x="176" y="-1323" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CBlockAudioIf &amp;c)</text>
</a>
</g>
</g>
<!-- Node4&#45;&gt;Node2 -->
<g id="edge3" class="edge">
<title>Node4&#45;&gt;Node2</title>
<path fill="none" stroke="#404040" d="M292.41,-1315.85C318.27,-1190.87 351.23,-1031.56 379.44,-895.21"/>
<polygon fill="none" stroke="#404040" points="379.46,-895.1 376.76,-888.42 381.89,-883.35 384.59,-890.04 379.46,-895.1"/>
<text text-anchor="middle" x="383.5" y="-1075" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCBlockAudio</text>
</g>
<!-- Node5 -->
<g id="node5" class="node">
<title>Node5</title>
<g id="a_node5"><a xlink:href="a00470.xhtml" target="_top" xlink:title="class for computation of a feature from a block of data (e.g., time or magnitude spectrum)">
<polygon fill="white" stroke="black" points="346,-1101.5 346,-1961.5 534,-1961.5 534,-1101.5 346,-1101.5"/>
<text text-anchor="middle" x="440" y="-1949.5" font-family="Helvetica,sans-Serif" font-size="10.00">CFeatureFromBlockIf</text>
<polyline fill="none" stroke="black" points="346,-1942.5 534,-1942.5 "/>
<text text-anchor="start" x="354" y="-1930.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static const float</text>
<text text-anchor="start" x="354" y="-1919.5" font-family="Helvetica,sans-Serif" font-size="10.00"> m_kfFloatThresh</text>
<text text-anchor="start" x="354" y="-1908.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CFeatureIf::Feature</text>
<text text-anchor="start" x="354" y="-1897.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t m_eFeatureIdx</text>
<text text-anchor="start" x="354" y="-1886.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iDataLength</text>
<text text-anchor="start" x="354" y="-1875.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float m_fSampleRate</text>
<text text-anchor="start" x="354" y="-1864.5" font-family="Helvetica,sans-Serif" font-size="10.00"># const std::map&lt; CFeature</text>
<text text-anchor="start" x="354" y="-1853.5" font-family="Helvetica,sans-Serif" font-size="10.00">If::Feature_t, std::function</text>
<text text-anchor="start" x="354" y="-1842.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; float(const float *, int,</text>
<text text-anchor="start" x="354" y="-1831.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float)&gt; &gt; m_DispatchMap</text>
<polyline fill="none" stroke="black" points="346,-1824.5 534,-1824.5 "/>
<text text-anchor="start" x="354" y="-1812.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual int getFeatureDimensions</text>
<text text-anchor="start" x="354" y="-1801.5" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="354" y="-1790.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CFeatureIf::Feature</text>
<text text-anchor="start" x="354" y="-1779.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t getFeatureIdx() const</text>
<text text-anchor="start" x="354" y="-1768.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Error_t compFeature</text>
<text text-anchor="start" x="354" y="-1757.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfFeature, const</text>
<text text-anchor="start" x="354" y="-1746.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfInput)</text>
<text text-anchor="start" x="354" y="-1735.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual bool hasAdditional</text>
<text text-anchor="start" x="354" y="-1724.5" font-family="Helvetica,sans-Serif" font-size="10.00">Param() const</text>
<text text-anchor="start" x="354" y="-1713.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Error_t setAdditional</text>
<text text-anchor="start" x="354" y="-1702.5" font-family="Helvetica,sans-Serif" font-size="10.00">Param(float fParamValue)</text>
<text text-anchor="start" x="354" y="-1691.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="354" y="-1680.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CFeatureFromBlockIf</text>
<text text-anchor="start" x="354" y="-1669.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *&amp;pCInstance, CFeatureIf</text>
<text text-anchor="start" x="354" y="-1658.5" font-family="Helvetica,sans-Serif" font-size="10.00">::Feature_t eFeatureIdx,</text>
<text text-anchor="start" x="354" y="-1647.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="354" y="-1636.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="354" y="-1625.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CFeatureFromBlockIf *&amp;pCInstance)</text>
<text text-anchor="start" x="354" y="-1614.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="354" y="-1603.5" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralCentroid(const</text>
<text text-anchor="start" x="354" y="-1592.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfMagSpec, int</text>
<text text-anchor="start" x="354" y="-1581.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="354" y="-1570.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="354" y="-1559.5" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralCrestFactor(const</text>
<text text-anchor="start" x="354" y="-1548.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfMagSpec, int iDataLength,</text>
<text text-anchor="start" x="354" y="-1537.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate=1.F)</text>
<text text-anchor="start" x="354" y="-1526.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="354" y="-1515.5" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralDecrease(const</text>
<text text-anchor="start" x="354" y="-1504.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfMagSpec, int</text>
<text text-anchor="start" x="354" y="-1493.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="354" y="-1482.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="354" y="-1471.5" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralFlatness(const</text>
<text text-anchor="start" x="354" y="-1460.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfMagSpec, int</text>
<text text-anchor="start" x="354" y="-1449.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="354" y="-1438.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="354" y="-1427.5" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralFlux(const float</text>
<text text-anchor="start" x="354" y="-1416.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfMagSpec, const float</text>
<text text-anchor="start" x="354" y="-1405.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfPrevSpec, int iDataLength,</text>
<text text-anchor="start" x="354" y="-1394.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate=1.F)</text>
<text text-anchor="start" x="354" y="-1383.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="354" y="-1372.5" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralKurtosis(const</text>
<text text-anchor="start" x="354" y="-1361.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfMagSpec, int</text>
<text text-anchor="start" x="354" y="-1350.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="354" y="-1339.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="354" y="-1328.5" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralRolloff(const</text>
<text text-anchor="start" x="354" y="-1317.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfMagSpec, int</text>
<text text-anchor="start" x="354" y="-1306.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iDataLength, float fSampleRate</text>
<text text-anchor="start" x="354" y="-1295.5" font-family="Helvetica,sans-Serif" font-size="10.00">=1.F, float fKappa=.85F)</text>
<text text-anchor="start" x="354" y="-1284.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="354" y="-1273.5" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralSkewness(const</text>
<text text-anchor="start" x="354" y="-1262.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfMagSpec, int</text>
<text text-anchor="start" x="354" y="-1251.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="354" y="-1240.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 8 more...</text>
<text text-anchor="start" x="354" y="-1229.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CFeatureFromBlockIf()</text>
<text text-anchor="start" x="354" y="-1218.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CFeatureFromBlockIf</text>
<text text-anchor="start" x="354" y="-1207.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CFeatureIf::Feature</text>
<text text-anchor="start" x="354" y="-1196.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t eFeatureIdx, int iDataLength,</text>
<text text-anchor="start" x="354" y="-1185.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate)</text>
<text text-anchor="start" x="354" y="-1174.5" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CFeatureFromBlockIf()</text>
<text text-anchor="start" x="354" y="-1163.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CFeatureFromBlockIf</text>
<text text-anchor="start" x="354" y="-1152.5" font-family="Helvetica,sans-Serif" font-size="10.00">(const CFeatureFromBlockIf</text>
<text text-anchor="start" x="354" y="-1141.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;that)</text>
<text text-anchor="start" x="354" y="-1130.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CFeatureFromBlockIf</text>
<text text-anchor="start" x="354" y="-1119.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp; operator=(const CFeature</text>
<text text-anchor="start" x="354" y="-1108.5" font-family="Helvetica,sans-Serif" font-size="10.00">FromBlockIf &amp;c)</text>
</a>
</g>
</g>
<!-- Node5&#45;&gt;Node2 -->
<g id="edge4" class="edge">
<title>Node5&#45;&gt;Node2</title>
<path fill="none" stroke="#404040" d="M440,-1101.47C440,-1031.76 440,-960.98 440,-895.49"/>
<polygon fill="none" stroke="#404040" points="440,-895.33 436,-889.33 440,-883.33 444,-889.33 440,-895.33"/>
<text text-anchor="middle" x="473.5" y="-1075" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCFeature</text>
</g>
<!-- Node6 -->
<g id="node6" class="node">
<title>Node6</title>
<g id="a_node6"><a xlink:href="a00474.xhtml" target="_top" xlink:title="class for FFT computation with windowing">
<polygon fill="white" stroke="black" points="552,-1288.5 552,-1774.5 740,-1774.5 740,-1288.5 552,-1288.5"/>
<text text-anchor="middle" x="646" y="-1762.5" font-family="Helvetica,sans-Serif" font-size="10.00">CFft</text>
<polyline fill="none" stroke="black" points="552,-1755.5 740,-1755.5 "/>
<text text-anchor="start" x="560" y="-1743.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_pfProcessBuff</text>
<text text-anchor="start" x="560" y="-1732.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_pfWindowBuff</text>
<text text-anchor="start" x="560" y="-1721.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iDataLength</text>
<text text-anchor="start" x="560" y="-1710.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iFftLength</text>
<text text-anchor="start" x="560" y="-1699.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Windowing_t m_ePrePostWindowOpt</text>
<text text-anchor="start" x="560" y="-1688.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; bool m_bIsInitialized</text>
<text text-anchor="start" x="560" y="-1677.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; static const float m_Pi</text>
<text text-anchor="start" x="560" y="-1666.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; static const float</text>
<text text-anchor="start" x="560" y="-1655.5" font-family="Helvetica,sans-Serif" font-size="10.00"> m_Pi2</text>
<polyline fill="none" stroke="black" points="552,-1648.5 740,-1648.5 "/>
<text text-anchor="start" x="560" y="-1636.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CFft()</text>
<text text-anchor="start" x="560" y="-1625.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CFft()</text>
<text text-anchor="start" x="560" y="-1614.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t init(int iBlockLength,</text>
<text text-anchor="start" x="560" y="-1603.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iZeroPadFactor=1, WindowFunction</text>
<text text-anchor="start" x="560" y="-1592.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t eWindow=kWindowHann, Windowing</text>
<text text-anchor="start" x="560" y="-1581.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t eWindowing=kPreWindow)</text>
<text text-anchor="start" x="560" y="-1570.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t reset()</text>
<text text-anchor="start" x="560" y="-1559.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t overrideWindow</text>
<text text-anchor="start" x="560" y="-1548.5" font-family="Helvetica,sans-Serif" font-size="10.00">(const float *pfNewWindow)</text>
<text text-anchor="start" x="560" y="-1537.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getWindow(float</text>
<text text-anchor="start" x="560" y="-1526.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfWindow) const</text>
<text text-anchor="start" x="560" y="-1515.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compFft(complex</text>
<text text-anchor="start" x="560" y="-1504.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t *pfSpectrum, const</text>
<text text-anchor="start" x="560" y="-1493.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfInput)</text>
<text text-anchor="start" x="560" y="-1482.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compInvFft</text>
<text text-anchor="start" x="560" y="-1471.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfOutput, const</text>
<text text-anchor="start" x="560" y="-1460.5" font-family="Helvetica,sans-Serif" font-size="10.00"> complex_t *pfSpectrum)</text>
<text text-anchor="start" x="560" y="-1449.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getMagnitude</text>
<text text-anchor="start" x="560" y="-1438.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfMag, const</text>
<text text-anchor="start" x="560" y="-1427.5" font-family="Helvetica,sans-Serif" font-size="10.00"> complex_t *pfSpectrum)</text>
<text text-anchor="start" x="560" y="-1416.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const</text>
<text text-anchor="start" x="560" y="-1405.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getPhase(float</text>
<text text-anchor="start" x="560" y="-1394.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfPhase, const complex</text>
<text text-anchor="start" x="560" y="-1383.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t *pfSpectrum) const</text>
<text text-anchor="start" x="560" y="-1372.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 7 more...</text>
<text text-anchor="start" x="560" y="-1361.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CFft(const CFft &amp;that)</text>
<text text-anchor="start" x="560" y="-1350.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CFft &amp; operator=(const</text>
<text text-anchor="start" x="560" y="-1339.5" font-family="Helvetica,sans-Serif" font-size="10.00"> CFft &amp;c)</text>
<text text-anchor="start" x="560" y="-1328.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Error_t allocMemory_()</text>
<text text-anchor="start" x="560" y="-1317.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Error_t freeMemory_()</text>
<text text-anchor="start" x="560" y="-1306.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Error_t computeWindow</text>
<text text-anchor="start" x="560" y="-1295.5" font-family="Helvetica,sans-Serif" font-size="10.00">_(WindowFunction_t eWindow)</text>
</a>
</g>
</g>
<!-- Node6&#45;&gt;Node2 -->
<g id="edge5" class="edge">
<title>Node6&#45;&gt;Node2</title>
<path fill="none" stroke="#404040" d="M592.28,-1288.5C565.55,-1168.07 533.02,-1021.53 504.9,-894.87"/>
<polygon fill="none" stroke="#404040" points="504.88,-894.78 499.68,-889.79 502.28,-883.06 507.49,-888.05 504.88,-894.78"/>
<text text-anchor="middle" x="570" y="-1075" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCFft</text>
</g>
<!-- Node7 -->
<g id="node7" class="node">
<title>Node7</title>
<g id="a_node7"><a xlink:href="a00442.xhtml" target="_top" xlink:title="open, read, and write audio files">
<polygon fill="white" stroke="black" points="658,-149.5 658,-1053.5 820,-1053.5 820,-149.5 658,-149.5"/>
<text text-anchor="middle" x="739" y="-1041.5" font-family="Helvetica,sans-Serif" font-size="10.00">CAudioFileIf</text>
<polyline fill="none" stroke="black" points="658,-1034.5 820,-1034.5 "/>
<text text-anchor="start" x="666" y="-1022.5" font-family="Helvetica,sans-Serif" font-size="10.00"># static const long long</text>
<text text-anchor="start" x="666" y="-1011.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int m_kiDefBlockLength</text>
<text text-anchor="start" x="666" y="-1000.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; FileIoType_t m_eIoType</text>
<text text-anchor="start" x="666" y="-989.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; bool m_bWithClipping</text>
<text text-anchor="start" x="666" y="-978.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; bool m_bIsInitialized</text>
<text text-anchor="start" x="666" y="-967.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iNumBytesPerSample</text>
<polyline fill="none" stroke="black" points="658,-960.5 820,-960.5 "/>
<text text-anchor="start" x="666" y="-948.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Error_t reset</text>
<text text-anchor="start" x="666" y="-937.5" font-family="Helvetica,sans-Serif" font-size="10.00">(bool bFreeMemory=false)</text>
<text text-anchor="start" x="666" y="-926.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Error_t openFile</text>
<text text-anchor="start" x="666" y="-915.5" font-family="Helvetica,sans-Serif" font-size="10.00">(std::string cAudioFileName,</text>
<text text-anchor="start" x="666" y="-904.5" font-family="Helvetica,sans-Serif" font-size="10.00"> FileIoType_t eIoType, FileSpec</text>
<text text-anchor="start" x="666" y="-893.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t const *psFileSpec=0)=0</text>
<text text-anchor="start" x="666" y="-882.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Error_t closeFile()=0</text>
<text text-anchor="start" x="666" y="-871.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Error_t readData</text>
<text text-anchor="start" x="666" y="-860.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float **ppfAudioData,</text>
<text text-anchor="start" x="666" y="-849.5" font-family="Helvetica,sans-Serif" font-size="10.00"> long long int &amp;iNumFrames)</text>
<text text-anchor="start" x="666" y="-838.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Error_t writeData</text>
<text text-anchor="start" x="666" y="-827.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float **ppfAudioData,</text>
<text text-anchor="start" x="666" y="-816.5" font-family="Helvetica,sans-Serif" font-size="10.00"> long long int iNumFrames)</text>
<text text-anchor="start" x="666" y="-805.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getFileSpec</text>
<text text-anchor="start" x="666" y="-794.5" font-family="Helvetica,sans-Serif" font-size="10.00">(FileSpec_t &amp;sFileSpec)</text>
<text text-anchor="start" x="666" y="-783.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Error_t setPosition</text>
<text text-anchor="start" x="666" y="-772.5" font-family="Helvetica,sans-Serif" font-size="10.00">(long long iFrame=0)</text>
<text text-anchor="start" x="666" y="-761.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t setPosition</text>
<text text-anchor="start" x="666" y="-750.5" font-family="Helvetica,sans-Serif" font-size="10.00">(double dTimeInS=.0)</text>
<text text-anchor="start" x="666" y="-739.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t setClippingEnabled</text>
<text text-anchor="start" x="666" y="-728.5" font-family="Helvetica,sans-Serif" font-size="10.00">(bool bisEnabled=true)</text>
<text text-anchor="start" x="666" y="-717.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ bool isClippingEnabled()</text>
<text text-anchor="start" x="666" y="-706.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 7 more...</text>
<text text-anchor="start" x="666" y="-695.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="666" y="-684.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CAudioFileIf *&amp;pCInstance)</text>
<text text-anchor="start" x="666" y="-673.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="666" y="-662.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CAudioFileIf *&amp;pCInstance)</text>
<text text-anchor="start" x="666" y="-651.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CAudioFileIf()</text>
<text text-anchor="start" x="666" y="-640.5" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CAudioFileIf()</text>
<text text-anchor="start" x="666" y="-629.5" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual Error_t freeMemory_()</text>
<text text-anchor="start" x="666" y="-618.5" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual Error_t allocMemory_()</text>
<text text-anchor="start" x="666" y="-607.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t setInitialized</text>
<text text-anchor="start" x="666" y="-596.5" font-family="Helvetica,sans-Serif" font-size="10.00">_(bool bInitialized=true)</text>
<text text-anchor="start" x="666" y="-585.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t setIoType_</text>
<text text-anchor="start" x="666" y="-574.5" font-family="Helvetica,sans-Serif" font-size="10.00">(FileIoType_t eIoType)</text>
<text text-anchor="start" x="666" y="-563.5" font-family="Helvetica,sans-Serif" font-size="10.00"># FileIoType_t getIoType</text>
<text text-anchor="start" x="666" y="-552.5" font-family="Helvetica,sans-Serif" font-size="10.00">_() const</text>
<text text-anchor="start" x="666" y="-541.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t setFileSpec</text>
<text text-anchor="start" x="666" y="-530.5" font-family="Helvetica,sans-Serif" font-size="10.00">_(const FileSpec_t *pFileSpec)</text>
<text text-anchor="start" x="666" y="-519.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int getNumChannels</text>
<text text-anchor="start" x="666" y="-508.5" font-family="Helvetica,sans-Serif" font-size="10.00">_() const</text>
<text text-anchor="start" x="666" y="-497.5" font-family="Helvetica,sans-Serif" font-size="10.00"># long long convFrames2Bytes</text>
<text text-anchor="start" x="666" y="-486.5" font-family="Helvetica,sans-Serif" font-size="10.00">_(long long iNumFrames)</text>
<text text-anchor="start" x="666" y="-475.5" font-family="Helvetica,sans-Serif" font-size="10.00"># long long convBytes2Frames</text>
<text text-anchor="start" x="666" y="-464.5" font-family="Helvetica,sans-Serif" font-size="10.00">_(long long iNumFrames)</text>
<text text-anchor="start" x="666" y="-453.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t setNumBytesPerSample</text>
<text text-anchor="start" x="666" y="-442.5" font-family="Helvetica,sans-Serif" font-size="10.00">_(int iNumBytes)</text>
<text text-anchor="start" x="666" y="-431.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int getNumBytesPerSample</text>
<text text-anchor="start" x="666" y="-420.5" font-family="Helvetica,sans-Serif" font-size="10.00">_() const</text>
<text text-anchor="start" x="666" y="-409.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int getNumBitsPerSample</text>
<text text-anchor="start" x="666" y="-398.5" font-family="Helvetica,sans-Serif" font-size="10.00">_() const</text>
<text text-anchor="start" x="666" y="-387.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float clip2Range_(float</text>
<text text-anchor="start" x="666" y="-376.5" font-family="Helvetica,sans-Serif" font-size="10.00"> fSample2Clip, float fMin,</text>
<text text-anchor="start" x="666" y="-365.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float fMax)</text>
<text text-anchor="start" x="666" y="-354.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CAudioFileIf(const</text>
<text text-anchor="start" x="666" y="-343.5" font-family="Helvetica,sans-Serif" font-size="10.00"> CAudioFileIf &amp;that)</text>
<text text-anchor="start" x="666" y="-332.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CAudioFileIf &amp; operator</text>
<text text-anchor="start" x="666" y="-321.5" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CAudioFileIf &amp;c)</text>
<text text-anchor="start" x="666" y="-310.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; virtual Error_t initDefaults_()</text>
<text text-anchor="start" x="666" y="-299.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; virtual long long int</text>
<text text-anchor="start" x="666" y="-288.5" font-family="Helvetica,sans-Serif" font-size="10.00"> readDataIntern_(float</text>
<text text-anchor="start" x="666" y="-277.5" font-family="Helvetica,sans-Serif" font-size="10.00"> **ppfAudioData, long long</text>
<text text-anchor="start" x="666" y="-266.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iLength)=0</text>
<text text-anchor="start" x="666" y="-255.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; virtual long long int</text>
<text text-anchor="start" x="666" y="-244.5" font-family="Helvetica,sans-Serif" font-size="10.00"> writeDataIntern_(float</text>
<text text-anchor="start" x="666" y="-233.5" font-family="Helvetica,sans-Serif" font-size="10.00"> **ppfAudioData, long long</text>
<text text-anchor="start" x="666" y="-222.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iLength)=0</text>
<text text-anchor="start" x="666" y="-211.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; virtual long long getLength</text>
<text text-anchor="start" x="666" y="-200.5" font-family="Helvetica,sans-Serif" font-size="10.00">Intern_()=0</text>
<text text-anchor="start" x="666" y="-189.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; virtual long long getPosition</text>
<text text-anchor="start" x="666" y="-178.5" font-family="Helvetica,sans-Serif" font-size="10.00">Intern_()=0</text>
<text text-anchor="start" x="666" y="-167.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; virtual Error_t setPosition</text>
<text text-anchor="start" x="666" y="-156.5" font-family="Helvetica,sans-Serif" font-size="10.00">Intern_(long long iFrame)=0</text>
</a>
</g>
</g>
<!-- Node7&#45;&gt;Node1 -->
<g id="edge6" class="edge">
<title>Node7&#45;&gt;Node1</title>
<path fill="none" stroke="#404040" d="M657.88,-374.63C623.73,-279.56 586.71,-176.48 563.93,-113.06"/>
<polygon fill="none" stroke="#404040" points="563.9,-112.98 558.11,-108.68 559.85,-101.69 565.64,-105.98 563.9,-112.98"/>
<text text-anchor="middle" x="605" y="-123" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;m_pCAudioFile</text>
</g>
<!-- Node8 -->
<g id="node8" class="node">
<title>Node8</title>
<g id="a_node8"><a xlink:href="a00446.xhtml" target="_top" xlink:title=" ">
<polygon fill="white" stroke="black" points="758.5,-1486.5 758.5,-1576.5 907.5,-1576.5 907.5,-1486.5 758.5,-1486.5"/>
<text text-anchor="middle" x="833" y="-1564.5" font-family="Helvetica,sans-Serif" font-size="10.00">CAudioFileIf::FileSpec_t</text>
<polyline fill="none" stroke="black" points="758.5,-1557.5 907.5,-1557.5 "/>
<text text-anchor="start" x="766.5" y="-1545.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FileFormat_t eFormat</text>
<text text-anchor="start" x="766.5" y="-1534.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ BitStream_t eBitStreamType</text>
<text text-anchor="start" x="766.5" y="-1523.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ int iNumChannels</text>
<text text-anchor="start" x="766.5" y="-1512.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ float fSampleRateInHz</text>
<polyline fill="none" stroke="black" points="758.5,-1505.5 907.5,-1505.5 "/>
<text text-anchor="middle" x="833" y="-1493.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
</a>
</g>
</g>
<!-- Node8&#45;&gt;Node7 -->
<g id="edge7" class="edge">
<title>Node8&#45;&gt;Node7</title>
<path fill="none" stroke="#404040" d="M828.53,-1486.36C820.59,-1408.02 803.24,-1236.71 785.91,-1065.58"/>
<polygon fill="none" stroke="#404040" points="785.89,-1065.46 781.31,-1059.89 784.69,-1053.52 789.27,-1059.09 785.89,-1065.46"/>
<text text-anchor="middle" x="825" y="-1075" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;m_CurrFileSpec</text>
</g>
</g>
</svg>
        <g id="navigator" transform="translate(0 0)" fill="#404254">
                <rect fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width=".5" x="0" y="0" width="60" height="60"/>
                <use id="zoomplus" xlink:href="#zoomPlus" x="17" y="9" onmousedown="handleZoom(evt,'in')"/>
                <use id="zoomminus" xlink:href="#zoomMin" x="42" y="9" onmousedown="handleZoom(evt,'out')"/>
                <use id="reset" xlink:href="#resetDef" x="30" y="36" onmousedown="handleReset()"/>
                <g id="arrowUp" xlink:href="#dirArrow" transform="translate(30 24)" onmousedown="handlePan(0,-1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowUp.mouseover" end="arrowUp.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowRight" xlink:href="#dirArrow" transform="rotate(90) translate(36 -43)" onmousedown="handlePan(1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowRight.mouseover" end="arrowRight.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowDown" xlink:href="#dirArrow" transform="rotate(180) translate(-30 -48)" onmousedown="handlePan(0,1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowDown.mouseover" end="arrowDown.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowLeft" xlink:href="#dirArrow" transform="rotate(270) translate(-36 17)" onmousedown="handlePan(-1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowLeft.mouseover" end="arrowLeft.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
        </g>
        <svg viewBox="0 0 15 15" width="100%" height="30px" preserveAspectRatio="xMaxYMin meet">
         <g id="arrow_out" transform="scale(0.3 0.3)">
          <a xlink:href="a00316_org.svg" target="_base">
           <rect id="button" ry="5" rx="5" y="6" x="6" height="38" width="38"
                fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width="1.0"/>
           <path id="arrow"
             d="M 11.500037,31.436501 C 11.940474,20.09759 22.043105,11.32322 32.158766,21.979434 L 37.068811,17.246167 C 37.068811,17.246167 37.088388,32 37.088388,32 L 22.160133,31.978069 C 22.160133,31.978069 26.997745,27.140456 26.997745,27.140456 C 18.528582,18.264221 13.291696,25.230495 11.500037,31.436501 z"
             style="fill:#404040;"/>
          </a>
         </g>
        </svg>
</svg>
