<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 4.0.0 (20220602.1335)
 -->
<!-- Title: CGmmClassifier Pages: 1 -->
<svg width="412pt" height="952pt"
 viewBox="0.00 0.00 412.00 952.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 948)">
<title>CGmmClassifier</title>
<polygon fill="white" stroke="transparent" points="-4,4 -4,-948 408,-948 408,4 -4,4"/>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="computation of k nearest neighbor">
<polygon fill="#bfbfbf" stroke="black" points="104.5,-0.5 104.5,-376.5 320.5,-376.5 320.5,-0.5 104.5,-0.5"/>
<text text-anchor="middle" x="212.5" y="-364.5" font-family="Helvetica,sans-Serif" font-size="10.00">CGmmClassifier</text>
<polyline fill="none" stroke="black" points="104.5,-357.5 320.5,-357.5 "/>
<text text-anchor="start" x="112.5" y="-345.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iNumFeatures</text>
<text text-anchor="start" x="112.5" y="-334.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iNumObs</text>
<text text-anchor="start" x="112.5" y="-323.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iNumClasses</text>
<text text-anchor="start" x="112.5" y="-312.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iK</text>
<text text-anchor="start" x="112.5" y="-301.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int * m_piClassLabels</text>
<text text-anchor="start" x="112.5" y="-290.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_pfQuery</text>
<text text-anchor="start" x="112.5" y="-279.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; bool m_bIsInitialized</text>
<polyline fill="none" stroke="black" points="104.5,-272.5 320.5,-272.5 "/>
<text text-anchor="start" x="112.5" y="-260.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CGmmClassifier(void)</text>
<text text-anchor="start" x="112.5" y="-249.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CGmmClassifier</text>
<text text-anchor="start" x="112.5" y="-238.5" font-family="Helvetica,sans-Serif" font-size="10.00">(void)</text>
<text text-anchor="start" x="112.5" y="-227.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t init(int iNumFeatures,</text>
<text text-anchor="start" x="112.5" y="-216.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iNumObservations) override</text>
<text text-anchor="start" x="112.5" y="-205.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t train(float</text>
<text text-anchor="start" x="112.5" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10.00"> **ppfTrainFeatures,</text>
<text text-anchor="start" x="112.5" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const int *piTrainClassIndices,</text>
<text text-anchor="start" x="112.5" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00"> CClassifierBase::Normalization</text>
<text text-anchor="start" x="112.5" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t eNorm=CClassifierBase::kNoNormalization)</text>
<text text-anchor="start" x="112.5" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00"> override</text>
<text text-anchor="start" x="112.5" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t reset() override</text>
<text text-anchor="start" x="112.5" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t setNumMixtures</text>
<text text-anchor="start" x="112.5" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00">(int iK=3)</text>
<text text-anchor="start" x="112.5" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ int getNumMixtures</text>
<text text-anchor="start" x="112.5" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="112.5" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ int classify(const</text>
<text text-anchor="start" x="112.5" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfQuery) override</text>
<text text-anchor="start" x="112.5" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CGmmClassifier(const</text>
<text text-anchor="start" x="112.5" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00"> CGmmClassifier &amp;that)</text>
<text text-anchor="start" x="112.5" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CGmmClassifier &amp; operator</text>
<text text-anchor="start" x="112.5" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CGmmClassifier &amp;c)</text>
<text text-anchor="start" x="112.5" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int countClasses(const</text>
<text text-anchor="start" x="112.5" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int *piClassLabels)</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="a00474.xhtml" target="_top" xlink:title="abstract base class for traditional classifiers">
<polygon fill="white" stroke="black" points="0,-551 0,-817 215,-817 215,-551 0,-551"/>
<text text-anchor="middle" x="107.5" y="-805" font-family="Helvetica,sans-Serif" font-size="10.00">CClassifierBase</text>
<polyline fill="none" stroke="black" points="0,-798 215,-798 "/>
<text text-anchor="start" x="8" y="-786" font-family="Helvetica,sans-Serif" font-size="10.00">+ static const int kIllegal</text>
<text text-anchor="start" x="8" y="-775" font-family="Helvetica,sans-Serif" font-size="10.00">ClassLabel</text>
<text text-anchor="start" x="8" y="-764" font-family="Helvetica,sans-Serif" font-size="10.00"># float * m_pfNormScale</text>
<text text-anchor="start" x="8" y="-753" font-family="Helvetica,sans-Serif" font-size="10.00"># float * m_pfNormSub</text>
<polyline fill="none" stroke="black" points="0,-746 215,-746 "/>
<text text-anchor="start" x="8" y="-734" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Error_t init</text>
<text text-anchor="start" x="8" y="-723" font-family="Helvetica,sans-Serif" font-size="10.00">(int iNumFeatures, int</text>
<text text-anchor="start" x="8" y="-712" font-family="Helvetica,sans-Serif" font-size="10.00"> iNumObservations)=0</text>
<text text-anchor="start" x="8" y="-701" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Error_t train</text>
<text text-anchor="start" x="8" y="-690" font-family="Helvetica,sans-Serif" font-size="10.00">(float **ppfTrainFeatures,</text>
<text text-anchor="start" x="8" y="-679" font-family="Helvetica,sans-Serif" font-size="10.00"> const int *piTrainClassIndices,</text>
<text text-anchor="start" x="8" y="-668" font-family="Helvetica,sans-Serif" font-size="10.00"> Normalization_t eNorm=kNoNormalization)=0</text>
<text text-anchor="start" x="8" y="-657" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Error_t reset()=0</text>
<text text-anchor="start" x="8" y="-646" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual int classify</text>
<text text-anchor="start" x="8" y="-635" font-family="Helvetica,sans-Serif" font-size="10.00">(const float *pfQuery)=0</text>
<text text-anchor="start" x="8" y="-624" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CClassifierBase()</text>
<text text-anchor="start" x="8" y="-613" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual void compNormConstants</text>
<text text-anchor="start" x="8" y="-602" font-family="Helvetica,sans-Serif" font-size="10.00">(float **ppfTrainFeatures,</text>
<text text-anchor="start" x="8" y="-591" font-family="Helvetica,sans-Serif" font-size="10.00"> int iNumFeatures, int iNumObs,</text>
<text text-anchor="start" x="8" y="-580" font-family="Helvetica,sans-Serif" font-size="10.00"> Normalization_t eNorm)</text>
<text text-anchor="start" x="8" y="-569" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual void normalizeVector</text>
<text text-anchor="start" x="8" y="-558" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfQuery, int iNumFeatures)</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M137.72,-540.96C148.61,-489.8 161.06,-431.27 172.64,-376.85"/>
<polygon fill="none" stroke="midnightblue" points="134.3,-540.24 135.64,-550.75 141.14,-541.7 134.3,-540.24"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="a00574.xhtml" target="_top" xlink:title=" ">
<polygon fill="white" stroke="black" points="233,-424.5 233,-943.5 404,-943.5 404,-424.5 233,-424.5"/>
<text text-anchor="middle" x="318.5" y="-931.5" font-family="Helvetica,sans-Serif" font-size="10.00">CGmmResult</text>
<polyline fill="none" stroke="black" points="233,-924.5 404,-924.5 "/>
<text text-anchor="start" x="241" y="-912.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float ** m_ppfMu</text>
<text text-anchor="start" x="241" y="-901.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_pfPrior</text>
<text text-anchor="start" x="241" y="-890.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float *** m_apppfSigma</text>
<text text-anchor="start" x="241" y="-879.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_apfProc</text>
<text text-anchor="start" x="241" y="-868.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iK</text>
<text text-anchor="start" x="241" y="-857.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iNumFeatures</text>
<text text-anchor="start" x="241" y="-846.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; bool m_bIsInitialized</text>
<polyline fill="none" stroke="black" points="233,-839.5 404,-839.5 "/>
<text text-anchor="start" x="241" y="-827.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CGmmResult()</text>
<text text-anchor="start" x="241" y="-816.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CGmmResult</text>
<text text-anchor="start" x="241" y="-805.5" font-family="Helvetica,sans-Serif" font-size="10.00">(void)</text>
<text text-anchor="start" x="241" y="-794.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CGmmResult(const CGmmResult</text>
<text text-anchor="start" x="241" y="-783.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;that)</text>
<text text-anchor="start" x="241" y="-772.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ int getNumGaussians</text>
<text text-anchor="start" x="241" y="-761.5" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="241" y="-750.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ int getNumDimensions</text>
<text text-anchor="start" x="241" y="-739.5" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="241" y="-728.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ float getMu(int iGaussian</text>
<text text-anchor="start" x="241" y="-717.5" font-family="Helvetica,sans-Serif" font-size="10.00">Idx, int iFeatureIdx) const</text>
<text text-anchor="start" x="241" y="-706.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ float getPrior(int</text>
<text text-anchor="start" x="241" y="-695.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iGaussianIdx) const</text>
<text text-anchor="start" x="241" y="-684.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ float getSigma(int</text>
<text text-anchor="start" x="241" y="-673.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iGaussianIdx, int iRowIdx,</text>
<text text-anchor="start" x="241" y="-662.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iColIdx) const</text>
<text text-anchor="start" x="241" y="-651.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void getSigma(float</text>
<text text-anchor="start" x="241" y="-640.5" font-family="Helvetica,sans-Serif" font-size="10.00"> **ppfSigma, int iGaussian</text>
<text text-anchor="start" x="241" y="-629.5" font-family="Helvetica,sans-Serif" font-size="10.00">Idx) const</text>
<text text-anchor="start" x="241" y="-618.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ float getProb(const</text>
<text text-anchor="start" x="241" y="-607.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfQuery)</text>
<text text-anchor="start" x="241" y="-596.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ bool isInitialized</text>
<text text-anchor="start" x="241" y="-585.5" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="241" y="-574.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CGmmResult &amp; operator</text>
<text text-anchor="start" x="241" y="-563.5" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CGmmResult &amp;that)</text>
<text text-anchor="start" x="241" y="-552.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t init(int iK,</text>
<text text-anchor="start" x="241" y="-541.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iNumFeatures)</text>
<text text-anchor="start" x="241" y="-530.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t reset()</text>
<text text-anchor="start" x="241" y="-519.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t setMu(int iGaussian</text>
<text text-anchor="start" x="241" y="-508.5" font-family="Helvetica,sans-Serif" font-size="10.00">Idx, int iFeatureIdx, float</text>
<text text-anchor="start" x="241" y="-497.5" font-family="Helvetica,sans-Serif" font-size="10.00"> fParamValue)</text>
<text text-anchor="start" x="241" y="-486.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t setPrior(int</text>
<text text-anchor="start" x="241" y="-475.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iGaussianIdx, float</text>
<text text-anchor="start" x="241" y="-464.5" font-family="Helvetica,sans-Serif" font-size="10.00"> fParamValue)</text>
<text text-anchor="start" x="241" y="-453.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t setSigma(int</text>
<text text-anchor="start" x="241" y="-442.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iGaussianIdx, float</text>
<text text-anchor="start" x="241" y="-431.5" font-family="Helvetica,sans-Serif" font-size="10.00"> **ppfSigma)</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node1 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node1</title>
<path fill="none" stroke="#404040" d="M262.94,-424.33C260.35,-412.27 257.77,-400.25 255.22,-388.39"/>
<polygon fill="none" stroke="#404040" points="255.2,-388.31 250.03,-383.29 252.68,-376.58 257.85,-381.61 255.2,-388.31"/>
<text text-anchor="middle" x="302.5" y="-398" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;m_ppCGmmResult</text>
</g>
</g>
</svg>
