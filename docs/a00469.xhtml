<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.13.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ACA: CFeatureIf Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="clipboard.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="cookie.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">ACA<span id="projectnumber">&#160;0.3.1</span>
   </div>
   <div id="projectbrief">Example Code for Audio Content Analysis</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.13.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(0); });
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('a00469.xhtml',''); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="a00466.xhtml">List of all members</a>  </div>
  <div class="headertitle"><div class="title">CFeatureIf Class Reference</div></div>
</div><!--header-->
<div class="contents">

<p>class for computation of a instantaneous feature from either a file or a vector, supports both one-dimensional and multi-dimensional features  
 <a href="#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="a00251_source.xhtml">Feature.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for CFeatureIf:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00468.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Collaboration diagram for CFeatureIf:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00467.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-types" name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a47ca14941c604beb42d60164b3e5e6b3" id="r_a47ca14941c604beb42d60164b3e5e6b3"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a47ca14941c604beb42d60164b3e5e6b3">Feature_t</a> { <br />
&#160;&#160;<a class="el" href="#a47ca14941c604beb42d60164b3e5e6b3af835ba1196c45135d5b2c14bd71765fe">kFeatureSpectralCentroid</a>
, <a class="el" href="#a47ca14941c604beb42d60164b3e5e6b3a56e83df863061d4093933f57dc036fd0">kFeatureSpectralCrestFactor</a>
, <a class="el" href="#a47ca14941c604beb42d60164b3e5e6b3a73840e0ec4ffc58aac491b51add4ebae">kFeatureSpectralDecrease</a>
, <a class="el" href="#a47ca14941c604beb42d60164b3e5e6b3abe659e5b25086d04ed78c40d7411b71d">kFeatureSpectralFlatness</a>
, <br />
&#160;&#160;<a class="el" href="#a47ca14941c604beb42d60164b3e5e6b3ababfc8ce9c5b272fd805b5e8a1fb5ff6">kFeatureSpectralFlux</a>
, <a class="el" href="#a47ca14941c604beb42d60164b3e5e6b3aa0fa60f5d1741a50b4e018ae35c53084">kFeatureSpectralKurtosis</a>
, <a class="el" href="#a47ca14941c604beb42d60164b3e5e6b3a47c4f31d2c8d477f955da1281c8bda85">kFeatureSpectralMfccs</a>
, <a class="el" href="#a47ca14941c604beb42d60164b3e5e6b3a6cca75d6d116b2284ae19d2b75093198">kFeatureSpectralPitchChroma</a>
, <br />
&#160;&#160;<a class="el" href="#a47ca14941c604beb42d60164b3e5e6b3a0fe1e0e5caf8fd22c48abcde74028c8f">kFeatureSpectralRolloff</a>
, <a class="el" href="#a47ca14941c604beb42d60164b3e5e6b3adc99879506ae42b73740c06987993d6b">kFeatureSpectralSkewness</a>
, <a class="el" href="#a47ca14941c604beb42d60164b3e5e6b3ab48b0af125a41eb628e2867f53248828">kFeatureSpectralSlope</a>
, <a class="el" href="#a47ca14941c604beb42d60164b3e5e6b3a2e51955c0f5d4edf37bb8b0c0b7af6f5">kFeatureSpectralSpread</a>
, <br />
&#160;&#160;<a class="el" href="#a47ca14941c604beb42d60164b3e5e6b3ab91719fe00fbcbbd34b7b5b0e7631dfd">kFeatureSpectralTonalPowerRatio</a>
, <a class="el" href="#a47ca14941c604beb42d60164b3e5e6b3ab6c784d49502082864d1ff9170564dcd">kFeatureTimeAcfCoeff</a>
, <a class="el" href="#a47ca14941c604beb42d60164b3e5e6b3a1fcad202a3cfc949aed26a5ff806a180">kFeatureTimeMaxAcf</a>
, <a class="el" href="#a47ca14941c604beb42d60164b3e5e6b3a138118ff8341d41558cd0b32a85eafd3">kFeatureTimePeakEnvelope</a>
, <br />
&#160;&#160;<a class="el" href="#a47ca14941c604beb42d60164b3e5e6b3aedb0c71ed62a6df3eb21f53cad93682a">kFeatureTimeRms</a>
, <a class="el" href="#a47ca14941c604beb42d60164b3e5e6b3aa7fcbc742fe20a02ec32aa842ef5d9ac">kFeatureTimeStd</a>
, <a class="el" href="#a47ca14941c604beb42d60164b3e5e6b3a4358b37321d69645738c1494bb94b925">kFeatureTimeZeroCrossingRate</a>
, <a class="el" href="#a47ca14941c604beb42d60164b3e5e6b3abe9b4914b84bc00da1aacb5f0068545d">kNumFeatures</a>
<br />
 }</td></tr>
<tr class="memdesc:a47ca14941c604beb42d60164b3e5e6b3"><td class="mdescLeft">&#160;</td><td class="mdescRight">enum to index all features note: update <a class="el" href="#a2aac3d25c179044493ad1c96fa877709" title="bool differentiating between time and spectral features">CFeatureIf::isFeatureSpectral_()</a> when modifying  <a href="#a47ca14941c604beb42d60164b3e5e6b3">More...</a><br /></td></tr>
<tr class="separator:a47ca14941c604beb42d60164b3e5e6b3"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ad7e4c2c40aa96ea2d91eafffcde0608a" id="r_ad7e4c2c40aa96ea2d91eafffcde0608a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ad7e4c2c40aa96ea2d91eafffcde0608a">getFeatureDimensions</a> (int &amp;iNumRows, int &amp;iNumCols) const</td></tr>
<tr class="separator:ad7e4c2c40aa96ea2d91eafffcde0608a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad93a887c59ee3297e735416bccbf64fa" id="r_ad93a887c59ee3297e735416bccbf64fa"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ad93a887c59ee3297e735416bccbf64fa">getTimeStamp</a> (int iBlockIdx) const</td></tr>
<tr class="separator:ad93a887c59ee3297e735416bccbf64fa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5013a2baa00e09d8d157c7e443c15b5f" id="r_a5013a2baa00e09d8d157c7e443c15b5f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a5013a2baa00e09d8d157c7e443c15b5f">getTimeStamps</a> (float *pfAxisTicks) const</td></tr>
<tr class="separator:a5013a2baa00e09d8d157c7e443c15b5f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a30248aa1fb336095d4d86d0bd3d2bdb8" id="r_a30248aa1fb336095d4d86d0bd3d2bdb8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a30248aa1fb336095d4d86d0bd3d2bdb8">compFeature1Dim</a> (float *pfFeature)</td></tr>
<tr class="separator:a30248aa1fb336095d4d86d0bd3d2bdb8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad734d1e300583449f51e6ca80aa3e7b8" id="r_ad734d1e300583449f51e6ca80aa3e7b8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ad734d1e300583449f51e6ca80aa3e7b8">compFeatureNDim</a> (float **ppfFeature)</td></tr>
<tr class="separator:ad734d1e300583449f51e6ca80aa3e7b8"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-static-methods" name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:af448569c0950f36034d84326d564cce9" id="r_af448569c0950f36034d84326d564cce9"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#af448569c0950f36034d84326d564cce9">create</a> (<a class="el" href="a00469.xhtml">CFeatureIf</a> *&amp;pCInstance, <a class="el" href="#a47ca14941c604beb42d60164b3e5e6b3">Feature_t</a> eFeatureIdx, const std::string &amp;strAudioFilePath, int iBlockLength=2048, int iHopLength=1024)</td></tr>
<tr class="separator:af448569c0950f36034d84326d564cce9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3c515cfdf61c2bf96e656896c59f9076" id="r_a3c515cfdf61c2bf96e656896c59f9076"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a3c515cfdf61c2bf96e656896c59f9076">create</a> (<a class="el" href="a00469.xhtml">CFeatureIf</a> *&amp;pCInstance, <a class="el" href="#a47ca14941c604beb42d60164b3e5e6b3">Feature_t</a> eFeatureIdx, const float *pfAudio, long long iNumSamples, float fSampleRate, int iBlockLength=2048, int iHopLength=1024)</td></tr>
<tr class="separator:a3c515cfdf61c2bf96e656896c59f9076"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab0b833a2f828e941e08f84a47dcfcda8" id="r_ab0b833a2f828e941e08f84a47dcfcda8"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ab0b833a2f828e941e08f84a47dcfcda8">destroy</a> (<a class="el" href="a00469.xhtml">CFeatureIf</a> *&amp;pCInstance)</td></tr>
<tr class="separator:ab0b833a2f828e941e08f84a47dcfcda8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad664423cee1d3ebfe68551e8f4a63dc2" id="r_ad664423cee1d3ebfe68551e8f4a63dc2"><td class="memItemLeft" align="right" valign="top">static std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ad664423cee1d3ebfe68551e8f4a63dc2">getFeatureString</a> (<a class="el" href="#a47ca14941c604beb42d60164b3e5e6b3">Feature_t</a> eFeatureIdx)</td></tr>
<tr class="separator:ad664423cee1d3ebfe68551e8f4a63dc2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a159bc708acb32dd40d529531f418b0fc" id="r_a159bc708acb32dd40d529531f418b0fc"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="#a47ca14941c604beb42d60164b3e5e6b3">Feature_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a159bc708acb32dd40d529531f418b0fc">getFeatureIdxFromString</a> (std::string sFeatureString)</td></tr>
<tr class="separator:a159bc708acb32dd40d529531f418b0fc"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pro-methods" name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a9893395e4967a4db2d021994e6917e70" id="r_a9893395e4967a4db2d021994e6917e70"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a9893395e4967a4db2d021994e6917e70">CFeatureIf</a> ()</td></tr>
<tr class="separator:a9893395e4967a4db2d021994e6917e70"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af5da45fe4709e1dd028638a533822c98" id="r_af5da45fe4709e1dd028638a533822c98"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#af5da45fe4709e1dd028638a533822c98">~CFeatureIf</a> ()</td></tr>
<tr class="separator:af5da45fe4709e1dd028638a533822c98"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8b7f1345b2c512b003c1c08c6edeeb6f" id="r_a8b7f1345b2c512b003c1c08c6edeeb6f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a8b7f1345b2c512b003c1c08c6edeeb6f">CFeatureIf</a> (const <a class="el" href="a00469.xhtml">CFeatureIf</a> &amp;that)</td></tr>
<tr class="separator:a8b7f1345b2c512b003c1c08c6edeeb6f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7d2b196aa1c1e83deacf285d8a001e49" id="r_a7d2b196aa1c1e83deacf285d8a001e49"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00469.xhtml">CFeatureIf</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a7d2b196aa1c1e83deacf285d8a001e49">operator=</a> (const <a class="el" href="a00469.xhtml">CFeatureIf</a> &amp;c)</td></tr>
<tr class="separator:a7d2b196aa1c1e83deacf285d8a001e49"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7b77edaf405fefd82329d8987b16d1f2" id="r_a7b77edaf405fefd82329d8987b16d1f2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a7b77edaf405fefd82329d8987b16d1f2">reset_</a> ()</td></tr>
<tr class="memdesc:a7b77edaf405fefd82329d8987b16d1f2"><td class="mdescLeft">&#160;</td><td class="mdescRight">reset configuration  <br /></td></tr>
<tr class="separator:a7b77edaf405fefd82329d8987b16d1f2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab38ca831ee8ae42a8a95e33af4f756ba" id="r_ab38ca831ee8ae42a8a95e33af4f756ba"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ab38ca831ee8ae42a8a95e33af4f756ba">init_</a> (<a class="el" href="#a47ca14941c604beb42d60164b3e5e6b3">Feature_t</a> eFeatureIdx)</td></tr>
<tr class="memdesc:ab38ca831ee8ae42a8a95e33af4f756ba"><td class="mdescLeft">&#160;</td><td class="mdescRight">init configuration  <br /></td></tr>
<tr class="separator:ab38ca831ee8ae42a8a95e33af4f756ba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2aac3d25c179044493ad1c96fa877709" id="r_a2aac3d25c179044493ad1c96fa877709"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00263.xhtml#abb452686968e48b67397da5f97445f5b">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a2aac3d25c179044493ad1c96fa877709">isFeatureSpectral_</a> (<a class="el" href="#a47ca14941c604beb42d60164b3e5e6b3">Feature_t</a> eFeatureIdx)</td></tr>
<tr class="memdesc:a2aac3d25c179044493ad1c96fa877709"><td class="mdescLeft">&#160;</td><td class="mdescRight">bool differentiating between time and spectral features  <br /></td></tr>
<tr class="separator:a2aac3d25c179044493ad1c96fa877709"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7aef37fcf40e80cbace42fe663f47bbd" id="r_a7aef37fcf40e80cbace42fe663f47bbd"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a7aef37fcf40e80cbace42fe663f47bbd">computeMagSpectrum_</a> ()</td></tr>
<tr class="memdesc:a7aef37fcf40e80cbace42fe663f47bbd"><td class="mdescLeft">&#160;</td><td class="mdescRight">compute magnitude spectrum for spectral features  <br /></td></tr>
<tr class="separator:a7aef37fcf40e80cbace42fe663f47bbd"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pro-attribs" name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:a4435f6e09b4e6a9a8ef68ffaa7c65d83" id="r_a4435f6e09b4e6a9a8ef68ffaa7c65d83"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00609.xhtml">CNormalizeAudio</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a4435f6e09b4e6a9a8ef68ffaa7c65d83">m_pCNormalize</a> = 0</td></tr>
<tr class="memdesc:a4435f6e09b4e6a9a8ef68ffaa7c65d83"><td class="mdescLeft">&#160;</td><td class="mdescRight">instantiate if audio file normalization is wanted  <br /></td></tr>
<tr class="separator:a4435f6e09b4e6a9a8ef68ffaa7c65d83"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2910c6f2b2eb5ac8d635f712741a6c03" id="r_a2910c6f2b2eb5ac8d635f712741a6c03"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00545.xhtml">CBlockAudioIf</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a2910c6f2b2eb5ac8d635f712741a6c03">m_pCBlockAudio</a> = 0</td></tr>
<tr class="memdesc:a2910c6f2b2eb5ac8d635f712741a6c03"><td class="mdescLeft">&#160;</td><td class="mdescRight">instantiate for blocking time domain signal  <br /></td></tr>
<tr class="separator:a2910c6f2b2eb5ac8d635f712741a6c03"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad043d5900423040b84f134faa6b94053" id="r_ad043d5900423040b84f134faa6b94053"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00473.xhtml">CFeatureFromBlockIf</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ad043d5900423040b84f134faa6b94053">m_pCFeature</a> = 0</td></tr>
<tr class="memdesc:ad043d5900423040b84f134faa6b94053"><td class="mdescLeft">&#160;</td><td class="mdescRight">instance for feature computation with one block of data  <br /></td></tr>
<tr class="separator:ad043d5900423040b84f134faa6b94053"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aefea021443892024085d490fd774dd89" id="r_aefea021443892024085d490fd774dd89"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00477.xhtml">CFft</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aefea021443892024085d490fd774dd89">m_pCFft</a> = 0</td></tr>
<tr class="memdesc:aefea021443892024085d490fd774dd89"><td class="mdescLeft">&#160;</td><td class="mdescRight">fft instance  <br /></td></tr>
<tr class="separator:aefea021443892024085d490fd774dd89"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3089ae4f4a6ac519490d02b4df1ab670" id="r_a3089ae4f4a6ac519490d02b4df1ab670"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a3089ae4f4a6ac519490d02b4df1ab670">m_iBlockLength</a> = 0</td></tr>
<tr class="memdesc:a3089ae4f4a6ac519490d02b4df1ab670"><td class="mdescLeft">&#160;</td><td class="mdescRight">fft length  <br /></td></tr>
<tr class="separator:a3089ae4f4a6ac519490d02b4df1ab670"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a749f724487e2e960ea14204298ac86c6" id="r_a749f724487e2e960ea14204298ac86c6"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a749f724487e2e960ea14204298ac86c6">m_iHopLength</a> = 0</td></tr>
<tr class="memdesc:a749f724487e2e960ea14204298ac86c6"><td class="mdescLeft">&#160;</td><td class="mdescRight">hop length  <br /></td></tr>
<tr class="separator:a749f724487e2e960ea14204298ac86c6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8e062ede6469deb5b58e018ee924126b" id="r_a8e062ede6469deb5b58e018ee924126b"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a8e062ede6469deb5b58e018ee924126b">m_fSampleRate</a> = 0</td></tr>
<tr class="memdesc:a8e062ede6469deb5b58e018ee924126b"><td class="mdescLeft">&#160;</td><td class="mdescRight">sample rate  <br /></td></tr>
<tr class="separator:a8e062ede6469deb5b58e018ee924126b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1120b07a3b6354d20be72c2b84d981af" id="r_a1120b07a3b6354d20be72c2b84d981af"><td class="memItemLeft" align="right" valign="top">float *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a1120b07a3b6354d20be72c2b84d981af">m_pfProcBuff2</a> = 0</td></tr>
<tr class="memdesc:a1120b07a3b6354d20be72c2b84d981af"><td class="mdescLeft">&#160;</td><td class="mdescRight">temporary buffer  <br /></td></tr>
<tr class="separator:a1120b07a3b6354d20be72c2b84d981af"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe10fb6e1375ee9e0af78cb2077b2ac5" id="r_afe10fb6e1375ee9e0af78cb2077b2ac5"><td class="memItemLeft" align="right" valign="top">float *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#afe10fb6e1375ee9e0af78cb2077b2ac5">m_pfProcBuff1</a> = 0</td></tr>
<tr class="memdesc:afe10fb6e1375ee9e0af78cb2077b2ac5"><td class="mdescLeft">&#160;</td><td class="mdescRight">temporary buffer  <br /></td></tr>
<tr class="separator:afe10fb6e1375ee9e0af78cb2077b2ac5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae6434d1f27108b3379c03c6b8a9dd7be" id="r_ae6434d1f27108b3379c03c6b8a9dd7be"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00263.xhtml#abb452686968e48b67397da5f97445f5b">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae6434d1f27108b3379c03c6b8a9dd7be">m_bIsInitialized</a> = <a class="el" href="a00263.xhtml#a65e9886d74aaee76545e83dd09011727">false</a></td></tr>
<tr class="memdesc:ae6434d1f27108b3379c03c6b8a9dd7be"><td class="mdescLeft">&#160;</td><td class="mdescRight">true if initialized  <br /></td></tr>
<tr class="separator:ae6434d1f27108b3379c03c6b8a9dd7be"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>class for computation of a instantaneous feature from either a file or a vector, supports both one-dimensional and multi-dimensional features </p>

<p class="definition">Definition at line <a class="el" href="a00251_source.xhtml#l00018">18</a> of file <a class="el" href="a00251_source.xhtml">Feature.h</a>.</p>
</div><h2 class="groupheader">Member Enumeration Documentation</h2>
<a id="a47ca14941c604beb42d60164b3e5e6b3" name="a47ca14941c604beb42d60164b3e5e6b3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a47ca14941c604beb42d60164b3e5e6b3">&#9670;&#160;</a></span>Feature_t</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="#a47ca14941c604beb42d60164b3e5e6b3">CFeatureIf::Feature_t</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>enum to index all features note: update <a class="el" href="#a2aac3d25c179044493ad1c96fa877709" title="bool differentiating between time and spectral features">CFeatureIf::isFeatureSpectral_()</a> when modifying </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="a47ca14941c604beb42d60164b3e5e6b3af835ba1196c45135d5b2c14bd71765fe" name="a47ca14941c604beb42d60164b3e5e6b3af835ba1196c45135d5b2c14bd71765fe"></a>kFeatureSpectralCentroid&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a47ca14941c604beb42d60164b3e5e6b3a56e83df863061d4093933f57dc036fd0" name="a47ca14941c604beb42d60164b3e5e6b3a56e83df863061d4093933f57dc036fd0"></a>kFeatureSpectralCrestFactor&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a47ca14941c604beb42d60164b3e5e6b3a73840e0ec4ffc58aac491b51add4ebae" name="a47ca14941c604beb42d60164b3e5e6b3a73840e0ec4ffc58aac491b51add4ebae"></a>kFeatureSpectralDecrease&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a47ca14941c604beb42d60164b3e5e6b3abe659e5b25086d04ed78c40d7411b71d" name="a47ca14941c604beb42d60164b3e5e6b3abe659e5b25086d04ed78c40d7411b71d"></a>kFeatureSpectralFlatness&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a47ca14941c604beb42d60164b3e5e6b3ababfc8ce9c5b272fd805b5e8a1fb5ff6" name="a47ca14941c604beb42d60164b3e5e6b3ababfc8ce9c5b272fd805b5e8a1fb5ff6"></a>kFeatureSpectralFlux&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a47ca14941c604beb42d60164b3e5e6b3aa0fa60f5d1741a50b4e018ae35c53084" name="a47ca14941c604beb42d60164b3e5e6b3aa0fa60f5d1741a50b4e018ae35c53084"></a>kFeatureSpectralKurtosis&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a47ca14941c604beb42d60164b3e5e6b3a47c4f31d2c8d477f955da1281c8bda85" name="a47ca14941c604beb42d60164b3e5e6b3a47c4f31d2c8d477f955da1281c8bda85"></a>kFeatureSpectralMfccs&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a47ca14941c604beb42d60164b3e5e6b3a6cca75d6d116b2284ae19d2b75093198" name="a47ca14941c604beb42d60164b3e5e6b3a6cca75d6d116b2284ae19d2b75093198"></a>kFeatureSpectralPitchChroma&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a47ca14941c604beb42d60164b3e5e6b3a0fe1e0e5caf8fd22c48abcde74028c8f" name="a47ca14941c604beb42d60164b3e5e6b3a0fe1e0e5caf8fd22c48abcde74028c8f"></a>kFeatureSpectralRolloff&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a47ca14941c604beb42d60164b3e5e6b3adc99879506ae42b73740c06987993d6b" name="a47ca14941c604beb42d60164b3e5e6b3adc99879506ae42b73740c06987993d6b"></a>kFeatureSpectralSkewness&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a47ca14941c604beb42d60164b3e5e6b3ab48b0af125a41eb628e2867f53248828" name="a47ca14941c604beb42d60164b3e5e6b3ab48b0af125a41eb628e2867f53248828"></a>kFeatureSpectralSlope&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a47ca14941c604beb42d60164b3e5e6b3a2e51955c0f5d4edf37bb8b0c0b7af6f5" name="a47ca14941c604beb42d60164b3e5e6b3a2e51955c0f5d4edf37bb8b0c0b7af6f5"></a>kFeatureSpectralSpread&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a47ca14941c604beb42d60164b3e5e6b3ab91719fe00fbcbbd34b7b5b0e7631dfd" name="a47ca14941c604beb42d60164b3e5e6b3ab91719fe00fbcbbd34b7b5b0e7631dfd"></a>kFeatureSpectralTonalPowerRatio&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a47ca14941c604beb42d60164b3e5e6b3ab6c784d49502082864d1ff9170564dcd" name="a47ca14941c604beb42d60164b3e5e6b3ab6c784d49502082864d1ff9170564dcd"></a>kFeatureTimeAcfCoeff&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a47ca14941c604beb42d60164b3e5e6b3a1fcad202a3cfc949aed26a5ff806a180" name="a47ca14941c604beb42d60164b3e5e6b3a1fcad202a3cfc949aed26a5ff806a180"></a>kFeatureTimeMaxAcf&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a47ca14941c604beb42d60164b3e5e6b3a138118ff8341d41558cd0b32a85eafd3" name="a47ca14941c604beb42d60164b3e5e6b3a138118ff8341d41558cd0b32a85eafd3"></a>kFeatureTimePeakEnvelope&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a47ca14941c604beb42d60164b3e5e6b3aedb0c71ed62a6df3eb21f53cad93682a" name="a47ca14941c604beb42d60164b3e5e6b3aedb0c71ed62a6df3eb21f53cad93682a"></a>kFeatureTimeRms&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a47ca14941c604beb42d60164b3e5e6b3aa7fcbc742fe20a02ec32aa842ef5d9ac" name="a47ca14941c604beb42d60164b3e5e6b3aa7fcbc742fe20a02ec32aa842ef5d9ac"></a>kFeatureTimeStd&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a47ca14941c604beb42d60164b3e5e6b3a4358b37321d69645738c1494bb94b925" name="a47ca14941c604beb42d60164b3e5e6b3a4358b37321d69645738c1494bb94b925"></a>kFeatureTimeZeroCrossingRate&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a47ca14941c604beb42d60164b3e5e6b3abe9b4914b84bc00da1aacb5f0068545d" name="a47ca14941c604beb42d60164b3e5e6b3abe9b4914b84bc00da1aacb5f0068545d"></a>kNumFeatures&#160;</td><td class="fielddoc"></td></tr>
</table>

<p class="definition">Definition at line <a class="el" href="a00251_source.xhtml#l00024">24</a> of file <a class="el" href="a00251_source.xhtml">Feature.h</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   25</span>    {</div>
<div class="line"><span class="lineno">   26</span>        <a class="code hl_enumvalue" href="#a47ca14941c604beb42d60164b3e5e6b3af835ba1196c45135d5b2c14bd71765fe">kFeatureSpectralCentroid</a>,</div>
<div class="line"><span class="lineno">   27</span>        <a class="code hl_enumvalue" href="#a47ca14941c604beb42d60164b3e5e6b3a56e83df863061d4093933f57dc036fd0">kFeatureSpectralCrestFactor</a>,</div>
<div class="line"><span class="lineno">   28</span>        <a class="code hl_enumvalue" href="#a47ca14941c604beb42d60164b3e5e6b3a73840e0ec4ffc58aac491b51add4ebae">kFeatureSpectralDecrease</a>,</div>
<div class="line"><span class="lineno">   29</span>        <a class="code hl_enumvalue" href="#a47ca14941c604beb42d60164b3e5e6b3abe659e5b25086d04ed78c40d7411b71d">kFeatureSpectralFlatness</a>,</div>
<div class="line"><span class="lineno">   30</span>        <a class="code hl_enumvalue" href="#a47ca14941c604beb42d60164b3e5e6b3ababfc8ce9c5b272fd805b5e8a1fb5ff6">kFeatureSpectralFlux</a>,</div>
<div class="line"><span class="lineno">   31</span>        <a class="code hl_enumvalue" href="#a47ca14941c604beb42d60164b3e5e6b3aa0fa60f5d1741a50b4e018ae35c53084">kFeatureSpectralKurtosis</a>,</div>
<div class="line"><span class="lineno">   32</span>        <a class="code hl_enumvalue" href="#a47ca14941c604beb42d60164b3e5e6b3a47c4f31d2c8d477f955da1281c8bda85">kFeatureSpectralMfccs</a>,</div>
<div class="line"><span class="lineno">   33</span>        <a class="code hl_enumvalue" href="#a47ca14941c604beb42d60164b3e5e6b3a6cca75d6d116b2284ae19d2b75093198">kFeatureSpectralPitchChroma</a>,</div>
<div class="line"><span class="lineno">   34</span>        <a class="code hl_enumvalue" href="#a47ca14941c604beb42d60164b3e5e6b3a0fe1e0e5caf8fd22c48abcde74028c8f">kFeatureSpectralRolloff</a>,</div>
<div class="line"><span class="lineno">   35</span>        <a class="code hl_enumvalue" href="#a47ca14941c604beb42d60164b3e5e6b3adc99879506ae42b73740c06987993d6b">kFeatureSpectralSkewness</a>,</div>
<div class="line"><span class="lineno">   36</span>        <a class="code hl_enumvalue" href="#a47ca14941c604beb42d60164b3e5e6b3ab48b0af125a41eb628e2867f53248828">kFeatureSpectralSlope</a>,</div>
<div class="line"><span class="lineno">   37</span>        <a class="code hl_enumvalue" href="#a47ca14941c604beb42d60164b3e5e6b3a2e51955c0f5d4edf37bb8b0c0b7af6f5">kFeatureSpectralSpread</a>,</div>
<div class="line"><span class="lineno">   38</span>        <a class="code hl_enumvalue" href="#a47ca14941c604beb42d60164b3e5e6b3ab91719fe00fbcbbd34b7b5b0e7631dfd">kFeatureSpectralTonalPowerRatio</a>,</div>
<div class="line"><span class="lineno">   39</span> </div>
<div class="line"><span class="lineno">   40</span>        <a class="code hl_enumvalue" href="#a47ca14941c604beb42d60164b3e5e6b3ab6c784d49502082864d1ff9170564dcd">kFeatureTimeAcfCoeff</a>,</div>
<div class="line"><span class="lineno">   41</span>        <a class="code hl_enumvalue" href="#a47ca14941c604beb42d60164b3e5e6b3a1fcad202a3cfc949aed26a5ff806a180">kFeatureTimeMaxAcf</a>,</div>
<div class="line"><span class="lineno">   42</span>        <a class="code hl_enumvalue" href="#a47ca14941c604beb42d60164b3e5e6b3a138118ff8341d41558cd0b32a85eafd3">kFeatureTimePeakEnvelope</a>,</div>
<div class="line"><span class="lineno">   43</span>        <a class="code hl_enumvalue" href="#a47ca14941c604beb42d60164b3e5e6b3aedb0c71ed62a6df3eb21f53cad93682a">kFeatureTimeRms</a>,</div>
<div class="line"><span class="lineno">   44</span>        <a class="code hl_enumvalue" href="#a47ca14941c604beb42d60164b3e5e6b3aa7fcbc742fe20a02ec32aa842ef5d9ac">kFeatureTimeStd</a>,</div>
<div class="line"><span class="lineno">   45</span>        <a class="code hl_enumvalue" href="#a47ca14941c604beb42d60164b3e5e6b3a4358b37321d69645738c1494bb94b925">kFeatureTimeZeroCrossingRate</a>,</div>
<div class="line"><span class="lineno">   46</span> </div>
<div class="line"><span class="lineno">   47</span>        <a class="code hl_enumvalue" href="#a47ca14941c604beb42d60164b3e5e6b3abe9b4914b84bc00da1aacb5f0068545d">kNumFeatures</a></div>
<div class="line"><span class="lineno">   48</span>    };</div>
<div class="ttc" id="aa00469_xhtml_a47ca14941c604beb42d60164b3e5e6b3a0fe1e0e5caf8fd22c48abcde74028c8f"><div class="ttname"><a href="#a47ca14941c604beb42d60164b3e5e6b3a0fe1e0e5caf8fd22c48abcde74028c8f">CFeatureIf::kFeatureSpectralRolloff</a></div><div class="ttdeci">@ kFeatureSpectralRolloff</div><div class="ttdef"><b>Definition</b> <a href="a00251_source.xhtml#l00034">Feature.h:34</a></div></div>
<div class="ttc" id="aa00469_xhtml_a47ca14941c604beb42d60164b3e5e6b3a138118ff8341d41558cd0b32a85eafd3"><div class="ttname"><a href="#a47ca14941c604beb42d60164b3e5e6b3a138118ff8341d41558cd0b32a85eafd3">CFeatureIf::kFeatureTimePeakEnvelope</a></div><div class="ttdeci">@ kFeatureTimePeakEnvelope</div><div class="ttdef"><b>Definition</b> <a href="a00251_source.xhtml#l00042">Feature.h:42</a></div></div>
<div class="ttc" id="aa00469_xhtml_a47ca14941c604beb42d60164b3e5e6b3a1fcad202a3cfc949aed26a5ff806a180"><div class="ttname"><a href="#a47ca14941c604beb42d60164b3e5e6b3a1fcad202a3cfc949aed26a5ff806a180">CFeatureIf::kFeatureTimeMaxAcf</a></div><div class="ttdeci">@ kFeatureTimeMaxAcf</div><div class="ttdef"><b>Definition</b> <a href="a00251_source.xhtml#l00041">Feature.h:41</a></div></div>
<div class="ttc" id="aa00469_xhtml_a47ca14941c604beb42d60164b3e5e6b3a2e51955c0f5d4edf37bb8b0c0b7af6f5"><div class="ttname"><a href="#a47ca14941c604beb42d60164b3e5e6b3a2e51955c0f5d4edf37bb8b0c0b7af6f5">CFeatureIf::kFeatureSpectralSpread</a></div><div class="ttdeci">@ kFeatureSpectralSpread</div><div class="ttdef"><b>Definition</b> <a href="a00251_source.xhtml#l00037">Feature.h:37</a></div></div>
<div class="ttc" id="aa00469_xhtml_a47ca14941c604beb42d60164b3e5e6b3a4358b37321d69645738c1494bb94b925"><div class="ttname"><a href="#a47ca14941c604beb42d60164b3e5e6b3a4358b37321d69645738c1494bb94b925">CFeatureIf::kFeatureTimeZeroCrossingRate</a></div><div class="ttdeci">@ kFeatureTimeZeroCrossingRate</div><div class="ttdef"><b>Definition</b> <a href="a00251_source.xhtml#l00045">Feature.h:45</a></div></div>
<div class="ttc" id="aa00469_xhtml_a47ca14941c604beb42d60164b3e5e6b3a47c4f31d2c8d477f955da1281c8bda85"><div class="ttname"><a href="#a47ca14941c604beb42d60164b3e5e6b3a47c4f31d2c8d477f955da1281c8bda85">CFeatureIf::kFeatureSpectralMfccs</a></div><div class="ttdeci">@ kFeatureSpectralMfccs</div><div class="ttdef"><b>Definition</b> <a href="a00251_source.xhtml#l00032">Feature.h:32</a></div></div>
<div class="ttc" id="aa00469_xhtml_a47ca14941c604beb42d60164b3e5e6b3a56e83df863061d4093933f57dc036fd0"><div class="ttname"><a href="#a47ca14941c604beb42d60164b3e5e6b3a56e83df863061d4093933f57dc036fd0">CFeatureIf::kFeatureSpectralCrestFactor</a></div><div class="ttdeci">@ kFeatureSpectralCrestFactor</div><div class="ttdef"><b>Definition</b> <a href="a00251_source.xhtml#l00027">Feature.h:27</a></div></div>
<div class="ttc" id="aa00469_xhtml_a47ca14941c604beb42d60164b3e5e6b3a6cca75d6d116b2284ae19d2b75093198"><div class="ttname"><a href="#a47ca14941c604beb42d60164b3e5e6b3a6cca75d6d116b2284ae19d2b75093198">CFeatureIf::kFeatureSpectralPitchChroma</a></div><div class="ttdeci">@ kFeatureSpectralPitchChroma</div><div class="ttdef"><b>Definition</b> <a href="a00251_source.xhtml#l00033">Feature.h:33</a></div></div>
<div class="ttc" id="aa00469_xhtml_a47ca14941c604beb42d60164b3e5e6b3a73840e0ec4ffc58aac491b51add4ebae"><div class="ttname"><a href="#a47ca14941c604beb42d60164b3e5e6b3a73840e0ec4ffc58aac491b51add4ebae">CFeatureIf::kFeatureSpectralDecrease</a></div><div class="ttdeci">@ kFeatureSpectralDecrease</div><div class="ttdef"><b>Definition</b> <a href="a00251_source.xhtml#l00028">Feature.h:28</a></div></div>
<div class="ttc" id="aa00469_xhtml_a47ca14941c604beb42d60164b3e5e6b3aa0fa60f5d1741a50b4e018ae35c53084"><div class="ttname"><a href="#a47ca14941c604beb42d60164b3e5e6b3aa0fa60f5d1741a50b4e018ae35c53084">CFeatureIf::kFeatureSpectralKurtosis</a></div><div class="ttdeci">@ kFeatureSpectralKurtosis</div><div class="ttdef"><b>Definition</b> <a href="a00251_source.xhtml#l00031">Feature.h:31</a></div></div>
<div class="ttc" id="aa00469_xhtml_a47ca14941c604beb42d60164b3e5e6b3aa7fcbc742fe20a02ec32aa842ef5d9ac"><div class="ttname"><a href="#a47ca14941c604beb42d60164b3e5e6b3aa7fcbc742fe20a02ec32aa842ef5d9ac">CFeatureIf::kFeatureTimeStd</a></div><div class="ttdeci">@ kFeatureTimeStd</div><div class="ttdef"><b>Definition</b> <a href="a00251_source.xhtml#l00044">Feature.h:44</a></div></div>
<div class="ttc" id="aa00469_xhtml_a47ca14941c604beb42d60164b3e5e6b3ab48b0af125a41eb628e2867f53248828"><div class="ttname"><a href="#a47ca14941c604beb42d60164b3e5e6b3ab48b0af125a41eb628e2867f53248828">CFeatureIf::kFeatureSpectralSlope</a></div><div class="ttdeci">@ kFeatureSpectralSlope</div><div class="ttdef"><b>Definition</b> <a href="a00251_source.xhtml#l00036">Feature.h:36</a></div></div>
<div class="ttc" id="aa00469_xhtml_a47ca14941c604beb42d60164b3e5e6b3ab6c784d49502082864d1ff9170564dcd"><div class="ttname"><a href="#a47ca14941c604beb42d60164b3e5e6b3ab6c784d49502082864d1ff9170564dcd">CFeatureIf::kFeatureTimeAcfCoeff</a></div><div class="ttdeci">@ kFeatureTimeAcfCoeff</div><div class="ttdef"><b>Definition</b> <a href="a00251_source.xhtml#l00040">Feature.h:40</a></div></div>
<div class="ttc" id="aa00469_xhtml_a47ca14941c604beb42d60164b3e5e6b3ab91719fe00fbcbbd34b7b5b0e7631dfd"><div class="ttname"><a href="#a47ca14941c604beb42d60164b3e5e6b3ab91719fe00fbcbbd34b7b5b0e7631dfd">CFeatureIf::kFeatureSpectralTonalPowerRatio</a></div><div class="ttdeci">@ kFeatureSpectralTonalPowerRatio</div><div class="ttdef"><b>Definition</b> <a href="a00251_source.xhtml#l00038">Feature.h:38</a></div></div>
<div class="ttc" id="aa00469_xhtml_a47ca14941c604beb42d60164b3e5e6b3ababfc8ce9c5b272fd805b5e8a1fb5ff6"><div class="ttname"><a href="#a47ca14941c604beb42d60164b3e5e6b3ababfc8ce9c5b272fd805b5e8a1fb5ff6">CFeatureIf::kFeatureSpectralFlux</a></div><div class="ttdeci">@ kFeatureSpectralFlux</div><div class="ttdef"><b>Definition</b> <a href="a00251_source.xhtml#l00030">Feature.h:30</a></div></div>
<div class="ttc" id="aa00469_xhtml_a47ca14941c604beb42d60164b3e5e6b3abe659e5b25086d04ed78c40d7411b71d"><div class="ttname"><a href="#a47ca14941c604beb42d60164b3e5e6b3abe659e5b25086d04ed78c40d7411b71d">CFeatureIf::kFeatureSpectralFlatness</a></div><div class="ttdeci">@ kFeatureSpectralFlatness</div><div class="ttdef"><b>Definition</b> <a href="a00251_source.xhtml#l00029">Feature.h:29</a></div></div>
<div class="ttc" id="aa00469_xhtml_a47ca14941c604beb42d60164b3e5e6b3abe9b4914b84bc00da1aacb5f0068545d"><div class="ttname"><a href="#a47ca14941c604beb42d60164b3e5e6b3abe9b4914b84bc00da1aacb5f0068545d">CFeatureIf::kNumFeatures</a></div><div class="ttdeci">@ kNumFeatures</div><div class="ttdef"><b>Definition</b> <a href="a00251_source.xhtml#l00047">Feature.h:47</a></div></div>
<div class="ttc" id="aa00469_xhtml_a47ca14941c604beb42d60164b3e5e6b3adc99879506ae42b73740c06987993d6b"><div class="ttname"><a href="#a47ca14941c604beb42d60164b3e5e6b3adc99879506ae42b73740c06987993d6b">CFeatureIf::kFeatureSpectralSkewness</a></div><div class="ttdeci">@ kFeatureSpectralSkewness</div><div class="ttdef"><b>Definition</b> <a href="a00251_source.xhtml#l00035">Feature.h:35</a></div></div>
<div class="ttc" id="aa00469_xhtml_a47ca14941c604beb42d60164b3e5e6b3aedb0c71ed62a6df3eb21f53cad93682a"><div class="ttname"><a href="#a47ca14941c604beb42d60164b3e5e6b3aedb0c71ed62a6df3eb21f53cad93682a">CFeatureIf::kFeatureTimeRms</a></div><div class="ttdeci">@ kFeatureTimeRms</div><div class="ttdef"><b>Definition</b> <a href="a00251_source.xhtml#l00043">Feature.h:43</a></div></div>
<div class="ttc" id="aa00469_xhtml_a47ca14941c604beb42d60164b3e5e6b3af835ba1196c45135d5b2c14bd71765fe"><div class="ttname"><a href="#a47ca14941c604beb42d60164b3e5e6b3af835ba1196c45135d5b2c14bd71765fe">CFeatureIf::kFeatureSpectralCentroid</a></div><div class="ttdeci">@ kFeatureSpectralCentroid</div><div class="ttdef"><b>Definition</b> <a href="a00251_source.xhtml#l00026">Feature.h:26</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a9893395e4967a4db2d021994e6917e70" name="a9893395e4967a4db2d021994e6917e70"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9893395e4967a4db2d021994e6917e70">&#9670;&#160;</a></span>CFeatureIf() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">CFeatureIf::CFeatureIf </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel protected">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="a00062_source.xhtml#l00086">86</a> of file <a class="el" href="a00062_source.xhtml">Feature.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   87</span>{</div>
<div class="line"><span class="lineno">   88</span>    <a class="code hl_function" href="#a7b77edaf405fefd82329d8987b16d1f2">reset_</a>();</div>
<div class="line"><span class="lineno">   89</span>}</div>
<div class="ttc" id="aa00469_xhtml_a7b77edaf405fefd82329d8987b16d1f2"><div class="ttname"><a href="#a7b77edaf405fefd82329d8987b16d1f2">CFeatureIf::reset_</a></div><div class="ttdeci">Error_t reset_()</div><div class="ttdoc">reset configuration</div><div class="ttdef"><b>Definition</b> <a href="a00062_source.xhtml#l00325">Feature.cpp:325</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00062_source.xhtml#l00325">reset_()</a>.</p>

<p class="reference">Referenced by <a class="el" href="#a8b7f1345b2c512b003c1c08c6edeeb6f">CFeatureIf()</a>, <a class="el" href="a00062_source.xhtml#l00111">create()</a>, <a class="el" href="a00062_source.xhtml#l00096">create()</a>, <a class="el" href="a00062_source.xhtml#l00129">destroy()</a>, and <a class="el" href="#a7d2b196aa1c1e83deacf285d8a001e49">operator=()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00469_a9893395e4967a4db2d021994e6917e70_cgraph.svg" width="100%" height="413"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00469_a9893395e4967a4db2d021994e6917e70_icgraph.svg" width="100%" height="475"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="af5da45fe4709e1dd028638a533822c98" name="af5da45fe4709e1dd028638a533822c98"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af5da45fe4709e1dd028638a533822c98">&#9670;&#160;</a></span>~CFeatureIf()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">CFeatureIf::~CFeatureIf </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel inline">inline</span><span class="mlabel protected">protected</span><span class="mlabel virtual">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="a00062_source.xhtml#l00091">91</a> of file <a class="el" href="a00062_source.xhtml">Feature.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   92</span>{</div>
<div class="line"><span class="lineno">   93</span>    <a class="code hl_function" href="#a7b77edaf405fefd82329d8987b16d1f2">reset_</a>();</div>
<div class="line"><span class="lineno">   94</span>}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00062_source.xhtml#l00325">reset_()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00469_af5da45fe4709e1dd028638a533822c98_cgraph.svg" width="100%" height="413"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a8b7f1345b2c512b003c1c08c6edeeb6f" name="a8b7f1345b2c512b003c1c08c6edeeb6f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8b7f1345b2c512b003c1c08c6edeeb6f">&#9670;&#160;</a></span>CFeatureIf() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">CFeatureIf::CFeatureIf </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="a00469.xhtml">CFeatureIf</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>that</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel protected">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="reference">References <a class="el" href="a00062_source.xhtml#l00086">CFeatureIf()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00469_a8b7f1345b2c512b003c1c08c6edeeb6f_cgraph.svg" width="100%" height="413"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a30248aa1fb336095d4d86d0bd3d2bdb8" name="a30248aa1fb336095d4d86d0bd3d2bdb8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a30248aa1fb336095d4d86d0bd3d2bdb8">&#9670;&#160;</a></span>compFeature1Dim()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> CFeatureIf::compFeature1Dim </td>
          <td>(</td>
          <td class="paramtype">float *</td>          <td class="paramname"><span class="paramname"><em>pfFeature</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>performs the Feature computation for 1 dimensional features and writes the result </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pfFeature</td><td>(user-allocated, to be written, dimensions from <a class="el" href="#ad7e4c2c40aa96ea2d91eafffcde0608a">CFeatureIf::getFeatureDimensions</a>) </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> </dd></dl>

<p class="definition">Definition at line <a class="el" href="a00062_source.xhtml#l00178">178</a> of file <a class="el" href="a00062_source.xhtml">Feature.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  179</span>{</div>
<div class="line"><span class="lineno">  180</span>    <span class="keywordflow">if</span> (!<a class="code hl_variable" href="#ae6434d1f27108b3379c03c6b8a9dd7be">m_bIsInitialized</a>)</div>
<div class="line"><span class="lineno">  181</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fad7652bf47cff43c21f12cb7df4ca66ec">Error_t::kFunctionIllegalCallError</a>;</div>
<div class="line"><span class="lineno">  182</span>    <span class="keywordflow">if</span> (!pfFeature)</div>
<div class="line"><span class="lineno">  183</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248">Error_t::kFunctionInvalidArgsError</a>;</div>
<div class="line"><span class="lineno">  184</span> </div>
<div class="line"><span class="lineno">  185</span>    assert(<a class="code hl_variable" href="#afe10fb6e1375ee9e0af78cb2077b2ac5">m_pfProcBuff1</a>);</div>
<div class="line"><span class="lineno">  186</span>    assert(<a class="code hl_variable" href="#a1120b07a3b6354d20be72c2b84d981af">m_pfProcBuff2</a>);</div>
<div class="line"><span class="lineno">  187</span>    assert(<a class="code hl_variable" href="#aefea021443892024085d490fd774dd89">m_pCFft</a>);</div>
<div class="line"><span class="lineno">  188</span>    assert(<a class="code hl_variable" href="#a2910c6f2b2eb5ac8d635f712741a6c03">m_pCBlockAudio</a>);</div>
<div class="line"><span class="lineno">  189</span>    assert(<a class="code hl_variable" href="#a4435f6e09b4e6a9a8ef68ffaa7c65d83">m_pCNormalize</a>);</div>
<div class="line"><span class="lineno">  190</span>    assert(<a class="code hl_variable" href="#ad043d5900423040b84f134faa6b94053">m_pCFeature</a>);</div>
<div class="line"><span class="lineno">  191</span> </div>
<div class="line"><span class="lineno">  192</span>    <span class="keyword">auto</span> iNumBlocks = <a class="code hl_variable" href="#a2910c6f2b2eb5ac8d635f712741a6c03">m_pCBlockAudio</a>-&gt;getNumBlocks();</div>
<div class="line"><span class="lineno">  193</span> </div>
<div class="line"><span class="lineno">  194</span>    <span class="keywordflow">for</span> (<span class="keyword">auto</span> n = 0; n &lt; iNumBlocks; n++)</div>
<div class="line"><span class="lineno">  195</span>    {</div>
<div class="line"><span class="lineno">  196</span>        <span class="comment">// retrieve the next audio block</span></div>
<div class="line"><span class="lineno">  197</span>        <a class="code hl_variable" href="#a2910c6f2b2eb5ac8d635f712741a6c03">m_pCBlockAudio</a>-&gt;getNextBlock(<a class="code hl_variable" href="#afe10fb6e1375ee9e0af78cb2077b2ac5">m_pfProcBuff1</a>);</div>
<div class="line"><span class="lineno">  198</span> </div>
<div class="line"><span class="lineno">  199</span>        <span class="comment">// normalize if specified</span></div>
<div class="line"><span class="lineno">  200</span>        <span class="keywordflow">if</span> (<a class="code hl_variable" href="#a4435f6e09b4e6a9a8ef68ffaa7c65d83">m_pCNormalize</a>)</div>
<div class="line"><span class="lineno">  201</span>            <a class="code hl_variable" href="#a4435f6e09b4e6a9a8ef68ffaa7c65d83">m_pCNormalize</a>-&gt;normalizeBlock(<a class="code hl_variable" href="#afe10fb6e1375ee9e0af78cb2077b2ac5">m_pfProcBuff1</a>, <a class="code hl_variable" href="#a3089ae4f4a6ac519490d02b4df1ab670">m_iBlockLength</a>);</div>
<div class="line"><span class="lineno">  202</span> </div>
<div class="line"><span class="lineno">  203</span>        <span class="keywordflow">if</span> (<a class="code hl_function" href="#a2aac3d25c179044493ad1c96fa877709">isFeatureSpectral_</a>(<a class="code hl_variable" href="#ad043d5900423040b84f134faa6b94053">m_pCFeature</a>-&gt;getFeatureIdx()))</div>
<div class="line"><span class="lineno">  204</span>            <a class="code hl_function" href="#a7aef37fcf40e80cbace42fe663f47bbd">computeMagSpectrum_</a>();</div>
<div class="line"><span class="lineno">  205</span> </div>
<div class="line"><span class="lineno">  206</span>        <a class="code hl_variable" href="#ad043d5900423040b84f134faa6b94053">m_pCFeature</a>-&gt;compFeature(&amp;pfFeature[n], <a class="code hl_variable" href="#afe10fb6e1375ee9e0af78cb2077b2ac5">m_pfProcBuff1</a>);</div>
<div class="line"><span class="lineno">  207</span>    }</div>
<div class="line"><span class="lineno">  208</span> </div>
<div class="line"><span class="lineno">  209</span>    <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><span class="lineno">  210</span>}</div>
<div class="ttc" id="aa00167_xhtml_a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248"><div class="ttname"><a href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248">Error_t::kFunctionInvalidArgsError</a></div><div class="ttdeci">@ kFunctionInvalidArgsError</div><div class="ttdef"><b>Definition</b> <a href="a00167_source.xhtml#l00011">ErrorDef.h:11</a></div></div>
<div class="ttc" id="aa00167_xhtml_a4e8c0d09726859e3d3369c0da5a1aa7fad7652bf47cff43c21f12cb7df4ca66ec"><div class="ttname"><a href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fad7652bf47cff43c21f12cb7df4ca66ec">Error_t::kFunctionIllegalCallError</a></div><div class="ttdeci">@ kFunctionIllegalCallError</div><div class="ttdef"><b>Definition</b> <a href="a00167_source.xhtml#l00014">ErrorDef.h:14</a></div></div>
<div class="ttc" id="aa00167_xhtml_a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b"><div class="ttname"><a href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a></div><div class="ttdeci">@ kNoError</div><div class="ttdef"><b>Definition</b> <a href="a00167_source.xhtml#l00006">ErrorDef.h:6</a></div></div>
<div class="ttc" id="aa00469_xhtml_a1120b07a3b6354d20be72c2b84d981af"><div class="ttname"><a href="#a1120b07a3b6354d20be72c2b84d981af">CFeatureIf::m_pfProcBuff2</a></div><div class="ttdeci">float * m_pfProcBuff2</div><div class="ttdoc">temporary buffer</div><div class="ttdef"><b>Definition</b> <a href="a00251_source.xhtml#l00145">Feature.h:145</a></div></div>
<div class="ttc" id="aa00469_xhtml_a2910c6f2b2eb5ac8d635f712741a6c03"><div class="ttname"><a href="#a2910c6f2b2eb5ac8d635f712741a6c03">CFeatureIf::m_pCBlockAudio</a></div><div class="ttdeci">CBlockAudioIf * m_pCBlockAudio</div><div class="ttdoc">instantiate for blocking time domain signal</div><div class="ttdef"><b>Definition</b> <a href="a00251_source.xhtml#l00134">Feature.h:134</a></div></div>
<div class="ttc" id="aa00469_xhtml_a2aac3d25c179044493ad1c96fa877709"><div class="ttname"><a href="#a2aac3d25c179044493ad1c96fa877709">CFeatureIf::isFeatureSpectral_</a></div><div class="ttdeci">bool isFeatureSpectral_(Feature_t eFeatureIdx)</div><div class="ttdoc">bool differentiating between time and spectral features</div><div class="ttdef"><b>Definition</b> <a href="a00062_source.xhtml#l00371">Feature.cpp:371</a></div></div>
<div class="ttc" id="aa00469_xhtml_a3089ae4f4a6ac519490d02b4df1ab670"><div class="ttname"><a href="#a3089ae4f4a6ac519490d02b4df1ab670">CFeatureIf::m_iBlockLength</a></div><div class="ttdeci">int m_iBlockLength</div><div class="ttdoc">fft length</div><div class="ttdef"><b>Definition</b> <a href="a00251_source.xhtml#l00140">Feature.h:140</a></div></div>
<div class="ttc" id="aa00469_xhtml_a4435f6e09b4e6a9a8ef68ffaa7c65d83"><div class="ttname"><a href="#a4435f6e09b4e6a9a8ef68ffaa7c65d83">CFeatureIf::m_pCNormalize</a></div><div class="ttdeci">CNormalizeAudio * m_pCNormalize</div><div class="ttdoc">instantiate if audio file normalization is wanted</div><div class="ttdef"><b>Definition</b> <a href="a00251_source.xhtml#l00132">Feature.h:132</a></div></div>
<div class="ttc" id="aa00469_xhtml_a7aef37fcf40e80cbace42fe663f47bbd"><div class="ttname"><a href="#a7aef37fcf40e80cbace42fe663f47bbd">CFeatureIf::computeMagSpectrum_</a></div><div class="ttdeci">void computeMagSpectrum_()</div><div class="ttdoc">compute magnitude spectrum for spectral features</div><div class="ttdef"><b>Definition</b> <a href="a00062_source.xhtml#l00313">Feature.cpp:313</a></div></div>
<div class="ttc" id="aa00469_xhtml_ad043d5900423040b84f134faa6b94053"><div class="ttname"><a href="#ad043d5900423040b84f134faa6b94053">CFeatureIf::m_pCFeature</a></div><div class="ttdeci">CFeatureFromBlockIf * m_pCFeature</div><div class="ttdoc">instance for feature computation with one block of data</div><div class="ttdef"><b>Definition</b> <a href="a00251_source.xhtml#l00136">Feature.h:136</a></div></div>
<div class="ttc" id="aa00469_xhtml_ae6434d1f27108b3379c03c6b8a9dd7be"><div class="ttname"><a href="#ae6434d1f27108b3379c03c6b8a9dd7be">CFeatureIf::m_bIsInitialized</a></div><div class="ttdeci">bool m_bIsInitialized</div><div class="ttdoc">true if initialized</div><div class="ttdef"><b>Definition</b> <a href="a00251_source.xhtml#l00148">Feature.h:148</a></div></div>
<div class="ttc" id="aa00469_xhtml_aefea021443892024085d490fd774dd89"><div class="ttname"><a href="#aefea021443892024085d490fd774dd89">CFeatureIf::m_pCFft</a></div><div class="ttdeci">CFft * m_pCFft</div><div class="ttdoc">fft instance</div><div class="ttdef"><b>Definition</b> <a href="a00251_source.xhtml#l00138">Feature.h:138</a></div></div>
<div class="ttc" id="aa00469_xhtml_afe10fb6e1375ee9e0af78cb2077b2ac5"><div class="ttname"><a href="#afe10fb6e1375ee9e0af78cb2077b2ac5">CFeatureIf::m_pfProcBuff1</a></div><div class="ttdeci">float * m_pfProcBuff1</div><div class="ttdoc">temporary buffer</div><div class="ttdef"><b>Definition</b> <a href="a00251_source.xhtml#l00146">Feature.h:146</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00062_source.xhtml#l00313">computeMagSpectrum_()</a>, <a class="el" href="a00062_source.xhtml#l00371">isFeatureSpectral_()</a>, <a class="el" href="a00167_source.xhtml#l00014">kFunctionIllegalCallError</a>, <a class="el" href="a00167_source.xhtml#l00011">kFunctionInvalidArgsError</a>, <a class="el" href="a00167_source.xhtml#l00006">kNoError</a>, <a class="el" href="a00251_source.xhtml#l00148">m_bIsInitialized</a>, <a class="el" href="a00251_source.xhtml#l00140">m_iBlockLength</a>, <a class="el" href="a00251_source.xhtml#l00134">m_pCBlockAudio</a>, <a class="el" href="a00251_source.xhtml#l00136">m_pCFeature</a>, <a class="el" href="a00251_source.xhtml#l00138">m_pCFft</a>, <a class="el" href="a00251_source.xhtml#l00132">m_pCNormalize</a>, <a class="el" href="a00251_source.xhtml#l00146">m_pfProcBuff1</a>, and <a class="el" href="a00251_source.xhtml#l00145">m_pfProcBuff2</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00002_source.xhtml#l00017">main()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00469_a30248aa1fb336095d4d86d0bd3d2bdb8_cgraph.svg" width="643" height="86"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00469_a30248aa1fb336095d4d86d0bd3d2bdb8_icgraph.svg" width="303" height="36"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="ad734d1e300583449f51e6ca80aa3e7b8" name="ad734d1e300583449f51e6ca80aa3e7b8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad734d1e300583449f51e6ca80aa3e7b8">&#9670;&#160;</a></span>compFeatureNDim()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> CFeatureIf::compFeatureNDim </td>
          <td>(</td>
          <td class="paramtype">float **</td>          <td class="paramname"><span class="paramname"><em>ppfFeature</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>performs the Feature computation for N dimensional features and writes the result </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ppfFeature</td><td>(user-allocated, to be written, dimensions from <a class="el" href="#ad7e4c2c40aa96ea2d91eafffcde0608a">CFeatureIf::getFeatureDimensions</a>) </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> </dd></dl>

<p class="definition">Definition at line <a class="el" href="a00062_source.xhtml#l00212">212</a> of file <a class="el" href="a00062_source.xhtml">Feature.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  213</span>{</div>
<div class="line"><span class="lineno">  214</span>    <span class="keywordflow">if</span> (!<a class="code hl_variable" href="#ae6434d1f27108b3379c03c6b8a9dd7be">m_bIsInitialized</a>)</div>
<div class="line"><span class="lineno">  215</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fad7652bf47cff43c21f12cb7df4ca66ec">Error_t::kFunctionIllegalCallError</a>;</div>
<div class="line"><span class="lineno">  216</span>    <span class="keywordflow">if</span> (!ppfFeature)</div>
<div class="line"><span class="lineno">  217</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248">Error_t::kFunctionInvalidArgsError</a>;</div>
<div class="line"><span class="lineno">  218</span>    <span class="keywordflow">if</span> (!ppfFeature[0])</div>
<div class="line"><span class="lineno">  219</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248">Error_t::kFunctionInvalidArgsError</a>;</div>
<div class="line"><span class="lineno">  220</span> </div>
<div class="line"><span class="lineno">  221</span>    assert(<a class="code hl_variable" href="#afe10fb6e1375ee9e0af78cb2077b2ac5">m_pfProcBuff1</a>);</div>
<div class="line"><span class="lineno">  222</span>    assert(<a class="code hl_variable" href="#a1120b07a3b6354d20be72c2b84d981af">m_pfProcBuff2</a>);</div>
<div class="line"><span class="lineno">  223</span>    assert(<a class="code hl_variable" href="#a2910c6f2b2eb5ac8d635f712741a6c03">m_pCBlockAudio</a>);</div>
<div class="line"><span class="lineno">  224</span>    assert(<a class="code hl_variable" href="#a4435f6e09b4e6a9a8ef68ffaa7c65d83">m_pCNormalize</a>);</div>
<div class="line"><span class="lineno">  225</span>    assert(<a class="code hl_variable" href="#ad043d5900423040b84f134faa6b94053">m_pCFeature</a>);</div>
<div class="line"><span class="lineno">  226</span> </div>
<div class="line"><span class="lineno">  227</span>    <span class="keyword">auto</span> iNumBlocks = <a class="code hl_variable" href="#a2910c6f2b2eb5ac8d635f712741a6c03">m_pCBlockAudio</a>-&gt;getNumBlocks();</div>
<div class="line"><span class="lineno">  228</span>    <span class="keyword">auto</span> iNumFeatures = <a class="code hl_variable" href="#ad043d5900423040b84f134faa6b94053">m_pCFeature</a>-&gt;getFeatureDimensions();</div>
<div class="line"><span class="lineno">  229</span> </div>
<div class="line"><span class="lineno">  230</span>    <span class="keywordflow">for</span> (<span class="keyword">auto</span> n = 0; n &lt; iNumBlocks; n++)</div>
<div class="line"><span class="lineno">  231</span>    {</div>
<div class="line"><span class="lineno">  232</span>        <span class="comment">// retrieve the next audio block</span></div>
<div class="line"><span class="lineno">  233</span>        <a class="code hl_variable" href="#a2910c6f2b2eb5ac8d635f712741a6c03">m_pCBlockAudio</a>-&gt;getNextBlock(<a class="code hl_variable" href="#afe10fb6e1375ee9e0af78cb2077b2ac5">m_pfProcBuff1</a>);</div>
<div class="line"><span class="lineno">  234</span> </div>
<div class="line"><span class="lineno">  235</span>        <span class="comment">// normalize if specified</span></div>
<div class="line"><span class="lineno">  236</span>        <span class="keywordflow">if</span> (<a class="code hl_variable" href="#a4435f6e09b4e6a9a8ef68ffaa7c65d83">m_pCNormalize</a>)</div>
<div class="line"><span class="lineno">  237</span>            <a class="code hl_variable" href="#a4435f6e09b4e6a9a8ef68ffaa7c65d83">m_pCNormalize</a>-&gt;normalizeBlock(<a class="code hl_variable" href="#afe10fb6e1375ee9e0af78cb2077b2ac5">m_pfProcBuff1</a>, <a class="code hl_variable" href="#a3089ae4f4a6ac519490d02b4df1ab670">m_iBlockLength</a>);</div>
<div class="line"><span class="lineno">  238</span> </div>
<div class="line"><span class="lineno">  239</span>        <span class="keywordflow">if</span> (<a class="code hl_function" href="#a2aac3d25c179044493ad1c96fa877709">isFeatureSpectral_</a>(<a class="code hl_variable" href="#ad043d5900423040b84f134faa6b94053">m_pCFeature</a>-&gt;getFeatureIdx()))</div>
<div class="line"><span class="lineno">  240</span>            <a class="code hl_function" href="#a7aef37fcf40e80cbace42fe663f47bbd">computeMagSpectrum_</a>();</div>
<div class="line"><span class="lineno">  241</span> </div>
<div class="line"><span class="lineno">  242</span>        <a class="code hl_variable" href="#ad043d5900423040b84f134faa6b94053">m_pCFeature</a>-&gt;compFeature(<a class="code hl_variable" href="#a1120b07a3b6354d20be72c2b84d981af">m_pfProcBuff2</a>, <a class="code hl_variable" href="#afe10fb6e1375ee9e0af78cb2077b2ac5">m_pfProcBuff1</a>);</div>
<div class="line"><span class="lineno">  243</span> </div>
<div class="line"><span class="lineno">  244</span>        <span class="comment">// copy to output buffer</span></div>
<div class="line"><span class="lineno">  245</span>        <span class="keywordflow">for</span> (<span class="keyword">auto</span> k = 0; k &lt; iNumFeatures; k++)</div>
<div class="line"><span class="lineno">  246</span>            ppfFeature[k][n] = <a class="code hl_variable" href="#a1120b07a3b6354d20be72c2b84d981af">m_pfProcBuff2</a>[k];</div>
<div class="line"><span class="lineno">  247</span>    }</div>
<div class="line"><span class="lineno">  248</span> </div>
<div class="line"><span class="lineno">  249</span>    <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><span class="lineno">  250</span>}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00062_source.xhtml#l00313">computeMagSpectrum_()</a>, <a class="el" href="a00062_source.xhtml#l00371">isFeatureSpectral_()</a>, <a class="el" href="a00167_source.xhtml#l00014">kFunctionIllegalCallError</a>, <a class="el" href="a00167_source.xhtml#l00011">kFunctionInvalidArgsError</a>, <a class="el" href="a00167_source.xhtml#l00006">kNoError</a>, <a class="el" href="a00251_source.xhtml#l00148">m_bIsInitialized</a>, <a class="el" href="a00251_source.xhtml#l00140">m_iBlockLength</a>, <a class="el" href="a00251_source.xhtml#l00134">m_pCBlockAudio</a>, <a class="el" href="a00251_source.xhtml#l00136">m_pCFeature</a>, <a class="el" href="a00251_source.xhtml#l00132">m_pCNormalize</a>, <a class="el" href="a00251_source.xhtml#l00146">m_pfProcBuff1</a>, and <a class="el" href="a00251_source.xhtml#l00145">m_pfProcBuff2</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00002_source.xhtml#l00017">main()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00469_ad734d1e300583449f51e6ca80aa3e7b8_cgraph.svg" width="646" height="86"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00469_ad734d1e300583449f51e6ca80aa3e7b8_icgraph.svg" width="306" height="36"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a7aef37fcf40e80cbace42fe663f47bbd" name="a7aef37fcf40e80cbace42fe663f47bbd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7aef37fcf40e80cbace42fe663f47bbd">&#9670;&#160;</a></span>computeMagSpectrum_()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void CFeatureIf::computeMagSpectrum_ </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel protected">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>compute magnitude spectrum for spectral features </p>

<p class="definition">Definition at line <a class="el" href="a00062_source.xhtml#l00313">313</a> of file <a class="el" href="a00062_source.xhtml">Feature.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  314</span>{</div>
<div class="line"><span class="lineno">  315</span>    assert(<a class="code hl_variable" href="#aefea021443892024085d490fd774dd89">m_pCFft</a>);</div>
<div class="line"><span class="lineno">  316</span> </div>
<div class="line"><span class="lineno">  317</span>    <span class="comment">// compute magnitude spectrum (hack</span></div>
<div class="line"><span class="lineno">  318</span>    <a class="code hl_variable" href="#aefea021443892024085d490fd774dd89">m_pCFft</a>-&gt;compFft(<a class="code hl_variable" href="#a1120b07a3b6354d20be72c2b84d981af">m_pfProcBuff2</a>, <a class="code hl_variable" href="#afe10fb6e1375ee9e0af78cb2077b2ac5">m_pfProcBuff1</a>);</div>
<div class="line"><span class="lineno">  319</span>    <a class="code hl_variable" href="#aefea021443892024085d490fd774dd89">m_pCFft</a>-&gt;getMagnitude(<a class="code hl_variable" href="#afe10fb6e1375ee9e0af78cb2077b2ac5">m_pfProcBuff1</a>, <a class="code hl_variable" href="#a1120b07a3b6354d20be72c2b84d981af">m_pfProcBuff2</a>);</div>
<div class="line"><span class="lineno">  320</span> </div>
<div class="line"><span class="lineno">  321</span>    <a class="code hl_function" href="a00505.xhtml#a9811f50434dd058d201290b2dc98bfcd">CVector::mulC_I</a>(<a class="code hl_variable" href="#a1120b07a3b6354d20be72c2b84d981af">m_pfProcBuff2</a>, 2.F, <a class="code hl_variable" href="#aefea021443892024085d490fd774dd89">m_pCFft</a>-&gt;getLength(<a class="code hl_enumvalue" href="a00477.xhtml#aaeae67c99cd6e689243892e429a66e33a280c54c7da09951bd33a05dfb5dd4f8e">CFft::kLengthMagnitude</a>));</div>
<div class="line"><span class="lineno">  322</span>}</div>
<div class="ttc" id="aa00477_xhtml_aaeae67c99cd6e689243892e429a66e33a280c54c7da09951bd33a05dfb5dd4f8e"><div class="ttname"><a href="a00477.xhtml#aaeae67c99cd6e689243892e429a66e33a280c54c7da09951bd33a05dfb5dd4f8e">CFft::kLengthMagnitude</a></div><div class="ttdeci">@ kLengthMagnitude</div><div class="ttdoc">length of the magnitude spectrum</div><div class="ttdef"><b>Definition</b> <a href="a00200_source.xhtml#l00107">Fft.h:107</a></div></div>
<div class="ttc" id="aa00505_xhtml_a9811f50434dd058d201290b2dc98bfcd"><div class="ttname"><a href="a00505.xhtml#a9811f50434dd058d201290b2dc98bfcd">CVector::mulC_I</a></div><div class="ttdeci">static void mulC_I(T *ptSrcDest, T fScale, long long int iLength)</div><div class="ttdef"><b>Definition</b> <a href="a00185_source.xhtml#l00214">Vector.h:214</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00200_source.xhtml#l00107">CFft::kLengthMagnitude</a>, <a class="el" href="a00251_source.xhtml#l00138">m_pCFft</a>, <a class="el" href="a00251_source.xhtml#l00146">m_pfProcBuff1</a>, <a class="el" href="a00251_source.xhtml#l00145">m_pfProcBuff2</a>, and <a class="el" href="a00185_source.xhtml#l00214">CVector::mulC_I()</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00062_source.xhtml#l00178">compFeature1Dim()</a>, and <a class="el" href="a00062_source.xhtml#l00212">compFeatureNDim()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00469_a7aef37fcf40e80cbace42fe663f47bbd_cgraph.svg" width="400" height="36"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00469_a7aef37fcf40e80cbace42fe663f47bbd_icgraph.svg" width="580" height="86"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a3c515cfdf61c2bf96e656896c59f9076" name="a3c515cfdf61c2bf96e656896c59f9076"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3c515cfdf61c2bf96e656896c59f9076">&#9670;&#160;</a></span>create() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> CFeatureIf::create </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="a00469.xhtml">CFeatureIf</a> *&amp;</td>          <td class="paramname"><span class="paramname"><em>pCInstance</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="#a47ca14941c604beb42d60164b3e5e6b3">Feature_t</a></td>          <td class="paramname"><span class="paramname"><em>eFeatureIdx</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float *</td>          <td class="paramname"><span class="paramname"><em>pfAudio</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">long long</td>          <td class="paramname"><span class="paramname"><em>iNumSamples</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float</td>          <td class="paramname"><span class="paramname"><em>fSampleRate</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>iBlockLength</em></span><span class="paramdefsep"> = </span><span class="paramdefval">2048</span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>iHopLength</em></span><span class="paramdefsep"> = </span><span class="paramdefval">1024</span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel static">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>initializes a Feature instance from audio data </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pCInstance</td><td>pointer to instance to be written </td></tr>
    <tr><td class="paramname">eFeatureIdx</td><td>as defined in <a class="el" href="#a47ca14941c604beb42d60164b3e5e6b3" title="enum to index all features note: update CFeatureIf::isFeatureSpectral_() when modifying">Feature_t</a> </td></tr>
    <tr><td class="paramname">pfAudio</td><td>complete audio data </td></tr>
    <tr><td class="paramname">iNumSamples</td><td>length of pfAudio </td></tr>
    <tr><td class="paramname">fSampleRate</td><td>sample rate in Hz </td></tr>
    <tr><td class="paramname">iBlockLength</td><td>FFT block length in samples </td></tr>
    <tr><td class="paramname">iHopLength</td><td>hop length in samples </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> </dd></dl>

<p class="definition">Definition at line <a class="el" href="a00062_source.xhtml#l00111">111</a> of file <a class="el" href="a00062_source.xhtml">Feature.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  112</span>{</div>
<div class="line"><span class="lineno">  113</span>    <span class="keywordflow">if</span> (!pfAudio)</div>
<div class="line"><span class="lineno">  114</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248">Error_t::kFunctionInvalidArgsError</a>;</div>
<div class="line"><span class="lineno">  115</span>    <span class="keywordflow">if</span> (iNumSamples &lt;= 0)</div>
<div class="line"><span class="lineno">  116</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248">Error_t::kFunctionInvalidArgsError</a>;</div>
<div class="line"><span class="lineno">  117</span>    <span class="keywordflow">if</span> (fSampleRate &lt;= 0)</div>
<div class="line"><span class="lineno">  118</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248">Error_t::kFunctionInvalidArgsError</a>;</div>
<div class="line"><span class="lineno">  119</span>    <span class="keywordflow">if</span> (iBlockLength &lt;= 2)</div>
<div class="line"><span class="lineno">  120</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248">Error_t::kFunctionInvalidArgsError</a>;</div>
<div class="line"><span class="lineno">  121</span>    <span class="keywordflow">if</span> (iHopLength &lt;= 0 || iHopLength &gt; iBlockLength)</div>
<div class="line"><span class="lineno">  122</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248">Error_t::kFunctionInvalidArgsError</a>;</div>
<div class="line"><span class="lineno">  123</span> </div>
<div class="line"><span class="lineno">  124</span>    pCInstance = <span class="keyword">new</span> CFeatureFromVector(eFeatureIdx, pfAudio, iNumSamples, fSampleRate, iBlockLength, iHopLength);</div>
<div class="line"><span class="lineno">  125</span> </div>
<div class="line"><span class="lineno">  126</span>    <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><span class="lineno">  127</span>}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00062_source.xhtml#l00086">CFeatureIf()</a>, <a class="el" href="a00167_source.xhtml#l00011">kFunctionInvalidArgsError</a>, and <a class="el" href="a00167_source.xhtml#l00006">kNoError</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00469_a3c515cfdf61c2bf96e656896c59f9076_cgraph.svg" width="100%" height="413"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="af448569c0950f36034d84326d564cce9" name="af448569c0950f36034d84326d564cce9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af448569c0950f36034d84326d564cce9">&#9670;&#160;</a></span>create() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> CFeatureIf::create </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="a00469.xhtml">CFeatureIf</a> *&amp;</td>          <td class="paramname"><span class="paramname"><em>pCInstance</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="#a47ca14941c604beb42d60164b3e5e6b3">Feature_t</a></td>          <td class="paramname"><span class="paramname"><em>eFeatureIdx</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;</td>          <td class="paramname"><span class="paramname"><em>strAudioFilePath</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>iBlockLength</em></span><span class="paramdefsep"> = </span><span class="paramdefval">2048</span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>iHopLength</em></span><span class="paramdefsep"> = </span><span class="paramdefval">1024</span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel static">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>initializes a Feature instance with file reading </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pCInstance</td><td>pointer to instance to be written </td></tr>
    <tr><td class="paramname">eFeatureIdx</td><td>as defined in <a class="el" href="#a47ca14941c604beb42d60164b3e5e6b3" title="enum to index all features note: update CFeatureIf::isFeatureSpectral_() when modifying">Feature_t</a> </td></tr>
    <tr><td class="paramname">strAudioFilePath</td><td>complete path to audio file </td></tr>
    <tr><td class="paramname">iBlockLength</td><td>FFT block length in samples </td></tr>
    <tr><td class="paramname">iHopLength</td><td>hop length in samples </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> </dd></dl>

<p class="definition">Definition at line <a class="el" href="a00062_source.xhtml#l00096">96</a> of file <a class="el" href="a00062_source.xhtml">Feature.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   97</span>{</div>
<div class="line"><span class="lineno">   98</span>    <span class="keywordflow">if</span> (strAudioFilePath.empty())</div>
<div class="line"><span class="lineno">   99</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248">Error_t::kFunctionInvalidArgsError</a>;</div>
<div class="line"><span class="lineno">  100</span>    <span class="keywordflow">if</span> (iBlockLength &lt;= 2 || !<a class="code hl_function" href="a00501.xhtml#a6d0e75b0bcbbb243b7141cfc0126e443">CUtil::isPowOf2</a>(iBlockLength))</div>
<div class="line"><span class="lineno">  101</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248">Error_t::kFunctionInvalidArgsError</a>;</div>
<div class="line"><span class="lineno">  102</span>    <span class="keywordflow">if</span> (iHopLength &lt;= 0 || iHopLength &gt; iBlockLength)</div>
<div class="line"><span class="lineno">  103</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248">Error_t::kFunctionInvalidArgsError</a>;</div>
<div class="line"><span class="lineno">  104</span> </div>
<div class="line"><span class="lineno">  105</span>    pCInstance = <span class="keyword">new</span> CFeatureFromFile(eFeatureIdx, strAudioFilePath, iBlockLength, iHopLength);</div>
<div class="line"><span class="lineno">  106</span> </div>
<div class="line"><span class="lineno">  107</span> </div>
<div class="line"><span class="lineno">  108</span>    <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><span class="lineno">  109</span>}</div>
<div class="ttc" id="aa00501_xhtml_a6d0e75b0bcbbb243b7141cfc0126e443"><div class="ttname"><a href="a00501.xhtml#a6d0e75b0bcbbb243b7141cfc0126e443">CUtil::isPowOf2</a></div><div class="ttdeci">static bool isPowOf2(int n)</div><div class="ttdef"><b>Definition</b> <a href="a00191_source.xhtml#l00042">Util.h:42</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00062_source.xhtml#l00086">CFeatureIf()</a>, <a class="el" href="a00191_source.xhtml#l00042">CUtil::isPowOf2()</a>, <a class="el" href="a00167_source.xhtml#l00011">kFunctionInvalidArgsError</a>, and <a class="el" href="a00167_source.xhtml#l00006">kNoError</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00083_source.xhtml#l00046">CKey::init()</a>, <a class="el" href="a00083_source.xhtml#l00023">CKey::init()</a>, and <a class="el" href="a00002_source.xhtml#l00017">main()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00469_af448569c0950f36034d84326d564cce9_cgraph.svg" width="100%" height="413"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00469_af448569c0950f36034d84326d564cce9_icgraph.svg" width="356" height="135"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="ab0b833a2f828e941e08f84a47dcfcda8" name="ab0b833a2f828e941e08f84a47dcfcda8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab0b833a2f828e941e08f84a47dcfcda8">&#9670;&#160;</a></span>destroy()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> CFeatureIf::destroy </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="a00469.xhtml">CFeatureIf</a> *&amp;</td>          <td class="paramname"><span class="paramname"><em>pCInstance</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel static">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>destroys a Feature instance </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pCInstance</td><td>pointer to instance to be destroyed </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> </dd></dl>

<p class="definition">Definition at line <a class="el" href="a00062_source.xhtml#l00129">129</a> of file <a class="el" href="a00062_source.xhtml">Feature.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  130</span>{</div>
<div class="line"><span class="lineno">  131</span>    <span class="keyword">delete</span> pCInstance;</div>
<div class="line"><span class="lineno">  132</span>    pCInstance = 0;</div>
<div class="line"><span class="lineno">  133</span> </div>
<div class="line"><span class="lineno">  134</span>    <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><span class="lineno">  135</span>}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00062_source.xhtml#l00086">CFeatureIf()</a>, and <a class="el" href="a00167_source.xhtml#l00006">kNoError</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00002_source.xhtml#l00017">main()</a>, and <a class="el" href="a00083_source.xhtml#l00073">CKey::reset()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00469_ab0b833a2f828e941e08f84a47dcfcda8_cgraph.svg" width="100%" height="413"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00469_ab0b833a2f828e941e08f84a47dcfcda8_icgraph.svg" width="519" height="135"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="ad7e4c2c40aa96ea2d91eafffcde0608a" name="ad7e4c2c40aa96ea2d91eafffcde0608a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad7e4c2c40aa96ea2d91eafffcde0608a">&#9670;&#160;</a></span>getFeatureDimensions()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> CFeatureIf::getFeatureDimensions </td>
          <td>(</td>
          <td class="paramtype">int &amp;</td>          <td class="paramname"><span class="paramname"><em>iNumRows</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int &amp;</td>          <td class="paramname"><span class="paramname"><em>iNumCols</em></span>&#160;) const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>returns size of matrix to be allocated by user </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">iNumRows</td><td>(number of rows, to be written) equals number of feature values per time stamp </td></tr>
    <tr><td class="paramname">iNumCols</td><td>(number of columns, to be written) equals number of blocks </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> </dd></dl>

<p class="definition">Definition at line <a class="el" href="a00062_source.xhtml#l00137">137</a> of file <a class="el" href="a00062_source.xhtml">Feature.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  138</span>{</div>
<div class="line"><span class="lineno">  139</span>    <span class="keywordflow">if</span> (!<a class="code hl_variable" href="#ae6434d1f27108b3379c03c6b8a9dd7be">m_bIsInitialized</a>)</div>
<div class="line"><span class="lineno">  140</span>    {</div>
<div class="line"><span class="lineno">  141</span>        iNumRows = 0;</div>
<div class="line"><span class="lineno">  142</span>        iNumCols = 0;</div>
<div class="line"><span class="lineno">  143</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fad7652bf47cff43c21f12cb7df4ca66ec">Error_t::kFunctionIllegalCallError</a>;</div>
<div class="line"><span class="lineno">  144</span>    }</div>
<div class="line"><span class="lineno">  145</span> </div>
<div class="line"><span class="lineno">  146</span>    iNumRows = <a class="code hl_variable" href="#ad043d5900423040b84f134faa6b94053">m_pCFeature</a>-&gt;getFeatureDimensions();</div>
<div class="line"><span class="lineno">  147</span>    iNumCols = <span class="keyword">static_cast&lt;</span><span class="keywordtype">int</span><span class="keyword">&gt;</span>(<a class="code hl_variable" href="#a2910c6f2b2eb5ac8d635f712741a6c03">m_pCBlockAudio</a>-&gt;getNumBlocks());</div>
<div class="line"><span class="lineno">  148</span> </div>
<div class="line"><span class="lineno">  149</span>    <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><span class="lineno">  150</span>}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00167_source.xhtml#l00014">kFunctionIllegalCallError</a>, <a class="el" href="a00167_source.xhtml#l00006">kNoError</a>, <a class="el" href="a00251_source.xhtml#l00148">m_bIsInitialized</a>, <a class="el" href="a00251_source.xhtml#l00134">m_pCBlockAudio</a>, and <a class="el" href="a00251_source.xhtml#l00136">m_pCFeature</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00002_source.xhtml#l00017">main()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00469_ad7e4c2c40aa96ea2d91eafffcde0608a_icgraph.svg" width="327" height="36"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a159bc708acb32dd40d529531f418b0fc" name="a159bc708acb32dd40d529531f418b0fc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a159bc708acb32dd40d529531f418b0fc">&#9670;&#160;</a></span>getFeatureIdxFromString()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="#a47ca14941c604beb42d60164b3e5e6b3">CFeatureIf::Feature_t</a> CFeatureIf::getFeatureIdxFromString </td>
          <td>(</td>
          <td class="paramtype">std::string</td>          <td class="paramname"><span class="paramname"><em>sFeatureString</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel static">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>returns feature index from string </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">sFeatureString</td><td>string describing the feature </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="#a47ca14941c604beb42d60164b3e5e6b3" title="enum to index all features note: update CFeatureIf::isFeatureSpectral_() when modifying">Feature_t</a> </dd></dl>

<p class="definition">Definition at line <a class="el" href="a00062_source.xhtml#l00281">281</a> of file <a class="el" href="a00062_source.xhtml">Feature.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  282</span>{</div>
<div class="line"><span class="lineno">  283</span>    <span class="keyword">const</span> std::map&lt;std::string, CFeatureIf::Feature_t&gt; FeatureMap</div>
<div class="line"><span class="lineno">  284</span>    {</div>
<div class="line"><span class="lineno">  285</span>            {<span class="stringliteral">&quot;SpectralCentroid&quot;</span>, <a class="code hl_enumvalue" href="#a47ca14941c604beb42d60164b3e5e6b3af835ba1196c45135d5b2c14bd71765fe">kFeatureSpectralCentroid</a>},</div>
<div class="line"><span class="lineno">  286</span>            {<span class="stringliteral">&quot;SpectralCrestFactor&quot;</span>, <a class="code hl_enumvalue" href="#a47ca14941c604beb42d60164b3e5e6b3a56e83df863061d4093933f57dc036fd0">kFeatureSpectralCrestFactor</a>},</div>
<div class="line"><span class="lineno">  287</span>            {<span class="stringliteral">&quot;SpectralDecrease&quot;</span>, <a class="code hl_enumvalue" href="#a47ca14941c604beb42d60164b3e5e6b3a73840e0ec4ffc58aac491b51add4ebae">kFeatureSpectralDecrease</a>},</div>
<div class="line"><span class="lineno">  288</span>            {<span class="stringliteral">&quot;SpectralFlatness&quot;</span>, <a class="code hl_enumvalue" href="#a47ca14941c604beb42d60164b3e5e6b3abe659e5b25086d04ed78c40d7411b71d">kFeatureSpectralFlatness</a>},</div>
<div class="line"><span class="lineno">  289</span>            {<span class="stringliteral">&quot;SpectralFlux&quot;</span>, <a class="code hl_enumvalue" href="#a47ca14941c604beb42d60164b3e5e6b3ababfc8ce9c5b272fd805b5e8a1fb5ff6">kFeatureSpectralFlux</a>},</div>
<div class="line"><span class="lineno">  290</span>            {<span class="stringliteral">&quot;SpectralKurtosis&quot;</span>, <a class="code hl_enumvalue" href="#a47ca14941c604beb42d60164b3e5e6b3aa0fa60f5d1741a50b4e018ae35c53084">kFeatureSpectralKurtosis</a>},</div>
<div class="line"><span class="lineno">  291</span>            {<span class="stringliteral">&quot;SpectralMfccs&quot;</span>, <a class="code hl_enumvalue" href="#a47ca14941c604beb42d60164b3e5e6b3a47c4f31d2c8d477f955da1281c8bda85">kFeatureSpectralMfccs</a>},</div>
<div class="line"><span class="lineno">  292</span>            {<span class="stringliteral">&quot;SpectralPitchChroma&quot;</span>, <a class="code hl_enumvalue" href="#a47ca14941c604beb42d60164b3e5e6b3a6cca75d6d116b2284ae19d2b75093198">kFeatureSpectralPitchChroma</a>},</div>
<div class="line"><span class="lineno">  293</span>            {<span class="stringliteral">&quot;SpectralRolloff&quot;</span>, <a class="code hl_enumvalue" href="#a47ca14941c604beb42d60164b3e5e6b3a0fe1e0e5caf8fd22c48abcde74028c8f">kFeatureSpectralRolloff</a>},</div>
<div class="line"><span class="lineno">  294</span>            {<span class="stringliteral">&quot;SpectralSkewness&quot;</span>, <a class="code hl_enumvalue" href="#a47ca14941c604beb42d60164b3e5e6b3adc99879506ae42b73740c06987993d6b">kFeatureSpectralSkewness</a>},</div>
<div class="line"><span class="lineno">  295</span>            {<span class="stringliteral">&quot;SpectralSlope&quot;</span>, <a class="code hl_enumvalue" href="#a47ca14941c604beb42d60164b3e5e6b3ab48b0af125a41eb628e2867f53248828">kFeatureSpectralSlope</a>},</div>
<div class="line"><span class="lineno">  296</span>            {<span class="stringliteral">&quot;SpectralSpread&quot;</span>, <a class="code hl_enumvalue" href="#a47ca14941c604beb42d60164b3e5e6b3a2e51955c0f5d4edf37bb8b0c0b7af6f5">kFeatureSpectralSpread</a>},</div>
<div class="line"><span class="lineno">  297</span>            {<span class="stringliteral">&quot;SpectralTonalPowerRatio&quot;</span>, <a class="code hl_enumvalue" href="#a47ca14941c604beb42d60164b3e5e6b3ab91719fe00fbcbbd34b7b5b0e7631dfd">kFeatureSpectralTonalPowerRatio</a>},</div>
<div class="line"><span class="lineno">  298</span> </div>
<div class="line"><span class="lineno">  299</span>            {<span class="stringliteral">&quot;TimeAcfCoeff&quot;</span>, <a class="code hl_enumvalue" href="#a47ca14941c604beb42d60164b3e5e6b3ab6c784d49502082864d1ff9170564dcd">kFeatureTimeAcfCoeff</a>},</div>
<div class="line"><span class="lineno">  300</span>            {<span class="stringliteral">&quot;TimeMaxAcf&quot;</span>, <a class="code hl_enumvalue" href="#a47ca14941c604beb42d60164b3e5e6b3a1fcad202a3cfc949aed26a5ff806a180">kFeatureTimeMaxAcf</a>},</div>
<div class="line"><span class="lineno">  301</span>            {<span class="stringliteral">&quot;TimePeakEnvelope&quot;</span>, <a class="code hl_enumvalue" href="#a47ca14941c604beb42d60164b3e5e6b3a138118ff8341d41558cd0b32a85eafd3">kFeatureTimePeakEnvelope</a>},</div>
<div class="line"><span class="lineno">  302</span>            {<span class="stringliteral">&quot;TimeRms&quot;</span>, <a class="code hl_enumvalue" href="#a47ca14941c604beb42d60164b3e5e6b3aedb0c71ed62a6df3eb21f53cad93682a">kFeatureTimeRms</a>},</div>
<div class="line"><span class="lineno">  303</span>            {<span class="stringliteral">&quot;TimeStd&quot;</span>, <a class="code hl_enumvalue" href="#a47ca14941c604beb42d60164b3e5e6b3aa7fcbc742fe20a02ec32aa842ef5d9ac">kFeatureTimeStd</a>},</div>
<div class="line"><span class="lineno">  304</span>            {<span class="stringliteral">&quot;TimeZeroCrossingRate&quot;</span>, <a class="code hl_enumvalue" href="#a47ca14941c604beb42d60164b3e5e6b3a4358b37321d69645738c1494bb94b925">kFeatureTimeZeroCrossingRate</a>}</div>
<div class="line"><span class="lineno">  305</span>    };</div>
<div class="line"><span class="lineno">  306</span>    <span class="keyword">auto</span> search = FeatureMap.find(sFeatureString);</div>
<div class="line"><span class="lineno">  307</span>    <span class="keywordflow">if</span> (search != FeatureMap.end())</div>
<div class="line"><span class="lineno">  308</span>        <span class="keywordflow">return</span> FeatureMap.at(sFeatureString);</div>
<div class="line"><span class="lineno">  309</span>    <span class="keywordflow">else</span></div>
<div class="line"><span class="lineno">  310</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="#a47ca14941c604beb42d60164b3e5e6b3abe9b4914b84bc00da1aacb5f0068545d">kNumFeatures</a>;</div>
<div class="line"><span class="lineno">  311</span>}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00251_source.xhtml#l00026">kFeatureSpectralCentroid</a>, <a class="el" href="a00251_source.xhtml#l00027">kFeatureSpectralCrestFactor</a>, <a class="el" href="a00251_source.xhtml#l00028">kFeatureSpectralDecrease</a>, <a class="el" href="a00251_source.xhtml#l00029">kFeatureSpectralFlatness</a>, <a class="el" href="a00251_source.xhtml#l00030">kFeatureSpectralFlux</a>, <a class="el" href="a00251_source.xhtml#l00031">kFeatureSpectralKurtosis</a>, <a class="el" href="a00251_source.xhtml#l00032">kFeatureSpectralMfccs</a>, <a class="el" href="a00251_source.xhtml#l00033">kFeatureSpectralPitchChroma</a>, <a class="el" href="a00251_source.xhtml#l00034">kFeatureSpectralRolloff</a>, <a class="el" href="a00251_source.xhtml#l00035">kFeatureSpectralSkewness</a>, <a class="el" href="a00251_source.xhtml#l00036">kFeatureSpectralSlope</a>, <a class="el" href="a00251_source.xhtml#l00037">kFeatureSpectralSpread</a>, <a class="el" href="a00251_source.xhtml#l00038">kFeatureSpectralTonalPowerRatio</a>, <a class="el" href="a00251_source.xhtml#l00040">kFeatureTimeAcfCoeff</a>, <a class="el" href="a00251_source.xhtml#l00041">kFeatureTimeMaxAcf</a>, <a class="el" href="a00251_source.xhtml#l00042">kFeatureTimePeakEnvelope</a>, <a class="el" href="a00251_source.xhtml#l00043">kFeatureTimeRms</a>, <a class="el" href="a00251_source.xhtml#l00044">kFeatureTimeStd</a>, <a class="el" href="a00251_source.xhtml#l00045">kFeatureTimeZeroCrossingRate</a>, and <a class="el" href="a00251_source.xhtml#l00047">kNumFeatures</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00002_source.xhtml#l00017">main()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00469_a159bc708acb32dd40d529531f418b0fc_icgraph.svg" width="276" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="ad664423cee1d3ebfe68551e8f4a63dc2" name="ad664423cee1d3ebfe68551e8f4a63dc2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad664423cee1d3ebfe68551e8f4a63dc2">&#9670;&#160;</a></span>getFeatureString()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::string CFeatureIf::getFeatureString </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="#a47ca14941c604beb42d60164b3e5e6b3">Feature_t</a></td>          <td class="paramname"><span class="paramname"><em>eFeatureIdx</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel static">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>returns feature name as string </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">eFeatureIdx</td><td>feature index </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>std::string </dd></dl>

<p class="definition">Definition at line <a class="el" href="a00062_source.xhtml#l00252">252</a> of file <a class="el" href="a00062_source.xhtml">Feature.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  253</span>{</div>
<div class="line"><span class="lineno">  254</span>    <span class="keyword">const</span> std::map&lt;CFeatureIf::Feature_t, std::string&gt; FeatureMap</div>
<div class="line"><span class="lineno">  255</span>    {</div>
<div class="line"><span class="lineno">  256</span>            {<a class="code hl_enumvalue" href="#a47ca14941c604beb42d60164b3e5e6b3af835ba1196c45135d5b2c14bd71765fe">kFeatureSpectralCentroid</a>, <span class="stringliteral">&quot;SpectralCentroid&quot;</span>},</div>
<div class="line"><span class="lineno">  257</span>            {<a class="code hl_enumvalue" href="#a47ca14941c604beb42d60164b3e5e6b3a56e83df863061d4093933f57dc036fd0">kFeatureSpectralCrestFactor</a>, <span class="stringliteral">&quot;SpectralCrestFactor&quot;</span>},</div>
<div class="line"><span class="lineno">  258</span>            {<a class="code hl_enumvalue" href="#a47ca14941c604beb42d60164b3e5e6b3a73840e0ec4ffc58aac491b51add4ebae">kFeatureSpectralDecrease</a>, <span class="stringliteral">&quot;SpectralDecrease&quot;</span>},</div>
<div class="line"><span class="lineno">  259</span>            {<a class="code hl_enumvalue" href="#a47ca14941c604beb42d60164b3e5e6b3abe659e5b25086d04ed78c40d7411b71d">kFeatureSpectralFlatness</a>, <span class="stringliteral">&quot;SpectralFlatness&quot;</span>},</div>
<div class="line"><span class="lineno">  260</span>            {<a class="code hl_enumvalue" href="#a47ca14941c604beb42d60164b3e5e6b3ababfc8ce9c5b272fd805b5e8a1fb5ff6">kFeatureSpectralFlux</a>, <span class="stringliteral">&quot;SpectralFlux&quot;</span>},</div>
<div class="line"><span class="lineno">  261</span>            {<a class="code hl_enumvalue" href="#a47ca14941c604beb42d60164b3e5e6b3aa0fa60f5d1741a50b4e018ae35c53084">kFeatureSpectralKurtosis</a>, <span class="stringliteral">&quot;SpectralKurtosis&quot;</span>},</div>
<div class="line"><span class="lineno">  262</span>            {<a class="code hl_enumvalue" href="#a47ca14941c604beb42d60164b3e5e6b3a47c4f31d2c8d477f955da1281c8bda85">kFeatureSpectralMfccs</a>, <span class="stringliteral">&quot;SpectralMfccs&quot;</span>},</div>
<div class="line"><span class="lineno">  263</span>            {<a class="code hl_enumvalue" href="#a47ca14941c604beb42d60164b3e5e6b3a6cca75d6d116b2284ae19d2b75093198">kFeatureSpectralPitchChroma</a>, <span class="stringliteral">&quot;SpectralPitchChroma&quot;</span>},</div>
<div class="line"><span class="lineno">  264</span>            {<a class="code hl_enumvalue" href="#a47ca14941c604beb42d60164b3e5e6b3a0fe1e0e5caf8fd22c48abcde74028c8f">kFeatureSpectralRolloff</a>, <span class="stringliteral">&quot;SpectralRolloff&quot;</span>},</div>
<div class="line"><span class="lineno">  265</span>            {<a class="code hl_enumvalue" href="#a47ca14941c604beb42d60164b3e5e6b3adc99879506ae42b73740c06987993d6b">kFeatureSpectralSkewness</a>, <span class="stringliteral">&quot;SpectralSkewness&quot;</span>},</div>
<div class="line"><span class="lineno">  266</span>            {<a class="code hl_enumvalue" href="#a47ca14941c604beb42d60164b3e5e6b3ab48b0af125a41eb628e2867f53248828">kFeatureSpectralSlope</a>, <span class="stringliteral">&quot;SpectralSlope&quot;</span>},</div>
<div class="line"><span class="lineno">  267</span>            {<a class="code hl_enumvalue" href="#a47ca14941c604beb42d60164b3e5e6b3a2e51955c0f5d4edf37bb8b0c0b7af6f5">kFeatureSpectralSpread</a>, <span class="stringliteral">&quot;SpectralSpread&quot;</span>},</div>
<div class="line"><span class="lineno">  268</span>            {<a class="code hl_enumvalue" href="#a47ca14941c604beb42d60164b3e5e6b3ab91719fe00fbcbbd34b7b5b0e7631dfd">kFeatureSpectralTonalPowerRatio</a>, <span class="stringliteral">&quot;SpectralTonalPowerRatio&quot;</span>},</div>
<div class="line"><span class="lineno">  269</span> </div>
<div class="line"><span class="lineno">  270</span>            {<a class="code hl_enumvalue" href="#a47ca14941c604beb42d60164b3e5e6b3ab6c784d49502082864d1ff9170564dcd">kFeatureTimeAcfCoeff</a>, <span class="stringliteral">&quot;TimeAcfCoeff&quot;</span>},</div>
<div class="line"><span class="lineno">  271</span>            {<a class="code hl_enumvalue" href="#a47ca14941c604beb42d60164b3e5e6b3a1fcad202a3cfc949aed26a5ff806a180">kFeatureTimeMaxAcf</a>, <span class="stringliteral">&quot;TimeMaxAcf&quot;</span>},</div>
<div class="line"><span class="lineno">  272</span>            {<a class="code hl_enumvalue" href="#a47ca14941c604beb42d60164b3e5e6b3a138118ff8341d41558cd0b32a85eafd3">kFeatureTimePeakEnvelope</a>, <span class="stringliteral">&quot;TimePeakEnvelope&quot;</span>},</div>
<div class="line"><span class="lineno">  273</span>            {<a class="code hl_enumvalue" href="#a47ca14941c604beb42d60164b3e5e6b3aedb0c71ed62a6df3eb21f53cad93682a">kFeatureTimeRms</a>, <span class="stringliteral">&quot;TimeRms&quot;</span>},</div>
<div class="line"><span class="lineno">  274</span>            {<a class="code hl_enumvalue" href="#a47ca14941c604beb42d60164b3e5e6b3aa7fcbc742fe20a02ec32aa842ef5d9ac">kFeatureTimeStd</a>, <span class="stringliteral">&quot;TimeStd&quot;</span>},</div>
<div class="line"><span class="lineno">  275</span>            {<a class="code hl_enumvalue" href="#a47ca14941c604beb42d60164b3e5e6b3a4358b37321d69645738c1494bb94b925">kFeatureTimeZeroCrossingRate</a>, <span class="stringliteral">&quot;TimeZeroCrossingRate&quot;</span>}</div>
<div class="line"><span class="lineno">  276</span>    };</div>
<div class="line"><span class="lineno">  277</span> </div>
<div class="line"><span class="lineno">  278</span>    <span class="keywordflow">return</span> FeatureMap.at(eFeatureIdx);</div>
<div class="line"><span class="lineno">  279</span>}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00251_source.xhtml#l00026">kFeatureSpectralCentroid</a>, <a class="el" href="a00251_source.xhtml#l00027">kFeatureSpectralCrestFactor</a>, <a class="el" href="a00251_source.xhtml#l00028">kFeatureSpectralDecrease</a>, <a class="el" href="a00251_source.xhtml#l00029">kFeatureSpectralFlatness</a>, <a class="el" href="a00251_source.xhtml#l00030">kFeatureSpectralFlux</a>, <a class="el" href="a00251_source.xhtml#l00031">kFeatureSpectralKurtosis</a>, <a class="el" href="a00251_source.xhtml#l00032">kFeatureSpectralMfccs</a>, <a class="el" href="a00251_source.xhtml#l00033">kFeatureSpectralPitchChroma</a>, <a class="el" href="a00251_source.xhtml#l00034">kFeatureSpectralRolloff</a>, <a class="el" href="a00251_source.xhtml#l00035">kFeatureSpectralSkewness</a>, <a class="el" href="a00251_source.xhtml#l00036">kFeatureSpectralSlope</a>, <a class="el" href="a00251_source.xhtml#l00037">kFeatureSpectralSpread</a>, <a class="el" href="a00251_source.xhtml#l00038">kFeatureSpectralTonalPowerRatio</a>, <a class="el" href="a00251_source.xhtml#l00040">kFeatureTimeAcfCoeff</a>, <a class="el" href="a00251_source.xhtml#l00041">kFeatureTimeMaxAcf</a>, <a class="el" href="a00251_source.xhtml#l00042">kFeatureTimePeakEnvelope</a>, <a class="el" href="a00251_source.xhtml#l00043">kFeatureTimeRms</a>, <a class="el" href="a00251_source.xhtml#l00044">kFeatureTimeStd</a>, and <a class="el" href="a00251_source.xhtml#l00045">kFeatureTimeZeroCrossingRate</a>.</p>

</div>
</div>
<a id="ad93a887c59ee3297e735416bccbf64fa" name="ad93a887c59ee3297e735416bccbf64fa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad93a887c59ee3297e735416bccbf64fa">&#9670;&#160;</a></span>getTimeStamp()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">float CFeatureIf::getTimeStamp </td>
          <td>(</td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>iBlockIdx</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>returns time stamps </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">iBlockIdx</td><td>index of block </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>float time stamp </dd></dl>

<p class="definition">Definition at line <a class="el" href="a00062_source.xhtml#l00152">152</a> of file <a class="el" href="a00062_source.xhtml">Feature.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  153</span>{</div>
<div class="line"><span class="lineno">  154</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="#a2910c6f2b2eb5ac8d635f712741a6c03">m_pCBlockAudio</a>-&gt;getTimeStamp(iBlockIdx);</div>
<div class="line"><span class="lineno">  155</span>}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00251_source.xhtml#l00134">m_pCBlockAudio</a>.</p>

</div>
</div>
<a id="a5013a2baa00e09d8d157c7e443c15b5f" name="a5013a2baa00e09d8d157c7e443c15b5f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5013a2baa00e09d8d157c7e443c15b5f">&#9670;&#160;</a></span>getTimeStamps()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> CFeatureIf::getTimeStamps </td>
          <td>(</td>
          <td class="paramtype">float *</td>          <td class="paramname"><span class="paramname"><em>pfAxisTicks</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>returns time stamps </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pfAxisTicks</td><td>(user- allocated, to be written) length iNumBlocks </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> </dd></dl>

<p class="definition">Definition at line <a class="el" href="a00062_source.xhtml#l00157">157</a> of file <a class="el" href="a00062_source.xhtml">Feature.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  158</span>{</div>
<div class="line"><span class="lineno">  159</span>    <span class="keywordflow">if</span> (!<a class="code hl_variable" href="#ae6434d1f27108b3379c03c6b8a9dd7be">m_bIsInitialized</a>)</div>
<div class="line"><span class="lineno">  160</span>    {</div>
<div class="line"><span class="lineno">  161</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fad7652bf47cff43c21f12cb7df4ca66ec">Error_t::kFunctionIllegalCallError</a>;</div>
<div class="line"><span class="lineno">  162</span>    }</div>
<div class="line"><span class="lineno">  163</span> </div>
<div class="line"><span class="lineno">  164</span>    <span class="keywordflow">if</span> (!pfAxisTicks)</div>
<div class="line"><span class="lineno">  165</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248">Error_t::kFunctionInvalidArgsError</a>;</div>
<div class="line"><span class="lineno">  166</span> </div>
<div class="line"><span class="lineno">  167</span>    assert(<a class="code hl_variable" href="#a3089ae4f4a6ac519490d02b4df1ab670">m_iBlockLength</a> &gt; 0);</div>
<div class="line"><span class="lineno">  168</span>    assert(<a class="code hl_variable" href="#a749f724487e2e960ea14204298ac86c6">m_iHopLength</a> &gt; 0);</div>
<div class="line"><span class="lineno">  169</span>    assert(<a class="code hl_variable" href="#a8e062ede6469deb5b58e018ee924126b">m_fSampleRate</a> &gt; 0);</div>
<div class="line"><span class="lineno">  170</span> </div>
<div class="line"><span class="lineno">  171</span>    <span class="keywordtype">long</span> <span class="keywordtype">long</span> iNumBlocks = <a class="code hl_variable" href="#a2910c6f2b2eb5ac8d635f712741a6c03">m_pCBlockAudio</a>-&gt;getNumBlocks();</div>
<div class="line"><span class="lineno">  172</span>    <span class="keywordflow">for</span> (<span class="keyword">auto</span> n = 0; n &lt; iNumBlocks; n++)</div>
<div class="line"><span class="lineno">  173</span>        pfAxisTicks[n] = <a class="code hl_variable" href="#a2910c6f2b2eb5ac8d635f712741a6c03">m_pCBlockAudio</a>-&gt;getTimeStamp(n);</div>
<div class="line"><span class="lineno">  174</span> </div>
<div class="line"><span class="lineno">  175</span>    <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><span class="lineno">  176</span>}</div>
<div class="ttc" id="aa00469_xhtml_a749f724487e2e960ea14204298ac86c6"><div class="ttname"><a href="#a749f724487e2e960ea14204298ac86c6">CFeatureIf::m_iHopLength</a></div><div class="ttdeci">int m_iHopLength</div><div class="ttdoc">hop length</div><div class="ttdef"><b>Definition</b> <a href="a00251_source.xhtml#l00141">Feature.h:141</a></div></div>
<div class="ttc" id="aa00469_xhtml_a8e062ede6469deb5b58e018ee924126b"><div class="ttname"><a href="#a8e062ede6469deb5b58e018ee924126b">CFeatureIf::m_fSampleRate</a></div><div class="ttdeci">float m_fSampleRate</div><div class="ttdoc">sample rate</div><div class="ttdef"><b>Definition</b> <a href="a00251_source.xhtml#l00143">Feature.h:143</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00167_source.xhtml#l00014">kFunctionIllegalCallError</a>, <a class="el" href="a00167_source.xhtml#l00011">kFunctionInvalidArgsError</a>, <a class="el" href="a00167_source.xhtml#l00006">kNoError</a>, <a class="el" href="a00251_source.xhtml#l00148">m_bIsInitialized</a>, <a class="el" href="a00251_source.xhtml#l00143">m_fSampleRate</a>, <a class="el" href="a00251_source.xhtml#l00140">m_iBlockLength</a>, <a class="el" href="a00251_source.xhtml#l00141">m_iHopLength</a>, and <a class="el" href="a00251_source.xhtml#l00134">m_pCBlockAudio</a>.</p>

</div>
</div>
<a id="ab38ca831ee8ae42a8a95e33af4f756ba" name="ab38ca831ee8ae42a8a95e33af4f756ba"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab38ca831ee8ae42a8a95e33af4f756ba">&#9670;&#160;</a></span>init_()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> CFeatureIf::init_ </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="#a47ca14941c604beb42d60164b3e5e6b3">Feature_t</a></td>          <td class="paramname"><span class="paramname"><em>eFeatureIdx</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel protected">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>init configuration </p>

<p class="definition">Definition at line <a class="el" href="a00062_source.xhtml#l00348">348</a> of file <a class="el" href="a00062_source.xhtml">Feature.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  349</span>{</div>
<div class="line"><span class="lineno">  350</span>    <span class="keywordflow">if</span> (<a class="code hl_function" href="#a2aac3d25c179044493ad1c96fa877709">isFeatureSpectral_</a>(eFeatureIdx))</div>
<div class="line"><span class="lineno">  351</span>    {</div>
<div class="line"><span class="lineno">  352</span>        <span class="comment">// initialize FFT and fft  buffer</span></div>
<div class="line"><span class="lineno">  353</span>        <a class="code hl_variable" href="#aefea021443892024085d490fd774dd89">m_pCFft</a> = <span class="keyword">new</span> CFft();</div>
<div class="line"><span class="lineno">  354</span>        <a class="code hl_variable" href="#aefea021443892024085d490fd774dd89">m_pCFft</a>-&gt;init(<a class="code hl_variable" href="#a3089ae4f4a6ac519490d02b4df1ab670">m_iBlockLength</a>);</div>
<div class="line"><span class="lineno">  355</span>        <span class="comment">// allocate processing memory</span></div>
<div class="line"><span class="lineno">  356</span>        <a class="code hl_function" href="a00505.xhtml#abaadac98b1cad18b7b568852bc951696">CVector::alloc</a>(<a class="code hl_variable" href="#afe10fb6e1375ee9e0af78cb2077b2ac5">m_pfProcBuff1</a>, <a class="code hl_variable" href="#aefea021443892024085d490fd774dd89">m_pCFft</a>-&gt;getLength(<a class="code hl_enumvalue" href="a00477.xhtml#aaeae67c99cd6e689243892e429a66e33aae7f8e9cc1d7b43fa0239ce2122d4d6a">CFft::kLengthFft</a>));</div>
<div class="line"><span class="lineno">  357</span>        <a class="code hl_function" href="a00505.xhtml#abaadac98b1cad18b7b568852bc951696">CVector::alloc</a>(<a class="code hl_variable" href="#a1120b07a3b6354d20be72c2b84d981af">m_pfProcBuff2</a>, <a class="code hl_variable" href="#aefea021443892024085d490fd774dd89">m_pCFft</a>-&gt;getLength(<a class="code hl_enumvalue" href="a00477.xhtml#aaeae67c99cd6e689243892e429a66e33aae7f8e9cc1d7b43fa0239ce2122d4d6a">CFft::kLengthFft</a>));</div>
<div class="line"><span class="lineno">  358</span>        <a class="code hl_function" href="a00473.xhtml#a6d3ca4f66582ae352e3addfd7f99a752">CFeatureFromBlockIf::create</a>(<a class="code hl_variable" href="#ad043d5900423040b84f134faa6b94053">m_pCFeature</a>, eFeatureIdx, <a class="code hl_variable" href="#aefea021443892024085d490fd774dd89">m_pCFft</a>-&gt;getLength(<a class="code hl_enumvalue" href="a00477.xhtml#aaeae67c99cd6e689243892e429a66e33a280c54c7da09951bd33a05dfb5dd4f8e">CFft::kLengthMagnitude</a>), <a class="code hl_variable" href="#a8e062ede6469deb5b58e018ee924126b">m_fSampleRate</a>);</div>
<div class="line"><span class="lineno">  359</span>    }</div>
<div class="line"><span class="lineno">  360</span>    <span class="keywordflow">else</span></div>
<div class="line"><span class="lineno">  361</span>    {</div>
<div class="line"><span class="lineno">  362</span>        <span class="comment">// allocate processing memory</span></div>
<div class="line"><span class="lineno">  363</span>        <a class="code hl_function" href="a00505.xhtml#abaadac98b1cad18b7b568852bc951696">CVector::alloc</a>(<a class="code hl_variable" href="#afe10fb6e1375ee9e0af78cb2077b2ac5">m_pfProcBuff1</a>, <a class="code hl_variable" href="#a3089ae4f4a6ac519490d02b4df1ab670">m_iBlockLength</a>);</div>
<div class="line"><span class="lineno">  364</span>        <a class="code hl_function" href="a00473.xhtml#a6d3ca4f66582ae352e3addfd7f99a752">CFeatureFromBlockIf::create</a>(<a class="code hl_variable" href="#ad043d5900423040b84f134faa6b94053">m_pCFeature</a>, eFeatureIdx, <a class="code hl_variable" href="#a3089ae4f4a6ac519490d02b4df1ab670">m_iBlockLength</a>, <a class="code hl_variable" href="#a8e062ede6469deb5b58e018ee924126b">m_fSampleRate</a>);</div>
<div class="line"><span class="lineno">  365</span>    }</div>
<div class="line"><span class="lineno">  366</span>    <a class="code hl_variable" href="#ae6434d1f27108b3379c03c6b8a9dd7be">m_bIsInitialized</a> = <span class="keyword">true</span>;</div>
<div class="line"><span class="lineno">  367</span> </div>
<div class="line"><span class="lineno">  368</span>    <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><span class="lineno">  369</span>}</div>
<div class="ttc" id="aa00473_xhtml_a6d3ca4f66582ae352e3addfd7f99a752"><div class="ttname"><a href="a00473.xhtml#a6d3ca4f66582ae352e3addfd7f99a752">CFeatureFromBlockIf::create</a></div><div class="ttdeci">static Error_t create(CFeatureFromBlockIf *&amp;pCInstance, CFeatureIf::Feature_t eFeatureIdx, int iDataLength, float fSampleRate=1.F)</div><div class="ttdef"><b>Definition</b> <a href="a00047_source.xhtml#l00986">FeatureFromBlock.cpp:986</a></div></div>
<div class="ttc" id="aa00477_xhtml_aaeae67c99cd6e689243892e429a66e33aae7f8e9cc1d7b43fa0239ce2122d4d6a"><div class="ttname"><a href="a00477.xhtml#aaeae67c99cd6e689243892e429a66e33aae7f8e9cc1d7b43fa0239ce2122d4d6a">CFft::kLengthFft</a></div><div class="ttdeci">@ kLengthFft</div><div class="ttdoc">length of the FFT</div><div class="ttdef"><b>Definition</b> <a href="a00200_source.xhtml#l00105">Fft.h:105</a></div></div>
<div class="ttc" id="aa00505_xhtml_abaadac98b1cad18b7b568852bc951696"><div class="ttname"><a href="a00505.xhtml#abaadac98b1cad18b7b568852bc951696">CVector::alloc</a></div><div class="ttdeci">static void alloc(T *&amp;ptVec, long long iLength)</div><div class="ttdef"><b>Definition</b> <a href="a00185_source.xhtml#l00025">Vector.h:25</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00185_source.xhtml#l00025">CVector::alloc()</a>, <a class="el" href="a00047_source.xhtml#l00986">CFeatureFromBlockIf::create()</a>, <a class="el" href="a00062_source.xhtml#l00371">isFeatureSpectral_()</a>, <a class="el" href="a00200_source.xhtml#l00105">CFft::kLengthFft</a>, <a class="el" href="a00200_source.xhtml#l00107">CFft::kLengthMagnitude</a>, <a class="el" href="a00167_source.xhtml#l00006">kNoError</a>, <a class="el" href="a00251_source.xhtml#l00148">m_bIsInitialized</a>, <a class="el" href="a00251_source.xhtml#l00143">m_fSampleRate</a>, <a class="el" href="a00251_source.xhtml#l00140">m_iBlockLength</a>, <a class="el" href="a00251_source.xhtml#l00136">m_pCFeature</a>, <a class="el" href="a00251_source.xhtml#l00138">m_pCFft</a>, <a class="el" href="a00251_source.xhtml#l00146">m_pfProcBuff1</a>, and <a class="el" href="a00251_source.xhtml#l00145">m_pfProcBuff2</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00062_source.xhtml#l00035">CFeatureFromFile::CFeatureFromFile()</a>, and <a class="el" href="a00062_source.xhtml#l00067">CFeatureFromVector::CFeatureFromVector()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00469_ab38ca831ee8ae42a8a95e33af4f756ba_cgraph.svg" width="568" height="151"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00469_ab38ca831ee8ae42a8a95e33af4f756ba_icgraph.svg" width="356" height="118"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a2aac3d25c179044493ad1c96fa877709" name="a2aac3d25c179044493ad1c96fa877709"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2aac3d25c179044493ad1c96fa877709">&#9670;&#160;</a></span>isFeatureSpectral_()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00263.xhtml#abb452686968e48b67397da5f97445f5b">bool</a> CFeatureIf::isFeatureSpectral_ </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="#a47ca14941c604beb42d60164b3e5e6b3">Feature_t</a></td>          <td class="paramname"><span class="paramname"><em>eFeatureIdx</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel protected">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>bool differentiating between time and spectral features </p>

<p class="definition">Definition at line <a class="el" href="a00062_source.xhtml#l00371">371</a> of file <a class="el" href="a00062_source.xhtml">Feature.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  372</span>{</div>
<div class="line"><span class="lineno">  373</span>    <span class="keywordflow">return</span> (eFeatureIdx &lt;= <a class="code hl_enumvalue" href="#a47ca14941c604beb42d60164b3e5e6b3ab91719fe00fbcbbd34b7b5b0e7631dfd">kFeatureSpectralTonalPowerRatio</a>) ? <a class="code hl_define" href="a00263.xhtml#a41f9c5fb8b08eb5dc3edce4dcb37fee7">true</a> : <span class="keyword">false</span>;</div>
<div class="line"><span class="lineno">  374</span>}</div>
<div class="ttc" id="aa00263_xhtml_a41f9c5fb8b08eb5dc3edce4dcb37fee7"><div class="ttname"><a href="a00263.xhtml#a41f9c5fb8b08eb5dc3edce4dcb37fee7">true</a></div><div class="ttdeci">#define true</div><div class="ttdef"><b>Definition</b> <a href="a00263_source.xhtml#l00097">s7.h:97</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00251_source.xhtml#l00038">kFeatureSpectralTonalPowerRatio</a>, and <a class="el" href="a00263_source.xhtml#l00097">true</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00062_source.xhtml#l00178">compFeature1Dim()</a>, <a class="el" href="a00062_source.xhtml#l00212">compFeatureNDim()</a>, and <a class="el" href="a00062_source.xhtml#l00348">init_()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00469_a2aac3d25c179044493ad1c96fa877709_icgraph.svg" width="100%" height="448"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a7d2b196aa1c1e83deacf285d8a001e49" name="a7d2b196aa1c1e83deacf285d8a001e49"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7d2b196aa1c1e83deacf285d8a001e49">&#9670;&#160;</a></span>operator=()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00469.xhtml">CFeatureIf</a> &amp; CFeatureIf::operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="a00469.xhtml">CFeatureIf</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>c</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel protected">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="reference">References <a class="el" href="a00062_source.xhtml#l00086">CFeatureIf()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00469_a7d2b196aa1c1e83deacf285d8a001e49_cgraph.svg" width="100%" height="413"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a7b77edaf405fefd82329d8987b16d1f2" name="a7b77edaf405fefd82329d8987b16d1f2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7b77edaf405fefd82329d8987b16d1f2">&#9670;&#160;</a></span>reset_()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> CFeatureIf::reset_ </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel protected">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>reset configuration </p>

<p class="definition">Definition at line <a class="el" href="a00062_source.xhtml#l00325">325</a> of file <a class="el" href="a00062_source.xhtml">Feature.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  326</span>{</div>
<div class="line"><span class="lineno">  327</span>    <a class="code hl_function" href="a00505.xhtml#aa86bdb0c663d4d52f2765793756f8737">CVector::free</a>(<a class="code hl_variable" href="#afe10fb6e1375ee9e0af78cb2077b2ac5">m_pfProcBuff1</a>);</div>
<div class="line"><span class="lineno">  328</span> </div>
<div class="line"><span class="lineno">  329</span>    <a class="code hl_function" href="a00505.xhtml#aa86bdb0c663d4d52f2765793756f8737">CVector::free</a>(<a class="code hl_variable" href="#a1120b07a3b6354d20be72c2b84d981af">m_pfProcBuff2</a>);</div>
<div class="line"><span class="lineno">  330</span> </div>
<div class="line"><span class="lineno">  331</span>    <span class="keyword">delete</span> <a class="code hl_variable" href="#aefea021443892024085d490fd774dd89">m_pCFft</a>;</div>
<div class="line"><span class="lineno">  332</span>    <a class="code hl_variable" href="#aefea021443892024085d490fd774dd89">m_pCFft</a> = 0;</div>
<div class="line"><span class="lineno">  333</span> </div>
<div class="line"><span class="lineno">  334</span>    <span class="keyword">delete</span> <a class="code hl_variable" href="#a4435f6e09b4e6a9a8ef68ffaa7c65d83">m_pCNormalize</a>;</div>
<div class="line"><span class="lineno">  335</span>    <a class="code hl_variable" href="#a4435f6e09b4e6a9a8ef68ffaa7c65d83">m_pCNormalize</a> = 0;</div>
<div class="line"><span class="lineno">  336</span> </div>
<div class="line"><span class="lineno">  337</span>    <a class="code hl_function" href="a00545.xhtml#a13d2bd6e36210dde0c64d188c1266b88">CBlockAudioIf::destroy</a>(<a class="code hl_variable" href="#a2910c6f2b2eb5ac8d635f712741a6c03">m_pCBlockAudio</a>);</div>
<div class="line"><span class="lineno">  338</span>    <a class="code hl_function" href="a00473.xhtml#a300e7b2134b2bd0faaa24cfecbd9cb51">CFeatureFromBlockIf::destroy</a>(<a class="code hl_variable" href="#ad043d5900423040b84f134faa6b94053">m_pCFeature</a>);</div>
<div class="line"><span class="lineno">  339</span> </div>
<div class="line"><span class="lineno">  340</span>    <a class="code hl_variable" href="#a3089ae4f4a6ac519490d02b4df1ab670">m_iBlockLength</a> = 0;</div>
<div class="line"><span class="lineno">  341</span>    <a class="code hl_variable" href="#a749f724487e2e960ea14204298ac86c6">m_iHopLength</a> = 0;</div>
<div class="line"><span class="lineno">  342</span> </div>
<div class="line"><span class="lineno">  343</span>    <a class="code hl_variable" href="#ae6434d1f27108b3379c03c6b8a9dd7be">m_bIsInitialized</a> = <span class="keyword">false</span>;</div>
<div class="line"><span class="lineno">  344</span> </div>
<div class="line"><span class="lineno">  345</span>    <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><span class="lineno">  346</span>}</div>
<div class="ttc" id="aa00473_xhtml_a300e7b2134b2bd0faaa24cfecbd9cb51"><div class="ttname"><a href="a00473.xhtml#a300e7b2134b2bd0faaa24cfecbd9cb51">CFeatureFromBlockIf::destroy</a></div><div class="ttdeci">static Error_t destroy(CFeatureFromBlockIf *&amp;pCInstance)</div><div class="ttdef"><b>Definition</b> <a href="a00047_source.xhtml#l01048">FeatureFromBlock.cpp:1048</a></div></div>
<div class="ttc" id="aa00505_xhtml_aa86bdb0c663d4d52f2765793756f8737"><div class="ttname"><a href="a00505.xhtml#aa86bdb0c663d4d52f2765793756f8737">CVector::free</a></div><div class="ttdeci">static void free(T *&amp;ptVec)</div><div class="ttdef"><b>Definition</b> <a href="a00185_source.xhtml#l00057">Vector.h:57</a></div></div>
<div class="ttc" id="aa00545_xhtml_a13d2bd6e36210dde0c64d188c1266b88"><div class="ttname"><a href="a00545.xhtml#a13d2bd6e36210dde0c64d188c1266b88">CBlockAudioIf::destroy</a></div><div class="ttdeci">static Error_t destroy(CBlockAudioIf *&amp;pCInstance)</div><div class="ttdef"><b>Definition</b> <a href="a00242_source.xhtml#l00038">ToolBlockAudio.h:38</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00242_source.xhtml#l00038">CBlockAudioIf::destroy()</a>, <a class="el" href="a00047_source.xhtml#l01048">CFeatureFromBlockIf::destroy()</a>, <a class="el" href="a00185_source.xhtml#l00057">CVector::free()</a>, <a class="el" href="a00167_source.xhtml#l00006">kNoError</a>, <a class="el" href="a00251_source.xhtml#l00148">m_bIsInitialized</a>, <a class="el" href="a00251_source.xhtml#l00140">m_iBlockLength</a>, <a class="el" href="a00251_source.xhtml#l00141">m_iHopLength</a>, <a class="el" href="a00251_source.xhtml#l00134">m_pCBlockAudio</a>, <a class="el" href="a00251_source.xhtml#l00136">m_pCFeature</a>, <a class="el" href="a00251_source.xhtml#l00138">m_pCFft</a>, <a class="el" href="a00251_source.xhtml#l00132">m_pCNormalize</a>, <a class="el" href="a00251_source.xhtml#l00146">m_pfProcBuff1</a>, and <a class="el" href="a00251_source.xhtml#l00145">m_pfProcBuff2</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00062_source.xhtml#l00035">CFeatureFromFile::CFeatureFromFile()</a>, <a class="el" href="a00062_source.xhtml#l00086">CFeatureIf()</a>, and <a class="el" href="a00062_source.xhtml#l00091">~CFeatureIf()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00469_a7b77edaf405fefd82329d8987b16d1f2_cgraph.svg" width="578" height="151"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00469_a7b77edaf405fefd82329d8987b16d1f2_icgraph.svg" width="100%" height="475"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="ae6434d1f27108b3379c03c6b8a9dd7be" name="ae6434d1f27108b3379c03c6b8a9dd7be"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae6434d1f27108b3379c03c6b8a9dd7be">&#9670;&#160;</a></span>m_bIsInitialized</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00263.xhtml#abb452686968e48b67397da5f97445f5b">bool</a> CFeatureIf::m_bIsInitialized = <a class="el" href="a00263.xhtml#a65e9886d74aaee76545e83dd09011727">false</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel protected">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>true if initialized </p>

<p class="definition">Definition at line <a class="el" href="a00251_source.xhtml#l00148">148</a> of file <a class="el" href="a00251_source.xhtml">Feature.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00062_source.xhtml#l00178">compFeature1Dim()</a>, <a class="el" href="a00062_source.xhtml#l00212">compFeatureNDim()</a>, <a class="el" href="a00062_source.xhtml#l00137">getFeatureDimensions()</a>, <a class="el" href="a00062_source.xhtml#l00157">getTimeStamps()</a>, <a class="el" href="a00062_source.xhtml#l00348">init_()</a>, and <a class="el" href="a00062_source.xhtml#l00325">reset_()</a>.</p>

</div>
</div>
<a id="a8e062ede6469deb5b58e018ee924126b" name="a8e062ede6469deb5b58e018ee924126b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8e062ede6469deb5b58e018ee924126b">&#9670;&#160;</a></span>m_fSampleRate</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float CFeatureIf::m_fSampleRate = 0</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel protected">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>sample rate </p>

<p class="definition">Definition at line <a class="el" href="a00251_source.xhtml#l00143">143</a> of file <a class="el" href="a00251_source.xhtml">Feature.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00062_source.xhtml#l00035">CFeatureFromFile::CFeatureFromFile()</a>, <a class="el" href="a00062_source.xhtml#l00067">CFeatureFromVector::CFeatureFromVector()</a>, <a class="el" href="a00062_source.xhtml#l00157">getTimeStamps()</a>, and <a class="el" href="a00062_source.xhtml#l00348">init_()</a>.</p>

</div>
</div>
<a id="a3089ae4f4a6ac519490d02b4df1ab670" name="a3089ae4f4a6ac519490d02b4df1ab670"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3089ae4f4a6ac519490d02b4df1ab670">&#9670;&#160;</a></span>m_iBlockLength</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int CFeatureIf::m_iBlockLength = 0</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel protected">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>fft length </p>

<p class="definition">Definition at line <a class="el" href="a00251_source.xhtml#l00140">140</a> of file <a class="el" href="a00251_source.xhtml">Feature.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00062_source.xhtml#l00035">CFeatureFromFile::CFeatureFromFile()</a>, <a class="el" href="a00062_source.xhtml#l00067">CFeatureFromVector::CFeatureFromVector()</a>, <a class="el" href="a00062_source.xhtml#l00178">compFeature1Dim()</a>, <a class="el" href="a00062_source.xhtml#l00212">compFeatureNDim()</a>, <a class="el" href="a00062_source.xhtml#l00157">getTimeStamps()</a>, <a class="el" href="a00062_source.xhtml#l00348">init_()</a>, and <a class="el" href="a00062_source.xhtml#l00325">reset_()</a>.</p>

</div>
</div>
<a id="a749f724487e2e960ea14204298ac86c6" name="a749f724487e2e960ea14204298ac86c6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a749f724487e2e960ea14204298ac86c6">&#9670;&#160;</a></span>m_iHopLength</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int CFeatureIf::m_iHopLength = 0</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel protected">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>hop length </p>

<p class="definition">Definition at line <a class="el" href="a00251_source.xhtml#l00141">141</a> of file <a class="el" href="a00251_source.xhtml">Feature.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00062_source.xhtml#l00035">CFeatureFromFile::CFeatureFromFile()</a>, <a class="el" href="a00062_source.xhtml#l00067">CFeatureFromVector::CFeatureFromVector()</a>, <a class="el" href="a00062_source.xhtml#l00157">getTimeStamps()</a>, and <a class="el" href="a00062_source.xhtml#l00325">reset_()</a>.</p>

</div>
</div>
<a id="a2910c6f2b2eb5ac8d635f712741a6c03" name="a2910c6f2b2eb5ac8d635f712741a6c03"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2910c6f2b2eb5ac8d635f712741a6c03">&#9670;&#160;</a></span>m_pCBlockAudio</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00545.xhtml">CBlockAudioIf</a>* CFeatureIf::m_pCBlockAudio = 0</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel protected">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>instantiate for blocking time domain signal </p>

<p class="definition">Definition at line <a class="el" href="a00251_source.xhtml#l00134">134</a> of file <a class="el" href="a00251_source.xhtml">Feature.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00062_source.xhtml#l00035">CFeatureFromFile::CFeatureFromFile()</a>, <a class="el" href="a00062_source.xhtml#l00067">CFeatureFromVector::CFeatureFromVector()</a>, <a class="el" href="a00062_source.xhtml#l00178">compFeature1Dim()</a>, <a class="el" href="a00062_source.xhtml#l00212">compFeatureNDim()</a>, <a class="el" href="a00062_source.xhtml#l00137">getFeatureDimensions()</a>, <a class="el" href="a00062_source.xhtml#l00152">getTimeStamp()</a>, <a class="el" href="a00062_source.xhtml#l00157">getTimeStamps()</a>, and <a class="el" href="a00062_source.xhtml#l00325">reset_()</a>.</p>

</div>
</div>
<a id="ad043d5900423040b84f134faa6b94053" name="ad043d5900423040b84f134faa6b94053"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad043d5900423040b84f134faa6b94053">&#9670;&#160;</a></span>m_pCFeature</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00473.xhtml">CFeatureFromBlockIf</a>* CFeatureIf::m_pCFeature = 0</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel protected">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>instance for feature computation with one block of data </p>

<p class="definition">Definition at line <a class="el" href="a00251_source.xhtml#l00136">136</a> of file <a class="el" href="a00251_source.xhtml">Feature.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00062_source.xhtml#l00178">compFeature1Dim()</a>, <a class="el" href="a00062_source.xhtml#l00212">compFeatureNDim()</a>, <a class="el" href="a00062_source.xhtml#l00137">getFeatureDimensions()</a>, <a class="el" href="a00062_source.xhtml#l00348">init_()</a>, and <a class="el" href="a00062_source.xhtml#l00325">reset_()</a>.</p>

</div>
</div>
<a id="aefea021443892024085d490fd774dd89" name="aefea021443892024085d490fd774dd89"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aefea021443892024085d490fd774dd89">&#9670;&#160;</a></span>m_pCFft</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00477.xhtml">CFft</a>* CFeatureIf::m_pCFft = 0</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel protected">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>fft instance </p>

<p class="definition">Definition at line <a class="el" href="a00251_source.xhtml#l00138">138</a> of file <a class="el" href="a00251_source.xhtml">Feature.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00062_source.xhtml#l00178">compFeature1Dim()</a>, <a class="el" href="a00062_source.xhtml#l00313">computeMagSpectrum_()</a>, <a class="el" href="a00062_source.xhtml#l00348">init_()</a>, and <a class="el" href="a00062_source.xhtml#l00325">reset_()</a>.</p>

</div>
</div>
<a id="a4435f6e09b4e6a9a8ef68ffaa7c65d83" name="a4435f6e09b4e6a9a8ef68ffaa7c65d83"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4435f6e09b4e6a9a8ef68ffaa7c65d83">&#9670;&#160;</a></span>m_pCNormalize</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00609.xhtml">CNormalizeAudio</a>* CFeatureIf::m_pCNormalize = 0</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel protected">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>instantiate if audio file normalization is wanted </p>

<p class="definition">Definition at line <a class="el" href="a00251_source.xhtml#l00132">132</a> of file <a class="el" href="a00251_source.xhtml">Feature.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00062_source.xhtml#l00035">CFeatureFromFile::CFeatureFromFile()</a>, <a class="el" href="a00062_source.xhtml#l00067">CFeatureFromVector::CFeatureFromVector()</a>, <a class="el" href="a00062_source.xhtml#l00178">compFeature1Dim()</a>, <a class="el" href="a00062_source.xhtml#l00212">compFeatureNDim()</a>, <a class="el" href="a00062_source.xhtml#l00325">reset_()</a>, and <a class="el" href="a00062_source.xhtml#l00020">CFeatureFromFile::~CFeatureFromFile()</a>.</p>

</div>
</div>
<a id="afe10fb6e1375ee9e0af78cb2077b2ac5" name="afe10fb6e1375ee9e0af78cb2077b2ac5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afe10fb6e1375ee9e0af78cb2077b2ac5">&#9670;&#160;</a></span>m_pfProcBuff1</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float* CFeatureIf::m_pfProcBuff1 = 0</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel protected">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>temporary buffer </p>

<p class="definition">Definition at line <a class="el" href="a00251_source.xhtml#l00146">146</a> of file <a class="el" href="a00251_source.xhtml">Feature.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00062_source.xhtml#l00178">compFeature1Dim()</a>, <a class="el" href="a00062_source.xhtml#l00212">compFeatureNDim()</a>, <a class="el" href="a00062_source.xhtml#l00313">computeMagSpectrum_()</a>, <a class="el" href="a00062_source.xhtml#l00348">init_()</a>, <a class="el" href="a00062_source.xhtml#l00325">reset_()</a>, and <a class="el" href="a00062_source.xhtml#l00020">CFeatureFromFile::~CFeatureFromFile()</a>.</p>

</div>
</div>
<a id="a1120b07a3b6354d20be72c2b84d981af" name="a1120b07a3b6354d20be72c2b84d981af"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1120b07a3b6354d20be72c2b84d981af">&#9670;&#160;</a></span>m_pfProcBuff2</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float* CFeatureIf::m_pfProcBuff2 = 0</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel protected">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>temporary buffer </p>

<p class="definition">Definition at line <a class="el" href="a00251_source.xhtml#l00145">145</a> of file <a class="el" href="a00251_source.xhtml">Feature.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00062_source.xhtml#l00178">compFeature1Dim()</a>, <a class="el" href="a00062_source.xhtml#l00212">compFeatureNDim()</a>, <a class="el" href="a00062_source.xhtml#l00313">computeMagSpectrum_()</a>, <a class="el" href="a00062_source.xhtml#l00348">init_()</a>, and <a class="el" href="a00062_source.xhtml#l00325">reset_()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="a00251_source.xhtml">Feature.h</a></li>
<li><a class="el" href="a00062_source.xhtml">Feature.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="a00469.xhtml">CFeatureIf</a></li>
    <li class="footer">Generated on Sat Jan 11 2025 18:58:05 for ACA by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.13.1 </li>
  </ul>
</div>
</body>
</html>
