<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.4"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ACA: ClassifierBase.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">ACA<span id="projectnumber">&#160;0.3.1</span>
   </div>
   <div id="projectbrief">Example Code for Audio Content Analysis</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.4 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search",'Search','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('a00245_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle"><div class="title">ClassifierBase.h</div></div>
</div><!--header-->
<div class="contents">
<a href="a00245.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="preprocessor">#if !defined(__ACA_ClassifierBase_HEADER_INCLUDED__)</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span><span class="preprocessor">#define __ACA_ClassifierBase_HEADER_INCLUDED__</span></div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span> </div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span><span class="preprocessor">#pragma once</span></div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span> </div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span><span class="preprocessor">#include &quot;<a class="code" href="a00155.xhtml">Vector.h</a>&quot;</span></div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span><span class="comment"></span> </div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span><span class="comment">/*! \brief abstract base class for traditional classifiers</span></div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span><span class="comment">*/</span></div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno"><a class="line" href="a00462.xhtml">   10</a></span><span class="keyword">class </span><a class="code hl_class" href="a00462.xhtml">CClassifierBase</a></div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span>{</div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno"><a class="line" href="a00462.xhtml#af377eef1d7dfdfabcdf7da4b069b5e7a">   13</a></span>    <span class="keyword">enum</span> <a class="code hl_enumeration" href="a00462.xhtml#af377eef1d7dfdfabcdf7da4b069b5e7a">Normalization_t</a></div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span>    {</div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno"><a class="line" href="a00462.xhtml#af377eef1d7dfdfabcdf7da4b069b5e7aa13644efee7aaca8e6257a398fce7d009">   15</a></span>        <a class="code hl_enumvalue" href="a00462.xhtml#af377eef1d7dfdfabcdf7da4b069b5e7aa13644efee7aaca8e6257a398fce7d009">kNoNormalization</a>,</div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno"><a class="line" href="a00462.xhtml#af377eef1d7dfdfabcdf7da4b069b5e7aadc077b94c0074c958d27ed221a6dc41a">   16</a></span>        <a class="code hl_enumvalue" href="a00462.xhtml#af377eef1d7dfdfabcdf7da4b069b5e7aadc077b94c0074c958d27ed221a6dc41a">kZscoreNormalization</a>,</div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno"><a class="line" href="a00462.xhtml#af377eef1d7dfdfabcdf7da4b069b5e7aa2f9e22c352c5ba390e17bd44af9ae42a">   17</a></span>        <a class="code hl_enumvalue" href="a00462.xhtml#af377eef1d7dfdfabcdf7da4b069b5e7aa2f9e22c352c5ba390e17bd44af9ae42a">kMinmaxNormalization</a>,</div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span> </div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span>        <a class="code hl_enumvalue" href="a00462.xhtml#af377eef1d7dfdfabcdf7da4b069b5e7aa7551b9946a039fd91846e27db7258801">kNumNormModes</a></div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno"><a class="line" href="a00462.xhtml#af377eef1d7dfdfabcdf7da4b069b5e7aa7551b9946a039fd91846e27db7258801">   20</a></span>    };</div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno"><a class="line" href="a00462.xhtml#ac4365e3be5e1cc7ac964fcb6294aaae1">   21</a></span>    <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">int</span> <a class="code hl_variable" href="a00462.xhtml#ac4365e3be5e1cc7ac964fcb6294aaae1">kIllegalClassLabel</a>; <span class="comment">//!&lt; indicates something went wrong (this number should not be used as a class label)</span></div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span><span class="comment"></span> </div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span><span class="comment">    /*! initializes instance</span></div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span><span class="comment">    \param iNumFeatures number of features (rows in the input matrix)</span></div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span><span class="comment">    \param iNumObs number of observations (columns in the feature matrix)</span></div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span><span class="comment">    \return Error_t</span></div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span><span class="comment">    */</span></div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno"><a class="line" href="a00462.xhtml#a6175ec9334e19d0350f8e1b2e7eb8a34">   28</a></span>    <span class="keyword">virtual</span> <a class="code hl_enumeration" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> <a class="code hl_function" href="a00462.xhtml#a6175ec9334e19d0350f8e1b2e7eb8a34">init</a>(<span class="keywordtype">int</span> iNumFeatures, <span class="keywordtype">int</span> iNumObs) = 0;</div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span><span class="comment"></span> </div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span><span class="comment">    /*! trains a classifier instance</span></div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span><span class="comment">    \param ppfTrainFeatures feature data for &#39;training&#39; (dimensions iNumFeatures X iNumObs)</span></div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span><span class="comment">    \param piTrainClassIndices ground truth class index for each observation</span></div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span><span class="comment">    \param eNorm specification of what normalization should be applied to the feature data</span></div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span><span class="comment">    \return Error_t</span></div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span><span class="comment">    */</span></div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno"><a class="line" href="a00462.xhtml#a5584fab7955acdaf55c5bd0bcf7eaecb">   36</a></span>    <span class="keyword">virtual</span> <a class="code hl_enumeration" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> <a class="code hl_function" href="a00462.xhtml#a5584fab7955acdaf55c5bd0bcf7eaecb">train</a>(<span class="keyword">const</span> <span class="keywordtype">float</span>* <span class="keyword">const</span>* <span class="keyword">const</span> ppfTrainFeatures, <span class="keyword">const</span> <span class="keywordtype">int</span>* piTrainClassIndices, <a class="code hl_enumeration" href="a00462.xhtml#af377eef1d7dfdfabcdf7da4b069b5e7a">Normalization_t</a> eNorm = <a class="code hl_enumvalue" href="a00462.xhtml#af377eef1d7dfdfabcdf7da4b069b5e7aa13644efee7aaca8e6257a398fce7d009">kNoNormalization</a>) = 0;</div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span><span class="comment"></span> </div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span><span class="comment">    /*! resets classifier instance</span></div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span><span class="comment">    \return Error_t</span></div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span><span class="comment">    */</span></div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno"><a class="line" href="a00462.xhtml#a132f6c33b7f0ec539dabce8c970eac9e">   41</a></span>    <span class="keyword">virtual</span> <a class="code hl_enumeration" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> <a class="code hl_function" href="a00462.xhtml#a132f6c33b7f0ec539dabce8c970eac9e">reset</a>() = 0;</div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span><span class="comment"></span> </div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span><span class="comment">    /*! classifies a new query vector</span></div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span><span class="comment">    \param pfQuery vector of length iNumFeatures to classify</span></div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span><span class="comment">    \return int class label of most likely class (returns CClassifierBase::kIllegalClassLabel in case of error)</span></div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span><span class="comment">    */</span></div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno"><a class="line" href="a00462.xhtml#ae187572c8c6af54f060105b91cf72e9f">   47</a></span>    <span class="keyword">virtual</span> <span class="keywordtype">int</span> <a class="code hl_function" href="a00462.xhtml#ae187572c8c6af54f060105b91cf72e9f">classify</a>(<span class="keyword">const</span> <span class="keywordtype">float</span>* pfQuery) = 0;</div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span> </div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span><span class="keyword">protected</span>:</div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno"><a class="line" href="a00462.xhtml#a188fe66bc48b61ffc1f0648adc15d7ca">   50</a></span>    <span class="keyword">virtual</span> <a class="code hl_function" href="a00462.xhtml#a188fe66bc48b61ffc1f0648adc15d7ca">~CClassifierBase</a>()</div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span>    {</div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span>        <a class="code hl_function" href="a00502.xhtml#aa86bdb0c663d4d52f2765793756f8737">CVector::free</a>(<a class="code hl_variable" href="a00462.xhtml#ae9729a067f3756489d9226fbccb19ee0">m_pfNormScale</a>);</div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span>        <a class="code hl_function" href="a00502.xhtml#aa86bdb0c663d4d52f2765793756f8737">CVector::free</a>(<a class="code hl_variable" href="a00462.xhtml#af5d1fadf97cfa2d47235316815e70964">m_pfNormSub</a>);</div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span>    }</div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span><span class="comment"></span> </div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno">   56</span><span class="comment">    /*! estimates the constants for data normalization</span></div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span><span class="comment">    \param ppfTrainFeatures training feature matrix (iNumFeatures X iNumObs)</span></div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span><span class="comment">    \param iNumFeatures number of features (rows in the input matrix)</span></div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span><span class="comment">    \param iNumObs number of observations (columns in the feature matrix)</span></div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span><span class="comment">    \param eNorm method for normalization</span></div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span><span class="comment">    */</span></div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno"><a class="line" href="a00462.xhtml#a9c21f9c80f6880682d822c53232bbff9">   62</a></span>    <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code hl_function" href="a00462.xhtml#a9c21f9c80f6880682d822c53232bbff9">compNormConstants</a>(<span class="keyword">const</span> <span class="keywordtype">float</span>* <span class="keyword">const</span>* <span class="keyword">const</span> ppfTrainFeatures, <span class="keywordtype">int</span> iNumFeatures, <span class="keywordtype">int</span> iNumObs, <a class="code hl_enumeration" href="a00462.xhtml#af377eef1d7dfdfabcdf7da4b069b5e7a">Normalization_t</a> eNorm)</div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span>    {</div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno">   64</span>        assert(<a class="code hl_variable" href="a00462.xhtml#ae9729a067f3756489d9226fbccb19ee0">m_pfNormScale</a>);</div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span>        assert(<a class="code hl_variable" href="a00462.xhtml#af5d1fadf97cfa2d47235316815e70964">m_pfNormSub</a>);</div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span> </div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno">   67</span>        <span class="comment">// normalization constants</span></div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span>        <span class="keywordflow">if</span> (eNorm == <a class="code hl_enumvalue" href="a00462.xhtml#af377eef1d7dfdfabcdf7da4b069b5e7aadc077b94c0074c958d27ed221a6dc41a">kZscoreNormalization</a>)</div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span>        {</div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno">   70</span>            <span class="keywordflow">for</span> (<span class="keyword">auto</span> f = 0; f &lt; iNumFeatures; f++)</div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span>            {</div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span>                <a class="code hl_variable" href="a00462.xhtml#af5d1fadf97cfa2d47235316815e70964">m_pfNormSub</a>[f] = <a class="code hl_function" href="a00502.xhtml#ae6e3545cf196c5e2409365bc62b7c1de">CVector::getMean</a>(ppfTrainFeatures[f], iNumObs);</div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span>                <a class="code hl_variable" href="a00462.xhtml#ae9729a067f3756489d9226fbccb19ee0">m_pfNormScale</a>[f] = <a class="code hl_function" href="a00502.xhtml#ae2ed42101e3d7075f5dec265a23f3424">CVector::getStd</a>(ppfTrainFeatures[f], iNumObs, <a class="code hl_variable" href="a00462.xhtml#af5d1fadf97cfa2d47235316815e70964">m_pfNormSub</a>[f]);</div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span>                <span class="keywordflow">if</span> (<a class="code hl_variable" href="a00462.xhtml#ae9729a067f3756489d9226fbccb19ee0">m_pfNormScale</a>[f] &gt; 0)</div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span>                    <a class="code hl_variable" href="a00462.xhtml#ae9729a067f3756489d9226fbccb19ee0">m_pfNormScale</a>[f] = 1.F / <a class="code hl_variable" href="a00462.xhtml#ae9729a067f3756489d9226fbccb19ee0">m_pfNormScale</a>[f];</div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span>            }</div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span>        }</div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span>        <span class="keywordflow">else</span> <span class="keywordflow">if</span> (eNorm == <a class="code hl_enumvalue" href="a00462.xhtml#af377eef1d7dfdfabcdf7da4b069b5e7aa2f9e22c352c5ba390e17bd44af9ae42a">kMinmaxNormalization</a>)</div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span>        {</div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span>            <span class="keywordflow">for</span> (<span class="keyword">auto</span> f = 0; f &lt; iNumFeatures; f++)</div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span>            {</div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno">   82</span>                <a class="code hl_variable" href="a00462.xhtml#af5d1fadf97cfa2d47235316815e70964">m_pfNormSub</a>[f] = <a class="code hl_function" href="a00502.xhtml#a1f7f307c20239cfd2007393e2b3b26df">CVector::getMin</a>(ppfTrainFeatures[f], iNumObs);</div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span>                <a class="code hl_variable" href="a00462.xhtml#ae9729a067f3756489d9226fbccb19ee0">m_pfNormScale</a>[f] = <a class="code hl_function" href="a00502.xhtml#a9f5be871090bc5a64a7732cebfb4f8ec">CVector::getMax</a>(ppfTrainFeatures[f], iNumObs) - <a class="code hl_variable" href="a00462.xhtml#af5d1fadf97cfa2d47235316815e70964">m_pfNormSub</a>[f];</div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span>                <span class="keywordflow">if</span> (<a class="code hl_variable" href="a00462.xhtml#ae9729a067f3756489d9226fbccb19ee0">m_pfNormScale</a>[f] != 0)</div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span>                    <a class="code hl_variable" href="a00462.xhtml#ae9729a067f3756489d9226fbccb19ee0">m_pfNormScale</a>[f] = 1.F / <a class="code hl_variable" href="a00462.xhtml#ae9729a067f3756489d9226fbccb19ee0">m_pfNormScale</a>[f];</div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno">   86</span>            }</div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span>        }</div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span>        <span class="keywordflow">else</span></div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span>        {</div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span>            <a class="code hl_function" href="a00502.xhtml#a4cf9544dd96801e3ee47fd1ef2049a1b">CVector::setValue</a>(<a class="code hl_variable" href="a00462.xhtml#ae9729a067f3756489d9226fbccb19ee0">m_pfNormScale</a>, 1.F, iNumFeatures);</div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span>            <a class="code hl_function" href="a00502.xhtml#a6dbb3f9f480568b60f7fe50090d20003">CVector::setZero</a>(<a class="code hl_variable" href="a00462.xhtml#af5d1fadf97cfa2d47235316815e70964">m_pfNormSub</a>, iNumFeatures);</div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span>        }</div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno">   93</span>    }</div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span><span class="comment"></span> </div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span><span class="comment">    /*! normalizes a new query vector according to previously extracted constants</span></div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span><span class="comment">    \param pfQuery vector of length iNumFeatures to classify</span></div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno">   97</span><span class="comment">    \param iNumFeatures number of features (rows in the input matrix)</span></div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno">   98</span><span class="comment">    */</span></div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno"><a class="line" href="a00462.xhtml#ac6a2a71d24b2beaa2b183d8659fd93f8">   99</a></span>    <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code hl_function" href="a00462.xhtml#ac6a2a71d24b2beaa2b183d8659fd93f8">normalizeVector</a>(<span class="keywordtype">float</span>* pfQuery, <span class="keywordtype">int</span> iNumFeatures)</div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span>    {</div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno">  101</span>        <a class="code hl_function" href="a00502.xhtml#a39329371d828db80c2f0ad037074c998">CVector::sub_I</a>(pfQuery, <a class="code hl_variable" href="a00462.xhtml#af5d1fadf97cfa2d47235316815e70964">m_pfNormSub</a>, iNumFeatures);</div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno">  102</span>        <a class="code hl_function" href="a00502.xhtml#a5fb59528a3f5d3968f988d550b270898">CVector::mul_I</a>(pfQuery, <a class="code hl_variable" href="a00462.xhtml#ae9729a067f3756489d9226fbccb19ee0">m_pfNormScale</a>, iNumFeatures);</div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno">  103</span>    }</div>
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno">  104</span> </div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno"><a class="line" href="a00462.xhtml#ae9729a067f3756489d9226fbccb19ee0">  105</a></span>    <span class="keywordtype">float</span>* <a class="code hl_variable" href="a00462.xhtml#ae9729a067f3756489d9226fbccb19ee0">m_pfNormScale</a> = 0; <span class="comment">//!&lt; scaling constant for normalization (length m_iNumFeatures)</span></div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno"><a class="line" href="a00462.xhtml#af5d1fadf97cfa2d47235316815e70964">  106</a></span>    <span class="keywordtype">float</span>* <a class="code hl_variable" href="a00462.xhtml#af5d1fadf97cfa2d47235316815e70964">m_pfNormSub</a> = 0; <span class="comment">//!&lt; offset for normalization (length m_iNumFeatures)</span></div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span>};</div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno">  108</span> </div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span><span class="preprocessor">#endif </span><span class="comment">//__ACA_ClassifierBase_HEADER_INCLUDED__</span></div>
<div class="ttc" id="aa00155_xhtml"><div class="ttname"><a href="a00155.xhtml">Vector.h</a></div></div>
<div class="ttc" id="aa00224_xhtml_a4e8c0d09726859e3d3369c0da5a1aa7f"><div class="ttname"><a href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a></div><div class="ttdeci">Error_t</div><div class="ttdef"><b>Definition:</b> <a href="a00224_source.xhtml#l00004">ErrorDef.h:5</a></div></div>
<div class="ttc" id="aa00462_xhtml"><div class="ttname"><a href="a00462.xhtml">CClassifierBase</a></div><div class="ttdoc">abstract base class for traditional classifiers</div><div class="ttdef"><b>Definition:</b> <a href="a00245_source.xhtml#l00010">ClassifierBase.h:11</a></div></div>
<div class="ttc" id="aa00462_xhtml_a132f6c33b7f0ec539dabce8c970eac9e"><div class="ttname"><a href="a00462.xhtml#a132f6c33b7f0ec539dabce8c970eac9e">CClassifierBase::reset</a></div><div class="ttdeci">virtual Error_t reset()=0</div></div>
<div class="ttc" id="aa00462_xhtml_a188fe66bc48b61ffc1f0648adc15d7ca"><div class="ttname"><a href="a00462.xhtml#a188fe66bc48b61ffc1f0648adc15d7ca">CClassifierBase::~CClassifierBase</a></div><div class="ttdeci">virtual ~CClassifierBase()</div><div class="ttdef"><b>Definition:</b> <a href="a00245_source.xhtml#l00050">ClassifierBase.h:50</a></div></div>
<div class="ttc" id="aa00462_xhtml_a5584fab7955acdaf55c5bd0bcf7eaecb"><div class="ttname"><a href="a00462.xhtml#a5584fab7955acdaf55c5bd0bcf7eaecb">CClassifierBase::train</a></div><div class="ttdeci">virtual Error_t train(const float *const *const ppfTrainFeatures, const int *piTrainClassIndices, Normalization_t eNorm=kNoNormalization)=0</div></div>
<div class="ttc" id="aa00462_xhtml_a6175ec9334e19d0350f8e1b2e7eb8a34"><div class="ttname"><a href="a00462.xhtml#a6175ec9334e19d0350f8e1b2e7eb8a34">CClassifierBase::init</a></div><div class="ttdeci">virtual Error_t init(int iNumFeatures, int iNumObs)=0</div></div>
<div class="ttc" id="aa00462_xhtml_a9c21f9c80f6880682d822c53232bbff9"><div class="ttname"><a href="a00462.xhtml#a9c21f9c80f6880682d822c53232bbff9">CClassifierBase::compNormConstants</a></div><div class="ttdeci">virtual void compNormConstants(const float *const *const ppfTrainFeatures, int iNumFeatures, int iNumObs, Normalization_t eNorm)</div><div class="ttdef"><b>Definition:</b> <a href="a00245_source.xhtml#l00062">ClassifierBase.h:62</a></div></div>
<div class="ttc" id="aa00462_xhtml_ac4365e3be5e1cc7ac964fcb6294aaae1"><div class="ttname"><a href="a00462.xhtml#ac4365e3be5e1cc7ac964fcb6294aaae1">CClassifierBase::kIllegalClassLabel</a></div><div class="ttdeci">static const int kIllegalClassLabel</div><div class="ttdoc">indicates something went wrong (this number should not be used as a class label)</div><div class="ttdef"><b>Definition:</b> <a href="a00245_source.xhtml#l00021">ClassifierBase.h:21</a></div></div>
<div class="ttc" id="aa00462_xhtml_ac6a2a71d24b2beaa2b183d8659fd93f8"><div class="ttname"><a href="a00462.xhtml#ac6a2a71d24b2beaa2b183d8659fd93f8">CClassifierBase::normalizeVector</a></div><div class="ttdeci">virtual void normalizeVector(float *pfQuery, int iNumFeatures)</div><div class="ttdef"><b>Definition:</b> <a href="a00245_source.xhtml#l00099">ClassifierBase.h:99</a></div></div>
<div class="ttc" id="aa00462_xhtml_ae187572c8c6af54f060105b91cf72e9f"><div class="ttname"><a href="a00462.xhtml#ae187572c8c6af54f060105b91cf72e9f">CClassifierBase::classify</a></div><div class="ttdeci">virtual int classify(const float *pfQuery)=0</div></div>
<div class="ttc" id="aa00462_xhtml_ae9729a067f3756489d9226fbccb19ee0"><div class="ttname"><a href="a00462.xhtml#ae9729a067f3756489d9226fbccb19ee0">CClassifierBase::m_pfNormScale</a></div><div class="ttdeci">float * m_pfNormScale</div><div class="ttdoc">scaling constant for normalization (length m_iNumFeatures)</div><div class="ttdef"><b>Definition:</b> <a href="a00245_source.xhtml#l00105">ClassifierBase.h:105</a></div></div>
<div class="ttc" id="aa00462_xhtml_af377eef1d7dfdfabcdf7da4b069b5e7a"><div class="ttname"><a href="a00462.xhtml#af377eef1d7dfdfabcdf7da4b069b5e7a">CClassifierBase::Normalization_t</a></div><div class="ttdeci">Normalization_t</div><div class="ttdef"><b>Definition:</b> <a href="a00245_source.xhtml#l00013">ClassifierBase.h:14</a></div></div>
<div class="ttc" id="aa00462_xhtml_af377eef1d7dfdfabcdf7da4b069b5e7aa13644efee7aaca8e6257a398fce7d009"><div class="ttname"><a href="a00462.xhtml#af377eef1d7dfdfabcdf7da4b069b5e7aa13644efee7aaca8e6257a398fce7d009">CClassifierBase::kNoNormalization</a></div><div class="ttdeci">@ kNoNormalization</div><div class="ttdef"><b>Definition:</b> <a href="a00245_source.xhtml#l00015">ClassifierBase.h:15</a></div></div>
<div class="ttc" id="aa00462_xhtml_af377eef1d7dfdfabcdf7da4b069b5e7aa2f9e22c352c5ba390e17bd44af9ae42a"><div class="ttname"><a href="a00462.xhtml#af377eef1d7dfdfabcdf7da4b069b5e7aa2f9e22c352c5ba390e17bd44af9ae42a">CClassifierBase::kMinmaxNormalization</a></div><div class="ttdeci">@ kMinmaxNormalization</div><div class="ttdef"><b>Definition:</b> <a href="a00245_source.xhtml#l00017">ClassifierBase.h:17</a></div></div>
<div class="ttc" id="aa00462_xhtml_af377eef1d7dfdfabcdf7da4b069b5e7aa7551b9946a039fd91846e27db7258801"><div class="ttname"><a href="a00462.xhtml#af377eef1d7dfdfabcdf7da4b069b5e7aa7551b9946a039fd91846e27db7258801">CClassifierBase::kNumNormModes</a></div><div class="ttdeci">@ kNumNormModes</div><div class="ttdef"><b>Definition:</b> <a href="a00245_source.xhtml#l00020">ClassifierBase.h:19</a></div></div>
<div class="ttc" id="aa00462_xhtml_af377eef1d7dfdfabcdf7da4b069b5e7aadc077b94c0074c958d27ed221a6dc41a"><div class="ttname"><a href="a00462.xhtml#af377eef1d7dfdfabcdf7da4b069b5e7aadc077b94c0074c958d27ed221a6dc41a">CClassifierBase::kZscoreNormalization</a></div><div class="ttdeci">@ kZscoreNormalization</div><div class="ttdef"><b>Definition:</b> <a href="a00245_source.xhtml#l00016">ClassifierBase.h:16</a></div></div>
<div class="ttc" id="aa00462_xhtml_af5d1fadf97cfa2d47235316815e70964"><div class="ttname"><a href="a00462.xhtml#af5d1fadf97cfa2d47235316815e70964">CClassifierBase::m_pfNormSub</a></div><div class="ttdeci">float * m_pfNormSub</div><div class="ttdoc">offset for normalization (length m_iNumFeatures)</div><div class="ttdef"><b>Definition:</b> <a href="a00245_source.xhtml#l00106">ClassifierBase.h:106</a></div></div>
<div class="ttc" id="aa00502_xhtml_a1f7f307c20239cfd2007393e2b3b26df"><div class="ttname"><a href="a00502.xhtml#a1f7f307c20239cfd2007393e2b3b26df">CVector::getMin</a></div><div class="ttdeci">static T getMin(const T *ptSrc, long long int iLength, bool bAbs=false)</div><div class="ttdef"><b>Definition:</b> <a href="a00155_source.xhtml#l00481">Vector.h:481</a></div></div>
<div class="ttc" id="aa00502_xhtml_a39329371d828db80c2f0ad037074c998"><div class="ttname"><a href="a00502.xhtml#a39329371d828db80c2f0ad037074c998">CVector::sub_I</a></div><div class="ttdeci">static void sub_I(T *ptSrcDest, const T *ptSrc, long long int iLength)</div><div class="ttdef"><b>Definition:</b> <a href="a00155_source.xhtml#l00265">Vector.h:265</a></div></div>
<div class="ttc" id="aa00502_xhtml_a4cf9544dd96801e3ee47fd1ef2049a1b"><div class="ttname"><a href="a00502.xhtml#a4cf9544dd96801e3ee47fd1ef2049a1b">CVector::setValue</a></div><div class="ttdeci">static void setValue(T *ptDest, T tValue, long long iLength)</div><div class="ttdef"><b>Definition:</b> <a href="a00155_source.xhtml#l00100">Vector.h:100</a></div></div>
<div class="ttc" id="aa00502_xhtml_a5fb59528a3f5d3968f988d550b270898"><div class="ttname"><a href="a00502.xhtml#a5fb59528a3f5d3968f988d550b270898">CVector::mul_I</a></div><div class="ttdeci">static void mul_I(T *ptSrcDest, const T *ptSrc, long long int iLength)</div><div class="ttdef"><b>Definition:</b> <a href="a00155_source.xhtml#l00229">Vector.h:229</a></div></div>
<div class="ttc" id="aa00502_xhtml_a6dbb3f9f480568b60f7fe50090d20003"><div class="ttname"><a href="a00502.xhtml#a6dbb3f9f480568b60f7fe50090d20003">CVector::setZero</a></div><div class="ttdeci">static void setZero(T *ptSrcDest, long long iLength)</div><div class="ttdef"><b>Definition:</b> <a href="a00155_source.xhtml#l00114">Vector.h:114</a></div></div>
<div class="ttc" id="aa00502_xhtml_a9f5be871090bc5a64a7732cebfb4f8ec"><div class="ttname"><a href="a00502.xhtml#a9f5be871090bc5a64a7732cebfb4f8ec">CVector::getMax</a></div><div class="ttdeci">static T getMax(const T *ptSrc, long long int iLength, bool bAbs=false)</div><div class="ttdef"><b>Definition:</b> <a href="a00155_source.xhtml#l00444">Vector.h:444</a></div></div>
<div class="ttc" id="aa00502_xhtml_aa86bdb0c663d4d52f2765793756f8737"><div class="ttname"><a href="a00502.xhtml#aa86bdb0c663d4d52f2765793756f8737">CVector::free</a></div><div class="ttdeci">static void free(T *&amp;ptVec)</div><div class="ttdef"><b>Definition:</b> <a href="a00155_source.xhtml#l00057">Vector.h:57</a></div></div>
<div class="ttc" id="aa00502_xhtml_ae2ed42101e3d7075f5dec265a23f3424"><div class="ttname"><a href="a00502.xhtml#ae2ed42101e3d7075f5dec265a23f3424">CVector::getStd</a></div><div class="ttdeci">static T getStd(const T *ptSrc, long long int iLength, T fMean=std::numeric_limits&lt; T &gt;::max())</div><div class="ttdef"><b>Definition:</b> <a href="a00155_source.xhtml#l00524">Vector.h:524</a></div></div>
<div class="ttc" id="aa00502_xhtml_ae6e3545cf196c5e2409365bc62b7c1de"><div class="ttname"><a href="a00502.xhtml#ae6e3545cf196c5e2409365bc62b7c1de">CVector::getMean</a></div><div class="ttdeci">static T getMean(const T *ptSrc, long long int iLength)</div><div class="ttdef"><b>Definition:</b> <a href="a00155_source.xhtml#l00460">Vector.h:460</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_bfccd401955b95cf8c75461437045ac0.xhtml">inc</a></li><li class="navelem"><a class="el" href="a00245.xhtml">ClassifierBase.h</a></li>
    <li class="footer">Generated on Tue Jun 21 2022 20:07:40 for ACA by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.4 </li>
  </ul>
</div>
</body>
</html>
