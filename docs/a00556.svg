<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 6.0.1 (20220911.1526)
 -->
<!-- Title: CGammaToneFbIf Pages: 1 -->
<!--zoomable 2117 -->
<svg id="main" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" onload="init(evt)">
<style type="text/css"><![CDATA[
.edge:hover path { stroke: red; }
.edge:hover polygon { stroke: red; fill: red; }
]]></style>
<script type="text/javascript"><![CDATA[
var edges = document.getElementsByTagName('g');
if (edges && edges.length) {
  for (var i=0;i<edges.length;i++) {
    if (edges[i].id.substr(0,4)=='edge') {
      edges[i].setAttribute('class','edge');
    }
  }
}
]]></script>
        <defs>
                <circle id="rim" cx="0" cy="0" r="7"/>
                <circle id="rim2" cx="0" cy="0" r="3.5"/>
                <g id="zoomPlus">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomplus.mouseover" end="zoomplus.mouseout"/>
                        </use>
                        <path d="M-4,0h8M0,-4v8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="zoomMin">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomminus.mouseover" end="zoomminus.mouseout"/>
                        </use>
                        <path d="M-4,0h8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="dirArrow">
                        <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
               <g id="resetDef">
                       <use xlink:href="#rim2" fill="#404040">
                               <set attributeName="fill" to="#808080" begin="reset.mouseover" end="reset.mouseout"/>
                       </use>
               </g>
        </defs>

<script type="text/javascript">
var viewWidth = 589;
var viewHeight = 2117;
var sectionId = 'dynsection-1';
</script>
<script xlink:href="svgpan.js"/>
<svg id="graph" class="graph">
<g id="viewport">
<title>CGammaToneFbIf</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="class for computation of a Gammatone filterbank output from either a file or a vector">
<polygon fill="#999999" stroke="#666666" points="350.5,-470 156.5,-470 156.5,0 350.5,0 350.5,-470"/>
<text text-anchor="middle" x="253.5" y="-458" font-family="Helvetica,sans-Serif" font-size="10.00">{CGammaToneFbIf</text>
<text text-anchor="start" x="164.5" y="-447" font-family="Helvetica,sans-Serif" font-size="10.00">|# const int m_iBlockLength</text>
<text text-anchor="start" x="164.5" y="-436" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iNumBands</text>
<text text-anchor="start" x="164.5" y="-425" font-family="Helvetica,sans-Serif" font-size="10.00"># float m_fSampleRate</text>
<text text-anchor="start" x="164.5" y="-414" font-family="Helvetica,sans-Serif" font-size="10.00"># float m_fStartInHz</text>
<text text-anchor="start" x="164.5" y="-403" font-family="Helvetica,sans-Serif" font-size="10.00"># float * m_pfProcBuff</text>
<text text-anchor="start" x="164.5" y="-392" font-family="Helvetica,sans-Serif" font-size="10.00"># bool m_bIsInitialized</text>
<text text-anchor="start" x="164.5" y="-381" font-family="Helvetica,sans-Serif" font-size="10.00">|+ Error_t getOutputDimensions</text>
<text text-anchor="start" x="164.5" y="-370" font-family="Helvetica,sans-Serif" font-size="10.00">(long long &amp;iNumRows, long</text>
<text text-anchor="start" x="164.5" y="-359" font-family="Helvetica,sans-Serif" font-size="10.00"> long &amp;iNumCols) const</text>
<text text-anchor="start" x="164.5" y="-348" font-family="Helvetica,sans-Serif" font-size="10.00">+ float getCenterFreq</text>
<text text-anchor="start" x="164.5" y="-337" font-family="Helvetica,sans-Serif" font-size="10.00">(int iBandIdx) const</text>
<text text-anchor="start" x="164.5" y="-326" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t process(float</text>
<text text-anchor="start" x="164.5" y="-315" font-family="Helvetica,sans-Serif" font-size="10.00"> **ppfOut, const float</text>
<text text-anchor="start" x="164.5" y="-304" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfIn=0, long long iNumSamples=0)</text>
<text text-anchor="start" x="164.5" y="-293" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="164.5" y="-282" font-family="Helvetica,sans-Serif" font-size="10.00">(CGammaToneFbIf *&amp;pCInstance,</text>
<text text-anchor="start" x="164.5" y="-271" font-family="Helvetica,sans-Serif" font-size="10.00"> const std::string &amp;strAudioFilePath,</text>
<text text-anchor="start" x="164.5" y="-260" font-family="Helvetica,sans-Serif" font-size="10.00"> int iNumBands=20, float fStartInHz=100)</text>
<text text-anchor="start" x="164.5" y="-249" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="164.5" y="-238" font-family="Helvetica,sans-Serif" font-size="10.00">(CGammaToneFbIf *&amp;pCInstance,</text>
<text text-anchor="start" x="164.5" y="-227" font-family="Helvetica,sans-Serif" font-size="10.00"> const float *pfAudio, long</text>
<text text-anchor="start" x="164.5" y="-216" font-family="Helvetica,sans-Serif" font-size="10.00"> long iNumSamples, float fSampleRate,</text>
<text text-anchor="start" x="164.5" y="-205" font-family="Helvetica,sans-Serif" font-size="10.00"> int iNumBands=20, float fStartInHz=100)</text>
<text text-anchor="start" x="164.5" y="-194" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="164.5" y="-183" font-family="Helvetica,sans-Serif" font-size="10.00">(CGammaToneFbIf *&amp;pCInstance,</text>
<text text-anchor="start" x="164.5" y="-172" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate, int iNumBands</text>
<text text-anchor="start" x="164.5" y="-161" font-family="Helvetica,sans-Serif" font-size="10.00">=20, float fStartInHz=100)</text>
<text text-anchor="start" x="164.5" y="-150" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="164.5" y="-139" font-family="Helvetica,sans-Serif" font-size="10.00">(CGammaToneFbIf *&amp;pCInstance)</text>
<text text-anchor="start" x="164.5" y="-128" font-family="Helvetica,sans-Serif" font-size="10.00"># &#160;CGammaToneFbIf()</text>
<text text-anchor="start" x="164.5" y="-117" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CGammaToneFbIf()</text>
<text text-anchor="start" x="164.5" y="-106" font-family="Helvetica,sans-Serif" font-size="10.00"># &#160;CGammaToneFbIf(const</text>
<text text-anchor="start" x="164.5" y="-95" font-family="Helvetica,sans-Serif" font-size="10.00"> CGammaToneFbIf &amp;that)</text>
<text text-anchor="start" x="164.5" y="-84" font-family="Helvetica,sans-Serif" font-size="10.00"># CGammaToneFbIf &amp; operator</text>
<text text-anchor="start" x="164.5" y="-73" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CGammaToneFbIf &amp;c)</text>
<text text-anchor="start" x="164.5" y="-62" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t reset_()</text>
<text text-anchor="start" x="164.5" y="-51" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t init_()</text>
<text text-anchor="start" x="164.5" y="-40" font-family="Helvetica,sans-Serif" font-size="10.00"># float compMidFreqs</text>
<text text-anchor="start" x="164.5" y="-29" font-family="Helvetica,sans-Serif" font-size="10.00">_(float fFreqLow, float</text>
<text text-anchor="start" x="164.5" y="-18" font-family="Helvetica,sans-Serif" font-size="10.00"> fFreqHigh, int k) const</text>
<text text-anchor="middle" x="253.5" y="-7" font-family="Helvetica,sans-Serif" font-size="10.00">}</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="a00606.xhtml" target="_top" xlink:title="class for audio normalization offering three options">
<polygon fill="white" stroke="#666666" points="155,-844 0,-844 0,-616 155,-616 155,-844"/>
<text text-anchor="middle" x="77.5" y="-832" font-family="Helvetica,sans-Serif" font-size="10.00">{CNormalizeAudio</text>
<text text-anchor="start" x="8" y="-821" font-family="Helvetica,sans-Serif" font-size="10.00">|&#45; float m_fScaleFactor</text>
<text text-anchor="start" x="8" y="-810" font-family="Helvetica,sans-Serif" font-size="10.00">|+ &#160;CNormalizeAudio(CAudioFile</text>
<text text-anchor="start" x="8" y="-799" font-family="Helvetica,sans-Serif" font-size="10.00">If *pCAudioFile)</text>
<text text-anchor="start" x="8" y="-788" font-family="Helvetica,sans-Serif" font-size="10.00">+ &#160;CNormalizeAudio(const</text>
<text text-anchor="start" x="8" y="-777" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfAudioBuff, long</text>
<text text-anchor="start" x="8" y="-766" font-family="Helvetica,sans-Serif" font-size="10.00"> long iAudioLength)</text>
<text text-anchor="start" x="8" y="-755" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CNormalizeAudio()</text>
<text text-anchor="start" x="8" y="-744" font-family="Helvetica,sans-Serif" font-size="10.00">+ void normalizeBlock</text>
<text text-anchor="start" x="8" y="-733" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfAudioBlock,</text>
<text text-anchor="start" x="8" y="-722" font-family="Helvetica,sans-Serif" font-size="10.00"> long long iNumSamples)</text>
<text text-anchor="start" x="8" y="-711" font-family="Helvetica,sans-Serif" font-size="10.00">+ static void normalizeSignal</text>
<text text-anchor="start" x="8" y="-700" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfAudio, long long</text>
<text text-anchor="start" x="8" y="-689" font-family="Helvetica,sans-Serif" font-size="10.00"> iNumSamples)</text>
<text text-anchor="start" x="8" y="-678" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; &#160;CNormalizeAudio()</text>
<text text-anchor="start" x="8" y="-667" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; &#160;CNormalizeAudio(const</text>
<text text-anchor="start" x="8" y="-656" font-family="Helvetica,sans-Serif" font-size="10.00"> CNormalizeAudio &amp;that)</text>
<text text-anchor="start" x="8" y="-645" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CNormalizeAudio &amp; operator</text>
<text text-anchor="start" x="8" y="-634" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CNormalizeAudio &amp;c)</text>
<text text-anchor="middle" x="77.5" y="-623" font-family="Helvetica,sans-Serif" font-size="10.00">}</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="#404040" d="M117.88,-615.9C132.25,-575.63 149.05,-528.57 165.84,-481.55"/>
<polygon fill="none" stroke="#404040" points="165.84,-481.55 164.09,-474.55 169.87,-470.25 171.62,-477.24 165.84,-481.55"/>
<text text-anchor="middle" x="198" y="-491" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCNormalize</text>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="a00542.xhtml" target="_top" xlink:title="forward declaration">
<polygon fill="white" stroke="#666666" points="333.5,-943 173.5,-943 173.5,-517 333.5,-517 333.5,-943"/>
<text text-anchor="middle" x="253.5" y="-931" font-family="Helvetica,sans-Serif" font-size="10.00">{CBlockAudioIf</text>
<text text-anchor="start" x="181.5" y="-920" font-family="Helvetica,sans-Serif" font-size="10.00">|# long long m_iNumBlocks</text>
<text text-anchor="start" x="181.5" y="-909" font-family="Helvetica,sans-Serif" font-size="10.00"># long long m_iCurrBlock</text>
<text text-anchor="start" x="181.5" y="-898" font-family="Helvetica,sans-Serif" font-size="10.00"># long long m_iAudioLength</text>
<text text-anchor="start" x="181.5" y="-887" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iBlockLength</text>
<text text-anchor="start" x="181.5" y="-876" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iNumChannels</text>
<text text-anchor="start" x="181.5" y="-865" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iHopLength</text>
<text text-anchor="start" x="181.5" y="-854" font-family="Helvetica,sans-Serif" font-size="10.00"># float m_fSampleRate</text>
<text text-anchor="start" x="181.5" y="-843" font-family="Helvetica,sans-Serif" font-size="10.00">|+ long long getNumBlocks</text>
<text text-anchor="start" x="181.5" y="-832" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="181.5" y="-821" font-family="Helvetica,sans-Serif" font-size="10.00">+ long long getLengthInSamples</text>
<text text-anchor="start" x="181.5" y="-810" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="181.5" y="-799" font-family="Helvetica,sans-Serif" font-size="10.00">+ float getTimeStamp</text>
<text text-anchor="start" x="181.5" y="-788" font-family="Helvetica,sans-Serif" font-size="10.00">(long long iBlockIdx)</text>
<text text-anchor="start" x="181.5" y="-777" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual bool isEndOfData</text>
<text text-anchor="start" x="181.5" y="-766" font-family="Helvetica,sans-Serif" font-size="10.00">() const =0</text>
<text text-anchor="start" x="181.5" y="-755" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual int getNextBlock</text>
<text text-anchor="start" x="181.5" y="-744" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfBlock, float</text>
<text text-anchor="start" x="181.5" y="-733" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfTimeStampInS=0)=0</text>
<text text-anchor="start" x="181.5" y="-722" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="181.5" y="-711" font-family="Helvetica,sans-Serif" font-size="10.00">(CBlockAudioIf *&amp;pCInstance,</text>
<text text-anchor="start" x="181.5" y="-700" font-family="Helvetica,sans-Serif" font-size="10.00"> CAudioFileIf *pCAudioFile,</text>
<text text-anchor="start" x="181.5" y="-689" font-family="Helvetica,sans-Serif" font-size="10.00"> int iBlockLength, int iHopLength)</text>
<text text-anchor="start" x="181.5" y="-678" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="181.5" y="-667" font-family="Helvetica,sans-Serif" font-size="10.00">(CBlockAudioIf *&amp;pCInstance,</text>
<text text-anchor="start" x="181.5" y="-656" font-family="Helvetica,sans-Serif" font-size="10.00"> const float *pfAudioBuff,</text>
<text text-anchor="start" x="181.5" y="-645" font-family="Helvetica,sans-Serif" font-size="10.00"> long long iAudioLength, int</text>
<text text-anchor="start" x="181.5" y="-634" font-family="Helvetica,sans-Serif" font-size="10.00"> iBlockLength, int iHopLength,</text>
<text text-anchor="start" x="181.5" y="-623" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate)</text>
<text text-anchor="start" x="181.5" y="-612" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="181.5" y="-601" font-family="Helvetica,sans-Serif" font-size="10.00">(CBlockAudioIf *&amp;pCInstance)</text>
<text text-anchor="start" x="181.5" y="-590" font-family="Helvetica,sans-Serif" font-size="10.00"># &#160;CBlockAudioIf()</text>
<text text-anchor="start" x="181.5" y="-579" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CBlockAudioIf()</text>
<text text-anchor="start" x="181.5" y="-568" font-family="Helvetica,sans-Serif" font-size="10.00"># &#160;CBlockAudioIf(const</text>
<text text-anchor="start" x="181.5" y="-557" font-family="Helvetica,sans-Serif" font-size="10.00"> CBlockAudioIf &amp;that)</text>
<text text-anchor="start" x="181.5" y="-546" font-family="Helvetica,sans-Serif" font-size="10.00"># CBlockAudioIf &amp; operator</text>
<text text-anchor="start" x="181.5" y="-535" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CBlockAudioIf &amp;c)</text>
<text text-anchor="middle" x="253.5" y="-524" font-family="Helvetica,sans-Serif" font-size="10.00">}</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node1 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node1</title>
<path fill="none" stroke="#404040" d="M253.5,-516.7C253.5,-505.4 253.5,-494.01 253.5,-482.61"/>
<polygon fill="none" stroke="#404040" points="253.5,-482.25 249.5,-476.25 253.5,-470.25 257.5,-476.25 253.5,-482.25"/>
<text text-anchor="middle" x="295" y="-491" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCBlockAudio</text>
</g>
<!-- Node4 -->
<g id="node4" class="node">
<title>Node4</title>
<g id="a_node4"><a xlink:href="a00418.xhtml" target="_top" xlink:title="class for a single gammtone filter">
<polygon fill="white" stroke="#666666" points="525,-855 352,-855 352,-605 525,-605 525,-855"/>
<text text-anchor="middle" x="438.5" y="-843" font-family="Helvetica,sans-Serif" font-size="10.00">{CGammatone</text>
<text text-anchor="start" x="360" y="-832" font-family="Helvetica,sans-Serif" font-size="10.00">|&#45; float m_fFreqCenter</text>
<text text-anchor="start" x="360" y="-821" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float m_fSampleRate</text>
<text text-anchor="start" x="360" y="-810" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float m_aafCoeffB</text>
<text text-anchor="start" x="360" y="-799" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float m_aafCoeffA</text>
<text text-anchor="start" x="360" y="-788" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; bool m_bIsInitialized</text>
<text text-anchor="start" x="360" y="-777" font-family="Helvetica,sans-Serif" font-size="10.00">|+ &#160;CGammatone()</text>
<text text-anchor="start" x="360" y="-766" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CGammatone()</text>
<text text-anchor="start" x="360" y="-755" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t init(float</text>
<text text-anchor="start" x="360" y="-744" font-family="Helvetica,sans-Serif" font-size="10.00"> fFreqCenter, float</text>
<text text-anchor="start" x="360" y="-733" font-family="Helvetica,sans-Serif" font-size="10.00"> fSampleRate)</text>
<text text-anchor="start" x="360" y="-722" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t process(float</text>
<text text-anchor="start" x="360" y="-711" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfOut, const float</text>
<text text-anchor="start" x="360" y="-700" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfIn, long long iNumSamples)</text>
<text text-anchor="start" x="360" y="-689" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t reset()</text>
<text text-anchor="start" x="360" y="-678" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; &#160;CGammatone(const CGammatone</text>
<text text-anchor="start" x="360" y="-667" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;that)</text>
<text text-anchor="start" x="360" y="-656" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CGammatone &amp; operator</text>
<text text-anchor="start" x="360" y="-645" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CGammatone &amp;c)</text>
<text text-anchor="start" x="360" y="-634" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; void calcFilterCoeffs</text>
<text text-anchor="start" x="360" y="-623" font-family="Helvetica,sans-Serif" font-size="10.00">_(int iOrder=1)</text>
<text text-anchor="middle" x="438.5" y="-612" font-family="Helvetica,sans-Serif" font-size="10.00">}</text>
</a>
</g>
</g>
<!-- Node4&#45;&gt;Node1 -->
<g id="edge3" class="edge">
<title>Node4&#45;&gt;Node1</title>
<path fill="none" stroke="#404040" d="M391.94,-604.91C377.79,-567.21 361.72,-524.38 345.66,-481.59"/>
<polygon fill="none" stroke="#404040" points="345.57,-481.36 339.72,-477.15 341.36,-470.13 347.21,-474.34 345.57,-481.36"/>
<text text-anchor="middle" x="397.5" y="-491" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_ppCGammatone</text>
</g>
<!-- Node5 -->
<g id="node5" class="node">
<title>Node5</title>
<g id="a_node5"><a xlink:href="a00478.xhtml" target="_top" xlink:title=" ">
<polygon fill="white" stroke="#666666" points="513,-1317 364,-1317 364,-990 513,-990 513,-1317"/>
<text text-anchor="middle" x="438.5" y="-1305" font-family="Helvetica,sans-Serif" font-size="10.00">{CFilter&lt; float &gt;</text>
<text text-anchor="start" x="372" y="-1294" font-family="Helvetica,sans-Serif" font-size="10.00">|&#45; float * m_aptCoeff</text>
<text text-anchor="start" x="372" y="-1283" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_ptProcBuff</text>
<text text-anchor="start" x="372" y="-1272" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iNumFilterCoeffs</text>
<text text-anchor="start" x="372" y="-1261" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; bool m_bisInitialized</text>
<text text-anchor="start" x="372" y="-1250" font-family="Helvetica,sans-Serif" font-size="10.00">|+ &#160;CFilter()</text>
<text text-anchor="start" x="372" y="-1239" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CFilter()</text>
<text text-anchor="start" x="372" y="-1228" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t init(const</text>
<text text-anchor="start" x="372" y="-1217" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfB, const float</text>
<text text-anchor="start" x="372" y="-1206" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfA, int iNumCoeffs)</text>
<text text-anchor="start" x="372" y="-1195" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t reset(bool</text>
<text text-anchor="start" x="372" y="-1184" font-family="Helvetica,sans-Serif" font-size="10.00"> bFreeMem=true)</text>
<text text-anchor="start" x="372" y="-1173" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t process(float</text>
<text text-anchor="start" x="372" y="-1162" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfOut, const float</text>
<text text-anchor="start" x="372" y="-1151" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfIn, long long iNumSamples)</text>
<text text-anchor="start" x="372" y="-1140" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t processDFII</text>
<text text-anchor="start" x="372" y="-1129" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfOut, const</text>
<text text-anchor="start" x="372" y="-1118" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfIn, long long</text>
<text text-anchor="start" x="372" y="-1107" font-family="Helvetica,sans-Serif" font-size="10.00"> iNumSamples)</text>
<text text-anchor="start" x="372" y="-1096" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t filtfilt(float</text>
<text text-anchor="start" x="372" y="-1085" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfOut, const float *pfIn,</text>
<text text-anchor="start" x="372" y="-1074" font-family="Helvetica,sans-Serif" font-size="10.00"> long long iNumSamples)</text>
<text text-anchor="start" x="372" y="-1063" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; &#160;CFilter(const CFilter</text>
<text text-anchor="start" x="372" y="-1052" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;that)</text>
<text text-anchor="start" x="372" y="-1041" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CFilter &amp; operator</text>
<text text-anchor="start" x="372" y="-1030" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CFilter &amp;c)</text>
<text text-anchor="start" x="372" y="-1019" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; void setInitState_</text>
<text text-anchor="start" x="372" y="-1008" font-family="Helvetica,sans-Serif" font-size="10.00">(float fWeight)</text>
<text text-anchor="middle" x="438.5" y="-997" font-family="Helvetica,sans-Serif" font-size="10.00">}</text>
</a>
</g>
</g>
<!-- Node5&#45;&gt;Node4 -->
<g id="edge4" class="edge">
<title>Node5&#45;&gt;Node4</title>
<path fill="none" stroke="#404040" d="M438.5,-989.84C438.5,-949.3 438.5,-906.25 438.5,-867.14"/>
<polygon fill="none" stroke="#404040" points="438.5,-867.13 434.5,-861.13 438.5,-855.13 442.5,-861.13 438.5,-867.13"/>
<text text-anchor="middle" x="467.5" y="-964" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;m_apCFilter</text>
</g>
<!-- Node6 -->
<g id="node6" class="node">
<title>Node6</title>
<g id="a_node6"><a xlink:href="a00490.xhtml" target="_top" xlink:title=" ">
<polygon fill="white" stroke="#666666" points="430,-1724 297,-1724 297,-1364 430,-1364 430,-1724"/>
<text text-anchor="middle" x="363.5" y="-1712" font-family="Helvetica,sans-Serif" font-size="10.00">{CRingBuffer&lt; float &gt;</text>
<text text-anchor="start" x="305" y="-1701" font-family="Helvetica,sans-Serif" font-size="10.00">|&#45; int m_iBuffLength</text>
<text text-anchor="start" x="305" y="-1690" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iReadIdx</text>
<text text-anchor="start" x="305" y="-1679" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iWriteIdx</text>
<text text-anchor="start" x="305" y="-1668" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_ptBuff</text>
<text text-anchor="start" x="305" y="-1657" font-family="Helvetica,sans-Serif" font-size="10.00">|+ &#160;CRingBuffer(int iBuffer</text>
<text text-anchor="start" x="305" y="-1646" font-family="Helvetica,sans-Serif" font-size="10.00">LengthInSamples)</text>
<text text-anchor="start" x="305" y="-1635" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CRingBuffer()</text>
<text text-anchor="start" x="305" y="-1624" font-family="Helvetica,sans-Serif" font-size="10.00">+ void putPostInc(float</text>
<text text-anchor="start" x="305" y="-1613" font-family="Helvetica,sans-Serif" font-size="10.00"> tNewValue)</text>
<text text-anchor="start" x="305" y="-1602" font-family="Helvetica,sans-Serif" font-size="10.00">+ void putPostInc(const</text>
<text text-anchor="start" x="305" y="-1591" font-family="Helvetica,sans-Serif" font-size="10.00"> float *ptNewBuff, int</text>
<text text-anchor="start" x="305" y="-1580" font-family="Helvetica,sans-Serif" font-size="10.00"> iLength)</text>
<text text-anchor="start" x="305" y="-1569" font-family="Helvetica,sans-Serif" font-size="10.00">+ void put(float tNewValue)</text>
<text text-anchor="start" x="305" y="-1558" font-family="Helvetica,sans-Serif" font-size="10.00">+ void put(const float</text>
<text text-anchor="start" x="305" y="-1547" font-family="Helvetica,sans-Serif" font-size="10.00"> *ptNewBuff, int iLength)</text>
<text text-anchor="start" x="305" y="-1536" font-family="Helvetica,sans-Serif" font-size="10.00">+ float getPostInc()</text>
<text text-anchor="start" x="305" y="-1525" font-family="Helvetica,sans-Serif" font-size="10.00">+ void getPostInc(float</text>
<text text-anchor="start" x="305" y="-1514" font-family="Helvetica,sans-Serif" font-size="10.00"> *ptBuff, int iLength)</text>
<text text-anchor="start" x="305" y="-1503" font-family="Helvetica,sans-Serif" font-size="10.00">+ float get(float fOffset</text>
<text text-anchor="start" x="305" y="-1492" font-family="Helvetica,sans-Serif" font-size="10.00">=0) const</text>
<text text-anchor="start" x="305" y="-1481" font-family="Helvetica,sans-Serif" font-size="10.00">+ void get(float *ptBuff,</text>
<text text-anchor="start" x="305" y="-1470" font-family="Helvetica,sans-Serif" font-size="10.00"> int iLength) const</text>
<text text-anchor="start" x="305" y="-1459" font-family="Helvetica,sans-Serif" font-size="10.00">and 7 more...</text>
<text text-anchor="start" x="305" y="-1448" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; &#160;CRingBuffer()</text>
<text text-anchor="start" x="305" y="-1437" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; &#160;CRingBuffer(const</text>
<text text-anchor="start" x="305" y="-1426" font-family="Helvetica,sans-Serif" font-size="10.00"> CRingBuffer &amp;that)</text>
<text text-anchor="start" x="305" y="-1415" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CRingBuffer &amp; operator</text>
<text text-anchor="start" x="305" y="-1404" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CRingBuffer &amp;c)</text>
<text text-anchor="start" x="305" y="-1393" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; void incIdx(int &amp;iIdx,</text>
<text text-anchor="start" x="305" y="-1382" font-family="Helvetica,sans-Serif" font-size="10.00"> int iOffset=1)</text>
<text text-anchor="middle" x="363.5" y="-1371" font-family="Helvetica,sans-Serif" font-size="10.00">}</text>
</a>
</g>
</g>
<!-- Node6&#45;&gt;Node5 -->
<g id="edge5" class="edge">
<title>Node6&#45;&gt;Node5</title>
<path fill="none" stroke="#404040" d="M398.09,-1363.82C400.31,-1352.3 402.55,-1340.71 404.77,-1329.21"/>
<polygon fill="none" stroke="#404040" points="404.8,-1329.05 402.01,-1322.4 407.08,-1317.27 409.87,-1323.92 404.8,-1329.05"/>
<text text-anchor="middle" x="437.5" y="-1338" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;m_pCFilterBuff</text>
</g>
<!-- Node7 -->
<g id="node7" class="node">
<title>Node7</title>
<g id="a_node7"><a xlink:href="a00490.xhtml" target="_top" xlink:title="implement a circular buffer of type T">
<polygon fill="white" stroke="#666666" points="441,-2109 286,-2109 286,-1771 441,-1771 441,-2109"/>
<text text-anchor="middle" x="363.5" y="-2097" font-family="Helvetica,sans-Serif" font-size="10.00">{CRingBuffer&lt; T &gt;</text>
<text text-anchor="start" x="294" y="-2086" font-family="Helvetica,sans-Serif" font-size="10.00">|&#45; int m_iBuffLength</text>
<text text-anchor="start" x="294" y="-2075" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iReadIdx</text>
<text text-anchor="start" x="294" y="-2064" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iWriteIdx</text>
<text text-anchor="start" x="294" y="-2053" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; T * m_ptBuff</text>
<text text-anchor="start" x="294" y="-2042" font-family="Helvetica,sans-Serif" font-size="10.00">|+ &#160;CRingBuffer(int iBuffer</text>
<text text-anchor="start" x="294" y="-2031" font-family="Helvetica,sans-Serif" font-size="10.00">LengthInSamples)</text>
<text text-anchor="start" x="294" y="-2020" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CRingBuffer()</text>
<text text-anchor="start" x="294" y="-2009" font-family="Helvetica,sans-Serif" font-size="10.00">+ void putPostInc(T tNewValue)</text>
<text text-anchor="start" x="294" y="-1998" font-family="Helvetica,sans-Serif" font-size="10.00">+ void putPostInc(const</text>
<text text-anchor="start" x="294" y="-1987" font-family="Helvetica,sans-Serif" font-size="10.00"> T *ptNewBuff, int iLength)</text>
<text text-anchor="start" x="294" y="-1976" font-family="Helvetica,sans-Serif" font-size="10.00">+ void put(T tNewValue)</text>
<text text-anchor="start" x="294" y="-1965" font-family="Helvetica,sans-Serif" font-size="10.00">+ void put(const T *ptNewBuff,</text>
<text text-anchor="start" x="294" y="-1954" font-family="Helvetica,sans-Serif" font-size="10.00"> int iLength)</text>
<text text-anchor="start" x="294" y="-1943" font-family="Helvetica,sans-Serif" font-size="10.00">+ T getPostInc()</text>
<text text-anchor="start" x="294" y="-1932" font-family="Helvetica,sans-Serif" font-size="10.00">+ void getPostInc(T *ptBuff,</text>
<text text-anchor="start" x="294" y="-1921" font-family="Helvetica,sans-Serif" font-size="10.00"> int iLength)</text>
<text text-anchor="start" x="294" y="-1910" font-family="Helvetica,sans-Serif" font-size="10.00">+ T get(float fOffset</text>
<text text-anchor="start" x="294" y="-1899" font-family="Helvetica,sans-Serif" font-size="10.00">=0) const</text>
<text text-anchor="start" x="294" y="-1888" font-family="Helvetica,sans-Serif" font-size="10.00">+ void get(T *ptBuff,</text>
<text text-anchor="start" x="294" y="-1877" font-family="Helvetica,sans-Serif" font-size="10.00"> int iLength) const</text>
<text text-anchor="start" x="294" y="-1866" font-family="Helvetica,sans-Serif" font-size="10.00">and 7 more...</text>
<text text-anchor="start" x="294" y="-1855" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; &#160;CRingBuffer()</text>
<text text-anchor="start" x="294" y="-1844" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; &#160;CRingBuffer(const</text>
<text text-anchor="start" x="294" y="-1833" font-family="Helvetica,sans-Serif" font-size="10.00"> CRingBuffer &amp;that)</text>
<text text-anchor="start" x="294" y="-1822" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CRingBuffer &amp; operator</text>
<text text-anchor="start" x="294" y="-1811" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CRingBuffer &amp;c)</text>
<text text-anchor="start" x="294" y="-1800" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; void incIdx(int &amp;iIdx,</text>
<text text-anchor="start" x="294" y="-1789" font-family="Helvetica,sans-Serif" font-size="10.00"> int iOffset=1)</text>
<text text-anchor="middle" x="363.5" y="-1778" font-family="Helvetica,sans-Serif" font-size="10.00">}</text>
</a>
</g>
</g>
<!-- Node7&#45;&gt;Node6 -->
<g id="edge6" class="edge">
<title>Node7&#45;&gt;Node6</title>
<path fill="none" stroke="orange" d="M363.5,-1760.65C363.5,-1748.57 363.5,-1736.4 363.5,-1724.32"/>
<polygon fill="orange" stroke="orange" points="360,-1760.77 363.5,-1770.77 367,-1760.77 360,-1760.77"/>
<text text-anchor="middle" x="382" y="-1745" font-family="Helvetica,sans-Serif" font-size="10.00"> &lt; float &gt;</text>
</g>
<!-- Node8 -->
<g id="node8" class="node">
<title>Node8</title>
<g id="a_node8"><a xlink:href="a00478.xhtml" target="_top" xlink:title="class providing a generic filter implementation">
<polygon fill="white" stroke="#666666" points="580.5,-1713 448.5,-1713 448.5,-1375 580.5,-1375 580.5,-1713"/>
<text text-anchor="middle" x="514.5" y="-1701" font-family="Helvetica,sans-Serif" font-size="10.00">{CFilter&lt; T &gt;</text>
<text text-anchor="start" x="456.5" y="-1690" font-family="Helvetica,sans-Serif" font-size="10.00">|&#45; CRingBuffer&lt; T &gt; *</text>
<text text-anchor="start" x="456.5" y="-1679" font-family="Helvetica,sans-Serif" font-size="10.00"> m_pCFilterBuff</text>
<text text-anchor="start" x="456.5" y="-1668" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; T * m_aptCoeff</text>
<text text-anchor="start" x="456.5" y="-1657" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; T * m_ptProcBuff</text>
<text text-anchor="start" x="456.5" y="-1646" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iNumFilterCoeffs</text>
<text text-anchor="start" x="456.5" y="-1635" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; bool m_bisInitialized</text>
<text text-anchor="start" x="456.5" y="-1624" font-family="Helvetica,sans-Serif" font-size="10.00">|+ &#160;CFilter()</text>
<text text-anchor="start" x="456.5" y="-1613" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CFilter()</text>
<text text-anchor="start" x="456.5" y="-1602" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t init(const</text>
<text text-anchor="start" x="456.5" y="-1591" font-family="Helvetica,sans-Serif" font-size="10.00"> T *pfB, const T *pfA,</text>
<text text-anchor="start" x="456.5" y="-1580" font-family="Helvetica,sans-Serif" font-size="10.00"> int iNumCoeffs)</text>
<text text-anchor="start" x="456.5" y="-1569" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t reset(bool</text>
<text text-anchor="start" x="456.5" y="-1558" font-family="Helvetica,sans-Serif" font-size="10.00"> bFreeMem=true)</text>
<text text-anchor="start" x="456.5" y="-1547" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t process(T *pfOut,</text>
<text text-anchor="start" x="456.5" y="-1536" font-family="Helvetica,sans-Serif" font-size="10.00"> const T *pfIn, long long</text>
<text text-anchor="start" x="456.5" y="-1525" font-family="Helvetica,sans-Serif" font-size="10.00"> iNumSamples)</text>
<text text-anchor="start" x="456.5" y="-1514" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t processDFII</text>
<text text-anchor="start" x="456.5" y="-1503" font-family="Helvetica,sans-Serif" font-size="10.00">(T *pfOut, const T *pfIn,</text>
<text text-anchor="start" x="456.5" y="-1492" font-family="Helvetica,sans-Serif" font-size="10.00"> long long iNumSamples)</text>
<text text-anchor="start" x="456.5" y="-1481" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t filtfilt(T</text>
<text text-anchor="start" x="456.5" y="-1470" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfOut, const T *pfIn,</text>
<text text-anchor="start" x="456.5" y="-1459" font-family="Helvetica,sans-Serif" font-size="10.00"> long long iNumSamples)</text>
<text text-anchor="start" x="456.5" y="-1448" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; &#160;CFilter(const CFilter</text>
<text text-anchor="start" x="456.5" y="-1437" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;that)</text>
<text text-anchor="start" x="456.5" y="-1426" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CFilter &amp; operator</text>
<text text-anchor="start" x="456.5" y="-1415" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CFilter &amp;c)</text>
<text text-anchor="start" x="456.5" y="-1404" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; void setInitState_</text>
<text text-anchor="start" x="456.5" y="-1393" font-family="Helvetica,sans-Serif" font-size="10.00">(float fWeight)</text>
<text text-anchor="middle" x="514.5" y="-1382" font-family="Helvetica,sans-Serif" font-size="10.00">}</text>
</a>
</g>
</g>
<!-- Node8&#45;&gt;Node5 -->
<g id="edge7" class="edge">
<title>Node8&#45;&gt;Node5</title>
<path fill="none" stroke="orange" d="M482.27,-1364.8C480.34,-1354.71 478.41,-1344.73 476.5,-1335 475.36,-1329.19 474.18,-1323.27 472.98,-1317.3"/>
<polygon fill="orange" stroke="orange" points="478.88,-1365.74 484.19,-1374.91 485.76,-1364.43 478.88,-1365.74"/>
<text text-anchor="middle" x="496" y="-1338" font-family="Helvetica,sans-Serif" font-size="10.00"> &lt; float &gt;</text>
</g>
</g>
</svg>
        <g id="navigator" transform="translate(0 0)" fill="#404254">
                <rect fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width=".5" x="0" y="0" width="60" height="60"/>
                <use id="zoomplus" xlink:href="#zoomPlus" x="17" y="9" onmousedown="handleZoom(evt,'in')"/>
                <use id="zoomminus" xlink:href="#zoomMin" x="42" y="9" onmousedown="handleZoom(evt,'out')"/>
                <use id="reset" xlink:href="#resetDef" x="30" y="36" onmousedown="handleReset()"/>
                <g id="arrowUp" xlink:href="#dirArrow" transform="translate(30 24)" onmousedown="handlePan(0,-1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowUp.mouseover" end="arrowUp.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowRight" xlink:href="#dirArrow" transform="rotate(90) translate(36 -43)" onmousedown="handlePan(1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowRight.mouseover" end="arrowRight.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowDown" xlink:href="#dirArrow" transform="rotate(180) translate(-30 -48)" onmousedown="handlePan(0,1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowDown.mouseover" end="arrowDown.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowLeft" xlink:href="#dirArrow" transform="rotate(270) translate(-36 17)" onmousedown="handlePan(-1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowLeft.mouseover" end="arrowLeft.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
        </g>
        <svg viewBox="0 0 15 15" width="100%" height="30px" preserveAspectRatio="xMaxYMin meet">
         <g id="arrow_out" transform="scale(0.3 0.3)">
          <a xlink:href="a00556_org.svg" target="_base">
           <rect id="button" ry="5" rx="5" y="6" x="6" height="38" width="38"
                fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width="1.0"/>
           <path id="arrow"
             d="M 11.500037,31.436501 C 11.940474,20.09759 22.043105,11.32322 32.158766,21.979434 L 37.068811,17.246167 C 37.068811,17.246167 37.088388,32 37.088388,32 L 22.160133,31.978069 C 22.160133,31.978069 26.997745,27.140456 26.997745,27.140456 C 18.528582,18.264221 13.291696,25.230495 11.500037,31.436501 z"
             style="fill:#404040;"/>
          </a>
         </g>
        </svg>
</svg>
