<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.4"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ACA: Catch::Matchers Namespace Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">ACA<span id="projectnumber">&#160;0.2.6</span>
   </div>
   <div id="projectbrief">Example Code for Audio Content Analysis</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.4 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search",'Search','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('a00301.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#namespaces">Namespaces</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle"><div class="title">Catch::Matchers Namespace Reference</div></div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="namespaces" name="namespaces"></a>
Namespaces</h2></td></tr>
<tr class="memitem:a00303"><td class="memItemLeft" align="right" valign="top">namespace &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00303.xhtml">Exception</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a00304"><td class="memItemLeft" align="right" valign="top">namespace &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00304.xhtml">Floating</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a00305"><td class="memItemLeft" align="right" valign="top">namespace &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00305.xhtml">Generic</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a00302"><td class="memItemLeft" align="right" valign="top">namespace &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00302.xhtml">Impl</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a00307"><td class="memItemLeft" align="right" valign="top">namespace &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00307.xhtml">StdString</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a00308"><td class="memItemLeft" align="right" valign="top">namespace &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00308.xhtml">Vector</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="func-members" name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a0fcd8bd126bb510a6bb99e6360aa270a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a01000.xhtml">Exception::ExceptionMessageMatcher</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00301.xhtml#a0fcd8bd126bb510a6bb99e6360aa270a">Message</a> (std::string const &amp;message)</td></tr>
<tr class="separator:a0fcd8bd126bb510a6bb99e6360aa270a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae77e233c3ed735ea12b7c726153798d1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a01008.xhtml">Floating::WithinUlpsMatcher</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00301.xhtml#ae77e233c3ed735ea12b7c726153798d1">WithinULP</a> (double target, uint64_t maxUlpDiff)</td></tr>
<tr class="separator:ae77e233c3ed735ea12b7c726153798d1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5d108ff6aaeac40f20f4978dfb3f51fc"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a01008.xhtml">Floating::WithinUlpsMatcher</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00301.xhtml#a5d108ff6aaeac40f20f4978dfb3f51fc">WithinULP</a> (float target, uint64_t maxUlpDiff)</td></tr>
<tr class="separator:a5d108ff6aaeac40f20f4978dfb3f51fc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4c9ea76d47d02de0cf2d354c87c26e95"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a01004.xhtml">Floating::WithinAbsMatcher</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00301.xhtml#a4c9ea76d47d02de0cf2d354c87c26e95">WithinAbs</a> (double target, double margin)</td></tr>
<tr class="separator:a4c9ea76d47d02de0cf2d354c87c26e95"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0c559d9cfda02a81941ad6933f4ca450"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a01012.xhtml">Floating::WithinRelMatcher</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00301.xhtml#a0c559d9cfda02a81941ad6933f4ca450">WithinRel</a> (double target, double eps)</td></tr>
<tr class="separator:a0c559d9cfda02a81941ad6933f4ca450"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a46e2f1efab13b85e2cbe36958a27d518"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a01012.xhtml">Floating::WithinRelMatcher</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00301.xhtml#a46e2f1efab13b85e2cbe36958a27d518">WithinRel</a> (double target)</td></tr>
<tr class="separator:a46e2f1efab13b85e2cbe36958a27d518"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a494b4c8c68ac883e29dc35da71a4cd72"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a01012.xhtml">Floating::WithinRelMatcher</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00301.xhtml#a494b4c8c68ac883e29dc35da71a4cd72">WithinRel</a> (float target, float eps)</td></tr>
<tr class="separator:a494b4c8c68ac883e29dc35da71a4cd72"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a18cfb571dd191377674bad0cbb50078e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a01012.xhtml">Floating::WithinRelMatcher</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00301.xhtml#a18cfb571dd191377674bad0cbb50078e">WithinRel</a> (float target)</td></tr>
<tr class="separator:a18cfb571dd191377674bad0cbb50078e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a70a7c65c44f6ea7f739402c0b6f28657"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a70a7c65c44f6ea7f739402c0b6f28657"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="a01016.xhtml">Generic::PredicateMatcher</a>&lt; T &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="a00301.xhtml#a70a7c65c44f6ea7f739402c0b6f28657">Predicate</a> (std::function&lt; <a class="el" href="a00254.xhtml#abb452686968e48b67397da5f97445f5b">bool</a>(T const &amp;)&gt; const &amp;predicate, std::string const &amp;description=&quot;&quot;)</td></tr>
<tr class="separator:a70a7c65c44f6ea7f739402c0b6f28657"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af8af7dfc338335ed4c788cb1b37fc59f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a01028.xhtml">StdString::EqualsMatcher</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00301.xhtml#af8af7dfc338335ed4c788cb1b37fc59f">Equals</a> (std::string const &amp;str, <a class="el" href="a00636.xhtml#aad49d3aee2d97066642fffa919685c6a">CaseSensitive::Choice</a> caseSensitivity=<a class="el" href="a00636.xhtml#aad49d3aee2d97066642fffa919685c6aa7c5550b69ec3c502e6f609b67f9613c6">CaseSensitive::Yes</a>)</td></tr>
<tr class="separator:af8af7dfc338335ed4c788cb1b37fc59f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1f6c2accdc6cd75a84d7112dcad647b4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a01032.xhtml">StdString::ContainsMatcher</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00301.xhtml#a1f6c2accdc6cd75a84d7112dcad647b4">Contains</a> (std::string const &amp;str, <a class="el" href="a00636.xhtml#aad49d3aee2d97066642fffa919685c6a">CaseSensitive::Choice</a> caseSensitivity=<a class="el" href="a00636.xhtml#aad49d3aee2d97066642fffa919685c6aa7c5550b69ec3c502e6f609b67f9613c6">CaseSensitive::Yes</a>)</td></tr>
<tr class="separator:a1f6c2accdc6cd75a84d7112dcad647b4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae5a45efb4538c57c43e04f3f9043ad6e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a01040.xhtml">StdString::EndsWithMatcher</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00301.xhtml#ae5a45efb4538c57c43e04f3f9043ad6e">EndsWith</a> (std::string const &amp;str, <a class="el" href="a00636.xhtml#aad49d3aee2d97066642fffa919685c6a">CaseSensitive::Choice</a> caseSensitivity=<a class="el" href="a00636.xhtml#aad49d3aee2d97066642fffa919685c6aa7c5550b69ec3c502e6f609b67f9613c6">CaseSensitive::Yes</a>)</td></tr>
<tr class="separator:ae5a45efb4538c57c43e04f3f9043ad6e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a97c9ee09a70378ca7e8c6f9f01b0d6d1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a01036.xhtml">StdString::StartsWithMatcher</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00301.xhtml#a97c9ee09a70378ca7e8c6f9f01b0d6d1">StartsWith</a> (std::string const &amp;str, <a class="el" href="a00636.xhtml#aad49d3aee2d97066642fffa919685c6a">CaseSensitive::Choice</a> caseSensitivity=<a class="el" href="a00636.xhtml#aad49d3aee2d97066642fffa919685c6aa7c5550b69ec3c502e6f609b67f9613c6">CaseSensitive::Yes</a>)</td></tr>
<tr class="separator:a97c9ee09a70378ca7e8c6f9f01b0d6d1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a82f1893cf50ae4c14b9b3e0980bf22b8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a01044.xhtml">StdString::RegexMatcher</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00301.xhtml#a82f1893cf50ae4c14b9b3e0980bf22b8">Matches</a> (std::string const &amp;regex, <a class="el" href="a00636.xhtml#aad49d3aee2d97066642fffa919685c6a">CaseSensitive::Choice</a> caseSensitivity=<a class="el" href="a00636.xhtml#aad49d3aee2d97066642fffa919685c6aa7c5550b69ec3c502e6f609b67f9613c6">CaseSensitive::Yes</a>)</td></tr>
<tr class="separator:a82f1893cf50ae4c14b9b3e0980bf22b8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0eacc3d8729e9a1dcf76387ec60195ce"><td class="memTemplParams" colspan="2">template&lt;typename T , typename AllocComp  = std::allocator&lt;T&gt;, typename AllocMatch  = AllocComp&gt; </td></tr>
<tr class="memitem:a0eacc3d8729e9a1dcf76387ec60195ce"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="a01052.xhtml">Vector::ContainsMatcher</a>&lt; T, AllocComp, AllocMatch &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="a00301.xhtml#a0eacc3d8729e9a1dcf76387ec60195ce">Contains</a> (std::vector&lt; T, AllocComp &gt; const &amp;comparator)</td></tr>
<tr class="separator:a0eacc3d8729e9a1dcf76387ec60195ce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad8092d8b34128390dbff20b87f2f6f99"><td class="memTemplParams" colspan="2">template&lt;typename T , typename Alloc  = std::allocator&lt;T&gt;&gt; </td></tr>
<tr class="memitem:ad8092d8b34128390dbff20b87f2f6f99"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="a01048.xhtml">Vector::ContainsElementMatcher</a>&lt; T, Alloc &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="a00301.xhtml#ad8092d8b34128390dbff20b87f2f6f99">VectorContains</a> (T const &amp;comparator)</td></tr>
<tr class="separator:ad8092d8b34128390dbff20b87f2f6f99"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5b76944eeb2b65329fabbac487a31d66"><td class="memTemplParams" colspan="2">template&lt;typename T , typename AllocComp  = std::allocator&lt;T&gt;, typename AllocMatch  = AllocComp&gt; </td></tr>
<tr class="memitem:a5b76944eeb2b65329fabbac487a31d66"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="a01056.xhtml">Vector::EqualsMatcher</a>&lt; T, AllocComp, AllocMatch &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="a00301.xhtml#a5b76944eeb2b65329fabbac487a31d66">Equals</a> (std::vector&lt; T, AllocComp &gt; const &amp;comparator)</td></tr>
<tr class="separator:a5b76944eeb2b65329fabbac487a31d66"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a02bf172177011d09780a98635dc5a124"><td class="memTemplParams" colspan="2">template&lt;typename T , typename AllocComp  = std::allocator&lt;T&gt;, typename AllocMatch  = AllocComp&gt; </td></tr>
<tr class="memitem:a02bf172177011d09780a98635dc5a124"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="a01060.xhtml">Vector::ApproxMatcher</a>&lt; T, AllocComp, AllocMatch &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="a00301.xhtml#a02bf172177011d09780a98635dc5a124">Approx</a> (std::vector&lt; T, AllocComp &gt; const &amp;comparator)</td></tr>
<tr class="separator:a02bf172177011d09780a98635dc5a124"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3b1784cd26bd7e3fea38505eb138b186"><td class="memTemplParams" colspan="2">template&lt;typename T , typename AllocComp  = std::allocator&lt;T&gt;, typename AllocMatch  = AllocComp&gt; </td></tr>
<tr class="memitem:a3b1784cd26bd7e3fea38505eb138b186"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="a01064.xhtml">Vector::UnorderedEqualsMatcher</a>&lt; T, AllocComp, AllocMatch &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="a00301.xhtml#a3b1784cd26bd7e3fea38505eb138b186">UnorderedEquals</a> (std::vector&lt; T, AllocComp &gt; const &amp;target)</td></tr>
<tr class="separator:a3b1784cd26bd7e3fea38505eb138b186"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Function Documentation</h2>
<a id="a02bf172177011d09780a98635dc5a124" name="a02bf172177011d09780a98635dc5a124"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a02bf172177011d09780a98635dc5a124">&#9670;&nbsp;</a></span>Approx()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T , typename AllocComp  = std::allocator&lt;T&gt;, typename AllocMatch  = AllocComp&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a01060.xhtml">Vector::ApproxMatcher</a>&lt; T, AllocComp, AllocMatch &gt; Catch::Matchers::Approx </td>
          <td>(</td>
          <td class="paramtype">std::vector&lt; T, AllocComp &gt; const &amp;&#160;</td>
          <td class="paramname"><em>comparator</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="a00290_source.xhtml#l03754">3754</a> of file <a class="el" href="a00290_source.xhtml">catch.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno"> 3754</span>                                                                                                      {</div>
<div class="line"><span class="lineno"> 3755</span>        <span class="keywordflow">return</span> <a class="code hl_struct" href="a01060.xhtml">Vector::ApproxMatcher&lt;T, AllocComp, AllocMatch&gt;</a>( comparator );</div>
<div class="line"><span class="lineno"> 3756</span>    }</div>
<div class="ttc" id="aa01060_xhtml"><div class="ttname"><a href="a01060.xhtml">Catch::Matchers::Vector::ApproxMatcher</a></div><div class="ttdef"><b>Definition:</b> <a href="a00290_source.xhtml#l03681">catch.hpp:3681</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a1f6c2accdc6cd75a84d7112dcad647b4" name="a1f6c2accdc6cd75a84d7112dcad647b4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1f6c2accdc6cd75a84d7112dcad647b4">&#9670;&nbsp;</a></span>Contains() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a01032.xhtml">StdString::ContainsMatcher</a> Catch::Matchers::Contains </td>
          <td>(</td>
          <td class="paramtype">std::string const &amp;&#160;</td>
          <td class="paramname"><em>str</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="a00636.xhtml#aad49d3aee2d97066642fffa919685c6a">CaseSensitive::Choice</a>&#160;</td>
          <td class="paramname"><em>caseSensitivity</em> = <code><a class="el" href="a00636.xhtml#aad49d3aee2d97066642fffa919685c6aa7c5550b69ec3c502e6f609b67f9613c6">CaseSensitive::Yes</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a0eacc3d8729e9a1dcf76387ec60195ce" name="a0eacc3d8729e9a1dcf76387ec60195ce"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0eacc3d8729e9a1dcf76387ec60195ce">&#9670;&nbsp;</a></span>Contains() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T , typename AllocComp  = std::allocator&lt;T&gt;, typename AllocMatch  = AllocComp&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a01052.xhtml">Vector::ContainsMatcher</a>&lt; T, AllocComp, AllocMatch &gt; Catch::Matchers::Contains </td>
          <td>(</td>
          <td class="paramtype">std::vector&lt; T, AllocComp &gt; const &amp;&#160;</td>
          <td class="paramname"><em>comparator</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="a00290_source.xhtml#l03739">3739</a> of file <a class="el" href="a00290_source.xhtml">catch.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno"> 3739</span>                                                                                                          {</div>
<div class="line"><span class="lineno"> 3740</span>        <span class="keywordflow">return</span> <a class="code hl_struct" href="a01052.xhtml">Vector::ContainsMatcher&lt;T, AllocComp, AllocMatch&gt;</a>( comparator );</div>
<div class="line"><span class="lineno"> 3741</span>    }</div>
<div class="ttc" id="aa01052_xhtml"><div class="ttname"><a href="a01052.xhtml">Catch::Matchers::Vector::ContainsMatcher</a></div><div class="ttdef"><b>Definition:</b> <a href="a00290_source.xhtml#l03628">catch.hpp:3628</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ae5a45efb4538c57c43e04f3f9043ad6e" name="ae5a45efb4538c57c43e04f3f9043ad6e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae5a45efb4538c57c43e04f3f9043ad6e">&#9670;&nbsp;</a></span>EndsWith()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a01040.xhtml">StdString::EndsWithMatcher</a> Catch::Matchers::EndsWith </td>
          <td>(</td>
          <td class="paramtype">std::string const &amp;&#160;</td>
          <td class="paramname"><em>str</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="a00636.xhtml#aad49d3aee2d97066642fffa919685c6a">CaseSensitive::Choice</a>&#160;</td>
          <td class="paramname"><em>caseSensitivity</em> = <code><a class="el" href="a00636.xhtml#aad49d3aee2d97066642fffa919685c6aa7c5550b69ec3c502e6f609b67f9613c6">CaseSensitive::Yes</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="af8af7dfc338335ed4c788cb1b37fc59f" name="af8af7dfc338335ed4c788cb1b37fc59f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af8af7dfc338335ed4c788cb1b37fc59f">&#9670;&nbsp;</a></span>Equals() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a01028.xhtml">StdString::EqualsMatcher</a> Catch::Matchers::Equals </td>
          <td>(</td>
          <td class="paramtype">std::string const &amp;&#160;</td>
          <td class="paramname"><em>str</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="a00636.xhtml#aad49d3aee2d97066642fffa919685c6a">CaseSensitive::Choice</a>&#160;</td>
          <td class="paramname"><em>caseSensitivity</em> = <code><a class="el" href="a00636.xhtml#aad49d3aee2d97066642fffa919685c6aa7c5550b69ec3c502e6f609b67f9613c6">CaseSensitive::Yes</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a5b76944eeb2b65329fabbac487a31d66" name="a5b76944eeb2b65329fabbac487a31d66"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5b76944eeb2b65329fabbac487a31d66">&#9670;&nbsp;</a></span>Equals() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T , typename AllocComp  = std::allocator&lt;T&gt;, typename AllocMatch  = AllocComp&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a01056.xhtml">Vector::EqualsMatcher</a>&lt; T, AllocComp, AllocMatch &gt; Catch::Matchers::Equals </td>
          <td>(</td>
          <td class="paramtype">std::vector&lt; T, AllocComp &gt; const &amp;&#160;</td>
          <td class="paramname"><em>comparator</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="a00290_source.xhtml#l03749">3749</a> of file <a class="el" href="a00290_source.xhtml">catch.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno"> 3749</span>                                                                                                      {</div>
<div class="line"><span class="lineno"> 3750</span>        <span class="keywordflow">return</span> <a class="code hl_struct" href="a01056.xhtml">Vector::EqualsMatcher&lt;T, AllocComp, AllocMatch&gt;</a>( comparator );</div>
<div class="line"><span class="lineno"> 3751</span>    }</div>
<div class="ttc" id="aa01056_xhtml"><div class="ttname"><a href="a01056.xhtml">Catch::Matchers::Vector::EqualsMatcher</a></div><div class="ttdef"><b>Definition:</b> <a href="a00290_source.xhtml#l03658">catch.hpp:3658</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a82f1893cf50ae4c14b9b3e0980bf22b8" name="a82f1893cf50ae4c14b9b3e0980bf22b8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a82f1893cf50ae4c14b9b3e0980bf22b8">&#9670;&nbsp;</a></span>Matches()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a01044.xhtml">StdString::RegexMatcher</a> Catch::Matchers::Matches </td>
          <td>(</td>
          <td class="paramtype">std::string const &amp;&#160;</td>
          <td class="paramname"><em>regex</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="a00636.xhtml#aad49d3aee2d97066642fffa919685c6a">CaseSensitive::Choice</a>&#160;</td>
          <td class="paramname"><em>caseSensitivity</em> = <code><a class="el" href="a00636.xhtml#aad49d3aee2d97066642fffa919685c6aa7c5550b69ec3c502e6f609b67f9613c6">CaseSensitive::Yes</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a0fcd8bd126bb510a6bb99e6360aa270a" name="a0fcd8bd126bb510a6bb99e6360aa270a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0fcd8bd126bb510a6bb99e6360aa270a">&#9670;&nbsp;</a></span>Message()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a01000.xhtml">Exception::ExceptionMessageMatcher</a> Catch::Matchers::Message </td>
          <td>(</td>
          <td class="paramtype">std::string const &amp;&#160;</td>
          <td class="paramname"><em>message</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a70a7c65c44f6ea7f739402c0b6f28657" name="a70a7c65c44f6ea7f739402c0b6f28657"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a70a7c65c44f6ea7f739402c0b6f28657">&#9670;&nbsp;</a></span>Predicate()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a01016.xhtml">Generic::PredicateMatcher</a>&lt; T &gt; Catch::Matchers::Predicate </td>
          <td>(</td>
          <td class="paramtype">std::function&lt; <a class="el" href="a00254.xhtml#abb452686968e48b67397da5f97445f5b">bool</a>(T const &amp;)&gt; const &amp;&#160;</td>
          <td class="paramname"><em>predicate</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::string const &amp;&#160;</td>
          <td class="paramname"><em>description</em> = <code>&quot;&quot;</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="a00290_source.xhtml#l03521">3521</a> of file <a class="el" href="a00290_source.xhtml">catch.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno"> 3521</span>                                                                                                                          {</div>
<div class="line"><span class="lineno"> 3522</span>        <span class="keywordflow">return</span> <a class="code hl_class" href="a01016.xhtml">Generic::PredicateMatcher&lt;T&gt;</a>(predicate, description);</div>
<div class="line"><span class="lineno"> 3523</span>    }</div>
<div class="ttc" id="aa01016_xhtml"><div class="ttname"><a href="a01016.xhtml">Catch::Matchers::Generic::PredicateMatcher</a></div><div class="ttdef"><b>Definition:</b> <a href="a00290_source.xhtml#l03495">catch.hpp:3495</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a97c9ee09a70378ca7e8c6f9f01b0d6d1" name="a97c9ee09a70378ca7e8c6f9f01b0d6d1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a97c9ee09a70378ca7e8c6f9f01b0d6d1">&#9670;&nbsp;</a></span>StartsWith()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a01036.xhtml">StdString::StartsWithMatcher</a> Catch::Matchers::StartsWith </td>
          <td>(</td>
          <td class="paramtype">std::string const &amp;&#160;</td>
          <td class="paramname"><em>str</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="a00636.xhtml#aad49d3aee2d97066642fffa919685c6a">CaseSensitive::Choice</a>&#160;</td>
          <td class="paramname"><em>caseSensitivity</em> = <code><a class="el" href="a00636.xhtml#aad49d3aee2d97066642fffa919685c6aa7c5550b69ec3c502e6f609b67f9613c6">CaseSensitive::Yes</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a3b1784cd26bd7e3fea38505eb138b186" name="a3b1784cd26bd7e3fea38505eb138b186"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3b1784cd26bd7e3fea38505eb138b186">&#9670;&nbsp;</a></span>UnorderedEquals()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T , typename AllocComp  = std::allocator&lt;T&gt;, typename AllocMatch  = AllocComp&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a01064.xhtml">Vector::UnorderedEqualsMatcher</a>&lt; T, AllocComp, AllocMatch &gt; Catch::Matchers::UnorderedEquals </td>
          <td>(</td>
          <td class="paramtype">std::vector&lt; T, AllocComp &gt; const &amp;&#160;</td>
          <td class="paramname"><em>target</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="a00290_source.xhtml#l03759">3759</a> of file <a class="el" href="a00290_source.xhtml">catch.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno"> 3759</span>                                                                                                                  {</div>
<div class="line"><span class="lineno"> 3760</span>        <span class="keywordflow">return</span> <a class="code hl_struct" href="a01064.xhtml">Vector::UnorderedEqualsMatcher&lt;T, AllocComp, AllocMatch&gt;</a>( target );</div>
<div class="line"><span class="lineno"> 3761</span>    }</div>
<div class="ttc" id="aa01064_xhtml"><div class="ttname"><a href="a01064.xhtml">Catch::Matchers::Vector::UnorderedEqualsMatcher</a></div><div class="ttdef"><b>Definition:</b> <a href="a00290_source.xhtml#l03717">catch.hpp:3717</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ad8092d8b34128390dbff20b87f2f6f99" name="ad8092d8b34128390dbff20b87f2f6f99"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad8092d8b34128390dbff20b87f2f6f99">&#9670;&nbsp;</a></span>VectorContains()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T , typename Alloc  = std::allocator&lt;T&gt;&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a01048.xhtml">Vector::ContainsElementMatcher</a>&lt; T, Alloc &gt; Catch::Matchers::VectorContains </td>
          <td>(</td>
          <td class="paramtype">T const &amp;&#160;</td>
          <td class="paramname"><em>comparator</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="a00290_source.xhtml#l03744">3744</a> of file <a class="el" href="a00290_source.xhtml">catch.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno"> 3744</span>                                                                                 {</div>
<div class="line"><span class="lineno"> 3745</span>        <span class="keywordflow">return</span> <a class="code hl_struct" href="a01048.xhtml">Vector::ContainsElementMatcher&lt;T, Alloc&gt;</a>( comparator );</div>
<div class="line"><span class="lineno"> 3746</span>    }</div>
<div class="ttc" id="aa01048_xhtml"><div class="ttname"><a href="a01048.xhtml">Catch::Matchers::Vector::ContainsElementMatcher</a></div><div class="ttdef"><b>Definition:</b> <a href="a00290_source.xhtml#l03607">catch.hpp:3607</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a4c9ea76d47d02de0cf2d354c87c26e95" name="a4c9ea76d47d02de0cf2d354c87c26e95"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4c9ea76d47d02de0cf2d354c87c26e95">&#9670;&nbsp;</a></span>WithinAbs()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a01004.xhtml">Floating::WithinAbsMatcher</a> Catch::Matchers::WithinAbs </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>target</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>margin</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a46e2f1efab13b85e2cbe36958a27d518" name="a46e2f1efab13b85e2cbe36958a27d518"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a46e2f1efab13b85e2cbe36958a27d518">&#9670;&nbsp;</a></span>WithinRel() <span class="overload">[1/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a01012.xhtml">Floating::WithinRelMatcher</a> Catch::Matchers::WithinRel </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>target</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a0c559d9cfda02a81941ad6933f4ca450" name="a0c559d9cfda02a81941ad6933f4ca450"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0c559d9cfda02a81941ad6933f4ca450">&#9670;&nbsp;</a></span>WithinRel() <span class="overload">[2/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a01012.xhtml">Floating::WithinRelMatcher</a> Catch::Matchers::WithinRel </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>target</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>eps</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a18cfb571dd191377674bad0cbb50078e" name="a18cfb571dd191377674bad0cbb50078e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a18cfb571dd191377674bad0cbb50078e">&#9670;&nbsp;</a></span>WithinRel() <span class="overload">[3/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a01012.xhtml">Floating::WithinRelMatcher</a> Catch::Matchers::WithinRel </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>target</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a494b4c8c68ac883e29dc35da71a4cd72" name="a494b4c8c68ac883e29dc35da71a4cd72"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a494b4c8c68ac883e29dc35da71a4cd72">&#9670;&nbsp;</a></span>WithinRel() <span class="overload">[4/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a01012.xhtml">Floating::WithinRelMatcher</a> Catch::Matchers::WithinRel </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>target</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>eps</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ae77e233c3ed735ea12b7c726153798d1" name="ae77e233c3ed735ea12b7c726153798d1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae77e233c3ed735ea12b7c726153798d1">&#9670;&nbsp;</a></span>WithinULP() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a01008.xhtml">Floating::WithinUlpsMatcher</a> Catch::Matchers::WithinULP </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>target</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint64_t&#160;</td>
          <td class="paramname"><em>maxUlpDiff</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a5d108ff6aaeac40f20f4978dfb3f51fc" name="a5d108ff6aaeac40f20f4978dfb3f51fc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5d108ff6aaeac40f20f4978dfb3f51fc">&#9670;&nbsp;</a></span>WithinULP() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a01008.xhtml">Floating::WithinUlpsMatcher</a> Catch::Matchers::WithinULP </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>target</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint64_t&#160;</td>
          <td class="paramname"><em>maxUlpDiff</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="a00296.xhtml">Catch</a></li><li class="navelem"><a class="el" href="a00301.xhtml">Matchers</a></li>
    <li class="footer">Generated on Tue Jun 14 2022 21:07:20 for ACA by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.4 </li>
  </ul>
</div>
</body>
</html>
