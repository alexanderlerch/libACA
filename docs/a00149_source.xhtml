<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.4"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ACA: Filter.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">ACA<span id="projectnumber">&#160;0.2.6</span>
   </div>
   <div id="projectbrief">Example Code for Audio Content Analysis</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.4 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search",'Search','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('a00149_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle"><div class="title">Filter.h</div></div>
</div><!--header-->
<div class="contents">
<a href="a00149.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="preprocessor">#if !defined(__ACA_Filter_HEADER_INCLUDED__)</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span><span class="preprocessor">#define __ACA_Filter_HEADER_INCLUDED__</span></div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span> </div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span><span class="preprocessor">#include &lt;cmath&gt;</span></div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span> </div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span><span class="preprocessor">#include &quot;<a class="code" href="a00116.xhtml">ErrorDef.h</a>&quot;</span></div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span> </div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span><span class="preprocessor">#include &quot;<a class="code" href="a00152.xhtml">Vector.h</a>&quot;</span></div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span><span class="preprocessor">#include &quot;<a class="code" href="a00146.xhtml">Matrix.h</a>&quot;</span></div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span><span class="preprocessor">#include &quot;<a class="code" href="a00161.xhtml">RingBuffer.h</a>&quot;</span></div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span><span class="comment"></span> </div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span><span class="comment">/*! \brief class providing a generic filter implementation</span></div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span><span class="comment">*/</span></div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span><span class="keyword">template</span> &lt;<span class="keyword">class</span> T&gt;</div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno"><a class="line" href="a00465.xhtml">   15</a></span><span class="keyword">class </span><a class="code hl_class" href="a00465.xhtml">CFilter</a></div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span>{</div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span> </div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno"><a class="line" href="a00465.xhtml#a04c3fba6b847217b8689a7cac54d5b86">   19</a></span>    <a class="code hl_function" href="a00465.xhtml#a04c3fba6b847217b8689a7cac54d5b86">CFilter</a>() {};</div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno"><a class="line" href="a00465.xhtml#a98c26369ca6c2941cba4874e6bfef3a7">   20</a></span>    <span class="keyword">virtual</span> <a class="code hl_function" href="a00465.xhtml#a98c26369ca6c2941cba4874e6bfef3a7">~CFilter</a>() </div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span>    {</div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span>        <a class="code hl_function" href="a00465.xhtml#a8d6a8f20ea178eda7352a89bf7a4d200">reset</a>();</div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span>    };</div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span> </div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span><span class="comment"></span> </div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span><span class="comment">    /*! initializes the filter</span></div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span><span class="comment">    \param pfB numerator coefficients </span></div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span><span class="comment">    \param pfA denominator coefficients (normalized: pfA[0] = 1)</span></div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span><span class="comment">    \param iNumCoeffs length of both pfB, and pfA</span></div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span><span class="comment">    \return Error_t</span></div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span><span class="comment">    */</span></div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno"><a class="line" href="a00465.xhtml#add0db9a0cf605eb3f57c80b52d2bda0e">   32</a></span>    <a class="code hl_enumeration" href="a00116.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> <a class="code hl_function" href="a00465.xhtml#add0db9a0cf605eb3f57c80b52d2bda0e">init</a>(<span class="keyword">const</span> T* pfB, <span class="keyword">const</span> T* pfA, <span class="keywordtype">int</span> iNumCoeffs)</div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span>    {</div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span>        <span class="keywordflow">if</span> (!pfA || !pfB || iNumCoeffs &lt;= 0)</div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span>            <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00116.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248">Error_t::kFunctionInvalidArgsError</a>;</div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span> </div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span>        <a class="code hl_function" href="a00465.xhtml#a8d6a8f20ea178eda7352a89bf7a4d200">reset</a>();</div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span> </div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span>        <span class="comment">// alloc internal coefficients</span></div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span>        <span class="keywordflow">for</span> (<span class="keyword">auto</span> i = 0; i &lt; <a class="code hl_enumvalue" href="a00465.xhtml#af77365faa392bc427be2607834ab39bca4e70b0db4e767b7ab3dc858a94bcc2f4">kNumFilterDims</a>; i++)</div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span>        {</div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span>            <a class="code hl_function" href="a00489.xhtml#abaadac98b1cad18b7b568852bc951696">CVector::alloc</a>(<a class="code hl_variable" href="a00465.xhtml#a4e31c29ccb288a7227e65e2b925deb02">m_aptCoeff</a>[i], iNumCoeffs);</div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span>            <a class="code hl_function" href="a00489.xhtml#a6dbb3f9f480568b60f7fe50090d20003">CVector::setZero</a>(<a class="code hl_variable" href="a00465.xhtml#a4e31c29ccb288a7227e65e2b925deb02">m_aptCoeff</a>[i], iNumCoeffs);</div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span>        }</div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span> </div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span>        <span class="comment">// set coefficients</span></div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span>        <a class="code hl_function" href="a00489.xhtml#ad7c5cba73e439adac77778f61c9418f0">CVector::copy</a>(<a class="code hl_variable" href="a00465.xhtml#a4e31c29ccb288a7227e65e2b925deb02">m_aptCoeff</a>[<a class="code hl_enumvalue" href="a00465.xhtml#af77365faa392bc427be2607834ab39bca29cc20553a29d08db9ce9d3995f134e8">kFir</a>], pfB, iNumCoeffs);</div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span>        <a class="code hl_function" href="a00489.xhtml#ad7c5cba73e439adac77778f61c9418f0">CVector::copy</a>(<a class="code hl_variable" href="a00465.xhtml#a4e31c29ccb288a7227e65e2b925deb02">m_aptCoeff</a>[<a class="code hl_enumvalue" href="a00465.xhtml#af77365faa392bc427be2607834ab39bca61b3a34d4b72be6e92f0d40eee575d54">kIir</a>], pfA, iNumCoeffs);</div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span>        <a class="code hl_variable" href="a00465.xhtml#aed0a614dce6816b55f0b3f17bdf991e5">m_iNumFilterCoeffs</a> = iNumCoeffs;</div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span> </div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span>        <span class="comment">// initialize other internal memory</span></div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span>        <a class="code hl_variable" href="a00465.xhtml#ac44bd773d4652641a423b5291f13d337">m_pCFilterBuff</a> = <span class="keyword">new</span> <a class="code hl_class" href="a00477.xhtml">CRingBuffer&lt;T&gt;</a>(iNumCoeffs);</div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span>        <a class="code hl_variable" href="a00465.xhtml#ac44bd773d4652641a423b5291f13d337">m_pCFilterBuff</a>-&gt;setWriteIdx(<span class="keyword">static_cast&lt;</span><span class="keywordtype">long</span> <span class="keywordtype">long</span><span class="keyword">&gt;</span>(iNumCoeffs - 1));</div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span> </div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span>        <a class="code hl_function" href="a00489.xhtml#abaadac98b1cad18b7b568852bc951696">CVector::alloc</a>(<a class="code hl_variable" href="a00465.xhtml#adc33d7fd0caf47e30d1d4e3634819bac">m_ptProcBuff</a>, <span class="keyword">static_cast&lt;</span><span class="keywordtype">long</span> <span class="keywordtype">long</span><span class="keyword">&gt;</span>(iNumCoeffs)-1);</div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno">   56</span> </div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span>        <a class="code hl_variable" href="a00465.xhtml#a12247cfbb2d2bd19831e8d23f155d117">m_bisInitialized</a> = <span class="keyword">true</span>;</div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span> </div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00116.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span>    }</div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span>    <span class="comment"></span></div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span><span class="comment">    /*! resets a Filter instance</span></div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span><span class="comment">    \return Error_t</span></div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno">   64</span><span class="comment">    */</span></div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno"><a class="line" href="a00465.xhtml#a8d6a8f20ea178eda7352a89bf7a4d200">   65</a></span>    <a class="code hl_enumeration" href="a00116.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> <a class="code hl_function" href="a00465.xhtml#a8d6a8f20ea178eda7352a89bf7a4d200">reset</a>(<span class="keywordtype">bool</span> bFreeMem = <span class="keyword">true</span>)</div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span>    {</div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno">   67</span>        <span class="keywordflow">if</span> (!<a class="code hl_variable" href="a00465.xhtml#a12247cfbb2d2bd19831e8d23f155d117">m_bisInitialized</a>)</div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span>            <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00116.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span> </div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno">   70</span>        <span class="keywordflow">if</span> (bFreeMem)</div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span>        {</div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span>            <span class="keywordflow">for</span> (<span class="keyword">auto</span> i = 0; i &lt; <a class="code hl_enumvalue" href="a00465.xhtml#af77365faa392bc427be2607834ab39bca4e70b0db4e767b7ab3dc858a94bcc2f4">kNumFilterDims</a>; i++)</div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span>                <a class="code hl_function" href="a00489.xhtml#aa86bdb0c663d4d52f2765793756f8737">CVector::free</a>(<a class="code hl_variable" href="a00465.xhtml#a4e31c29ccb288a7227e65e2b925deb02">m_aptCoeff</a>[i]);</div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span> </div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span>            <a class="code hl_variable" href="a00465.xhtml#aed0a614dce6816b55f0b3f17bdf991e5">m_iNumFilterCoeffs</a> = 0;</div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span> </div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span>            <span class="keyword">delete</span> <a class="code hl_variable" href="a00465.xhtml#ac44bd773d4652641a423b5291f13d337">m_pCFilterBuff</a>;</div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span>            <a class="code hl_variable" href="a00465.xhtml#ac44bd773d4652641a423b5291f13d337">m_pCFilterBuff</a> = 0;</div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span> </div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span>            <a class="code hl_function" href="a00489.xhtml#aa86bdb0c663d4d52f2765793756f8737">CVector::free</a>(<a class="code hl_variable" href="a00465.xhtml#adc33d7fd0caf47e30d1d4e3634819bac">m_ptProcBuff</a>);</div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span> </div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno">   82</span>            <a class="code hl_variable" href="a00465.xhtml#a12247cfbb2d2bd19831e8d23f155d117">m_bisInitialized</a> = <span class="keyword">false</span>;</div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span>        }</div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span>        <span class="keywordflow">else</span></div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span>        {</div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno">   86</span>            <a class="code hl_variable" href="a00465.xhtml#ac44bd773d4652641a423b5291f13d337">m_pCFilterBuff</a>-&gt;reset();</div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span>            <a class="code hl_variable" href="a00465.xhtml#ac44bd773d4652641a423b5291f13d337">m_pCFilterBuff</a>-&gt;setWriteIdx(<a class="code hl_variable" href="a00465.xhtml#aed0a614dce6816b55f0b3f17bdf991e5">m_iNumFilterCoeffs</a> - 1);</div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span>            <a class="code hl_function" href="a00489.xhtml#a6dbb3f9f480568b60f7fe50090d20003">CVector::setZero</a>(<a class="code hl_variable" href="a00465.xhtml#adc33d7fd0caf47e30d1d4e3634819bac">m_ptProcBuff</a>, <a class="code hl_variable" href="a00465.xhtml#aed0a614dce6816b55f0b3f17bdf991e5">m_iNumFilterCoeffs</a> - <span class="keyword">static_cast&lt;</span><span class="keywordtype">long</span> <span class="keywordtype">long</span><span class="keyword">&gt;</span>(1));</div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span>        }</div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span> </div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00116.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span>    }</div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno">   93</span><span class="comment"></span> </div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span><span class="comment">    /*! filters the signal (transposed direct form II implementation), can be called block by block</span></div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span><span class="comment">     \param pfOut output signal (to be written, allocated by user)</span></div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span><span class="comment">     \param pfIn input signal</span></div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno">   97</span><span class="comment">     \param iNumSamples length of both pfOut and pfIn</span></div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno">   98</span><span class="comment">     \return Error_t</span></div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno">   99</span><span class="comment">     */</span></div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno"><a class="line" href="a00465.xhtml#a1c35f3511dcdc32517db3cea9c327ae8">  100</a></span>    <a class="code hl_enumeration" href="a00116.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> <a class="code hl_function" href="a00465.xhtml#a1c35f3511dcdc32517db3cea9c327ae8">process</a>(T* pfOut, <span class="keyword">const</span> T* pfIn, <span class="keywordtype">long</span> <span class="keywordtype">long</span> iNumSamples)</div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno">  101</span>    {</div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno">  102</span>        <span class="keywordflow">if</span> (!<a class="code hl_variable" href="a00465.xhtml#a12247cfbb2d2bd19831e8d23f155d117">m_bisInitialized</a>)</div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno">  103</span>            <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00116.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fad7652bf47cff43c21f12cb7df4ca66ec">Error_t::kFunctionIllegalCallError</a>;</div>
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno">  104</span>        <span class="keywordflow">if</span> (!pfOut || !pfIn || iNumSamples &lt;= 0)</div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno">  105</span>            <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00116.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248">Error_t::kFunctionInvalidArgsError</a>;</div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno">  106</span> </div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span>        <span class="keywordflow">for</span> (<span class="keyword">auto</span> i = 0; i &lt; iNumSamples; i++)</div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno">  108</span>        {</div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span>            T fTmp = <a class="code hl_variable" href="a00465.xhtml#adc33d7fd0caf47e30d1d4e3634819bac">m_ptProcBuff</a>[0] + <a class="code hl_variable" href="a00465.xhtml#a4e31c29ccb288a7227e65e2b925deb02">m_aptCoeff</a>[<a class="code hl_enumvalue" href="a00465.xhtml#af77365faa392bc427be2607834ab39bca29cc20553a29d08db9ce9d3995f134e8">kFir</a>][0] * pfIn[i];</div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span> </div>
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno">  111</span>            <span class="keywordflow">for</span> (<span class="keyword">auto</span> j = 1; j &lt; <a class="code hl_variable" href="a00465.xhtml#aed0a614dce6816b55f0b3f17bdf991e5">m_iNumFilterCoeffs</a> - 1; j++)</div>
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno">  112</span>                <a class="code hl_variable" href="a00465.xhtml#adc33d7fd0caf47e30d1d4e3634819bac">m_ptProcBuff</a>[j - 1] = <a class="code hl_variable" href="a00465.xhtml#adc33d7fd0caf47e30d1d4e3634819bac">m_ptProcBuff</a>[j] - <a class="code hl_variable" href="a00465.xhtml#a4e31c29ccb288a7227e65e2b925deb02">m_aptCoeff</a>[<a class="code hl_enumvalue" href="a00465.xhtml#af77365faa392bc427be2607834ab39bca61b3a34d4b72be6e92f0d40eee575d54">kIir</a>][j] * fTmp + <a class="code hl_variable" href="a00465.xhtml#a4e31c29ccb288a7227e65e2b925deb02">m_aptCoeff</a>[<a class="code hl_enumvalue" href="a00465.xhtml#af77365faa392bc427be2607834ab39bca29cc20553a29d08db9ce9d3995f134e8">kFir</a>][j] * pfIn[i];</div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno">  113</span> </div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span>            <a class="code hl_variable" href="a00465.xhtml#adc33d7fd0caf47e30d1d4e3634819bac">m_ptProcBuff</a>[<a class="code hl_variable" href="a00465.xhtml#aed0a614dce6816b55f0b3f17bdf991e5">m_iNumFilterCoeffs</a>-2] = -<a class="code hl_variable" href="a00465.xhtml#a4e31c29ccb288a7227e65e2b925deb02">m_aptCoeff</a>[<a class="code hl_enumvalue" href="a00465.xhtml#af77365faa392bc427be2607834ab39bca61b3a34d4b72be6e92f0d40eee575d54">kIir</a>][<a class="code hl_variable" href="a00465.xhtml#aed0a614dce6816b55f0b3f17bdf991e5">m_iNumFilterCoeffs</a> - 1] * fTmp + <a class="code hl_variable" href="a00465.xhtml#a4e31c29ccb288a7227e65e2b925deb02">m_aptCoeff</a>[<a class="code hl_enumvalue" href="a00465.xhtml#af77365faa392bc427be2607834ab39bca29cc20553a29d08db9ce9d3995f134e8">kFir</a>][<a class="code hl_variable" href="a00465.xhtml#aed0a614dce6816b55f0b3f17bdf991e5">m_iNumFilterCoeffs</a>-1] * pfIn[i];</div>
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno">  115</span> </div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span>            pfOut[i] = fTmp;</div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno">  117</span>        }</div>
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno">  118</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00116.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno">  119</span>    }</div>
<div class="line"><a id="l00120" name="l00120"></a><span class="lineno">  120</span><span class="comment"></span> </div>
<div class="line"><a id="l00121" name="l00121"></a><span class="lineno">  121</span><span class="comment">    /*! filters the signal (direct form II implementation, here as &quot;informative&quot; implementation)</span></div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno">  122</span><span class="comment">     \param pfOut output signal (to be written, allocated by user)</span></div>
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno">  123</span><span class="comment">     \param pfIn input signal</span></div>
<div class="line"><a id="l00124" name="l00124"></a><span class="lineno">  124</span><span class="comment">     \param iNumSamples length of both pfOut and pfIn</span></div>
<div class="line"><a id="l00125" name="l00125"></a><span class="lineno">  125</span><span class="comment">     \return Error_t</span></div>
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno">  126</span><span class="comment">     */</span></div>
<div class="line"><a id="l00127" name="l00127"></a><span class="lineno"><a class="line" href="a00465.xhtml#a525b94fcc4e3ff6c061c6d9e667c4790">  127</a></span>    <a class="code hl_enumeration" href="a00116.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> <a class="code hl_function" href="a00465.xhtml#a525b94fcc4e3ff6c061c6d9e667c4790">processDFII</a>(T* pfOut, <span class="keyword">const</span> T* pfIn, <span class="keywordtype">long</span> <span class="keywordtype">long</span> iNumSamples)</div>
<div class="line"><a id="l00128" name="l00128"></a><span class="lineno">  128</span>    {</div>
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno">  129</span>        <span class="keywordflow">if</span> (!<a class="code hl_variable" href="a00465.xhtml#a12247cfbb2d2bd19831e8d23f155d117">m_bisInitialized</a>)</div>
<div class="line"><a id="l00130" name="l00130"></a><span class="lineno">  130</span>            <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00116.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fad7652bf47cff43c21f12cb7df4ca66ec">Error_t::kFunctionIllegalCallError</a>;</div>
<div class="line"><a id="l00131" name="l00131"></a><span class="lineno">  131</span>        <span class="keywordflow">if</span> (!pfOut || !pfIn || iNumSamples &lt;= 0)</div>
<div class="line"><a id="l00132" name="l00132"></a><span class="lineno">  132</span>            <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00116.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248">Error_t::kFunctionInvalidArgsError</a>;</div>
<div class="line"><a id="l00133" name="l00133"></a><span class="lineno">  133</span> </div>
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno">  134</span>        <span class="keywordflow">for</span> (<span class="keyword">auto</span> i = 0; i &lt; iNumSamples; i++)</div>
<div class="line"><a id="l00135" name="l00135"></a><span class="lineno">  135</span>        {</div>
<div class="line"><a id="l00136" name="l00136"></a><span class="lineno">  136</span>            T fTmp = pfIn[i];</div>
<div class="line"><a id="l00137" name="l00137"></a><span class="lineno">  137</span> </div>
<div class="line"><a id="l00138" name="l00138"></a><span class="lineno">  138</span>            <span class="comment">// get buffer values</span></div>
<div class="line"><a id="l00139" name="l00139"></a><span class="lineno">  139</span>            <a class="code hl_variable" href="a00465.xhtml#ac44bd773d4652641a423b5291f13d337">m_pCFilterBuff</a>-&gt;get(<a class="code hl_variable" href="a00465.xhtml#adc33d7fd0caf47e30d1d4e3634819bac">m_ptProcBuff</a>, <a class="code hl_variable" href="a00465.xhtml#aed0a614dce6816b55f0b3f17bdf991e5">m_iNumFilterCoeffs</a> - 1);</div>
<div class="line"><a id="l00140" name="l00140"></a><span class="lineno">  140</span> </div>
<div class="line"><a id="l00141" name="l00141"></a><span class="lineno">  141</span>            <span class="comment">// IIR part</span></div>
<div class="line"><a id="l00142" name="l00142"></a><span class="lineno">  142</span>            <span class="keywordflow">for</span> (<span class="keyword">auto</span> j = 1; j &lt; <a class="code hl_variable" href="a00465.xhtml#aed0a614dce6816b55f0b3f17bdf991e5">m_iNumFilterCoeffs</a>; j++)</div>
<div class="line"><a id="l00143" name="l00143"></a><span class="lineno">  143</span>                fTmp -= <a class="code hl_variable" href="a00465.xhtml#a4e31c29ccb288a7227e65e2b925deb02">m_aptCoeff</a>[<a class="code hl_enumvalue" href="a00465.xhtml#af77365faa392bc427be2607834ab39bca61b3a34d4b72be6e92f0d40eee575d54">kIir</a>][j] * <a class="code hl_variable" href="a00465.xhtml#adc33d7fd0caf47e30d1d4e3634819bac">m_ptProcBuff</a>[<a class="code hl_variable" href="a00465.xhtml#aed0a614dce6816b55f0b3f17bdf991e5">m_iNumFilterCoeffs</a> - 1 - j];</div>
<div class="line"><a id="l00144" name="l00144"></a><span class="lineno">  144</span> </div>
<div class="line"><a id="l00145" name="l00145"></a><span class="lineno">  145</span>            <span class="comment">//put new value into buffer</span></div>
<div class="line"><a id="l00146" name="l00146"></a><span class="lineno">  146</span>            <a class="code hl_variable" href="a00465.xhtml#ac44bd773d4652641a423b5291f13d337">m_pCFilterBuff</a>-&gt;putPostInc(fTmp);</div>
<div class="line"><a id="l00147" name="l00147"></a><span class="lineno">  147</span> </div>
<div class="line"><a id="l00148" name="l00148"></a><span class="lineno">  148</span>            <span class="comment">// FIR part</span></div>
<div class="line"><a id="l00149" name="l00149"></a><span class="lineno">  149</span>            pfOut[i] = <a class="code hl_variable" href="a00465.xhtml#a4e31c29ccb288a7227e65e2b925deb02">m_aptCoeff</a>[<a class="code hl_enumvalue" href="a00465.xhtml#af77365faa392bc427be2607834ab39bca29cc20553a29d08db9ce9d3995f134e8">kFir</a>][0] * fTmp;</div>
<div class="line"><a id="l00150" name="l00150"></a><span class="lineno">  150</span>            <span class="keywordflow">for</span> (<span class="keyword">auto</span> j = 1; j &lt; <a class="code hl_variable" href="a00465.xhtml#aed0a614dce6816b55f0b3f17bdf991e5">m_iNumFilterCoeffs</a>; j++)</div>
<div class="line"><a id="l00151" name="l00151"></a><span class="lineno">  151</span>                pfOut[i] += <a class="code hl_variable" href="a00465.xhtml#a4e31c29ccb288a7227e65e2b925deb02">m_aptCoeff</a>[<a class="code hl_enumvalue" href="a00465.xhtml#af77365faa392bc427be2607834ab39bca29cc20553a29d08db9ce9d3995f134e8">kFir</a>][j] * <a class="code hl_variable" href="a00465.xhtml#adc33d7fd0caf47e30d1d4e3634819bac">m_ptProcBuff</a>[<a class="code hl_variable" href="a00465.xhtml#aed0a614dce6816b55f0b3f17bdf991e5">m_iNumFilterCoeffs</a> - 1 - j];</div>
<div class="line"><a id="l00152" name="l00152"></a><span class="lineno">  152</span> </div>
<div class="line"><a id="l00153" name="l00153"></a><span class="lineno">  153</span>            <span class="comment">// increment read index</span></div>
<div class="line"><a id="l00154" name="l00154"></a><span class="lineno">  154</span>            <a class="code hl_variable" href="a00465.xhtml#ac44bd773d4652641a423b5291f13d337">m_pCFilterBuff</a>-&gt;getPostInc();</div>
<div class="line"><a id="l00155" name="l00155"></a><span class="lineno">  155</span>        }</div>
<div class="line"><a id="l00156" name="l00156"></a><span class="lineno">  156</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00116.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><a id="l00157" name="l00157"></a><span class="lineno">  157</span>    }</div>
<div class="line"><a id="l00158" name="l00158"></a><span class="lineno">  158</span><span class="comment"></span> </div>
<div class="line"><a id="l00159" name="l00159"></a><span class="lineno">  159</span><span class="comment">    /*! zero phase filtering (can only be called with a complete signal, not block by block)</span></div>
<div class="line"><a id="l00160" name="l00160"></a><span class="lineno">  160</span><span class="comment">     \param pfOut output signal (to be written, allocated by user)</span></div>
<div class="line"><a id="l00161" name="l00161"></a><span class="lineno">  161</span><span class="comment">     \param pfIn input signal</span></div>
<div class="line"><a id="l00162" name="l00162"></a><span class="lineno">  162</span><span class="comment">     \param iNumSamples length of both pfOut and pfIn</span></div>
<div class="line"><a id="l00163" name="l00163"></a><span class="lineno">  163</span><span class="comment">     \return Error_t</span></div>
<div class="line"><a id="l00164" name="l00164"></a><span class="lineno">  164</span><span class="comment">     */</span></div>
<div class="line"><a id="l00165" name="l00165"></a><span class="lineno"><a class="line" href="a00465.xhtml#a04bf94ff97e5e270210954864025ea06">  165</a></span>    <a class="code hl_enumeration" href="a00116.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> <a class="code hl_function" href="a00465.xhtml#a04bf94ff97e5e270210954864025ea06">filtfilt</a>(T* pfOut, <span class="keyword">const</span> T* pfIn, <span class="keywordtype">long</span> <span class="keywordtype">long</span> iNumSamples)</div>
<div class="line"><a id="l00166" name="l00166"></a><span class="lineno">  166</span>    {</div>
<div class="line"><a id="l00167" name="l00167"></a><span class="lineno">  167</span>        <span class="keywordflow">if</span> (!<a class="code hl_variable" href="a00465.xhtml#a12247cfbb2d2bd19831e8d23f155d117">m_bisInitialized</a>)</div>
<div class="line"><a id="l00168" name="l00168"></a><span class="lineno">  168</span>            <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00116.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fad7652bf47cff43c21f12cb7df4ca66ec">Error_t::kFunctionIllegalCallError</a>;</div>
<div class="line"><a id="l00169" name="l00169"></a><span class="lineno">  169</span>        <span class="keywordflow">if</span> (!pfOut || !pfIn || iNumSamples &lt;= 0)</div>
<div class="line"><a id="l00170" name="l00170"></a><span class="lineno">  170</span>            <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00116.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248">Error_t::kFunctionInvalidArgsError</a>;</div>
<div class="line"><a id="l00171" name="l00171"></a><span class="lineno">  171</span> </div>
<div class="line"><a id="l00172" name="l00172"></a><span class="lineno">  172</span>        <span class="comment">// reset filter but don&#39;t delete memory</span></div>
<div class="line"><a id="l00173" name="l00173"></a><span class="lineno">  173</span>        this-&gt;<a class="code hl_function" href="a00465.xhtml#a8d6a8f20ea178eda7352a89bf7a4d200">reset</a>(<span class="keyword">false</span>);</div>
<div class="line"><a id="l00174" name="l00174"></a><span class="lineno">  174</span> </div>
<div class="line"><a id="l00175" name="l00175"></a><span class="lineno">  175</span>        <span class="keywordtype">float</span>* pfTmpBuff = 0;</div>
<div class="line"><a id="l00176" name="l00176"></a><span class="lineno">  176</span>        <span class="keywordtype">float</span>* pfPadding = 0;</div>
<div class="line"><a id="l00177" name="l00177"></a><span class="lineno">  177</span>        <span class="keywordtype">int</span> iPadLength = 3 * (<a class="code hl_variable" href="a00465.xhtml#aed0a614dce6816b55f0b3f17bdf991e5">m_iNumFilterCoeffs</a> - 1);</div>
<div class="line"><a id="l00178" name="l00178"></a><span class="lineno">  178</span> </div>
<div class="line"><a id="l00179" name="l00179"></a><span class="lineno">  179</span>        <span class="keywordflow">if</span> (iPadLength &gt; iNumSamples)</div>
<div class="line"><a id="l00180" name="l00180"></a><span class="lineno">  180</span>            <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00116.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fad7652bf47cff43c21f12cb7df4ca66ec">Error_t::kFunctionIllegalCallError</a>;</div>
<div class="line"><a id="l00181" name="l00181"></a><span class="lineno">  181</span> </div>
<div class="line"><a id="l00182" name="l00182"></a><span class="lineno">  182</span>        <span class="comment">// alloc necessary memory</span></div>
<div class="line"><a id="l00183" name="l00183"></a><span class="lineno">  183</span>        <a class="code hl_function" href="a00489.xhtml#abaadac98b1cad18b7b568852bc951696">CVector::alloc</a>(pfTmpBuff, iNumSamples + iPadLength);</div>
<div class="line"><a id="l00184" name="l00184"></a><span class="lineno">  184</span>        <a class="code hl_function" href="a00489.xhtml#abaadac98b1cad18b7b568852bc951696">CVector::alloc</a>(pfPadding, iPadLength);</div>
<div class="line"><a id="l00185" name="l00185"></a><span class="lineno">  185</span> </div>
<div class="line"><a id="l00186" name="l00186"></a><span class="lineno">  186</span>        <span class="keywordflow">for</span> (<span class="keyword">auto</span> i = 0; i &lt; iPadLength; i++)</div>
<div class="line"><a id="l00187" name="l00187"></a><span class="lineno">  187</span>            pfPadding[iPadLength - 1 - i] = 2 * pfIn[0] - pfIn[i + 1];</div>
<div class="line"><a id="l00188" name="l00188"></a><span class="lineno">  188</span> </div>
<div class="line"><a id="l00189" name="l00189"></a><span class="lineno">  189</span>        <span class="comment">// set initial state</span></div>
<div class="line"><a id="l00190" name="l00190"></a><span class="lineno">  190</span>        this-&gt;<a class="code hl_function" href="a00465.xhtml#a68eafbce2417e9c8e7934953e85199e7">setInitState_</a>(pfPadding[0]);</div>
<div class="line"><a id="l00191" name="l00191"></a><span class="lineno">  191</span> </div>
<div class="line"><a id="l00192" name="l00192"></a><span class="lineno">  192</span>        <span class="comment">// front padding (discard results)</span></div>
<div class="line"><a id="l00193" name="l00193"></a><span class="lineno">  193</span>        this-&gt;<a class="code hl_function" href="a00465.xhtml#a1c35f3511dcdc32517db3cea9c327ae8">process</a>(pfTmpBuff, pfPadding, iPadLength);</div>
<div class="line"><a id="l00194" name="l00194"></a><span class="lineno">  194</span>        </div>
<div class="line"><a id="l00195" name="l00195"></a><span class="lineno">  195</span>        <span class="comment">// forward path</span></div>
<div class="line"><a id="l00196" name="l00196"></a><span class="lineno">  196</span>        this-&gt;<a class="code hl_function" href="a00465.xhtml#a1c35f3511dcdc32517db3cea9c327ae8">process</a>(pfTmpBuff, pfIn, iNumSamples);</div>
<div class="line"><a id="l00197" name="l00197"></a><span class="lineno">  197</span>        </div>
<div class="line"><a id="l00198" name="l00198"></a><span class="lineno">  198</span>        <span class="comment">// back padding in forward path</span></div>
<div class="line"><a id="l00199" name="l00199"></a><span class="lineno">  199</span>        <span class="keywordflow">for</span> (<span class="keyword">auto</span> i = 0; i &lt; iPadLength; i++)</div>
<div class="line"><a id="l00200" name="l00200"></a><span class="lineno">  200</span>            pfPadding[i] = 2 * pfIn[iNumSamples - 1] - pfIn[iNumSamples - 2 - i];</div>
<div class="line"><a id="l00201" name="l00201"></a><span class="lineno">  201</span>        this-&gt;<a class="code hl_function" href="a00465.xhtml#a1c35f3511dcdc32517db3cea9c327ae8">process</a>(&amp;pfTmpBuff[iNumSamples], pfPadding, iPadLength);</div>
<div class="line"><a id="l00202" name="l00202"></a><span class="lineno">  202</span> </div>
<div class="line"><a id="l00203" name="l00203"></a><span class="lineno">  203</span>        <span class="comment">// set initial state</span></div>
<div class="line"><a id="l00204" name="l00204"></a><span class="lineno">  204</span>        this-&gt;<a class="code hl_function" href="a00465.xhtml#a68eafbce2417e9c8e7934953e85199e7">setInitState_</a>(pfTmpBuff[iNumSamples+iPadLength-1]);</div>
<div class="line"><a id="l00205" name="l00205"></a><span class="lineno">  205</span> </div>
<div class="line"><a id="l00206" name="l00206"></a><span class="lineno">  206</span>        <span class="comment">// padded backward path (discard results)</span></div>
<div class="line"><a id="l00207" name="l00207"></a><span class="lineno">  207</span>        <span class="keywordflow">for</span> (<span class="keyword">auto</span> i = iNumSamples + iPadLength - 1; i &gt;= iNumSamples; i--)</div>
<div class="line"><a id="l00208" name="l00208"></a><span class="lineno">  208</span>            this-&gt;<a class="code hl_function" href="a00465.xhtml#a1c35f3511dcdc32517db3cea9c327ae8">process</a>(pfOut, &amp;pfTmpBuff[i], 1);</div>
<div class="line"><a id="l00209" name="l00209"></a><span class="lineno">  209</span>        </div>
<div class="line"><a id="l00210" name="l00210"></a><span class="lineno">  210</span>        <span class="comment">// backward path</span></div>
<div class="line"><a id="l00211" name="l00211"></a><span class="lineno">  211</span>        <span class="keywordflow">for</span> (<span class="keyword">auto</span> i = iNumSamples - 1; i &gt;= 0; i--)</div>
<div class="line"><a id="l00212" name="l00212"></a><span class="lineno">  212</span>            this-&gt;<a class="code hl_function" href="a00465.xhtml#a1c35f3511dcdc32517db3cea9c327ae8">process</a>(&amp;pfOut[i], &amp;pfTmpBuff[i], 1);</div>
<div class="line"><a id="l00213" name="l00213"></a><span class="lineno">  213</span> </div>
<div class="line"><a id="l00214" name="l00214"></a><span class="lineno">  214</span>        <span class="comment">// reset filter but don&#39;t delete memory</span></div>
<div class="line"><a id="l00215" name="l00215"></a><span class="lineno">  215</span>        this-&gt;<a class="code hl_function" href="a00465.xhtml#a8d6a8f20ea178eda7352a89bf7a4d200">reset</a>(<span class="keyword">false</span>);</div>
<div class="line"><a id="l00216" name="l00216"></a><span class="lineno">  216</span> </div>
<div class="line"><a id="l00217" name="l00217"></a><span class="lineno">  217</span>        <span class="comment">// free memory</span></div>
<div class="line"><a id="l00218" name="l00218"></a><span class="lineno">  218</span>        <a class="code hl_function" href="a00489.xhtml#aa86bdb0c663d4d52f2765793756f8737">CVector::free</a>(pfTmpBuff);</div>
<div class="line"><a id="l00219" name="l00219"></a><span class="lineno">  219</span>        <a class="code hl_function" href="a00489.xhtml#aa86bdb0c663d4d52f2765793756f8737">CVector::free</a>(pfPadding);</div>
<div class="line"><a id="l00220" name="l00220"></a><span class="lineno">  220</span> </div>
<div class="line"><a id="l00221" name="l00221"></a><span class="lineno">  221</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00116.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><a id="l00222" name="l00222"></a><span class="lineno">  222</span>    }</div>
<div class="line"><a id="l00223" name="l00223"></a><span class="lineno">  223</span> </div>
<div class="line"><a id="l00224" name="l00224"></a><span class="lineno">  224</span><span class="keyword">private</span>:</div>
<div class="line"><a id="l00225" name="l00225"></a><span class="lineno"><a class="line" href="a00465.xhtml#afc3b70aa36740bc560377c7d43a358f2">  225</a></span>    <a class="code hl_function" href="a00465.xhtml#afc3b70aa36740bc560377c7d43a358f2">CFilter</a>(<span class="keyword">const</span> <a class="code hl_class" href="a00465.xhtml">CFilter</a>&amp; that);</div>
<div class="line"><a id="l00226" name="l00226"></a><span class="lineno"><a class="line" href="a00465.xhtml#ab8d1ef97269ec1b5408605731b009ae2">  226</a></span>    <a class="code hl_class" href="a00465.xhtml">CFilter</a>&amp; <a class="code hl_function" href="a00465.xhtml#ab8d1ef97269ec1b5408605731b009ae2">operator=</a>(<span class="keyword">const</span> <a class="code hl_class" href="a00465.xhtml">CFilter</a>&amp; c);</div>
<div class="line"><a id="l00227" name="l00227"></a><span class="lineno">  227</span> </div>
<div class="line"><a id="l00228" name="l00228"></a><span class="lineno"><a class="line" href="a00465.xhtml#af77365faa392bc427be2607834ab39bc">  228</a></span>    <span class="keyword">enum</span> <a class="code hl_enumeration" href="a00465.xhtml#af77365faa392bc427be2607834ab39bc">FilterCoeffs_t</a></div>
<div class="line"><a id="l00229" name="l00229"></a><span class="lineno">  229</span>    {</div>
<div class="line"><a id="l00230" name="l00230"></a><span class="lineno"><a class="line" href="a00465.xhtml#af77365faa392bc427be2607834ab39bca29cc20553a29d08db9ce9d3995f134e8">  230</a></span>        <a class="code hl_enumvalue" href="a00465.xhtml#af77365faa392bc427be2607834ab39bca29cc20553a29d08db9ce9d3995f134e8">kFir</a>,</div>
<div class="line"><a id="l00231" name="l00231"></a><span class="lineno"><a class="line" href="a00465.xhtml#af77365faa392bc427be2607834ab39bca61b3a34d4b72be6e92f0d40eee575d54">  231</a></span>        <a class="code hl_enumvalue" href="a00465.xhtml#af77365faa392bc427be2607834ab39bca61b3a34d4b72be6e92f0d40eee575d54">kIir</a>,</div>
<div class="line"><a id="l00232" name="l00232"></a><span class="lineno">  232</span> </div>
<div class="line"><a id="l00233" name="l00233"></a><span class="lineno">  233</span>        <a class="code hl_enumvalue" href="a00465.xhtml#af77365faa392bc427be2607834ab39bca4e70b0db4e767b7ab3dc858a94bcc2f4">kNumFilterDims</a></div>
<div class="line"><a id="l00234" name="l00234"></a><span class="lineno"><a class="line" href="a00465.xhtml#af77365faa392bc427be2607834ab39bca4e70b0db4e767b7ab3dc858a94bcc2f4">  234</a></span>    };</div>
<div class="line"><a id="l00235" name="l00235"></a><span class="lineno">  235</span> </div>
<div class="line"><a id="l00236" name="l00236"></a><span class="lineno">  236</span>    <span class="comment">// see sadovsky, bartusek, optimisation of the transient response of a digital filter, radioengineering (9) no 2, 2000</span></div>
<div class="line"><a id="l00237" name="l00237"></a><span class="lineno"><a class="line" href="a00465.xhtml#a68eafbce2417e9c8e7934953e85199e7">  237</a></span>    <span class="keywordtype">void</span> <a class="code hl_function" href="a00465.xhtml#a68eafbce2417e9c8e7934953e85199e7">setInitState_</a>(<span class="keywordtype">float</span> fWeight)</div>
<div class="line"><a id="l00238" name="l00238"></a><span class="lineno">  238</span>    {</div>
<div class="line"><a id="l00239" name="l00239"></a><span class="lineno">  239</span>        <span class="keywordtype">float</span>** ppfA = 0;</div>
<div class="line"><a id="l00240" name="l00240"></a><span class="lineno">  240</span>        <span class="keywordtype">float</span>* pfB = 0;</div>
<div class="line"><a id="l00241" name="l00241"></a><span class="lineno">  241</span>        <span class="keywordtype">float</span>* pfZi = 0;</div>
<div class="line"><a id="l00242" name="l00242"></a><span class="lineno">  242</span> </div>
<div class="line"><a id="l00243" name="l00243"></a><span class="lineno">  243</span>        <span class="keywordtype">int</span> iLengthOfCoeffBuffers = <a class="code hl_variable" href="a00465.xhtml#aed0a614dce6816b55f0b3f17bdf991e5">m_iNumFilterCoeffs</a> - 1; </div>
<div class="line"><a id="l00244" name="l00244"></a><span class="lineno">  244</span> </div>
<div class="line"><a id="l00245" name="l00245"></a><span class="lineno">  245</span>        <a class="code hl_function" href="a00489.xhtml#abaadac98b1cad18b7b568852bc951696">CVector::alloc</a>(pfB, iLengthOfCoeffBuffers);</div>
<div class="line"><a id="l00246" name="l00246"></a><span class="lineno">  246</span>        <a class="code hl_function" href="a00489.xhtml#abaadac98b1cad18b7b568852bc951696">CVector::alloc</a>(pfZi, iLengthOfCoeffBuffers);</div>
<div class="line"><a id="l00247" name="l00247"></a><span class="lineno">  247</span>        <a class="code hl_function" href="a00473.xhtml#a6501b78d76c912d49eee88c8f7242923">CMatrix::alloc</a>(ppfA, iLengthOfCoeffBuffers, iLengthOfCoeffBuffers);</div>
<div class="line"><a id="l00248" name="l00248"></a><span class="lineno">  248</span> </div>
<div class="line"><a id="l00249" name="l00249"></a><span class="lineno">  249</span>        <span class="keywordflow">for</span> (<span class="keyword">auto</span> i = 1; i &lt; <a class="code hl_variable" href="a00465.xhtml#aed0a614dce6816b55f0b3f17bdf991e5">m_iNumFilterCoeffs</a>; i++)</div>
<div class="line"><a id="l00250" name="l00250"></a><span class="lineno">  250</span>            pfB[i - 1] = <a class="code hl_variable" href="a00465.xhtml#a4e31c29ccb288a7227e65e2b925deb02">m_aptCoeff</a>[<a class="code hl_enumvalue" href="a00465.xhtml#af77365faa392bc427be2607834ab39bca29cc20553a29d08db9ce9d3995f134e8">kFir</a>][i] - <a class="code hl_variable" href="a00465.xhtml#a4e31c29ccb288a7227e65e2b925deb02">m_aptCoeff</a>[<a class="code hl_enumvalue" href="a00465.xhtml#af77365faa392bc427be2607834ab39bca29cc20553a29d08db9ce9d3995f134e8">kFir</a>][0] * <a class="code hl_variable" href="a00465.xhtml#a4e31c29ccb288a7227e65e2b925deb02">m_aptCoeff</a>[<a class="code hl_enumvalue" href="a00465.xhtml#af77365faa392bc427be2607834ab39bca61b3a34d4b72be6e92f0d40eee575d54">kIir</a>][i];</div>
<div class="line"><a id="l00251" name="l00251"></a><span class="lineno">  251</span> </div>
<div class="line"><a id="l00252" name="l00252"></a><span class="lineno">  252</span>        <span class="keywordflow">for</span> (<span class="keyword">auto</span> m = 0; m &lt; iLengthOfCoeffBuffers; m++)</div>
<div class="line"><a id="l00253" name="l00253"></a><span class="lineno">  253</span>        {</div>
<div class="line"><a id="l00254" name="l00254"></a><span class="lineno">  254</span>            ppfA[m][m] = 1;</div>
<div class="line"><a id="l00255" name="l00255"></a><span class="lineno">  255</span>            ppfA[m][0] += <a class="code hl_variable" href="a00465.xhtml#a4e31c29ccb288a7227e65e2b925deb02">m_aptCoeff</a>[<a class="code hl_enumvalue" href="a00465.xhtml#af77365faa392bc427be2607834ab39bca61b3a34d4b72be6e92f0d40eee575d54">kIir</a>][m + 1];</div>
<div class="line"><a id="l00256" name="l00256"></a><span class="lineno">  256</span>            <span class="keywordflow">if</span> (m &lt; iLengthOfCoeffBuffers-1)</div>
<div class="line"><a id="l00257" name="l00257"></a><span class="lineno">  257</span>                ppfA[m][m + 1] = -1;</div>
<div class="line"><a id="l00258" name="l00258"></a><span class="lineno">  258</span>        }</div>
<div class="line"><a id="l00259" name="l00259"></a><span class="lineno">  259</span> </div>
<div class="line"><a id="l00260" name="l00260"></a><span class="lineno">  260</span>        <span class="comment">// solve linear equation</span></div>
<div class="line"><a id="l00261" name="l00261"></a><span class="lineno">  261</span>        <a class="code hl_function" href="a00473.xhtml#a37585f57926ea2921734907bacc6cce8">CMatrix::inv_I</a>(ppfA, iLengthOfCoeffBuffers, iLengthOfCoeffBuffers);</div>
<div class="line"><a id="l00262" name="l00262"></a><span class="lineno">  262</span>        <a class="code hl_function" href="a00473.xhtml#ab0ca8e552db389f6323e1c3d26e59902">CMatrix::mulMatColVec</a>(pfZi, ppfA, pfB, iLengthOfCoeffBuffers, iLengthOfCoeffBuffers);</div>
<div class="line"><a id="l00263" name="l00263"></a><span class="lineno">  263</span> </div>
<div class="line"><a id="l00264" name="l00264"></a><span class="lineno">  264</span>        <span class="comment">// set internal state</span></div>
<div class="line"><a id="l00265" name="l00265"></a><span class="lineno">  265</span>        <span class="keywordflow">for</span> (<span class="keyword">auto</span> i = 0; i &lt; iLengthOfCoeffBuffers; i++)</div>
<div class="line"><a id="l00266" name="l00266"></a><span class="lineno">  266</span>            <a class="code hl_variable" href="a00465.xhtml#adc33d7fd0caf47e30d1d4e3634819bac">m_ptProcBuff</a>[i] = fWeight * pfZi[i];</div>
<div class="line"><a id="l00267" name="l00267"></a><span class="lineno">  267</span> </div>
<div class="line"><a id="l00268" name="l00268"></a><span class="lineno">  268</span>        <span class="comment">// clean up</span></div>
<div class="line"><a id="l00269" name="l00269"></a><span class="lineno">  269</span>        <a class="code hl_function" href="a00473.xhtml#a591097c6b1935c4d6273b3445f8f552b">CMatrix::free</a>(ppfA, iLengthOfCoeffBuffers);</div>
<div class="line"><a id="l00270" name="l00270"></a><span class="lineno">  270</span>        <a class="code hl_function" href="a00489.xhtml#aa86bdb0c663d4d52f2765793756f8737">CVector::free</a>(pfB);</div>
<div class="line"><a id="l00271" name="l00271"></a><span class="lineno">  271</span>        <a class="code hl_function" href="a00489.xhtml#aa86bdb0c663d4d52f2765793756f8737">CVector::free</a>(pfZi);</div>
<div class="line"><a id="l00272" name="l00272"></a><span class="lineno">  272</span>    }</div>
<div class="line"><a id="l00273" name="l00273"></a><span class="lineno">  273</span> </div>
<div class="line"><a id="l00274" name="l00274"></a><span class="lineno"><a class="line" href="a00465.xhtml#ac44bd773d4652641a423b5291f13d337">  274</a></span>    <a class="code hl_class" href="a00477.xhtml">CRingBuffer&lt;T&gt;</a>* <a class="code hl_variable" href="a00465.xhtml#ac44bd773d4652641a423b5291f13d337">m_pCFilterBuff</a> = 0; <span class="comment">//!&lt; internal ring buffer for filter (only used for direct form II implementation CFilter::processDFII)</span></div>
<div class="line"><a id="l00275" name="l00275"></a><span class="lineno">  275</span>    </div>
<div class="line"><a id="l00276" name="l00276"></a><span class="lineno"><a class="line" href="a00465.xhtml#a4e31c29ccb288a7227e65e2b925deb02">  276</a></span>    T* <a class="code hl_variable" href="a00465.xhtml#a4e31c29ccb288a7227e65e2b925deb02">m_aptCoeff</a>[<a class="code hl_enumvalue" href="a00465.xhtml#af77365faa392bc427be2607834ab39bca4e70b0db4e767b7ab3dc858a94bcc2f4">kNumFilterDims</a>] = { 0,0 }; <span class="comment">//!&lt; filter coefficients</span></div>
<div class="line"><a id="l00277" name="l00277"></a><span class="lineno">  277</span>    </div>
<div class="line"><a id="l00278" name="l00278"></a><span class="lineno"><a class="line" href="a00465.xhtml#adc33d7fd0caf47e30d1d4e3634819bac">  278</a></span>    T *<a class="code hl_variable" href="a00465.xhtml#adc33d7fd0caf47e30d1d4e3634819bac">m_ptProcBuff</a> = 0; <span class="comment">//!&lt; temp buffer for processing</span></div>
<div class="line"><a id="l00279" name="l00279"></a><span class="lineno">  279</span> </div>
<div class="line"><a id="l00280" name="l00280"></a><span class="lineno"><a class="line" href="a00465.xhtml#aed0a614dce6816b55f0b3f17bdf991e5">  280</a></span>    <span class="keywordtype">int</span> <a class="code hl_variable" href="a00465.xhtml#aed0a614dce6816b55f0b3f17bdf991e5">m_iNumFilterCoeffs</a> = 0; <span class="comment">//!&lt; number of filter coefficients</span></div>
<div class="line"><a id="l00281" name="l00281"></a><span class="lineno">  281</span> </div>
<div class="line"><a id="l00282" name="l00282"></a><span class="lineno"><a class="line" href="a00465.xhtml#a12247cfbb2d2bd19831e8d23f155d117">  282</a></span>    <span class="keywordtype">bool</span> <a class="code hl_variable" href="a00465.xhtml#a12247cfbb2d2bd19831e8d23f155d117">m_bisInitialized</a> = <span class="keyword">false</span>; <span class="comment">//!&lt; true if initialized</span></div>
<div class="line"><a id="l00283" name="l00283"></a><span class="lineno">  283</span>};</div>
<div class="line"><a id="l00284" name="l00284"></a><span class="lineno">  284</span><span class="comment"></span> </div>
<div class="line"><a id="l00285" name="l00285"></a><span class="lineno">  285</span><span class="comment">/*! \brief class providing a generic filter implementation</span></div>
<div class="line"><a id="l00286" name="l00286"></a><span class="lineno">  286</span><span class="comment">* implementation inspired by src from https://exstrom.com/journal/sigproc/dsigproc.html</span></div>
<div class="line"><a id="l00287" name="l00287"></a><span class="lineno">  287</span><span class="comment">*/</span></div>
<div class="line"><a id="l00288" name="l00288"></a><span class="lineno"><a class="line" href="a00469.xhtml">  288</a></span><span class="keyword">class </span><a class="code hl_class" href="a00469.xhtml">CButterLp</a></div>
<div class="line"><a id="l00289" name="l00289"></a><span class="lineno">  289</span>{</div>
<div class="line"><a id="l00290" name="l00290"></a><span class="lineno">  290</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00291" name="l00291"></a><span class="lineno">  291</span><span class="comment"></span> </div>
<div class="line"><a id="l00292" name="l00292"></a><span class="lineno">  292</span><span class="comment">    /*! computes buttworth lowpass coefficients</span></div>
<div class="line"><a id="l00293" name="l00293"></a><span class="lineno">  293</span><span class="comment">     \param pfB output signal (to be written, length iOrder+1, allocated by user)</span></div>
<div class="line"><a id="l00294" name="l00294"></a><span class="lineno">  294</span><span class="comment">     \param pfA input signal (to be written, length iOrder+1, allocated by user)</span></div>
<div class="line"><a id="l00295" name="l00295"></a><span class="lineno">  295</span><span class="comment">     \param iOrder number of poles</span></div>
<div class="line"><a id="l00296" name="l00296"></a><span class="lineno">  296</span><span class="comment">     \param fCutOff normed cutoff between 0 and 1 (fs/2)</span></div>
<div class="line"><a id="l00297" name="l00297"></a><span class="lineno">  297</span><span class="comment">     \return Error_t</span></div>
<div class="line"><a id="l00298" name="l00298"></a><span class="lineno">  298</span><span class="comment">     */</span></div>
<div class="line"><a id="l00299" name="l00299"></a><span class="lineno">  299</span>    <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00300" name="l00300"></a><span class="lineno"><a class="line" href="a00469.xhtml#a3878460603a6e6e1a64de6021b2bb73e">  300</a></span>    <span class="keyword">static</span> <a class="code hl_enumeration" href="a00116.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> <a class="code hl_function" href="a00469.xhtml#a3878460603a6e6e1a64de6021b2bb73e">calcCoeffs</a>(T* pfB, T* pfA, <span class="keywordtype">int</span> iOrder, T fCutOff)</div>
<div class="line"><a id="l00301" name="l00301"></a><span class="lineno">  301</span>    {</div>
<div class="line"><a id="l00302" name="l00302"></a><span class="lineno">  302</span>        <span class="keyword">const</span> <span class="keywordtype">long</span> <span class="keywordtype">long</span> iTmpOrder = <span class="keyword">static_cast&lt;</span><span class="keywordtype">long</span> <span class="keywordtype">long</span><span class="keyword">&gt;</span>(iOrder); <span class="comment">// silly compiler warnings get annoying</span></div>
<div class="line"><a id="l00303" name="l00303"></a><span class="lineno">  303</span>        <span class="keywordtype">float</span>* pfTmpA = 0;</div>
<div class="line"><a id="l00304" name="l00304"></a><span class="lineno">  304</span>        <a class="code hl_function" href="a00489.xhtml#abaadac98b1cad18b7b568852bc951696">CVector::alloc</a>(pfTmpA, 2 * iTmpOrder);</div>
<div class="line"><a id="l00305" name="l00305"></a><span class="lineno">  305</span>        <a class="code hl_function" href="a00489.xhtml#a6dbb3f9f480568b60f7fe50090d20003">CVector::setZero</a>(pfB, iTmpOrder + 1);</div>
<div class="line"><a id="l00306" name="l00306"></a><span class="lineno">  306</span>        <a class="code hl_function" href="a00489.xhtml#a6dbb3f9f480568b60f7fe50090d20003">CVector::setZero</a>(pfTmpA, 2 * iTmpOrder);</div>
<div class="line"><a id="l00307" name="l00307"></a><span class="lineno">  307</span> </div>
<div class="line"><a id="l00308" name="l00308"></a><span class="lineno">  308</span>        <a class="code hl_function" href="a00469.xhtml#a9c08c0b6f891bb37fb4230088f94b0a0">calcB</a>(pfB, iOrder, fCutOff);</div>
<div class="line"><a id="l00309" name="l00309"></a><span class="lineno">  309</span>        <a class="code hl_function" href="a00469.xhtml#a4a70bdde7f075d2591fd03c52c16145c">calcA</a>(pfTmpA, iOrder, fCutOff);</div>
<div class="line"><a id="l00310" name="l00310"></a><span class="lineno">  310</span>        <a class="code hl_function" href="a00489.xhtml#ad7c5cba73e439adac77778f61c9418f0">CVector::copy</a>(pfA, pfTmpA, iTmpOrder + 1);</div>
<div class="line"><a id="l00311" name="l00311"></a><span class="lineno">  311</span> </div>
<div class="line"><a id="l00312" name="l00312"></a><span class="lineno">  312</span>        <a class="code hl_function" href="a00489.xhtml#aa86bdb0c663d4d52f2765793756f8737">CVector::free</a>(pfTmpA);</div>
<div class="line"><a id="l00313" name="l00313"></a><span class="lineno">  313</span> </div>
<div class="line"><a id="l00314" name="l00314"></a><span class="lineno">  314</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00116.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><a id="l00315" name="l00315"></a><span class="lineno">  315</span>    }</div>
<div class="line"><a id="l00316" name="l00316"></a><span class="lineno">  316</span><span class="keyword">private</span>:</div>
<div class="line"><a id="l00317" name="l00317"></a><span class="lineno">  317</span> </div>
<div class="line"><a id="l00318" name="l00318"></a><span class="lineno">  318</span>    <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00319" name="l00319"></a><span class="lineno"><a class="line" href="a00469.xhtml#a9c08c0b6f891bb37fb4230088f94b0a0">  319</a></span>    <span class="keyword">static</span> <a class="code hl_enumeration" href="a00116.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> <a class="code hl_function" href="a00469.xhtml#a9c08c0b6f891bb37fb4230088f94b0a0">calcB</a>(T* pfB, <span class="keywordtype">int</span> iOrder, T fCutOff)</div>
<div class="line"><a id="l00320" name="l00320"></a><span class="lineno">  320</span>    {</div>
<div class="line"><a id="l00321" name="l00321"></a><span class="lineno">  321</span>        pfB[0] = 1;</div>
<div class="line"><a id="l00322" name="l00322"></a><span class="lineno">  322</span>        pfB[1] = <span class="keyword">static_cast&lt;</span>T<span class="keyword">&gt;</span>(iOrder);</div>
<div class="line"><a id="l00323" name="l00323"></a><span class="lineno">  323</span>        <span class="keywordflow">for</span> (<span class="keyword">auto</span> j = 2; j &lt;= iOrder / 2; ++j)</div>
<div class="line"><a id="l00324" name="l00324"></a><span class="lineno">  324</span>        {</div>
<div class="line"><a id="l00325" name="l00325"></a><span class="lineno">  325</span>            pfB[j] = (iOrder - j + 1) * pfB[j - 1] / j;</div>
<div class="line"><a id="l00326" name="l00326"></a><span class="lineno">  326</span>            pfB[iOrder - j] = pfB[j];</div>
<div class="line"><a id="l00327" name="l00327"></a><span class="lineno">  327</span>        }</div>
<div class="line"><a id="l00328" name="l00328"></a><span class="lineno">  328</span>        pfB[iOrder - 1] = <span class="keyword">static_cast&lt;</span>T<span class="keyword">&gt;</span>(iOrder);</div>
<div class="line"><a id="l00329" name="l00329"></a><span class="lineno">  329</span>        pfB[iOrder] = 1;</div>
<div class="line"><a id="l00330" name="l00330"></a><span class="lineno">  330</span> </div>
<div class="line"><a id="l00331" name="l00331"></a><span class="lineno">  331</span>        T fScale = <a class="code hl_function" href="a00469.xhtml#a93b25bb8ef71fc7221ae53efe9212d67">calcScale</a>(iOrder, fCutOff);</div>
<div class="line"><a id="l00332" name="l00332"></a><span class="lineno">  332</span> </div>
<div class="line"><a id="l00333" name="l00333"></a><span class="lineno">  333</span>        <span class="keywordflow">for</span> (<span class="keyword">auto</span> j = 0; j &lt; iOrder + 1; j++)</div>
<div class="line"><a id="l00334" name="l00334"></a><span class="lineno">  334</span>            pfB[j] *= fScale;</div>
<div class="line"><a id="l00335" name="l00335"></a><span class="lineno">  335</span> </div>
<div class="line"><a id="l00336" name="l00336"></a><span class="lineno">  336</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00116.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><a id="l00337" name="l00337"></a><span class="lineno">  337</span>    }</div>
<div class="line"><a id="l00338" name="l00338"></a><span class="lineno">  338</span> </div>
<div class="line"><a id="l00339" name="l00339"></a><span class="lineno">  339</span>    <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00340" name="l00340"></a><span class="lineno"><a class="line" href="a00469.xhtml#a4a70bdde7f075d2591fd03c52c16145c">  340</a></span>    <span class="keyword">static</span> <a class="code hl_enumeration" href="a00116.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> <a class="code hl_function" href="a00469.xhtml#a4a70bdde7f075d2591fd03c52c16145c">calcA</a>(T* pfA, <span class="keywordtype">int</span> iOrder, T fCutOff)</div>
<div class="line"><a id="l00341" name="l00341"></a><span class="lineno">  341</span>    {</div>
<div class="line"><a id="l00342" name="l00342"></a><span class="lineno">  342</span>        T* pfCoeff = 0;     <span class="comment">// binomial coefficients</span></div>
<div class="line"><a id="l00343" name="l00343"></a><span class="lineno">  343</span> </div>
<div class="line"><a id="l00344" name="l00344"></a><span class="lineno">  344</span>        CVector::alloc&lt;T&gt;(pfCoeff, <span class="keyword">static_cast&lt;</span><span class="keywordtype">long</span> <span class="keywordtype">long</span><span class="keyword">&gt;</span>(2) * iOrder);</div>
<div class="line"><a id="l00345" name="l00345"></a><span class="lineno">  345</span> </div>
<div class="line"><a id="l00346" name="l00346"></a><span class="lineno">  346</span>        <span class="keywordflow">for</span> (<span class="keyword">auto</span> j = 0; j &lt; iOrder; j++)</div>
<div class="line"><a id="l00347" name="l00347"></a><span class="lineno">  347</span>        {</div>
<div class="line"><a id="l00348" name="l00348"></a><span class="lineno">  348</span>            T fArg = <span class="keyword">static_cast&lt;</span>T<span class="keyword">&gt;</span>(<a class="code hl_define" href="a00254.xhtml#ae71449b1cc6e6250b91f539153a7a0d3">M_PI</a> * (2. * j + 1) / (2. * iOrder));</div>
<div class="line"><a id="l00349" name="l00349"></a><span class="lineno">  349</span>            T fNorm = <span class="keyword">static_cast&lt;</span>T<span class="keyword">&gt;</span>(1 + std::sin(<a class="code hl_define" href="a00254.xhtml#ae71449b1cc6e6250b91f539153a7a0d3">M_PI</a> * fCutOff) * std::sin(fArg));</div>
<div class="line"><a id="l00350" name="l00350"></a><span class="lineno">  350</span>            pfCoeff[2 * j] = <span class="keyword">static_cast&lt;</span>T<span class="keyword">&gt;</span>(-std::cos(<a class="code hl_define" href="a00254.xhtml#ae71449b1cc6e6250b91f539153a7a0d3">M_PI</a> * fCutOff) / fNorm);</div>
<div class="line"><a id="l00351" name="l00351"></a><span class="lineno">  351</span>            pfCoeff[2 * j + 1] = <span class="keyword">static_cast&lt;</span>T<span class="keyword">&gt;</span>(-std::sin(<a class="code hl_define" href="a00254.xhtml#ae71449b1cc6e6250b91f539153a7a0d3">M_PI</a> * fCutOff) * std::cos(fArg) / fNorm);</div>
<div class="line"><a id="l00352" name="l00352"></a><span class="lineno">  352</span>        }</div>
<div class="line"><a id="l00353" name="l00353"></a><span class="lineno">  353</span> </div>
<div class="line"><a id="l00354" name="l00354"></a><span class="lineno">  354</span>        <a class="code hl_function" href="a00469.xhtml#ab4432f6b6d2f1bad850a13a0573615c4">multBinomial</a>(pfA, pfCoeff, iOrder); </div>
<div class="line"><a id="l00355" name="l00355"></a><span class="lineno">  355</span> </div>
<div class="line"><a id="l00356" name="l00356"></a><span class="lineno">  356</span>        pfA[1] = pfA[0];</div>
<div class="line"><a id="l00357" name="l00357"></a><span class="lineno">  357</span>        pfA[0] = 1;</div>
<div class="line"><a id="l00358" name="l00358"></a><span class="lineno">  358</span>            <span class="keywordflow">for</span> (<span class="keyword">auto</span> j = 3; j &lt;= iOrder; j++)</div>
<div class="line"><a id="l00359" name="l00359"></a><span class="lineno">  359</span>            pfA[j] = pfA[2 * j - 2];</div>
<div class="line"><a id="l00360" name="l00360"></a><span class="lineno">  360</span> </div>
<div class="line"><a id="l00361" name="l00361"></a><span class="lineno">  361</span>        CVector::free&lt;T&gt;(pfCoeff);</div>
<div class="line"><a id="l00362" name="l00362"></a><span class="lineno">  362</span> </div>
<div class="line"><a id="l00363" name="l00363"></a><span class="lineno">  363</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00116.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><a id="l00364" name="l00364"></a><span class="lineno">  364</span>    }</div>
<div class="line"><a id="l00365" name="l00365"></a><span class="lineno">  365</span> </div>
<div class="line"><a id="l00366" name="l00366"></a><span class="lineno">  366</span>    <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00367" name="l00367"></a><span class="lineno"><a class="line" href="a00469.xhtml#a93b25bb8ef71fc7221ae53efe9212d67">  367</a></span>    <span class="keyword">static</span> T <a class="code hl_function" href="a00469.xhtml#a93b25bb8ef71fc7221ae53efe9212d67">calcScale</a>(<span class="keywordtype">int</span> iOrder, T fCutOff)</div>
<div class="line"><a id="l00368" name="l00368"></a><span class="lineno">  368</span>    {</div>
<div class="line"><a id="l00369" name="l00369"></a><span class="lineno">  369</span>        T fPhase = <span class="keyword">static_cast&lt;</span>T<span class="keyword">&gt;</span>(<a class="code hl_define" href="a00254.xhtml#ae71449b1cc6e6250b91f539153a7a0d3">M_PI</a> / (2. * iOrder));</div>
<div class="line"><a id="l00370" name="l00370"></a><span class="lineno">  370</span>        T fScale = 1;</div>
<div class="line"><a id="l00371" name="l00371"></a><span class="lineno">  371</span> </div>
<div class="line"><a id="l00372" name="l00372"></a><span class="lineno">  372</span>        <span class="keywordflow">for</span> (<span class="keyword">auto</span> j = 0; j &lt; iOrder / 2; ++j)</div>
<div class="line"><a id="l00373" name="l00373"></a><span class="lineno">  373</span>            fScale *= <span class="keyword">static_cast&lt;</span>T<span class="keyword">&gt;</span>(1 + std::sin(<a class="code hl_define" href="a00254.xhtml#ae71449b1cc6e6250b91f539153a7a0d3">M_PI</a> * fCutOff) * std::sin((2 * j + 1) * fPhase));</div>
<div class="line"><a id="l00374" name="l00374"></a><span class="lineno">  374</span> </div>
<div class="line"><a id="l00375" name="l00375"></a><span class="lineno">  375</span>        <span class="keywordflow">if</span> (iOrder % 2)</div>
<div class="line"><a id="l00376" name="l00376"></a><span class="lineno">  376</span>            fScale *= <span class="keyword">static_cast&lt;</span>T<span class="keyword">&gt;</span>(std::sin(<a class="code hl_define" href="a00254.xhtml#ae71449b1cc6e6250b91f539153a7a0d3">M_PI</a> * fCutOff / 2) + std::cos(<a class="code hl_define" href="a00254.xhtml#ae71449b1cc6e6250b91f539153a7a0d3">M_PI</a> * fCutOff / 2));</div>
<div class="line"><a id="l00377" name="l00377"></a><span class="lineno">  377</span>        fScale = <span class="keyword">static_cast&lt;</span>T<span class="keyword">&gt;</span>(std::pow(std::sin(<a class="code hl_define" href="a00254.xhtml#ae71449b1cc6e6250b91f539153a7a0d3">M_PI</a> * fCutOff / 2), iOrder) / fScale);</div>
<div class="line"><a id="l00378" name="l00378"></a><span class="lineno">  378</span> </div>
<div class="line"><a id="l00379" name="l00379"></a><span class="lineno">  379</span>        <span class="keywordflow">return</span> fScale;</div>
<div class="line"><a id="l00380" name="l00380"></a><span class="lineno">  380</span>    }</div>
<div class="line"><a id="l00381" name="l00381"></a><span class="lineno">  381</span> </div>
<div class="line"><a id="l00382" name="l00382"></a><span class="lineno">  382</span>    <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00383" name="l00383"></a><span class="lineno"><a class="line" href="a00469.xhtml#ab4432f6b6d2f1bad850a13a0573615c4">  383</a></span>    <span class="keyword">static</span> <a class="code hl_enumeration" href="a00116.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> <a class="code hl_function" href="a00469.xhtml#ab4432f6b6d2f1bad850a13a0573615c4">multBinomial</a>(T* pfOut, <span class="keyword">const</span> T* pfIn, <span class="keywordtype">int</span> iOrder)</div>
<div class="line"><a id="l00384" name="l00384"></a><span class="lineno">  384</span>    {</div>
<div class="line"><a id="l00385" name="l00385"></a><span class="lineno">  385</span>        <span class="keywordflow">for</span> (<span class="keyword">auto</span> i = 0; i &lt; iOrder; i++)</div>
<div class="line"><a id="l00386" name="l00386"></a><span class="lineno">  386</span>        {</div>
<div class="line"><a id="l00387" name="l00387"></a><span class="lineno">  387</span>            <span class="keywordflow">for</span> (<span class="keyword">auto</span> j = i; j &gt; 0; j--)</div>
<div class="line"><a id="l00388" name="l00388"></a><span class="lineno">  388</span>            {</div>
<div class="line"><a id="l00389" name="l00389"></a><span class="lineno">  389</span>                pfOut[2 * j] += pfIn[2 * i] * pfOut[2 * (j - 1)] - pfIn[2 * i + 1] * pfOut[2 * (j - 1) + 1];</div>
<div class="line"><a id="l00390" name="l00390"></a><span class="lineno">  390</span>                pfOut[2 * j + 1] += pfIn[2 * i] * pfOut[2 * (j - 1) + 1] + pfIn[2 * i + 1] * pfOut[2 * (j - 1)];</div>
<div class="line"><a id="l00391" name="l00391"></a><span class="lineno">  391</span>            }</div>
<div class="line"><a id="l00392" name="l00392"></a><span class="lineno">  392</span>            pfOut[0] += pfIn[2 * i];</div>
<div class="line"><a id="l00393" name="l00393"></a><span class="lineno">  393</span>            pfOut[1] += pfIn[2 * i + 1];</div>
<div class="line"><a id="l00394" name="l00394"></a><span class="lineno">  394</span>        }</div>
<div class="line"><a id="l00395" name="l00395"></a><span class="lineno">  395</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00116.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><a id="l00396" name="l00396"></a><span class="lineno">  396</span>    }</div>
<div class="line"><a id="l00397" name="l00397"></a><span class="lineno">  397</span>};</div>
<div class="line"><a id="l00398" name="l00398"></a><span class="lineno">  398</span> </div>
<div class="line"><a id="l00399" name="l00399"></a><span class="lineno">  399</span> </div>
<div class="line"><a id="l00400" name="l00400"></a><span class="lineno">  400</span><span class="preprocessor">#endif </span><span class="comment">// #if !defined(__ACA_Filter_HEADER_INCLUDED__)</span></div>
<div class="line"><a id="l00401" name="l00401"></a><span class="lineno">  401</span> </div>
<div class="line"><a id="l00402" name="l00402"></a><span class="lineno">  402</span> </div>
<div class="line"><a id="l00403" name="l00403"></a><span class="lineno">  403</span> </div>
<div class="ttc" id="aa00116_xhtml"><div class="ttname"><a href="a00116.xhtml">ErrorDef.h</a></div></div>
<div class="ttc" id="aa00116_xhtml_a4e8c0d09726859e3d3369c0da5a1aa7f"><div class="ttname"><a href="a00116.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a></div><div class="ttdeci">Error_t</div><div class="ttdef"><b>Definition:</b> <a href="a00116_source.xhtml#l00004">ErrorDef.h:5</a></div></div>
<div class="ttc" id="aa00116_xhtml_a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248"><div class="ttname"><a href="a00116.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248">Error_t::kFunctionInvalidArgsError</a></div><div class="ttdeci">@ kFunctionInvalidArgsError</div></div>
<div class="ttc" id="aa00116_xhtml_a4e8c0d09726859e3d3369c0da5a1aa7fad7652bf47cff43c21f12cb7df4ca66ec"><div class="ttname"><a href="a00116.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fad7652bf47cff43c21f12cb7df4ca66ec">Error_t::kFunctionIllegalCallError</a></div><div class="ttdeci">@ kFunctionIllegalCallError</div></div>
<div class="ttc" id="aa00116_xhtml_a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b"><div class="ttname"><a href="a00116.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a></div><div class="ttdeci">@ kNoError</div></div>
<div class="ttc" id="aa00146_xhtml"><div class="ttname"><a href="a00146.xhtml">Matrix.h</a></div></div>
<div class="ttc" id="aa00152_xhtml"><div class="ttname"><a href="a00152.xhtml">Vector.h</a></div></div>
<div class="ttc" id="aa00161_xhtml"><div class="ttname"><a href="a00161.xhtml">RingBuffer.h</a></div></div>
<div class="ttc" id="aa00254_xhtml_ae71449b1cc6e6250b91f539153a7a0d3"><div class="ttname"><a href="a00254.xhtml#ae71449b1cc6e6250b91f539153a7a0d3">M_PI</a></div><div class="ttdeci">#define M_PI</div><div class="ttdef"><b>Definition:</b> <a href="a00254_source.xhtml#l00018">_sndlib.h:18</a></div></div>
<div class="ttc" id="aa00465_xhtml"><div class="ttname"><a href="a00465.xhtml">CFilter</a></div><div class="ttdoc">class providing a generic filter implementation</div><div class="ttdef"><b>Definition:</b> <a href="a00149_source.xhtml#l00015">Filter.h:16</a></div></div>
<div class="ttc" id="aa00465_xhtml_a04bf94ff97e5e270210954864025ea06"><div class="ttname"><a href="a00465.xhtml#a04bf94ff97e5e270210954864025ea06">CFilter::filtfilt</a></div><div class="ttdeci">Error_t filtfilt(T *pfOut, const T *pfIn, long long iNumSamples)</div><div class="ttdef"><b>Definition:</b> <a href="a00149_source.xhtml#l00165">Filter.h:165</a></div></div>
<div class="ttc" id="aa00465_xhtml_a04c3fba6b847217b8689a7cac54d5b86"><div class="ttname"><a href="a00465.xhtml#a04c3fba6b847217b8689a7cac54d5b86">CFilter::CFilter</a></div><div class="ttdeci">CFilter()</div><div class="ttdef"><b>Definition:</b> <a href="a00149_source.xhtml#l00019">Filter.h:19</a></div></div>
<div class="ttc" id="aa00465_xhtml_a12247cfbb2d2bd19831e8d23f155d117"><div class="ttname"><a href="a00465.xhtml#a12247cfbb2d2bd19831e8d23f155d117">CFilter::m_bisInitialized</a></div><div class="ttdeci">bool m_bisInitialized</div><div class="ttdoc">true if initialized</div><div class="ttdef"><b>Definition:</b> <a href="a00149_source.xhtml#l00282">Filter.h:282</a></div></div>
<div class="ttc" id="aa00465_xhtml_a1c35f3511dcdc32517db3cea9c327ae8"><div class="ttname"><a href="a00465.xhtml#a1c35f3511dcdc32517db3cea9c327ae8">CFilter::process</a></div><div class="ttdeci">Error_t process(T *pfOut, const T *pfIn, long long iNumSamples)</div><div class="ttdef"><b>Definition:</b> <a href="a00149_source.xhtml#l00100">Filter.h:100</a></div></div>
<div class="ttc" id="aa00465_xhtml_a4e31c29ccb288a7227e65e2b925deb02"><div class="ttname"><a href="a00465.xhtml#a4e31c29ccb288a7227e65e2b925deb02">CFilter::m_aptCoeff</a></div><div class="ttdeci">T * m_aptCoeff[kNumFilterDims]</div><div class="ttdoc">filter coefficients</div><div class="ttdef"><b>Definition:</b> <a href="a00149_source.xhtml#l00276">Filter.h:276</a></div></div>
<div class="ttc" id="aa00465_xhtml_a525b94fcc4e3ff6c061c6d9e667c4790"><div class="ttname"><a href="a00465.xhtml#a525b94fcc4e3ff6c061c6d9e667c4790">CFilter::processDFII</a></div><div class="ttdeci">Error_t processDFII(T *pfOut, const T *pfIn, long long iNumSamples)</div><div class="ttdef"><b>Definition:</b> <a href="a00149_source.xhtml#l00127">Filter.h:127</a></div></div>
<div class="ttc" id="aa00465_xhtml_a68eafbce2417e9c8e7934953e85199e7"><div class="ttname"><a href="a00465.xhtml#a68eafbce2417e9c8e7934953e85199e7">CFilter::setInitState_</a></div><div class="ttdeci">void setInitState_(float fWeight)</div><div class="ttdef"><b>Definition:</b> <a href="a00149_source.xhtml#l00237">Filter.h:237</a></div></div>
<div class="ttc" id="aa00465_xhtml_a8d6a8f20ea178eda7352a89bf7a4d200"><div class="ttname"><a href="a00465.xhtml#a8d6a8f20ea178eda7352a89bf7a4d200">CFilter::reset</a></div><div class="ttdeci">Error_t reset(bool bFreeMem=true)</div><div class="ttdef"><b>Definition:</b> <a href="a00149_source.xhtml#l00065">Filter.h:65</a></div></div>
<div class="ttc" id="aa00465_xhtml_a98c26369ca6c2941cba4874e6bfef3a7"><div class="ttname"><a href="a00465.xhtml#a98c26369ca6c2941cba4874e6bfef3a7">CFilter::~CFilter</a></div><div class="ttdeci">virtual ~CFilter()</div><div class="ttdef"><b>Definition:</b> <a href="a00149_source.xhtml#l00020">Filter.h:20</a></div></div>
<div class="ttc" id="aa00465_xhtml_ab8d1ef97269ec1b5408605731b009ae2"><div class="ttname"><a href="a00465.xhtml#ab8d1ef97269ec1b5408605731b009ae2">CFilter::operator=</a></div><div class="ttdeci">CFilter &amp; operator=(const CFilter &amp;c)</div></div>
<div class="ttc" id="aa00465_xhtml_ac44bd773d4652641a423b5291f13d337"><div class="ttname"><a href="a00465.xhtml#ac44bd773d4652641a423b5291f13d337">CFilter::m_pCFilterBuff</a></div><div class="ttdeci">CRingBuffer&lt; T &gt; * m_pCFilterBuff</div><div class="ttdoc">internal ring buffer for filter (only used for direct form II implementation CFilter::processDFII)</div><div class="ttdef"><b>Definition:</b> <a href="a00149_source.xhtml#l00274">Filter.h:274</a></div></div>
<div class="ttc" id="aa00465_xhtml_adc33d7fd0caf47e30d1d4e3634819bac"><div class="ttname"><a href="a00465.xhtml#adc33d7fd0caf47e30d1d4e3634819bac">CFilter::m_ptProcBuff</a></div><div class="ttdeci">T * m_ptProcBuff</div><div class="ttdoc">temp buffer for processing</div><div class="ttdef"><b>Definition:</b> <a href="a00149_source.xhtml#l00278">Filter.h:278</a></div></div>
<div class="ttc" id="aa00465_xhtml_add0db9a0cf605eb3f57c80b52d2bda0e"><div class="ttname"><a href="a00465.xhtml#add0db9a0cf605eb3f57c80b52d2bda0e">CFilter::init</a></div><div class="ttdeci">Error_t init(const T *pfB, const T *pfA, int iNumCoeffs)</div><div class="ttdef"><b>Definition:</b> <a href="a00149_source.xhtml#l00032">Filter.h:32</a></div></div>
<div class="ttc" id="aa00465_xhtml_aed0a614dce6816b55f0b3f17bdf991e5"><div class="ttname"><a href="a00465.xhtml#aed0a614dce6816b55f0b3f17bdf991e5">CFilter::m_iNumFilterCoeffs</a></div><div class="ttdeci">int m_iNumFilterCoeffs</div><div class="ttdoc">number of filter coefficients</div><div class="ttdef"><b>Definition:</b> <a href="a00149_source.xhtml#l00280">Filter.h:280</a></div></div>
<div class="ttc" id="aa00465_xhtml_af77365faa392bc427be2607834ab39bc"><div class="ttname"><a href="a00465.xhtml#af77365faa392bc427be2607834ab39bc">CFilter::FilterCoeffs_t</a></div><div class="ttdeci">FilterCoeffs_t</div><div class="ttdef"><b>Definition:</b> <a href="a00149_source.xhtml#l00228">Filter.h:229</a></div></div>
<div class="ttc" id="aa00465_xhtml_af77365faa392bc427be2607834ab39bca29cc20553a29d08db9ce9d3995f134e8"><div class="ttname"><a href="a00465.xhtml#af77365faa392bc427be2607834ab39bca29cc20553a29d08db9ce9d3995f134e8">CFilter::kFir</a></div><div class="ttdeci">@ kFir</div><div class="ttdef"><b>Definition:</b> <a href="a00149_source.xhtml#l00230">Filter.h:230</a></div></div>
<div class="ttc" id="aa00465_xhtml_af77365faa392bc427be2607834ab39bca4e70b0db4e767b7ab3dc858a94bcc2f4"><div class="ttname"><a href="a00465.xhtml#af77365faa392bc427be2607834ab39bca4e70b0db4e767b7ab3dc858a94bcc2f4">CFilter::kNumFilterDims</a></div><div class="ttdeci">@ kNumFilterDims</div><div class="ttdef"><b>Definition:</b> <a href="a00149_source.xhtml#l00234">Filter.h:233</a></div></div>
<div class="ttc" id="aa00465_xhtml_af77365faa392bc427be2607834ab39bca61b3a34d4b72be6e92f0d40eee575d54"><div class="ttname"><a href="a00465.xhtml#af77365faa392bc427be2607834ab39bca61b3a34d4b72be6e92f0d40eee575d54">CFilter::kIir</a></div><div class="ttdeci">@ kIir</div><div class="ttdef"><b>Definition:</b> <a href="a00149_source.xhtml#l00231">Filter.h:231</a></div></div>
<div class="ttc" id="aa00465_xhtml_afc3b70aa36740bc560377c7d43a358f2"><div class="ttname"><a href="a00465.xhtml#afc3b70aa36740bc560377c7d43a358f2">CFilter::CFilter</a></div><div class="ttdeci">CFilter(const CFilter &amp;that)</div></div>
<div class="ttc" id="aa00469_xhtml"><div class="ttname"><a href="a00469.xhtml">CButterLp</a></div><div class="ttdoc">class providing a generic filter implementation implementation inspired by src from https://exstrom....</div><div class="ttdef"><b>Definition:</b> <a href="a00149_source.xhtml#l00288">Filter.h:289</a></div></div>
<div class="ttc" id="aa00469_xhtml_a3878460603a6e6e1a64de6021b2bb73e"><div class="ttname"><a href="a00469.xhtml#a3878460603a6e6e1a64de6021b2bb73e">CButterLp::calcCoeffs</a></div><div class="ttdeci">static Error_t calcCoeffs(T *pfB, T *pfA, int iOrder, T fCutOff)</div><div class="ttdef"><b>Definition:</b> <a href="a00149_source.xhtml#l00300">Filter.h:300</a></div></div>
<div class="ttc" id="aa00469_xhtml_a4a70bdde7f075d2591fd03c52c16145c"><div class="ttname"><a href="a00469.xhtml#a4a70bdde7f075d2591fd03c52c16145c">CButterLp::calcA</a></div><div class="ttdeci">static Error_t calcA(T *pfA, int iOrder, T fCutOff)</div><div class="ttdef"><b>Definition:</b> <a href="a00149_source.xhtml#l00340">Filter.h:340</a></div></div>
<div class="ttc" id="aa00469_xhtml_a93b25bb8ef71fc7221ae53efe9212d67"><div class="ttname"><a href="a00469.xhtml#a93b25bb8ef71fc7221ae53efe9212d67">CButterLp::calcScale</a></div><div class="ttdeci">static T calcScale(int iOrder, T fCutOff)</div><div class="ttdef"><b>Definition:</b> <a href="a00149_source.xhtml#l00367">Filter.h:367</a></div></div>
<div class="ttc" id="aa00469_xhtml_a9c08c0b6f891bb37fb4230088f94b0a0"><div class="ttname"><a href="a00469.xhtml#a9c08c0b6f891bb37fb4230088f94b0a0">CButterLp::calcB</a></div><div class="ttdeci">static Error_t calcB(T *pfB, int iOrder, T fCutOff)</div><div class="ttdef"><b>Definition:</b> <a href="a00149_source.xhtml#l00319">Filter.h:319</a></div></div>
<div class="ttc" id="aa00469_xhtml_ab4432f6b6d2f1bad850a13a0573615c4"><div class="ttname"><a href="a00469.xhtml#ab4432f6b6d2f1bad850a13a0573615c4">CButterLp::multBinomial</a></div><div class="ttdeci">static Error_t multBinomial(T *pfOut, const T *pfIn, int iOrder)</div><div class="ttdef"><b>Definition:</b> <a href="a00149_source.xhtml#l00383">Filter.h:383</a></div></div>
<div class="ttc" id="aa00473_xhtml_a37585f57926ea2921734907bacc6cce8"><div class="ttname"><a href="a00473.xhtml#a37585f57926ea2921734907bacc6cce8">CMatrix::inv_I</a></div><div class="ttdeci">static void inv_I(T **pptSrcDest, int iNumRows, int iNumCols)</div><div class="ttdef"><b>Definition:</b> <a href="a00146_source.xhtml#l00748">Matrix.h:748</a></div></div>
<div class="ttc" id="aa00473_xhtml_a591097c6b1935c4d6273b3445f8f552b"><div class="ttname"><a href="a00473.xhtml#a591097c6b1935c4d6273b3445f8f552b">CMatrix::free</a></div><div class="ttdeci">static void free(T **&amp;pptMat, int iNumRows)</div><div class="ttdef"><b>Definition:</b> <a href="a00146_source.xhtml#l00040">Matrix.h:40</a></div></div>
<div class="ttc" id="aa00473_xhtml_a6501b78d76c912d49eee88c8f7242923"><div class="ttname"><a href="a00473.xhtml#a6501b78d76c912d49eee88c8f7242923">CMatrix::alloc</a></div><div class="ttdeci">static void alloc(T **&amp;pptMat, int iNumRows, int iNumCols)</div><div class="ttdef"><b>Definition:</b> <a href="a00146_source.xhtml#l00022">Matrix.h:22</a></div></div>
<div class="ttc" id="aa00473_xhtml_ab0ca8e552db389f6323e1c3d26e59902"><div class="ttname"><a href="a00473.xhtml#ab0ca8e552db389f6323e1c3d26e59902">CMatrix::mulMatColVec</a></div><div class="ttdeci">static void mulMatColVec(float *ptDestColVec, float **pptMat, const float *ptSrcColVec, int iNumMatRows, int iNumMatCols)</div><div class="ttdef"><b>Definition:</b> <a href="a00146_source.xhtml#l00368">Matrix.h:368</a></div></div>
<div class="ttc" id="aa00477_xhtml"><div class="ttname"><a href="a00477.xhtml">CRingBuffer</a></div><div class="ttdoc">implement a circular buffer of type T</div><div class="ttdef"><b>Definition:</b> <a href="a00161_source.xhtml#l00013">RingBuffer.h:14</a></div></div>
<div class="ttc" id="aa00489_xhtml_a6dbb3f9f480568b60f7fe50090d20003"><div class="ttname"><a href="a00489.xhtml#a6dbb3f9f480568b60f7fe50090d20003">CVector::setZero</a></div><div class="ttdeci">static void setZero(T *ptSrcDest, long long iLength)</div><div class="ttdef"><b>Definition:</b> <a href="a00152_source.xhtml#l00051">Vector.h:51</a></div></div>
<div class="ttc" id="aa00489_xhtml_aa86bdb0c663d4d52f2765793756f8737"><div class="ttname"><a href="a00489.xhtml#aa86bdb0c663d4d52f2765793756f8737">CVector::free</a></div><div class="ttdeci">static void free(T *&amp;ptVec)</div><div class="ttdef"><b>Definition:</b> <a href="a00152_source.xhtml#l00039">Vector.h:39</a></div></div>
<div class="ttc" id="aa00489_xhtml_abaadac98b1cad18b7b568852bc951696"><div class="ttname"><a href="a00489.xhtml#abaadac98b1cad18b7b568852bc951696">CVector::alloc</a></div><div class="ttdeci">static void alloc(T *&amp;ptVec, long long iLength)</div><div class="ttdef"><b>Definition:</b> <a href="a00152_source.xhtml#l00024">Vector.h:24</a></div></div>
<div class="ttc" id="aa00489_xhtml_ad7c5cba73e439adac77778f61c9418f0"><div class="ttname"><a href="a00489.xhtml#ad7c5cba73e439adac77778f61c9418f0">CVector::copy</a></div><div class="ttdeci">static void copy(T *ptDest, const T *ptSrc, long long int iLength)</div><div class="ttdef"><b>Definition:</b> <a href="a00152_source.xhtml#l00113">Vector.h:113</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_bfccd401955b95cf8c75461437045ac0.xhtml">inc</a></li><li class="navelem"><a class="el" href="dir_0aca768bfdcf5d30136701ca31d18db0.xhtml">helper</a></li><li class="navelem"><a class="el" href="a00149.xhtml">Filter.h</a></li>
    <li class="footer">Generated on Sun Jun 12 2022 20:29:15 for ACA by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.4 </li>
  </ul>
</div>
</body>
</html>
