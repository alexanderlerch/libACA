<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 6.0.1 (20220911.1526)
 -->
<!-- Title: CChordFromFile Pages: 1 -->
<svg width="1073pt" height="2469pt"
 viewBox="0.00 0.00 1073.00 2469.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 2465)">
<title>CChordFromFile</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="class for computation of chord progression from a file">
<polygon fill="#999999" stroke="#666666" points="754.5,-74 594.5,-74 594.5,0 754.5,0 754.5,-74"/>
<text text-anchor="middle" x="674.5" y="-62" font-family="Helvetica,sans-Serif" font-size="10.00">{CChordFromFile</text>
<text text-anchor="start" x="602.5" y="-51" font-family="Helvetica,sans-Serif" font-size="10.00">||+ &#160;CChordFromFile(std</text>
<text text-anchor="start" x="602.5" y="-40" font-family="Helvetica,sans-Serif" font-size="10.00">::string strAudioFilePath,</text>
<text text-anchor="start" x="602.5" y="-29" font-family="Helvetica,sans-Serif" font-size="10.00"> int iBlockLength, int iHopLength)</text>
<text text-anchor="start" x="602.5" y="-18" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CChordFromFile()</text>
<text text-anchor="middle" x="674.5" y="-7" font-family="Helvetica,sans-Serif" font-size="10.00">}</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="a00454.xhtml" target="_top" xlink:title="class for computation of a chord progression from either a file or a vector">
<polygon fill="white" stroke="#666666" points="668.5,-849.5 498.5,-849.5 498.5,-302.5 668.5,-302.5 668.5,-849.5"/>
<text text-anchor="middle" x="583.5" y="-837.5" font-family="Helvetica,sans-Serif" font-size="10.00">{CChordIf</text>
<text text-anchor="start" x="506.5" y="-826.5" font-family="Helvetica,sans-Serif" font-size="10.00">|# int m_iBlockLength</text>
<text text-anchor="start" x="506.5" y="-815.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iHopLength</text>
<text text-anchor="start" x="506.5" y="-804.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float m_fSampleRate</text>
<text text-anchor="start" x="506.5" y="-793.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float * m_pfProcBuff2</text>
<text text-anchor="start" x="506.5" y="-782.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float * m_pfProcBuff1</text>
<text text-anchor="start" x="506.5" y="-771.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float ** m_ppfChordProbs</text>
<text text-anchor="start" x="506.5" y="-760.5" font-family="Helvetica,sans-Serif" font-size="10.00"># bool m_bIsInitialized</text>
<text text-anchor="start" x="506.5" y="-749.5" font-family="Helvetica,sans-Serif" font-size="10.00">|+ Error_t getNumBlocks</text>
<text text-anchor="start" x="506.5" y="-738.5" font-family="Helvetica,sans-Serif" font-size="10.00">(int &amp;iNumBlocks) const</text>
<text text-anchor="start" x="506.5" y="-727.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ int getNumBlocks()</text>
<text text-anchor="start" x="506.5" y="-716.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const</text>
<text text-anchor="start" x="506.5" y="-705.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ float getTimeStamp</text>
<text text-anchor="start" x="506.5" y="-694.5" font-family="Helvetica,sans-Serif" font-size="10.00">(int iBlockIdx) const</text>
<text text-anchor="start" x="506.5" y="-683.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getTimeStamps</text>
<text text-anchor="start" x="506.5" y="-672.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfAxisTicks) const</text>
<text text-anchor="start" x="506.5" y="-661.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compChords</text>
<text text-anchor="start" x="506.5" y="-650.5" font-family="Helvetica,sans-Serif" font-size="10.00">(Chords_t *peChord,</text>
<text text-anchor="start" x="506.5" y="-639.5" font-family="Helvetica,sans-Serif" font-size="10.00"> bool bWithViterbi=true)</text>
<text text-anchor="start" x="506.5" y="-628.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="506.5" y="-617.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CChordIf *&amp;pCInstance,</text>
<text text-anchor="start" x="506.5" y="-606.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const std::string &amp;strAudioFile</text>
<text text-anchor="start" x="506.5" y="-595.5" font-family="Helvetica,sans-Serif" font-size="10.00">Path, int iBlockLength=8192,</text>
<text text-anchor="start" x="506.5" y="-584.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iHopLength=2048)</text>
<text text-anchor="start" x="506.5" y="-573.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="506.5" y="-562.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CChordIf *&amp;pCInstance,</text>
<text text-anchor="start" x="506.5" y="-551.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const float *pfAudio,</text>
<text text-anchor="start" x="506.5" y="-540.5" font-family="Helvetica,sans-Serif" font-size="10.00"> long long iNumSamples,</text>
<text text-anchor="start" x="506.5" y="-529.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate, int iBlockLength</text>
<text text-anchor="start" x="506.5" y="-518.5" font-family="Helvetica,sans-Serif" font-size="10.00">=8192, int iHopLength=2048)</text>
<text text-anchor="start" x="506.5" y="-507.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="506.5" y="-496.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CChordIf *&amp;pCInstance)</text>
<text text-anchor="start" x="506.5" y="-485.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static std::string</text>
<text text-anchor="start" x="506.5" y="-474.5" font-family="Helvetica,sans-Serif" font-size="10.00"> getChordString(Chords</text>
<text text-anchor="start" x="506.5" y="-463.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t eChordIdx)</text>
<text text-anchor="start" x="506.5" y="-452.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Chords_t getChord</text>
<text text-anchor="start" x="506.5" y="-441.5" font-family="Helvetica,sans-Serif" font-size="10.00">IdxFromString(std::string</text>
<text text-anchor="start" x="506.5" y="-430.5" font-family="Helvetica,sans-Serif" font-size="10.00"> sChordString)</text>
<text text-anchor="start" x="506.5" y="-419.5" font-family="Helvetica,sans-Serif" font-size="10.00"># &#160;CChordIf()</text>
<text text-anchor="start" x="506.5" y="-408.5" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CChordIf()</text>
<text text-anchor="start" x="506.5" y="-397.5" font-family="Helvetica,sans-Serif" font-size="10.00"># &#160;CChordIf(const CChordIf</text>
<text text-anchor="start" x="506.5" y="-386.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;that)</text>
<text text-anchor="start" x="506.5" y="-375.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CChordIf &amp; operator</text>
<text text-anchor="start" x="506.5" y="-364.5" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CChordIf &amp;c)</text>
<text text-anchor="start" x="506.5" y="-353.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t reset_()</text>
<text text-anchor="start" x="506.5" y="-342.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t init_()</text>
<text text-anchor="start" x="506.5" y="-331.5" font-family="Helvetica,sans-Serif" font-size="10.00"># void initViterbi_()</text>
<text text-anchor="start" x="506.5" y="-320.5" font-family="Helvetica,sans-Serif" font-size="10.00"># void computeMagSpectrum_()</text>
<text text-anchor="middle" x="583.5" y="-309.5" font-family="Helvetica,sans-Serif" font-size="10.00">}</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="#63b8ff" d="M631.44,-292.13C646.15,-205.32 660.52,-120.52 668.37,-74.17"/>
<polygon fill="none" stroke="#63b8ff" points="627.95,-291.73 629.73,-302.17 634.85,-292.9 627.95,-291.73"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="a00606.xhtml" target="_top" xlink:title="class for audio normalization offering three options">
<polygon fill="white" stroke="#666666" points="155,-1432.5 0,-1432.5 0,-1204.5 155,-1204.5 155,-1432.5"/>
<text text-anchor="middle" x="77.5" y="-1420.5" font-family="Helvetica,sans-Serif" font-size="10.00">{CNormalizeAudio</text>
<text text-anchor="start" x="8" y="-1409.5" font-family="Helvetica,sans-Serif" font-size="10.00">|&#45; float m_fScaleFactor</text>
<text text-anchor="start" x="8" y="-1398.5" font-family="Helvetica,sans-Serif" font-size="10.00">|+ &#160;CNormalizeAudio(CAudioFile</text>
<text text-anchor="start" x="8" y="-1387.5" font-family="Helvetica,sans-Serif" font-size="10.00">If *pCAudioFile)</text>
<text text-anchor="start" x="8" y="-1376.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ &#160;CNormalizeAudio(const</text>
<text text-anchor="start" x="8" y="-1365.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfAudioBuff, long</text>
<text text-anchor="start" x="8" y="-1354.5" font-family="Helvetica,sans-Serif" font-size="10.00"> long iAudioLength)</text>
<text text-anchor="start" x="8" y="-1343.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CNormalizeAudio()</text>
<text text-anchor="start" x="8" y="-1332.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void normalizeBlock</text>
<text text-anchor="start" x="8" y="-1321.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfAudioBlock,</text>
<text text-anchor="start" x="8" y="-1310.5" font-family="Helvetica,sans-Serif" font-size="10.00"> long long iNumSamples)</text>
<text text-anchor="start" x="8" y="-1299.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static void normalizeSignal</text>
<text text-anchor="start" x="8" y="-1288.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfAudio, long long</text>
<text text-anchor="start" x="8" y="-1277.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iNumSamples)</text>
<text text-anchor="start" x="8" y="-1266.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; &#160;CNormalizeAudio()</text>
<text text-anchor="start" x="8" y="-1255.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; &#160;CNormalizeAudio(const</text>
<text text-anchor="start" x="8" y="-1244.5" font-family="Helvetica,sans-Serif" font-size="10.00"> CNormalizeAudio &amp;that)</text>
<text text-anchor="start" x="8" y="-1233.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CNormalizeAudio &amp; operator</text>
<text text-anchor="start" x="8" y="-1222.5" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CNormalizeAudio &amp;c)</text>
<text text-anchor="middle" x="77.5" y="-1211.5" font-family="Helvetica,sans-Serif" font-size="10.00">}</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node2 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node2</title>
<path fill="none" stroke="#404040" d="M109.63,-1204.22C123.6,-1163.07 141.98,-1117.1 164.5,-1078 255.17,-920.54 396.51,-763.9 489.55,-668.75"/>
<polygon fill="none" stroke="#404040" points="489.71,-668.59 491.06,-661.5 498.12,-660.02 496.77,-667.11 489.71,-668.59"/>
<text text-anchor="middle" x="217" y="-1052" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCNormalize</text>
</g>
<!-- Node4 -->
<g id="node4" class="node">
<title>Node4</title>
<g id="a_node4"><a xlink:href="a00542.xhtml" target="_top" xlink:title="forward declaration">
<polygon fill="white" stroke="#666666" points="333.5,-1531.5 173.5,-1531.5 173.5,-1105.5 333.5,-1105.5 333.5,-1531.5"/>
<text text-anchor="middle" x="253.5" y="-1519.5" font-family="Helvetica,sans-Serif" font-size="10.00">{CBlockAudioIf</text>
<text text-anchor="start" x="181.5" y="-1508.5" font-family="Helvetica,sans-Serif" font-size="10.00">|# long long m_iNumBlocks</text>
<text text-anchor="start" x="181.5" y="-1497.5" font-family="Helvetica,sans-Serif" font-size="10.00"># long long m_iCurrBlock</text>
<text text-anchor="start" x="181.5" y="-1486.5" font-family="Helvetica,sans-Serif" font-size="10.00"># long long m_iAudioLength</text>
<text text-anchor="start" x="181.5" y="-1475.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iBlockLength</text>
<text text-anchor="start" x="181.5" y="-1464.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iNumChannels</text>
<text text-anchor="start" x="181.5" y="-1453.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iHopLength</text>
<text text-anchor="start" x="181.5" y="-1442.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float m_fSampleRate</text>
<text text-anchor="start" x="181.5" y="-1431.5" font-family="Helvetica,sans-Serif" font-size="10.00">|+ long long getNumBlocks</text>
<text text-anchor="start" x="181.5" y="-1420.5" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="181.5" y="-1409.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ long long getLengthInSamples</text>
<text text-anchor="start" x="181.5" y="-1398.5" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="181.5" y="-1387.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ float getTimeStamp</text>
<text text-anchor="start" x="181.5" y="-1376.5" font-family="Helvetica,sans-Serif" font-size="10.00">(long long iBlockIdx)</text>
<text text-anchor="start" x="181.5" y="-1365.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual bool isEndOfData</text>
<text text-anchor="start" x="181.5" y="-1354.5" font-family="Helvetica,sans-Serif" font-size="10.00">() const =0</text>
<text text-anchor="start" x="181.5" y="-1343.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual int getNextBlock</text>
<text text-anchor="start" x="181.5" y="-1332.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfBlock, float</text>
<text text-anchor="start" x="181.5" y="-1321.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfTimeStampInS=0)=0</text>
<text text-anchor="start" x="181.5" y="-1310.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="181.5" y="-1299.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CBlockAudioIf *&amp;pCInstance,</text>
<text text-anchor="start" x="181.5" y="-1288.5" font-family="Helvetica,sans-Serif" font-size="10.00"> CAudioFileIf *pCAudioFile,</text>
<text text-anchor="start" x="181.5" y="-1277.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iBlockLength, int iHopLength)</text>
<text text-anchor="start" x="181.5" y="-1266.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="181.5" y="-1255.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CBlockAudioIf *&amp;pCInstance,</text>
<text text-anchor="start" x="181.5" y="-1244.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const float *pfAudioBuff,</text>
<text text-anchor="start" x="181.5" y="-1233.5" font-family="Helvetica,sans-Serif" font-size="10.00"> long long iAudioLength, int</text>
<text text-anchor="start" x="181.5" y="-1222.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iBlockLength, int iHopLength,</text>
<text text-anchor="start" x="181.5" y="-1211.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate)</text>
<text text-anchor="start" x="181.5" y="-1200.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="181.5" y="-1189.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CBlockAudioIf *&amp;pCInstance)</text>
<text text-anchor="start" x="181.5" y="-1178.5" font-family="Helvetica,sans-Serif" font-size="10.00"># &#160;CBlockAudioIf()</text>
<text text-anchor="start" x="181.5" y="-1167.5" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CBlockAudioIf()</text>
<text text-anchor="start" x="181.5" y="-1156.5" font-family="Helvetica,sans-Serif" font-size="10.00"># &#160;CBlockAudioIf(const</text>
<text text-anchor="start" x="181.5" y="-1145.5" font-family="Helvetica,sans-Serif" font-size="10.00"> CBlockAudioIf &amp;that)</text>
<text text-anchor="start" x="181.5" y="-1134.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CBlockAudioIf &amp; operator</text>
<text text-anchor="start" x="181.5" y="-1123.5" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CBlockAudioIf &amp;c)</text>
<text text-anchor="middle" x="253.5" y="-1112.5" font-family="Helvetica,sans-Serif" font-size="10.00">}</text>
</a>
</g>
</g>
<!-- Node4&#45;&gt;Node2 -->
<g id="edge3" class="edge">
<title>Node4&#45;&gt;Node2</title>
<path fill="none" stroke="#404040" d="M331.2,-1105.19C334.95,-1095.98 338.72,-1086.88 342.5,-1078 388.78,-969.17 445.97,-849.75 493.02,-754.8"/>
<polygon fill="none" stroke="#404040" points="493.08,-754.68 492.16,-747.53 498.41,-743.94 499.33,-751.09 493.08,-754.68"/>
<text text-anchor="middle" x="396" y="-1052" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCBlockAudio</text>
</g>
<!-- Node5 -->
<g id="node5" class="node">
<title>Node5</title>
<g id="a_node5"><a xlink:href="a00458.xhtml" target="_top" xlink:title="class for computation of a chord from a magnitude spectrum">
<polygon fill="white" stroke="#666666" points="521.5,-1465.5 351.5,-1465.5 351.5,-1171.5 521.5,-1171.5 521.5,-1465.5"/>
<text text-anchor="middle" x="436.5" y="-1453.5" font-family="Helvetica,sans-Serif" font-size="10.00">{CChordFromBlockIf</text>
<text text-anchor="start" x="359.5" y="-1442.5" font-family="Helvetica,sans-Serif" font-size="10.00">|# int m_iMagSpecLength</text>
<text text-anchor="start" x="359.5" y="-1431.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float m_fSampleRate</text>
<text text-anchor="start" x="359.5" y="-1420.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float * m_pfPitchChroma</text>
<text text-anchor="start" x="359.5" y="-1409.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float ** m_ppfTemplateMatrix</text>
<text text-anchor="start" x="359.5" y="-1398.5" font-family="Helvetica,sans-Serif" font-size="10.00">|+ virtual Error_t compChord</text>
<text text-anchor="start" x="359.5" y="-1387.5" font-family="Helvetica,sans-Serif" font-size="10.00">Prob(float *pfChordProb,</text>
<text text-anchor="start" x="359.5" y="-1376.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const float *pfIn)</text>
<text text-anchor="start" x="359.5" y="-1365.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="359.5" y="-1354.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CChordFromBlockIf *&amp;pCInstance,</text>
<text text-anchor="start" x="359.5" y="-1343.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iMagSpecLength, float</text>
<text text-anchor="start" x="359.5" y="-1332.5" font-family="Helvetica,sans-Serif" font-size="10.00"> fSampleRate=1.F)</text>
<text text-anchor="start" x="359.5" y="-1321.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="359.5" y="-1310.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CChordFromBlockIf *&amp;pCInstance)</text>
<text text-anchor="start" x="359.5" y="-1299.5" font-family="Helvetica,sans-Serif" font-size="10.00"># &#160;CChordFromBlockIf</text>
<text text-anchor="start" x="359.5" y="-1288.5" font-family="Helvetica,sans-Serif" font-size="10.00">(int iMagSpecLength,</text>
<text text-anchor="start" x="359.5" y="-1277.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate)</text>
<text text-anchor="start" x="359.5" y="-1266.5" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CChordFromBlockIf()</text>
<text text-anchor="start" x="359.5" y="-1255.5" font-family="Helvetica,sans-Serif" font-size="10.00"># &#160;CChordFromBlockIf</text>
<text text-anchor="start" x="359.5" y="-1244.5" font-family="Helvetica,sans-Serif" font-size="10.00">(const CChordFromBlockIf</text>
<text text-anchor="start" x="359.5" y="-1233.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;that)</text>
<text text-anchor="start" x="359.5" y="-1222.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CChordFromBlockIf &amp;</text>
<text text-anchor="start" x="359.5" y="-1211.5" font-family="Helvetica,sans-Serif" font-size="10.00"> operator=(const CChordFrom</text>
<text text-anchor="start" x="359.5" y="-1200.5" font-family="Helvetica,sans-Serif" font-size="10.00">BlockIf &amp;c)</text>
<text text-anchor="start" x="359.5" y="-1189.5" font-family="Helvetica,sans-Serif" font-size="10.00"># void genTemplateMatrix_()</text>
<text text-anchor="middle" x="436.5" y="-1178.5" font-family="Helvetica,sans-Serif" font-size="10.00">}</text>
</a>
</g>
</g>
<!-- Node5&#45;&gt;Node2 -->
<g id="edge4" class="edge">
<title>Node5&#45;&gt;Node2</title>
<path fill="none" stroke="#404040" d="M465.54,-1171.2C483.08,-1082.84 506.04,-967.22 527.03,-861.47"/>
<polygon fill="none" stroke="#404040" points="527.04,-861.4 524.29,-854.73 529.38,-849.63 532.14,-856.29 527.04,-861.4"/>
<text text-anchor="middle" x="518" y="-1052" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCChord</text>
</g>
<!-- Node6 -->
<g id="node6" class="node">
<title>Node6</title>
<g id="a_node6"><a xlink:href="a00470.xhtml" target="_top" xlink:title="class for computation of a feature from a block of data (e.g., time or magnitude spectrum)">
<polygon fill="white" stroke="#666666" points="530.5,-2461 342.5,-2461 342.5,-1606 530.5,-1606 530.5,-2461"/>
<text text-anchor="middle" x="436.5" y="-2449" font-family="Helvetica,sans-Serif" font-size="10.00">{CFeatureFromBlockIf</text>
<text text-anchor="start" x="350.5" y="-2438" font-family="Helvetica,sans-Serif" font-size="10.00">|+ static const float</text>
<text text-anchor="start" x="350.5" y="-2427" font-family="Helvetica,sans-Serif" font-size="10.00"> m_kfFloatThresh</text>
<text text-anchor="start" x="350.5" y="-2416" font-family="Helvetica,sans-Serif" font-size="10.00"># CFeatureIf::Feature</text>
<text text-anchor="start" x="350.5" y="-2405" font-family="Helvetica,sans-Serif" font-size="10.00">_t m_eFeatureIdx</text>
<text text-anchor="start" x="350.5" y="-2394" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iDataLength</text>
<text text-anchor="start" x="350.5" y="-2383" font-family="Helvetica,sans-Serif" font-size="10.00"># float m_fSampleRate</text>
<text text-anchor="start" x="350.5" y="-2372" font-family="Helvetica,sans-Serif" font-size="10.00"># const std::map&lt; CFeature</text>
<text text-anchor="start" x="350.5" y="-2361" font-family="Helvetica,sans-Serif" font-size="10.00">If::Feature_t, std::function</text>
<text text-anchor="start" x="350.5" y="-2350" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; float(const float *, int,</text>
<text text-anchor="start" x="350.5" y="-2339" font-family="Helvetica,sans-Serif" font-size="10.00"> float)&gt; &gt; m_DispatchMap</text>
<text text-anchor="start" x="350.5" y="-2328" font-family="Helvetica,sans-Serif" font-size="10.00">|+ virtual int getFeatureDimensions</text>
<text text-anchor="start" x="350.5" y="-2317" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="350.5" y="-2306" font-family="Helvetica,sans-Serif" font-size="10.00">+ CFeatureIf::Feature</text>
<text text-anchor="start" x="350.5" y="-2295" font-family="Helvetica,sans-Serif" font-size="10.00">_t getFeatureIdx() const</text>
<text text-anchor="start" x="350.5" y="-2284" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Error_t compFeature</text>
<text text-anchor="start" x="350.5" y="-2273" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfFeature, const</text>
<text text-anchor="start" x="350.5" y="-2262" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfIn)</text>
<text text-anchor="start" x="350.5" y="-2251" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual bool hasAdditional</text>
<text text-anchor="start" x="350.5" y="-2240" font-family="Helvetica,sans-Serif" font-size="10.00">Param() const</text>
<text text-anchor="start" x="350.5" y="-2229" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Error_t setAdditional</text>
<text text-anchor="start" x="350.5" y="-2218" font-family="Helvetica,sans-Serif" font-size="10.00">Param(float fParamValue)</text>
<text text-anchor="start" x="350.5" y="-2207" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="350.5" y="-2196" font-family="Helvetica,sans-Serif" font-size="10.00">(CFeatureFromBlockIf</text>
<text text-anchor="start" x="350.5" y="-2185" font-family="Helvetica,sans-Serif" font-size="10.00"> *&amp;pCInstance, CFeatureIf</text>
<text text-anchor="start" x="350.5" y="-2174" font-family="Helvetica,sans-Serif" font-size="10.00">::Feature_t eFeatureIdx,</text>
<text text-anchor="start" x="350.5" y="-2163" font-family="Helvetica,sans-Serif" font-size="10.00"> int iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="350.5" y="-2152" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="350.5" y="-2141" font-family="Helvetica,sans-Serif" font-size="10.00">(CFeatureFromBlockIf *&amp;pCInstance)</text>
<text text-anchor="start" x="350.5" y="-2130" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="350.5" y="-2119" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralCentroid(const</text>
<text text-anchor="start" x="350.5" y="-2108" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfMagSpec, int</text>
<text text-anchor="start" x="350.5" y="-2097" font-family="Helvetica,sans-Serif" font-size="10.00"> iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="350.5" y="-2086" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="350.5" y="-2075" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralCrestFactor(const</text>
<text text-anchor="start" x="350.5" y="-2064" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfMagSpec, int iDataLength,</text>
<text text-anchor="start" x="350.5" y="-2053" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate=1.F)</text>
<text text-anchor="start" x="350.5" y="-2042" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="350.5" y="-2031" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralDecrease(const</text>
<text text-anchor="start" x="350.5" y="-2020" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfMagSpec, int</text>
<text text-anchor="start" x="350.5" y="-2009" font-family="Helvetica,sans-Serif" font-size="10.00"> iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="350.5" y="-1998" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="350.5" y="-1987" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralFlatness(const</text>
<text text-anchor="start" x="350.5" y="-1976" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfMagSpec, int</text>
<text text-anchor="start" x="350.5" y="-1965" font-family="Helvetica,sans-Serif" font-size="10.00"> iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="350.5" y="-1954" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="350.5" y="-1943" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralFlux(const float</text>
<text text-anchor="start" x="350.5" y="-1932" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfMagSpec, const float</text>
<text text-anchor="start" x="350.5" y="-1921" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfPrevSpec, int iDataLength,</text>
<text text-anchor="start" x="350.5" y="-1910" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate=1.F)</text>
<text text-anchor="start" x="350.5" y="-1899" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="350.5" y="-1888" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralKurtosis(const</text>
<text text-anchor="start" x="350.5" y="-1877" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfMagSpec, int</text>
<text text-anchor="start" x="350.5" y="-1866" font-family="Helvetica,sans-Serif" font-size="10.00"> iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="350.5" y="-1855" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="350.5" y="-1844" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralRolloff(const</text>
<text text-anchor="start" x="350.5" y="-1833" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfMagSpec, int</text>
<text text-anchor="start" x="350.5" y="-1822" font-family="Helvetica,sans-Serif" font-size="10.00"> iDataLength, float fSampleRate</text>
<text text-anchor="start" x="350.5" y="-1811" font-family="Helvetica,sans-Serif" font-size="10.00">=1.F, float fKappa=.85F)</text>
<text text-anchor="start" x="350.5" y="-1800" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="350.5" y="-1789" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralSkewness(const</text>
<text text-anchor="start" x="350.5" y="-1778" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfMagSpec, int</text>
<text text-anchor="start" x="350.5" y="-1767" font-family="Helvetica,sans-Serif" font-size="10.00"> iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="350.5" y="-1756" font-family="Helvetica,sans-Serif" font-size="10.00">and 8 more...</text>
<text text-anchor="start" x="350.5" y="-1745" font-family="Helvetica,sans-Serif" font-size="10.00"># &#160;CFeatureFromBlockIf()</text>
<text text-anchor="start" x="350.5" y="-1734" font-family="Helvetica,sans-Serif" font-size="10.00"># &#160;CFeatureFromBlockIf</text>
<text text-anchor="start" x="350.5" y="-1723" font-family="Helvetica,sans-Serif" font-size="10.00">(CFeatureIf::Feature</text>
<text text-anchor="start" x="350.5" y="-1712" font-family="Helvetica,sans-Serif" font-size="10.00">_t eFeatureIdx, int iDataLength,</text>
<text text-anchor="start" x="350.5" y="-1701" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate)</text>
<text text-anchor="start" x="350.5" y="-1690" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CFeatureFromBlockIf()</text>
<text text-anchor="start" x="350.5" y="-1679" font-family="Helvetica,sans-Serif" font-size="10.00"># &#160;CFeatureFromBlockIf</text>
<text text-anchor="start" x="350.5" y="-1668" font-family="Helvetica,sans-Serif" font-size="10.00">(const CFeatureFromBlockIf</text>
<text text-anchor="start" x="350.5" y="-1657" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;that)</text>
<text text-anchor="start" x="350.5" y="-1646" font-family="Helvetica,sans-Serif" font-size="10.00"># CFeatureFromBlockIf</text>
<text text-anchor="start" x="350.5" y="-1635" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp; operator=(const CFeature</text>
<text text-anchor="start" x="350.5" y="-1624" font-family="Helvetica,sans-Serif" font-size="10.00">FromBlockIf &amp;c)</text>
<text text-anchor="middle" x="436.5" y="-1613" font-family="Helvetica,sans-Serif" font-size="10.00">}</text>
</a>
</g>
</g>
<!-- Node6&#45;&gt;Node5 -->
<g id="edge5" class="edge">
<title>Node6&#45;&gt;Node5</title>
<path fill="none" stroke="#404040" d="M436.5,-1605.91C436.5,-1560.66 436.5,-1516.97 436.5,-1477.93"/>
<polygon fill="none" stroke="#404040" points="436.5,-1477.69 432.5,-1471.69 436.5,-1465.69 440.5,-1471.69 436.5,-1477.69"/>
<text text-anchor="middle" x="489" y="-1580" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCFeatureExtractor</text>
</g>
<!-- Node7 -->
<g id="node7" class="node">
<title>Node7</title>
<g id="a_node7"><a xlink:href="a00474.xhtml" target="_top" xlink:title="class for FFT computation with windowing">
<polygon fill="white" stroke="#666666" points="727.5,-1559 539.5,-1559 539.5,-1078 727.5,-1078 727.5,-1559"/>
<text text-anchor="middle" x="633.5" y="-1547" font-family="Helvetica,sans-Serif" font-size="10.00">{CFft</text>
<text text-anchor="start" x="547.5" y="-1536" font-family="Helvetica,sans-Serif" font-size="10.00">|&#45; float * m_pfProcBuff</text>
<text text-anchor="start" x="547.5" y="-1525" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_pfWindowBuff</text>
<text text-anchor="start" x="547.5" y="-1514" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iDataLength</text>
<text text-anchor="start" x="547.5" y="-1503" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iFftLength</text>
<text text-anchor="start" x="547.5" y="-1492" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Windowing_t m_ePrePostWindowOpt</text>
<text text-anchor="start" x="547.5" y="-1481" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; bool m_bIsInitialized</text>
<text text-anchor="start" x="547.5" y="-1470" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; static const float m_Pi</text>
<text text-anchor="start" x="547.5" y="-1459" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; static const float</text>
<text text-anchor="start" x="547.5" y="-1448" font-family="Helvetica,sans-Serif" font-size="10.00"> m_Pi2</text>
<text text-anchor="start" x="547.5" y="-1437" font-family="Helvetica,sans-Serif" font-size="10.00">|+ &#160;CFft()</text>
<text text-anchor="start" x="547.5" y="-1426" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CFft()</text>
<text text-anchor="start" x="547.5" y="-1415" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t init(int iBlockLength,</text>
<text text-anchor="start" x="547.5" y="-1404" font-family="Helvetica,sans-Serif" font-size="10.00"> int iZeroPadFactor=1, WindowFunction</text>
<text text-anchor="start" x="547.5" y="-1393" font-family="Helvetica,sans-Serif" font-size="10.00">_t eWindow=kWindowHann, Windowing</text>
<text text-anchor="start" x="547.5" y="-1382" font-family="Helvetica,sans-Serif" font-size="10.00">_t eWindowing=kPreWindow)</text>
<text text-anchor="start" x="547.5" y="-1371" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t reset()</text>
<text text-anchor="start" x="547.5" y="-1360" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t overrideWindow</text>
<text text-anchor="start" x="547.5" y="-1349" font-family="Helvetica,sans-Serif" font-size="10.00">(const float *pfNewWindow)</text>
<text text-anchor="start" x="547.5" y="-1338" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getWindow(float</text>
<text text-anchor="start" x="547.5" y="-1327" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfWindow) const</text>
<text text-anchor="start" x="547.5" y="-1316" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compFft(complex</text>
<text text-anchor="start" x="547.5" y="-1305" font-family="Helvetica,sans-Serif" font-size="10.00">_t *pfSpectrum, const</text>
<text text-anchor="start" x="547.5" y="-1294" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfIn)</text>
<text text-anchor="start" x="547.5" y="-1283" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compInvFft</text>
<text text-anchor="start" x="547.5" y="-1272" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfOut, const</text>
<text text-anchor="start" x="547.5" y="-1261" font-family="Helvetica,sans-Serif" font-size="10.00"> complex_t *pfSpectrum)</text>
<text text-anchor="start" x="547.5" y="-1250" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getMagnitude</text>
<text text-anchor="start" x="547.5" y="-1239" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfMag, const</text>
<text text-anchor="start" x="547.5" y="-1228" font-family="Helvetica,sans-Serif" font-size="10.00"> complex_t *pfSpectrum)</text>
<text text-anchor="start" x="547.5" y="-1217" font-family="Helvetica,sans-Serif" font-size="10.00"> const</text>
<text text-anchor="start" x="547.5" y="-1206" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getPhase(float</text>
<text text-anchor="start" x="547.5" y="-1195" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfPhase, const complex</text>
<text text-anchor="start" x="547.5" y="-1184" font-family="Helvetica,sans-Serif" font-size="10.00">_t *pfSpectrum) const</text>
<text text-anchor="start" x="547.5" y="-1173" font-family="Helvetica,sans-Serif" font-size="10.00">and 7 more...</text>
<text text-anchor="start" x="547.5" y="-1162" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; &#160;CFft(const CFft &amp;that)</text>
<text text-anchor="start" x="547.5" y="-1151" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CFft &amp; operator=(const</text>
<text text-anchor="start" x="547.5" y="-1140" font-family="Helvetica,sans-Serif" font-size="10.00"> CFft &amp;c)</text>
<text text-anchor="start" x="547.5" y="-1129" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Error_t allocMemory_()</text>
<text text-anchor="start" x="547.5" y="-1118" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Error_t freeMemory_()</text>
<text text-anchor="start" x="547.5" y="-1107" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Error_t computeWindow</text>
<text text-anchor="start" x="547.5" y="-1096" font-family="Helvetica,sans-Serif" font-size="10.00">_(WindowFunction_t eWindow)</text>
<text text-anchor="middle" x="633.5" y="-1085" font-family="Helvetica,sans-Serif" font-size="10.00">}</text>
</a>
</g>
</g>
<!-- Node7&#45;&gt;Node2 -->
<g id="edge6" class="edge">
<title>Node7&#45;&gt;Node2</title>
<path fill="none" stroke="#404040" d="M617.32,-1077.85C612.67,-1009.05 607.56,-933.36 602.75,-862.11"/>
<polygon fill="none" stroke="#404040" points="602.73,-861.77 598.33,-856.05 601.92,-849.79 606.31,-855.51 602.73,-861.77"/>
<text text-anchor="middle" x="639.5" y="-1052" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCFft</text>
</g>
<!-- Node8 -->
<g id="node8" class="node">
<title>Node8</title>
<g id="a_node8"><a xlink:href="a00630.xhtml" target="_top" xlink:title="viterbi algorithm">
<polygon fill="white" stroke="#666666" points="897.5,-1537 745.5,-1537 745.5,-1100 897.5,-1100 897.5,-1537"/>
<text text-anchor="middle" x="821.5" y="-1525" font-family="Helvetica,sans-Serif" font-size="10.00">{CViterbi</text>
<text text-anchor="start" x="753.5" y="-1514" font-family="Helvetica,sans-Serif" font-size="10.00">|&#45; float ** m_ppfProb</text>
<text text-anchor="start" x="753.5" y="-1503" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float ** m_ppfTransProb</text>
<text text-anchor="start" x="753.5" y="-1492" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_pfStart</text>
<text text-anchor="start" x="753.5" y="-1481" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float m_fOverallProb</text>
<text text-anchor="start" x="753.5" y="-1470" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; unsigned int ** m_ppiPathIdx</text>
<text text-anchor="start" x="753.5" y="-1459" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iNumStates</text>
<text text-anchor="start" x="753.5" y="-1448" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iNumObs</text>
<text text-anchor="start" x="753.5" y="-1437" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iEndState</text>
<text text-anchor="start" x="753.5" y="-1426" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; const float m_kLogMin</text>
<text text-anchor="start" x="753.5" y="-1415" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; bool m_bIsInitialized</text>
<text text-anchor="start" x="753.5" y="-1404" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; bool m_bWasProcessed</text>
<text text-anchor="start" x="753.5" y="-1393" font-family="Helvetica,sans-Serif" font-size="10.00">|+ &#160;CViterbi(void)</text>
<text text-anchor="start" x="753.5" y="-1382" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CViterbi(void)</text>
<text text-anchor="start" x="753.5" y="-1371" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t init(const</text>
<text text-anchor="start" x="753.5" y="-1360" font-family="Helvetica,sans-Serif" font-size="10.00"> float *const *const</text>
<text text-anchor="start" x="753.5" y="-1349" font-family="Helvetica,sans-Serif" font-size="10.00"> ppfPTransition, const</text>
<text text-anchor="start" x="753.5" y="-1338" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfPStart, int iNumStates,</text>
<text text-anchor="start" x="753.5" y="-1327" font-family="Helvetica,sans-Serif" font-size="10.00"> int iNumObs)</text>
<text text-anchor="start" x="753.5" y="-1316" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t reset()</text>
<text text-anchor="start" x="753.5" y="-1305" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compViterbi</text>
<text text-anchor="start" x="753.5" y="-1294" font-family="Helvetica,sans-Serif" font-size="10.00">(const float *const</text>
<text text-anchor="start" x="753.5" y="-1283" font-family="Helvetica,sans-Serif" font-size="10.00"> *const ppfPEmission,</text>
<text text-anchor="start" x="753.5" y="-1272" font-family="Helvetica,sans-Serif" font-size="10.00"> bool bUseLogLikelihood=true)</text>
<text text-anchor="start" x="753.5" y="-1261" font-family="Helvetica,sans-Serif" font-size="10.00">+ float getOverallProbability</text>
<text text-anchor="start" x="753.5" y="-1250" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="753.5" y="-1239" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getStateSequence</text>
<text text-anchor="start" x="753.5" y="-1228" font-family="Helvetica,sans-Serif" font-size="10.00">(int *pistateSequence) const</text>
<text text-anchor="start" x="753.5" y="-1217" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; &#160;CViterbi(const CViterbi</text>
<text text-anchor="start" x="753.5" y="-1206" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;that)</text>
<text text-anchor="start" x="753.5" y="-1195" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CViterbi &amp; operator</text>
<text text-anchor="start" x="753.5" y="-1184" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CViterbi &amp;c)</text>
<text text-anchor="start" x="753.5" y="-1173" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; void compProbability</text>
<text text-anchor="start" x="753.5" y="-1162" font-family="Helvetica,sans-Serif" font-size="10.00">_(const float *const</text>
<text text-anchor="start" x="753.5" y="-1151" font-family="Helvetica,sans-Serif" font-size="10.00"> *const ppfPEmission)</text>
<text text-anchor="start" x="753.5" y="-1140" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; void compLogLikelihood</text>
<text text-anchor="start" x="753.5" y="-1129" font-family="Helvetica,sans-Serif" font-size="10.00">_(const float *const *const</text>
<text text-anchor="start" x="753.5" y="-1118" font-family="Helvetica,sans-Serif" font-size="10.00"> ppfPEmission)</text>
<text text-anchor="middle" x="821.5" y="-1107" font-family="Helvetica,sans-Serif" font-size="10.00">}</text>
</a>
</g>
</g>
<!-- Node8&#45;&gt;Node2 -->
<g id="edge7" class="edge">
<title>Node8&#45;&gt;Node2</title>
<path fill="none" stroke="#404040" d="M751.54,-1099.83C726.72,-1022.6 698.45,-934.65 672.27,-853.19"/>
<polygon fill="none" stroke="#404040" points="672.26,-853.17 666.62,-848.68 668.59,-841.74 674.23,-846.23 672.26,-853.17"/>
<text text-anchor="middle" x="768" y="-1052" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCViterbi</text>
</g>
<!-- Node9 -->
<g id="node9" class="node">
<title>Node9</title>
<g id="a_node9"><a xlink:href="a00442.xhtml" target="_top" xlink:title="open, read, and write audio files">
<polygon fill="white" stroke="#666666" points="984.5,-1031 822.5,-1031 822.5,-121 984.5,-121 984.5,-1031"/>
<text text-anchor="middle" x="903.5" y="-1019" font-family="Helvetica,sans-Serif" font-size="10.00">{CAudioFileIf</text>
<text text-anchor="start" x="830.5" y="-1008" font-family="Helvetica,sans-Serif" font-size="10.00">|# static const long long</text>
<text text-anchor="start" x="830.5" y="-997" font-family="Helvetica,sans-Serif" font-size="10.00"> int m_kiDefBlockLength</text>
<text text-anchor="start" x="830.5" y="-986" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; FileIoType_t m_eIoType</text>
<text text-anchor="start" x="830.5" y="-975" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; bool m_bWithClipping</text>
<text text-anchor="start" x="830.5" y="-964" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; bool m_bIsInitialized</text>
<text text-anchor="start" x="830.5" y="-953" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iNumBytesPerSample</text>
<text text-anchor="start" x="830.5" y="-942" font-family="Helvetica,sans-Serif" font-size="10.00">|+ virtual Error_t reset</text>
<text text-anchor="start" x="830.5" y="-931" font-family="Helvetica,sans-Serif" font-size="10.00">(bool bFreeMemory=false)</text>
<text text-anchor="start" x="830.5" y="-920" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Error_t openFile</text>
<text text-anchor="start" x="830.5" y="-909" font-family="Helvetica,sans-Serif" font-size="10.00">(std::string cAudioFileName,</text>
<text text-anchor="start" x="830.5" y="-898" font-family="Helvetica,sans-Serif" font-size="10.00"> FileIoType_t eIoType, FileSpec</text>
<text text-anchor="start" x="830.5" y="-887" font-family="Helvetica,sans-Serif" font-size="10.00">_t const *psFileSpec=0)=0</text>
<text text-anchor="start" x="830.5" y="-876" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Error_t closeFile()=0</text>
<text text-anchor="start" x="830.5" y="-865" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Error_t readData</text>
<text text-anchor="start" x="830.5" y="-854" font-family="Helvetica,sans-Serif" font-size="10.00">(float **ppfAudioData,</text>
<text text-anchor="start" x="830.5" y="-843" font-family="Helvetica,sans-Serif" font-size="10.00"> long long int &amp;iNumFrames)</text>
<text text-anchor="start" x="830.5" y="-832" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Error_t writeData</text>
<text text-anchor="start" x="830.5" y="-821" font-family="Helvetica,sans-Serif" font-size="10.00">(const float *const *const</text>
<text text-anchor="start" x="830.5" y="-810" font-family="Helvetica,sans-Serif" font-size="10.00"> ppfAudioData, long long int</text>
<text text-anchor="start" x="830.5" y="-799" font-family="Helvetica,sans-Serif" font-size="10.00"> iNumFrames)</text>
<text text-anchor="start" x="830.5" y="-788" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getFileSpec</text>
<text text-anchor="start" x="830.5" y="-777" font-family="Helvetica,sans-Serif" font-size="10.00">(FileSpec_t &amp;sFileSpec)</text>
<text text-anchor="start" x="830.5" y="-766" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Error_t setPosition</text>
<text text-anchor="start" x="830.5" y="-755" font-family="Helvetica,sans-Serif" font-size="10.00">(long long iFrame=0)</text>
<text text-anchor="start" x="830.5" y="-744" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t setPosition</text>
<text text-anchor="start" x="830.5" y="-733" font-family="Helvetica,sans-Serif" font-size="10.00">(double dTimeInS=.0)</text>
<text text-anchor="start" x="830.5" y="-722" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t setClippingEnabled</text>
<text text-anchor="start" x="830.5" y="-711" font-family="Helvetica,sans-Serif" font-size="10.00">(bool bisEnabled=true)</text>
<text text-anchor="start" x="830.5" y="-700" font-family="Helvetica,sans-Serif" font-size="10.00">+ bool isClippingEnabled()</text>
<text text-anchor="start" x="830.5" y="-689" font-family="Helvetica,sans-Serif" font-size="10.00">and 7 more...</text>
<text text-anchor="start" x="830.5" y="-678" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="830.5" y="-667" font-family="Helvetica,sans-Serif" font-size="10.00">(CAudioFileIf *&amp;pCInstance)</text>
<text text-anchor="start" x="830.5" y="-656" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="830.5" y="-645" font-family="Helvetica,sans-Serif" font-size="10.00">(CAudioFileIf *&amp;pCInstance)</text>
<text text-anchor="start" x="830.5" y="-634" font-family="Helvetica,sans-Serif" font-size="10.00"># &#160;CAudioFileIf()</text>
<text text-anchor="start" x="830.5" y="-623" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CAudioFileIf()</text>
<text text-anchor="start" x="830.5" y="-612" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual Error_t freeMemory_()</text>
<text text-anchor="start" x="830.5" y="-601" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual Error_t allocMemory_()</text>
<text text-anchor="start" x="830.5" y="-590" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t setInitialized</text>
<text text-anchor="start" x="830.5" y="-579" font-family="Helvetica,sans-Serif" font-size="10.00">_(bool bInitialized=true)</text>
<text text-anchor="start" x="830.5" y="-568" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t setIoType_</text>
<text text-anchor="start" x="830.5" y="-557" font-family="Helvetica,sans-Serif" font-size="10.00">(FileIoType_t eIoType)</text>
<text text-anchor="start" x="830.5" y="-546" font-family="Helvetica,sans-Serif" font-size="10.00"># FileIoType_t getIoType</text>
<text text-anchor="start" x="830.5" y="-535" font-family="Helvetica,sans-Serif" font-size="10.00">_() const</text>
<text text-anchor="start" x="830.5" y="-524" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t setFileSpec</text>
<text text-anchor="start" x="830.5" y="-513" font-family="Helvetica,sans-Serif" font-size="10.00">_(const FileSpec_t *pFileSpec)</text>
<text text-anchor="start" x="830.5" y="-502" font-family="Helvetica,sans-Serif" font-size="10.00"># int getNumChannels</text>
<text text-anchor="start" x="830.5" y="-491" font-family="Helvetica,sans-Serif" font-size="10.00">_() const</text>
<text text-anchor="start" x="830.5" y="-480" font-family="Helvetica,sans-Serif" font-size="10.00"># long long convFrames2Bytes</text>
<text text-anchor="start" x="830.5" y="-469" font-family="Helvetica,sans-Serif" font-size="10.00">_(long long iNumFrames)</text>
<text text-anchor="start" x="830.5" y="-458" font-family="Helvetica,sans-Serif" font-size="10.00"># long long convBytes2Frames</text>
<text text-anchor="start" x="830.5" y="-447" font-family="Helvetica,sans-Serif" font-size="10.00">_(long long iNumFrames)</text>
<text text-anchor="start" x="830.5" y="-436" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t setNumBytesPerSample</text>
<text text-anchor="start" x="830.5" y="-425" font-family="Helvetica,sans-Serif" font-size="10.00">_(int iNumBytes)</text>
<text text-anchor="start" x="830.5" y="-414" font-family="Helvetica,sans-Serif" font-size="10.00"># int getNumBytesPerSample</text>
<text text-anchor="start" x="830.5" y="-403" font-family="Helvetica,sans-Serif" font-size="10.00">_() const</text>
<text text-anchor="start" x="830.5" y="-392" font-family="Helvetica,sans-Serif" font-size="10.00"># int getNumBitsPerSample</text>
<text text-anchor="start" x="830.5" y="-381" font-family="Helvetica,sans-Serif" font-size="10.00">_() const</text>
<text text-anchor="start" x="830.5" y="-370" font-family="Helvetica,sans-Serif" font-size="10.00"># float clip2Range_(float</text>
<text text-anchor="start" x="830.5" y="-359" font-family="Helvetica,sans-Serif" font-size="10.00"> fSample2Clip, float fMin,</text>
<text text-anchor="start" x="830.5" y="-348" font-family="Helvetica,sans-Serif" font-size="10.00"> float fMax)</text>
<text text-anchor="start" x="830.5" y="-337" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; &#160;CAudioFileIf(const</text>
<text text-anchor="start" x="830.5" y="-326" font-family="Helvetica,sans-Serif" font-size="10.00"> CAudioFileIf &amp;that)</text>
<text text-anchor="start" x="830.5" y="-315" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CAudioFileIf &amp; operator</text>
<text text-anchor="start" x="830.5" y="-304" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CAudioFileIf &amp;c)</text>
<text text-anchor="start" x="830.5" y="-293" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; virtual Error_t initDefaults_()</text>
<text text-anchor="start" x="830.5" y="-282" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; virtual long long int</text>
<text text-anchor="start" x="830.5" y="-271" font-family="Helvetica,sans-Serif" font-size="10.00"> readDataIntern_(float</text>
<text text-anchor="start" x="830.5" y="-260" font-family="Helvetica,sans-Serif" font-size="10.00"> **ppfAudioData, long long</text>
<text text-anchor="start" x="830.5" y="-249" font-family="Helvetica,sans-Serif" font-size="10.00"> int iLength)=0</text>
<text text-anchor="start" x="830.5" y="-238" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; virtual long long int</text>
<text text-anchor="start" x="830.5" y="-227" font-family="Helvetica,sans-Serif" font-size="10.00"> writeDataIntern_(const</text>
<text text-anchor="start" x="830.5" y="-216" font-family="Helvetica,sans-Serif" font-size="10.00"> float *const *const ppfAudioData,</text>
<text text-anchor="start" x="830.5" y="-205" font-family="Helvetica,sans-Serif" font-size="10.00"> long long int iLength)=0</text>
<text text-anchor="start" x="830.5" y="-194" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; virtual long long getLength</text>
<text text-anchor="start" x="830.5" y="-183" font-family="Helvetica,sans-Serif" font-size="10.00">Intern_()=0</text>
<text text-anchor="start" x="830.5" y="-172" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; virtual long long getPosition</text>
<text text-anchor="start" x="830.5" y="-161" font-family="Helvetica,sans-Serif" font-size="10.00">Intern_()=0</text>
<text text-anchor="start" x="830.5" y="-150" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; virtual Error_t setPosition</text>
<text text-anchor="start" x="830.5" y="-139" font-family="Helvetica,sans-Serif" font-size="10.00">Intern_(long long iFrame)=0</text>
<text text-anchor="middle" x="903.5" y="-128" font-family="Helvetica,sans-Serif" font-size="10.00">}</text>
</a>
</g>
</g>
<!-- Node9&#45;&gt;Node1 -->
<g id="edge8" class="edge">
<title>Node9&#45;&gt;Node1</title>
<path fill="none" stroke="#404040" d="M822.44,-384.92C776.8,-277.9 723.4,-152.66 694.89,-85.81"/>
<polygon fill="none" stroke="#404040" points="694.74,-85.45 688.7,-81.5 690.03,-74.42 696.06,-78.37 694.74,-85.45"/>
<text text-anchor="middle" x="734.5" y="-95" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;m_pCAudioFile</text>
</g>
<!-- Node10 -->
<g id="node10" class="node">
<title>Node10</title>
<g id="a_node10"><a xlink:href="a00446.xhtml" target="_top" xlink:title="structure containing basic data specs of the file">
<polygon fill="white" stroke="#666666" points="1065,-1355.5 916,-1355.5 916,-1281.5 1065,-1281.5 1065,-1355.5"/>
<text text-anchor="middle" x="990.5" y="-1343.5" font-family="Helvetica,sans-Serif" font-size="10.00">{CAudioFileIf::FileSpec_t</text>
<text text-anchor="start" x="924" y="-1332.5" font-family="Helvetica,sans-Serif" font-size="10.00">|+ FileFormat_t eFormat</text>
<text text-anchor="start" x="924" y="-1321.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ BitStream_t eBitStreamType</text>
<text text-anchor="start" x="924" y="-1310.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ int iNumChannels</text>
<text text-anchor="start" x="924" y="-1299.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ float fSampleRateInHz</text>
<text text-anchor="middle" x="990.5" y="-1288.5" font-family="Helvetica,sans-Serif" font-size="10.00">|}</text>
</a>
</g>
</g>
<!-- Node10&#45;&gt;Node9 -->
<g id="edge9" class="edge">
<title>Node10&#45;&gt;Node9</title>
<path fill="none" stroke="#404040" d="M986.24,-1281.28C980.62,-1233.38 970.03,-1143.23 958.25,-1043.03"/>
<polygon fill="none" stroke="#404040" points="958.25,-1043 953.58,-1037.51 956.85,-1031.09 961.52,-1036.58 958.25,-1043"/>
<text text-anchor="middle" x="997.5" y="-1052" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;m_CurrFileSpec</text>
</g>
</g>
</svg>
