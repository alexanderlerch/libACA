<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 4.0.0 (20220602.1335)
 -->
<!-- Title: CChordFromFile Pages: 1 -->
<svg width="1068pt" height="2504pt"
 viewBox="0.00 0.00 1067.50 2504.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 2500)">
<title>CChordFromFile</title>
<polygon fill="white" stroke="transparent" points="-4,4 -4,-2500 1063.5,-2500 1063.5,4 -4,4"/>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="class for computation of chord progression from a file">
<polygon fill="#bfbfbf" stroke="black" points="589,-0.5 589,-90.5 749,-90.5 749,-0.5 589,-0.5"/>
<text text-anchor="middle" x="669" y="-78.5" font-family="Helvetica,sans-Serif" font-size="10.00">CChordFromFile</text>
<polyline fill="none" stroke="black" points="589,-71.5 749,-71.5 "/>
<text text-anchor="middle" x="669" y="-59.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="589,-52.5 749,-52.5 "/>
<text text-anchor="start" x="597" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CChordFromFile(std</text>
<text text-anchor="start" x="597" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">::string strAudioFilePath,</text>
<text text-anchor="start" x="597" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iBlockLength, int iHopLength)</text>
<text text-anchor="start" x="597" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CChordFromFile()</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="a00454.xhtml" target="_top" xlink:title="class for computation of a chord progression from either a file or a vector">
<polygon fill="white" stroke="black" points="493,-320 493,-872 663,-872 663,-320 493,-320"/>
<text text-anchor="middle" x="578" y="-860" font-family="Helvetica,sans-Serif" font-size="10.00">CChordIf</text>
<polyline fill="none" stroke="black" points="493,-853 663,-853 "/>
<text text-anchor="start" x="501" y="-841" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iBlockLength</text>
<text text-anchor="start" x="501" y="-830" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iHopLength</text>
<text text-anchor="start" x="501" y="-819" font-family="Helvetica,sans-Serif" font-size="10.00"># float m_fSampleRate</text>
<text text-anchor="start" x="501" y="-808" font-family="Helvetica,sans-Serif" font-size="10.00"># float * m_pfProcBuff2</text>
<text text-anchor="start" x="501" y="-797" font-family="Helvetica,sans-Serif" font-size="10.00"># float * m_pfProcBuff1</text>
<text text-anchor="start" x="501" y="-786" font-family="Helvetica,sans-Serif" font-size="10.00"># float ** m_ppfChordProbs</text>
<text text-anchor="start" x="501" y="-775" font-family="Helvetica,sans-Serif" font-size="10.00"># bool m_bIsInitialized</text>
<polyline fill="none" stroke="black" points="493,-768 663,-768 "/>
<text text-anchor="start" x="501" y="-756" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getNumBlocks</text>
<text text-anchor="start" x="501" y="-745" font-family="Helvetica,sans-Serif" font-size="10.00">(int &amp;iNumBlocks) const</text>
<text text-anchor="start" x="501" y="-734" font-family="Helvetica,sans-Serif" font-size="10.00">+ int getNumBlocks()</text>
<text text-anchor="start" x="501" y="-723" font-family="Helvetica,sans-Serif" font-size="10.00"> const</text>
<text text-anchor="start" x="501" y="-712" font-family="Helvetica,sans-Serif" font-size="10.00">+ float getTimeStamp</text>
<text text-anchor="start" x="501" y="-701" font-family="Helvetica,sans-Serif" font-size="10.00">(int iBlockIdx) const</text>
<text text-anchor="start" x="501" y="-690" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getTimeStamps</text>
<text text-anchor="start" x="501" y="-679" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfAxisTicks) const</text>
<text text-anchor="start" x="501" y="-668" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compChords</text>
<text text-anchor="start" x="501" y="-657" font-family="Helvetica,sans-Serif" font-size="10.00">(Chords_t *peChord,</text>
<text text-anchor="start" x="501" y="-646" font-family="Helvetica,sans-Serif" font-size="10.00"> bool bWithViterbi=true)</text>
<text text-anchor="start" x="501" y="-635" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="501" y="-624" font-family="Helvetica,sans-Serif" font-size="10.00">(CChordIf *&amp;pCInstance,</text>
<text text-anchor="start" x="501" y="-613" font-family="Helvetica,sans-Serif" font-size="10.00"> const std::string &amp;strAudioFile</text>
<text text-anchor="start" x="501" y="-602" font-family="Helvetica,sans-Serif" font-size="10.00">Path, int iBlockLength=8192,</text>
<text text-anchor="start" x="501" y="-591" font-family="Helvetica,sans-Serif" font-size="10.00"> int iHopLength=2048)</text>
<text text-anchor="start" x="501" y="-580" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="501" y="-569" font-family="Helvetica,sans-Serif" font-size="10.00">(CChordIf *&amp;pCInstance,</text>
<text text-anchor="start" x="501" y="-558" font-family="Helvetica,sans-Serif" font-size="10.00"> const float *pfAudio,</text>
<text text-anchor="start" x="501" y="-547" font-family="Helvetica,sans-Serif" font-size="10.00"> long long iNumSamples,</text>
<text text-anchor="start" x="501" y="-536" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate, int iBlockLength</text>
<text text-anchor="start" x="501" y="-525" font-family="Helvetica,sans-Serif" font-size="10.00">=8192, int iHopLength=2048)</text>
<text text-anchor="start" x="501" y="-514" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="501" y="-503" font-family="Helvetica,sans-Serif" font-size="10.00">(CChordIf *&amp;pCInstance)</text>
<text text-anchor="start" x="501" y="-492" font-family="Helvetica,sans-Serif" font-size="10.00">+ static std::string</text>
<text text-anchor="start" x="501" y="-481" font-family="Helvetica,sans-Serif" font-size="10.00"> getChordString(Chords</text>
<text text-anchor="start" x="501" y="-470" font-family="Helvetica,sans-Serif" font-size="10.00">_t eChordIdx)</text>
<text text-anchor="start" x="501" y="-459" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Chords_t getChord</text>
<text text-anchor="start" x="501" y="-448" font-family="Helvetica,sans-Serif" font-size="10.00">IdxFromString(std::string</text>
<text text-anchor="start" x="501" y="-437" font-family="Helvetica,sans-Serif" font-size="10.00"> sChordString)</text>
<text text-anchor="start" x="501" y="-426" font-family="Helvetica,sans-Serif" font-size="10.00"># CChordIf()</text>
<text text-anchor="start" x="501" y="-415" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CChordIf()</text>
<text text-anchor="start" x="501" y="-404" font-family="Helvetica,sans-Serif" font-size="10.00"># CChordIf(const CChordIf</text>
<text text-anchor="start" x="501" y="-393" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;that)</text>
<text text-anchor="start" x="501" y="-382" font-family="Helvetica,sans-Serif" font-size="10.00"># CChordIf &amp; operator</text>
<text text-anchor="start" x="501" y="-371" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CChordIf &amp;c)</text>
<text text-anchor="start" x="501" y="-360" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t reset_()</text>
<text text-anchor="start" x="501" y="-349" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t init_()</text>
<text text-anchor="start" x="501" y="-338" font-family="Helvetica,sans-Serif" font-size="10.00"># void initViterbi_()</text>
<text text-anchor="start" x="501" y="-327" font-family="Helvetica,sans-Serif" font-size="10.00"># void computeMagSpectrum_()</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M625.28,-310.04C639.49,-224.39 653.47,-140.14 661.66,-90.76"/>
<polygon fill="none" stroke="midnightblue" points="621.82,-309.51 623.63,-319.95 628.72,-310.65 621.82,-309.51"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="a00606.xhtml" target="_top" xlink:title="class for audio normalization offering three options">
<polygon fill="white" stroke="black" points="0,-1228 0,-1461 150,-1461 150,-1228 0,-1228"/>
<text text-anchor="middle" x="75" y="-1449" font-family="Helvetica,sans-Serif" font-size="10.00">CNormalizeAudio</text>
<polyline fill="none" stroke="black" points="0,-1442 150,-1442 "/>
<text text-anchor="start" x="8" y="-1430" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float m_fScaleFactor</text>
<polyline fill="none" stroke="black" points="0,-1423 150,-1423 "/>
<text text-anchor="start" x="8" y="-1411" font-family="Helvetica,sans-Serif" font-size="10.00">+ CNormalizeAudio(CAudioFile</text>
<text text-anchor="start" x="8" y="-1400" font-family="Helvetica,sans-Serif" font-size="10.00">If *pCAudioFile)</text>
<text text-anchor="start" x="8" y="-1389" font-family="Helvetica,sans-Serif" font-size="10.00">+ CNormalizeAudio(const</text>
<text text-anchor="start" x="8" y="-1378" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfAudioBuff, long</text>
<text text-anchor="start" x="8" y="-1367" font-family="Helvetica,sans-Serif" font-size="10.00"> long iAudioLength)</text>
<text text-anchor="start" x="8" y="-1356" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CNormalizeAudio()</text>
<text text-anchor="start" x="8" y="-1345" font-family="Helvetica,sans-Serif" font-size="10.00">+ void normalizeBlock</text>
<text text-anchor="start" x="8" y="-1334" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfAudioBlock,</text>
<text text-anchor="start" x="8" y="-1323" font-family="Helvetica,sans-Serif" font-size="10.00"> long long iNumSamples)</text>
<text text-anchor="start" x="8" y="-1312" font-family="Helvetica,sans-Serif" font-size="10.00">+ static void normalizeSignal</text>
<text text-anchor="start" x="8" y="-1301" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfAudio, long long</text>
<text text-anchor="start" x="8" y="-1290" font-family="Helvetica,sans-Serif" font-size="10.00"> iNumSamples)</text>
<text text-anchor="start" x="8" y="-1279" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CNormalizeAudio()</text>
<text text-anchor="start" x="8" y="-1268" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CNormalizeAudio(const</text>
<text text-anchor="start" x="8" y="-1257" font-family="Helvetica,sans-Serif" font-size="10.00"> CNormalizeAudio &amp;that)</text>
<text text-anchor="start" x="8" y="-1246" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CNormalizeAudio &amp; operator</text>
<text text-anchor="start" x="8" y="-1235" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CNormalizeAudio &amp;c)</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node2 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node2</title>
<path fill="none" stroke="#404040" d="M105.68,-1227.87C119.07,-1186.44 136.84,-1140.29 159,-1101 248.71,-941.93 390.61,-784.23 484.01,-688.69"/>
<polygon fill="none" stroke="#404040" points="484.21,-688.49 485.56,-681.41 492.62,-679.93 491.27,-687.01 484.21,-688.49"/>
<text text-anchor="middle" x="211.5" y="-1075" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCNormalize</text>
</g>
<!-- Node4 -->
<g id="node4" class="node">
<title>Node4</title>
<g id="a_node4"><a xlink:href="a00542.xhtml" target="_top" xlink:title="forward declaration">
<polygon fill="white" stroke="black" points="168,-1129 168,-1560 328,-1560 328,-1129 168,-1129"/>
<text text-anchor="middle" x="248" y="-1548" font-family="Helvetica,sans-Serif" font-size="10.00">CBlockAudioIf</text>
<polyline fill="none" stroke="black" points="168,-1541 328,-1541 "/>
<text text-anchor="start" x="176" y="-1529" font-family="Helvetica,sans-Serif" font-size="10.00"># long long m_iNumBlocks</text>
<text text-anchor="start" x="176" y="-1518" font-family="Helvetica,sans-Serif" font-size="10.00"># long long m_iCurrBlock</text>
<text text-anchor="start" x="176" y="-1507" font-family="Helvetica,sans-Serif" font-size="10.00"># long long m_iAudioLength</text>
<text text-anchor="start" x="176" y="-1496" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iBlockLength</text>
<text text-anchor="start" x="176" y="-1485" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iNumChannels</text>
<text text-anchor="start" x="176" y="-1474" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iHopLength</text>
<text text-anchor="start" x="176" y="-1463" font-family="Helvetica,sans-Serif" font-size="10.00"># float m_fSampleRate</text>
<polyline fill="none" stroke="black" points="168,-1456 328,-1456 "/>
<text text-anchor="start" x="176" y="-1444" font-family="Helvetica,sans-Serif" font-size="10.00">+ long long getNumBlocks</text>
<text text-anchor="start" x="176" y="-1433" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="176" y="-1422" font-family="Helvetica,sans-Serif" font-size="10.00">+ long long getLengthInSamples</text>
<text text-anchor="start" x="176" y="-1411" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="176" y="-1400" font-family="Helvetica,sans-Serif" font-size="10.00">+ float getTimeStamp</text>
<text text-anchor="start" x="176" y="-1389" font-family="Helvetica,sans-Serif" font-size="10.00">(long long iBlockIdx)</text>
<text text-anchor="start" x="176" y="-1378" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual bool isEndOfData</text>
<text text-anchor="start" x="176" y="-1367" font-family="Helvetica,sans-Serif" font-size="10.00">() const =0</text>
<text text-anchor="start" x="176" y="-1356" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual int getNextBlock</text>
<text text-anchor="start" x="176" y="-1345" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfBlock, float</text>
<text text-anchor="start" x="176" y="-1334" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfTimeStampInS=0)=0</text>
<text text-anchor="start" x="176" y="-1323" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="176" y="-1312" font-family="Helvetica,sans-Serif" font-size="10.00">(CBlockAudioIf *&amp;pCInstance,</text>
<text text-anchor="start" x="176" y="-1301" font-family="Helvetica,sans-Serif" font-size="10.00"> CAudioFileIf *pCAudioFile,</text>
<text text-anchor="start" x="176" y="-1290" font-family="Helvetica,sans-Serif" font-size="10.00"> int iBlockLength, int iHopLength)</text>
<text text-anchor="start" x="176" y="-1279" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="176" y="-1268" font-family="Helvetica,sans-Serif" font-size="10.00">(CBlockAudioIf *&amp;pCInstance,</text>
<text text-anchor="start" x="176" y="-1257" font-family="Helvetica,sans-Serif" font-size="10.00"> const float *pfAudioBuff,</text>
<text text-anchor="start" x="176" y="-1246" font-family="Helvetica,sans-Serif" font-size="10.00"> long long iAudioLength, int</text>
<text text-anchor="start" x="176" y="-1235" font-family="Helvetica,sans-Serif" font-size="10.00"> iBlockLength, int iHopLength,</text>
<text text-anchor="start" x="176" y="-1224" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate)</text>
<text text-anchor="start" x="176" y="-1213" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="176" y="-1202" font-family="Helvetica,sans-Serif" font-size="10.00">(CBlockAudioIf *&amp;pCInstance)</text>
<text text-anchor="start" x="176" y="-1191" font-family="Helvetica,sans-Serif" font-size="10.00"># CBlockAudioIf()</text>
<text text-anchor="start" x="176" y="-1180" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CBlockAudioIf()</text>
<text text-anchor="start" x="176" y="-1169" font-family="Helvetica,sans-Serif" font-size="10.00"># CBlockAudioIf(const</text>
<text text-anchor="start" x="176" y="-1158" font-family="Helvetica,sans-Serif" font-size="10.00"> CBlockAudioIf &amp;that)</text>
<text text-anchor="start" x="176" y="-1147" font-family="Helvetica,sans-Serif" font-size="10.00"># CBlockAudioIf &amp; operator</text>
<text text-anchor="start" x="176" y="-1136" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CBlockAudioIf &amp;c)</text>
</a>
</g>
</g>
<!-- Node4&#45;&gt;Node2 -->
<g id="edge3" class="edge">
<title>Node4&#45;&gt;Node2</title>
<path fill="none" stroke="#404040" d="M325.54,-1128.85C329.34,-1119.41 333.17,-1110.09 337,-1101 383.2,-991.38 440.45,-871.12 487.56,-775.56"/>
<polygon fill="none" stroke="#404040" points="487.64,-775.39 486.71,-768.24 492.96,-764.63 493.89,-771.78 487.64,-775.39"/>
<text text-anchor="middle" x="390.5" y="-1075" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCBlockAudio</text>
</g>
<!-- Node5 -->
<g id="node5" class="node">
<title>Node5</title>
<g id="a_node5"><a xlink:href="a00458.xhtml" target="_top" xlink:title="class for computation of a chord from a magnitude spectrum">
<polygon fill="white" stroke="black" points="346,-1195 346,-1494 516,-1494 516,-1195 346,-1195"/>
<text text-anchor="middle" x="431" y="-1482" font-family="Helvetica,sans-Serif" font-size="10.00">CChordFromBlockIf</text>
<polyline fill="none" stroke="black" points="346,-1475 516,-1475 "/>
<text text-anchor="start" x="354" y="-1463" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iMagSpecLength</text>
<text text-anchor="start" x="354" y="-1452" font-family="Helvetica,sans-Serif" font-size="10.00"># float m_fSampleRate</text>
<text text-anchor="start" x="354" y="-1441" font-family="Helvetica,sans-Serif" font-size="10.00"># float * m_pfPitchChroma</text>
<text text-anchor="start" x="354" y="-1430" font-family="Helvetica,sans-Serif" font-size="10.00"># float ** m_ppfTemplateMatrix</text>
<polyline fill="none" stroke="black" points="346,-1423 516,-1423 "/>
<text text-anchor="start" x="354" y="-1411" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Error_t compChord</text>
<text text-anchor="start" x="354" y="-1400" font-family="Helvetica,sans-Serif" font-size="10.00">Prob(float *pfChordProb,</text>
<text text-anchor="start" x="354" y="-1389" font-family="Helvetica,sans-Serif" font-size="10.00"> const float *pfIn)</text>
<text text-anchor="start" x="354" y="-1378" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="354" y="-1367" font-family="Helvetica,sans-Serif" font-size="10.00">(CChordFromBlockIf *&amp;pCInstance,</text>
<text text-anchor="start" x="354" y="-1356" font-family="Helvetica,sans-Serif" font-size="10.00"> int iMagSpecLength, float</text>
<text text-anchor="start" x="354" y="-1345" font-family="Helvetica,sans-Serif" font-size="10.00"> fSampleRate=1.F)</text>
<text text-anchor="start" x="354" y="-1334" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="354" y="-1323" font-family="Helvetica,sans-Serif" font-size="10.00">(CChordFromBlockIf *&amp;pCInstance)</text>
<text text-anchor="start" x="354" y="-1312" font-family="Helvetica,sans-Serif" font-size="10.00"># CChordFromBlockIf</text>
<text text-anchor="start" x="354" y="-1301" font-family="Helvetica,sans-Serif" font-size="10.00">(int iMagSpecLength,</text>
<text text-anchor="start" x="354" y="-1290" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate)</text>
<text text-anchor="start" x="354" y="-1279" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CChordFromBlockIf()</text>
<text text-anchor="start" x="354" y="-1268" font-family="Helvetica,sans-Serif" font-size="10.00"># CChordFromBlockIf</text>
<text text-anchor="start" x="354" y="-1257" font-family="Helvetica,sans-Serif" font-size="10.00">(const CChordFromBlockIf</text>
<text text-anchor="start" x="354" y="-1246" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;that)</text>
<text text-anchor="start" x="354" y="-1235" font-family="Helvetica,sans-Serif" font-size="10.00"># CChordFromBlockIf &amp;</text>
<text text-anchor="start" x="354" y="-1224" font-family="Helvetica,sans-Serif" font-size="10.00"> operator=(const CChordFrom</text>
<text text-anchor="start" x="354" y="-1213" font-family="Helvetica,sans-Serif" font-size="10.00">BlockIf &amp;c)</text>
<text text-anchor="start" x="354" y="-1202" font-family="Helvetica,sans-Serif" font-size="10.00"># void genTemplateMatrix_()</text>
</a>
</g>
</g>
<!-- Node5&#45;&gt;Node2 -->
<g id="edge4" class="edge">
<title>Node5&#45;&gt;Node2</title>
<path fill="none" stroke="#404040" d="M460.31,-1194.68C477.8,-1105.81 500.62,-989.96 521.5,-883.93"/>
<polygon fill="none" stroke="#404040" points="521.52,-883.83 518.75,-877.17 523.84,-872.05 526.6,-878.71 521.52,-883.83"/>
<text text-anchor="middle" x="512.5" y="-1075" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCChord</text>
</g>
<!-- Node6 -->
<g id="node6" class="node">
<title>Node6</title>
<g id="a_node6"><a xlink:href="a00470.xhtml" target="_top" xlink:title="class for computation of a feature from a block of data (e.g., time or magnitude spectrum)">
<polygon fill="white" stroke="black" points="337,-1635.5 337,-2495.5 525,-2495.5 525,-1635.5 337,-1635.5"/>
<text text-anchor="middle" x="431" y="-2483.5" font-family="Helvetica,sans-Serif" font-size="10.00">CFeatureFromBlockIf</text>
<polyline fill="none" stroke="black" points="337,-2476.5 525,-2476.5 "/>
<text text-anchor="start" x="345" y="-2464.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static const float</text>
<text text-anchor="start" x="345" y="-2453.5" font-family="Helvetica,sans-Serif" font-size="10.00"> m_kfFloatThresh</text>
<text text-anchor="start" x="345" y="-2442.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CFeatureIf::Feature</text>
<text text-anchor="start" x="345" y="-2431.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t m_eFeatureIdx</text>
<text text-anchor="start" x="345" y="-2420.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iDataLength</text>
<text text-anchor="start" x="345" y="-2409.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float m_fSampleRate</text>
<text text-anchor="start" x="345" y="-2398.5" font-family="Helvetica,sans-Serif" font-size="10.00"># const std::map&lt; CFeature</text>
<text text-anchor="start" x="345" y="-2387.5" font-family="Helvetica,sans-Serif" font-size="10.00">If::Feature_t, std::function</text>
<text text-anchor="start" x="345" y="-2376.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; float(const float *, int,</text>
<text text-anchor="start" x="345" y="-2365.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float)&gt; &gt; m_DispatchMap</text>
<polyline fill="none" stroke="black" points="337,-2358.5 525,-2358.5 "/>
<text text-anchor="start" x="345" y="-2346.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual int getFeatureDimensions</text>
<text text-anchor="start" x="345" y="-2335.5" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="345" y="-2324.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CFeatureIf::Feature</text>
<text text-anchor="start" x="345" y="-2313.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t getFeatureIdx() const</text>
<text text-anchor="start" x="345" y="-2302.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Error_t compFeature</text>
<text text-anchor="start" x="345" y="-2291.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfFeature, const</text>
<text text-anchor="start" x="345" y="-2280.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfIn)</text>
<text text-anchor="start" x="345" y="-2269.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual bool hasAdditional</text>
<text text-anchor="start" x="345" y="-2258.5" font-family="Helvetica,sans-Serif" font-size="10.00">Param() const</text>
<text text-anchor="start" x="345" y="-2247.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Error_t setAdditional</text>
<text text-anchor="start" x="345" y="-2236.5" font-family="Helvetica,sans-Serif" font-size="10.00">Param(float fParamValue)</text>
<text text-anchor="start" x="345" y="-2225.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="345" y="-2214.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CFeatureFromBlockIf</text>
<text text-anchor="start" x="345" y="-2203.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *&amp;pCInstance, CFeatureIf</text>
<text text-anchor="start" x="345" y="-2192.5" font-family="Helvetica,sans-Serif" font-size="10.00">::Feature_t eFeatureIdx,</text>
<text text-anchor="start" x="345" y="-2181.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="345" y="-2170.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="345" y="-2159.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CFeatureFromBlockIf *&amp;pCInstance)</text>
<text text-anchor="start" x="345" y="-2148.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="345" y="-2137.5" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralCentroid(const</text>
<text text-anchor="start" x="345" y="-2126.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfMagSpec, int</text>
<text text-anchor="start" x="345" y="-2115.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="345" y="-2104.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="345" y="-2093.5" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralCrestFactor(const</text>
<text text-anchor="start" x="345" y="-2082.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfMagSpec, int iDataLength,</text>
<text text-anchor="start" x="345" y="-2071.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate=1.F)</text>
<text text-anchor="start" x="345" y="-2060.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="345" y="-2049.5" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralDecrease(const</text>
<text text-anchor="start" x="345" y="-2038.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfMagSpec, int</text>
<text text-anchor="start" x="345" y="-2027.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="345" y="-2016.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="345" y="-2005.5" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralFlatness(const</text>
<text text-anchor="start" x="345" y="-1994.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfMagSpec, int</text>
<text text-anchor="start" x="345" y="-1983.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="345" y="-1972.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="345" y="-1961.5" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralFlux(const float</text>
<text text-anchor="start" x="345" y="-1950.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfMagSpec, const float</text>
<text text-anchor="start" x="345" y="-1939.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfPrevSpec, int iDataLength,</text>
<text text-anchor="start" x="345" y="-1928.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate=1.F)</text>
<text text-anchor="start" x="345" y="-1917.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="345" y="-1906.5" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralKurtosis(const</text>
<text text-anchor="start" x="345" y="-1895.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfMagSpec, int</text>
<text text-anchor="start" x="345" y="-1884.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="345" y="-1873.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="345" y="-1862.5" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralRolloff(const</text>
<text text-anchor="start" x="345" y="-1851.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfMagSpec, int</text>
<text text-anchor="start" x="345" y="-1840.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iDataLength, float fSampleRate</text>
<text text-anchor="start" x="345" y="-1829.5" font-family="Helvetica,sans-Serif" font-size="10.00">=1.F, float fKappa=.85F)</text>
<text text-anchor="start" x="345" y="-1818.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="345" y="-1807.5" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralSkewness(const</text>
<text text-anchor="start" x="345" y="-1796.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfMagSpec, int</text>
<text text-anchor="start" x="345" y="-1785.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="345" y="-1774.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 8 more...</text>
<text text-anchor="start" x="345" y="-1763.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CFeatureFromBlockIf()</text>
<text text-anchor="start" x="345" y="-1752.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CFeatureFromBlockIf</text>
<text text-anchor="start" x="345" y="-1741.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CFeatureIf::Feature</text>
<text text-anchor="start" x="345" y="-1730.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t eFeatureIdx, int iDataLength,</text>
<text text-anchor="start" x="345" y="-1719.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate)</text>
<text text-anchor="start" x="345" y="-1708.5" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CFeatureFromBlockIf()</text>
<text text-anchor="start" x="345" y="-1697.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CFeatureFromBlockIf</text>
<text text-anchor="start" x="345" y="-1686.5" font-family="Helvetica,sans-Serif" font-size="10.00">(const CFeatureFromBlockIf</text>
<text text-anchor="start" x="345" y="-1675.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;that)</text>
<text text-anchor="start" x="345" y="-1664.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CFeatureFromBlockIf</text>
<text text-anchor="start" x="345" y="-1653.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp; operator=(const CFeature</text>
<text text-anchor="start" x="345" y="-1642.5" font-family="Helvetica,sans-Serif" font-size="10.00">FromBlockIf &amp;c)</text>
</a>
</g>
</g>
<!-- Node6&#45;&gt;Node5 -->
<g id="edge5" class="edge">
<title>Node6&#45;&gt;Node5</title>
<path fill="none" stroke="#404040" d="M431,-1635.35C431,-1589.77 431,-1545.73 431,-1506.34"/>
<polygon fill="none" stroke="#404040" points="431,-1506.26 427,-1500.26 431,-1494.26 435,-1500.26 431,-1506.26"/>
<text text-anchor="middle" x="483.5" y="-1609" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCFeatureExtractor</text>
</g>
<!-- Node7 -->
<g id="node7" class="node">
<title>Node7</title>
<g id="a_node7"><a xlink:href="a00474.xhtml" target="_top" xlink:title="class for FFT computation with windowing">
<polygon fill="white" stroke="black" points="534,-1101.5 534,-1587.5 722,-1587.5 722,-1101.5 534,-1101.5"/>
<text text-anchor="middle" x="628" y="-1575.5" font-family="Helvetica,sans-Serif" font-size="10.00">CFft</text>
<polyline fill="none" stroke="black" points="534,-1568.5 722,-1568.5 "/>
<text text-anchor="start" x="542" y="-1556.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_pfProcBuff</text>
<text text-anchor="start" x="542" y="-1545.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_pfWindowBuff</text>
<text text-anchor="start" x="542" y="-1534.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iDataLength</text>
<text text-anchor="start" x="542" y="-1523.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iFftLength</text>
<text text-anchor="start" x="542" y="-1512.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Windowing_t m_ePrePostWindowOpt</text>
<text text-anchor="start" x="542" y="-1501.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; bool m_bIsInitialized</text>
<text text-anchor="start" x="542" y="-1490.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; static const float m_Pi</text>
<text text-anchor="start" x="542" y="-1479.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; static const float</text>
<text text-anchor="start" x="542" y="-1468.5" font-family="Helvetica,sans-Serif" font-size="10.00"> m_Pi2</text>
<polyline fill="none" stroke="black" points="534,-1461.5 722,-1461.5 "/>
<text text-anchor="start" x="542" y="-1449.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CFft()</text>
<text text-anchor="start" x="542" y="-1438.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CFft()</text>
<text text-anchor="start" x="542" y="-1427.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t init(int iBlockLength,</text>
<text text-anchor="start" x="542" y="-1416.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iZeroPadFactor=1, WindowFunction</text>
<text text-anchor="start" x="542" y="-1405.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t eWindow=kWindowHann, Windowing</text>
<text text-anchor="start" x="542" y="-1394.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t eWindowing=kPreWindow)</text>
<text text-anchor="start" x="542" y="-1383.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t reset()</text>
<text text-anchor="start" x="542" y="-1372.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t overrideWindow</text>
<text text-anchor="start" x="542" y="-1361.5" font-family="Helvetica,sans-Serif" font-size="10.00">(const float *pfNewWindow)</text>
<text text-anchor="start" x="542" y="-1350.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getWindow(float</text>
<text text-anchor="start" x="542" y="-1339.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfWindow) const</text>
<text text-anchor="start" x="542" y="-1328.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compFft(complex</text>
<text text-anchor="start" x="542" y="-1317.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t *pfSpectrum, const</text>
<text text-anchor="start" x="542" y="-1306.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfIn)</text>
<text text-anchor="start" x="542" y="-1295.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compInvFft</text>
<text text-anchor="start" x="542" y="-1284.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfOut, const</text>
<text text-anchor="start" x="542" y="-1273.5" font-family="Helvetica,sans-Serif" font-size="10.00"> complex_t *pfSpectrum)</text>
<text text-anchor="start" x="542" y="-1262.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getMagnitude</text>
<text text-anchor="start" x="542" y="-1251.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfMag, const</text>
<text text-anchor="start" x="542" y="-1240.5" font-family="Helvetica,sans-Serif" font-size="10.00"> complex_t *pfSpectrum)</text>
<text text-anchor="start" x="542" y="-1229.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const</text>
<text text-anchor="start" x="542" y="-1218.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getPhase(float</text>
<text text-anchor="start" x="542" y="-1207.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfPhase, const complex</text>
<text text-anchor="start" x="542" y="-1196.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t *pfSpectrum) const</text>
<text text-anchor="start" x="542" y="-1185.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 7 more...</text>
<text text-anchor="start" x="542" y="-1174.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CFft(const CFft &amp;that)</text>
<text text-anchor="start" x="542" y="-1163.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CFft &amp; operator=(const</text>
<text text-anchor="start" x="542" y="-1152.5" font-family="Helvetica,sans-Serif" font-size="10.00"> CFft &amp;c)</text>
<text text-anchor="start" x="542" y="-1141.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Error_t allocMemory_()</text>
<text text-anchor="start" x="542" y="-1130.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Error_t freeMemory_()</text>
<text text-anchor="start" x="542" y="-1119.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Error_t computeWindow</text>
<text text-anchor="start" x="542" y="-1108.5" font-family="Helvetica,sans-Serif" font-size="10.00">_(WindowFunction_t eWindow)</text>
</a>
</g>
</g>
<!-- Node7&#45;&gt;Node2 -->
<g id="edge6" class="edge">
<title>Node7&#45;&gt;Node2</title>
<path fill="none" stroke="#404040" d="M611.78,-1101.39C607.15,-1032.26 602.06,-956.25 597.27,-884.68"/>
<polygon fill="none" stroke="#404040" points="597.24,-884.28 592.85,-878.56 596.44,-872.31 600.83,-878.03 597.24,-884.28"/>
<text text-anchor="middle" x="634" y="-1075" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCFft</text>
</g>
<!-- Node8 -->
<g id="node8" class="node">
<title>Node8</title>
<g id="a_node8"><a xlink:href="a00630.xhtml" target="_top" xlink:title="viterbi algorithm">
<polygon fill="white" stroke="black" points="740,-1123.5 740,-1565.5 892,-1565.5 892,-1123.5 740,-1123.5"/>
<text text-anchor="middle" x="816" y="-1553.5" font-family="Helvetica,sans-Serif" font-size="10.00">CViterbi</text>
<polyline fill="none" stroke="black" points="740,-1546.5 892,-1546.5 "/>
<text text-anchor="start" x="748" y="-1534.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float ** m_ppfProb</text>
<text text-anchor="start" x="748" y="-1523.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float ** m_ppfTransProb</text>
<text text-anchor="start" x="748" y="-1512.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_pfStart</text>
<text text-anchor="start" x="748" y="-1501.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float m_fOverallProb</text>
<text text-anchor="start" x="748" y="-1490.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; unsigned int ** m_ppiPathIdx</text>
<text text-anchor="start" x="748" y="-1479.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iNumStates</text>
<text text-anchor="start" x="748" y="-1468.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iNumObs</text>
<text text-anchor="start" x="748" y="-1457.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iEndState</text>
<text text-anchor="start" x="748" y="-1446.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; const float m_kLogMin</text>
<text text-anchor="start" x="748" y="-1435.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; bool m_bIsInitialized</text>
<text text-anchor="start" x="748" y="-1424.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; bool m_bWasProcessed</text>
<polyline fill="none" stroke="black" points="740,-1417.5 892,-1417.5 "/>
<text text-anchor="start" x="748" y="-1405.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CViterbi(void)</text>
<text text-anchor="start" x="748" y="-1394.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CViterbi(void)</text>
<text text-anchor="start" x="748" y="-1383.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t init(const</text>
<text text-anchor="start" x="748" y="-1372.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *const *const</text>
<text text-anchor="start" x="748" y="-1361.5" font-family="Helvetica,sans-Serif" font-size="10.00"> ppfPTransition, const</text>
<text text-anchor="start" x="748" y="-1350.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfPStart, int iNumStates,</text>
<text text-anchor="start" x="748" y="-1339.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iNumObs)</text>
<text text-anchor="start" x="748" y="-1328.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t reset()</text>
<text text-anchor="start" x="748" y="-1317.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compViterbi</text>
<text text-anchor="start" x="748" y="-1306.5" font-family="Helvetica,sans-Serif" font-size="10.00">(const float *const</text>
<text text-anchor="start" x="748" y="-1295.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *const ppfPEmission,</text>
<text text-anchor="start" x="748" y="-1284.5" font-family="Helvetica,sans-Serif" font-size="10.00"> bool bUseLogLikelihood=true)</text>
<text text-anchor="start" x="748" y="-1273.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ float getOverallProbability</text>
<text text-anchor="start" x="748" y="-1262.5" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="748" y="-1251.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getStateSequence</text>
<text text-anchor="start" x="748" y="-1240.5" font-family="Helvetica,sans-Serif" font-size="10.00">(int *pistateSequence) const</text>
<text text-anchor="start" x="748" y="-1229.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CViterbi(const CViterbi</text>
<text text-anchor="start" x="748" y="-1218.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;that)</text>
<text text-anchor="start" x="748" y="-1207.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CViterbi &amp; operator</text>
<text text-anchor="start" x="748" y="-1196.5" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CViterbi &amp;c)</text>
<text text-anchor="start" x="748" y="-1185.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; void compProbability</text>
<text text-anchor="start" x="748" y="-1174.5" font-family="Helvetica,sans-Serif" font-size="10.00">_(const float *const</text>
<text text-anchor="start" x="748" y="-1163.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *const ppfPEmission)</text>
<text text-anchor="start" x="748" y="-1152.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; void compLogLikelihood</text>
<text text-anchor="start" x="748" y="-1141.5" font-family="Helvetica,sans-Serif" font-size="10.00">_(const float *const *const</text>
<text text-anchor="start" x="748" y="-1130.5" font-family="Helvetica,sans-Serif" font-size="10.00"> ppfPEmission)</text>
</a>
</g>
</g>
<!-- Node8&#45;&gt;Node2 -->
<g id="edge7" class="edge">
<title>Node8&#45;&gt;Node2</title>
<path fill="none" stroke="#404040" d="M745.8,-1123.31C721.02,-1045.58 692.82,-957.14 666.71,-875.24"/>
<polygon fill="none" stroke="#404040" points="666.68,-875.16 661.05,-870.66 663.04,-863.73 668.67,-868.23 666.68,-875.16"/>
<text text-anchor="middle" x="762.5" y="-1075" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCViterbi</text>
</g>
<!-- Node9 -->
<g id="node9" class="node">
<title>Node9</title>
<g id="a_node9"><a xlink:href="a00442.xhtml" target="_top" xlink:title="open, read, and write audio files">
<polygon fill="white" stroke="black" points="817,-138.5 817,-1053.5 979,-1053.5 979,-138.5 817,-138.5"/>
<text text-anchor="middle" x="898" y="-1041.5" font-family="Helvetica,sans-Serif" font-size="10.00">CAudioFileIf</text>
<polyline fill="none" stroke="black" points="817,-1034.5 979,-1034.5 "/>
<text text-anchor="start" x="825" y="-1022.5" font-family="Helvetica,sans-Serif" font-size="10.00"># static const long long</text>
<text text-anchor="start" x="825" y="-1011.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int m_kiDefBlockLength</text>
<text text-anchor="start" x="825" y="-1000.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; FileIoType_t m_eIoType</text>
<text text-anchor="start" x="825" y="-989.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; bool m_bWithClipping</text>
<text text-anchor="start" x="825" y="-978.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; bool m_bIsInitialized</text>
<text text-anchor="start" x="825" y="-967.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iNumBytesPerSample</text>
<polyline fill="none" stroke="black" points="817,-960.5 979,-960.5 "/>
<text text-anchor="start" x="825" y="-948.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Error_t reset</text>
<text text-anchor="start" x="825" y="-937.5" font-family="Helvetica,sans-Serif" font-size="10.00">(bool bFreeMemory=false)</text>
<text text-anchor="start" x="825" y="-926.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Error_t openFile</text>
<text text-anchor="start" x="825" y="-915.5" font-family="Helvetica,sans-Serif" font-size="10.00">(std::string cAudioFileName,</text>
<text text-anchor="start" x="825" y="-904.5" font-family="Helvetica,sans-Serif" font-size="10.00"> FileIoType_t eIoType, FileSpec</text>
<text text-anchor="start" x="825" y="-893.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t const *psFileSpec=0)=0</text>
<text text-anchor="start" x="825" y="-882.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Error_t closeFile()=0</text>
<text text-anchor="start" x="825" y="-871.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Error_t readData</text>
<text text-anchor="start" x="825" y="-860.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float **ppfAudioData,</text>
<text text-anchor="start" x="825" y="-849.5" font-family="Helvetica,sans-Serif" font-size="10.00"> long long int &amp;iNumFrames)</text>
<text text-anchor="start" x="825" y="-838.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Error_t writeData</text>
<text text-anchor="start" x="825" y="-827.5" font-family="Helvetica,sans-Serif" font-size="10.00">(const float *const *const</text>
<text text-anchor="start" x="825" y="-816.5" font-family="Helvetica,sans-Serif" font-size="10.00"> ppfAudioData, long long int</text>
<text text-anchor="start" x="825" y="-805.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iNumFrames)</text>
<text text-anchor="start" x="825" y="-794.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getFileSpec</text>
<text text-anchor="start" x="825" y="-783.5" font-family="Helvetica,sans-Serif" font-size="10.00">(FileSpec_t &amp;sFileSpec)</text>
<text text-anchor="start" x="825" y="-772.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Error_t setPosition</text>
<text text-anchor="start" x="825" y="-761.5" font-family="Helvetica,sans-Serif" font-size="10.00">(long long iFrame=0)</text>
<text text-anchor="start" x="825" y="-750.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t setPosition</text>
<text text-anchor="start" x="825" y="-739.5" font-family="Helvetica,sans-Serif" font-size="10.00">(double dTimeInS=.0)</text>
<text text-anchor="start" x="825" y="-728.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t setClippingEnabled</text>
<text text-anchor="start" x="825" y="-717.5" font-family="Helvetica,sans-Serif" font-size="10.00">(bool bisEnabled=true)</text>
<text text-anchor="start" x="825" y="-706.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ bool isClippingEnabled()</text>
<text text-anchor="start" x="825" y="-695.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 7 more...</text>
<text text-anchor="start" x="825" y="-684.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="825" y="-673.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CAudioFileIf *&amp;pCInstance)</text>
<text text-anchor="start" x="825" y="-662.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="825" y="-651.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CAudioFileIf *&amp;pCInstance)</text>
<text text-anchor="start" x="825" y="-640.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CAudioFileIf()</text>
<text text-anchor="start" x="825" y="-629.5" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CAudioFileIf()</text>
<text text-anchor="start" x="825" y="-618.5" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual Error_t freeMemory_()</text>
<text text-anchor="start" x="825" y="-607.5" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual Error_t allocMemory_()</text>
<text text-anchor="start" x="825" y="-596.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t setInitialized</text>
<text text-anchor="start" x="825" y="-585.5" font-family="Helvetica,sans-Serif" font-size="10.00">_(bool bInitialized=true)</text>
<text text-anchor="start" x="825" y="-574.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t setIoType_</text>
<text text-anchor="start" x="825" y="-563.5" font-family="Helvetica,sans-Serif" font-size="10.00">(FileIoType_t eIoType)</text>
<text text-anchor="start" x="825" y="-552.5" font-family="Helvetica,sans-Serif" font-size="10.00"># FileIoType_t getIoType</text>
<text text-anchor="start" x="825" y="-541.5" font-family="Helvetica,sans-Serif" font-size="10.00">_() const</text>
<text text-anchor="start" x="825" y="-530.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t setFileSpec</text>
<text text-anchor="start" x="825" y="-519.5" font-family="Helvetica,sans-Serif" font-size="10.00">_(const FileSpec_t *pFileSpec)</text>
<text text-anchor="start" x="825" y="-508.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int getNumChannels</text>
<text text-anchor="start" x="825" y="-497.5" font-family="Helvetica,sans-Serif" font-size="10.00">_() const</text>
<text text-anchor="start" x="825" y="-486.5" font-family="Helvetica,sans-Serif" font-size="10.00"># long long convFrames2Bytes</text>
<text text-anchor="start" x="825" y="-475.5" font-family="Helvetica,sans-Serif" font-size="10.00">_(long long iNumFrames)</text>
<text text-anchor="start" x="825" y="-464.5" font-family="Helvetica,sans-Serif" font-size="10.00"># long long convBytes2Frames</text>
<text text-anchor="start" x="825" y="-453.5" font-family="Helvetica,sans-Serif" font-size="10.00">_(long long iNumFrames)</text>
<text text-anchor="start" x="825" y="-442.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t setNumBytesPerSample</text>
<text text-anchor="start" x="825" y="-431.5" font-family="Helvetica,sans-Serif" font-size="10.00">_(int iNumBytes)</text>
<text text-anchor="start" x="825" y="-420.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int getNumBytesPerSample</text>
<text text-anchor="start" x="825" y="-409.5" font-family="Helvetica,sans-Serif" font-size="10.00">_() const</text>
<text text-anchor="start" x="825" y="-398.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int getNumBitsPerSample</text>
<text text-anchor="start" x="825" y="-387.5" font-family="Helvetica,sans-Serif" font-size="10.00">_() const</text>
<text text-anchor="start" x="825" y="-376.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float clip2Range_(float</text>
<text text-anchor="start" x="825" y="-365.5" font-family="Helvetica,sans-Serif" font-size="10.00"> fSample2Clip, float fMin,</text>
<text text-anchor="start" x="825" y="-354.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float fMax)</text>
<text text-anchor="start" x="825" y="-343.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CAudioFileIf(const</text>
<text text-anchor="start" x="825" y="-332.5" font-family="Helvetica,sans-Serif" font-size="10.00"> CAudioFileIf &amp;that)</text>
<text text-anchor="start" x="825" y="-321.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CAudioFileIf &amp; operator</text>
<text text-anchor="start" x="825" y="-310.5" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CAudioFileIf &amp;c)</text>
<text text-anchor="start" x="825" y="-299.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; virtual Error_t initDefaults_()</text>
<text text-anchor="start" x="825" y="-288.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; virtual long long int</text>
<text text-anchor="start" x="825" y="-277.5" font-family="Helvetica,sans-Serif" font-size="10.00"> readDataIntern_(float</text>
<text text-anchor="start" x="825" y="-266.5" font-family="Helvetica,sans-Serif" font-size="10.00"> **ppfAudioData, long long</text>
<text text-anchor="start" x="825" y="-255.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iLength)=0</text>
<text text-anchor="start" x="825" y="-244.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; virtual long long int</text>
<text text-anchor="start" x="825" y="-233.5" font-family="Helvetica,sans-Serif" font-size="10.00"> writeDataIntern_(const</text>
<text text-anchor="start" x="825" y="-222.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *const *const ppfAudioData,</text>
<text text-anchor="start" x="825" y="-211.5" font-family="Helvetica,sans-Serif" font-size="10.00"> long long int iLength)=0</text>
<text text-anchor="start" x="825" y="-200.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; virtual long long getLength</text>
<text text-anchor="start" x="825" y="-189.5" font-family="Helvetica,sans-Serif" font-size="10.00">Intern_()=0</text>
<text text-anchor="start" x="825" y="-178.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; virtual long long getPosition</text>
<text text-anchor="start" x="825" y="-167.5" font-family="Helvetica,sans-Serif" font-size="10.00">Intern_()=0</text>
<text text-anchor="start" x="825" y="-156.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; virtual Error_t setPosition</text>
<text text-anchor="start" x="825" y="-145.5" font-family="Helvetica,sans-Serif" font-size="10.00">Intern_(long long iFrame)=0</text>
</a>
</g>
</g>
<!-- Node9&#45;&gt;Node1 -->
<g id="edge8" class="edge">
<title>Node9&#45;&gt;Node1</title>
<path fill="none" stroke="#404040" d="M816.94,-400.85C772.7,-294.88 721.15,-171.42 692.07,-101.76"/>
<polygon fill="none" stroke="#404040" points="692.05,-101.71 686.05,-97.72 687.43,-90.64 693.43,-94.64 692.05,-101.71"/>
<text text-anchor="middle" x="734" y="-112" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;m_pCAudioFile</text>
</g>
<!-- Node10 -->
<g id="node10" class="node">
<title>Node10</title>
<g id="a_node10"><a xlink:href="a00446.xhtml" target="_top" xlink:title="structure containing basic data specs of the file">
<polygon fill="white" stroke="black" points="910.5,-1299.5 910.5,-1389.5 1059.5,-1389.5 1059.5,-1299.5 910.5,-1299.5"/>
<text text-anchor="middle" x="985" y="-1377.5" font-family="Helvetica,sans-Serif" font-size="10.00">CAudioFileIf::FileSpec_t</text>
<polyline fill="none" stroke="black" points="910.5,-1370.5 1059.5,-1370.5 "/>
<text text-anchor="start" x="918.5" y="-1358.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FileFormat_t eFormat</text>
<text text-anchor="start" x="918.5" y="-1347.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ BitStream_t eBitStreamType</text>
<text text-anchor="start" x="918.5" y="-1336.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ int iNumChannels</text>
<text text-anchor="start" x="918.5" y="-1325.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ float fSampleRateInHz</text>
<polyline fill="none" stroke="black" points="910.5,-1318.5 1059.5,-1318.5 "/>
<text text-anchor="middle" x="985" y="-1306.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
</a>
</g>
</g>
<!-- Node10&#45;&gt;Node9 -->
<g id="edge9" class="edge">
<title>Node10&#45;&gt;Node9</title>
<path fill="none" stroke="#404040" d="M979.85,-1299.31C974.02,-1249.25 963.85,-1162.01 952.62,-1065.67"/>
<polygon fill="none" stroke="#404040" points="952.6,-1065.49 947.93,-1059.99 951.21,-1053.57 955.88,-1059.06 952.6,-1065.49"/>
<text text-anchor="middle" x="992" y="-1075" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;m_CurrFileSpec</text>
</g>
</g>
</svg>
