<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.4"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ACA: CConversion Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">ACA<span id="projectnumber">&#160;0.2.7</span>
   </div>
   <div id="projectbrief">Example Code for Audio Content Analysis</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.4 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search",'Search','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('a00562.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pro-static-methods">Static Protected Member Functions</a> &#124;
<a href="#pri-methods">Private Member Functions</a> &#124;
<a href="#pri-static-attribs">Static Private Attributes</a> &#124;
<a href="a00559.xhtml">List of all members</a>  </div>
  <div class="headertitle"><div class="title">CConversion Class Reference</div></div>
</div><!--header-->
<div class="contents">

<p>class for various frequency conversion functions  
 <a href="a00562.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="a00179_source.xhtml">ToolConversion.h</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for CConversion:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00560.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-types" name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:afb2c9d1110fec95804ccec7fe8196829"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00562.xhtml#afb2c9d1110fec95804ccec7fe8196829">MelConversionFunctions_t</a> { <a class="el" href="a00562.xhtml#afb2c9d1110fec95804ccec7fe8196829a68759166341f3045e7d639d0c6cb397e">kFant</a>
, <a class="el" href="a00562.xhtml#afb2c9d1110fec95804ccec7fe8196829a16a9d12c2905cb442c5e818f18a6cb37">kShaughnessy</a>
, <a class="el" href="a00562.xhtml#afb2c9d1110fec95804ccec7fe8196829aef014545d73bd308d2834e9472c90dc1">kUmesh</a>
, <a class="el" href="a00562.xhtml#afb2c9d1110fec95804ccec7fe8196829aef805fa78b88a2ef2ea5e562cac68fa1">kNumMelConversionFunctions</a>
 }</td></tr>
<tr class="memdesc:afb2c9d1110fec95804ccec7fe8196829"><td class="mdescLeft">&#160;</td><td class="mdescRight">different methods for frequency to mel conversion  <a href="a00562.xhtml#afb2c9d1110fec95804ccec7fe8196829">More...</a><br /></td></tr>
<tr class="separator:afb2c9d1110fec95804ccec7fe8196829"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa2fceaa05fdd52addf05887fa270d671"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00562.xhtml#aa2fceaa05fdd52addf05887fa270d671">BarkConversionFunctions_t</a> { <br />
&#160;&#160;<a class="el" href="a00562.xhtml#aa2fceaa05fdd52addf05887fa270d671ae1052f8ed5db7bf6625477d2e3888bfa">kSchroeder</a>
, <a class="el" href="a00562.xhtml#aa2fceaa05fdd52addf05887fa270d671a4599b264318a69ee39bd92abb863ddca">kTerhardt</a>
, <a class="el" href="a00562.xhtml#aa2fceaa05fdd52addf05887fa270d671a54ef7f149c3da118be856d07cdd7ffb3">kZwicker</a>
, <a class="el" href="a00562.xhtml#aa2fceaa05fdd52addf05887fa270d671a488c5cac9caa956ad026e8c2b4998320">kTraunmuller</a>
, <br />
&#160;&#160;<a class="el" href="a00562.xhtml#aa2fceaa05fdd52addf05887fa270d671a023992bb2b1ea27640e38827f9414c6c">kNumBarkConversionFunctions</a>
<br />
 }</td></tr>
<tr class="memdesc:aa2fceaa05fdd52addf05887fa270d671"><td class="mdescLeft">&#160;</td><td class="mdescRight">different methods for frequency to bark conversion  <a href="a00562.xhtml#aa2fceaa05fdd52addf05887fa270d671">More...</a><br /></td></tr>
<tr class="separator:aa2fceaa05fdd52addf05887fa270d671"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-static-methods" name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:ad0d26c7c6a5edaa81527e68fe0c0c46f"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00562.xhtml#ad0d26c7c6a5edaa81527e68fe0c0c46f">convertFreq2Mel</a> (float fInHz, <a class="el" href="a00562.xhtml#afb2c9d1110fec95804ccec7fe8196829">MelConversionFunctions_t</a> eFunc=<a class="el" href="a00562.xhtml#afb2c9d1110fec95804ccec7fe8196829a68759166341f3045e7d639d0c6cb397e">kFant</a>)</td></tr>
<tr class="separator:ad0d26c7c6a5edaa81527e68fe0c0c46f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adbcadd75a3a33ca9e9453a17a9336318"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00562.xhtml#adbcadd75a3a33ca9e9453a17a9336318">convertMel2Freq</a> (float fMel, <a class="el" href="a00562.xhtml#afb2c9d1110fec95804ccec7fe8196829">MelConversionFunctions_t</a> eFunc=<a class="el" href="a00562.xhtml#afb2c9d1110fec95804ccec7fe8196829a68759166341f3045e7d639d0c6cb397e">kFant</a>)</td></tr>
<tr class="separator:adbcadd75a3a33ca9e9453a17a9336318"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aed54c096c6fb379848ef1cd882ca7b43"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00562.xhtml#aed54c096c6fb379848ef1cd882ca7b43">convertFreq2Mel</a> (float *pfMel, const float *pffInHz, int iLengthBuff, <a class="el" href="a00562.xhtml#afb2c9d1110fec95804ccec7fe8196829">MelConversionFunctions_t</a> eFunc=<a class="el" href="a00562.xhtml#afb2c9d1110fec95804ccec7fe8196829a68759166341f3045e7d639d0c6cb397e">kFant</a>)</td></tr>
<tr class="separator:aed54c096c6fb379848ef1cd882ca7b43"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad8d907d49dc6a44bdd8152e4bf33b94a"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00562.xhtml#ad8d907d49dc6a44bdd8152e4bf33b94a">convertMel2Freq</a> (float *pffInHz, const float *pfMel, int iLengthBuff, <a class="el" href="a00562.xhtml#afb2c9d1110fec95804ccec7fe8196829">MelConversionFunctions_t</a> eFunc=<a class="el" href="a00562.xhtml#afb2c9d1110fec95804ccec7fe8196829a68759166341f3045e7d639d0c6cb397e">kFant</a>)</td></tr>
<tr class="separator:ad8d907d49dc6a44bdd8152e4bf33b94a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0847c5f906d2239f9500b0c438ce8ead"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00562.xhtml#a0847c5f906d2239f9500b0c438ce8ead">convertFreq2Bark</a> (float fInHz, <a class="el" href="a00562.xhtml#aa2fceaa05fdd52addf05887fa270d671">BarkConversionFunctions_t</a> eFunc=<a class="el" href="a00562.xhtml#aa2fceaa05fdd52addf05887fa270d671ae1052f8ed5db7bf6625477d2e3888bfa">kSchroeder</a>)</td></tr>
<tr class="separator:a0847c5f906d2239f9500b0c438ce8ead"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0980b6263cca5410e2f63c1dc6df2edc"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00562.xhtml#a0980b6263cca5410e2f63c1dc6df2edc">convertBark2Freq</a> (float fBark, <a class="el" href="a00562.xhtml#aa2fceaa05fdd52addf05887fa270d671">BarkConversionFunctions_t</a> eFunc=<a class="el" href="a00562.xhtml#aa2fceaa05fdd52addf05887fa270d671ae1052f8ed5db7bf6625477d2e3888bfa">kSchroeder</a>)</td></tr>
<tr class="separator:a0980b6263cca5410e2f63c1dc6df2edc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a33feba1dca002766f14f9cd89a0154e0"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00562.xhtml#a33feba1dca002766f14f9cd89a0154e0">convertFreq2Bark</a> (float *pfBark, const float *pffInHz, int iLengthBuff, <a class="el" href="a00562.xhtml#aa2fceaa05fdd52addf05887fa270d671">BarkConversionFunctions_t</a> eFunc=<a class="el" href="a00562.xhtml#aa2fceaa05fdd52addf05887fa270d671ae1052f8ed5db7bf6625477d2e3888bfa">kSchroeder</a>)</td></tr>
<tr class="separator:a33feba1dca002766f14f9cd89a0154e0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe86bf9fe7f1a6f3cf01f16178656061"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00562.xhtml#afe86bf9fe7f1a6f3cf01f16178656061">convertBark2Freq</a> (float *pffInHz, const float *pfBark, int iLengthBuff, <a class="el" href="a00562.xhtml#aa2fceaa05fdd52addf05887fa270d671">BarkConversionFunctions_t</a> eFunc=<a class="el" href="a00562.xhtml#aa2fceaa05fdd52addf05887fa270d671ae1052f8ed5db7bf6625477d2e3888bfa">kSchroeder</a>)</td></tr>
<tr class="separator:afe86bf9fe7f1a6f3cf01f16178656061"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ade267323a6a537a150141fa4f0ab570a"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00562.xhtml#ade267323a6a537a150141fa4f0ab570a">convertFreq2Midi</a> (float fInHz, float fA4InHz=440.F)</td></tr>
<tr class="separator:ade267323a6a537a150141fa4f0ab570a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a81ba4ad719a2c8ce194af937d5050d17"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00562.xhtml#a81ba4ad719a2c8ce194af937d5050d17">convertFreq2Midi</a> (float *pfMidi, const float *pffInHz, int iLengthBuff, float fA4InHz=440.F)</td></tr>
<tr class="separator:a81ba4ad719a2c8ce194af937d5050d17"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3461898be6be7ae7059904860f5231e1"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00562.xhtml#a3461898be6be7ae7059904860f5231e1">convertMidi2Freq</a> (float fMidi, float fA4InHz=440.F)</td></tr>
<tr class="separator:a3461898be6be7ae7059904860f5231e1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a555296e5af0d5ae0b9effdc6be642a2d"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00562.xhtml#a555296e5af0d5ae0b9effdc6be642a2d">convertMidi2Freq</a> (float *pffInHz, const float *pfMidi, int iLengthBuff, float fA4InHz=440.F)</td></tr>
<tr class="separator:a555296e5af0d5ae0b9effdc6be642a2d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ada82d84a69f4c77266835f1f06ca2ecb"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00562.xhtml#ada82d84a69f4c77266835f1f06ca2ecb">convertFreq2Bin</a> (float fInHz, int iFftLength, float fSampleRate=44100.F)</td></tr>
<tr class="separator:ada82d84a69f4c77266835f1f06ca2ecb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a588044409f07aff268246ced2d71ee29"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00562.xhtml#a588044409f07aff268246ced2d71ee29">convertFreq2Bin</a> (float *pfBin, const float *pffInHz, int iLengthBuff, int iFftLength, float fSampleRate=44100.F)</td></tr>
<tr class="separator:a588044409f07aff268246ced2d71ee29"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aebe59f905b1dd02058cccbb062de6507"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00562.xhtml#aebe59f905b1dd02058cccbb062de6507">convertBin2Freq</a> (float fBin, int iFftLength, float fSampleRate=44100.F)</td></tr>
<tr class="separator:aebe59f905b1dd02058cccbb062de6507"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6c50a36eba57e9a21aff9eb4093ea786"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00562.xhtml#a6c50a36eba57e9a21aff9eb4093ea786">convertBin2Freq</a> (float *pffInHz, const float *pfBin, int iLengthBuff, int iFftLength, float fSampleRate=44100.F)</td></tr>
<tr class="separator:a6c50a36eba57e9a21aff9eb4093ea786"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a83a5429f8bf5225377a6c8d566e3224c"><td class="memItemLeft" align="right" valign="top">static uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00562.xhtml#a83a5429f8bf5225377a6c8d566e3224c">convertFloat2Word</a> (const float *pfVec)</td></tr>
<tr class="separator:a83a5429f8bf5225377a6c8d566e3224c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad4975c461d6f25aa80b07f4959e85f1a"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00562.xhtml#ad4975c461d6f25aa80b07f4959e85f1a">convertWord2Float</a> (float *pfDest, uint32_t iWord)</td></tr>
<tr class="separator:ad4975c461d6f25aa80b07f4959e85f1a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pro-static-methods" name="pro-static-methods"></a>
Static Protected Member Functions</h2></td></tr>
<tr class="memitem:afded0983d477928d9f0be2b61ea22273"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00562.xhtml#afded0983d477928d9f0be2b61ea22273">convertFreq2MelFant</a> (float fFrequency)</td></tr>
<tr class="separator:afded0983d477928d9f0be2b61ea22273"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8cbe4cd5f8373f1cff28debbf3c0d90a"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00562.xhtml#a8cbe4cd5f8373f1cff28debbf3c0d90a">convertMel2FreqFant</a> (float fMel)</td></tr>
<tr class="separator:a8cbe4cd5f8373f1cff28debbf3c0d90a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad1cbd90f3bff81014eaeb2d97f5c6ae5"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00562.xhtml#ad1cbd90f3bff81014eaeb2d97f5c6ae5">convertFreq2MelShaughnessy</a> (float fFrequency)</td></tr>
<tr class="separator:ad1cbd90f3bff81014eaeb2d97f5c6ae5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a373985144ef6567b889701a027dbceaf"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00562.xhtml#a373985144ef6567b889701a027dbceaf">convertMel2FreqShaughnessy</a> (float fMel)</td></tr>
<tr class="separator:a373985144ef6567b889701a027dbceaf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a69295613ff347523c49bc96951aaa437"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00562.xhtml#a69295613ff347523c49bc96951aaa437">convertFreq2MelUmesh</a> (float fFrequency)</td></tr>
<tr class="separator:a69295613ff347523c49bc96951aaa437"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac5ad6c7835eb3e7c3eed431d29e53e85"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00562.xhtml#ac5ad6c7835eb3e7c3eed431d29e53e85">convertMel2FreqUmesh</a> (float fMel)</td></tr>
<tr class="separator:ac5ad6c7835eb3e7c3eed431d29e53e85"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aadc66ab6659cdf6e8137b1f69b645ae4"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00562.xhtml#aadc66ab6659cdf6e8137b1f69b645ae4">convertFreq2BarkSchroeder</a> (float fFrequency)</td></tr>
<tr class="separator:aadc66ab6659cdf6e8137b1f69b645ae4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4ea1fb5474b55958df71bfe80b73773e"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00562.xhtml#a4ea1fb5474b55958df71bfe80b73773e">convertBark2FreqSchroeder</a> (float fBark)</td></tr>
<tr class="separator:a4ea1fb5474b55958df71bfe80b73773e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aefc1f257a1adbde4f46dfc3c5c6fb0ae"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00562.xhtml#aefc1f257a1adbde4f46dfc3c5c6fb0ae">convertFreq2BarkTerhardt</a> (float fFrequency)</td></tr>
<tr class="separator:aefc1f257a1adbde4f46dfc3c5c6fb0ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af9caed8b86edcc69b34cccd78b42fa27"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00562.xhtml#af9caed8b86edcc69b34cccd78b42fa27">convertBark2FreqTerhardt</a> (float fBark)</td></tr>
<tr class="separator:af9caed8b86edcc69b34cccd78b42fa27"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6b01bdcc2df1c829455ba9cafcec0a44"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00562.xhtml#a6b01bdcc2df1c829455ba9cafcec0a44">convertFreq2BarkZwicker</a> (float fFrequency)</td></tr>
<tr class="separator:a6b01bdcc2df1c829455ba9cafcec0a44"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afefc9864b5de040f8aa0e0b51dbe8096"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00562.xhtml#afefc9864b5de040f8aa0e0b51dbe8096">convertBark2FreqZwicker</a> (float fBark)</td></tr>
<tr class="separator:afefc9864b5de040f8aa0e0b51dbe8096"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a54f9ba7eb05601c56b6df67e51fb2aa7"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00562.xhtml#a54f9ba7eb05601c56b6df67e51fb2aa7">convertFreq2BarkTraunmuller</a> (float fFrequency)</td></tr>
<tr class="separator:a54f9ba7eb05601c56b6df67e51fb2aa7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4aa5c16cc761a141e7a122eeaf855c46"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00562.xhtml#a4aa5c16cc761a141e7a122eeaf855c46">convertBark2FreqTraunmuller</a> (float fBark)</td></tr>
<tr class="separator:a4aa5c16cc761a141e7a122eeaf855c46"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pri-methods" name="pri-methods"></a>
Private Member Functions</h2></td></tr>
<tr class="memitem:a9972633ab858c0566e59aa7edd6dd9c3"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00562.xhtml#a9972633ab858c0566e59aa7edd6dd9c3">CConversion</a> ()</td></tr>
<tr class="separator:a9972633ab858c0566e59aa7edd6dd9c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a44280bc6f495dda44039122a351005c9"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00562.xhtml#a44280bc6f495dda44039122a351005c9">~CConversion</a> ()</td></tr>
<tr class="separator:a44280bc6f495dda44039122a351005c9"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pri-static-attribs" name="pri-static-attribs"></a>
Static Private Attributes</h2></td></tr>
<tr class="memitem:a1ddc8df24c34d327e77dcebe71924ea3"><td class="memItemLeft" align="right" valign="top">static const std::map&lt; int, std::function&lt; float(float)&gt; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00562.xhtml#a1ddc8df24c34d327e77dcebe71924ea3">m_MelDispatchMap</a></td></tr>
<tr class="separator:a1ddc8df24c34d327e77dcebe71924ea3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4ee9640a8dc6cfedef832789c60670c3"><td class="memItemLeft" align="right" valign="top">static const std::map&lt; int, std::function&lt; float(float)&gt; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00562.xhtml#a4ee9640a8dc6cfedef832789c60670c3">m_BarkDispatchMap</a></td></tr>
<tr class="separator:a4ee9640a8dc6cfedef832789c60670c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p >class for various frequency conversion functions </p>

<p class="definition">Definition at line <a class="el" href="a00179_source.xhtml#l00015">15</a> of file <a class="el" href="a00179_source.xhtml">ToolConversion.h</a>.</p>
</div><h2 class="groupheader">Member Enumeration Documentation</h2>
<a id="aa2fceaa05fdd52addf05887fa270d671" name="aa2fceaa05fdd52addf05887fa270d671"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa2fceaa05fdd52addf05887fa270d671">&#9670;&nbsp;</a></span>BarkConversionFunctions_t</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="a00562.xhtml#aa2fceaa05fdd52addf05887fa270d671">CConversion::BarkConversionFunctions_t</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>different methods for frequency to bark conversion </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="aa2fceaa05fdd52addf05887fa270d671ae1052f8ed5db7bf6625477d2e3888bfa" name="aa2fceaa05fdd52addf05887fa270d671ae1052f8ed5db7bf6625477d2e3888bfa"></a>kSchroeder&#160;</td><td class="fielddoc"><p >conversion acc. to Schroeder </p>
</td></tr>
<tr><td class="fieldname"><a id="aa2fceaa05fdd52addf05887fa270d671a4599b264318a69ee39bd92abb863ddca" name="aa2fceaa05fdd52addf05887fa270d671a4599b264318a69ee39bd92abb863ddca"></a>kTerhardt&#160;</td><td class="fielddoc"><p >conversion acc. to Terhardt </p>
</td></tr>
<tr><td class="fieldname"><a id="aa2fceaa05fdd52addf05887fa270d671a54ef7f149c3da118be856d07cdd7ffb3" name="aa2fceaa05fdd52addf05887fa270d671a54ef7f149c3da118be856d07cdd7ffb3"></a>kZwicker&#160;</td><td class="fielddoc"><p >conversion acc. to Zwicker </p>
</td></tr>
<tr><td class="fieldname"><a id="aa2fceaa05fdd52addf05887fa270d671a488c5cac9caa956ad026e8c2b4998320" name="aa2fceaa05fdd52addf05887fa270d671a488c5cac9caa956ad026e8c2b4998320"></a>kTraunmuller&#160;</td><td class="fielddoc"><p >conversion acc. to Traunmuller </p>
</td></tr>
<tr><td class="fieldname"><a id="aa2fceaa05fdd52addf05887fa270d671a023992bb2b1ea27640e38827f9414c6c" name="aa2fceaa05fdd52addf05887fa270d671a023992bb2b1ea27640e38827f9414c6c"></a>kNumBarkConversionFunctions&#160;</td><td class="fielddoc"></td></tr>
</table>

<p class="definition">Definition at line <a class="el" href="a00179_source.xhtml#l00029">29</a> of file <a class="el" href="a00179_source.xhtml">ToolConversion.h</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   30</span>    {</div>
<div class="line"><span class="lineno">   31</span>        <a class="code hl_enumvalue" href="a00562.xhtml#aa2fceaa05fdd52addf05887fa270d671ae1052f8ed5db7bf6625477d2e3888bfa">kSchroeder</a>,     <span class="comment">//!&lt; conversion acc. to Schroeder</span></div>
<div class="line"><span class="lineno">   32</span>        <a class="code hl_enumvalue" href="a00562.xhtml#aa2fceaa05fdd52addf05887fa270d671a4599b264318a69ee39bd92abb863ddca">kTerhardt</a>,      <span class="comment">//!&lt; conversion acc. to Terhardt</span></div>
<div class="line"><span class="lineno">   33</span>        <a class="code hl_enumvalue" href="a00562.xhtml#aa2fceaa05fdd52addf05887fa270d671a54ef7f149c3da118be856d07cdd7ffb3">kZwicker</a>,       <span class="comment">//!&lt; conversion acc. to Zwicker</span></div>
<div class="line"><span class="lineno">   34</span>        <a class="code hl_enumvalue" href="a00562.xhtml#aa2fceaa05fdd52addf05887fa270d671a488c5cac9caa956ad026e8c2b4998320">kTraunmuller</a>,   <span class="comment">//!&lt; conversion acc. to Traunmuller</span></div>
<div class="line"><span class="lineno">   35</span> </div>
<div class="line"><span class="lineno">   36</span>        <a class="code hl_enumvalue" href="a00562.xhtml#aa2fceaa05fdd52addf05887fa270d671a023992bb2b1ea27640e38827f9414c6c">kNumBarkConversionFunctions</a></div>
<div class="line"><span class="lineno">   37</span>    };</div>
<div class="ttc" id="aa00562_xhtml_aa2fceaa05fdd52addf05887fa270d671a023992bb2b1ea27640e38827f9414c6c"><div class="ttname"><a href="a00562.xhtml#aa2fceaa05fdd52addf05887fa270d671a023992bb2b1ea27640e38827f9414c6c">CConversion::kNumBarkConversionFunctions</a></div><div class="ttdeci">@ kNumBarkConversionFunctions</div><div class="ttdef"><b>Definition:</b> <a href="a00179_source.xhtml#l00037">ToolConversion.h:36</a></div></div>
<div class="ttc" id="aa00562_xhtml_aa2fceaa05fdd52addf05887fa270d671a4599b264318a69ee39bd92abb863ddca"><div class="ttname"><a href="a00562.xhtml#aa2fceaa05fdd52addf05887fa270d671a4599b264318a69ee39bd92abb863ddca">CConversion::kTerhardt</a></div><div class="ttdeci">@ kTerhardt</div><div class="ttdoc">conversion acc. to Terhardt</div><div class="ttdef"><b>Definition:</b> <a href="a00179_source.xhtml#l00032">ToolConversion.h:32</a></div></div>
<div class="ttc" id="aa00562_xhtml_aa2fceaa05fdd52addf05887fa270d671a488c5cac9caa956ad026e8c2b4998320"><div class="ttname"><a href="a00562.xhtml#aa2fceaa05fdd52addf05887fa270d671a488c5cac9caa956ad026e8c2b4998320">CConversion::kTraunmuller</a></div><div class="ttdeci">@ kTraunmuller</div><div class="ttdoc">conversion acc. to Traunmuller</div><div class="ttdef"><b>Definition:</b> <a href="a00179_source.xhtml#l00034">ToolConversion.h:34</a></div></div>
<div class="ttc" id="aa00562_xhtml_aa2fceaa05fdd52addf05887fa270d671a54ef7f149c3da118be856d07cdd7ffb3"><div class="ttname"><a href="a00562.xhtml#aa2fceaa05fdd52addf05887fa270d671a54ef7f149c3da118be856d07cdd7ffb3">CConversion::kZwicker</a></div><div class="ttdeci">@ kZwicker</div><div class="ttdoc">conversion acc. to Zwicker</div><div class="ttdef"><b>Definition:</b> <a href="a00179_source.xhtml#l00033">ToolConversion.h:33</a></div></div>
<div class="ttc" id="aa00562_xhtml_aa2fceaa05fdd52addf05887fa270d671ae1052f8ed5db7bf6625477d2e3888bfa"><div class="ttname"><a href="a00562.xhtml#aa2fceaa05fdd52addf05887fa270d671ae1052f8ed5db7bf6625477d2e3888bfa">CConversion::kSchroeder</a></div><div class="ttdeci">@ kSchroeder</div><div class="ttdoc">conversion acc. to Schroeder</div><div class="ttdef"><b>Definition:</b> <a href="a00179_source.xhtml#l00031">ToolConversion.h:31</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="afb2c9d1110fec95804ccec7fe8196829" name="afb2c9d1110fec95804ccec7fe8196829"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afb2c9d1110fec95804ccec7fe8196829">&#9670;&nbsp;</a></span>MelConversionFunctions_t</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="a00562.xhtml#afb2c9d1110fec95804ccec7fe8196829">CConversion::MelConversionFunctions_t</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>different methods for frequency to mel conversion </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="afb2c9d1110fec95804ccec7fe8196829a68759166341f3045e7d639d0c6cb397e" name="afb2c9d1110fec95804ccec7fe8196829a68759166341f3045e7d639d0c6cb397e"></a>kFant&#160;</td><td class="fielddoc"><p >conversion acc. to Fant </p>
</td></tr>
<tr><td class="fieldname"><a id="afb2c9d1110fec95804ccec7fe8196829a16a9d12c2905cb442c5e818f18a6cb37" name="afb2c9d1110fec95804ccec7fe8196829a16a9d12c2905cb442c5e818f18a6cb37"></a>kShaughnessy&#160;</td><td class="fielddoc"><p >conversion acc. to Shaughnessy </p>
</td></tr>
<tr><td class="fieldname"><a id="afb2c9d1110fec95804ccec7fe8196829aef014545d73bd308d2834e9472c90dc1" name="afb2c9d1110fec95804ccec7fe8196829aef014545d73bd308d2834e9472c90dc1"></a>kUmesh&#160;</td><td class="fielddoc"><p >conversion acc. to Umesh </p>
</td></tr>
<tr><td class="fieldname"><a id="afb2c9d1110fec95804ccec7fe8196829aef805fa78b88a2ef2ea5e562cac68fa1" name="afb2c9d1110fec95804ccec7fe8196829aef805fa78b88a2ef2ea5e562cac68fa1"></a>kNumMelConversionFunctions&#160;</td><td class="fielddoc"></td></tr>
</table>

<p class="definition">Definition at line <a class="el" href="a00179_source.xhtml#l00019">19</a> of file <a class="el" href="a00179_source.xhtml">ToolConversion.h</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   20</span>    {</div>
<div class="line"><span class="lineno">   21</span>        <a class="code hl_enumvalue" href="a00562.xhtml#afb2c9d1110fec95804ccec7fe8196829a68759166341f3045e7d639d0c6cb397e">kFant</a>,          <span class="comment">//!&lt; conversion acc. to Fant</span></div>
<div class="line"><span class="lineno">   22</span>        <a class="code hl_enumvalue" href="a00562.xhtml#afb2c9d1110fec95804ccec7fe8196829a16a9d12c2905cb442c5e818f18a6cb37">kShaughnessy</a>,   <span class="comment">//!&lt; conversion acc. to Shaughnessy</span></div>
<div class="line"><span class="lineno">   23</span>        <a class="code hl_enumvalue" href="a00562.xhtml#afb2c9d1110fec95804ccec7fe8196829aef014545d73bd308d2834e9472c90dc1">kUmesh</a>,         <span class="comment">//!&lt; conversion acc. to Umesh</span></div>
<div class="line"><span class="lineno">   24</span> </div>
<div class="line"><span class="lineno">   25</span>        <a class="code hl_enumvalue" href="a00562.xhtml#afb2c9d1110fec95804ccec7fe8196829aef805fa78b88a2ef2ea5e562cac68fa1">kNumMelConversionFunctions</a></div>
<div class="line"><span class="lineno">   26</span>    };</div>
<div class="ttc" id="aa00562_xhtml_afb2c9d1110fec95804ccec7fe8196829a16a9d12c2905cb442c5e818f18a6cb37"><div class="ttname"><a href="a00562.xhtml#afb2c9d1110fec95804ccec7fe8196829a16a9d12c2905cb442c5e818f18a6cb37">CConversion::kShaughnessy</a></div><div class="ttdeci">@ kShaughnessy</div><div class="ttdoc">conversion acc. to Shaughnessy</div><div class="ttdef"><b>Definition:</b> <a href="a00179_source.xhtml#l00022">ToolConversion.h:22</a></div></div>
<div class="ttc" id="aa00562_xhtml_afb2c9d1110fec95804ccec7fe8196829a68759166341f3045e7d639d0c6cb397e"><div class="ttname"><a href="a00562.xhtml#afb2c9d1110fec95804ccec7fe8196829a68759166341f3045e7d639d0c6cb397e">CConversion::kFant</a></div><div class="ttdeci">@ kFant</div><div class="ttdoc">conversion acc. to Fant</div><div class="ttdef"><b>Definition:</b> <a href="a00179_source.xhtml#l00021">ToolConversion.h:21</a></div></div>
<div class="ttc" id="aa00562_xhtml_afb2c9d1110fec95804ccec7fe8196829aef014545d73bd308d2834e9472c90dc1"><div class="ttname"><a href="a00562.xhtml#afb2c9d1110fec95804ccec7fe8196829aef014545d73bd308d2834e9472c90dc1">CConversion::kUmesh</a></div><div class="ttdeci">@ kUmesh</div><div class="ttdoc">conversion acc. to Umesh</div><div class="ttdef"><b>Definition:</b> <a href="a00179_source.xhtml#l00023">ToolConversion.h:23</a></div></div>
<div class="ttc" id="aa00562_xhtml_afb2c9d1110fec95804ccec7fe8196829aef805fa78b88a2ef2ea5e562cac68fa1"><div class="ttname"><a href="a00562.xhtml#afb2c9d1110fec95804ccec7fe8196829aef805fa78b88a2ef2ea5e562cac68fa1">CConversion::kNumMelConversionFunctions</a></div><div class="ttdeci">@ kNumMelConversionFunctions</div><div class="ttdef"><b>Definition:</b> <a href="a00179_source.xhtml#l00026">ToolConversion.h:25</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a9972633ab858c0566e59aa7edd6dd9c3" name="a9972633ab858c0566e59aa7edd6dd9c3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9972633ab858c0566e59aa7edd6dd9c3">&#9670;&nbsp;</a></span>CConversion()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">CConversion::CConversion </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="a00179_source.xhtml#l00285">285</a> of file <a class="el" href="a00179_source.xhtml">ToolConversion.h</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  285</span>{};</div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="afe86bf9fe7f1a6f3cf01f16178656061" name="afe86bf9fe7f1a6f3cf01f16178656061"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afe86bf9fe7f1a6f3cf01f16178656061">&#9670;&nbsp;</a></span>convertBark2Freq() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void CConversion::convertBark2Freq </td>
          <td>(</td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>pffInHz</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float *&#160;</td>
          <td class="paramname"><em>pfBark</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>iLengthBuff</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="a00562.xhtml#aa2fceaa05fdd52addf05887fa270d671">BarkConversionFunctions_t</a>&#160;</td>
          <td class="paramname"><em>eFunc</em> = <code><a class="el" href="a00562.xhtml#aa2fceaa05fdd52addf05887fa270d671ae1052f8ed5db7bf6625477d2e3888bfa">kSchroeder</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p >converts a Bark array to a frequency array </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pffInHz</td><td>output frequency values in Hz (length iLenghBuff, to be written) </td></tr>
    <tr><td class="paramname">pfBark</td><td>input Bark values (length iLenghBuff) </td></tr>
    <tr><td class="paramname">iLengthBuff</td><td>length of buffers </td></tr>
    <tr><td class="paramname">eFunc</td><td>index for conversion function selection </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="a00047_source.xhtml#l00115">115</a> of file <a class="el" href="a00047_source.xhtml">ToolConversion.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  116</span>{</div>
<div class="line"><span class="lineno">  117</span>    assert(pfBark);</div>
<div class="line"><span class="lineno">  118</span>    assert(pffInHz);</div>
<div class="line"><span class="lineno">  119</span>    assert(iLengthBuff &gt; 0);</div>
<div class="line"><span class="lineno">  120</span> </div>
<div class="line"><span class="lineno">  121</span>    <span class="keywordflow">for</span> (<span class="keyword">auto</span> k = 0; k &lt; iLengthBuff; k++)</div>
<div class="line"><span class="lineno">  122</span>        pffInHz[k] = <a class="code hl_variable" href="a00562.xhtml#a4ee9640a8dc6cfedef832789c60670c3">m_BarkDispatchMap</a>.at(eFunc + <a class="code hl_enumvalue" href="a00562.xhtml#aa2fceaa05fdd52addf05887fa270d671a023992bb2b1ea27640e38827f9414c6c">kNumBarkConversionFunctions</a>)(pfBark[k]);</div>
<div class="line"><span class="lineno">  123</span>}</div>
<div class="ttc" id="aa00562_xhtml_a4ee9640a8dc6cfedef832789c60670c3"><div class="ttname"><a href="a00562.xhtml#a4ee9640a8dc6cfedef832789c60670c3">CConversion::m_BarkDispatchMap</a></div><div class="ttdeci">static const std::map&lt; int, std::function&lt; float(float)&gt; &gt; m_BarkDispatchMap</div><div class="ttdef"><b>Definition:</b> <a href="a00179_source.xhtml#l00290">ToolConversion.h:290</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00179_source.xhtml#l00036">kNumBarkConversionFunctions</a>, and <a class="el" href="a00179_source.xhtml#l00290">m_BarkDispatchMap</a>.</p>

</div>
</div>
<a id="a0980b6263cca5410e2f63c1dc6df2edc" name="a0980b6263cca5410e2f63c1dc6df2edc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0980b6263cca5410e2f63c1dc6df2edc">&#9670;&nbsp;</a></span>convertBark2Freq() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float CConversion::convertBark2Freq </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fBark</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="a00562.xhtml#aa2fceaa05fdd52addf05887fa270d671">BarkConversionFunctions_t</a>&#160;</td>
          <td class="paramname"><em>eFunc</em> = <code><a class="el" href="a00562.xhtml#aa2fceaa05fdd52addf05887fa270d671ae1052f8ed5db7bf6625477d2e3888bfa">kSchroeder</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p >converts a Bark scalar to a frequency </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">fBark</td><td>Bark value </td></tr>
    <tr><td class="paramname">eFunc</td><td>index for conversion function selection </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>frequency value in Hz </dd></dl>

<p class="definition">Definition at line <a class="el" href="a00047_source.xhtml#l00099">99</a> of file <a class="el" href="a00047_source.xhtml">ToolConversion.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  100</span>{</div>
<div class="line"><span class="lineno">  101</span>    assert(fBark &gt;= 0);</div>
<div class="line"><span class="lineno">  102</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="a00562.xhtml#a4ee9640a8dc6cfedef832789c60670c3">m_BarkDispatchMap</a>.at(eFunc + <a class="code hl_enumvalue" href="a00562.xhtml#aa2fceaa05fdd52addf05887fa270d671a023992bb2b1ea27640e38827f9414c6c">kNumBarkConversionFunctions</a>)(fBark);</div>
<div class="line"><span class="lineno">  103</span>}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00179_source.xhtml#l00036">kNumBarkConversionFunctions</a>, and <a class="el" href="a00179_source.xhtml#l00290">m_BarkDispatchMap</a>.</p>

</div>
</div>
<a id="a4ea1fb5474b55958df71bfe80b73773e" name="a4ea1fb5474b55958df71bfe80b73773e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4ea1fb5474b55958df71bfe80b73773e">&#9670;&nbsp;</a></span>convertBark2FreqSchroeder()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float CConversion::convertBark2FreqSchroeder </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fBark</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="a00047_source.xhtml#l00131">131</a> of file <a class="el" href="a00047_source.xhtml">ToolConversion.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  132</span>{</div>
<div class="line"><span class="lineno">  133</span>    assert(fBark &gt; 0);</div>
<div class="line"><span class="lineno">  134</span>    <span class="keywordflow">return</span> 650.F * std::sinh(fBark / 7.F);</div>
<div class="line"><span class="lineno">  135</span>}</div>
</div><!-- fragment -->
</div>
</div>
<a id="af9caed8b86edcc69b34cccd78b42fa27" name="af9caed8b86edcc69b34cccd78b42fa27"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af9caed8b86edcc69b34cccd78b42fa27">&#9670;&nbsp;</a></span>convertBark2FreqTerhardt()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float CConversion::convertBark2FreqTerhardt </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fBark</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="a00047_source.xhtml#l00142">142</a> of file <a class="el" href="a00047_source.xhtml">ToolConversion.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  143</span>{</div>
<div class="line"><span class="lineno">  144</span>    assert(fBark &gt; 0);</div>
<div class="line"><span class="lineno">  145</span>    <span class="keywordflow">return</span> 4.F / 3.F * 1000.F * std::tan(fBark / 13.3F);</div>
<div class="line"><span class="lineno">  146</span>}</div>
</div><!-- fragment -->
</div>
</div>
<a id="a4aa5c16cc761a141e7a122eeaf855c46" name="a4aa5c16cc761a141e7a122eeaf855c46"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4aa5c16cc761a141e7a122eeaf855c46">&#9670;&nbsp;</a></span>convertBark2FreqTraunmuller()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float CConversion::convertBark2FreqTraunmuller </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fBark</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="a00047_source.xhtml#l00163">163</a> of file <a class="el" href="a00047_source.xhtml">ToolConversion.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  164</span>{</div>
<div class="line"><span class="lineno">  165</span>    assert(fBark &gt; 0);</div>
<div class="line"><span class="lineno">  166</span>    <span class="comment">//return 1960.F * (fBark + 0.53F) / (26.81F - fBark);</span></div>
<div class="line"><span class="lineno">  167</span>    <span class="keywordflow">return</span> 1960.F / (26.81F / (fBark + 0.53F) - 1.F);</div>
<div class="line"><span class="lineno">  168</span>}</div>
</div><!-- fragment -->
</div>
</div>
<a id="afefc9864b5de040f8aa0e0b51dbe8096" name="afefc9864b5de040f8aa0e0b51dbe8096"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afefc9864b5de040f8aa0e0b51dbe8096">&#9670;&nbsp;</a></span>convertBark2FreqZwicker()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float CConversion::convertBark2FreqZwicker </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fBark</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="a00047_source.xhtml#l00153">153</a> of file <a class="el" href="a00047_source.xhtml">ToolConversion.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  154</span>{</div>
<div class="line"><span class="lineno">  155</span>    <span class="keywordflow">return</span> -1.F;</div>
<div class="line"><span class="lineno">  156</span>}</div>
</div><!-- fragment -->
</div>
</div>
<a id="a6c50a36eba57e9a21aff9eb4093ea786" name="a6c50a36eba57e9a21aff9eb4093ea786"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6c50a36eba57e9a21aff9eb4093ea786">&#9670;&nbsp;</a></span>convertBin2Freq() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void CConversion::convertBin2Freq </td>
          <td>(</td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>pffInHz</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float *&#160;</td>
          <td class="paramname"><em>pfBin</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>iLengthBuff</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>iFftLength</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fSampleRate</em> = <code>44100.F</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p >converts an FFT bin vector to a frequency vector </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pffInHz</td><td>frequency in Hz output buffer (length iLengthBuff, to be written) </td></tr>
    <tr><td class="paramname">pfBin</td><td>input buffer with FFT bin indices (length iLengthBuff) </td></tr>
    <tr><td class="paramname">iLengthBuff</td><td>length of buffers </td></tr>
    <tr><td class="paramname">iFftLength</td><td>length of FFT </td></tr>
    <tr><td class="paramname">fSampleRate</td><td>sample rate frequency in Hz </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="a00047_source.xhtml#l00171">171</a> of file <a class="el" href="a00047_source.xhtml">ToolConversion.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  172</span>{</div>
<div class="line"><span class="lineno">  173</span>    assert(pfBin);</div>
<div class="line"><span class="lineno">  174</span>    assert(pffInHz);</div>
<div class="line"><span class="lineno">  175</span>    assert(iLengthBuff &gt; 0);</div>
<div class="line"><span class="lineno">  176</span>    assert(iFftLength &gt;= 0);</div>
<div class="line"><span class="lineno">  177</span>    assert(fSampleRate &gt; 0);</div>
<div class="line"><span class="lineno">  178</span> </div>
<div class="line"><span class="lineno">  179</span>    <span class="keywordflow">for</span> (<span class="keyword">auto</span> n = 0; n &lt; iLengthBuff; n++)</div>
<div class="line"><span class="lineno">  180</span>        pffInHz[n] = <a class="code hl_function" href="a00562.xhtml#aebe59f905b1dd02058cccbb062de6507">convertBin2Freq</a>(pfBin[n], iFftLength, fSampleRate);</div>
<div class="line"><span class="lineno">  181</span>}</div>
<div class="ttc" id="aa00562_xhtml_aebe59f905b1dd02058cccbb062de6507"><div class="ttname"><a href="a00562.xhtml#aebe59f905b1dd02058cccbb062de6507">CConversion::convertBin2Freq</a></div><div class="ttdeci">static float convertBin2Freq(float fBin, int iFftLength, float fSampleRate=44100.F)</div><div class="ttdef"><b>Definition:</b> <a href="a00179_source.xhtml#l00204">ToolConversion.h:204</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00179_source.xhtml#l00204">convertBin2Freq()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00562_a6c50a36eba57e9a21aff9eb4093ea786_cgraph.svg" width="454" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="aebe59f905b1dd02058cccbb062de6507" name="aebe59f905b1dd02058cccbb062de6507"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aebe59f905b1dd02058cccbb062de6507">&#9670;&nbsp;</a></span>convertBin2Freq() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static float CConversion::convertBin2Freq </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fBin</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>iFftLength</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fSampleRate</em> = <code>44100.F</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p >converts a FFT bin index to a frequency scalar </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">fBin</td><td>FFT bin index </td></tr>
    <tr><td class="paramname">iFftLength</td><td>length of FFT </td></tr>
    <tr><td class="paramname">fSampleRate</td><td>sample rate frequency in Hz </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>frequency in Hz </dd></dl>

<p class="definition">Definition at line <a class="el" href="a00179_source.xhtml#l00204">204</a> of file <a class="el" href="a00179_source.xhtml">ToolConversion.h</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  205</span>    {</div>
<div class="line"><span class="lineno">  206</span>        assert(fBin &gt;= 0);</div>
<div class="line"><span class="lineno">  207</span>        assert(iFftLength &gt;= 0);</div>
<div class="line"><span class="lineno">  208</span>        assert(fBin &lt; iFftLength);</div>
<div class="line"><span class="lineno">  209</span>        assert(fSampleRate &gt; 0);</div>
<div class="line"><span class="lineno">  210</span>        </div>
<div class="line"><span class="lineno">  211</span>        <span class="keywordflow">return</span> fBin * fSampleRate / <span class="keyword">static_cast&lt;</span><span class="keywordtype">float</span><span class="keyword">&gt;</span>(iFftLength);</div>
<div class="line"><span class="lineno">  212</span>    };</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="a00107_source.xhtml#l00036">CPitchSpectralAcf::compF0()</a>, <a class="el" href="a00107_source.xhtml#l00101">CPitchSpectralHps::compF0()</a>, <a class="el" href="a00047_source.xhtml#l00171">convertBin2Freq()</a>, <a class="el" href="a00089_source.xhtml#l00380">CSpectrogramIf::generateMelFb_()</a>, <a class="el" href="a00038_source.xhtml#l00425">CFeatureSpectralMfccs::genMfccFilters_()</a>, and <a class="el" href="a00086_source.xhtml#l00082">CBeatHistoIf::getBeatHistoAxisTicks()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00562_aebe59f905b1dd02058cccbb062de6507_icgraph.svg" width="100%" height="574"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="a83a5429f8bf5225377a6c8d566e3224c" name="a83a5429f8bf5225377a6c8d566e3224c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a83a5429f8bf5225377a6c8d566e3224c">&#9670;&nbsp;</a></span>convertFloat2Word()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static uint32_t CConversion::convertFloat2Word </td>
          <td>(</td>
          <td class="paramtype">const float *&#160;</td>
          <td class="paramname"><em>pfVec</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p >converts a float vector in a 32 bit word based on the sign </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pfVec</td><td>vector of signed float values (length 32) </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>uint32_t 32 bit word </dd></dl>

<p class="definition">Definition at line <a class="el" href="a00179_source.xhtml#l00227">227</a> of file <a class="el" href="a00179_source.xhtml">ToolConversion.h</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  228</span>    {</div>
<div class="line"><span class="lineno">  229</span>        assert(pfVec);</div>
<div class="line"><span class="lineno">  230</span> </div>
<div class="line"><span class="lineno">  231</span>        <span class="keywordtype">int</span> iLength = 32;</div>
<div class="line"><span class="lineno">  232</span>        uint32_t iRes = 0;</div>
<div class="line"><span class="lineno">  233</span> </div>
<div class="line"><span class="lineno">  234</span>        <span class="keywordflow">for</span> (<span class="keyword">auto</span> b = 0; b &lt; iLength; b++)</div>
<div class="line"><span class="lineno">  235</span>        {</div>
<div class="line"><span class="lineno">  236</span>            <span class="keywordflow">if</span> (pfVec[b] &gt; 0)</div>
<div class="line"><span class="lineno">  237</span>                iRes += (1 &lt;&lt; (b + 1));</div>
<div class="line"><span class="lineno">  238</span>        }</div>
<div class="line"><span class="lineno">  239</span> </div>
<div class="line"><span class="lineno">  240</span>        <span class="keywordflow">return</span> iRes;</div>
<div class="line"><span class="lineno">  241</span>    }</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="a00095_source.xhtml#l00035">CSubFingerprint::compSubFingerprint()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00562_a83a5429f8bf5225377a6c8d566e3224c_icgraph.svg" width="100%" height="300"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="a33feba1dca002766f14f9cd89a0154e0" name="a33feba1dca002766f14f9cd89a0154e0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a33feba1dca002766f14f9cd89a0154e0">&#9670;&nbsp;</a></span>convertFreq2Bark() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void CConversion::convertFreq2Bark </td>
          <td>(</td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>pfBark</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float *&#160;</td>
          <td class="paramname"><em>pffInHz</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>iLengthBuff</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="a00562.xhtml#aa2fceaa05fdd52addf05887fa270d671">BarkConversionFunctions_t</a>&#160;</td>
          <td class="paramname"><em>eFunc</em> = <code><a class="el" href="a00562.xhtml#aa2fceaa05fdd52addf05887fa270d671ae1052f8ed5db7bf6625477d2e3888bfa">kSchroeder</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p >converts a frequency array to a Bark array </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pfBark</td><td>output Bark values (length iLenghBuff, to be written) </td></tr>
    <tr><td class="paramname">pffInHz</td><td>input frequency values in Hz (length iLenghBuff) </td></tr>
    <tr><td class="paramname">iLengthBuff</td><td>length of buffers </td></tr>
    <tr><td class="paramname">eFunc</td><td>index for conversion function selection </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="a00047_source.xhtml#l00105">105</a> of file <a class="el" href="a00047_source.xhtml">ToolConversion.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  106</span>{</div>
<div class="line"><span class="lineno">  107</span>    assert(pfBark);</div>
<div class="line"><span class="lineno">  108</span>    assert(pffInHz);</div>
<div class="line"><span class="lineno">  109</span>    assert(iLengthBuff &gt; 0);</div>
<div class="line"><span class="lineno">  110</span> </div>
<div class="line"><span class="lineno">  111</span>    <span class="keywordflow">for</span> (<span class="keyword">auto</span> k = 0; k &lt; iLengthBuff; k++)</div>
<div class="line"><span class="lineno">  112</span>        pfBark[k] = <a class="code hl_variable" href="a00562.xhtml#a4ee9640a8dc6cfedef832789c60670c3">m_BarkDispatchMap</a>.at(eFunc)(pffInHz[k]);</div>
<div class="line"><span class="lineno">  113</span>}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00179_source.xhtml#l00290">m_BarkDispatchMap</a>.</p>

</div>
</div>
<a id="a0847c5f906d2239f9500b0c438ce8ead" name="a0847c5f906d2239f9500b0c438ce8ead"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0847c5f906d2239f9500b0c438ce8ead">&#9670;&nbsp;</a></span>convertFreq2Bark() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float CConversion::convertFreq2Bark </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fInHz</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="a00562.xhtml#aa2fceaa05fdd52addf05887fa270d671">BarkConversionFunctions_t</a>&#160;</td>
          <td class="paramname"><em>eFunc</em> = <code><a class="el" href="a00562.xhtml#aa2fceaa05fdd52addf05887fa270d671ae1052f8ed5db7bf6625477d2e3888bfa">kSchroeder</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p >converts a frequency scalar to a Bark value </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">fInHz</td><td>frequency in Hz </td></tr>
    <tr><td class="paramname">eFunc</td><td>index for conversion function selection </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Bark value </dd></dl>

<p class="definition">Definition at line <a class="el" href="a00047_source.xhtml#l00093">93</a> of file <a class="el" href="a00047_source.xhtml">ToolConversion.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   94</span>{</div>
<div class="line"><span class="lineno">   95</span>    assert(fInHz &gt;= 0);</div>
<div class="line"><span class="lineno">   96</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="a00562.xhtml#a4ee9640a8dc6cfedef832789c60670c3">m_BarkDispatchMap</a>.at(eFunc)(fInHz);</div>
<div class="line"><span class="lineno">   97</span>}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00179_source.xhtml#l00290">m_BarkDispatchMap</a>.</p>

</div>
</div>
<a id="aadc66ab6659cdf6e8137b1f69b645ae4" name="aadc66ab6659cdf6e8137b1f69b645ae4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aadc66ab6659cdf6e8137b1f69b645ae4">&#9670;&nbsp;</a></span>convertFreq2BarkSchroeder()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float CConversion::convertFreq2BarkSchroeder </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fFrequency</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="a00047_source.xhtml#l00126">126</a> of file <a class="el" href="a00047_source.xhtml">ToolConversion.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  127</span>{</div>
<div class="line"><span class="lineno">  128</span>    assert(fFrequency &gt; 0);</div>
<div class="line"><span class="lineno">  129</span>    <span class="keywordflow">return</span> 7.F * std::asinh(fFrequency / 650.F);</div>
<div class="line"><span class="lineno">  130</span>}</div>
</div><!-- fragment -->
</div>
</div>
<a id="aefc1f257a1adbde4f46dfc3c5c6fb0ae" name="aefc1f257a1adbde4f46dfc3c5c6fb0ae"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aefc1f257a1adbde4f46dfc3c5c6fb0ae">&#9670;&nbsp;</a></span>convertFreq2BarkTerhardt()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float CConversion::convertFreq2BarkTerhardt </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fFrequency</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="a00047_source.xhtml#l00137">137</a> of file <a class="el" href="a00047_source.xhtml">ToolConversion.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  138</span>{</div>
<div class="line"><span class="lineno">  139</span>    assert(fFrequency &gt; 0);</div>
<div class="line"><span class="lineno">  140</span>    <span class="keywordflow">return</span> 13.3F * std::atan(0.75F * fFrequency / 1000.F);</div>
<div class="line"><span class="lineno">  141</span>}</div>
</div><!-- fragment -->
</div>
</div>
<a id="a54f9ba7eb05601c56b6df67e51fb2aa7" name="a54f9ba7eb05601c56b6df67e51fb2aa7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a54f9ba7eb05601c56b6df67e51fb2aa7">&#9670;&nbsp;</a></span>convertFreq2BarkTraunmuller()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float CConversion::convertFreq2BarkTraunmuller </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fFrequency</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="a00047_source.xhtml#l00158">158</a> of file <a class="el" href="a00047_source.xhtml">ToolConversion.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  159</span>{</div>
<div class="line"><span class="lineno">  160</span>    assert(fFrequency &gt; 0);</div>
<div class="line"><span class="lineno">  161</span>    <span class="keywordflow">return</span> 26.81F / (1.F + 1960.F / fFrequency) - 0.53F;</div>
<div class="line"><span class="lineno">  162</span>}</div>
</div><!-- fragment -->
</div>
</div>
<a id="a6b01bdcc2df1c829455ba9cafcec0a44" name="a6b01bdcc2df1c829455ba9cafcec0a44"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6b01bdcc2df1c829455ba9cafcec0a44">&#9670;&nbsp;</a></span>convertFreq2BarkZwicker()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float CConversion::convertFreq2BarkZwicker </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fFrequency</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="a00047_source.xhtml#l00148">148</a> of file <a class="el" href="a00047_source.xhtml">ToolConversion.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  149</span>{</div>
<div class="line"><span class="lineno">  150</span>    assert(fFrequency &gt; 0);</div>
<div class="line"><span class="lineno">  151</span>    <span class="keywordflow">return</span> 13.F * std::atan(0.76F  * fFrequency / 1000.F) + 3.5F * std::atan(fFrequency / 7500.F);</div>
<div class="line"><span class="lineno">  152</span>}</div>
</div><!-- fragment -->
</div>
</div>
<a id="a588044409f07aff268246ced2d71ee29" name="a588044409f07aff268246ced2d71ee29"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a588044409f07aff268246ced2d71ee29">&#9670;&nbsp;</a></span>convertFreq2Bin() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void CConversion::convertFreq2Bin </td>
          <td>(</td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>pfBin</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float *&#160;</td>
          <td class="paramname"><em>pffInHz</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>iLengthBuff</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>iFftLength</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fSampleRate</em> = <code>44100.F</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p >converts a frequency vector into a FFT bin vector </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pfBin</td><td>output buffer with FFT bin indices (length iLengthBuff, to be written) </td></tr>
    <tr><td class="paramname">pffInHz</td><td>frequency in Hz input buffer (length iLengthBuff) </td></tr>
    <tr><td class="paramname">iLengthBuff</td><td>length of buffers </td></tr>
    <tr><td class="paramname">iFftLength</td><td>length of FFT </td></tr>
    <tr><td class="paramname">fSampleRate</td><td>sample rate frequency in Hz </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="a00179_source.xhtml#l00186">186</a> of file <a class="el" href="a00179_source.xhtml">ToolConversion.h</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  187</span>    {</div>
<div class="line"><span class="lineno">  188</span>        assert(pfBin);</div>
<div class="line"><span class="lineno">  189</span>        assert(pffInHz);</div>
<div class="line"><span class="lineno">  190</span>        assert(iLengthBuff &gt; 0);</div>
<div class="line"><span class="lineno">  191</span>        assert(iFftLength &gt;= 0);</div>
<div class="line"><span class="lineno">  192</span>        assert(fSampleRate &gt; 0);</div>
<div class="line"><span class="lineno">  193</span> </div>
<div class="line"><span class="lineno">  194</span>        <span class="keywordflow">for</span> (<span class="keyword">auto</span> n = 0; n &lt; iLengthBuff; n++)</div>
<div class="line"><span class="lineno">  195</span>            pfBin[n] = <a class="code hl_function" href="a00562.xhtml#ada82d84a69f4c77266835f1f06ca2ecb">convertFreq2Bin</a>(pffInHz[n], iFftLength, fSampleRate);</div>
<div class="line"><span class="lineno">  196</span>    };</div>
<div class="ttc" id="aa00562_xhtml_ada82d84a69f4c77266835f1f06ca2ecb"><div class="ttname"><a href="a00562.xhtml#ada82d84a69f4c77266835f1f06ca2ecb">CConversion::convertFreq2Bin</a></div><div class="ttdeci">static float convertFreq2Bin(float fInHz, int iFftLength, float fSampleRate=44100.F)</div><div class="ttdef"><b>Definition:</b> <a href="a00179_source.xhtml#l00169">ToolConversion.h:169</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00179_source.xhtml#l00169">convertFreq2Bin()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00562_a588044409f07aff268246ced2d71ee29_cgraph.svg" width="454" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ada82d84a69f4c77266835f1f06ca2ecb" name="ada82d84a69f4c77266835f1f06ca2ecb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ada82d84a69f4c77266835f1f06ca2ecb">&#9670;&nbsp;</a></span>convertFreq2Bin() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static float CConversion::convertFreq2Bin </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fInHz</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>iFftLength</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fSampleRate</em> = <code>44100.F</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p >converts a frequency scalar to an FFT bin index </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">fInHz</td><td>frequency value in Hz </td></tr>
    <tr><td class="paramname">iFftLength</td><td>length of FFT </td></tr>
    <tr><td class="paramname">fSampleRate</td><td>sample rate frequency in Hz </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>bin index (float) </dd></dl>

<p class="definition">Definition at line <a class="el" href="a00179_source.xhtml#l00169">169</a> of file <a class="el" href="a00179_source.xhtml">ToolConversion.h</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  170</span>    {</div>
<div class="line"><span class="lineno">  171</span>        assert(fInHz &gt;= 0);</div>
<div class="line"><span class="lineno">  172</span>        assert(iFftLength &gt;= 0);</div>
<div class="line"><span class="lineno">  173</span>        assert(fInHz &lt; fSampleRate);</div>
<div class="line"><span class="lineno">  174</span>        assert(fSampleRate &gt; 0);</div>
<div class="line"><span class="lineno">  175</span> </div>
<div class="line"><span class="lineno">  176</span>        <span class="keywordflow">return</span> fInHz / fSampleRate * <span class="keyword">static_cast&lt;</span><span class="keywordtype">float</span><span class="keyword">&gt;</span>(iFftLength);</div>
<div class="line"><span class="lineno">  177</span>    };</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="a00107_source.xhtml#l00036">CPitchSpectralAcf::compF0()</a>, <a class="el" href="a00107_source.xhtml#l00101">CPitchSpectralHps::compF0()</a>, <a class="el" href="a00086_source.xhtml#l00270">CBeatHistoIf::compHistoRange_()</a>, <a class="el" href="a00179_source.xhtml#l00186">convertFreq2Bin()</a>, <a class="el" href="a00095_source.xhtml#l00072">CSubFingerprint::genBands_()</a>, <a class="el" href="a00038_source.xhtml#l00425">CFeatureSpectralMfccs::genMfccFilters_()</a>, and <a class="el" href="a00038_source.xhtml#l00577">CFeatureSpectralPitchChroma::genPcFilters_()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00562_ada82d84a69f4c77266835f1f06ca2ecb_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="aed54c096c6fb379848ef1cd882ca7b43" name="aed54c096c6fb379848ef1cd882ca7b43"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aed54c096c6fb379848ef1cd882ca7b43">&#9670;&nbsp;</a></span>convertFreq2Mel() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void CConversion::convertFreq2Mel </td>
          <td>(</td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>pfMel</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float *&#160;</td>
          <td class="paramname"><em>pffInHz</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>iLengthBuff</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="a00562.xhtml#afb2c9d1110fec95804ccec7fe8196829">MelConversionFunctions_t</a>&#160;</td>
          <td class="paramname"><em>eFunc</em> = <code><a class="el" href="a00562.xhtml#afb2c9d1110fec95804ccec7fe8196829a68759166341f3045e7d639d0c6cb397e">kFant</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p >converts a frequency array to a mel array </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pfMel</td><td>output mel values (length iLenghBuff, to be written) </td></tr>
    <tr><td class="paramname">pffInHz</td><td>input frequency values in Hz (length iLenghBuff) </td></tr>
    <tr><td class="paramname">iLengthBuff</td><td>length of buffers </td></tr>
    <tr><td class="paramname">eFunc</td><td>index for conversion function selection </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>void </dd></dl>

<p class="definition">Definition at line <a class="el" href="a00047_source.xhtml#l00030">30</a> of file <a class="el" href="a00047_source.xhtml">ToolConversion.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   31</span>{</div>
<div class="line"><span class="lineno">   32</span>    assert(pfMel);</div>
<div class="line"><span class="lineno">   33</span>    assert(pffInHz);</div>
<div class="line"><span class="lineno">   34</span>    assert(iLengthBuff &gt; 0);</div>
<div class="line"><span class="lineno">   35</span> </div>
<div class="line"><span class="lineno">   36</span>    <span class="keywordflow">for</span> (<span class="keyword">auto</span> k = 0; k &lt; iLengthBuff; k++)</div>
<div class="line"><span class="lineno">   37</span>        pfMel[k] = <a class="code hl_variable" href="a00562.xhtml#a1ddc8df24c34d327e77dcebe71924ea3">m_MelDispatchMap</a>.at(eFunc)(pffInHz[k]);</div>
<div class="line"><span class="lineno">   38</span>}</div>
<div class="ttc" id="aa00562_xhtml_a1ddc8df24c34d327e77dcebe71924ea3"><div class="ttname"><a href="a00562.xhtml#a1ddc8df24c34d327e77dcebe71924ea3">CConversion::m_MelDispatchMap</a></div><div class="ttdeci">static const std::map&lt; int, std::function&lt; float(float)&gt; &gt; m_MelDispatchMap</div><div class="ttdef"><b>Definition:</b> <a href="a00179_source.xhtml#l00288">ToolConversion.h:288</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00179_source.xhtml#l00288">m_MelDispatchMap</a>.</p>

</div>
</div>
<a id="ad0d26c7c6a5edaa81527e68fe0c0c46f" name="ad0d26c7c6a5edaa81527e68fe0c0c46f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad0d26c7c6a5edaa81527e68fe0c0c46f">&#9670;&nbsp;</a></span>convertFreq2Mel() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float CConversion::convertFreq2Mel </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fInHz</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="a00562.xhtml#afb2c9d1110fec95804ccec7fe8196829">MelConversionFunctions_t</a>&#160;</td>
          <td class="paramname"><em>eFunc</em> = <code><a class="el" href="a00562.xhtml#afb2c9d1110fec95804ccec7fe8196829a68759166341f3045e7d639d0c6cb397e">kFant</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p >converts a frequency scalar to a mel value </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">fInHz</td><td>frequency in Hz </td></tr>
    <tr><td class="paramname">eFunc</td><td>index for conversion function selection </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>mel value </dd></dl>

<p class="definition">Definition at line <a class="el" href="a00047_source.xhtml#l00018">18</a> of file <a class="el" href="a00047_source.xhtml">ToolConversion.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   19</span>{</div>
<div class="line"><span class="lineno">   20</span>    assert(fInHz &gt;= 0);</div>
<div class="line"><span class="lineno">   21</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="a00562.xhtml#a1ddc8df24c34d327e77dcebe71924ea3">m_MelDispatchMap</a>.at(eFunc)(fInHz);</div>
<div class="line"><span class="lineno">   22</span>}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00179_source.xhtml#l00288">m_MelDispatchMap</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00089_source.xhtml#l00380">CSpectrogramIf::generateMelFb_()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00562_ad0d26c7c6a5edaa81527e68fe0c0c46f_icgraph.svg" width="100%" height="378"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="afded0983d477928d9f0be2b61ea22273" name="afded0983d477928d9f0be2b61ea22273"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afded0983d477928d9f0be2b61ea22273">&#9670;&nbsp;</a></span>convertFreq2MelFant()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float CConversion::convertFreq2MelFant </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fFrequency</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="a00047_source.xhtml#l00050">50</a> of file <a class="el" href="a00047_source.xhtml">ToolConversion.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   51</span>{</div>
<div class="line"><span class="lineno">   52</span>    <span class="keywordflow">return</span> 1000.F * std::log2(1.F + fFrequency / 1000.F);</div>
<div class="line"><span class="lineno">   53</span>}</div>
</div><!-- fragment -->
</div>
</div>
<a id="ad1cbd90f3bff81014eaeb2d97f5c6ae5" name="ad1cbd90f3bff81014eaeb2d97f5c6ae5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad1cbd90f3bff81014eaeb2d97f5c6ae5">&#9670;&nbsp;</a></span>convertFreq2MelShaughnessy()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float CConversion::convertFreq2MelShaughnessy </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fFrequency</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="a00047_source.xhtml#l00060">60</a> of file <a class="el" href="a00047_source.xhtml">ToolConversion.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   61</span>{</div>
<div class="line"><span class="lineno">   62</span>    <span class="keywordflow">return</span> 2595.F * std::log10(1.F + fFrequency / 700.F);</div>
<div class="line"><span class="lineno">   63</span>}</div>
</div><!-- fragment -->
</div>
</div>
<a id="a69295613ff347523c49bc96951aaa437" name="a69295613ff347523c49bc96951aaa437"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a69295613ff347523c49bc96951aaa437">&#9670;&nbsp;</a></span>convertFreq2MelUmesh()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float CConversion::convertFreq2MelUmesh </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fFrequency</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="a00047_source.xhtml#l00070">70</a> of file <a class="el" href="a00047_source.xhtml">ToolConversion.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   71</span>{</div>
<div class="line"><span class="lineno">   72</span>    <span class="keywordflow">return</span> fFrequency / (2.4e-4F * fFrequency + 0.741F);</div>
<div class="line"><span class="lineno">   73</span>}</div>
</div><!-- fragment -->
</div>
</div>
<a id="a81ba4ad719a2c8ce194af937d5050d17" name="a81ba4ad719a2c8ce194af937d5050d17"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a81ba4ad719a2c8ce194af937d5050d17">&#9670;&nbsp;</a></span>convertFreq2Midi() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void CConversion::convertFreq2Midi </td>
          <td>(</td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>pfMidi</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float *&#160;</td>
          <td class="paramname"><em>pffInHz</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>iLengthBuff</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fA4InHz</em> = <code>440.F</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p >converts a frequency vector to midi (float) </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pfMidi</td><td>output buffer (length iLengthBuff, to be written) </td></tr>
    <tr><td class="paramname">pffInHz</td><td>input buffer with frequency values in Hz (length iLengthBuff) </td></tr>
    <tr><td class="paramname">iLengthBuff</td><td>length of buffers </td></tr>
    <tr><td class="paramname">fA4InHz</td><td>tuning (reference) frequency in Hz </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="a00179_source.xhtml#l00122">122</a> of file <a class="el" href="a00179_source.xhtml">ToolConversion.h</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  123</span>    {</div>
<div class="line"><span class="lineno">  124</span>        assert(pfMidi);</div>
<div class="line"><span class="lineno">  125</span>        assert(pffInHz);</div>
<div class="line"><span class="lineno">  126</span>        assert(iLengthBuff &gt; 0);</div>
<div class="line"><span class="lineno">  127</span>        assert(fA4InHz &gt; 0);</div>
<div class="line"><span class="lineno">  128</span> </div>
<div class="line"><span class="lineno">  129</span>        <span class="keywordflow">for</span> (<span class="keyword">auto</span> n = 0; n &lt; iLengthBuff; n++)</div>
<div class="line"><span class="lineno">  130</span>            pfMidi[n] = <a class="code hl_function" href="a00562.xhtml#ade267323a6a537a150141fa4f0ab570a">convertFreq2Midi</a>(pffInHz[n], fA4InHz);</div>
<div class="line"><span class="lineno">  131</span>    };</div>
<div class="ttc" id="aa00562_xhtml_ade267323a6a537a150141fa4f0ab570a"><div class="ttname"><a href="a00562.xhtml#ade267323a6a537a150141fa4f0ab570a">CConversion::convertFreq2Midi</a></div><div class="ttdeci">static float convertFreq2Midi(float fInHz, float fA4InHz=440.F)</div><div class="ttdef"><b>Definition:</b> <a href="a00179_source.xhtml#l00109">ToolConversion.h:109</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00179_source.xhtml#l00109">convertFreq2Midi()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00562_a81ba4ad719a2c8ce194af937d5050d17_cgraph.svg" width="464" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ade267323a6a537a150141fa4f0ab570a" name="ade267323a6a537a150141fa4f0ab570a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ade267323a6a537a150141fa4f0ab570a">&#9670;&nbsp;</a></span>convertFreq2Midi() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static float CConversion::convertFreq2Midi </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fInHz</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fA4InHz</em> = <code>440.F</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p >converts a frequency scalar to midi (float) </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">fInHz</td><td>frequency value in Hz </td></tr>
    <tr><td class="paramname">fA4InHz</td><td>tuning (reference) frequency in Hz </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Midi value </dd></dl>

<p class="definition">Definition at line <a class="el" href="a00179_source.xhtml#l00109">109</a> of file <a class="el" href="a00179_source.xhtml">ToolConversion.h</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  110</span>    {</div>
<div class="line"><span class="lineno">  111</span>        assert(fInHz &gt; 0);</div>
<div class="line"><span class="lineno">  112</span>        assert(fA4InHz &gt; 0);</div>
<div class="line"><span class="lineno">  113</span>        <span class="keywordflow">return</span> 69.F + 12.F * std::log2(fInHz / fA4InHz);</div>
<div class="line"><span class="lineno">  114</span>    };</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="a00179_source.xhtml#l00122">convertFreq2Midi()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00562_ade267323a6a537a150141fa4f0ab570a_icgraph.svg" width="464" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ad8d907d49dc6a44bdd8152e4bf33b94a" name="ad8d907d49dc6a44bdd8152e4bf33b94a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad8d907d49dc6a44bdd8152e4bf33b94a">&#9670;&nbsp;</a></span>convertMel2Freq() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void CConversion::convertMel2Freq </td>
          <td>(</td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>pffInHz</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float *&#160;</td>
          <td class="paramname"><em>pfMel</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>iLengthBuff</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="a00562.xhtml#afb2c9d1110fec95804ccec7fe8196829">MelConversionFunctions_t</a>&#160;</td>
          <td class="paramname"><em>eFunc</em> = <code><a class="el" href="a00562.xhtml#afb2c9d1110fec95804ccec7fe8196829a68759166341f3045e7d639d0c6cb397e">kFant</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p >converts a mel array to a frequency array </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pffInHz</td><td>output frequency values in Hz (length iLenghBuff, to be written) </td></tr>
    <tr><td class="paramname">pfMel</td><td>input mel values (length iLenghBuff) </td></tr>
    <tr><td class="paramname">iLengthBuff</td><td>length of buffers </td></tr>
    <tr><td class="paramname">eFunc</td><td>index for conversion function selection </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>void </dd></dl>

<p class="definition">Definition at line <a class="el" href="a00047_source.xhtml#l00040">40</a> of file <a class="el" href="a00047_source.xhtml">ToolConversion.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   41</span>{</div>
<div class="line"><span class="lineno">   42</span>    assert(pfMel);</div>
<div class="line"><span class="lineno">   43</span>    assert(pffInHz);</div>
<div class="line"><span class="lineno">   44</span>    assert(iLengthBuff &gt; 0);</div>
<div class="line"><span class="lineno">   45</span> </div>
<div class="line"><span class="lineno">   46</span>    <span class="keywordflow">for</span> (<span class="keyword">auto</span> k = 0; k &lt; iLengthBuff; k++)</div>
<div class="line"><span class="lineno">   47</span>        pffInHz[k] = <a class="code hl_variable" href="a00562.xhtml#a1ddc8df24c34d327e77dcebe71924ea3">m_MelDispatchMap</a>.at(eFunc + <a class="code hl_enumvalue" href="a00562.xhtml#afb2c9d1110fec95804ccec7fe8196829aef805fa78b88a2ef2ea5e562cac68fa1">kNumMelConversionFunctions</a>)(pfMel[k]);</div>
<div class="line"><span class="lineno">   48</span>}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00179_source.xhtml#l00025">kNumMelConversionFunctions</a>, and <a class="el" href="a00179_source.xhtml#l00288">m_MelDispatchMap</a>.</p>

</div>
</div>
<a id="adbcadd75a3a33ca9e9453a17a9336318" name="adbcadd75a3a33ca9e9453a17a9336318"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adbcadd75a3a33ca9e9453a17a9336318">&#9670;&nbsp;</a></span>convertMel2Freq() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float CConversion::convertMel2Freq </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fMel</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="a00562.xhtml#afb2c9d1110fec95804ccec7fe8196829">MelConversionFunctions_t</a>&#160;</td>
          <td class="paramname"><em>eFunc</em> = <code><a class="el" href="a00562.xhtml#afb2c9d1110fec95804ccec7fe8196829a68759166341f3045e7d639d0c6cb397e">kFant</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p >converts a mel scalar to a frequency </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">fMel</td><td>mel value </td></tr>
    <tr><td class="paramname">eFunc</td><td>index for conversion function selection </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>frequency value in Hz </dd></dl>

<p class="definition">Definition at line <a class="el" href="a00047_source.xhtml#l00024">24</a> of file <a class="el" href="a00047_source.xhtml">ToolConversion.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   25</span>{</div>
<div class="line"><span class="lineno">   26</span>    assert(fMel &gt;= 0);</div>
<div class="line"><span class="lineno">   27</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="a00562.xhtml#a1ddc8df24c34d327e77dcebe71924ea3">m_MelDispatchMap</a>.at(eFunc + <a class="code hl_enumvalue" href="a00562.xhtml#afb2c9d1110fec95804ccec7fe8196829aef805fa78b88a2ef2ea5e562cac68fa1">kNumMelConversionFunctions</a>)(fMel);</div>
<div class="line"><span class="lineno">   28</span>}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00179_source.xhtml#l00025">kNumMelConversionFunctions</a>, and <a class="el" href="a00179_source.xhtml#l00288">m_MelDispatchMap</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00089_source.xhtml#l00380">CSpectrogramIf::generateMelFb_()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00562_adbcadd75a3a33ca9e9453a17a9336318_icgraph.svg" width="100%" height="378"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="a8cbe4cd5f8373f1cff28debbf3c0d90a" name="a8cbe4cd5f8373f1cff28debbf3c0d90a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8cbe4cd5f8373f1cff28debbf3c0d90a">&#9670;&nbsp;</a></span>convertMel2FreqFant()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float CConversion::convertMel2FreqFant </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fMel</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="a00047_source.xhtml#l00055">55</a> of file <a class="el" href="a00047_source.xhtml">ToolConversion.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   56</span>{</div>
<div class="line"><span class="lineno">   57</span>    <span class="keywordflow">return</span> 1000.F * (std::exp2(fMel / 1000.F) - 1.F);</div>
<div class="line"><span class="lineno">   58</span>}</div>
</div><!-- fragment -->
</div>
</div>
<a id="a373985144ef6567b889701a027dbceaf" name="a373985144ef6567b889701a027dbceaf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a373985144ef6567b889701a027dbceaf">&#9670;&nbsp;</a></span>convertMel2FreqShaughnessy()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float CConversion::convertMel2FreqShaughnessy </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fMel</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="a00047_source.xhtml#l00065">65</a> of file <a class="el" href="a00047_source.xhtml">ToolConversion.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   66</span>{</div>
<div class="line"><span class="lineno">   67</span>    <span class="keywordflow">return</span> 700.F * (std::pow(10.F, fMel / 2595.F) - 1.F);</div>
<div class="line"><span class="lineno">   68</span>}</div>
</div><!-- fragment -->
</div>
</div>
<a id="ac5ad6c7835eb3e7c3eed431d29e53e85" name="ac5ad6c7835eb3e7c3eed431d29e53e85"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac5ad6c7835eb3e7c3eed431d29e53e85">&#9670;&nbsp;</a></span>convertMel2FreqUmesh()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float CConversion::convertMel2FreqUmesh </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fMel</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="a00047_source.xhtml#l00075">75</a> of file <a class="el" href="a00047_source.xhtml">ToolConversion.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   76</span>{</div>
<div class="line"><span class="lineno">   77</span>    <span class="keywordflow">return</span>  fMel * 0.741F / (1.F - fMel * 2.4e-4F);</div>
<div class="line"><span class="lineno">   78</span>}</div>
</div><!-- fragment -->
</div>
</div>
<a id="a555296e5af0d5ae0b9effdc6be642a2d" name="a555296e5af0d5ae0b9effdc6be642a2d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a555296e5af0d5ae0b9effdc6be642a2d">&#9670;&nbsp;</a></span>convertMidi2Freq() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void CConversion::convertMidi2Freq </td>
          <td>(</td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>pffInHz</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float *&#160;</td>
          <td class="paramname"><em>pfMidi</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>iLengthBuff</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fA4InHz</em> = <code>440.F</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p >converts a midi vector to frequency </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pffInHz</td><td>output buffer with frequency values in Hz (length iLengthBuff) </td></tr>
    <tr><td class="paramname">pfMidi</td><td>input buffer (length iLengthBuff, to be written) </td></tr>
    <tr><td class="paramname">iLengthBuff</td><td>length of buffers </td></tr>
    <tr><td class="paramname">fA4InHz</td><td>tuning (reference) frequency in Hz </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="a00179_source.xhtml#l00151">151</a> of file <a class="el" href="a00179_source.xhtml">ToolConversion.h</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  152</span>    {</div>
<div class="line"><span class="lineno">  153</span>        assert(pfMidi);</div>
<div class="line"><span class="lineno">  154</span>        assert(pffInHz);</div>
<div class="line"><span class="lineno">  155</span>        assert(iLengthBuff &gt; 0);</div>
<div class="line"><span class="lineno">  156</span>        assert(fA4InHz &gt; 0);</div>
<div class="line"><span class="lineno">  157</span> </div>
<div class="line"><span class="lineno">  158</span>        <span class="keywordflow">for</span> (<span class="keyword">auto</span> n = 0; n &lt; iLengthBuff; n++)</div>
<div class="line"><span class="lineno">  159</span>            pffInHz[n] = <a class="code hl_function" href="a00562.xhtml#a3461898be6be7ae7059904860f5231e1">convertMidi2Freq</a>(pfMidi[n], fA4InHz);</div>
<div class="line"><span class="lineno">  160</span>    };</div>
<div class="ttc" id="aa00562_xhtml_a3461898be6be7ae7059904860f5231e1"><div class="ttname"><a href="a00562.xhtml#a3461898be6be7ae7059904860f5231e1">CConversion::convertMidi2Freq</a></div><div class="ttdeci">static float convertMidi2Freq(float fMidi, float fA4InHz=440.F)</div><div class="ttdef"><b>Definition:</b> <a href="a00179_source.xhtml#l00138">ToolConversion.h:138</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00179_source.xhtml#l00138">convertMidi2Freq()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00562_a555296e5af0d5ae0b9effdc6be642a2d_cgraph.svg" width="464" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a3461898be6be7ae7059904860f5231e1" name="a3461898be6be7ae7059904860f5231e1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3461898be6be7ae7059904860f5231e1">&#9670;&nbsp;</a></span>convertMidi2Freq() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static float CConversion::convertMidi2Freq </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fMidi</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fA4InHz</em> = <code>440.F</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p >converts a midi scalar to frequency </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">fMidi</td><td>value </td></tr>
    <tr><td class="paramname">fA4InHz</td><td>tuning (reference) frequency in Hz </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>frequency value in Hz </dd></dl>

<p class="definition">Definition at line <a class="el" href="a00179_source.xhtml#l00138">138</a> of file <a class="el" href="a00179_source.xhtml">ToolConversion.h</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  139</span>    {</div>
<div class="line"><span class="lineno">  140</span>        assert(fMidi &gt;= 0);</div>
<div class="line"><span class="lineno">  141</span>        assert(fA4InHz &gt; 0);</div>
<div class="line"><span class="lineno">  142</span>        <span class="keywordflow">return</span> fA4InHz * std::exp2((fMidi - 69.F) / 12.F);</div>
<div class="line"><span class="lineno">  143</span>    };</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="a00179_source.xhtml#l00151">convertMidi2Freq()</a>, and <a class="el" href="a00038_source.xhtml#l00577">CFeatureSpectralPitchChroma::genPcFilters_()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00562_a3461898be6be7ae7059904860f5231e1_icgraph.svg" width="100%" height="402"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="ad4975c461d6f25aa80b07f4959e85f1a" name="ad4975c461d6f25aa80b07f4959e85f1a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad4975c461d6f25aa80b07f4959e85f1a">&#9670;&nbsp;</a></span>convertWord2Float()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void CConversion::convertWord2Float </td>
          <td>(</td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>pfDest</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>iWord</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p >converts a 32 bit word into a float vector of -1.F and 1.F </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pfDest</td><td>destination buffer (length 32, to be written) </td></tr>
    <tr><td class="paramname">iWord</td><td>32 bit word to be decoded </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="a00179_source.xhtml#l00247">247</a> of file <a class="el" href="a00179_source.xhtml">ToolConversion.h</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  248</span>    {</div>
<div class="line"><span class="lineno">  249</span>        assert(pfDest);</div>
<div class="line"><span class="lineno">  250</span> </div>
<div class="line"><span class="lineno">  251</span>        <span class="keywordtype">int</span> iLength = 32;</div>
<div class="line"><span class="lineno">  252</span> </div>
<div class="line"><span class="lineno">  253</span>        <span class="keywordflow">for</span> (<span class="keyword">auto</span> b = 0; b &lt; iLength; b++)</div>
<div class="line"><span class="lineno">  254</span>        {</div>
<div class="line"><span class="lineno">  255</span>            <span class="keywordflow">if</span> (iWord &amp; (1 &lt;&lt; (b + 1)))</div>
<div class="line"><span class="lineno">  256</span>                pfDest[b] = 1.F;</div>
<div class="line"><span class="lineno">  257</span>            <span class="keywordflow">else</span></div>
<div class="line"><span class="lineno">  258</span>                pfDest[b] = -1.F;</div>
<div class="line"><span class="lineno">  259</span>        }</div>
<div class="line"><span class="lineno">  260</span>    }</div>
</div><!-- fragment -->
</div>
</div>
<a id="a44280bc6f495dda44039122a351005c9" name="a44280bc6f495dda44039122a351005c9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a44280bc6f495dda44039122a351005c9">&#9670;&nbsp;</a></span>~CConversion()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual CConversion::~CConversion </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="a00179_source.xhtml#l00286">286</a> of file <a class="el" href="a00179_source.xhtml">ToolConversion.h</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  286</span>{};</div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="a4ee9640a8dc6cfedef832789c60670c3" name="a4ee9640a8dc6cfedef832789c60670c3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4ee9640a8dc6cfedef832789c60670c3">&#9670;&nbsp;</a></span>m_BarkDispatchMap</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const std::map&lt; int, std::function&lt; float(float)&gt; &gt; CConversion::m_BarkDispatchMap</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line">{</div>
<div class="line">        {<a class="code hl_enumvalue" href="a00562.xhtml#aa2fceaa05fdd52addf05887fa270d671ae1052f8ed5db7bf6625477d2e3888bfa">kSchroeder</a>, &amp;<a class="code hl_function" href="a00562.xhtml#aadc66ab6659cdf6e8137b1f69b645ae4">convertFreq2BarkSchroeder</a>},</div>
<div class="line">        {<a class="code hl_enumvalue" href="a00562.xhtml#aa2fceaa05fdd52addf05887fa270d671a4599b264318a69ee39bd92abb863ddca">kTerhardt</a>, &amp;<a class="code hl_function" href="a00562.xhtml#aefc1f257a1adbde4f46dfc3c5c6fb0ae">convertFreq2BarkTerhardt</a>},</div>
<div class="line">        {<a class="code hl_enumvalue" href="a00562.xhtml#aa2fceaa05fdd52addf05887fa270d671a54ef7f149c3da118be856d07cdd7ffb3">kZwicker</a>, &amp;<a class="code hl_function" href="a00562.xhtml#a6b01bdcc2df1c829455ba9cafcec0a44">convertFreq2BarkZwicker</a>},</div>
<div class="line">        {<a class="code hl_enumvalue" href="a00562.xhtml#aa2fceaa05fdd52addf05887fa270d671a488c5cac9caa956ad026e8c2b4998320">kTraunmuller</a>, &amp;<a class="code hl_function" href="a00562.xhtml#a54f9ba7eb05601c56b6df67e51fb2aa7">convertFreq2BarkTraunmuller</a>},</div>
<div class="line">        {<a class="code hl_enumvalue" href="a00562.xhtml#aa2fceaa05fdd52addf05887fa270d671ae1052f8ed5db7bf6625477d2e3888bfa">kSchroeder</a> + <a class="code hl_enumvalue" href="a00562.xhtml#aa2fceaa05fdd52addf05887fa270d671a023992bb2b1ea27640e38827f9414c6c">kNumBarkConversionFunctions</a>, &amp;<a class="code hl_function" href="a00562.xhtml#a4ea1fb5474b55958df71bfe80b73773e">convertBark2FreqSchroeder</a>},</div>
<div class="line">        {<a class="code hl_enumvalue" href="a00562.xhtml#aa2fceaa05fdd52addf05887fa270d671a4599b264318a69ee39bd92abb863ddca">kTerhardt</a> + <a class="code hl_enumvalue" href="a00562.xhtml#aa2fceaa05fdd52addf05887fa270d671a023992bb2b1ea27640e38827f9414c6c">kNumBarkConversionFunctions</a>, &amp;<a class="code hl_function" href="a00562.xhtml#af9caed8b86edcc69b34cccd78b42fa27">convertBark2FreqTerhardt</a>},</div>
<div class="line">        {<a class="code hl_enumvalue" href="a00562.xhtml#aa2fceaa05fdd52addf05887fa270d671a54ef7f149c3da118be856d07cdd7ffb3">kZwicker</a> + <a class="code hl_enumvalue" href="a00562.xhtml#aa2fceaa05fdd52addf05887fa270d671a023992bb2b1ea27640e38827f9414c6c">kNumBarkConversionFunctions</a>, &amp;<a class="code hl_function" href="a00562.xhtml#afefc9864b5de040f8aa0e0b51dbe8096">convertBark2FreqZwicker</a>},</div>
<div class="line">        {<a class="code hl_enumvalue" href="a00562.xhtml#aa2fceaa05fdd52addf05887fa270d671a488c5cac9caa956ad026e8c2b4998320">kTraunmuller</a> + <a class="code hl_enumvalue" href="a00562.xhtml#aa2fceaa05fdd52addf05887fa270d671a023992bb2b1ea27640e38827f9414c6c">kNumBarkConversionFunctions</a>,&amp;<a class="code hl_function" href="a00562.xhtml#a4aa5c16cc761a141e7a122eeaf855c46">convertBark2FreqTraunmuller</a>}</div>
<div class="line">}</div>
<div class="ttc" id="aa00562_xhtml_a4aa5c16cc761a141e7a122eeaf855c46"><div class="ttname"><a href="a00562.xhtml#a4aa5c16cc761a141e7a122eeaf855c46">CConversion::convertBark2FreqTraunmuller</a></div><div class="ttdeci">static float convertBark2FreqTraunmuller(float fBark)</div><div class="ttdef"><b>Definition:</b> <a href="a00047_source.xhtml#l00163">ToolConversion.cpp:163</a></div></div>
<div class="ttc" id="aa00562_xhtml_a4ea1fb5474b55958df71bfe80b73773e"><div class="ttname"><a href="a00562.xhtml#a4ea1fb5474b55958df71bfe80b73773e">CConversion::convertBark2FreqSchroeder</a></div><div class="ttdeci">static float convertBark2FreqSchroeder(float fBark)</div><div class="ttdef"><b>Definition:</b> <a href="a00047_source.xhtml#l00131">ToolConversion.cpp:131</a></div></div>
<div class="ttc" id="aa00562_xhtml_a54f9ba7eb05601c56b6df67e51fb2aa7"><div class="ttname"><a href="a00562.xhtml#a54f9ba7eb05601c56b6df67e51fb2aa7">CConversion::convertFreq2BarkTraunmuller</a></div><div class="ttdeci">static float convertFreq2BarkTraunmuller(float fFrequency)</div><div class="ttdef"><b>Definition:</b> <a href="a00047_source.xhtml#l00158">ToolConversion.cpp:158</a></div></div>
<div class="ttc" id="aa00562_xhtml_a6b01bdcc2df1c829455ba9cafcec0a44"><div class="ttname"><a href="a00562.xhtml#a6b01bdcc2df1c829455ba9cafcec0a44">CConversion::convertFreq2BarkZwicker</a></div><div class="ttdeci">static float convertFreq2BarkZwicker(float fFrequency)</div><div class="ttdef"><b>Definition:</b> <a href="a00047_source.xhtml#l00148">ToolConversion.cpp:148</a></div></div>
<div class="ttc" id="aa00562_xhtml_aadc66ab6659cdf6e8137b1f69b645ae4"><div class="ttname"><a href="a00562.xhtml#aadc66ab6659cdf6e8137b1f69b645ae4">CConversion::convertFreq2BarkSchroeder</a></div><div class="ttdeci">static float convertFreq2BarkSchroeder(float fFrequency)</div><div class="ttdef"><b>Definition:</b> <a href="a00047_source.xhtml#l00126">ToolConversion.cpp:126</a></div></div>
<div class="ttc" id="aa00562_xhtml_aefc1f257a1adbde4f46dfc3c5c6fb0ae"><div class="ttname"><a href="a00562.xhtml#aefc1f257a1adbde4f46dfc3c5c6fb0ae">CConversion::convertFreq2BarkTerhardt</a></div><div class="ttdeci">static float convertFreq2BarkTerhardt(float fFrequency)</div><div class="ttdef"><b>Definition:</b> <a href="a00047_source.xhtml#l00137">ToolConversion.cpp:137</a></div></div>
<div class="ttc" id="aa00562_xhtml_af9caed8b86edcc69b34cccd78b42fa27"><div class="ttname"><a href="a00562.xhtml#af9caed8b86edcc69b34cccd78b42fa27">CConversion::convertBark2FreqTerhardt</a></div><div class="ttdeci">static float convertBark2FreqTerhardt(float fBark)</div><div class="ttdef"><b>Definition:</b> <a href="a00047_source.xhtml#l00142">ToolConversion.cpp:142</a></div></div>
<div class="ttc" id="aa00562_xhtml_afefc9864b5de040f8aa0e0b51dbe8096"><div class="ttname"><a href="a00562.xhtml#afefc9864b5de040f8aa0e0b51dbe8096">CConversion::convertBark2FreqZwicker</a></div><div class="ttdeci">static float convertBark2FreqZwicker(float fBark)</div><div class="ttdef"><b>Definition:</b> <a href="a00047_source.xhtml#l00153">ToolConversion.cpp:153</a></div></div>
</div><!-- fragment -->
<p class="definition">Definition at line <a class="el" href="a00179_source.xhtml#l00290">290</a> of file <a class="el" href="a00179_source.xhtml">ToolConversion.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00047_source.xhtml#l00099">convertBark2Freq()</a>, and <a class="el" href="a00047_source.xhtml#l00093">convertFreq2Bark()</a>.</p>

</div>
</div>
<a id="a1ddc8df24c34d327e77dcebe71924ea3" name="a1ddc8df24c34d327e77dcebe71924ea3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1ddc8df24c34d327e77dcebe71924ea3">&#9670;&nbsp;</a></span>m_MelDispatchMap</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const std::map&lt; int, std::function&lt; float(float)&gt; &gt; CConversion::m_MelDispatchMap</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line">{</div>
<div class="line">        {<a class="code hl_enumvalue" href="a00562.xhtml#afb2c9d1110fec95804ccec7fe8196829a68759166341f3045e7d639d0c6cb397e">kFant</a>, &amp;<a class="code hl_function" href="a00562.xhtml#afded0983d477928d9f0be2b61ea22273">convertFreq2MelFant</a>},</div>
<div class="line">        {<a class="code hl_enumvalue" href="a00562.xhtml#afb2c9d1110fec95804ccec7fe8196829a16a9d12c2905cb442c5e818f18a6cb37">kShaughnessy</a>, &amp;<a class="code hl_function" href="a00562.xhtml#ad1cbd90f3bff81014eaeb2d97f5c6ae5">convertFreq2MelShaughnessy</a>},</div>
<div class="line">        {<a class="code hl_enumvalue" href="a00562.xhtml#afb2c9d1110fec95804ccec7fe8196829aef014545d73bd308d2834e9472c90dc1">kUmesh</a>, &amp;<a class="code hl_function" href="a00562.xhtml#a69295613ff347523c49bc96951aaa437">convertFreq2MelUmesh</a>},</div>
<div class="line">        {<a class="code hl_enumvalue" href="a00562.xhtml#afb2c9d1110fec95804ccec7fe8196829a68759166341f3045e7d639d0c6cb397e">kFant</a> + <a class="code hl_enumvalue" href="a00562.xhtml#afb2c9d1110fec95804ccec7fe8196829aef805fa78b88a2ef2ea5e562cac68fa1">kNumMelConversionFunctions</a>, &amp;<a class="code hl_function" href="a00562.xhtml#a8cbe4cd5f8373f1cff28debbf3c0d90a">convertMel2FreqFant</a>},</div>
<div class="line">        {<a class="code hl_enumvalue" href="a00562.xhtml#afb2c9d1110fec95804ccec7fe8196829a16a9d12c2905cb442c5e818f18a6cb37">kShaughnessy</a> + <a class="code hl_enumvalue" href="a00562.xhtml#afb2c9d1110fec95804ccec7fe8196829aef805fa78b88a2ef2ea5e562cac68fa1">kNumMelConversionFunctions</a>, &amp;<a class="code hl_function" href="a00562.xhtml#a373985144ef6567b889701a027dbceaf">convertMel2FreqShaughnessy</a>},</div>
<div class="line">        {<a class="code hl_enumvalue" href="a00562.xhtml#afb2c9d1110fec95804ccec7fe8196829aef014545d73bd308d2834e9472c90dc1">kUmesh</a> + <a class="code hl_enumvalue" href="a00562.xhtml#afb2c9d1110fec95804ccec7fe8196829aef805fa78b88a2ef2ea5e562cac68fa1">kNumMelConversionFunctions</a>, &amp;<a class="code hl_function" href="a00562.xhtml#ac5ad6c7835eb3e7c3eed431d29e53e85">convertMel2FreqUmesh</a>}</div>
<div class="line">}</div>
<div class="ttc" id="aa00562_xhtml_a373985144ef6567b889701a027dbceaf"><div class="ttname"><a href="a00562.xhtml#a373985144ef6567b889701a027dbceaf">CConversion::convertMel2FreqShaughnessy</a></div><div class="ttdeci">static float convertMel2FreqShaughnessy(float fMel)</div><div class="ttdef"><b>Definition:</b> <a href="a00047_source.xhtml#l00065">ToolConversion.cpp:65</a></div></div>
<div class="ttc" id="aa00562_xhtml_a69295613ff347523c49bc96951aaa437"><div class="ttname"><a href="a00562.xhtml#a69295613ff347523c49bc96951aaa437">CConversion::convertFreq2MelUmesh</a></div><div class="ttdeci">static float convertFreq2MelUmesh(float fFrequency)</div><div class="ttdef"><b>Definition:</b> <a href="a00047_source.xhtml#l00070">ToolConversion.cpp:70</a></div></div>
<div class="ttc" id="aa00562_xhtml_a8cbe4cd5f8373f1cff28debbf3c0d90a"><div class="ttname"><a href="a00562.xhtml#a8cbe4cd5f8373f1cff28debbf3c0d90a">CConversion::convertMel2FreqFant</a></div><div class="ttdeci">static float convertMel2FreqFant(float fMel)</div><div class="ttdef"><b>Definition:</b> <a href="a00047_source.xhtml#l00055">ToolConversion.cpp:55</a></div></div>
<div class="ttc" id="aa00562_xhtml_ac5ad6c7835eb3e7c3eed431d29e53e85"><div class="ttname"><a href="a00562.xhtml#ac5ad6c7835eb3e7c3eed431d29e53e85">CConversion::convertMel2FreqUmesh</a></div><div class="ttdeci">static float convertMel2FreqUmesh(float fMel)</div><div class="ttdef"><b>Definition:</b> <a href="a00047_source.xhtml#l00075">ToolConversion.cpp:75</a></div></div>
<div class="ttc" id="aa00562_xhtml_ad1cbd90f3bff81014eaeb2d97f5c6ae5"><div class="ttname"><a href="a00562.xhtml#ad1cbd90f3bff81014eaeb2d97f5c6ae5">CConversion::convertFreq2MelShaughnessy</a></div><div class="ttdeci">static float convertFreq2MelShaughnessy(float fFrequency)</div><div class="ttdef"><b>Definition:</b> <a href="a00047_source.xhtml#l00060">ToolConversion.cpp:60</a></div></div>
<div class="ttc" id="aa00562_xhtml_afded0983d477928d9f0be2b61ea22273"><div class="ttname"><a href="a00562.xhtml#afded0983d477928d9f0be2b61ea22273">CConversion::convertFreq2MelFant</a></div><div class="ttdeci">static float convertFreq2MelFant(float fFrequency)</div><div class="ttdef"><b>Definition:</b> <a href="a00047_source.xhtml#l00050">ToolConversion.cpp:50</a></div></div>
</div><!-- fragment -->
<p class="definition">Definition at line <a class="el" href="a00179_source.xhtml#l00288">288</a> of file <a class="el" href="a00179_source.xhtml">ToolConversion.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00047_source.xhtml#l00018">convertFreq2Mel()</a>, and <a class="el" href="a00047_source.xhtml#l00024">convertMel2Freq()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="a00179_source.xhtml">ToolConversion.h</a></li>
<li><a class="el" href="a00047_source.xhtml">ToolConversion.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="a00562.xhtml">CConversion</a></li>
    <li class="footer">Generated on Wed Jun 15 2022 19:05:48 for ACA by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.4 </li>
  </ul>
</div>
</body>
</html>
