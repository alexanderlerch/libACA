<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 6.0.1 (20220911.1526)
 -->
<!-- Title: CBeatHistoIf Pages: 1 -->
<!--zoomable 2601 -->
<svg id="main" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" onload="init(evt)">
<style type="text/css"><![CDATA[
.edge:hover path { stroke: red; }
.edge:hover polygon { stroke: red; fill: red; }
]]></style>
<script type="text/javascript"><![CDATA[
var edges = document.getElementsByTagName('g');
if (edges && edges.length) {
  for (var i=0;i<edges.length;i++) {
    if (edges[i].id.substr(0,4)=='edge') {
      edges[i].setAttribute('class','edge');
    }
  }
}
]]></script>
        <defs>
                <circle id="rim" cx="0" cy="0" r="7"/>
                <circle id="rim2" cx="0" cy="0" r="3.5"/>
                <g id="zoomPlus">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomplus.mouseover" end="zoomplus.mouseout"/>
                        </use>
                        <path d="M-4,0h8M0,-4v8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="zoomMin">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomminus.mouseover" end="zoomminus.mouseout"/>
                        </use>
                        <path d="M-4,0h8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="dirArrow">
                        <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
               <g id="resetDef">
                       <use xlink:href="#rim2" fill="#404040">
                               <set attributeName="fill" to="#808080" begin="reset.mouseover" end="reset.mouseout"/>
                       </use>
               </g>
        </defs>

<script type="text/javascript">
var viewWidth = 932;
var viewHeight = 2601;
var sectionId = 'dynsection-0';
</script>
<script xlink:href="svgpan.js"/>
<svg id="graph" class="graph">
<g id="viewport">
<title>CBeatHistoIf</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="class for computation of a BeatHistogram from either a file or a vector">
<polygon fill="#999999" stroke="#666666" points="339,-602 141,-602 141,0 339,0 339,-602"/>
<text text-anchor="middle" x="240" y="-590" font-family="Helvetica,sans-Serif" font-size="10.00">{CBeatHistoIf</text>
<text text-anchor="start" x="149" y="-579" font-family="Helvetica,sans-Serif" font-size="10.00">|# float * m_pfNovelty</text>
<text text-anchor="start" x="149" y="-568" font-family="Helvetica,sans-Serif" font-size="10.00"># float * m_pfProcBuff</text>
<text text-anchor="start" x="149" y="-557" font-family="Helvetica,sans-Serif" font-size="10.00"># float * m_pfBeatHisto</text>
<text text-anchor="start" x="149" y="-546" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iBlockLength</text>
<text text-anchor="start" x="149" y="-535" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iHopLength</text>
<text text-anchor="start" x="149" y="-524" font-family="Helvetica,sans-Serif" font-size="10.00"># const int m_iBeatHistoLength</text>
<text text-anchor="start" x="149" y="-513" font-family="Helvetica,sans-Serif" font-size="10.00"># float m_fSampleRate</text>
<text text-anchor="start" x="149" y="-502" font-family="Helvetica,sans-Serif" font-size="10.00"># bool m_bIsInitialized</text>
<text text-anchor="start" x="149" y="-491" font-family="Helvetica,sans-Serif" font-size="10.00">|+ Error_t getNumBins</text>
<text text-anchor="start" x="149" y="-480" font-family="Helvetica,sans-Serif" font-size="10.00">(int &amp;iNumBeatHistoBins,</text>
<text text-anchor="start" x="149" y="-469" font-family="Helvetica,sans-Serif" font-size="10.00"> BeatHisto_t eBeatHistoComp) const</text>
<text text-anchor="start" x="149" y="-458" font-family="Helvetica,sans-Serif" font-size="10.00">+ int getNumBins(BeatHisto</text>
<text text-anchor="start" x="149" y="-447" font-family="Helvetica,sans-Serif" font-size="10.00">_t eBeatHistoComp) const</text>
<text text-anchor="start" x="149" y="-436" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getBeatHistoAxis</text>
<text text-anchor="start" x="149" y="-425" font-family="Helvetica,sans-Serif" font-size="10.00">Ticks(float *pfAxisTicks,</text>
<text text-anchor="start" x="149" y="-414" font-family="Helvetica,sans-Serif" font-size="10.00"> BeatHisto_t eBeatHistoComp) const</text>
<text text-anchor="start" x="149" y="-403" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compBeatHisto</text>
<text text-anchor="start" x="149" y="-392" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfBeatHisto,</text>
<text text-anchor="start" x="149" y="-381" font-family="Helvetica,sans-Serif" font-size="10.00"> BeatHisto_t eBeatHistoComp</text>
<text text-anchor="start" x="149" y="-370" font-family="Helvetica,sans-Serif" font-size="10.00">=kBeatHistoFft)</text>
<text text-anchor="start" x="149" y="-359" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="149" y="-348" font-family="Helvetica,sans-Serif" font-size="10.00">(CBeatHistoIf *&amp;pCInstance,</text>
<text text-anchor="start" x="149" y="-337" font-family="Helvetica,sans-Serif" font-size="10.00"> const std::string &amp;strAudioFile</text>
<text text-anchor="start" x="149" y="-326" font-family="Helvetica,sans-Serif" font-size="10.00">Path, int iBlockLength=1024,</text>
<text text-anchor="start" x="149" y="-315" font-family="Helvetica,sans-Serif" font-size="10.00"> int iHopLength=8)</text>
<text text-anchor="start" x="149" y="-304" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="149" y="-293" font-family="Helvetica,sans-Serif" font-size="10.00">(CBeatHistoIf *&amp;pCInstance,</text>
<text text-anchor="start" x="149" y="-282" font-family="Helvetica,sans-Serif" font-size="10.00"> const float *pfAudio, long</text>
<text text-anchor="start" x="149" y="-271" font-family="Helvetica,sans-Serif" font-size="10.00"> long iNumSamples, float fSampleRate,</text>
<text text-anchor="start" x="149" y="-260" font-family="Helvetica,sans-Serif" font-size="10.00"> int iBlockLength=1024, int iHopLength=8)</text>
<text text-anchor="start" x="149" y="-249" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="149" y="-238" font-family="Helvetica,sans-Serif" font-size="10.00">(CBeatHistoIf *&amp;pCInstance)</text>
<text text-anchor="start" x="149" y="-227" font-family="Helvetica,sans-Serif" font-size="10.00"># &#160;CBeatHistoIf(int iBlock</text>
<text text-anchor="start" x="149" y="-216" font-family="Helvetica,sans-Serif" font-size="10.00">Length, int iHopLength,</text>
<text text-anchor="start" x="149" y="-205" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate)</text>
<text text-anchor="start" x="149" y="-194" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CBeatHistoIf()</text>
<text text-anchor="start" x="149" y="-183" font-family="Helvetica,sans-Serif" font-size="10.00"># &#160;CBeatHistoIf(const</text>
<text text-anchor="start" x="149" y="-172" font-family="Helvetica,sans-Serif" font-size="10.00"> CBeatHistoIf &amp;that)</text>
<text text-anchor="start" x="149" y="-161" font-family="Helvetica,sans-Serif" font-size="10.00"># CBeatHistoIf &amp; operator</text>
<text text-anchor="start" x="149" y="-150" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CBeatHistoIf &amp;c)</text>
<text text-anchor="start" x="149" y="-139" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t init_(const</text>
<text text-anchor="start" x="149" y="-128" font-family="Helvetica,sans-Serif" font-size="10.00"> std::string &amp;strAudioFile</text>
<text text-anchor="start" x="149" y="-117" font-family="Helvetica,sans-Serif" font-size="10.00">Path)</text>
<text text-anchor="start" x="149" y="-106" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t init_(const</text>
<text text-anchor="start" x="149" y="-95" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfAudio, long</text>
<text text-anchor="start" x="149" y="-84" font-family="Helvetica,sans-Serif" font-size="10.00"> long iNumSamples, float</text>
<text text-anchor="start" x="149" y="-73" font-family="Helvetica,sans-Serif" font-size="10.00"> fSampleRate)</text>
<text text-anchor="start" x="149" y="-62" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t reset_()</text>
<text text-anchor="start" x="149" y="-51" font-family="Helvetica,sans-Serif" font-size="10.00"># void compHistoRange</text>
<text text-anchor="start" x="149" y="-40" font-family="Helvetica,sans-Serif" font-size="10.00">_(int &amp;istartIdx, int</text>
<text text-anchor="start" x="149" y="-29" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;istopIdx, BeatHisto</text>
<text text-anchor="start" x="149" y="-18" font-family="Helvetica,sans-Serif" font-size="10.00">_t eBeatHistoComp) const</text>
<text text-anchor="middle" x="240" y="-7" font-family="Helvetica,sans-Serif" font-size="10.00">}</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="a00474.xhtml" target="_top" xlink:title="class for FFT computation with windowing">
<polygon fill="white" stroke="#666666" points="188,-1762.5 0,-1762.5 0,-1281.5 188,-1281.5 188,-1762.5"/>
<text text-anchor="middle" x="94" y="-1750.5" font-family="Helvetica,sans-Serif" font-size="10.00">{CFft</text>
<text text-anchor="start" x="8" y="-1739.5" font-family="Helvetica,sans-Serif" font-size="10.00">|&#45; float * m_pfProcBuff</text>
<text text-anchor="start" x="8" y="-1728.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_pfWindowBuff</text>
<text text-anchor="start" x="8" y="-1717.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iDataLength</text>
<text text-anchor="start" x="8" y="-1706.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iFftLength</text>
<text text-anchor="start" x="8" y="-1695.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Windowing_t m_ePrePostWindowOpt</text>
<text text-anchor="start" x="8" y="-1684.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; bool m_bIsInitialized</text>
<text text-anchor="start" x="8" y="-1673.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; static const float m_Pi</text>
<text text-anchor="start" x="8" y="-1662.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; static const float</text>
<text text-anchor="start" x="8" y="-1651.5" font-family="Helvetica,sans-Serif" font-size="10.00"> m_Pi2</text>
<text text-anchor="start" x="8" y="-1640.5" font-family="Helvetica,sans-Serif" font-size="10.00">|+ &#160;CFft()</text>
<text text-anchor="start" x="8" y="-1629.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CFft()</text>
<text text-anchor="start" x="8" y="-1618.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t init(int iBlockLength,</text>
<text text-anchor="start" x="8" y="-1607.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iZeroPadFactor=1, WindowFunction</text>
<text text-anchor="start" x="8" y="-1596.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t eWindow=kWindowHann, Windowing</text>
<text text-anchor="start" x="8" y="-1585.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t eWindowing=kPreWindow)</text>
<text text-anchor="start" x="8" y="-1574.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t reset()</text>
<text text-anchor="start" x="8" y="-1563.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t overrideWindow</text>
<text text-anchor="start" x="8" y="-1552.5" font-family="Helvetica,sans-Serif" font-size="10.00">(const float *pfNewWindow)</text>
<text text-anchor="start" x="8" y="-1541.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getWindow(float</text>
<text text-anchor="start" x="8" y="-1530.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfWindow) const</text>
<text text-anchor="start" x="8" y="-1519.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compFft(complex</text>
<text text-anchor="start" x="8" y="-1508.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t *pfSpectrum, const</text>
<text text-anchor="start" x="8" y="-1497.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfIn)</text>
<text text-anchor="start" x="8" y="-1486.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compInvFft</text>
<text text-anchor="start" x="8" y="-1475.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfOut, const</text>
<text text-anchor="start" x="8" y="-1464.5" font-family="Helvetica,sans-Serif" font-size="10.00"> complex_t *pfSpectrum)</text>
<text text-anchor="start" x="8" y="-1453.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getMagnitude</text>
<text text-anchor="start" x="8" y="-1442.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfMag, const</text>
<text text-anchor="start" x="8" y="-1431.5" font-family="Helvetica,sans-Serif" font-size="10.00"> complex_t *pfSpectrum)</text>
<text text-anchor="start" x="8" y="-1420.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const</text>
<text text-anchor="start" x="8" y="-1409.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getPhase(float</text>
<text text-anchor="start" x="8" y="-1398.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfPhase, const complex</text>
<text text-anchor="start" x="8" y="-1387.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t *pfSpectrum) const</text>
<text text-anchor="start" x="8" y="-1376.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 7 more...</text>
<text text-anchor="start" x="8" y="-1365.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; &#160;CFft(const CFft &amp;that)</text>
<text text-anchor="start" x="8" y="-1354.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CFft &amp; operator=(const</text>
<text text-anchor="start" x="8" y="-1343.5" font-family="Helvetica,sans-Serif" font-size="10.00"> CFft &amp;c)</text>
<text text-anchor="start" x="8" y="-1332.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Error_t allocMemory_()</text>
<text text-anchor="start" x="8" y="-1321.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Error_t freeMemory_()</text>
<text text-anchor="start" x="8" y="-1310.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Error_t computeWindow</text>
<text text-anchor="start" x="8" y="-1299.5" font-family="Helvetica,sans-Serif" font-size="10.00">_(WindowFunction_t eWindow)</text>
<text text-anchor="middle" x="94" y="-1288.5" font-family="Helvetica,sans-Serif" font-size="10.00">}</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="#404040" d="M73.19,-1281.3C63.47,-1104.77 61.76,-859.8 103,-649 110.77,-609.29 122.91,-568.29 136.82,-529"/>
<polygon fill="none" stroke="#404040" points="136.82,-528.98 135.09,-521.98 140.88,-517.69 142.62,-524.69 136.82,-528.98"/>
<text text-anchor="middle" x="126" y="-920" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCFft</text>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="a00546.xhtml" target="_top" xlink:title="computation of correlation (freq domain implementation)">
<polygon fill="white" stroke="#666666" points="322,-1069.5 158,-1069.5 158,-775.5 322,-775.5 322,-1069.5"/>
<text text-anchor="middle" x="240" y="-1057.5" font-family="Helvetica,sans-Serif" font-size="10.00">{CCcf</text>
<text text-anchor="start" x="166" y="-1046.5" font-family="Helvetica,sans-Serif" font-size="10.00">|&#45; bool m_bIsInitialized</text>
<text text-anchor="start" x="166" y="-1035.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; bool m_bWasProcessed</text>
<text text-anchor="start" x="166" y="-1024.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_apfData</text>
<text text-anchor="start" x="166" y="-1013.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iBlockLength</text>
<text text-anchor="start" x="166" y="-1002.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iFftLength</text>
<text text-anchor="start" x="166" y="-991.5" font-family="Helvetica,sans-Serif" font-size="10.00">|+ &#160;CCcf(void)</text>
<text text-anchor="start" x="166" y="-980.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CCcf(void)</text>
<text text-anchor="start" x="166" y="-969.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t init(int iBlockLength)</text>
<text text-anchor="start" x="166" y="-958.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t reset()</text>
<text text-anchor="start" x="166" y="-947.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compCcf(const</text>
<text text-anchor="start" x="166" y="-936.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfIn1, const</text>
<text text-anchor="start" x="166" y="-925.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfIn2, bool bNormalize=true)</text>
<text text-anchor="start" x="166" y="-914.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ int getCcfLength(bool</text>
<text text-anchor="start" x="166" y="-903.5" font-family="Helvetica,sans-Serif" font-size="10.00"> bisAcf=false)</text>
<text text-anchor="start" x="166" y="-892.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getCcf(float</text>
<text text-anchor="start" x="166" y="-881.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfCcfResult, bool bisAcf</text>
<text text-anchor="start" x="166" y="-870.5" font-family="Helvetica,sans-Serif" font-size="10.00">=false) const</text>
<text text-anchor="start" x="166" y="-859.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ float getCcfMax(bool</text>
<text text-anchor="start" x="166" y="-848.5" font-family="Helvetica,sans-Serif" font-size="10.00"> bisAcf=false) const</text>
<text text-anchor="start" x="166" y="-837.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ int getCcfMaxIdx(bool</text>
<text text-anchor="start" x="166" y="-826.5" font-family="Helvetica,sans-Serif" font-size="10.00"> bisAcf=false) const</text>
<text text-anchor="start" x="166" y="-815.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; &#160;CCcf(const CCcf &amp;that)</text>
<text text-anchor="start" x="166" y="-804.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CCcf &amp; operator=(const</text>
<text text-anchor="start" x="166" y="-793.5" font-family="Helvetica,sans-Serif" font-size="10.00"> CCcf &amp;c)</text>
<text text-anchor="middle" x="240" y="-782.5" font-family="Helvetica,sans-Serif" font-size="10.00">}</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node3 -->
<g id="edge3" class="edge">
<title>Node2&#45;&gt;Node3</title>
<path fill="none" stroke="#404040" d="M130.17,-1281.46C134.72,-1258.56 139.66,-1235.78 145,-1214 155.67,-1170.45 169.65,-1124 183.59,-1081.31"/>
<polygon fill="none" stroke="#404040" points="183.67,-1081.06 181.74,-1074.11 187.42,-1069.66 189.34,-1076.61 183.67,-1081.06"/>
<text text-anchor="middle" x="166.5" y="-1217" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;m_pCFft</text>
</g>
<!-- Node4 -->
<g id="node4" class="node">
<title>Node4</title>
<g id="a_node4"><a xlink:href="a00514.xhtml" target="_top" xlink:title="class for computation of a magnitude Novelty from either a file or a vector">
<polygon fill="white" stroke="#666666" points="557.5,-1196 348.5,-1196 348.5,-649 557.5,-649 557.5,-1196"/>
<text text-anchor="middle" x="453" y="-1184" font-family="Helvetica,sans-Serif" font-size="10.00">{CNoveltyIf</text>
<text text-anchor="start" x="356.5" y="-1173" font-family="Helvetica,sans-Serif" font-size="10.00">|# int m_iBlockLength</text>
<text text-anchor="start" x="356.5" y="-1162" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iHopLength</text>
<text text-anchor="start" x="356.5" y="-1151" font-family="Helvetica,sans-Serif" font-size="10.00"># float m_fSampleRate</text>
<text text-anchor="start" x="356.5" y="-1140" font-family="Helvetica,sans-Serif" font-size="10.00"># float * m_pfProcBuff2</text>
<text text-anchor="start" x="356.5" y="-1129" font-family="Helvetica,sans-Serif" font-size="10.00"># float * m_pfProcBuff1</text>
<text text-anchor="start" x="356.5" y="-1118" font-family="Helvetica,sans-Serif" font-size="10.00"># bool m_bIsInitialized</text>
<text text-anchor="start" x="356.5" y="-1107" font-family="Helvetica,sans-Serif" font-size="10.00">|+ Error_t getNumBlocks</text>
<text text-anchor="start" x="356.5" y="-1096" font-family="Helvetica,sans-Serif" font-size="10.00">(int &amp;iNumBlocks) const</text>
<text text-anchor="start" x="356.5" y="-1085" font-family="Helvetica,sans-Serif" font-size="10.00">+ int getNumBlocks()</text>
<text text-anchor="start" x="356.5" y="-1074" font-family="Helvetica,sans-Serif" font-size="10.00"> const</text>
<text text-anchor="start" x="356.5" y="-1063" font-family="Helvetica,sans-Serif" font-size="10.00">+ float getTimeStamp</text>
<text text-anchor="start" x="356.5" y="-1052" font-family="Helvetica,sans-Serif" font-size="10.00">(int iBlockIdx) const</text>
<text text-anchor="start" x="356.5" y="-1041" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getTimeStamps</text>
<text text-anchor="start" x="356.5" y="-1030" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfAxisTicks) const</text>
<text text-anchor="start" x="356.5" y="-1019" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compNovelty</text>
<text text-anchor="start" x="356.5" y="-1008" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfNovelty, bool</text>
<text text-anchor="start" x="356.5" y="-997" font-family="Helvetica,sans-Serif" font-size="10.00"> *pbisOnset=0)</text>
<text text-anchor="start" x="356.5" y="-986" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="356.5" y="-975" font-family="Helvetica,sans-Serif" font-size="10.00">(CNoveltyIf *&amp;pCInstance,</text>
<text text-anchor="start" x="356.5" y="-964" font-family="Helvetica,sans-Serif" font-size="10.00"> Novelty_t eNoveltyIdx,</text>
<text text-anchor="start" x="356.5" y="-953" font-family="Helvetica,sans-Serif" font-size="10.00"> const std::string &amp;strAudioFile</text>
<text text-anchor="start" x="356.5" y="-942" font-family="Helvetica,sans-Serif" font-size="10.00">Path, int iBlockLength=4096,</text>
<text text-anchor="start" x="356.5" y="-931" font-family="Helvetica,sans-Serif" font-size="10.00"> int iHopLength=512)</text>
<text text-anchor="start" x="356.5" y="-920" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="356.5" y="-909" font-family="Helvetica,sans-Serif" font-size="10.00">(CNoveltyIf *&amp;pCInstance,</text>
<text text-anchor="start" x="356.5" y="-898" font-family="Helvetica,sans-Serif" font-size="10.00"> Novelty_t eNoveltyIdx,</text>
<text text-anchor="start" x="356.5" y="-887" font-family="Helvetica,sans-Serif" font-size="10.00"> const float *pfAudio, long</text>
<text text-anchor="start" x="356.5" y="-876" font-family="Helvetica,sans-Serif" font-size="10.00"> long iNumSamples, float fSampleRate,</text>
<text text-anchor="start" x="356.5" y="-865" font-family="Helvetica,sans-Serif" font-size="10.00"> int iBlockLength=4096, int iHopLength=512)</text>
<text text-anchor="start" x="356.5" y="-854" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="356.5" y="-843" font-family="Helvetica,sans-Serif" font-size="10.00">(CNoveltyIf *&amp;pCInstance)</text>
<text text-anchor="start" x="356.5" y="-832" font-family="Helvetica,sans-Serif" font-size="10.00">+ static std::string</text>
<text text-anchor="start" x="356.5" y="-821" font-family="Helvetica,sans-Serif" font-size="10.00"> getNoveltyString(Novelty</text>
<text text-anchor="start" x="356.5" y="-810" font-family="Helvetica,sans-Serif" font-size="10.00">_t eNoveltyIdx)</text>
<text text-anchor="start" x="356.5" y="-799" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Novelty_t getNovelty</text>
<text text-anchor="start" x="356.5" y="-788" font-family="Helvetica,sans-Serif" font-size="10.00">IdxFromString(std::string</text>
<text text-anchor="start" x="356.5" y="-777" font-family="Helvetica,sans-Serif" font-size="10.00"> sNoveltyString)</text>
<text text-anchor="start" x="356.5" y="-766" font-family="Helvetica,sans-Serif" font-size="10.00"># &#160;CNoveltyIf()</text>
<text text-anchor="start" x="356.5" y="-755" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CNoveltyIf()</text>
<text text-anchor="start" x="356.5" y="-744" font-family="Helvetica,sans-Serif" font-size="10.00"># &#160;CNoveltyIf(const CNovelty</text>
<text text-anchor="start" x="356.5" y="-733" font-family="Helvetica,sans-Serif" font-size="10.00">If &amp;that)</text>
<text text-anchor="start" x="356.5" y="-722" font-family="Helvetica,sans-Serif" font-size="10.00"># CNoveltyIf &amp; operator</text>
<text text-anchor="start" x="356.5" y="-711" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CNoveltyIf &amp;c)</text>
<text text-anchor="start" x="356.5" y="-700" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t reset_()</text>
<text text-anchor="start" x="356.5" y="-689" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t init_(Novelty</text>
<text text-anchor="start" x="356.5" y="-678" font-family="Helvetica,sans-Serif" font-size="10.00">_t eNoveltyIdx)</text>
<text text-anchor="start" x="356.5" y="-667" font-family="Helvetica,sans-Serif" font-size="10.00"># void computeMagSpectrum_()</text>
<text text-anchor="middle" x="453" y="-656" font-family="Helvetica,sans-Serif" font-size="10.00">}</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node4 -->
<g id="edge8" class="edge">
<title>Node2&#45;&gt;Node4</title>
<path fill="none" stroke="#404040" d="M165.59,-1281.46C174.83,-1267.55 185.25,-1254.54 197,-1243 242.02,-1198.76 284.55,-1238.72 331,-1196 334.15,-1193.11 337.22,-1190.11 340.22,-1187.04"/>
<polygon fill="none" stroke="#404040" points="340.31,-1186.94 341.45,-1179.82 348.47,-1178.14 347.32,-1185.26 340.31,-1186.94"/>
<text text-anchor="middle" x="322" y="-1217" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCFft</text>
</g>
<!-- Node3&#45;&gt;Node1 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node1</title>
<path fill="none" stroke="#404040" d="M240,-775.47C240,-726.8 240,-670.55 240,-614.2"/>
<polygon fill="none" stroke="#404040" points="240,-614.18 236,-608.18 240,-602.18 244,-608.18 240,-614.18"/>
<text text-anchor="middle" x="264.5" y="-623" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCCcf</text>
</g>
<!-- Node4&#45;&gt;Node1 -->
<g id="edge4" class="edge">
<title>Node4&#45;&gt;Node1</title>
<path fill="none" stroke="#404040" d="M359.27,-648.88C353.88,-633.2 348.44,-617.4 343.02,-601.64"/>
<polygon fill="none" stroke="#404040" points="342.98,-601.51 337.25,-597.14 339.08,-590.16 344.81,-594.54 342.98,-601.51"/>
<text text-anchor="middle" x="386.5" y="-623" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCNovelty</text>
</g>
<!-- Node5 -->
<g id="node5" class="node">
<title>Node5</title>
<g id="a_node5"><a xlink:href="a00606.xhtml" target="_top" xlink:title="class for audio normalization offering three options">
<polygon fill="white" stroke="#666666" points="361.5,-1636 206.5,-1636 206.5,-1408 361.5,-1408 361.5,-1636"/>
<text text-anchor="middle" x="284" y="-1624" font-family="Helvetica,sans-Serif" font-size="10.00">{CNormalizeAudio</text>
<text text-anchor="start" x="214.5" y="-1613" font-family="Helvetica,sans-Serif" font-size="10.00">|&#45; float m_fScaleFactor</text>
<text text-anchor="start" x="214.5" y="-1602" font-family="Helvetica,sans-Serif" font-size="10.00">|+ &#160;CNormalizeAudio(CAudioFile</text>
<text text-anchor="start" x="214.5" y="-1591" font-family="Helvetica,sans-Serif" font-size="10.00">If *pCAudioFile)</text>
<text text-anchor="start" x="214.5" y="-1580" font-family="Helvetica,sans-Serif" font-size="10.00">+ &#160;CNormalizeAudio(const</text>
<text text-anchor="start" x="214.5" y="-1569" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfAudioBuff, long</text>
<text text-anchor="start" x="214.5" y="-1558" font-family="Helvetica,sans-Serif" font-size="10.00"> long iAudioLength)</text>
<text text-anchor="start" x="214.5" y="-1547" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CNormalizeAudio()</text>
<text text-anchor="start" x="214.5" y="-1536" font-family="Helvetica,sans-Serif" font-size="10.00">+ void normalizeBlock</text>
<text text-anchor="start" x="214.5" y="-1525" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfAudioBlock,</text>
<text text-anchor="start" x="214.5" y="-1514" font-family="Helvetica,sans-Serif" font-size="10.00"> long long iNumSamples)</text>
<text text-anchor="start" x="214.5" y="-1503" font-family="Helvetica,sans-Serif" font-size="10.00">+ static void normalizeSignal</text>
<text text-anchor="start" x="214.5" y="-1492" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfAudio, long long</text>
<text text-anchor="start" x="214.5" y="-1481" font-family="Helvetica,sans-Serif" font-size="10.00"> iNumSamples)</text>
<text text-anchor="start" x="214.5" y="-1470" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; &#160;CNormalizeAudio()</text>
<text text-anchor="start" x="214.5" y="-1459" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; &#160;CNormalizeAudio(const</text>
<text text-anchor="start" x="214.5" y="-1448" font-family="Helvetica,sans-Serif" font-size="10.00"> CNormalizeAudio &amp;that)</text>
<text text-anchor="start" x="214.5" y="-1437" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CNormalizeAudio &amp; operator</text>
<text text-anchor="start" x="214.5" y="-1426" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CNormalizeAudio &amp;c)</text>
<text text-anchor="middle" x="284" y="-1415" font-family="Helvetica,sans-Serif" font-size="10.00">}</text>
</a>
</g>
</g>
<!-- Node5&#45;&gt;Node4 -->
<g id="edge5" class="edge">
<title>Node5&#45;&gt;Node4</title>
<path fill="none" stroke="#404040" d="M315.99,-1407.91C332.12,-1350.87 352.49,-1278.86 372.55,-1207.93"/>
<polygon fill="none" stroke="#404040" points="372.63,-1207.64 370.42,-1200.78 375.9,-1196.09 378.11,-1202.96 372.63,-1207.64"/>
<text text-anchor="middle" x="407.5" y="-1217" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCNormalize</text>
</g>
<!-- Node6 -->
<g id="node6" class="node">
<title>Node6</title>
<g id="a_node6"><a xlink:href="a00542.xhtml" target="_top" xlink:title="forward declaration">
<polygon fill="white" stroke="#666666" points="540,-1735 380,-1735 380,-1309 540,-1309 540,-1735"/>
<text text-anchor="middle" x="460" y="-1723" font-family="Helvetica,sans-Serif" font-size="10.00">{CBlockAudioIf</text>
<text text-anchor="start" x="388" y="-1712" font-family="Helvetica,sans-Serif" font-size="10.00">|# long long m_iNumBlocks</text>
<text text-anchor="start" x="388" y="-1701" font-family="Helvetica,sans-Serif" font-size="10.00"># long long m_iCurrBlock</text>
<text text-anchor="start" x="388" y="-1690" font-family="Helvetica,sans-Serif" font-size="10.00"># long long m_iAudioLength</text>
<text text-anchor="start" x="388" y="-1679" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iBlockLength</text>
<text text-anchor="start" x="388" y="-1668" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iNumChannels</text>
<text text-anchor="start" x="388" y="-1657" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iHopLength</text>
<text text-anchor="start" x="388" y="-1646" font-family="Helvetica,sans-Serif" font-size="10.00"># float m_fSampleRate</text>
<text text-anchor="start" x="388" y="-1635" font-family="Helvetica,sans-Serif" font-size="10.00">|+ long long getNumBlocks</text>
<text text-anchor="start" x="388" y="-1624" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="388" y="-1613" font-family="Helvetica,sans-Serif" font-size="10.00">+ long long getLengthInSamples</text>
<text text-anchor="start" x="388" y="-1602" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="388" y="-1591" font-family="Helvetica,sans-Serif" font-size="10.00">+ float getTimeStamp</text>
<text text-anchor="start" x="388" y="-1580" font-family="Helvetica,sans-Serif" font-size="10.00">(long long iBlockIdx)</text>
<text text-anchor="start" x="388" y="-1569" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual bool isEndOfData</text>
<text text-anchor="start" x="388" y="-1558" font-family="Helvetica,sans-Serif" font-size="10.00">() const =0</text>
<text text-anchor="start" x="388" y="-1547" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual int getNextBlock</text>
<text text-anchor="start" x="388" y="-1536" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfBlock, float</text>
<text text-anchor="start" x="388" y="-1525" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfTimeStampInS=0)=0</text>
<text text-anchor="start" x="388" y="-1514" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="388" y="-1503" font-family="Helvetica,sans-Serif" font-size="10.00">(CBlockAudioIf *&amp;pCInstance,</text>
<text text-anchor="start" x="388" y="-1492" font-family="Helvetica,sans-Serif" font-size="10.00"> CAudioFileIf *pCAudioFile,</text>
<text text-anchor="start" x="388" y="-1481" font-family="Helvetica,sans-Serif" font-size="10.00"> int iBlockLength, int iHopLength)</text>
<text text-anchor="start" x="388" y="-1470" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="388" y="-1459" font-family="Helvetica,sans-Serif" font-size="10.00">(CBlockAudioIf *&amp;pCInstance,</text>
<text text-anchor="start" x="388" y="-1448" font-family="Helvetica,sans-Serif" font-size="10.00"> const float *pfAudioBuff,</text>
<text text-anchor="start" x="388" y="-1437" font-family="Helvetica,sans-Serif" font-size="10.00"> long long iAudioLength, int</text>
<text text-anchor="start" x="388" y="-1426" font-family="Helvetica,sans-Serif" font-size="10.00"> iBlockLength, int iHopLength,</text>
<text text-anchor="start" x="388" y="-1415" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate)</text>
<text text-anchor="start" x="388" y="-1404" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="388" y="-1393" font-family="Helvetica,sans-Serif" font-size="10.00">(CBlockAudioIf *&amp;pCInstance)</text>
<text text-anchor="start" x="388" y="-1382" font-family="Helvetica,sans-Serif" font-size="10.00"># &#160;CBlockAudioIf()</text>
<text text-anchor="start" x="388" y="-1371" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CBlockAudioIf()</text>
<text text-anchor="start" x="388" y="-1360" font-family="Helvetica,sans-Serif" font-size="10.00"># &#160;CBlockAudioIf(const</text>
<text text-anchor="start" x="388" y="-1349" font-family="Helvetica,sans-Serif" font-size="10.00"> CBlockAudioIf &amp;that)</text>
<text text-anchor="start" x="388" y="-1338" font-family="Helvetica,sans-Serif" font-size="10.00"># CBlockAudioIf &amp; operator</text>
<text text-anchor="start" x="388" y="-1327" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CBlockAudioIf &amp;c)</text>
<text text-anchor="middle" x="460" y="-1316" font-family="Helvetica,sans-Serif" font-size="10.00">}</text>
</a>
</g>
</g>
<!-- Node6&#45;&gt;Node4 -->
<g id="edge6" class="edge">
<title>Node6&#45;&gt;Node4</title>
<path fill="none" stroke="#404040" d="M457.51,-1308.66C457.13,-1276.17 456.73,-1242.19 456.34,-1208.45"/>
<polygon fill="none" stroke="#404040" points="456.33,-1208.03 452.26,-1202.08 456.19,-1196.03 460.26,-1201.98 456.33,-1208.03"/>
<text text-anchor="middle" x="498.5" y="-1217" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCBlockAudio</text>
</g>
<!-- Node7 -->
<g id="node7" class="node">
<title>Node7</title>
<g id="a_node7"><a xlink:href="a00518.xhtml" target="_top" xlink:title="class for computation of a Novelty from a block of data (e.g., time or magnitude spectrum)">
<polygon fill="white" stroke="#666666" points="746,-1801 558,-1801 558,-1243 746,-1243 746,-1801"/>
<text text-anchor="middle" x="652" y="-1789" font-family="Helvetica,sans-Serif" font-size="10.00">{CNoveltyFromBlockIf</text>
<text text-anchor="start" x="566" y="-1778" font-family="Helvetica,sans-Serif" font-size="10.00">|# CNoveltyIf::Novelty</text>
<text text-anchor="start" x="566" y="-1767" font-family="Helvetica,sans-Serif" font-size="10.00">_t m_eNoveltyIdx</text>
<text text-anchor="start" x="566" y="-1756" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iDataLength</text>
<text text-anchor="start" x="566" y="-1745" font-family="Helvetica,sans-Serif" font-size="10.00"># float m_fSampleRate</text>
<text text-anchor="start" x="566" y="-1734" font-family="Helvetica,sans-Serif" font-size="10.00"># float * m_pfPrevSpec</text>
<text text-anchor="start" x="566" y="-1723" font-family="Helvetica,sans-Serif" font-size="10.00"># const std::map&lt; CNovelty</text>
<text text-anchor="start" x="566" y="-1712" font-family="Helvetica,sans-Serif" font-size="10.00">If::Novelty_t, std::function</text>
<text text-anchor="start" x="566" y="-1701" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; float(const float *, const</text>
<text text-anchor="start" x="566" y="-1690" font-family="Helvetica,sans-Serif" font-size="10.00"> float *, int, float)&gt; &gt; m_DispatchMap</text>
<text text-anchor="start" x="566" y="-1679" font-family="Helvetica,sans-Serif" font-size="10.00">|+ virtual int getNoveltyDimension</text>
<text text-anchor="start" x="566" y="-1668" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="566" y="-1657" font-family="Helvetica,sans-Serif" font-size="10.00">+ CNoveltyIf::Novelty</text>
<text text-anchor="start" x="566" y="-1646" font-family="Helvetica,sans-Serif" font-size="10.00">_t getNoveltyIdx() const</text>
<text text-anchor="start" x="566" y="-1635" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Error_t compNovelty</text>
<text text-anchor="start" x="566" y="-1624" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfNovelty, const</text>
<text text-anchor="start" x="566" y="-1613" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfIn)</text>
<text text-anchor="start" x="566" y="-1602" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="566" y="-1591" font-family="Helvetica,sans-Serif" font-size="10.00">(CNoveltyFromBlockIf</text>
<text text-anchor="start" x="566" y="-1580" font-family="Helvetica,sans-Serif" font-size="10.00"> *&amp;pCInstance, CNoveltyIf</text>
<text text-anchor="start" x="566" y="-1569" font-family="Helvetica,sans-Serif" font-size="10.00">::Novelty_t eNoveltyIdx,</text>
<text text-anchor="start" x="566" y="-1558" font-family="Helvetica,sans-Serif" font-size="10.00"> int iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="566" y="-1547" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="566" y="-1536" font-family="Helvetica,sans-Serif" font-size="10.00">(CNoveltyFromBlockIf *&amp;pCInstance)</text>
<text text-anchor="start" x="566" y="-1525" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compNovelty</text>
<text text-anchor="start" x="566" y="-1514" font-family="Helvetica,sans-Serif" font-size="10.00">Flux(const float *pfMagSpec,</text>
<text text-anchor="start" x="566" y="-1503" font-family="Helvetica,sans-Serif" font-size="10.00"> const float *pfPrevSpec,</text>
<text text-anchor="start" x="566" y="-1492" font-family="Helvetica,sans-Serif" font-size="10.00"> int iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="566" y="-1481" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compNovelty</text>
<text text-anchor="start" x="566" y="-1470" font-family="Helvetica,sans-Serif" font-size="10.00">Hainsworth(const float</text>
<text text-anchor="start" x="566" y="-1459" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfMagSpec, const float</text>
<text text-anchor="start" x="566" y="-1448" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfPrevSpec, int iDataLength,</text>
<text text-anchor="start" x="566" y="-1437" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate=1.F)</text>
<text text-anchor="start" x="566" y="-1426" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compNovelty</text>
<text text-anchor="start" x="566" y="-1415" font-family="Helvetica,sans-Serif" font-size="10.00">Laroche(const float *pfMagSpec,</text>
<text text-anchor="start" x="566" y="-1404" font-family="Helvetica,sans-Serif" font-size="10.00"> const float *pfPrevSpec, int</text>
<text text-anchor="start" x="566" y="-1393" font-family="Helvetica,sans-Serif" font-size="10.00"> iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="566" y="-1382" font-family="Helvetica,sans-Serif" font-size="10.00"># &#160;CNoveltyFromBlockIf()</text>
<text text-anchor="start" x="566" y="-1371" font-family="Helvetica,sans-Serif" font-size="10.00"># &#160;CNoveltyFromBlockIf</text>
<text text-anchor="start" x="566" y="-1360" font-family="Helvetica,sans-Serif" font-size="10.00">(CNoveltyIf::Novelty</text>
<text text-anchor="start" x="566" y="-1349" font-family="Helvetica,sans-Serif" font-size="10.00">_t eNoveltyIdx, int iDataLength,</text>
<text text-anchor="start" x="566" y="-1338" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate)</text>
<text text-anchor="start" x="566" y="-1327" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CNoveltyFromBlockIf()</text>
<text text-anchor="start" x="566" y="-1316" font-family="Helvetica,sans-Serif" font-size="10.00"># &#160;CNoveltyFromBlockIf</text>
<text text-anchor="start" x="566" y="-1305" font-family="Helvetica,sans-Serif" font-size="10.00">(const CNoveltyFromBlockIf</text>
<text text-anchor="start" x="566" y="-1294" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;that)</text>
<text text-anchor="start" x="566" y="-1283" font-family="Helvetica,sans-Serif" font-size="10.00"># CNoveltyFromBlockIf</text>
<text text-anchor="start" x="566" y="-1272" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp; operator=(const CNovelty</text>
<text text-anchor="start" x="566" y="-1261" font-family="Helvetica,sans-Serif" font-size="10.00">FromBlockIf &amp;c)</text>
<text text-anchor="middle" x="652" y="-1250" font-family="Helvetica,sans-Serif" font-size="10.00">}</text>
</a>
</g>
</g>
<!-- Node7&#45;&gt;Node4 -->
<g id="edge7" class="edge">
<title>Node7&#45;&gt;Node4</title>
<path fill="none" stroke="#404040" d="M559.35,-1242.8C555.47,-1231.16 551.57,-1219.47 547.69,-1207.81"/>
<polygon fill="none" stroke="#404040" points="547.6,-1207.55 541.91,-1203.12 543.81,-1196.16 549.5,-1200.59 547.6,-1207.55"/>
<text text-anchor="middle" x="586.5" y="-1217" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCNovelty</text>
</g>
<!-- Node8 -->
<g id="node8" class="node">
<title>Node8</title>
<g id="a_node8"><a xlink:href="a00586.xhtml" target="_top" xlink:title="class for moving average low pass filtering">
<polygon fill="white" stroke="#666666" points="923.5,-1674.5 764.5,-1674.5 764.5,-1369.5 923.5,-1369.5 923.5,-1674.5"/>
<text text-anchor="middle" x="844" y="-1662.5" font-family="Helvetica,sans-Serif" font-size="10.00">{CMovingAverage</text>
<text text-anchor="start" x="772.5" y="-1651.5" font-family="Helvetica,sans-Serif" font-size="10.00">|&#45; float m_fPrevOut</text>
<text text-anchor="start" x="772.5" y="-1640.5" font-family="Helvetica,sans-Serif" font-size="10.00">|+ Error_t setFilterParam</text>
<text text-anchor="start" x="772.5" y="-1629.5" font-family="Helvetica,sans-Serif" font-size="10.00">(int iFilterLength=64)</text>
<text text-anchor="start" x="772.5" y="-1618.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ int getFilterParam</text>
<text text-anchor="start" x="772.5" y="-1607.5" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="772.5" y="-1596.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t process(float</text>
<text text-anchor="start" x="772.5" y="-1585.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfOut, const float</text>
<text text-anchor="start" x="772.5" y="-1574.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfIn, long long iLenBuff)</text>
<text text-anchor="start" x="772.5" y="-1563.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t reset()</text>
<text text-anchor="start" x="772.5" y="-1552.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void filtfilt(float</text>
<text text-anchor="start" x="772.5" y="-1541.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfOut, const float</text>
<text text-anchor="start" x="772.5" y="-1530.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfIn, long long iLenBuff)</text>
<text text-anchor="start" x="772.5" y="-1519.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="772.5" y="-1508.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CMovingAverage *&amp;pCInstance)</text>
<text text-anchor="start" x="772.5" y="-1497.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="772.5" y="-1486.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CMovingAverage *&amp;pCInstance)</text>
<text text-anchor="start" x="772.5" y="-1475.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static int calcFilterLength</text>
<text text-anchor="start" x="772.5" y="-1464.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float fIntegrationTimeInS,</text>
<text text-anchor="start" x="772.5" y="-1453.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate)</text>
<text text-anchor="start" x="772.5" y="-1442.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; &#160;CMovingAverage()</text>
<text text-anchor="start" x="772.5" y="-1431.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; virtual ~CMovingAverage()</text>
<text text-anchor="start" x="772.5" y="-1420.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; &#160;CMovingAverage(const</text>
<text text-anchor="start" x="772.5" y="-1409.5" font-family="Helvetica,sans-Serif" font-size="10.00"> CMovingAverage &amp;that)</text>
<text text-anchor="start" x="772.5" y="-1398.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CMovingAverage &amp; operator</text>
<text text-anchor="start" x="772.5" y="-1387.5" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CMovingAverage &amp;c)</text>
<text text-anchor="middle" x="844" y="-1376.5" font-family="Helvetica,sans-Serif" font-size="10.00">}</text>
</a>
</g>
</g>
<!-- Node8&#45;&gt;Node4 -->
<g id="edge9" class="edge">
<title>Node8&#45;&gt;Node4</title>
<path fill="none" stroke="#404040" d="M808.85,-1369.3C795.48,-1326.76 777.81,-1281.62 755,-1243 705.23,-1158.74 629.55,-1078.73 566.41,-1019.86"/>
<polygon fill="none" stroke="#404040" points="566.39,-1019.84 559.27,-1018.7 557.59,-1011.69 564.71,-1012.83 566.39,-1019.84"/>
<text text-anchor="middle" x="775.5" y="-1217" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCLpFilter</text>
</g>
<!-- Node9 -->
<g id="node9" class="node">
<title>Node9</title>
<g id="a_node9"><a xlink:href="a00490.xhtml" target="_top" xlink:title=" ">
<polygon fill="white" stroke="#666666" points="910.5,-2208 777.5,-2208 777.5,-1848 910.5,-1848 910.5,-2208"/>
<text text-anchor="middle" x="844" y="-2196" font-family="Helvetica,sans-Serif" font-size="10.00">{CRingBuffer&lt; float &gt;</text>
<text text-anchor="start" x="785.5" y="-2185" font-family="Helvetica,sans-Serif" font-size="10.00">|&#45; int m_iBuffLength</text>
<text text-anchor="start" x="785.5" y="-2174" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iReadIdx</text>
<text text-anchor="start" x="785.5" y="-2163" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iWriteIdx</text>
<text text-anchor="start" x="785.5" y="-2152" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_ptBuff</text>
<text text-anchor="start" x="785.5" y="-2141" font-family="Helvetica,sans-Serif" font-size="10.00">|+ &#160;CRingBuffer(int iBuffer</text>
<text text-anchor="start" x="785.5" y="-2130" font-family="Helvetica,sans-Serif" font-size="10.00">LengthInSamples)</text>
<text text-anchor="start" x="785.5" y="-2119" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CRingBuffer()</text>
<text text-anchor="start" x="785.5" y="-2108" font-family="Helvetica,sans-Serif" font-size="10.00">+ void putPostInc(float</text>
<text text-anchor="start" x="785.5" y="-2097" font-family="Helvetica,sans-Serif" font-size="10.00"> tNewValue)</text>
<text text-anchor="start" x="785.5" y="-2086" font-family="Helvetica,sans-Serif" font-size="10.00">+ void putPostInc(const</text>
<text text-anchor="start" x="785.5" y="-2075" font-family="Helvetica,sans-Serif" font-size="10.00"> float *ptNewBuff, int</text>
<text text-anchor="start" x="785.5" y="-2064" font-family="Helvetica,sans-Serif" font-size="10.00"> iLength)</text>
<text text-anchor="start" x="785.5" y="-2053" font-family="Helvetica,sans-Serif" font-size="10.00">+ void put(float tNewValue)</text>
<text text-anchor="start" x="785.5" y="-2042" font-family="Helvetica,sans-Serif" font-size="10.00">+ void put(const float</text>
<text text-anchor="start" x="785.5" y="-2031" font-family="Helvetica,sans-Serif" font-size="10.00"> *ptNewBuff, int iLength)</text>
<text text-anchor="start" x="785.5" y="-2020" font-family="Helvetica,sans-Serif" font-size="10.00">+ float getPostInc()</text>
<text text-anchor="start" x="785.5" y="-2009" font-family="Helvetica,sans-Serif" font-size="10.00">+ void getPostInc(float</text>
<text text-anchor="start" x="785.5" y="-1998" font-family="Helvetica,sans-Serif" font-size="10.00"> *ptBuff, int iLength)</text>
<text text-anchor="start" x="785.5" y="-1987" font-family="Helvetica,sans-Serif" font-size="10.00">+ float get(float fOffset</text>
<text text-anchor="start" x="785.5" y="-1976" font-family="Helvetica,sans-Serif" font-size="10.00">=0) const</text>
<text text-anchor="start" x="785.5" y="-1965" font-family="Helvetica,sans-Serif" font-size="10.00">+ void get(float *ptBuff,</text>
<text text-anchor="start" x="785.5" y="-1954" font-family="Helvetica,sans-Serif" font-size="10.00"> int iLength) const</text>
<text text-anchor="start" x="785.5" y="-1943" font-family="Helvetica,sans-Serif" font-size="10.00">and 7 more...</text>
<text text-anchor="start" x="785.5" y="-1932" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; &#160;CRingBuffer()</text>
<text text-anchor="start" x="785.5" y="-1921" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; &#160;CRingBuffer(const</text>
<text text-anchor="start" x="785.5" y="-1910" font-family="Helvetica,sans-Serif" font-size="10.00"> CRingBuffer &amp;that)</text>
<text text-anchor="start" x="785.5" y="-1899" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CRingBuffer &amp; operator</text>
<text text-anchor="start" x="785.5" y="-1888" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CRingBuffer &amp;c)</text>
<text text-anchor="start" x="785.5" y="-1877" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; void incIdx(int &amp;iIdx,</text>
<text text-anchor="start" x="785.5" y="-1866" font-family="Helvetica,sans-Serif" font-size="10.00"> int iOffset=1)</text>
<text text-anchor="middle" x="844" y="-1855" font-family="Helvetica,sans-Serif" font-size="10.00">}</text>
</a>
</g>
</g>
<!-- Node9&#45;&gt;Node8 -->
<g id="edge10" class="edge">
<title>Node9&#45;&gt;Node8</title>
<path fill="none" stroke="#404040" d="M844,-1847.89C844,-1795.5 844,-1738.52 844,-1687.11"/>
<polygon fill="none" stroke="#404040" points="844,-1686.86 840,-1680.86 844,-1674.86 848,-1680.86 844,-1686.86"/>
<text text-anchor="middle" x="878" y="-1822" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;m_pCRingBuff</text>
</g>
<!-- Node10 -->
<g id="node10" class="node">
<title>Node10</title>
<g id="a_node10"><a xlink:href="a00490.xhtml" target="_top" xlink:title="implement a circular buffer of type T">
<polygon fill="white" stroke="#666666" points="921.5,-2593 766.5,-2593 766.5,-2255 921.5,-2255 921.5,-2593"/>
<text text-anchor="middle" x="844" y="-2581" font-family="Helvetica,sans-Serif" font-size="10.00">{CRingBuffer&lt; T &gt;</text>
<text text-anchor="start" x="774.5" y="-2570" font-family="Helvetica,sans-Serif" font-size="10.00">|&#45; int m_iBuffLength</text>
<text text-anchor="start" x="774.5" y="-2559" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iReadIdx</text>
<text text-anchor="start" x="774.5" y="-2548" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iWriteIdx</text>
<text text-anchor="start" x="774.5" y="-2537" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; T * m_ptBuff</text>
<text text-anchor="start" x="774.5" y="-2526" font-family="Helvetica,sans-Serif" font-size="10.00">|+ &#160;CRingBuffer(int iBuffer</text>
<text text-anchor="start" x="774.5" y="-2515" font-family="Helvetica,sans-Serif" font-size="10.00">LengthInSamples)</text>
<text text-anchor="start" x="774.5" y="-2504" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CRingBuffer()</text>
<text text-anchor="start" x="774.5" y="-2493" font-family="Helvetica,sans-Serif" font-size="10.00">+ void putPostInc(T tNewValue)</text>
<text text-anchor="start" x="774.5" y="-2482" font-family="Helvetica,sans-Serif" font-size="10.00">+ void putPostInc(const</text>
<text text-anchor="start" x="774.5" y="-2471" font-family="Helvetica,sans-Serif" font-size="10.00"> T *ptNewBuff, int iLength)</text>
<text text-anchor="start" x="774.5" y="-2460" font-family="Helvetica,sans-Serif" font-size="10.00">+ void put(T tNewValue)</text>
<text text-anchor="start" x="774.5" y="-2449" font-family="Helvetica,sans-Serif" font-size="10.00">+ void put(const T *ptNewBuff,</text>
<text text-anchor="start" x="774.5" y="-2438" font-family="Helvetica,sans-Serif" font-size="10.00"> int iLength)</text>
<text text-anchor="start" x="774.5" y="-2427" font-family="Helvetica,sans-Serif" font-size="10.00">+ T getPostInc()</text>
<text text-anchor="start" x="774.5" y="-2416" font-family="Helvetica,sans-Serif" font-size="10.00">+ void getPostInc(T *ptBuff,</text>
<text text-anchor="start" x="774.5" y="-2405" font-family="Helvetica,sans-Serif" font-size="10.00"> int iLength)</text>
<text text-anchor="start" x="774.5" y="-2394" font-family="Helvetica,sans-Serif" font-size="10.00">+ T get(float fOffset</text>
<text text-anchor="start" x="774.5" y="-2383" font-family="Helvetica,sans-Serif" font-size="10.00">=0) const</text>
<text text-anchor="start" x="774.5" y="-2372" font-family="Helvetica,sans-Serif" font-size="10.00">+ void get(T *ptBuff,</text>
<text text-anchor="start" x="774.5" y="-2361" font-family="Helvetica,sans-Serif" font-size="10.00"> int iLength) const</text>
<text text-anchor="start" x="774.5" y="-2350" font-family="Helvetica,sans-Serif" font-size="10.00">and 7 more...</text>
<text text-anchor="start" x="774.5" y="-2339" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; &#160;CRingBuffer()</text>
<text text-anchor="start" x="774.5" y="-2328" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; &#160;CRingBuffer(const</text>
<text text-anchor="start" x="774.5" y="-2317" font-family="Helvetica,sans-Serif" font-size="10.00"> CRingBuffer &amp;that)</text>
<text text-anchor="start" x="774.5" y="-2306" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CRingBuffer &amp; operator</text>
<text text-anchor="start" x="774.5" y="-2295" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CRingBuffer &amp;c)</text>
<text text-anchor="start" x="774.5" y="-2284" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; void incIdx(int &amp;iIdx,</text>
<text text-anchor="start" x="774.5" y="-2273" font-family="Helvetica,sans-Serif" font-size="10.00"> int iOffset=1)</text>
<text text-anchor="middle" x="844" y="-2262" font-family="Helvetica,sans-Serif" font-size="10.00">}</text>
</a>
</g>
</g>
<!-- Node10&#45;&gt;Node9 -->
<g id="edge11" class="edge">
<title>Node10&#45;&gt;Node9</title>
<path fill="none" stroke="orange" d="M844,-2244.65C844,-2232.57 844,-2220.4 844,-2208.32"/>
<polygon fill="orange" stroke="orange" points="840.5,-2244.77 844,-2254.77 847.5,-2244.77 840.5,-2244.77"/>
<text text-anchor="middle" x="862.5" y="-2229" font-family="Helvetica,sans-Serif" font-size="10.00"> &lt; float &gt;</text>
</g>
</g>
</svg>
        <g id="navigator" transform="translate(0 0)" fill="#404254">
                <rect fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width=".5" x="0" y="0" width="60" height="60"/>
                <use id="zoomplus" xlink:href="#zoomPlus" x="17" y="9" onmousedown="handleZoom(evt,'in')"/>
                <use id="zoomminus" xlink:href="#zoomMin" x="42" y="9" onmousedown="handleZoom(evt,'out')"/>
                <use id="reset" xlink:href="#resetDef" x="30" y="36" onmousedown="handleReset()"/>
                <g id="arrowUp" xlink:href="#dirArrow" transform="translate(30 24)" onmousedown="handlePan(0,-1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowUp.mouseover" end="arrowUp.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowRight" xlink:href="#dirArrow" transform="rotate(90) translate(36 -43)" onmousedown="handlePan(1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowRight.mouseover" end="arrowRight.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowDown" xlink:href="#dirArrow" transform="rotate(180) translate(-30 -48)" onmousedown="handlePan(0,1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowDown.mouseover" end="arrowDown.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowLeft" xlink:href="#dirArrow" transform="rotate(270) translate(-36 17)" onmousedown="handlePan(-1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowLeft.mouseover" end="arrowLeft.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
        </g>
        <svg viewBox="0 0 15 15" width="100%" height="30px" preserveAspectRatio="xMaxYMin meet">
         <g id="arrow_out" transform="scale(0.3 0.3)">
          <a xlink:href="a00448_org.svg" target="_base">
           <rect id="button" ry="5" rx="5" y="6" x="6" height="38" width="38"
                fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width="1.0"/>
           <path id="arrow"
             d="M 11.500037,31.436501 C 11.940474,20.09759 22.043105,11.32322 32.158766,21.979434 L 37.068811,17.246167 C 37.068811,17.246167 37.088388,32 37.088388,32 L 22.160133,31.978069 C 22.160133,31.978069 26.997745,27.140456 26.997745,27.140456 C 18.528582,18.264221 13.291696,25.230495 11.500037,31.436501 z"
             style="fill:#404040;"/>
          </a>
         </g>
        </svg>
</svg>
