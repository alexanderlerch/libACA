<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 4.0.0 (20220602.1335)
 -->
<!-- Title: CBeatHistoIf Pages: 1 -->
<!--zoomable 2631 -->
<svg id="main" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" onload="init(evt)">
<style type="text/css"><![CDATA[
.edge:hover path { stroke: red; }
.edge:hover polygon { stroke: red; fill: red; }
]]></style>
<script type="text/javascript"><![CDATA[
var edges = document.getElementsByTagName('g');
if (edges && edges.length) {
  for (var i=0;i<edges.length;i++) {
    if (edges[i].id.substr(0,4)=='edge') {
      edges[i].setAttribute('class','edge');
    }
  }
}
]]></script>
        <defs>
                <circle id="rim" cx="0" cy="0" r="7"/>
                <circle id="rim2" cx="0" cy="0" r="3.5"/>
                <g id="zoomPlus">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomplus.mouseover" end="zoomplus.mouseout"/>
                        </use>
                        <path d="M-4,0h8M0,-4v8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="zoomMin">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomminus.mouseover" end="zoomminus.mouseout"/>
                        </use>
                        <path d="M-4,0h8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="dirArrow">
                        <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
               <g id="resetDef">
                       <use xlink:href="#rim2" fill="#404040">
                               <set attributeName="fill" to="#808080" begin="reset.mouseover" end="reset.mouseout"/>
                       </use>
               </g>
        </defs>

<script type="text/javascript">
var viewWidth = 926;
var viewHeight = 2631;
var sectionId = 'dynsection-0';
</script>
<script xlink:href="svgpan.js"/>
<svg id="graph" class="graph">
<g id="viewport">
<title>CBeatHistoIf</title>
<polygon fill="white" stroke="transparent" points="-4,4 -4,-2627 921.5,-2627 921.5,4 -4,4"/>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="class for computation of a BeatHistogram from either a file or a vector">
<polygon fill="#bfbfbf" stroke="black" points="141,-0.5 141,-607.5 339,-607.5 339,-0.5 141,-0.5"/>
<text text-anchor="middle" x="240" y="-595.5" font-family="Helvetica,sans-Serif" font-size="10.00">CBeatHistoIf</text>
<polyline fill="none" stroke="black" points="141,-588.5 339,-588.5 "/>
<text text-anchor="start" x="149" y="-576.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float * m_pfNovelty</text>
<text text-anchor="start" x="149" y="-565.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float * m_pfProcBuff</text>
<text text-anchor="start" x="149" y="-554.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float * m_pfBeatHisto</text>
<text text-anchor="start" x="149" y="-543.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iBlockLength</text>
<text text-anchor="start" x="149" y="-532.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iHopLength</text>
<text text-anchor="start" x="149" y="-521.5" font-family="Helvetica,sans-Serif" font-size="10.00"># const int m_iBeatHistoLength</text>
<text text-anchor="start" x="149" y="-510.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float m_fSampleRate</text>
<text text-anchor="start" x="149" y="-499.5" font-family="Helvetica,sans-Serif" font-size="10.00"># bool m_bIsInitialized</text>
<polyline fill="none" stroke="black" points="141,-492.5 339,-492.5 "/>
<text text-anchor="start" x="149" y="-480.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getNumBins</text>
<text text-anchor="start" x="149" y="-469.5" font-family="Helvetica,sans-Serif" font-size="10.00">(int &amp;iNumBeatHistoBins,</text>
<text text-anchor="start" x="149" y="-458.5" font-family="Helvetica,sans-Serif" font-size="10.00"> BeatHisto_t eBeatHistoComp) const</text>
<text text-anchor="start" x="149" y="-447.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ int getNumBins(BeatHisto</text>
<text text-anchor="start" x="149" y="-436.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t eBeatHistoComp) const</text>
<text text-anchor="start" x="149" y="-425.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getBeatHistoAxis</text>
<text text-anchor="start" x="149" y="-414.5" font-family="Helvetica,sans-Serif" font-size="10.00">Ticks(float *pfAxisTicks,</text>
<text text-anchor="start" x="149" y="-403.5" font-family="Helvetica,sans-Serif" font-size="10.00"> BeatHisto_t eBeatHistoComp) const</text>
<text text-anchor="start" x="149" y="-392.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compBeatHisto</text>
<text text-anchor="start" x="149" y="-381.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfBeatHisto,</text>
<text text-anchor="start" x="149" y="-370.5" font-family="Helvetica,sans-Serif" font-size="10.00"> BeatHisto_t eBeatHistoComp</text>
<text text-anchor="start" x="149" y="-359.5" font-family="Helvetica,sans-Serif" font-size="10.00">=kBeatHistoFft)</text>
<text text-anchor="start" x="149" y="-348.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="149" y="-337.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CBeatHistoIf *&amp;pCInstance,</text>
<text text-anchor="start" x="149" y="-326.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const std::string &amp;strAudioFile</text>
<text text-anchor="start" x="149" y="-315.5" font-family="Helvetica,sans-Serif" font-size="10.00">Path, int iBlockLength=1024,</text>
<text text-anchor="start" x="149" y="-304.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iHopLength=8)</text>
<text text-anchor="start" x="149" y="-293.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="149" y="-282.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CBeatHistoIf *&amp;pCInstance,</text>
<text text-anchor="start" x="149" y="-271.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const float *pfAudio, long</text>
<text text-anchor="start" x="149" y="-260.5" font-family="Helvetica,sans-Serif" font-size="10.00"> long iNumSamples, float fSampleRate,</text>
<text text-anchor="start" x="149" y="-249.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iBlockLength=1024, int iHopLength=8)</text>
<text text-anchor="start" x="149" y="-238.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="149" y="-227.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CBeatHistoIf *&amp;pCInstance)</text>
<text text-anchor="start" x="149" y="-216.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CBeatHistoIf(int iBlock</text>
<text text-anchor="start" x="149" y="-205.5" font-family="Helvetica,sans-Serif" font-size="10.00">Length, int iHopLength,</text>
<text text-anchor="start" x="149" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate)</text>
<text text-anchor="start" x="149" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CBeatHistoIf()</text>
<text text-anchor="start" x="149" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CBeatHistoIf(const</text>
<text text-anchor="start" x="149" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00"> CBeatHistoIf &amp;that)</text>
<text text-anchor="start" x="149" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CBeatHistoIf &amp; operator</text>
<text text-anchor="start" x="149" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CBeatHistoIf &amp;c)</text>
<text text-anchor="start" x="149" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t init_(const</text>
<text text-anchor="start" x="149" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00"> std::string &amp;strAudioFile</text>
<text text-anchor="start" x="149" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00">Path)</text>
<text text-anchor="start" x="149" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t init_(const</text>
<text text-anchor="start" x="149" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfAudio, long</text>
<text text-anchor="start" x="149" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00"> long iNumSamples, float</text>
<text text-anchor="start" x="149" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00"> fSampleRate)</text>
<text text-anchor="start" x="149" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t reset_()</text>
<text text-anchor="start" x="149" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00"># void compHistoRange</text>
<text text-anchor="start" x="149" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">_(int &amp;istartIdx, int</text>
<text text-anchor="start" x="149" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;istopIdx, BeatHisto</text>
<text text-anchor="start" x="149" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t eBeatHistoComp) const</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="a00474.xhtml" target="_top" xlink:title="class for FFT computation with windowing">
<polygon fill="white" stroke="black" points="0,-1294 0,-1780 188,-1780 188,-1294 0,-1294"/>
<text text-anchor="middle" x="94" y="-1768" font-family="Helvetica,sans-Serif" font-size="10.00">CFft</text>
<polyline fill="none" stroke="black" points="0,-1761 188,-1761 "/>
<text text-anchor="start" x="8" y="-1749" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_pfProcBuff</text>
<text text-anchor="start" x="8" y="-1738" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_pfWindowBuff</text>
<text text-anchor="start" x="8" y="-1727" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iDataLength</text>
<text text-anchor="start" x="8" y="-1716" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iFftLength</text>
<text text-anchor="start" x="8" y="-1705" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Windowing_t m_ePrePostWindowOpt</text>
<text text-anchor="start" x="8" y="-1694" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; bool m_bIsInitialized</text>
<text text-anchor="start" x="8" y="-1683" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; static const float m_Pi</text>
<text text-anchor="start" x="8" y="-1672" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; static const float</text>
<text text-anchor="start" x="8" y="-1661" font-family="Helvetica,sans-Serif" font-size="10.00"> m_Pi2</text>
<polyline fill="none" stroke="black" points="0,-1654 188,-1654 "/>
<text text-anchor="start" x="8" y="-1642" font-family="Helvetica,sans-Serif" font-size="10.00">+ CFft()</text>
<text text-anchor="start" x="8" y="-1631" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CFft()</text>
<text text-anchor="start" x="8" y="-1620" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t init(int iBlockLength,</text>
<text text-anchor="start" x="8" y="-1609" font-family="Helvetica,sans-Serif" font-size="10.00"> int iZeroPadFactor=1, WindowFunction</text>
<text text-anchor="start" x="8" y="-1598" font-family="Helvetica,sans-Serif" font-size="10.00">_t eWindow=kWindowHann, Windowing</text>
<text text-anchor="start" x="8" y="-1587" font-family="Helvetica,sans-Serif" font-size="10.00">_t eWindowing=kPreWindow)</text>
<text text-anchor="start" x="8" y="-1576" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t reset()</text>
<text text-anchor="start" x="8" y="-1565" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t overrideWindow</text>
<text text-anchor="start" x="8" y="-1554" font-family="Helvetica,sans-Serif" font-size="10.00">(const float *pfNewWindow)</text>
<text text-anchor="start" x="8" y="-1543" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getWindow(float</text>
<text text-anchor="start" x="8" y="-1532" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfWindow) const</text>
<text text-anchor="start" x="8" y="-1521" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compFft(complex</text>
<text text-anchor="start" x="8" y="-1510" font-family="Helvetica,sans-Serif" font-size="10.00">_t *pfSpectrum, const</text>
<text text-anchor="start" x="8" y="-1499" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfIn)</text>
<text text-anchor="start" x="8" y="-1488" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compInvFft</text>
<text text-anchor="start" x="8" y="-1477" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfOut, const</text>
<text text-anchor="start" x="8" y="-1466" font-family="Helvetica,sans-Serif" font-size="10.00"> complex_t *pfSpectrum)</text>
<text text-anchor="start" x="8" y="-1455" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getMagnitude</text>
<text text-anchor="start" x="8" y="-1444" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfMag, const</text>
<text text-anchor="start" x="8" y="-1433" font-family="Helvetica,sans-Serif" font-size="10.00"> complex_t *pfSpectrum)</text>
<text text-anchor="start" x="8" y="-1422" font-family="Helvetica,sans-Serif" font-size="10.00"> const</text>
<text text-anchor="start" x="8" y="-1411" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getPhase(float</text>
<text text-anchor="start" x="8" y="-1400" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfPhase, const complex</text>
<text text-anchor="start" x="8" y="-1389" font-family="Helvetica,sans-Serif" font-size="10.00">_t *pfSpectrum) const</text>
<text text-anchor="start" x="8" y="-1378" font-family="Helvetica,sans-Serif" font-size="10.00">and 7 more...</text>
<text text-anchor="start" x="8" y="-1367" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CFft(const CFft &amp;that)</text>
<text text-anchor="start" x="8" y="-1356" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CFft &amp; operator=(const</text>
<text text-anchor="start" x="8" y="-1345" font-family="Helvetica,sans-Serif" font-size="10.00"> CFft &amp;c)</text>
<text text-anchor="start" x="8" y="-1334" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Error_t allocMemory_()</text>
<text text-anchor="start" x="8" y="-1323" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Error_t freeMemory_()</text>
<text text-anchor="start" x="8" y="-1312" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Error_t computeWindow</text>
<text text-anchor="start" x="8" y="-1301" font-family="Helvetica,sans-Serif" font-size="10.00">_(WindowFunction_t eWindow)</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="#404040" d="M73.13,-1293.86C63.38,-1115.53 61.66,-868.04 103,-655 110.77,-614.98 122.9,-573.64 136.81,-534.02"/>
<polygon fill="none" stroke="#404040" points="136.85,-533.92 135.1,-526.92 140.88,-522.62 142.63,-529.61 136.85,-533.92"/>
<text text-anchor="middle" x="126" y="-929" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCFft</text>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="a00546.xhtml" target="_top" xlink:title="computation of correlation (freq domain implementation)">
<polygon fill="white" stroke="black" points="158,-782 158,-1081 322,-1081 322,-782 158,-782"/>
<text text-anchor="middle" x="240" y="-1069" font-family="Helvetica,sans-Serif" font-size="10.00">CCcf</text>
<polyline fill="none" stroke="black" points="158,-1062 322,-1062 "/>
<text text-anchor="start" x="166" y="-1050" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; bool m_bIsInitialized</text>
<text text-anchor="start" x="166" y="-1039" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; bool m_bWasProcessed</text>
<text text-anchor="start" x="166" y="-1028" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_apfData</text>
<text text-anchor="start" x="166" y="-1017" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iBlockLength</text>
<text text-anchor="start" x="166" y="-1006" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iFftLength</text>
<polyline fill="none" stroke="black" points="158,-999 322,-999 "/>
<text text-anchor="start" x="166" y="-987" font-family="Helvetica,sans-Serif" font-size="10.00">+ CCcf(void)</text>
<text text-anchor="start" x="166" y="-976" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CCcf(void)</text>
<text text-anchor="start" x="166" y="-965" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t init(int iBlockLength)</text>
<text text-anchor="start" x="166" y="-954" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t reset()</text>
<text text-anchor="start" x="166" y="-943" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compCcf(const</text>
<text text-anchor="start" x="166" y="-932" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfIn1, const</text>
<text text-anchor="start" x="166" y="-921" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfIn2, bool bNormalize=true)</text>
<text text-anchor="start" x="166" y="-910" font-family="Helvetica,sans-Serif" font-size="10.00">+ int getCcfLength(bool</text>
<text text-anchor="start" x="166" y="-899" font-family="Helvetica,sans-Serif" font-size="10.00"> bisAcf=false)</text>
<text text-anchor="start" x="166" y="-888" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getCcf(float</text>
<text text-anchor="start" x="166" y="-877" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfCcfResult, bool bisAcf</text>
<text text-anchor="start" x="166" y="-866" font-family="Helvetica,sans-Serif" font-size="10.00">=false) const</text>
<text text-anchor="start" x="166" y="-855" font-family="Helvetica,sans-Serif" font-size="10.00">+ float getCcfMax(bool</text>
<text text-anchor="start" x="166" y="-844" font-family="Helvetica,sans-Serif" font-size="10.00"> bisAcf=false) const</text>
<text text-anchor="start" x="166" y="-833" font-family="Helvetica,sans-Serif" font-size="10.00">+ int getCcfMaxIdx(bool</text>
<text text-anchor="start" x="166" y="-822" font-family="Helvetica,sans-Serif" font-size="10.00"> bisAcf=false) const</text>
<text text-anchor="start" x="166" y="-811" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CCcf(const CCcf &amp;that)</text>
<text text-anchor="start" x="166" y="-800" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CCcf &amp; operator=(const</text>
<text text-anchor="start" x="166" y="-789" font-family="Helvetica,sans-Serif" font-size="10.00"> CCcf &amp;c)</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node3 -->
<g id="edge3" class="edge">
<title>Node2&#45;&gt;Node3</title>
<path fill="none" stroke="#404040" d="M127.48,-1293.64C131.87,-1270.68 136.7,-1247.83 142,-1226 152.64,-1182.15 166.84,-1135.48 181.13,-1092.56"/>
<polygon fill="none" stroke="#404040" points="181.14,-1092.52 179.26,-1085.56 184.96,-1081.15 186.84,-1088.11 181.14,-1092.52"/>
<text text-anchor="middle" x="163.5" y="-1229" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;m_pCFft</text>
</g>
<!-- Node4 -->
<g id="node4" class="node">
<title>Node4</title>
<g id="a_node4"><a xlink:href="a00514.xhtml" target="_top" xlink:title="class for computation of a magnitude Novelty from either a file or a vector">
<polygon fill="white" stroke="black" points="345.5,-655.5 345.5,-1207.5 554.5,-1207.5 554.5,-655.5 345.5,-655.5"/>
<text text-anchor="middle" x="450" y="-1195.5" font-family="Helvetica,sans-Serif" font-size="10.00">CNoveltyIf</text>
<polyline fill="none" stroke="black" points="345.5,-1188.5 554.5,-1188.5 "/>
<text text-anchor="start" x="353.5" y="-1176.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iBlockLength</text>
<text text-anchor="start" x="353.5" y="-1165.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iHopLength</text>
<text text-anchor="start" x="353.5" y="-1154.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float m_fSampleRate</text>
<text text-anchor="start" x="353.5" y="-1143.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float * m_pfProcBuff2</text>
<text text-anchor="start" x="353.5" y="-1132.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float * m_pfProcBuff1</text>
<text text-anchor="start" x="353.5" y="-1121.5" font-family="Helvetica,sans-Serif" font-size="10.00"># bool m_bIsInitialized</text>
<polyline fill="none" stroke="black" points="345.5,-1114.5 554.5,-1114.5 "/>
<text text-anchor="start" x="353.5" y="-1102.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getNumBlocks</text>
<text text-anchor="start" x="353.5" y="-1091.5" font-family="Helvetica,sans-Serif" font-size="10.00">(int &amp;iNumBlocks) const</text>
<text text-anchor="start" x="353.5" y="-1080.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ int getNumBlocks()</text>
<text text-anchor="start" x="353.5" y="-1069.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const</text>
<text text-anchor="start" x="353.5" y="-1058.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ float getTimeStamp</text>
<text text-anchor="start" x="353.5" y="-1047.5" font-family="Helvetica,sans-Serif" font-size="10.00">(int iBlockIdx) const</text>
<text text-anchor="start" x="353.5" y="-1036.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getTimeStamps</text>
<text text-anchor="start" x="353.5" y="-1025.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfAxisTicks) const</text>
<text text-anchor="start" x="353.5" y="-1014.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compNovelty</text>
<text text-anchor="start" x="353.5" y="-1003.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfNovelty, bool</text>
<text text-anchor="start" x="353.5" y="-992.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pbisOnset=0)</text>
<text text-anchor="start" x="353.5" y="-981.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="353.5" y="-970.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CNoveltyIf *&amp;pCInstance,</text>
<text text-anchor="start" x="353.5" y="-959.5" font-family="Helvetica,sans-Serif" font-size="10.00"> Novelty_t eNoveltyIdx,</text>
<text text-anchor="start" x="353.5" y="-948.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const std::string &amp;strAudioFile</text>
<text text-anchor="start" x="353.5" y="-937.5" font-family="Helvetica,sans-Serif" font-size="10.00">Path, int iBlockLength=4096,</text>
<text text-anchor="start" x="353.5" y="-926.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iHopLength=512)</text>
<text text-anchor="start" x="353.5" y="-915.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="353.5" y="-904.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CNoveltyIf *&amp;pCInstance,</text>
<text text-anchor="start" x="353.5" y="-893.5" font-family="Helvetica,sans-Serif" font-size="10.00"> Novelty_t eNoveltyIdx,</text>
<text text-anchor="start" x="353.5" y="-882.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const float *pfAudio, long</text>
<text text-anchor="start" x="353.5" y="-871.5" font-family="Helvetica,sans-Serif" font-size="10.00"> long iNumSamples, float fSampleRate,</text>
<text text-anchor="start" x="353.5" y="-860.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iBlockLength=4096, int iHopLength=512)</text>
<text text-anchor="start" x="353.5" y="-849.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="353.5" y="-838.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CNoveltyIf *&amp;pCInstance)</text>
<text text-anchor="start" x="353.5" y="-827.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static std::string</text>
<text text-anchor="start" x="353.5" y="-816.5" font-family="Helvetica,sans-Serif" font-size="10.00"> getNoveltyString(Novelty</text>
<text text-anchor="start" x="353.5" y="-805.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t eNoveltyIdx)</text>
<text text-anchor="start" x="353.5" y="-794.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Novelty_t getNovelty</text>
<text text-anchor="start" x="353.5" y="-783.5" font-family="Helvetica,sans-Serif" font-size="10.00">IdxFromString(std::string</text>
<text text-anchor="start" x="353.5" y="-772.5" font-family="Helvetica,sans-Serif" font-size="10.00"> sNoveltyString)</text>
<text text-anchor="start" x="353.5" y="-761.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CNoveltyIf()</text>
<text text-anchor="start" x="353.5" y="-750.5" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CNoveltyIf()</text>
<text text-anchor="start" x="353.5" y="-739.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CNoveltyIf(const CNovelty</text>
<text text-anchor="start" x="353.5" y="-728.5" font-family="Helvetica,sans-Serif" font-size="10.00">If &amp;that)</text>
<text text-anchor="start" x="353.5" y="-717.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CNoveltyIf &amp; operator</text>
<text text-anchor="start" x="353.5" y="-706.5" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CNoveltyIf &amp;c)</text>
<text text-anchor="start" x="353.5" y="-695.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t reset_()</text>
<text text-anchor="start" x="353.5" y="-684.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t init_(Novelty</text>
<text text-anchor="start" x="353.5" y="-673.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t eNoveltyIdx)</text>
<text text-anchor="start" x="353.5" y="-662.5" font-family="Helvetica,sans-Serif" font-size="10.00"># void computeMagSpectrum_()</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node4 -->
<g id="edge8" class="edge">
<title>Node2&#45;&gt;Node4</title>
<path fill="none" stroke="#404040" d="M165.38,-1293.89C174.67,-1279.82 185.16,-1266.67 197,-1255 241.94,-1210.69 284.83,-1251.03 331,-1208 333.01,-1206.12 334.99,-1204.21 336.94,-1202.25"/>
<polygon fill="none" stroke="#404040" points="337.03,-1202.17 338.25,-1195.06 345.28,-1193.46 344.06,-1200.56 337.03,-1202.17"/>
<text text-anchor="middle" x="324" y="-1229" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCFft</text>
</g>
<!-- Node3&#45;&gt;Node1 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node1</title>
<path fill="none" stroke="#404040" d="M240,-781.87C240,-732.87 240,-676.38 240,-619.8"/>
<polygon fill="none" stroke="#404040" points="240,-619.73 236,-613.73 240,-607.73 244,-613.73 240,-619.73"/>
<text text-anchor="middle" x="264.5" y="-629" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCCcf</text>
</g>
<!-- Node4&#45;&gt;Node1 -->
<g id="edge4" class="edge">
<title>Node4&#45;&gt;Node1</title>
<path fill="none" stroke="#404040" d="M357.59,-655.24C352.72,-640.75 347.82,-626.16 342.93,-611.59"/>
<polygon fill="none" stroke="#404040" points="342.83,-611.28 337.13,-606.87 339.01,-599.91 344.71,-604.32 342.83,-611.28"/>
<text text-anchor="middle" x="385.5" y="-629" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCNovelty</text>
</g>
<!-- Node5 -->
<g id="node5" class="node">
<title>Node5</title>
<g id="a_node5"><a xlink:href="a00606.xhtml" target="_top" xlink:title="class for audio normalization offering three options">
<polygon fill="white" stroke="black" points="206,-1420.5 206,-1653.5 356,-1653.5 356,-1420.5 206,-1420.5"/>
<text text-anchor="middle" x="281" y="-1641.5" font-family="Helvetica,sans-Serif" font-size="10.00">CNormalizeAudio</text>
<polyline fill="none" stroke="black" points="206,-1634.5 356,-1634.5 "/>
<text text-anchor="start" x="214" y="-1622.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float m_fScaleFactor</text>
<polyline fill="none" stroke="black" points="206,-1615.5 356,-1615.5 "/>
<text text-anchor="start" x="214" y="-1603.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CNormalizeAudio(CAudioFile</text>
<text text-anchor="start" x="214" y="-1592.5" font-family="Helvetica,sans-Serif" font-size="10.00">If *pCAudioFile)</text>
<text text-anchor="start" x="214" y="-1581.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CNormalizeAudio(const</text>
<text text-anchor="start" x="214" y="-1570.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfAudioBuff, long</text>
<text text-anchor="start" x="214" y="-1559.5" font-family="Helvetica,sans-Serif" font-size="10.00"> long iAudioLength)</text>
<text text-anchor="start" x="214" y="-1548.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CNormalizeAudio()</text>
<text text-anchor="start" x="214" y="-1537.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void normalizeBlock</text>
<text text-anchor="start" x="214" y="-1526.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfAudioBlock,</text>
<text text-anchor="start" x="214" y="-1515.5" font-family="Helvetica,sans-Serif" font-size="10.00"> long long iNumSamples)</text>
<text text-anchor="start" x="214" y="-1504.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static void normalizeSignal</text>
<text text-anchor="start" x="214" y="-1493.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfAudio, long long</text>
<text text-anchor="start" x="214" y="-1482.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iNumSamples)</text>
<text text-anchor="start" x="214" y="-1471.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CNormalizeAudio()</text>
<text text-anchor="start" x="214" y="-1460.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CNormalizeAudio(const</text>
<text text-anchor="start" x="214" y="-1449.5" font-family="Helvetica,sans-Serif" font-size="10.00"> CNormalizeAudio &amp;that)</text>
<text text-anchor="start" x="214" y="-1438.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CNormalizeAudio &amp; operator</text>
<text text-anchor="start" x="214" y="-1427.5" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CNormalizeAudio &amp;c)</text>
</a>
</g>
</g>
<!-- Node5&#45;&gt;Node4 -->
<g id="edge5" class="edge">
<title>Node5&#45;&gt;Node4</title>
<path fill="none" stroke="#404040" d="M313.38,-1420.35C329.48,-1362.89 349.71,-1290.65 369.63,-1219.5"/>
<polygon fill="none" stroke="#404040" points="369.72,-1219.19 367.48,-1212.33 372.95,-1207.63 375.19,-1214.49 369.72,-1219.19"/>
<text text-anchor="middle" x="404.5" y="-1229" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCNormalize</text>
</g>
<!-- Node6 -->
<g id="node6" class="node">
<title>Node6</title>
<g id="a_node6"><a xlink:href="a00542.xhtml" target="_top" xlink:title="forward declaration">
<polygon fill="white" stroke="black" points="374,-1321.5 374,-1752.5 534,-1752.5 534,-1321.5 374,-1321.5"/>
<text text-anchor="middle" x="454" y="-1740.5" font-family="Helvetica,sans-Serif" font-size="10.00">CBlockAudioIf</text>
<polyline fill="none" stroke="black" points="374,-1733.5 534,-1733.5 "/>
<text text-anchor="start" x="382" y="-1721.5" font-family="Helvetica,sans-Serif" font-size="10.00"># long long m_iNumBlocks</text>
<text text-anchor="start" x="382" y="-1710.5" font-family="Helvetica,sans-Serif" font-size="10.00"># long long m_iCurrBlock</text>
<text text-anchor="start" x="382" y="-1699.5" font-family="Helvetica,sans-Serif" font-size="10.00"># long long m_iAudioLength</text>
<text text-anchor="start" x="382" y="-1688.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iBlockLength</text>
<text text-anchor="start" x="382" y="-1677.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iNumChannels</text>
<text text-anchor="start" x="382" y="-1666.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iHopLength</text>
<text text-anchor="start" x="382" y="-1655.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float m_fSampleRate</text>
<polyline fill="none" stroke="black" points="374,-1648.5 534,-1648.5 "/>
<text text-anchor="start" x="382" y="-1636.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ long long getNumBlocks</text>
<text text-anchor="start" x="382" y="-1625.5" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="382" y="-1614.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ long long getLengthInSamples</text>
<text text-anchor="start" x="382" y="-1603.5" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="382" y="-1592.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ float getTimeStamp</text>
<text text-anchor="start" x="382" y="-1581.5" font-family="Helvetica,sans-Serif" font-size="10.00">(long long iBlockIdx)</text>
<text text-anchor="start" x="382" y="-1570.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual bool isEndOfData</text>
<text text-anchor="start" x="382" y="-1559.5" font-family="Helvetica,sans-Serif" font-size="10.00">() const =0</text>
<text text-anchor="start" x="382" y="-1548.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual int getNextBlock</text>
<text text-anchor="start" x="382" y="-1537.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfBlock, float</text>
<text text-anchor="start" x="382" y="-1526.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfTimeStampInS=0)=0</text>
<text text-anchor="start" x="382" y="-1515.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="382" y="-1504.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CBlockAudioIf *&amp;pCInstance,</text>
<text text-anchor="start" x="382" y="-1493.5" font-family="Helvetica,sans-Serif" font-size="10.00"> CAudioFileIf *pCAudioFile,</text>
<text text-anchor="start" x="382" y="-1482.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iBlockLength, int iHopLength)</text>
<text text-anchor="start" x="382" y="-1471.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="382" y="-1460.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CBlockAudioIf *&amp;pCInstance,</text>
<text text-anchor="start" x="382" y="-1449.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const float *pfAudioBuff,</text>
<text text-anchor="start" x="382" y="-1438.5" font-family="Helvetica,sans-Serif" font-size="10.00"> long long iAudioLength, int</text>
<text text-anchor="start" x="382" y="-1427.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iBlockLength, int iHopLength,</text>
<text text-anchor="start" x="382" y="-1416.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate)</text>
<text text-anchor="start" x="382" y="-1405.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="382" y="-1394.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CBlockAudioIf *&amp;pCInstance)</text>
<text text-anchor="start" x="382" y="-1383.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CBlockAudioIf()</text>
<text text-anchor="start" x="382" y="-1372.5" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CBlockAudioIf()</text>
<text text-anchor="start" x="382" y="-1361.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CBlockAudioIf(const</text>
<text text-anchor="start" x="382" y="-1350.5" font-family="Helvetica,sans-Serif" font-size="10.00"> CBlockAudioIf &amp;that)</text>
<text text-anchor="start" x="382" y="-1339.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CBlockAudioIf &amp; operator</text>
<text text-anchor="start" x="382" y="-1328.5" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CBlockAudioIf &amp;c)</text>
</a>
</g>
</g>
<!-- Node6&#45;&gt;Node4 -->
<g id="edge6" class="edge">
<title>Node6&#45;&gt;Node4</title>
<path fill="none" stroke="#404040" d="M452.58,-1321.1C452.36,-1288.24 452.13,-1253.86 451.9,-1219.74"/>
<polygon fill="none" stroke="#404040" points="451.9,-1219.68 447.86,-1213.71 451.82,-1207.68 455.86,-1213.66 451.9,-1219.68"/>
<text text-anchor="middle" x="493.5" y="-1229" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCBlockAudio</text>
</g>
<!-- Node7 -->
<g id="node7" class="node">
<title>Node7</title>
<g id="a_node7"><a xlink:href="a00518.xhtml" target="_top" xlink:title="class for computation of a Novelty from a block of data (e.g., time or magnitude spectrum)">
<polygon fill="white" stroke="black" points="552,-1255.5 552,-1818.5 740,-1818.5 740,-1255.5 552,-1255.5"/>
<text text-anchor="middle" x="646" y="-1806.5" font-family="Helvetica,sans-Serif" font-size="10.00">CNoveltyFromBlockIf</text>
<polyline fill="none" stroke="black" points="552,-1799.5 740,-1799.5 "/>
<text text-anchor="start" x="560" y="-1787.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CNoveltyIf::Novelty</text>
<text text-anchor="start" x="560" y="-1776.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t m_eNoveltyIdx</text>
<text text-anchor="start" x="560" y="-1765.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iDataLength</text>
<text text-anchor="start" x="560" y="-1754.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float m_fSampleRate</text>
<text text-anchor="start" x="560" y="-1743.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float * m_pfPrevSpec</text>
<text text-anchor="start" x="560" y="-1732.5" font-family="Helvetica,sans-Serif" font-size="10.00"># const std::map&lt; CNovelty</text>
<text text-anchor="start" x="560" y="-1721.5" font-family="Helvetica,sans-Serif" font-size="10.00">If::Novelty_t, std::function</text>
<text text-anchor="start" x="560" y="-1710.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; float(const float *, const</text>
<text text-anchor="start" x="560" y="-1699.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *, int, float)&gt; &gt; m_DispatchMap</text>
<polyline fill="none" stroke="black" points="552,-1692.5 740,-1692.5 "/>
<text text-anchor="start" x="560" y="-1680.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual int getNoveltyDimension</text>
<text text-anchor="start" x="560" y="-1669.5" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="560" y="-1658.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CNoveltyIf::Novelty</text>
<text text-anchor="start" x="560" y="-1647.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t getNoveltyIdx() const</text>
<text text-anchor="start" x="560" y="-1636.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Error_t compNovelty</text>
<text text-anchor="start" x="560" y="-1625.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfNovelty, const</text>
<text text-anchor="start" x="560" y="-1614.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfIn)</text>
<text text-anchor="start" x="560" y="-1603.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="560" y="-1592.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CNoveltyFromBlockIf</text>
<text text-anchor="start" x="560" y="-1581.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *&amp;pCInstance, CNoveltyIf</text>
<text text-anchor="start" x="560" y="-1570.5" font-family="Helvetica,sans-Serif" font-size="10.00">::Novelty_t eNoveltyIdx,</text>
<text text-anchor="start" x="560" y="-1559.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="560" y="-1548.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="560" y="-1537.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CNoveltyFromBlockIf *&amp;pCInstance)</text>
<text text-anchor="start" x="560" y="-1526.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compNovelty</text>
<text text-anchor="start" x="560" y="-1515.5" font-family="Helvetica,sans-Serif" font-size="10.00">Flux(const float *pfMagSpec,</text>
<text text-anchor="start" x="560" y="-1504.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const float *pfPrevSpec,</text>
<text text-anchor="start" x="560" y="-1493.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="560" y="-1482.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compNovelty</text>
<text text-anchor="start" x="560" y="-1471.5" font-family="Helvetica,sans-Serif" font-size="10.00">Hainsworth(const float</text>
<text text-anchor="start" x="560" y="-1460.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfMagSpec, const float</text>
<text text-anchor="start" x="560" y="-1449.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfPrevSpec, int iDataLength,</text>
<text text-anchor="start" x="560" y="-1438.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate=1.F)</text>
<text text-anchor="start" x="560" y="-1427.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compNovelty</text>
<text text-anchor="start" x="560" y="-1416.5" font-family="Helvetica,sans-Serif" font-size="10.00">Laroche(const float *pfMagSpec,</text>
<text text-anchor="start" x="560" y="-1405.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const float *pfPrevSpec, int</text>
<text text-anchor="start" x="560" y="-1394.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="560" y="-1383.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CNoveltyFromBlockIf()</text>
<text text-anchor="start" x="560" y="-1372.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CNoveltyFromBlockIf</text>
<text text-anchor="start" x="560" y="-1361.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CNoveltyIf::Novelty</text>
<text text-anchor="start" x="560" y="-1350.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t eNoveltyIdx, int iDataLength,</text>
<text text-anchor="start" x="560" y="-1339.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate)</text>
<text text-anchor="start" x="560" y="-1328.5" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CNoveltyFromBlockIf()</text>
<text text-anchor="start" x="560" y="-1317.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CNoveltyFromBlockIf</text>
<text text-anchor="start" x="560" y="-1306.5" font-family="Helvetica,sans-Serif" font-size="10.00">(const CNoveltyFromBlockIf</text>
<text text-anchor="start" x="560" y="-1295.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;that)</text>
<text text-anchor="start" x="560" y="-1284.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CNoveltyFromBlockIf</text>
<text text-anchor="start" x="560" y="-1273.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp; operator=(const CNovelty</text>
<text text-anchor="start" x="560" y="-1262.5" font-family="Helvetica,sans-Serif" font-size="10.00">FromBlockIf &amp;c)</text>
</a>
</g>
</g>
<!-- Node7&#45;&gt;Node4 -->
<g id="edge7" class="edge">
<title>Node7&#45;&gt;Node4</title>
<path fill="none" stroke="#404040" d="M554.89,-1255.45C550.98,-1243.44 547.07,-1231.38 543.16,-1219.35"/>
<polygon fill="none" stroke="#404040" points="543.13,-1219.25 537.47,-1214.78 539.42,-1207.84 545.08,-1212.31 543.13,-1219.25"/>
<text text-anchor="middle" x="581.5" y="-1229" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCNovelty</text>
</g>
<!-- Node8 -->
<g id="node8" class="node">
<title>Node8</title>
<g id="a_node8"><a xlink:href="a00586.xhtml" target="_top" xlink:title="class for moving average low pass filtering">
<polygon fill="white" stroke="black" points="758.5,-1382 758.5,-1692 917.5,-1692 917.5,-1382 758.5,-1382"/>
<text text-anchor="middle" x="838" y="-1680" font-family="Helvetica,sans-Serif" font-size="10.00">CMovingAverage</text>
<polyline fill="none" stroke="black" points="758.5,-1673 917.5,-1673 "/>
<text text-anchor="start" x="766.5" y="-1661" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float m_fPrevOut</text>
<polyline fill="none" stroke="black" points="758.5,-1654 917.5,-1654 "/>
<text text-anchor="start" x="766.5" y="-1642" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t setFilterParam</text>
<text text-anchor="start" x="766.5" y="-1631" font-family="Helvetica,sans-Serif" font-size="10.00">(int iFilterLength=64)</text>
<text text-anchor="start" x="766.5" y="-1620" font-family="Helvetica,sans-Serif" font-size="10.00">+ int getFilterParam</text>
<text text-anchor="start" x="766.5" y="-1609" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="766.5" y="-1598" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t process(float</text>
<text text-anchor="start" x="766.5" y="-1587" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfOut, const float</text>
<text text-anchor="start" x="766.5" y="-1576" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfIn, long long iLenBuff)</text>
<text text-anchor="start" x="766.5" y="-1565" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t reset()</text>
<text text-anchor="start" x="766.5" y="-1554" font-family="Helvetica,sans-Serif" font-size="10.00">+ void filtfilt(float</text>
<text text-anchor="start" x="766.5" y="-1543" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfOut, const float</text>
<text text-anchor="start" x="766.5" y="-1532" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfIn, long long iLenBuff)</text>
<text text-anchor="start" x="766.5" y="-1521" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="766.5" y="-1510" font-family="Helvetica,sans-Serif" font-size="10.00">(CMovingAverage *&amp;pCInstance)</text>
<text text-anchor="start" x="766.5" y="-1499" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="766.5" y="-1488" font-family="Helvetica,sans-Serif" font-size="10.00">(CMovingAverage *&amp;pCInstance)</text>
<text text-anchor="start" x="766.5" y="-1477" font-family="Helvetica,sans-Serif" font-size="10.00">+ static int calcFilterLength</text>
<text text-anchor="start" x="766.5" y="-1466" font-family="Helvetica,sans-Serif" font-size="10.00">(float fIntegrationTimeInS,</text>
<text text-anchor="start" x="766.5" y="-1455" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate)</text>
<text text-anchor="start" x="766.5" y="-1444" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CMovingAverage()</text>
<text text-anchor="start" x="766.5" y="-1433" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; virtual ~CMovingAverage()</text>
<text text-anchor="start" x="766.5" y="-1422" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CMovingAverage(const</text>
<text text-anchor="start" x="766.5" y="-1411" font-family="Helvetica,sans-Serif" font-size="10.00"> CMovingAverage &amp;that)</text>
<text text-anchor="start" x="766.5" y="-1400" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CMovingAverage &amp; operator</text>
<text text-anchor="start" x="766.5" y="-1389" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CMovingAverage &amp;c)</text>
</a>
</g>
</g>
<!-- Node8&#45;&gt;Node4 -->
<g id="edge9" class="edge">
<title>Node8&#45;&gt;Node4</title>
<path fill="none" stroke="#404040" d="M802.48,-1381.7C789.15,-1339.03 771.59,-1293.81 749,-1255 700.12,-1171.04 625.97,-1090.87 563.74,-1031.46"/>
<polygon fill="none" stroke="#404040" points="563.36,-1031.1 556.25,-1029.88 554.65,-1022.85 561.75,-1024.07 563.36,-1031.1"/>
<text text-anchor="middle" x="769.5" y="-1229" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCLpFilter</text>
</g>
<!-- Node9 -->
<g id="node9" class="node">
<title>Node9</title>
<g id="a_node9"><a xlink:href="a00490.xhtml" target="_top" xlink:title=" ">
<polygon fill="white" stroke="black" points="771.5,-1866.5 771.5,-2231.5 904.5,-2231.5 904.5,-1866.5 771.5,-1866.5"/>
<text text-anchor="middle" x="838" y="-2219.5" font-family="Helvetica,sans-Serif" font-size="10.00">CRingBuffer&lt; float &gt;</text>
<polyline fill="none" stroke="black" points="771.5,-2212.5 904.5,-2212.5 "/>
<text text-anchor="start" x="779.5" y="-2200.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iBuffLength</text>
<text text-anchor="start" x="779.5" y="-2189.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iReadIdx</text>
<text text-anchor="start" x="779.5" y="-2178.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iWriteIdx</text>
<text text-anchor="start" x="779.5" y="-2167.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_ptBuff</text>
<polyline fill="none" stroke="black" points="771.5,-2160.5 904.5,-2160.5 "/>
<text text-anchor="start" x="779.5" y="-2148.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CRingBuffer(int iBuffer</text>
<text text-anchor="start" x="779.5" y="-2137.5" font-family="Helvetica,sans-Serif" font-size="10.00">LengthInSamples)</text>
<text text-anchor="start" x="779.5" y="-2126.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CRingBuffer()</text>
<text text-anchor="start" x="779.5" y="-2115.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void putPostInc(float</text>
<text text-anchor="start" x="779.5" y="-2104.5" font-family="Helvetica,sans-Serif" font-size="10.00"> tNewValue)</text>
<text text-anchor="start" x="779.5" y="-2093.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void putPostInc(const</text>
<text text-anchor="start" x="779.5" y="-2082.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *ptNewBuff, int</text>
<text text-anchor="start" x="779.5" y="-2071.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iLength)</text>
<text text-anchor="start" x="779.5" y="-2060.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void put(float tNewValue)</text>
<text text-anchor="start" x="779.5" y="-2049.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void put(const float</text>
<text text-anchor="start" x="779.5" y="-2038.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *ptNewBuff, int iLength)</text>
<text text-anchor="start" x="779.5" y="-2027.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ float getPostInc()</text>
<text text-anchor="start" x="779.5" y="-2016.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void getPostInc(float</text>
<text text-anchor="start" x="779.5" y="-2005.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *ptBuff, int iLength)</text>
<text text-anchor="start" x="779.5" y="-1994.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ float get(float fOffset</text>
<text text-anchor="start" x="779.5" y="-1983.5" font-family="Helvetica,sans-Serif" font-size="10.00">=0) const</text>
<text text-anchor="start" x="779.5" y="-1972.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void get(float *ptBuff,</text>
<text text-anchor="start" x="779.5" y="-1961.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iLength) const</text>
<text text-anchor="start" x="779.5" y="-1950.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 7 more...</text>
<text text-anchor="start" x="779.5" y="-1939.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CRingBuffer()</text>
<text text-anchor="start" x="779.5" y="-1928.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CRingBuffer(const</text>
<text text-anchor="start" x="779.5" y="-1917.5" font-family="Helvetica,sans-Serif" font-size="10.00"> CRingBuffer &amp;that)</text>
<text text-anchor="start" x="779.5" y="-1906.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CRingBuffer &amp; operator</text>
<text text-anchor="start" x="779.5" y="-1895.5" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CRingBuffer &amp;c)</text>
<text text-anchor="start" x="779.5" y="-1884.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; void incIdx(int &amp;iIdx,</text>
<text text-anchor="start" x="779.5" y="-1873.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iOffset=1)</text>
</a>
</g>
</g>
<!-- Node9&#45;&gt;Node8 -->
<g id="edge10" class="edge">
<title>Node9&#45;&gt;Node8</title>
<path fill="none" stroke="#404040" d="M838,-1866.4C838,-1813.56 838,-1756.13 838,-1704.29"/>
<polygon fill="none" stroke="#404040" points="838,-1704.28 834,-1698.28 838,-1692.28 842,-1698.28 838,-1704.28"/>
<text text-anchor="middle" x="872" y="-1840" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;m_pCRingBuff</text>
</g>
<!-- Node10 -->
<g id="node10" class="node">
<title>Node10</title>
<g id="a_node10"><a xlink:href="a00490.xhtml" target="_top" xlink:title="implement a circular buffer of type T">
<polygon fill="white" stroke="black" points="760.5,-2279.5 760.5,-2622.5 915.5,-2622.5 915.5,-2279.5 760.5,-2279.5"/>
<text text-anchor="middle" x="838" y="-2610.5" font-family="Helvetica,sans-Serif" font-size="10.00">CRingBuffer&lt; T &gt;</text>
<polyline fill="none" stroke="black" points="760.5,-2603.5 915.5,-2603.5 "/>
<text text-anchor="start" x="768.5" y="-2591.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iBuffLength</text>
<text text-anchor="start" x="768.5" y="-2580.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iReadIdx</text>
<text text-anchor="start" x="768.5" y="-2569.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iWriteIdx</text>
<text text-anchor="start" x="768.5" y="-2558.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; T * m_ptBuff</text>
<polyline fill="none" stroke="black" points="760.5,-2551.5 915.5,-2551.5 "/>
<text text-anchor="start" x="768.5" y="-2539.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CRingBuffer(int iBuffer</text>
<text text-anchor="start" x="768.5" y="-2528.5" font-family="Helvetica,sans-Serif" font-size="10.00">LengthInSamples)</text>
<text text-anchor="start" x="768.5" y="-2517.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CRingBuffer()</text>
<text text-anchor="start" x="768.5" y="-2506.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void putPostInc(T tNewValue)</text>
<text text-anchor="start" x="768.5" y="-2495.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void putPostInc(const</text>
<text text-anchor="start" x="768.5" y="-2484.5" font-family="Helvetica,sans-Serif" font-size="10.00"> T *ptNewBuff, int iLength)</text>
<text text-anchor="start" x="768.5" y="-2473.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void put(T tNewValue)</text>
<text text-anchor="start" x="768.5" y="-2462.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void put(const T *ptNewBuff,</text>
<text text-anchor="start" x="768.5" y="-2451.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iLength)</text>
<text text-anchor="start" x="768.5" y="-2440.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ T getPostInc()</text>
<text text-anchor="start" x="768.5" y="-2429.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void getPostInc(T *ptBuff,</text>
<text text-anchor="start" x="768.5" y="-2418.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iLength)</text>
<text text-anchor="start" x="768.5" y="-2407.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ T get(float fOffset</text>
<text text-anchor="start" x="768.5" y="-2396.5" font-family="Helvetica,sans-Serif" font-size="10.00">=0) const</text>
<text text-anchor="start" x="768.5" y="-2385.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void get(T *ptBuff,</text>
<text text-anchor="start" x="768.5" y="-2374.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iLength) const</text>
<text text-anchor="start" x="768.5" y="-2363.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 7 more...</text>
<text text-anchor="start" x="768.5" y="-2352.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CRingBuffer()</text>
<text text-anchor="start" x="768.5" y="-2341.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CRingBuffer(const</text>
<text text-anchor="start" x="768.5" y="-2330.5" font-family="Helvetica,sans-Serif" font-size="10.00"> CRingBuffer &amp;that)</text>
<text text-anchor="start" x="768.5" y="-2319.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CRingBuffer &amp; operator</text>
<text text-anchor="start" x="768.5" y="-2308.5" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CRingBuffer &amp;c)</text>
<text text-anchor="start" x="768.5" y="-2297.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; void incIdx(int &amp;iIdx,</text>
<text text-anchor="start" x="768.5" y="-2286.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iOffset=1)</text>
</a>
</g>
</g>
<!-- Node10&#45;&gt;Node9 -->
<g id="edge11" class="edge">
<title>Node10&#45;&gt;Node9</title>
<path fill="none" stroke="orange" d="M838,-2269.45C838,-2256.89 838,-2244.22 838,-2231.65"/>
<polygon fill="orange" stroke="orange" points="834.5,-2269.49 838,-2279.49 841.5,-2269.49 834.5,-2269.49"/>
<text text-anchor="middle" x="856.5" y="-2253" font-family="Helvetica,sans-Serif" font-size="10.00"> &lt; float &gt;</text>
</g>
</g>
</svg>
        <g id="navigator" transform="translate(0 0)" fill="#404254">
                <rect fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width=".5" x="0" y="0" width="60" height="60"/>
                <use id="zoomplus" xlink:href="#zoomPlus" x="17" y="9" onmousedown="handleZoom(evt,'in')"/>
                <use id="zoomminus" xlink:href="#zoomMin" x="42" y="9" onmousedown="handleZoom(evt,'out')"/>
                <use id="reset" xlink:href="#resetDef" x="30" y="36" onmousedown="handleReset()"/>
                <g id="arrowUp" xlink:href="#dirArrow" transform="translate(30 24)" onmousedown="handlePan(0,-1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowUp.mouseover" end="arrowUp.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowRight" xlink:href="#dirArrow" transform="rotate(90) translate(36 -43)" onmousedown="handlePan(1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowRight.mouseover" end="arrowRight.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowDown" xlink:href="#dirArrow" transform="rotate(180) translate(-30 -48)" onmousedown="handlePan(0,1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowDown.mouseover" end="arrowDown.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowLeft" xlink:href="#dirArrow" transform="rotate(270) translate(-36 17)" onmousedown="handlePan(-1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowLeft.mouseover" end="arrowLeft.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
        </g>
        <svg viewBox="0 0 15 15" width="100%" height="30px" preserveAspectRatio="xMaxYMin meet">
         <g id="arrow_out" transform="scale(0.3 0.3)">
          <a xlink:href="a00448_org.svg" target="_base">
           <rect id="button" ry="5" rx="5" y="6" x="6" height="38" width="38"
                fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width="1.0"/>
           <path id="arrow"
             d="M 11.500037,31.436501 C 11.940474,20.09759 22.043105,11.32322 32.158766,21.979434 L 37.068811,17.246167 C 37.068811,17.246167 37.088388,32 37.088388,32 L 22.160133,31.978069 C 22.160133,31.978069 26.997745,27.140456 26.997745,27.140456 C 18.528582,18.264221 13.291696,25.230495 11.500037,31.436501 z"
             style="fill:#404040;"/>
          </a>
         </g>
        </svg>
</svg>
