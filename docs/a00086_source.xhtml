<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.4"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ACA: ToolCcf.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">ACA<span id="projectnumber">&#160;0.2.8</span>
   </div>
   <div id="projectbrief">Example Code for Audio Content Analysis</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.4 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search",'Search','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('a00086_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle"><div class="title">ToolCcf.cpp</div></div>
</div><!--header-->
<div class="contents">
<a href="a00086.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span> </div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span><span class="preprocessor">#include &quot;<a class="code" href="a00149.xhtml">Util.h</a>&quot;</span></div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="preprocessor">#include &quot;<a class="code" href="a00155.xhtml">Vector.h</a>&quot;</span></div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span><span class="preprocessor">#include &quot;<a class="code" href="a00158.xhtml">Fft.h</a>&quot;</span></div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span> </div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span><span class="preprocessor">#include &quot;<a class="code" href="a00200.xhtml">ToolCcf.h</a>&quot;</span></div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span> </div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno"><a class="line" href="a00546.xhtml#ac12b4a9809a1dba42dea5ceefb45da36">    8</a></span><a class="code hl_function" href="a00546.xhtml#ac12b4a9809a1dba42dea5ceefb45da36">CCcf::CCcf</a>(<span class="keywordtype">void</span>)</div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span>{</div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span>    <a class="code hl_variable" href="a00546.xhtml#a8474a655b6e148c237aa7ba9ecee7d47">m_pCFft</a> = <span class="keyword">new</span> <a class="code hl_class" href="a00474.xhtml">CFft</a>();</div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span>}</div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span> </div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno"><a class="line" href="a00546.xhtml#add051d7bf13a84ed1fa5e18627e5e2b9">   13</a></span><a class="code hl_function" href="a00546.xhtml#add051d7bf13a84ed1fa5e18627e5e2b9">CCcf::~CCcf</a>(<span class="keywordtype">void</span>)</div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span>{</div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span>    <a class="code hl_function" href="a00546.xhtml#a6edce7be75bf0b89dcc4a20e491ad8d8">reset</a>();</div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span> </div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span>    <span class="keyword">delete</span> <a class="code hl_variable" href="a00546.xhtml#a8474a655b6e148c237aa7ba9ecee7d47">m_pCFft</a>;</div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span>}</div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span> </div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno"><a class="line" href="a00546.xhtml#af683b1b5e37ca2039424af02f4bfb3c5">   20</a></span><a class="code hl_enumeration" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> <a class="code hl_function" href="a00546.xhtml#af683b1b5e37ca2039424af02f4bfb3c5">CCcf::init</a>(<span class="keywordtype">int</span> iBlockLength)</div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span>{</div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span>    <span class="keywordflow">if</span> (iBlockLength &lt;= 0)</div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248">Error_t::kFunctionInvalidArgsError</a>;</div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span> </div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span>    <span class="keywordflow">if</span> (<a class="code hl_variable" href="a00546.xhtml#a9dd23e9688d57262ae7b7b8d03a4c918">m_bIsInitialized</a>)</div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span>        <a class="code hl_function" href="a00546.xhtml#a6edce7be75bf0b89dcc4a20e491ad8d8">reset</a>();</div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span> </div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span>    <a class="code hl_variable" href="a00546.xhtml#aa3513c5e5bfa407a3d9f09f5775696a5">m_iBlockLength</a> = iBlockLength;</div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span>    <span class="keywordflow">if</span> (<a class="code hl_function" href="a00498.xhtml#a6d0e75b0bcbbb243b7141cfc0126e443">CUtil::isPowOf2</a>(<a class="code hl_variable" href="a00546.xhtml#aa3513c5e5bfa407a3d9f09f5775696a5">m_iBlockLength</a>))</div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span>        <a class="code hl_variable" href="a00546.xhtml#a3172706be7e3ec2182b40669ef468c00">m_iFftLength</a> = 2 * <a class="code hl_variable" href="a00546.xhtml#aa3513c5e5bfa407a3d9f09f5775696a5">m_iBlockLength</a>;</div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span>    <span class="keywordflow">else</span></div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span>        <a class="code hl_variable" href="a00546.xhtml#a3172706be7e3ec2182b40669ef468c00">m_iFftLength</a> = <a class="code hl_function" href="a00498.xhtml#a0fd55429d52515a9efb2fe602ce8f9ed">CUtil::nextPowOf2</a>(2*iBlockLength);</div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span> </div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span>    <a class="code hl_variable" href="a00546.xhtml#a8474a655b6e148c237aa7ba9ecee7d47">m_pCFft</a>-&gt;<a class="code hl_function" href="a00474.xhtml#adea9b0cecccfdb5a3da3218da6f683dd">init</a>(<a class="code hl_variable" href="a00546.xhtml#aa3513c5e5bfa407a3d9f09f5775696a5">m_iBlockLength</a>, 2, <a class="code hl_enumvalue" href="a00474.xhtml#a8eb1a5f3e9aaca08421479d2438dac84a197866057d0b408d209e05c687389a07">CFft::kWindowHann</a>, <a class="code hl_enumvalue" href="a00474.xhtml#a76d891ae674880a00dc09d0d86aff31ea5535e62c1ffea869f26081217ac36614">CFft::kNoWindow</a>);</div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span> </div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span>    <span class="keywordflow">for</span> (<span class="keyword">auto</span> j = 0; j &lt; 2; j++)</div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span>        <a class="code hl_function" href="a00502.xhtml#abaadac98b1cad18b7b568852bc951696">CVector::alloc</a>(<a class="code hl_variable" href="a00546.xhtml#aa8cad7d3e5fa2685d3504ab813cc2ce7">m_apfData</a>[j], <a class="code hl_variable" href="a00546.xhtml#a3172706be7e3ec2182b40669ef468c00">m_iFftLength</a>);</div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span> </div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span>    <a class="code hl_variable" href="a00546.xhtml#a9dd23e9688d57262ae7b7b8d03a4c918">m_bIsInitialized</a> = <span class="keyword">true</span>;</div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span> </div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span>    <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span>}</div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span> </div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno"><a class="line" href="a00546.xhtml#a6edce7be75bf0b89dcc4a20e491ad8d8">   44</a></span><a class="code hl_enumeration" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> <a class="code hl_function" href="a00546.xhtml#a6edce7be75bf0b89dcc4a20e491ad8d8">CCcf::reset</a>()</div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span>{</div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span>    <a class="code hl_variable" href="a00546.xhtml#a245d68ee43cdd28bab6701bf0d6b3974">m_bWasProcessed</a> = <span class="keyword">false</span>;</div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span>    <a class="code hl_variable" href="a00546.xhtml#a9dd23e9688d57262ae7b7b8d03a4c918">m_bIsInitialized</a> = <span class="keyword">false</span>;</div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span> </div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span>    <a class="code hl_variable" href="a00546.xhtml#a8474a655b6e148c237aa7ba9ecee7d47">m_pCFft</a>-&gt;<a class="code hl_function" href="a00474.xhtml#a0a0053b6ce93161553b573a16c77387a">reset</a>();</div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span> </div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span>    <span class="keywordflow">for</span> (<span class="keyword">auto</span> j = 0; j &lt; 2; j++)</div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span>    {</div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span>        <a class="code hl_function" href="a00502.xhtml#aa86bdb0c663d4d52f2765793756f8737">CVector::free</a>(<a class="code hl_variable" href="a00546.xhtml#aa8cad7d3e5fa2685d3504ab813cc2ce7">m_apfData</a>[j]);</div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span>    }</div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span>    </div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno">   56</span>    <a class="code hl_variable" href="a00546.xhtml#a3172706be7e3ec2182b40669ef468c00">m_iFftLength</a> = 0;</div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span>    <a class="code hl_variable" href="a00546.xhtml#aa3513c5e5bfa407a3d9f09f5775696a5">m_iBlockLength</a> = 0;</div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span> </div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span>    <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span>}</div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span> </div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno"><a class="line" href="a00546.xhtml#a4d7d19dd39b24147d9a1fab5d7e05257">   62</a></span><a class="code hl_enumeration" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> <a class="code hl_function" href="a00546.xhtml#a4d7d19dd39b24147d9a1fab5d7e05257">CCcf::compCcf</a>(<span class="keyword">const</span> <span class="keywordtype">float</span>* pfInput1, <span class="keyword">const</span> <span class="keywordtype">float</span>* pfInput2, <span class="keywordtype">bool</span> bNormalize)</div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span>{</div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno">   64</span>    <span class="keywordflow">if</span> (!pfInput1 || !pfInput2)</div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248">Error_t::kFunctionInvalidArgsError</a>;   </div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span> </div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno">   67</span>    <span class="keywordflow">if</span> (!<a class="code hl_variable" href="a00546.xhtml#a9dd23e9688d57262ae7b7b8d03a4c918">m_bIsInitialized</a>)</div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fad7652bf47cff43c21f12cb7df4ca66ec">Error_t::kFunctionIllegalCallError</a>;</div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span>    </div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno">   70</span>    <span class="comment">// extract standard deviation for normalization</span></div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span>    <span class="keywordtype">float</span> afStd[2] = { 1.F, 1.F };</div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span>    <span class="keywordflow">if</span> (bNormalize)</div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span>    {</div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span>        <span class="keywordtype">float</span> fPower = std::sqrt(<a class="code hl_function" href="a00502.xhtml#a269d316eeb6000aac4f57ade32c83127">CVector::mulScalar</a>(pfInput1, pfInput1, <a class="code hl_variable" href="a00546.xhtml#aa3513c5e5bfa407a3d9f09f5775696a5">m_iBlockLength</a>));</div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span>        afStd[0] = fPower &gt; 0 ? fPower : 1.F;</div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span>        fPower = std::sqrt(<a class="code hl_function" href="a00502.xhtml#a269d316eeb6000aac4f57ade32c83127">CVector::mulScalar</a>(pfInput2, pfInput2, <a class="code hl_variable" href="a00546.xhtml#aa3513c5e5bfa407a3d9f09f5775696a5">m_iBlockLength</a>));</div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span>        afStd[1] = fPower &gt; 0 ? fPower : 1.F;</div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span>    }</div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span> </div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span>    <span class="comment">// compute the FFTs</span></div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span>    <a class="code hl_variable" href="a00546.xhtml#a8474a655b6e148c237aa7ba9ecee7d47">m_pCFft</a>-&gt;<a class="code hl_function" href="a00474.xhtml#a3cae73896785c2f12ba979e15de48087">compFft</a>(<a class="code hl_variable" href="a00546.xhtml#aa8cad7d3e5fa2685d3504ab813cc2ce7">m_apfData</a>[0], pfInput1);</div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno">   82</span>    <a class="code hl_variable" href="a00546.xhtml#a8474a655b6e148c237aa7ba9ecee7d47">m_pCFft</a>-&gt;<a class="code hl_function" href="a00474.xhtml#a3cae73896785c2f12ba979e15de48087">compFft</a>(<a class="code hl_variable" href="a00546.xhtml#aa8cad7d3e5fa2685d3504ab813cc2ce7">m_apfData</a>[1], pfInput2);</div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span> </div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span>    <span class="comment">// conjugate complex multiply</span></div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span>    <a class="code hl_function" href="a00502.xhtml#a9811f50434dd058d201290b2dc98bfcd">CVector::mulC_I</a>(<a class="code hl_variable" href="a00546.xhtml#aa8cad7d3e5fa2685d3504ab813cc2ce7">m_apfData</a>[1], <span class="keyword">static_cast&lt;</span><span class="keywordtype">float</span><span class="keyword">&gt;</span>(<a class="code hl_variable" href="a00546.xhtml#a3172706be7e3ec2182b40669ef468c00">m_iFftLength</a>), <a class="code hl_variable" href="a00546.xhtml#a3172706be7e3ec2182b40669ef468c00">m_iFftLength</a>);</div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno">   86</span>    <a class="code hl_variable" href="a00546.xhtml#a8474a655b6e148c237aa7ba9ecee7d47">m_pCFft</a>-&gt;<a class="code hl_function" href="a00474.xhtml#ab6245bc0fdabc5e62ab910414eb4b923">conjugate_I</a>(<a class="code hl_variable" href="a00546.xhtml#aa8cad7d3e5fa2685d3504ab813cc2ce7">m_apfData</a>[1]);</div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span>    <a class="code hl_variable" href="a00546.xhtml#a8474a655b6e148c237aa7ba9ecee7d47">m_pCFft</a>-&gt;<a class="code hl_function" href="a00474.xhtml#a1d114960d5fc8ff4c328732adf638885">multiply_I</a>(<a class="code hl_variable" href="a00546.xhtml#aa8cad7d3e5fa2685d3504ab813cc2ce7">m_apfData</a>[0], <a class="code hl_variable" href="a00546.xhtml#aa8cad7d3e5fa2685d3504ab813cc2ce7">m_apfData</a>[1]);</div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span> </div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span>    <span class="comment">// normalization</span></div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span>    <a class="code hl_function" href="a00502.xhtml#a9811f50434dd058d201290b2dc98bfcd">CVector::mulC_I</a>(<a class="code hl_variable" href="a00546.xhtml#aa8cad7d3e5fa2685d3504ab813cc2ce7">m_apfData</a>[0], 1.F / (afStd[0] * afStd[1]), <a class="code hl_variable" href="a00546.xhtml#a3172706be7e3ec2182b40669ef468c00">m_iFftLength</a>);</div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span> </div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span>    <span class="comment">// inverse Fft</span></div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno">   93</span>    <a class="code hl_variable" href="a00546.xhtml#a8474a655b6e148c237aa7ba9ecee7d47">m_pCFft</a>-&gt;<a class="code hl_function" href="a00474.xhtml#a2d2fa880b32c7087973ed25628002129">compInvFft</a>(<a class="code hl_variable" href="a00546.xhtml#aa8cad7d3e5fa2685d3504ab813cc2ce7">m_apfData</a>[0], <a class="code hl_variable" href="a00546.xhtml#aa8cad7d3e5fa2685d3504ab813cc2ce7">m_apfData</a>[0]);</div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span> </div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span>    <span class="comment">// copy results</span></div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span>    <a class="code hl_function" href="a00502.xhtml#ad7c5cba73e439adac77778f61c9418f0">CVector::copy</a>(<a class="code hl_variable" href="a00546.xhtml#aa8cad7d3e5fa2685d3504ab813cc2ce7">m_apfData</a>[1], &amp;<a class="code hl_variable" href="a00546.xhtml#aa8cad7d3e5fa2685d3504ab813cc2ce7">m_apfData</a>[0][<span class="keyword">static_cast&lt;</span><span class="keywordtype">long</span> <span class="keywordtype">long</span><span class="keyword">&gt;</span>(<a class="code hl_variable" href="a00546.xhtml#a3172706be7e3ec2182b40669ef468c00">m_iFftLength</a>) - <a class="code hl_variable" href="a00546.xhtml#aa3513c5e5bfa407a3d9f09f5775696a5">m_iBlockLength</a> + 1], <span class="keyword">static_cast&lt;</span><span class="keywordtype">long</span> <span class="keywordtype">long</span><span class="keyword">&gt;</span>(<a class="code hl_variable" href="a00546.xhtml#aa3513c5e5bfa407a3d9f09f5775696a5">m_iBlockLength</a>) - 1);</div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno">   97</span>    <a class="code hl_function" href="a00502.xhtml#ad7c5cba73e439adac77778f61c9418f0">CVector::copy</a>(&amp;<a class="code hl_variable" href="a00546.xhtml#aa8cad7d3e5fa2685d3504ab813cc2ce7">m_apfData</a>[1][<a class="code hl_variable" href="a00546.xhtml#aa3513c5e5bfa407a3d9f09f5775696a5">m_iBlockLength</a> - 1], <a class="code hl_variable" href="a00546.xhtml#aa8cad7d3e5fa2685d3504ab813cc2ce7">m_apfData</a>[0], <a class="code hl_variable" href="a00546.xhtml#aa3513c5e5bfa407a3d9f09f5775696a5">m_iBlockLength</a>);</div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno">   98</span> </div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno">   99</span>    <a class="code hl_variable" href="a00546.xhtml#a245d68ee43cdd28bab6701bf0d6b3974">m_bWasProcessed</a> = <span class="keyword">true</span>;</div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span>    <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno">  101</span>}</div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno">  102</span> </div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno"><a class="line" href="a00546.xhtml#afe56cc1681b982d7d31b0830b3471b61">  103</a></span><span class="keywordtype">int</span> <a class="code hl_function" href="a00546.xhtml#afe56cc1681b982d7d31b0830b3471b61">CCcf::getCcfLength</a>(<span class="keywordtype">bool</span> bIsAcf)</div>
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno">  104</span>{</div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno">  105</span>    <span class="keywordflow">if</span> (!<a class="code hl_variable" href="a00546.xhtml#a9dd23e9688d57262ae7b7b8d03a4c918">m_bIsInitialized</a>)</div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno">  106</span>        <span class="keywordflow">return</span> -1;</div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span> </div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno">  108</span>    <span class="keywordflow">return</span> bIsAcf ? <a class="code hl_variable" href="a00546.xhtml#aa3513c5e5bfa407a3d9f09f5775696a5">m_iBlockLength</a> : 2 * <a class="code hl_variable" href="a00546.xhtml#aa3513c5e5bfa407a3d9f09f5775696a5">m_iBlockLength</a> - 1;</div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span>}</div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span> </div>
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno"><a class="line" href="a00546.xhtml#a02c0e23cbcecab5af2fb20a25160321a">  111</a></span><a class="code hl_enumeration" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> <a class="code hl_function" href="a00546.xhtml#a02c0e23cbcecab5af2fb20a25160321a">CCcf::getCcf</a>(<span class="keywordtype">float</span>* pfCcfResult, <span class="keywordtype">bool</span> bIsAcf)<span class="keyword"> const</span></div>
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno">  112</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno">  113</span>    <span class="keywordflow">if</span> (!(<a class="code hl_variable" href="a00546.xhtml#a9dd23e9688d57262ae7b7b8d03a4c918">m_bIsInitialized</a> &amp;&amp; <a class="code hl_variable" href="a00546.xhtml#a245d68ee43cdd28bab6701bf0d6b3974">m_bWasProcessed</a>))</div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fad7652bf47cff43c21f12cb7df4ca66ec">Error_t::kFunctionIllegalCallError</a>;</div>
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno">  115</span>    <span class="keywordflow">if</span> (!pfCcfResult)</div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248">Error_t::kFunctionInvalidArgsError</a>;</div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno">  117</span> </div>
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno">  118</span>    <span class="keywordtype">int</span> iStartIdx = bIsAcf ? <a class="code hl_variable" href="a00546.xhtml#aa3513c5e5bfa407a3d9f09f5775696a5">m_iBlockLength</a> - 1 : 0;</div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno">  119</span>    <a class="code hl_function" href="a00502.xhtml#ad7c5cba73e439adac77778f61c9418f0">CVector::copy</a>(pfCcfResult, &amp;<a class="code hl_variable" href="a00546.xhtml#aa8cad7d3e5fa2685d3504ab813cc2ce7">m_apfData</a>[1][iStartIdx], <span class="keyword">static_cast&lt;</span><span class="keywordtype">long</span> <span class="keywordtype">long</span><span class="keyword">&gt;</span>(2) * <a class="code hl_variable" href="a00546.xhtml#aa3513c5e5bfa407a3d9f09f5775696a5">m_iBlockLength</a> - 1 - iStartIdx);</div>
<div class="line"><a id="l00120" name="l00120"></a><span class="lineno">  120</span> </div>
<div class="line"><a id="l00121" name="l00121"></a><span class="lineno">  121</span>    <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno">  122</span>}</div>
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno">  123</span> </div>
<div class="line"><a id="l00124" name="l00124"></a><span class="lineno"><a class="line" href="a00546.xhtml#afa3cb0579386bd1108d010962e801d31">  124</a></span><span class="keywordtype">float</span> <a class="code hl_function" href="a00546.xhtml#afa3cb0579386bd1108d010962e801d31">CCcf::getCcfMax</a>(<span class="keywordtype">bool</span> bIsAcf)<span class="keyword"> const</span></div>
<div class="line"><a id="l00125" name="l00125"></a><span class="lineno">  125</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno">  126</span>    <span class="keywordflow">if</span> (!(<a class="code hl_variable" href="a00546.xhtml#a9dd23e9688d57262ae7b7b8d03a4c918">m_bIsInitialized</a> &amp;&amp; <a class="code hl_variable" href="a00546.xhtml#a245d68ee43cdd28bab6701bf0d6b3974">m_bWasProcessed</a>))</div>
<div class="line"><a id="l00127" name="l00127"></a><span class="lineno">  127</span>        <span class="keywordflow">return</span> -1.F;</div>
<div class="line"><a id="l00128" name="l00128"></a><span class="lineno">  128</span> </div>
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno">  129</span>    <span class="keywordtype">int</span> iStartIdx = bIsAcf ? <a class="code hl_variable" href="a00546.xhtml#aa3513c5e5bfa407a3d9f09f5775696a5">m_iBlockLength</a> - 1 : 0;</div>
<div class="line"><a id="l00130" name="l00130"></a><span class="lineno">  130</span>    <span class="keywordflow">return</span> <a class="code hl_function" href="a00502.xhtml#a9f5be871090bc5a64a7732cebfb4f8ec">CVector::getMax</a>(&amp;<a class="code hl_variable" href="a00546.xhtml#aa8cad7d3e5fa2685d3504ab813cc2ce7">m_apfData</a>[1][iStartIdx], <span class="keyword">static_cast&lt;</span><span class="keywordtype">long</span> <span class="keywordtype">long</span><span class="keyword">&gt;</span>(2) * <a class="code hl_variable" href="a00546.xhtml#aa3513c5e5bfa407a3d9f09f5775696a5">m_iBlockLength</a> - 1 - iStartIdx);</div>
<div class="line"><a id="l00131" name="l00131"></a><span class="lineno">  131</span>}</div>
<div class="line"><a id="l00132" name="l00132"></a><span class="lineno">  132</span> </div>
<div class="line"><a id="l00133" name="l00133"></a><span class="lineno"><a class="line" href="a00546.xhtml#a166090237df809ea2fa9e0cb73bca3c0">  133</a></span><span class="keywordtype">int</span> <a class="code hl_function" href="a00546.xhtml#a166090237df809ea2fa9e0cb73bca3c0">CCcf::getCcfMaxIdx</a>(<span class="keywordtype">bool</span> bIsAcf)<span class="keyword"> const</span></div>
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno">  134</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00135" name="l00135"></a><span class="lineno">  135</span>    <span class="keywordflow">if</span> (!(<a class="code hl_variable" href="a00546.xhtml#a9dd23e9688d57262ae7b7b8d03a4c918">m_bIsInitialized</a> &amp;&amp; <a class="code hl_variable" href="a00546.xhtml#a245d68ee43cdd28bab6701bf0d6b3974">m_bWasProcessed</a>))</div>
<div class="line"><a id="l00136" name="l00136"></a><span class="lineno">  136</span>        <span class="keywordflow">return</span> -1;</div>
<div class="line"><a id="l00137" name="l00137"></a><span class="lineno">  137</span>    <span class="keywordtype">float</span> fMax = -1.F;</div>
<div class="line"><a id="l00138" name="l00138"></a><span class="lineno">  138</span>    <span class="keywordtype">long</span> <span class="keywordtype">long</span> iMax = -1;</div>
<div class="line"><a id="l00139" name="l00139"></a><span class="lineno">  139</span>    <span class="keywordtype">int</span> iStartIdx = bIsAcf ? <a class="code hl_variable" href="a00546.xhtml#aa3513c5e5bfa407a3d9f09f5775696a5">m_iBlockLength</a> - 1 : 0;</div>
<div class="line"><a id="l00140" name="l00140"></a><span class="lineno">  140</span>    </div>
<div class="line"><a id="l00141" name="l00141"></a><span class="lineno">  141</span>    <a class="code hl_function" href="a00502.xhtml#a34a5c0abd80cd982df8a8bae7cbcea19">CVector::findMax</a>(&amp;<a class="code hl_variable" href="a00546.xhtml#aa8cad7d3e5fa2685d3504ab813cc2ce7">m_apfData</a>[1][iStartIdx], fMax, iMax, <span class="keyword">static_cast&lt;</span><span class="keywordtype">long</span> <span class="keywordtype">long</span><span class="keyword">&gt;</span>(2) * <a class="code hl_variable" href="a00546.xhtml#aa3513c5e5bfa407a3d9f09f5775696a5">m_iBlockLength</a> - 1 - iStartIdx);</div>
<div class="line"><a id="l00142" name="l00142"></a><span class="lineno">  142</span> </div>
<div class="line"><a id="l00143" name="l00143"></a><span class="lineno">  143</span>    <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span><span class="keywordtype">int</span><span class="keyword">&gt;</span>(iMax);</div>
<div class="line"><a id="l00144" name="l00144"></a><span class="lineno">  144</span>}</div>
<div class="ttc" id="aa00149_xhtml"><div class="ttname"><a href="a00149.xhtml">Util.h</a></div></div>
<div class="ttc" id="aa00155_xhtml"><div class="ttname"><a href="a00155.xhtml">Vector.h</a></div></div>
<div class="ttc" id="aa00158_xhtml"><div class="ttname"><a href="a00158.xhtml">Fft.h</a></div></div>
<div class="ttc" id="aa00200_xhtml"><div class="ttname"><a href="a00200.xhtml">ToolCcf.h</a></div></div>
<div class="ttc" id="aa00224_xhtml_a4e8c0d09726859e3d3369c0da5a1aa7f"><div class="ttname"><a href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a></div><div class="ttdeci">Error_t</div><div class="ttdef"><b>Definition:</b> <a href="a00224_source.xhtml#l00004">ErrorDef.h:5</a></div></div>
<div class="ttc" id="aa00224_xhtml_a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248"><div class="ttname"><a href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248">Error_t::kFunctionInvalidArgsError</a></div><div class="ttdeci">@ kFunctionInvalidArgsError</div></div>
<div class="ttc" id="aa00224_xhtml_a4e8c0d09726859e3d3369c0da5a1aa7fad7652bf47cff43c21f12cb7df4ca66ec"><div class="ttname"><a href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fad7652bf47cff43c21f12cb7df4ca66ec">Error_t::kFunctionIllegalCallError</a></div><div class="ttdeci">@ kFunctionIllegalCallError</div></div>
<div class="ttc" id="aa00224_xhtml_a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b"><div class="ttname"><a href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a></div><div class="ttdeci">@ kNoError</div></div>
<div class="ttc" id="aa00474_xhtml"><div class="ttname"><a href="a00474.xhtml">CFft</a></div><div class="ttdoc">class for FFT computation with windowing</div><div class="ttdef"><b>Definition:</b> <a href="a00158_source.xhtml#l00008">Fft.h:9</a></div></div>
<div class="ttc" id="aa00474_xhtml_a0a0053b6ce93161553b573a16c77387a"><div class="ttname"><a href="a00474.xhtml#a0a0053b6ce93161553b573a16c77387a">CFft::reset</a></div><div class="ttdeci">Error_t reset()</div><div class="ttdef"><b>Definition:</b> <a href="a00059_source.xhtml#l00053">Fft.cpp:53</a></div></div>
<div class="ttc" id="aa00474_xhtml_a1d114960d5fc8ff4c328732adf638885"><div class="ttname"><a href="a00474.xhtml#a1d114960d5fc8ff4c328732adf638885">CFft::multiply_I</a></div><div class="ttdeci">void multiply_I(complex_t *pfFftSrc1Dest, const complex_t *pfFftSrc2) const</div><div class="ttdef"><b>Definition:</b> <a href="a00059_source.xhtml#l00232">Fft.cpp:232</a></div></div>
<div class="ttc" id="aa00474_xhtml_a2d2fa880b32c7087973ed25628002129"><div class="ttname"><a href="a00474.xhtml#a2d2fa880b32c7087973ed25628002129">CFft::compInvFft</a></div><div class="ttdeci">Error_t compInvFft(float *pfOutput, const complex_t *pfSpectrum)</div><div class="ttdef"><b>Definition:</b> <a href="a00059_source.xhtml#l00115">Fft.cpp:115</a></div></div>
<div class="ttc" id="aa00474_xhtml_a3cae73896785c2f12ba979e15de48087"><div class="ttname"><a href="a00474.xhtml#a3cae73896785c2f12ba979e15de48087">CFft::compFft</a></div><div class="ttdeci">Error_t compFft(complex_t *pfSpectrum, const float *pfInput)</div><div class="ttdef"><b>Definition:</b> <a href="a00059_source.xhtml#l00091">Fft.cpp:91</a></div></div>
<div class="ttc" id="aa00474_xhtml_a76d891ae674880a00dc09d0d86aff31ea5535e62c1ffea869f26081217ac36614"><div class="ttname"><a href="a00474.xhtml#a76d891ae674880a00dc09d0d86aff31ea5535e62c1ffea869f26081217ac36614">CFft::kNoWindow</a></div><div class="ttdeci">@ kNoWindow</div><div class="ttdoc">do not apply any window</div><div class="ttdef"><b>Definition:</b> <a href="a00158_source.xhtml#l00025">Fft.h:25</a></div></div>
<div class="ttc" id="aa00474_xhtml_a8eb1a5f3e9aaca08421479d2438dac84a197866057d0b408d209e05c687389a07"><div class="ttname"><a href="a00474.xhtml#a8eb1a5f3e9aaca08421479d2438dac84a197866057d0b408d209e05c687389a07">CFft::kWindowHann</a></div><div class="ttdeci">@ kWindowHann</div><div class="ttdoc">von-Hann window</div><div class="ttdef"><b>Definition:</b> <a href="a00158_source.xhtml#l00018">Fft.h:18</a></div></div>
<div class="ttc" id="aa00474_xhtml_ab6245bc0fdabc5e62ab910414eb4b923"><div class="ttname"><a href="a00474.xhtml#ab6245bc0fdabc5e62ab910414eb4b923">CFft::conjugate_I</a></div><div class="ttdeci">void conjugate_I(complex_t *pfFftResult) const</div><div class="ttdef"><b>Definition:</b> <a href="a00059_source.xhtml#l00226">Fft.cpp:226</a></div></div>
<div class="ttc" id="aa00474_xhtml_adea9b0cecccfdb5a3da3218da6f683dd"><div class="ttname"><a href="a00474.xhtml#adea9b0cecccfdb5a3da3218da6f683dd">CFft::init</a></div><div class="ttdeci">Error_t init(int iBlockLength, int iZeroPadFactor=1, WindowFunction_t eWindow=kWindowHann, Windowing_t eWindowing=kPreWindow)</div><div class="ttdef"><b>Definition:</b> <a href="a00059_source.xhtml#l00024">Fft.cpp:24</a></div></div>
<div class="ttc" id="aa00498_xhtml_a0fd55429d52515a9efb2fe602ce8f9ed"><div class="ttname"><a href="a00498.xhtml#a0fd55429d52515a9efb2fe602ce8f9ed">CUtil::nextPowOf2</a></div><div class="ttdeci">static int nextPowOf2(int n)</div><div class="ttdef"><b>Definition:</b> <a href="a00149_source.xhtml#l00051">Util.h:51</a></div></div>
<div class="ttc" id="aa00498_xhtml_a6d0e75b0bcbbb243b7141cfc0126e443"><div class="ttname"><a href="a00498.xhtml#a6d0e75b0bcbbb243b7141cfc0126e443">CUtil::isPowOf2</a></div><div class="ttdeci">static bool isPowOf2(int n)</div><div class="ttdef"><b>Definition:</b> <a href="a00149_source.xhtml#l00042">Util.h:42</a></div></div>
<div class="ttc" id="aa00502_xhtml_a269d316eeb6000aac4f57ade32c83127"><div class="ttname"><a href="a00502.xhtml#a269d316eeb6000aac4f57ade32c83127">CVector::mulScalar</a></div><div class="ttdeci">static T mulScalar(const T *ptSrc1, const T *ptSrc2, long long int iLength)</div><div class="ttdef"><b>Definition:</b> <a href="a00155_source.xhtml#l00194">Vector.h:194</a></div></div>
<div class="ttc" id="aa00502_xhtml_a34a5c0abd80cd982df8a8bae7cbcea19"><div class="ttname"><a href="a00502.xhtml#a34a5c0abd80cd982df8a8bae7cbcea19">CVector::findMax</a></div><div class="ttdeci">static void findMax(const T *ptSrc, T &amp;fMax, long long &amp;iMax, long long int iLength, bool bAbs=false)</div><div class="ttdef"><b>Definition:</b> <a href="a00155_source.xhtml#l00625">Vector.h:625</a></div></div>
<div class="ttc" id="aa00502_xhtml_a9811f50434dd058d201290b2dc98bfcd"><div class="ttname"><a href="a00502.xhtml#a9811f50434dd058d201290b2dc98bfcd">CVector::mulC_I</a></div><div class="ttdeci">static void mulC_I(T *ptSrcDest, T fScale, long long int iLength)</div><div class="ttdef"><b>Definition:</b> <a href="a00155_source.xhtml#l00162">Vector.h:162</a></div></div>
<div class="ttc" id="aa00502_xhtml_a9f5be871090bc5a64a7732cebfb4f8ec"><div class="ttname"><a href="a00502.xhtml#a9f5be871090bc5a64a7732cebfb4f8ec">CVector::getMax</a></div><div class="ttdeci">static T getMax(const T *ptSrc, long long int iLength, bool bAbs=false)</div><div class="ttdef"><b>Definition:</b> <a href="a00155_source.xhtml#l00554">Vector.h:554</a></div></div>
<div class="ttc" id="aa00502_xhtml_aa86bdb0c663d4d52f2765793756f8737"><div class="ttname"><a href="a00502.xhtml#aa86bdb0c663d4d52f2765793756f8737">CVector::free</a></div><div class="ttdeci">static void free(T *&amp;ptVec)</div><div class="ttdef"><b>Definition:</b> <a href="a00155_source.xhtml#l00037">Vector.h:37</a></div></div>
<div class="ttc" id="aa00502_xhtml_abaadac98b1cad18b7b568852bc951696"><div class="ttname"><a href="a00502.xhtml#abaadac98b1cad18b7b568852bc951696">CVector::alloc</a></div><div class="ttdeci">static void alloc(T *&amp;ptVec, long long iLength)</div><div class="ttdef"><b>Definition:</b> <a href="a00155_source.xhtml#l00023">Vector.h:23</a></div></div>
<div class="ttc" id="aa00502_xhtml_ad7c5cba73e439adac77778f61c9418f0"><div class="ttname"><a href="a00502.xhtml#ad7c5cba73e439adac77778f61c9418f0">CVector::copy</a></div><div class="ttdeci">static void copy(T *ptDest, const T *ptSrc, long long int iLength)</div><div class="ttdef"><b>Definition:</b> <a href="a00155_source.xhtml#l00106">Vector.h:106</a></div></div>
<div class="ttc" id="aa00546_xhtml_a02c0e23cbcecab5af2fb20a25160321a"><div class="ttname"><a href="a00546.xhtml#a02c0e23cbcecab5af2fb20a25160321a">CCcf::getCcf</a></div><div class="ttdeci">Error_t getCcf(float *pfCcfResult, bool bisAcf=false) const</div><div class="ttdef"><b>Definition:</b> <a href="a00086_source.xhtml#l00111">ToolCcf.cpp:111</a></div></div>
<div class="ttc" id="aa00546_xhtml_a166090237df809ea2fa9e0cb73bca3c0"><div class="ttname"><a href="a00546.xhtml#a166090237df809ea2fa9e0cb73bca3c0">CCcf::getCcfMaxIdx</a></div><div class="ttdeci">int getCcfMaxIdx(bool bisAcf=false) const</div><div class="ttdef"><b>Definition:</b> <a href="a00086_source.xhtml#l00133">ToolCcf.cpp:133</a></div></div>
<div class="ttc" id="aa00546_xhtml_a245d68ee43cdd28bab6701bf0d6b3974"><div class="ttname"><a href="a00546.xhtml#a245d68ee43cdd28bab6701bf0d6b3974">CCcf::m_bWasProcessed</a></div><div class="ttdeci">bool m_bWasProcessed</div><div class="ttdoc">true if process has been called</div><div class="ttdef"><b>Definition:</b> <a href="a00200_source.xhtml#l00068">ToolCcf.h:68</a></div></div>
<div class="ttc" id="aa00546_xhtml_a3172706be7e3ec2182b40669ef468c00"><div class="ttname"><a href="a00546.xhtml#a3172706be7e3ec2182b40669ef468c00">CCcf::m_iFftLength</a></div><div class="ttdeci">int m_iFftLength</div><div class="ttdoc">length of FFT</div><div class="ttdef"><b>Definition:</b> <a href="a00200_source.xhtml#l00074">ToolCcf.h:74</a></div></div>
<div class="ttc" id="aa00546_xhtml_a4d7d19dd39b24147d9a1fab5d7e05257"><div class="ttname"><a href="a00546.xhtml#a4d7d19dd39b24147d9a1fab5d7e05257">CCcf::compCcf</a></div><div class="ttdeci">Error_t compCcf(const float *pfInput1, const float *pfInput2, bool bNormalize=true)</div><div class="ttdef"><b>Definition:</b> <a href="a00086_source.xhtml#l00062">ToolCcf.cpp:62</a></div></div>
<div class="ttc" id="aa00546_xhtml_a6edce7be75bf0b89dcc4a20e491ad8d8"><div class="ttname"><a href="a00546.xhtml#a6edce7be75bf0b89dcc4a20e491ad8d8">CCcf::reset</a></div><div class="ttdeci">Error_t reset()</div><div class="ttdef"><b>Definition:</b> <a href="a00086_source.xhtml#l00044">ToolCcf.cpp:44</a></div></div>
<div class="ttc" id="aa00546_xhtml_a8474a655b6e148c237aa7ba9ecee7d47"><div class="ttname"><a href="a00546.xhtml#a8474a655b6e148c237aa7ba9ecee7d47">CCcf::m_pCFft</a></div><div class="ttdeci">CFft * m_pCFft</div><div class="ttdoc">FFT instance.</div><div class="ttdef"><b>Definition:</b> <a href="a00200_source.xhtml#l00071">ToolCcf.h:71</a></div></div>
<div class="ttc" id="aa00546_xhtml_a9dd23e9688d57262ae7b7b8d03a4c918"><div class="ttname"><a href="a00546.xhtml#a9dd23e9688d57262ae7b7b8d03a4c918">CCcf::m_bIsInitialized</a></div><div class="ttdeci">bool m_bIsInitialized</div><div class="ttdoc">true if init has been called</div><div class="ttdef"><b>Definition:</b> <a href="a00200_source.xhtml#l00067">ToolCcf.h:67</a></div></div>
<div class="ttc" id="aa00546_xhtml_aa3513c5e5bfa407a3d9f09f5775696a5"><div class="ttname"><a href="a00546.xhtml#aa3513c5e5bfa407a3d9f09f5775696a5">CCcf::m_iBlockLength</a></div><div class="ttdeci">int m_iBlockLength</div><div class="ttdoc">length of input</div><div class="ttdef"><b>Definition:</b> <a href="a00200_source.xhtml#l00073">ToolCcf.h:73</a></div></div>
<div class="ttc" id="aa00546_xhtml_aa8cad7d3e5fa2685d3504ab813cc2ce7"><div class="ttname"><a href="a00546.xhtml#aa8cad7d3e5fa2685d3504ab813cc2ce7">CCcf::m_apfData</a></div><div class="ttdeci">float * m_apfData[2]</div><div class="ttdoc">CCF result.</div><div class="ttdef"><b>Definition:</b> <a href="a00200_source.xhtml#l00070">ToolCcf.h:70</a></div></div>
<div class="ttc" id="aa00546_xhtml_ac12b4a9809a1dba42dea5ceefb45da36"><div class="ttname"><a href="a00546.xhtml#ac12b4a9809a1dba42dea5ceefb45da36">CCcf::CCcf</a></div><div class="ttdeci">CCcf(void)</div><div class="ttdef"><b>Definition:</b> <a href="a00086_source.xhtml#l00008">ToolCcf.cpp:8</a></div></div>
<div class="ttc" id="aa00546_xhtml_add051d7bf13a84ed1fa5e18627e5e2b9"><div class="ttname"><a href="a00546.xhtml#add051d7bf13a84ed1fa5e18627e5e2b9">CCcf::~CCcf</a></div><div class="ttdeci">virtual ~CCcf(void)</div><div class="ttdef"><b>Definition:</b> <a href="a00086_source.xhtml#l00013">ToolCcf.cpp:13</a></div></div>
<div class="ttc" id="aa00546_xhtml_af683b1b5e37ca2039424af02f4bfb3c5"><div class="ttname"><a href="a00546.xhtml#af683b1b5e37ca2039424af02f4bfb3c5">CCcf::init</a></div><div class="ttdeci">Error_t init(int iBlockLength)</div><div class="ttdef"><b>Definition:</b> <a href="a00086_source.xhtml#l00020">ToolCcf.cpp:20</a></div></div>
<div class="ttc" id="aa00546_xhtml_afa3cb0579386bd1108d010962e801d31"><div class="ttname"><a href="a00546.xhtml#afa3cb0579386bd1108d010962e801d31">CCcf::getCcfMax</a></div><div class="ttdeci">float getCcfMax(bool bisAcf=false) const</div><div class="ttdef"><b>Definition:</b> <a href="a00086_source.xhtml#l00124">ToolCcf.cpp:124</a></div></div>
<div class="ttc" id="aa00546_xhtml_afe56cc1681b982d7d31b0830b3471b61"><div class="ttname"><a href="a00546.xhtml#afe56cc1681b982d7d31b0830b3471b61">CCcf::getCcfLength</a></div><div class="ttdeci">int getCcfLength(bool bisAcf=false)</div><div class="ttdef"><b>Definition:</b> <a href="a00086_source.xhtml#l00103">ToolCcf.cpp:103</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_bc10c4dd205ae2a1e415269a4536b5cd.xhtml">ACA</a></li><li class="navelem"><a class="el" href="a00086.xhtml">ToolCcf.cpp</a></li>
    <li class="footer">Generated on Thu Jun 16 2022 21:11:11 for ACA by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.4 </li>
  </ul>
</div>
</body>
</html>
