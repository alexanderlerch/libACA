<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.4"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ACA: ToolLowPass.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">ACA<span id="projectnumber">&#160;0.3.1</span>
   </div>
   <div id="projectbrief">Example Code for Audio Content Analysis</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.4 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search",'Search','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('a00134_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle"><div class="title">ToolLowPass.h</div></div>
</div><!--header-->
<div class="contents">
<a href="a00134.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="preprocessor">#if !defined(__ACA_LowPass_HEADER_INCLUDED__)</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span><span class="preprocessor">#define __ACA_LowPass_HEADER_INCLUDED__</span></div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span> </div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span><span class="preprocessor">#include &lt;cmath&gt;</span></div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span> </div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span><span class="preprocessor">#include &quot;<a class="code" href="a00146.xhtml">RingBuffer.h</a>&quot;</span></div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span><span class="preprocessor">#include &quot;<a class="code" href="a00224.xhtml">ErrorDef.h</a>&quot;</span></div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span> </div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span><span class="comment"></span> </div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span><span class="comment">/*! \brief class for single-pole low pass filtering</span></div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span><span class="comment">*/</span></div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno"><a class="line" href="a00582.xhtml">   12</a></span><span class="keyword">class </span><a class="code hl_class" href="a00582.xhtml">CSinglePoleLp</a></div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span>{</div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span><span class="comment"></span> </div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span><span class="comment">    /*! initializes a SinglePoleLp instance with file reading</span></div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span><span class="comment">    \param pCInstance pointer to instance to be written</span></div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span><span class="comment">    \return Error_t</span></div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span><span class="comment">    */</span></div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno"><a class="line" href="a00582.xhtml#a36c98d6494cc1ac1e7bf35bec6891b3c">   20</a></span>    <span class="keyword">static</span> <a class="code hl_enumeration" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> <a class="code hl_function" href="a00582.xhtml#a36c98d6494cc1ac1e7bf35bec6891b3c">create</a>(<a class="code hl_class" href="a00582.xhtml">CSinglePoleLp</a> *&amp;pCInstance)</div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span>    {</div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span>        pCInstance = <span class="keyword">new</span> <a class="code hl_function" href="a00582.xhtml#ad3db5d691d9dcf0a329e1381349839ee">CSinglePoleLp</a>();</div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span> </div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span>    }</div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span><span class="comment"></span> </div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span><span class="comment">    /*! destroys a SinglePoleLp instance</span></div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span><span class="comment">    \param pCInstance pointer to instance to be destroyed</span></div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span><span class="comment">    \return Error_t</span></div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span><span class="comment">    */</span></div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno"><a class="line" href="a00582.xhtml#ac0aa215647a41e3a3de44ad6474c6be3">   31</a></span>    <span class="keyword">static</span> <a class="code hl_enumeration" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> <a class="code hl_function" href="a00582.xhtml#ac0aa215647a41e3a3de44ad6474c6be3">destroy</a>(<a class="code hl_class" href="a00582.xhtml">CSinglePoleLp</a> *&amp;pCInstance)</div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span>    {</div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span>        <span class="keyword">delete</span> pCInstance;</div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span>        pCInstance = 0;</div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span> </div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span>    }</div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span><span class="comment"></span> </div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span><span class="comment">    /*! set the filter parameter</span></div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span><span class="comment">    \param fAlpha filter coeff (0 &lt;= fAlpha &lt; 1, the higher the more lowpass)</span></div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span><span class="comment">    \return Error_t</span></div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span><span class="comment">    */</span></div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno"><a class="line" href="a00582.xhtml#a7a1a5cc34017c66373ef80bf4da531d3">   43</a></span>    <a class="code hl_enumeration" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> <a class="code hl_function" href="a00582.xhtml#a7a1a5cc34017c66373ef80bf4da531d3">setFilterParam</a>(<span class="keywordtype">float</span> fAlpha = .9F)</div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span>    {</div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span>        <span class="keywordflow">if</span> (fAlpha &lt; 0 || fAlpha &gt;= 1)</div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span>            <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248">Error_t::kFunctionInvalidArgsError</a>;</div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span> </div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span>        <a class="code hl_variable" href="a00582.xhtml#ab3678d2f56e3c8d81f736469131cc844">m_fAlpha</a> = fAlpha;</div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span> </div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span>    }</div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span><span class="comment"></span> </div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span><span class="comment">    /*! returns the filter parameter alpha</span></div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span><span class="comment">    \return float</span></div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span><span class="comment">    */</span></div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno"><a class="line" href="a00582.xhtml#a83aa1cd604c8bc82c983c6681102757c">   56</a></span>    <span class="keywordtype">float</span> <a class="code hl_function" href="a00582.xhtml#a83aa1cd604c8bc82c983c6681102757c">getFilterParam</a>()<span class="keyword"> const</span></div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span><span class="keyword">    </span>{</div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span>        <span class="keywordflow">return</span> <a class="code hl_variable" href="a00582.xhtml#ab3678d2f56e3c8d81f736469131cc844">m_fAlpha</a>;</div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span>    }</div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span><span class="comment"></span> </div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span><span class="comment">    /*! performs the SinglePoleLp computation</span></div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span><span class="comment">    \param pfOut filter result (user-allocated, to be written, length iNumSamples)</span></div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span><span class="comment">    \param pfIn input data of length iNumSamples</span></div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno">   64</span><span class="comment">    \param iNumSamples length of buffers</span></div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span><span class="comment">    return Error_t</span></div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span><span class="comment">    */</span></div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno"><a class="line" href="a00582.xhtml#ae4663d986c26b1558fcc94de89f42872">   67</a></span>    <a class="code hl_enumeration" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> <a class="code hl_function" href="a00582.xhtml#ae4663d986c26b1558fcc94de89f42872">process</a>(<span class="keywordtype">float</span> *pfOut, <span class="keyword">const</span> <span class="keywordtype">float</span> *pfIn, <span class="keywordtype">long</span> <span class="keywordtype">long</span> iNumSamples)</div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span>    {</div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span>        <span class="keywordflow">if</span> (!pfOut || !pfIn || iNumSamples &lt;= 0)</div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno">   70</span>            <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248">Error_t::kFunctionInvalidArgsError</a>;</div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span> </div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span>        pfOut[0] = (1.F - <a class="code hl_variable" href="a00582.xhtml#ab3678d2f56e3c8d81f736469131cc844">m_fAlpha</a>) * pfIn[0] + <a class="code hl_variable" href="a00582.xhtml#ab3678d2f56e3c8d81f736469131cc844">m_fAlpha</a> * <a class="code hl_variable" href="a00582.xhtml#aad5f42d8c830ca7af71067b2b674d486">m_fPrevOut</a>;</div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span> </div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span>        <span class="keywordflow">for</span> (<span class="keyword">auto</span> i = 1; i &lt; iNumSamples; i++)</div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span>            pfOut[i] = (1 - <a class="code hl_variable" href="a00582.xhtml#ab3678d2f56e3c8d81f736469131cc844">m_fAlpha</a>) * pfIn[0] + <a class="code hl_variable" href="a00582.xhtml#ab3678d2f56e3c8d81f736469131cc844">m_fAlpha</a> * pfOut[i - 1];</div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span> </div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span>        <a class="code hl_variable" href="a00582.xhtml#aad5f42d8c830ca7af71067b2b674d486">m_fPrevOut</a> = pfOut[iNumSamples - 1];</div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span> </div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span>    }</div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span><span class="comment"></span> </div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno">   82</span><span class="comment">    /*! clears internal buffers and sets parameters to default</span></div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span><span class="comment">    \return Error_t</span></div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span><span class="comment">    */</span></div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno"><a class="line" href="a00582.xhtml#a02c1876180d4310e4dc136c7e733af00">   85</a></span>    <a class="code hl_enumeration" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> <a class="code hl_function" href="a00582.xhtml#a02c1876180d4310e4dc136c7e733af00">reset</a>()</div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno">   86</span>    {</div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span>        <a class="code hl_variable" href="a00582.xhtml#ab3678d2f56e3c8d81f736469131cc844">m_fAlpha</a> = .9F;</div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span>        <a class="code hl_variable" href="a00582.xhtml#aad5f42d8c830ca7af71067b2b674d486">m_fPrevOut</a> = 0.F;</div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span> </div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span>    }</div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span><span class="comment"></span> </div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno">   93</span><span class="comment">    /*! compute the filter coeff from an &quot;integration time&quot;</span></div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span><span class="comment">    \param fIntegrationTimeInS integration time in seconds (the higher, the more low pass)</span></div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span><span class="comment">    \param fSampleRate sample rate in Hz</span></div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span><span class="comment">    return float alpha</span></div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno">   97</span><span class="comment">    */</span></div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno"><a class="line" href="a00582.xhtml#afedab0de8491f604e797ada1fb0e5899">   98</a></span>    <span class="keyword">static</span> <span class="keywordtype">float</span> <a class="code hl_function" href="a00582.xhtml#afedab0de8491f604e797ada1fb0e5899">calcFilterParam</a>(<span class="keywordtype">float</span> fIntegrationTimeInS, <span class="keywordtype">float</span> fSampleRate)</div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno">   99</span>    {</div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span>        assert(fSampleRate &gt; 0);</div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno">  101</span>        assert(fIntegrationTimeInS &gt;= 0);</div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno">  102</span>        <span class="keywordflow">if</span> (fIntegrationTimeInS == 0)</div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno">  103</span>            <span class="keywordflow">return</span> 0.F;</div>
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno">  104</span> </div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno">  105</span>        <span class="keywordflow">return</span> std::exp(-2.2F / fSampleRate / fIntegrationTimeInS);</div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno">  106</span>    }</div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span><span class="keyword">private</span>:</div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno"><a class="line" href="a00582.xhtml#ad3db5d691d9dcf0a329e1381349839ee">  108</a></span>    <a class="code hl_function" href="a00582.xhtml#ad3db5d691d9dcf0a329e1381349839ee">CSinglePoleLp</a>() {};</div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno"><a class="line" href="a00582.xhtml#a77311cd3d35f5354afbb12de5e4dabd5">  109</a></span>    <span class="keyword">virtual</span> <a class="code hl_function" href="a00582.xhtml#a77311cd3d35f5354afbb12de5e4dabd5">~CSinglePoleLp</a>() {};</div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno"><a class="line" href="a00582.xhtml#a9e7ea8ec63d51de5e1c12ab05575ec3d">  110</a></span>    <a class="code hl_function" href="a00582.xhtml#a9e7ea8ec63d51de5e1c12ab05575ec3d">CSinglePoleLp</a>(<span class="keyword">const</span> <a class="code hl_class" href="a00582.xhtml">CSinglePoleLp</a> &amp;that);</div>
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno"><a class="line" href="a00582.xhtml#ae32d933eea37072547dc682a60cc0a89">  111</a></span>    <a class="code hl_class" href="a00582.xhtml">CSinglePoleLp</a> &amp;<a class="code hl_function" href="a00582.xhtml#ae32d933eea37072547dc682a60cc0a89">operator=</a>(<span class="keyword">const</span> <a class="code hl_class" href="a00582.xhtml">CSinglePoleLp</a> &amp;c);</div>
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno">  112</span> </div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno"><a class="line" href="a00582.xhtml#ab3678d2f56e3c8d81f736469131cc844">  113</a></span>    <span class="keywordtype">float</span> <a class="code hl_variable" href="a00582.xhtml#ab3678d2f56e3c8d81f736469131cc844">m_fAlpha</a> = 0.9F; <span class="comment">//!&lt; filter coeff</span></div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span> </div>
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno"><a class="line" href="a00582.xhtml#aad5f42d8c830ca7af71067b2b674d486">  115</a></span>    <span class="keywordtype">float</span> <a class="code hl_variable" href="a00582.xhtml#aad5f42d8c830ca7af71067b2b674d486">m_fPrevOut</a> = 0.F; <span class="comment">//!&lt; filter buffer</span></div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span>};</div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno">  117</span> </div>
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno">  118</span><span class="comment"></span> </div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno">  119</span><span class="comment">/*! \brief class for moving average low pass filtering</span></div>
<div class="line"><a id="l00120" name="l00120"></a><span class="lineno">  120</span><span class="comment">*/</span></div>
<div class="line"><a id="l00121" name="l00121"></a><span class="lineno"><a class="line" href="a00586.xhtml">  121</a></span><span class="keyword">class </span><a class="code hl_class" href="a00586.xhtml">CMovingAverage</a></div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno">  122</span>{</div>
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno">  123</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00124" name="l00124"></a><span class="lineno">  124</span><span class="comment"></span> </div>
<div class="line"><a id="l00125" name="l00125"></a><span class="lineno">  125</span><span class="comment">    /*! initializes a MovingAverage instance with file reading</span></div>
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno">  126</span><span class="comment">    \param pCInstance pointer to instance to be written</span></div>
<div class="line"><a id="l00127" name="l00127"></a><span class="lineno">  127</span><span class="comment">    \return Error_t</span></div>
<div class="line"><a id="l00128" name="l00128"></a><span class="lineno">  128</span><span class="comment">    */</span></div>
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno"><a class="line" href="a00586.xhtml#a9008feaaece203a6bf1220ab81e1b983">  129</a></span>    <span class="keyword">static</span> <a class="code hl_enumeration" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> <a class="code hl_function" href="a00586.xhtml#a9008feaaece203a6bf1220ab81e1b983">create</a>(<a class="code hl_class" href="a00586.xhtml">CMovingAverage</a> *&amp;pCInstance)</div>
<div class="line"><a id="l00130" name="l00130"></a><span class="lineno">  130</span>    {</div>
<div class="line"><a id="l00131" name="l00131"></a><span class="lineno">  131</span>        pCInstance = <span class="keyword">new</span> <a class="code hl_function" href="a00586.xhtml#aa02ee977828ff103f3e2c25889131122">CMovingAverage</a>();</div>
<div class="line"><a id="l00132" name="l00132"></a><span class="lineno">  132</span> </div>
<div class="line"><a id="l00133" name="l00133"></a><span class="lineno">  133</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno">  134</span>    }</div>
<div class="line"><a id="l00135" name="l00135"></a><span class="lineno">  135</span> </div>
<div class="line"><a id="l00136" name="l00136"></a><span class="lineno">  136</span><span class="comment"></span> </div>
<div class="line"><a id="l00137" name="l00137"></a><span class="lineno">  137</span><span class="comment">    /*! destroys a MovingAverage instance</span></div>
<div class="line"><a id="l00138" name="l00138"></a><span class="lineno">  138</span><span class="comment">    \param pCInstance pointer to instance to be destroyed</span></div>
<div class="line"><a id="l00139" name="l00139"></a><span class="lineno">  139</span><span class="comment">    \return Error_t</span></div>
<div class="line"><a id="l00140" name="l00140"></a><span class="lineno">  140</span><span class="comment">    */</span></div>
<div class="line"><a id="l00141" name="l00141"></a><span class="lineno"><a class="line" href="a00586.xhtml#a5a6b1921f58c43d9daa618a97e62754f">  141</a></span>    <span class="keyword">static</span> <a class="code hl_enumeration" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> <a class="code hl_function" href="a00586.xhtml#a5a6b1921f58c43d9daa618a97e62754f">destroy</a>(<a class="code hl_class" href="a00586.xhtml">CMovingAverage</a> *&amp;pCInstance)</div>
<div class="line"><a id="l00142" name="l00142"></a><span class="lineno">  142</span>    {</div>
<div class="line"><a id="l00143" name="l00143"></a><span class="lineno">  143</span>        <span class="keyword">delete</span> pCInstance;</div>
<div class="line"><a id="l00144" name="l00144"></a><span class="lineno">  144</span>        pCInstance = 0;</div>
<div class="line"><a id="l00145" name="l00145"></a><span class="lineno">  145</span> </div>
<div class="line"><a id="l00146" name="l00146"></a><span class="lineno">  146</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><a id="l00147" name="l00147"></a><span class="lineno">  147</span>    }</div>
<div class="line"><a id="l00148" name="l00148"></a><span class="lineno">  148</span><span class="comment"></span> </div>
<div class="line"><a id="l00149" name="l00149"></a><span class="lineno">  149</span><span class="comment">    /*! sets the length of the filter</span></div>
<div class="line"><a id="l00150" name="l00150"></a><span class="lineno">  150</span><span class="comment">    \param iFilterLength length of the moving average filter (the longer the more lowpass)</span></div>
<div class="line"><a id="l00151" name="l00151"></a><span class="lineno">  151</span><span class="comment">    \return int</span></div>
<div class="line"><a id="l00152" name="l00152"></a><span class="lineno">  152</span><span class="comment">    */</span></div>
<div class="line"><a id="l00153" name="l00153"></a><span class="lineno"><a class="line" href="a00586.xhtml#a1a014af5490675e140d6069561b00eb1">  153</a></span>    <a class="code hl_enumeration" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> <a class="code hl_function" href="a00586.xhtml#a1a014af5490675e140d6069561b00eb1">setFilterParam</a>(<span class="keywordtype">int</span> iFilterLength = 64)</div>
<div class="line"><a id="l00154" name="l00154"></a><span class="lineno">  154</span>    {</div>
<div class="line"><a id="l00155" name="l00155"></a><span class="lineno">  155</span>        <span class="keywordflow">if</span> (iFilterLength &lt;= 0)</div>
<div class="line"><a id="l00156" name="l00156"></a><span class="lineno">  156</span>            <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248">Error_t::kFunctionInvalidArgsError</a>;</div>
<div class="line"><a id="l00157" name="l00157"></a><span class="lineno">  157</span> </div>
<div class="line"><a id="l00158" name="l00158"></a><span class="lineno">  158</span>        <span class="keywordflow">if</span> (<a class="code hl_variable" href="a00586.xhtml#a67685901f5136c73c25b9650d97193a0">m_pCRingBuff</a>-&gt;<a class="code hl_function" href="a00490.xhtml#a0ec2bd62a49e5078d3ca0a03fa123c9e">getLength</a>() &lt; iFilterLength)</div>
<div class="line"><a id="l00159" name="l00159"></a><span class="lineno">  159</span>        {</div>
<div class="line"><a id="l00160" name="l00160"></a><span class="lineno">  160</span>            <span class="keyword">delete</span> <a class="code hl_variable" href="a00586.xhtml#a67685901f5136c73c25b9650d97193a0">m_pCRingBuff</a>;</div>
<div class="line"><a id="l00161" name="l00161"></a><span class="lineno">  161</span>            <a class="code hl_variable" href="a00586.xhtml#a67685901f5136c73c25b9650d97193a0">m_pCRingBuff</a> = <span class="keyword">new</span> <a class="code hl_class" href="a00490.xhtml">CRingBuffer&lt;float&gt;</a>(iFilterLength + 1);</div>
<div class="line"><a id="l00162" name="l00162"></a><span class="lineno">  162</span>        }</div>
<div class="line"><a id="l00163" name="l00163"></a><span class="lineno">  163</span>        <a class="code hl_variable" href="a00586.xhtml#a67685901f5136c73c25b9650d97193a0">m_pCRingBuff</a>-&gt;<a class="code hl_function" href="a00490.xhtml#af265a6322c4b1584c880def00d31e663">setReadIdx</a>(-iFilterLength);</div>
<div class="line"><a id="l00164" name="l00164"></a><span class="lineno">  164</span> </div>
<div class="line"><a id="l00165" name="l00165"></a><span class="lineno">  165</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><a id="l00166" name="l00166"></a><span class="lineno">  166</span>    }</div>
<div class="line"><a id="l00167" name="l00167"></a><span class="lineno">  167</span><span class="comment"></span> </div>
<div class="line"><a id="l00168" name="l00168"></a><span class="lineno">  168</span><span class="comment">    /*! returns the filter length</span></div>
<div class="line"><a id="l00169" name="l00169"></a><span class="lineno">  169</span><span class="comment">    \return int</span></div>
<div class="line"><a id="l00170" name="l00170"></a><span class="lineno">  170</span><span class="comment">    */</span></div>
<div class="line"><a id="l00171" name="l00171"></a><span class="lineno"><a class="line" href="a00586.xhtml#a9704ba1d710c82a1b92af175b0b07538">  171</a></span>    <span class="keywordtype">int</span> <a class="code hl_function" href="a00586.xhtml#a9704ba1d710c82a1b92af175b0b07538">getFilterParam</a>()<span class="keyword"> const</span></div>
<div class="line"><a id="l00172" name="l00172"></a><span class="lineno">  172</span><span class="keyword">    </span>{</div>
<div class="line"><a id="l00173" name="l00173"></a><span class="lineno">  173</span>        <span class="keywordflow">return</span> <a class="code hl_variable" href="a00586.xhtml#a67685901f5136c73c25b9650d97193a0">m_pCRingBuff</a>-&gt;<a class="code hl_function" href="a00490.xhtml#aa04a6cb30d486a6ddd5f7929db1eef9d">getNumValuesInBuffer</a>();</div>
<div class="line"><a id="l00174" name="l00174"></a><span class="lineno">  174</span>    }</div>
<div class="line"><a id="l00175" name="l00175"></a><span class="lineno">  175</span><span class="comment"></span> </div>
<div class="line"><a id="l00176" name="l00176"></a><span class="lineno">  176</span><span class="comment">    /*! compute the filter length from an &quot;integration time&quot;</span></div>
<div class="line"><a id="l00177" name="l00177"></a><span class="lineno">  177</span><span class="comment">    \param fIntegrationTimeInS integration time in seconds (the higher, the more low pass)</span></div>
<div class="line"><a id="l00178" name="l00178"></a><span class="lineno">  178</span><span class="comment">    \param fSampleRate sample rate in Hz</span></div>
<div class="line"><a id="l00179" name="l00179"></a><span class="lineno">  179</span><span class="comment">    return int number of coeffs</span></div>
<div class="line"><a id="l00180" name="l00180"></a><span class="lineno">  180</span><span class="comment">    */</span></div>
<div class="line"><a id="l00181" name="l00181"></a><span class="lineno"><a class="line" href="a00586.xhtml#ac37c3eae6a41a393219aa4cbd39db211">  181</a></span>    <span class="keyword">static</span> <span class="keywordtype">int</span> <a class="code hl_function" href="a00586.xhtml#ac37c3eae6a41a393219aa4cbd39db211">calcFilterLength</a>(<span class="keywordtype">float</span> fIntegrationTimeInS, <span class="keywordtype">float</span> fSampleRate)</div>
<div class="line"><a id="l00182" name="l00182"></a><span class="lineno">  182</span>    {</div>
<div class="line"><a id="l00183" name="l00183"></a><span class="lineno">  183</span>        assert(fSampleRate &gt; 0);</div>
<div class="line"><a id="l00184" name="l00184"></a><span class="lineno">  184</span>        assert(fIntegrationTimeInS &gt;= 0);</div>
<div class="line"><a id="l00185" name="l00185"></a><span class="lineno">  185</span>        <span class="keywordflow">if</span> (fIntegrationTimeInS &lt;= 1.5F / fSampleRate)</div>
<div class="line"><a id="l00186" name="l00186"></a><span class="lineno">  186</span>            <span class="keywordflow">return</span> 1;</div>
<div class="line"><a id="l00187" name="l00187"></a><span class="lineno">  187</span> </div>
<div class="line"><a id="l00188" name="l00188"></a><span class="lineno">  188</span>        <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span><span class="keywordtype">int</span><span class="keyword">&gt;</span>(std::ceil(fIntegrationTimeInS * fSampleRate));</div>
<div class="line"><a id="l00189" name="l00189"></a><span class="lineno">  189</span>    }</div>
<div class="line"><a id="l00190" name="l00190"></a><span class="lineno">  190</span><span class="comment"></span> </div>
<div class="line"><a id="l00191" name="l00191"></a><span class="lineno">  191</span><span class="comment">    /*! performs the MovingAverage computation</span></div>
<div class="line"><a id="l00192" name="l00192"></a><span class="lineno">  192</span><span class="comment">    \param pfOut filter result (user-allocated, to be written, length iLenBuff)</span></div>
<div class="line"><a id="l00193" name="l00193"></a><span class="lineno">  193</span><span class="comment">    \param pfIn input data of length iLenBuff</span></div>
<div class="line"><a id="l00194" name="l00194"></a><span class="lineno">  194</span><span class="comment">    \param iLenBuff length of buffer in samples</span></div>
<div class="line"><a id="l00195" name="l00195"></a><span class="lineno">  195</span><span class="comment">    \return Error_t</span></div>
<div class="line"><a id="l00196" name="l00196"></a><span class="lineno">  196</span><span class="comment">    */</span></div>
<div class="line"><a id="l00197" name="l00197"></a><span class="lineno"><a class="line" href="a00586.xhtml#a7f3acd443773cadf99ab22335ecac73e">  197</a></span>    <a class="code hl_enumeration" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> <a class="code hl_function" href="a00586.xhtml#a7f3acd443773cadf99ab22335ecac73e">process</a>(<span class="keywordtype">float</span> *pfOut, <span class="keyword">const</span> <span class="keywordtype">float</span> *pfIn, <span class="keywordtype">long</span> <span class="keywordtype">long</span> iLenBuff)</div>
<div class="line"><a id="l00198" name="l00198"></a><span class="lineno">  198</span>    {</div>
<div class="line"><a id="l00199" name="l00199"></a><span class="lineno">  199</span>        <span class="keywordflow">if</span> (!pfOut || !pfIn || iLenBuff &lt;= 0)</div>
<div class="line"><a id="l00200" name="l00200"></a><span class="lineno">  200</span>            <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248">Error_t::kFunctionInvalidArgsError</a>;</div>
<div class="line"><a id="l00201" name="l00201"></a><span class="lineno">  201</span> </div>
<div class="line"><a id="l00202" name="l00202"></a><span class="lineno">  202</span>        <span class="keywordtype">int</span> iLenFilter = <a class="code hl_variable" href="a00586.xhtml#a67685901f5136c73c25b9650d97193a0">m_pCRingBuff</a>-&gt;<a class="code hl_function" href="a00490.xhtml#aa04a6cb30d486a6ddd5f7929db1eef9d">getNumValuesInBuffer</a>();</div>
<div class="line"><a id="l00203" name="l00203"></a><span class="lineno">  203</span> </div>
<div class="line"><a id="l00204" name="l00204"></a><span class="lineno">  204</span>        <span class="comment">// recursive implementation - beware of potential error propagation due to numerical precision</span></div>
<div class="line"><a id="l00205" name="l00205"></a><span class="lineno">  205</span>        <span class="keywordflow">for</span> (<span class="keyword">auto</span> i = 0; i &lt; iLenBuff; i++)</div>
<div class="line"><a id="l00206" name="l00206"></a><span class="lineno">  206</span>        {</div>
<div class="line"><a id="l00207" name="l00207"></a><span class="lineno">  207</span>            <a class="code hl_variable" href="a00586.xhtml#afa9972cded7adacb3a044ba85401b2e1">m_fPrevOut</a> += (pfIn[i] - <a class="code hl_variable" href="a00586.xhtml#a67685901f5136c73c25b9650d97193a0">m_pCRingBuff</a>-&gt;<a class="code hl_function" href="a00490.xhtml#a0f25eadaafa6a2e7bfe2f9ef6af1104b">getPostInc</a>()) / iLenFilter;</div>
<div class="line"><a id="l00208" name="l00208"></a><span class="lineno">  208</span>            pfOut[i] = <a class="code hl_variable" href="a00586.xhtml#afa9972cded7adacb3a044ba85401b2e1">m_fPrevOut</a>;</div>
<div class="line"><a id="l00209" name="l00209"></a><span class="lineno">  209</span>            <a class="code hl_variable" href="a00586.xhtml#a67685901f5136c73c25b9650d97193a0">m_pCRingBuff</a>-&gt;<a class="code hl_function" href="a00490.xhtml#a2bd848181a662312600bc590b9040d2a">putPostInc</a>(pfIn[i]);</div>
<div class="line"><a id="l00210" name="l00210"></a><span class="lineno">  210</span>        }</div>
<div class="line"><a id="l00211" name="l00211"></a><span class="lineno">  211</span> </div>
<div class="line"><a id="l00212" name="l00212"></a><span class="lineno">  212</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><a id="l00213" name="l00213"></a><span class="lineno">  213</span>    }</div>
<div class="line"><a id="l00214" name="l00214"></a><span class="lineno">  214</span><span class="comment"></span> </div>
<div class="line"><a id="l00215" name="l00215"></a><span class="lineno">  215</span><span class="comment">    /*! clears internal buffers and sets parameters to default</span></div>
<div class="line"><a id="l00216" name="l00216"></a><span class="lineno">  216</span><span class="comment">    \return Error_t</span></div>
<div class="line"><a id="l00217" name="l00217"></a><span class="lineno">  217</span><span class="comment">    */</span></div>
<div class="line"><a id="l00218" name="l00218"></a><span class="lineno"><a class="line" href="a00586.xhtml#a9681799055b5a4622d25a70901a65af3">  218</a></span>    <a class="code hl_enumeration" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> <a class="code hl_function" href="a00586.xhtml#a9681799055b5a4622d25a70901a65af3">reset</a>()</div>
<div class="line"><a id="l00219" name="l00219"></a><span class="lineno">  219</span>    {</div>
<div class="line"><a id="l00220" name="l00220"></a><span class="lineno">  220</span>        <a class="code hl_variable" href="a00586.xhtml#a67685901f5136c73c25b9650d97193a0">m_pCRingBuff</a>-&gt;<a class="code hl_function" href="a00490.xhtml#a716fb4acc03355a73cc7d96f3ceb2995">reset</a>();</div>
<div class="line"><a id="l00221" name="l00221"></a><span class="lineno">  221</span>        <a class="code hl_variable" href="a00586.xhtml#a67685901f5136c73c25b9650d97193a0">m_pCRingBuff</a>-&gt;<a class="code hl_function" href="a00490.xhtml#af265a6322c4b1584c880def00d31e663">setReadIdx</a>(-64);</div>
<div class="line"><a id="l00222" name="l00222"></a><span class="lineno">  222</span>        <a class="code hl_variable" href="a00586.xhtml#afa9972cded7adacb3a044ba85401b2e1">m_fPrevOut</a> = 0;</div>
<div class="line"><a id="l00223" name="l00223"></a><span class="lineno">  223</span> </div>
<div class="line"><a id="l00224" name="l00224"></a><span class="lineno">  224</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><a id="l00225" name="l00225"></a><span class="lineno">  225</span>    }</div>
<div class="line"><a id="l00226" name="l00226"></a><span class="lineno">  226</span><span class="comment"></span> </div>
<div class="line"><a id="l00227" name="l00227"></a><span class="lineno">  227</span><span class="comment">    /*! performs zero-phase filtering with the MA</span></div>
<div class="line"><a id="l00228" name="l00228"></a><span class="lineno">  228</span><span class="comment">    \param pfOut filter result (user-allocated, to be written, length iLenBuff)</span></div>
<div class="line"><a id="l00229" name="l00229"></a><span class="lineno">  229</span><span class="comment">    \param pfIn input data of length iLenBuff</span></div>
<div class="line"><a id="l00230" name="l00230"></a><span class="lineno">  230</span><span class="comment">    \param iLenBuff length of buffer in samples</span></div>
<div class="line"><a id="l00231" name="l00231"></a><span class="lineno">  231</span><span class="comment">    */</span></div>
<div class="line"><a id="l00232" name="l00232"></a><span class="lineno"><a class="line" href="a00586.xhtml#afaf126206b3993e9caeb989c2bab8ef4">  232</a></span>    <span class="keywordtype">void</span> <a class="code hl_function" href="a00586.xhtml#afaf126206b3993e9caeb989c2bab8ef4">filtfilt</a>(<span class="keywordtype">float</span> *pfOut, <span class="keyword">const</span> <span class="keywordtype">float</span> *pfIn, <span class="keywordtype">long</span> <span class="keywordtype">long</span> iLenBuff)</div>
<div class="line"><a id="l00233" name="l00233"></a><span class="lineno">  233</span>    {</div>
<div class="line"><a id="l00234" name="l00234"></a><span class="lineno">  234</span> </div>
<div class="line"><a id="l00235" name="l00235"></a><span class="lineno">  235</span>        <span class="keywordtype">int</span> iLenFilter = this-&gt;<a class="code hl_function" href="a00586.xhtml#a9704ba1d710c82a1b92af175b0b07538">getFilterParam</a>();</div>
<div class="line"><a id="l00236" name="l00236"></a><span class="lineno">  236</span>        this-&gt;<a class="code hl_function" href="a00586.xhtml#a9681799055b5a4622d25a70901a65af3">reset</a>();</div>
<div class="line"><a id="l00237" name="l00237"></a><span class="lineno">  237</span>        this-&gt;<a class="code hl_function" href="a00586.xhtml#a1a014af5490675e140d6069561b00eb1">setFilterParam</a>(iLenFilter);</div>
<div class="line"><a id="l00238" name="l00238"></a><span class="lineno">  238</span> </div>
<div class="line"><a id="l00239" name="l00239"></a><span class="lineno">  239</span>        <span class="keywordtype">float</span> *pfTmpBuff = 0;</div>
<div class="line"><a id="l00240" name="l00240"></a><span class="lineno">  240</span>        <a class="code hl_function" href="a00502.xhtml#abaadac98b1cad18b7b568852bc951696">CVector::alloc</a>(pfTmpBuff, iLenBuff + 2 * <span class="keyword">static_cast&lt;</span><span class="keywordtype">long</span> <span class="keywordtype">long</span><span class="keyword">&gt;</span>(iLenFilter));</div>
<div class="line"><a id="l00241" name="l00241"></a><span class="lineno">  241</span> </div>
<div class="line"><a id="l00242" name="l00242"></a><span class="lineno">  242</span>        this-&gt;<a class="code hl_function" href="a00586.xhtml#a7f3acd443773cadf99ab22335ecac73e">process</a>(&amp;pfTmpBuff[iLenFilter], pfIn, iLenBuff);</div>
<div class="line"><a id="l00243" name="l00243"></a><span class="lineno">  243</span> </div>
<div class="line"><a id="l00244" name="l00244"></a><span class="lineno">  244</span>        <span class="comment">// tail</span></div>
<div class="line"><a id="l00245" name="l00245"></a><span class="lineno">  245</span>        <span class="keywordflow">for</span> (<span class="keyword">auto</span> i = 0; i &lt; iLenFilter; i++)</div>
<div class="line"><a id="l00246" name="l00246"></a><span class="lineno">  246</span>        {</div>
<div class="line"><a id="l00247" name="l00247"></a><span class="lineno">  247</span>            <span class="keywordtype">float</span> fZero = 0.F;</div>
<div class="line"><a id="l00248" name="l00248"></a><span class="lineno">  248</span>            this-&gt;<a class="code hl_function" href="a00586.xhtml#a7f3acd443773cadf99ab22335ecac73e">process</a>(&amp;pfTmpBuff[iLenBuff + iLenFilter + i], &amp;fZero, 1);</div>
<div class="line"><a id="l00249" name="l00249"></a><span class="lineno">  249</span>        }</div>
<div class="line"><a id="l00250" name="l00250"></a><span class="lineno">  250</span> </div>
<div class="line"><a id="l00251" name="l00251"></a><span class="lineno">  251</span>        <span class="comment">// reverse tail</span></div>
<div class="line"><a id="l00252" name="l00252"></a><span class="lineno">  252</span>        <span class="keywordflow">for</span> (<span class="keyword">auto</span> i = iLenBuff + 2 * <span class="keyword">static_cast&lt;</span><span class="keywordtype">long</span> <span class="keywordtype">long</span><span class="keyword">&gt;</span>(iLenFilter) - 1; i &gt;= iLenBuff + iLenFilter; i--)</div>
<div class="line"><a id="l00253" name="l00253"></a><span class="lineno">  253</span>        {</div>
<div class="line"><a id="l00254" name="l00254"></a><span class="lineno">  254</span>            <span class="keywordtype">float</span> fZero = 0.F;</div>
<div class="line"><a id="l00255" name="l00255"></a><span class="lineno">  255</span>            this-&gt;<a class="code hl_function" href="a00586.xhtml#a7f3acd443773cadf99ab22335ecac73e">process</a>(&amp;fZero, &amp;pfTmpBuff[i], 1);</div>
<div class="line"><a id="l00256" name="l00256"></a><span class="lineno">  256</span>        }</div>
<div class="line"><a id="l00257" name="l00257"></a><span class="lineno">  257</span> </div>
<div class="line"><a id="l00258" name="l00258"></a><span class="lineno">  258</span>        <span class="keywordflow">for</span> (<span class="keyword">auto</span> i = iLenBuff + iLenFilter - 1; i &gt;= iLenFilter; i--)</div>
<div class="line"><a id="l00259" name="l00259"></a><span class="lineno">  259</span>            this-&gt;<a class="code hl_function" href="a00586.xhtml#a7f3acd443773cadf99ab22335ecac73e">process</a>(&amp;pfOut[i - iLenFilter], &amp;pfTmpBuff[i], 1);</div>
<div class="line"><a id="l00260" name="l00260"></a><span class="lineno">  260</span> </div>
<div class="line"><a id="l00261" name="l00261"></a><span class="lineno">  261</span>        this-&gt;<a class="code hl_function" href="a00586.xhtml#a9681799055b5a4622d25a70901a65af3">reset</a>();</div>
<div class="line"><a id="l00262" name="l00262"></a><span class="lineno">  262</span>        this-&gt;<a class="code hl_function" href="a00586.xhtml#a1a014af5490675e140d6069561b00eb1">setFilterParam</a>(iLenFilter);</div>
<div class="line"><a id="l00263" name="l00263"></a><span class="lineno">  263</span> </div>
<div class="line"><a id="l00264" name="l00264"></a><span class="lineno">  264</span>        <a class="code hl_function" href="a00502.xhtml#aa86bdb0c663d4d52f2765793756f8737">CVector::free</a>(pfTmpBuff);</div>
<div class="line"><a id="l00265" name="l00265"></a><span class="lineno">  265</span>    }</div>
<div class="line"><a id="l00266" name="l00266"></a><span class="lineno">  266</span> </div>
<div class="line"><a id="l00267" name="l00267"></a><span class="lineno">  267</span> </div>
<div class="line"><a id="l00268" name="l00268"></a><span class="lineno">  268</span><span class="keyword">private</span>:</div>
<div class="line"><a id="l00269" name="l00269"></a><span class="lineno"><a class="line" href="a00586.xhtml#aa02ee977828ff103f3e2c25889131122">  269</a></span>    <a class="code hl_function" href="a00586.xhtml#aa02ee977828ff103f3e2c25889131122">CMovingAverage</a>()</div>
<div class="line"><a id="l00270" name="l00270"></a><span class="lineno">  270</span>    {</div>
<div class="line"><a id="l00271" name="l00271"></a><span class="lineno">  271</span>        <a class="code hl_function" href="a00586.xhtml#a9681799055b5a4622d25a70901a65af3">reset</a>();</div>
<div class="line"><a id="l00272" name="l00272"></a><span class="lineno">  272</span>    };</div>
<div class="line"><a id="l00273" name="l00273"></a><span class="lineno">  273</span> </div>
<div class="line"><a id="l00274" name="l00274"></a><span class="lineno"><a class="line" href="a00586.xhtml#adde468f177d86f008403b3d94210bfd4">  274</a></span>    <span class="keyword">virtual</span> <a class="code hl_function" href="a00586.xhtml#adde468f177d86f008403b3d94210bfd4">~CMovingAverage</a>()</div>
<div class="line"><a id="l00275" name="l00275"></a><span class="lineno">  275</span>    {</div>
<div class="line"><a id="l00276" name="l00276"></a><span class="lineno">  276</span>        <span class="keyword">delete</span> <a class="code hl_variable" href="a00586.xhtml#a67685901f5136c73c25b9650d97193a0">m_pCRingBuff</a>;</div>
<div class="line"><a id="l00277" name="l00277"></a><span class="lineno">  277</span>    };</div>
<div class="line"><a id="l00278" name="l00278"></a><span class="lineno"><a class="line" href="a00586.xhtml#a7fbde1ace5417196843209065c07d687">  278</a></span>    <a class="code hl_function" href="a00586.xhtml#a7fbde1ace5417196843209065c07d687">CMovingAverage</a>(<span class="keyword">const</span> <a class="code hl_class" href="a00586.xhtml">CMovingAverage</a> &amp;that);</div>
<div class="line"><a id="l00279" name="l00279"></a><span class="lineno"><a class="line" href="a00586.xhtml#ae283883b27aeaa8aaa1796953cc9a0ef">  279</a></span>    <a class="code hl_class" href="a00586.xhtml">CMovingAverage</a> &amp;<a class="code hl_function" href="a00586.xhtml#ae283883b27aeaa8aaa1796953cc9a0ef">operator=</a>(<span class="keyword">const</span> <a class="code hl_class" href="a00586.xhtml">CMovingAverage</a> &amp;c);</div>
<div class="line"><a id="l00280" name="l00280"></a><span class="lineno">  280</span> </div>
<div class="line"><a id="l00281" name="l00281"></a><span class="lineno"><a class="line" href="a00586.xhtml#a67685901f5136c73c25b9650d97193a0">  281</a></span>    <a class="code hl_class" href="a00490.xhtml">CRingBuffer&lt;float&gt;</a> *<a class="code hl_variable" href="a00586.xhtml#a67685901f5136c73c25b9650d97193a0">m_pCRingBuff</a> = <span class="keyword">new</span> <a class="code hl_class" href="a00490.xhtml">CRingBuffer&lt;float&gt;</a>(65); <span class="comment">//!&lt; filter buffer</span></div>
<div class="line"><a id="l00282" name="l00282"></a><span class="lineno">  282</span> </div>
<div class="line"><a id="l00283" name="l00283"></a><span class="lineno"><a class="line" href="a00586.xhtml#afa9972cded7adacb3a044ba85401b2e1">  283</a></span>    <span class="keywordtype">float</span> <a class="code hl_variable" href="a00586.xhtml#afa9972cded7adacb3a044ba85401b2e1">m_fPrevOut</a> = 0; <span class="comment">//!&lt; previous output value</span></div>
<div class="line"><a id="l00284" name="l00284"></a><span class="lineno">  284</span>};</div>
<div class="line"><a id="l00285" name="l00285"></a><span class="lineno">  285</span> </div>
<div class="line"><a id="l00286" name="l00286"></a><span class="lineno">  286</span><span class="preprocessor">#endif </span><span class="comment">// #if !defined(__ACA_LowPass_HEADER_INCLUDED__)</span></div>
<div class="ttc" id="aa00146_xhtml"><div class="ttname"><a href="a00146.xhtml">RingBuffer.h</a></div></div>
<div class="ttc" id="aa00224_xhtml"><div class="ttname"><a href="a00224.xhtml">ErrorDef.h</a></div></div>
<div class="ttc" id="aa00224_xhtml_a4e8c0d09726859e3d3369c0da5a1aa7f"><div class="ttname"><a href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a></div><div class="ttdeci">Error_t</div><div class="ttdef"><b>Definition:</b> <a href="a00224_source.xhtml#l00004">ErrorDef.h:5</a></div></div>
<div class="ttc" id="aa00224_xhtml_a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248"><div class="ttname"><a href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248">Error_t::kFunctionInvalidArgsError</a></div><div class="ttdeci">@ kFunctionInvalidArgsError</div></div>
<div class="ttc" id="aa00224_xhtml_a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b"><div class="ttname"><a href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a></div><div class="ttdeci">@ kNoError</div></div>
<div class="ttc" id="aa00490_xhtml"><div class="ttname"><a href="a00490.xhtml">CRingBuffer&lt; float &gt;</a></div></div>
<div class="ttc" id="aa00490_xhtml_a0ec2bd62a49e5078d3ca0a03fa123c9e"><div class="ttname"><a href="a00490.xhtml#a0ec2bd62a49e5078d3ca0a03fa123c9e">CRingBuffer::getLength</a></div><div class="ttdeci">int getLength() const</div><div class="ttdef"><b>Definition:</b> <a href="a00146_source.xhtml#l00187">RingBuffer.h:187</a></div></div>
<div class="ttc" id="aa00490_xhtml_a0f25eadaafa6a2e7bfe2f9ef6af1104b"><div class="ttname"><a href="a00490.xhtml#a0f25eadaafa6a2e7bfe2f9ef6af1104b">CRingBuffer::getPostInc</a></div><div class="ttdeci">T getPostInc()</div><div class="ttdef"><b>Definition:</b> <a href="a00146_source.xhtml#l00077">RingBuffer.h:77</a></div></div>
<div class="ttc" id="aa00490_xhtml_a2bd848181a662312600bc590b9040d2a"><div class="ttname"><a href="a00490.xhtml#a2bd848181a662312600bc590b9040d2a">CRingBuffer::putPostInc</a></div><div class="ttdeci">void putPostInc(T tNewValue)</div><div class="ttdef"><b>Definition:</b> <a href="a00146_source.xhtml#l00034">RingBuffer.h:34</a></div></div>
<div class="ttc" id="aa00490_xhtml_a716fb4acc03355a73cc7d96f3ceb2995"><div class="ttname"><a href="a00490.xhtml#a716fb4acc03355a73cc7d96f3ceb2995">CRingBuffer::reset</a></div><div class="ttdeci">void reset()</div><div class="ttdef"><b>Definition:</b> <a href="a00146_source.xhtml#l00137">RingBuffer.h:137</a></div></div>
<div class="ttc" id="aa00490_xhtml_aa04a6cb30d486a6ddd5f7929db1eef9d"><div class="ttname"><a href="a00490.xhtml#aa04a6cb30d486a6ddd5f7929db1eef9d">CRingBuffer::getNumValuesInBuffer</a></div><div class="ttdeci">int getNumValuesInBuffer() const</div><div class="ttdef"><b>Definition:</b> <a href="a00146_source.xhtml#l00179">RingBuffer.h:179</a></div></div>
<div class="ttc" id="aa00490_xhtml_af265a6322c4b1584c880def00d31e663"><div class="ttname"><a href="a00490.xhtml#af265a6322c4b1584c880def00d31e663">CRingBuffer::setReadIdx</a></div><div class="ttdeci">void setReadIdx(int iNewReadIdx)</div><div class="ttdef"><b>Definition:</b> <a href="a00146_source.xhtml#l00171">RingBuffer.h:171</a></div></div>
<div class="ttc" id="aa00502_xhtml_aa86bdb0c663d4d52f2765793756f8737"><div class="ttname"><a href="a00502.xhtml#aa86bdb0c663d4d52f2765793756f8737">CVector::free</a></div><div class="ttdeci">static void free(T *&amp;ptVec)</div><div class="ttdef"><b>Definition:</b> <a href="a00155_source.xhtml#l00057">Vector.h:57</a></div></div>
<div class="ttc" id="aa00502_xhtml_abaadac98b1cad18b7b568852bc951696"><div class="ttname"><a href="a00502.xhtml#abaadac98b1cad18b7b568852bc951696">CVector::alloc</a></div><div class="ttdeci">static void alloc(T *&amp;ptVec, long long iLength)</div><div class="ttdef"><b>Definition:</b> <a href="a00155_source.xhtml#l00025">Vector.h:25</a></div></div>
<div class="ttc" id="aa00582_xhtml"><div class="ttname"><a href="a00582.xhtml">CSinglePoleLp</a></div><div class="ttdoc">class for single-pole low pass filtering</div><div class="ttdef"><b>Definition:</b> <a href="a00134_source.xhtml#l00012">ToolLowPass.h:13</a></div></div>
<div class="ttc" id="aa00582_xhtml_a02c1876180d4310e4dc136c7e733af00"><div class="ttname"><a href="a00582.xhtml#a02c1876180d4310e4dc136c7e733af00">CSinglePoleLp::reset</a></div><div class="ttdeci">Error_t reset()</div><div class="ttdef"><b>Definition:</b> <a href="a00134_source.xhtml#l00085">ToolLowPass.h:85</a></div></div>
<div class="ttc" id="aa00582_xhtml_a36c98d6494cc1ac1e7bf35bec6891b3c"><div class="ttname"><a href="a00582.xhtml#a36c98d6494cc1ac1e7bf35bec6891b3c">CSinglePoleLp::create</a></div><div class="ttdeci">static Error_t create(CSinglePoleLp *&amp;pCInstance)</div><div class="ttdef"><b>Definition:</b> <a href="a00134_source.xhtml#l00020">ToolLowPass.h:20</a></div></div>
<div class="ttc" id="aa00582_xhtml_a77311cd3d35f5354afbb12de5e4dabd5"><div class="ttname"><a href="a00582.xhtml#a77311cd3d35f5354afbb12de5e4dabd5">CSinglePoleLp::~CSinglePoleLp</a></div><div class="ttdeci">virtual ~CSinglePoleLp()</div><div class="ttdef"><b>Definition:</b> <a href="a00134_source.xhtml#l00109">ToolLowPass.h:109</a></div></div>
<div class="ttc" id="aa00582_xhtml_a7a1a5cc34017c66373ef80bf4da531d3"><div class="ttname"><a href="a00582.xhtml#a7a1a5cc34017c66373ef80bf4da531d3">CSinglePoleLp::setFilterParam</a></div><div class="ttdeci">Error_t setFilterParam(float fAlpha=.9F)</div><div class="ttdef"><b>Definition:</b> <a href="a00134_source.xhtml#l00043">ToolLowPass.h:43</a></div></div>
<div class="ttc" id="aa00582_xhtml_a83aa1cd604c8bc82c983c6681102757c"><div class="ttname"><a href="a00582.xhtml#a83aa1cd604c8bc82c983c6681102757c">CSinglePoleLp::getFilterParam</a></div><div class="ttdeci">float getFilterParam() const</div><div class="ttdef"><b>Definition:</b> <a href="a00134_source.xhtml#l00056">ToolLowPass.h:56</a></div></div>
<div class="ttc" id="aa00582_xhtml_a9e7ea8ec63d51de5e1c12ab05575ec3d"><div class="ttname"><a href="a00582.xhtml#a9e7ea8ec63d51de5e1c12ab05575ec3d">CSinglePoleLp::CSinglePoleLp</a></div><div class="ttdeci">CSinglePoleLp(const CSinglePoleLp &amp;that)</div></div>
<div class="ttc" id="aa00582_xhtml_aad5f42d8c830ca7af71067b2b674d486"><div class="ttname"><a href="a00582.xhtml#aad5f42d8c830ca7af71067b2b674d486">CSinglePoleLp::m_fPrevOut</a></div><div class="ttdeci">float m_fPrevOut</div><div class="ttdoc">filter buffer</div><div class="ttdef"><b>Definition:</b> <a href="a00134_source.xhtml#l00115">ToolLowPass.h:115</a></div></div>
<div class="ttc" id="aa00582_xhtml_ab3678d2f56e3c8d81f736469131cc844"><div class="ttname"><a href="a00582.xhtml#ab3678d2f56e3c8d81f736469131cc844">CSinglePoleLp::m_fAlpha</a></div><div class="ttdeci">float m_fAlpha</div><div class="ttdoc">filter coeff</div><div class="ttdef"><b>Definition:</b> <a href="a00134_source.xhtml#l00113">ToolLowPass.h:113</a></div></div>
<div class="ttc" id="aa00582_xhtml_ac0aa215647a41e3a3de44ad6474c6be3"><div class="ttname"><a href="a00582.xhtml#ac0aa215647a41e3a3de44ad6474c6be3">CSinglePoleLp::destroy</a></div><div class="ttdeci">static Error_t destroy(CSinglePoleLp *&amp;pCInstance)</div><div class="ttdef"><b>Definition:</b> <a href="a00134_source.xhtml#l00031">ToolLowPass.h:31</a></div></div>
<div class="ttc" id="aa00582_xhtml_ad3db5d691d9dcf0a329e1381349839ee"><div class="ttname"><a href="a00582.xhtml#ad3db5d691d9dcf0a329e1381349839ee">CSinglePoleLp::CSinglePoleLp</a></div><div class="ttdeci">CSinglePoleLp()</div><div class="ttdef"><b>Definition:</b> <a href="a00134_source.xhtml#l00108">ToolLowPass.h:108</a></div></div>
<div class="ttc" id="aa00582_xhtml_ae32d933eea37072547dc682a60cc0a89"><div class="ttname"><a href="a00582.xhtml#ae32d933eea37072547dc682a60cc0a89">CSinglePoleLp::operator=</a></div><div class="ttdeci">CSinglePoleLp &amp; operator=(const CSinglePoleLp &amp;c)</div></div>
<div class="ttc" id="aa00582_xhtml_ae4663d986c26b1558fcc94de89f42872"><div class="ttname"><a href="a00582.xhtml#ae4663d986c26b1558fcc94de89f42872">CSinglePoleLp::process</a></div><div class="ttdeci">Error_t process(float *pfOut, const float *pfIn, long long iNumSamples)</div><div class="ttdef"><b>Definition:</b> <a href="a00134_source.xhtml#l00067">ToolLowPass.h:67</a></div></div>
<div class="ttc" id="aa00582_xhtml_afedab0de8491f604e797ada1fb0e5899"><div class="ttname"><a href="a00582.xhtml#afedab0de8491f604e797ada1fb0e5899">CSinglePoleLp::calcFilterParam</a></div><div class="ttdeci">static float calcFilterParam(float fIntegrationTimeInS, float fSampleRate)</div><div class="ttdef"><b>Definition:</b> <a href="a00134_source.xhtml#l00098">ToolLowPass.h:98</a></div></div>
<div class="ttc" id="aa00586_xhtml"><div class="ttname"><a href="a00586.xhtml">CMovingAverage</a></div><div class="ttdoc">class for moving average low pass filtering</div><div class="ttdef"><b>Definition:</b> <a href="a00134_source.xhtml#l00121">ToolLowPass.h:122</a></div></div>
<div class="ttc" id="aa00586_xhtml_a1a014af5490675e140d6069561b00eb1"><div class="ttname"><a href="a00586.xhtml#a1a014af5490675e140d6069561b00eb1">CMovingAverage::setFilterParam</a></div><div class="ttdeci">Error_t setFilterParam(int iFilterLength=64)</div><div class="ttdef"><b>Definition:</b> <a href="a00134_source.xhtml#l00153">ToolLowPass.h:153</a></div></div>
<div class="ttc" id="aa00586_xhtml_a5a6b1921f58c43d9daa618a97e62754f"><div class="ttname"><a href="a00586.xhtml#a5a6b1921f58c43d9daa618a97e62754f">CMovingAverage::destroy</a></div><div class="ttdeci">static Error_t destroy(CMovingAverage *&amp;pCInstance)</div><div class="ttdef"><b>Definition:</b> <a href="a00134_source.xhtml#l00141">ToolLowPass.h:141</a></div></div>
<div class="ttc" id="aa00586_xhtml_a67685901f5136c73c25b9650d97193a0"><div class="ttname"><a href="a00586.xhtml#a67685901f5136c73c25b9650d97193a0">CMovingAverage::m_pCRingBuff</a></div><div class="ttdeci">CRingBuffer&lt; float &gt; * m_pCRingBuff</div><div class="ttdoc">filter buffer</div><div class="ttdef"><b>Definition:</b> <a href="a00134_source.xhtml#l00281">ToolLowPass.h:281</a></div></div>
<div class="ttc" id="aa00586_xhtml_a7f3acd443773cadf99ab22335ecac73e"><div class="ttname"><a href="a00586.xhtml#a7f3acd443773cadf99ab22335ecac73e">CMovingAverage::process</a></div><div class="ttdeci">Error_t process(float *pfOut, const float *pfIn, long long iLenBuff)</div><div class="ttdef"><b>Definition:</b> <a href="a00134_source.xhtml#l00197">ToolLowPass.h:197</a></div></div>
<div class="ttc" id="aa00586_xhtml_a7fbde1ace5417196843209065c07d687"><div class="ttname"><a href="a00586.xhtml#a7fbde1ace5417196843209065c07d687">CMovingAverage::CMovingAverage</a></div><div class="ttdeci">CMovingAverage(const CMovingAverage &amp;that)</div></div>
<div class="ttc" id="aa00586_xhtml_a9008feaaece203a6bf1220ab81e1b983"><div class="ttname"><a href="a00586.xhtml#a9008feaaece203a6bf1220ab81e1b983">CMovingAverage::create</a></div><div class="ttdeci">static Error_t create(CMovingAverage *&amp;pCInstance)</div><div class="ttdef"><b>Definition:</b> <a href="a00134_source.xhtml#l00129">ToolLowPass.h:129</a></div></div>
<div class="ttc" id="aa00586_xhtml_a9681799055b5a4622d25a70901a65af3"><div class="ttname"><a href="a00586.xhtml#a9681799055b5a4622d25a70901a65af3">CMovingAverage::reset</a></div><div class="ttdeci">Error_t reset()</div><div class="ttdef"><b>Definition:</b> <a href="a00134_source.xhtml#l00218">ToolLowPass.h:218</a></div></div>
<div class="ttc" id="aa00586_xhtml_a9704ba1d710c82a1b92af175b0b07538"><div class="ttname"><a href="a00586.xhtml#a9704ba1d710c82a1b92af175b0b07538">CMovingAverage::getFilterParam</a></div><div class="ttdeci">int getFilterParam() const</div><div class="ttdef"><b>Definition:</b> <a href="a00134_source.xhtml#l00171">ToolLowPass.h:171</a></div></div>
<div class="ttc" id="aa00586_xhtml_aa02ee977828ff103f3e2c25889131122"><div class="ttname"><a href="a00586.xhtml#aa02ee977828ff103f3e2c25889131122">CMovingAverage::CMovingAverage</a></div><div class="ttdeci">CMovingAverage()</div><div class="ttdef"><b>Definition:</b> <a href="a00134_source.xhtml#l00269">ToolLowPass.h:269</a></div></div>
<div class="ttc" id="aa00586_xhtml_ac37c3eae6a41a393219aa4cbd39db211"><div class="ttname"><a href="a00586.xhtml#ac37c3eae6a41a393219aa4cbd39db211">CMovingAverage::calcFilterLength</a></div><div class="ttdeci">static int calcFilterLength(float fIntegrationTimeInS, float fSampleRate)</div><div class="ttdef"><b>Definition:</b> <a href="a00134_source.xhtml#l00181">ToolLowPass.h:181</a></div></div>
<div class="ttc" id="aa00586_xhtml_adde468f177d86f008403b3d94210bfd4"><div class="ttname"><a href="a00586.xhtml#adde468f177d86f008403b3d94210bfd4">CMovingAverage::~CMovingAverage</a></div><div class="ttdeci">virtual ~CMovingAverage()</div><div class="ttdef"><b>Definition:</b> <a href="a00134_source.xhtml#l00274">ToolLowPass.h:274</a></div></div>
<div class="ttc" id="aa00586_xhtml_ae283883b27aeaa8aaa1796953cc9a0ef"><div class="ttname"><a href="a00586.xhtml#ae283883b27aeaa8aaa1796953cc9a0ef">CMovingAverage::operator=</a></div><div class="ttdeci">CMovingAverage &amp; operator=(const CMovingAverage &amp;c)</div></div>
<div class="ttc" id="aa00586_xhtml_afa9972cded7adacb3a044ba85401b2e1"><div class="ttname"><a href="a00586.xhtml#afa9972cded7adacb3a044ba85401b2e1">CMovingAverage::m_fPrevOut</a></div><div class="ttdeci">float m_fPrevOut</div><div class="ttdoc">previous output value</div><div class="ttdef"><b>Definition:</b> <a href="a00134_source.xhtml#l00283">ToolLowPass.h:283</a></div></div>
<div class="ttc" id="aa00586_xhtml_afaf126206b3993e9caeb989c2bab8ef4"><div class="ttname"><a href="a00586.xhtml#afaf126206b3993e9caeb989c2bab8ef4">CMovingAverage::filtfilt</a></div><div class="ttdeci">void filtfilt(float *pfOut, const float *pfIn, long long iLenBuff)</div><div class="ttdef"><b>Definition:</b> <a href="a00134_source.xhtml#l00232">ToolLowPass.h:232</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_bfccd401955b95cf8c75461437045ac0.xhtml">inc</a></li><li class="navelem"><a class="el" href="a00134.xhtml">ToolLowPass.h</a></li>
    <li class="footer">Generated on Sun Jun 19 2022 18:35:23 for ACA by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.4 </li>
  </ul>
</div>
</body>
</html>
