<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 4.0.0 (20220602.1335)
 -->
<!-- Title: CKey Pages: 1 -->
<svg width="911pt" height="2196pt"
 viewBox="0.00 0.00 910.50 2196.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 2192)">
<title>CKey</title>
<polygon fill="white" stroke="transparent" points="-4,4 -4,-2192 906.5,-2192 906.5,4 -4,4"/>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="class for computation of the key from either a file or a vector">
<polygon fill="#bfbfbf" stroke="black" points="464,-0.5 464,-277.5 614,-277.5 614,-0.5 464,-0.5"/>
<text text-anchor="middle" x="539" y="-265.5" font-family="Helvetica,sans-Serif" font-size="10.00">CKey</text>
<polyline fill="none" stroke="black" points="464,-258.5 614,-258.5 "/>
<text text-anchor="start" x="472" y="-246.5" font-family="Helvetica,sans-Serif" font-size="10.00"># bool m_bIsInitialized</text>
<polyline fill="none" stroke="black" points="464,-239.5 614,-239.5 "/>
<text text-anchor="start" x="472" y="-227.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CKey()</text>
<text text-anchor="start" x="472" y="-216.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CKey()</text>
<text text-anchor="start" x="472" y="-205.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t init(const</text>
<text text-anchor="start" x="472" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10.00"> std::string &amp;strAudioFile</text>
<text text-anchor="start" x="472" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00">Path, int iBlockLength=4096,</text>
<text text-anchor="start" x="472" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iHopLength=2048)</text>
<text text-anchor="start" x="472" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t init(const</text>
<text text-anchor="start" x="472" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfAudio, long</text>
<text text-anchor="start" x="472" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00"> long iNumFrames, float</text>
<text text-anchor="start" x="472" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00"> fSampleRate, int iBlockLength</text>
<text text-anchor="start" x="472" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00">=4096, int iHopLength=2048)</text>
<text text-anchor="start" x="472" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t reset()</text>
<text text-anchor="start" x="472" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ int compKey()</text>
<text text-anchor="start" x="472" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static std::string</text>
<text text-anchor="start" x="472" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00"> getKeyString(Keys_t</text>
<text text-anchor="start" x="472" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00"> eKeyIdx)</text>
<text text-anchor="start" x="472" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Keys_t getKeyIdxFrom</text>
<text text-anchor="start" x="472" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">String(std::string sKeyString)</text>
<text text-anchor="start" x="472" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CKey(const CKey &amp;that)</text>
<text text-anchor="start" x="472" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CKey &amp; operator=(const</text>
<text text-anchor="start" x="472" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00"> CKey &amp;c)</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="a00453.xhtml" target="_top" xlink:title="class for computation of a magnitude Feature from either a file or a vector">
<polygon fill="white" stroke="black" points="333,-325.5 333,-888.5 547,-888.5 547,-325.5 333,-325.5"/>
<text text-anchor="middle" x="440" y="-876.5" font-family="Helvetica,sans-Serif" font-size="10.00">CFeatureIf</text>
<polyline fill="none" stroke="black" points="333,-869.5 547,-869.5 "/>
<text text-anchor="start" x="341" y="-857.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iBlockLength</text>
<text text-anchor="start" x="341" y="-846.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iHopLength</text>
<text text-anchor="start" x="341" y="-835.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float m_fSampleRate</text>
<text text-anchor="start" x="341" y="-824.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float * m_pfProcessBuff2</text>
<text text-anchor="start" x="341" y="-813.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float * m_pfProcessBuff1</text>
<text text-anchor="start" x="341" y="-802.5" font-family="Helvetica,sans-Serif" font-size="10.00"># bool m_bIsInitialized</text>
<polyline fill="none" stroke="black" points="333,-795.5 547,-795.5 "/>
<text text-anchor="start" x="341" y="-783.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getFeatureDimensions</text>
<text text-anchor="start" x="341" y="-772.5" font-family="Helvetica,sans-Serif" font-size="10.00">(int &amp;iNumRows, int &amp;iNumCols) const</text>
<text text-anchor="start" x="341" y="-761.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ float getTimeStamp</text>
<text text-anchor="start" x="341" y="-750.5" font-family="Helvetica,sans-Serif" font-size="10.00">(int iBlockIdx) const</text>
<text text-anchor="start" x="341" y="-739.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getTimeStamps</text>
<text text-anchor="start" x="341" y="-728.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfAxisTicks) const</text>
<text text-anchor="start" x="341" y="-717.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compFeature1Dim</text>
<text text-anchor="start" x="341" y="-706.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfFeature)</text>
<text text-anchor="start" x="341" y="-695.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compFeatureNDim</text>
<text text-anchor="start" x="341" y="-684.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float **ppfFeature)</text>
<text text-anchor="start" x="341" y="-673.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="341" y="-662.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CFeatureIf *&amp;pCInstance,</text>
<text text-anchor="start" x="341" y="-651.5" font-family="Helvetica,sans-Serif" font-size="10.00"> Feature_t eFeatureIdx,</text>
<text text-anchor="start" x="341" y="-640.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const std::string &amp;strAudioFile</text>
<text text-anchor="start" x="341" y="-629.5" font-family="Helvetica,sans-Serif" font-size="10.00">Path, int iBlockLength=2048,</text>
<text text-anchor="start" x="341" y="-618.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iHopLength=1024)</text>
<text text-anchor="start" x="341" y="-607.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="341" y="-596.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CFeatureIf *&amp;pCInstance,</text>
<text text-anchor="start" x="341" y="-585.5" font-family="Helvetica,sans-Serif" font-size="10.00"> Feature_t eFeatureIdx,</text>
<text text-anchor="start" x="341" y="-574.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const float *pfAudio, long</text>
<text text-anchor="start" x="341" y="-563.5" font-family="Helvetica,sans-Serif" font-size="10.00"> long iNumFrames, float fSampleRate,</text>
<text text-anchor="start" x="341" y="-552.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iBlockLength=2048, int iHopLength=1024)</text>
<text text-anchor="start" x="341" y="-541.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="341" y="-530.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CFeatureIf *&amp;pCInstance)</text>
<text text-anchor="start" x="341" y="-519.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static std::string</text>
<text text-anchor="start" x="341" y="-508.5" font-family="Helvetica,sans-Serif" font-size="10.00"> getFeatureString(Feature</text>
<text text-anchor="start" x="341" y="-497.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t eFeatureIdx)</text>
<text text-anchor="start" x="341" y="-486.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Feature_t getFeature</text>
<text text-anchor="start" x="341" y="-475.5" font-family="Helvetica,sans-Serif" font-size="10.00">IdxFromString(std::string</text>
<text text-anchor="start" x="341" y="-464.5" font-family="Helvetica,sans-Serif" font-size="10.00"> sFeatureString)</text>
<text text-anchor="start" x="341" y="-453.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CFeatureIf()</text>
<text text-anchor="start" x="341" y="-442.5" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CFeatureIf()</text>
<text text-anchor="start" x="341" y="-431.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CFeatureIf(const CFeature</text>
<text text-anchor="start" x="341" y="-420.5" font-family="Helvetica,sans-Serif" font-size="10.00">If &amp;that)</text>
<text text-anchor="start" x="341" y="-409.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CFeatureIf &amp; operator</text>
<text text-anchor="start" x="341" y="-398.5" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CFeatureIf &amp;c)</text>
<text text-anchor="start" x="341" y="-387.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t reset_()</text>
<text text-anchor="start" x="341" y="-376.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t init_(Feature</text>
<text text-anchor="start" x="341" y="-365.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t eFeatureIdx)</text>
<text text-anchor="start" x="341" y="-354.5" font-family="Helvetica,sans-Serif" font-size="10.00"># bool isFeatureSpectral</text>
<text text-anchor="start" x="341" y="-343.5" font-family="Helvetica,sans-Serif" font-size="10.00">_(Feature_t eFeatureIdx)</text>
<text text-anchor="start" x="341" y="-332.5" font-family="Helvetica,sans-Serif" font-size="10.00"># void computeMagSpectrum_()</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="#404040" d="M499.66,-325.18C502.22,-313.11 504.75,-301.21 507.21,-289.64"/>
<polygon fill="none" stroke="#404040" points="507.25,-289.43 504.59,-282.73 509.75,-277.69 512.41,-284.39 507.25,-289.43"/>
<text text-anchor="middle" x="568" y="-299" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCPitchChromaExtractor</text>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="a00577.xhtml" target="_top" xlink:title="class for audio normalization offering three options">
<polygon fill="white" stroke="black" points="0,-1250 0,-1483 150,-1483 150,-1250 0,-1250"/>
<text text-anchor="middle" x="75" y="-1471" font-family="Helvetica,sans-Serif" font-size="10.00">CNormalizeAudio</text>
<polyline fill="none" stroke="black" points="0,-1464 150,-1464 "/>
<text text-anchor="start" x="8" y="-1452" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float m_fScaleFactor</text>
<polyline fill="none" stroke="black" points="0,-1445 150,-1445 "/>
<text text-anchor="start" x="8" y="-1433" font-family="Helvetica,sans-Serif" font-size="10.00">+ CNormalizeAudio(CAudioFile</text>
<text text-anchor="start" x="8" y="-1422" font-family="Helvetica,sans-Serif" font-size="10.00">If *pCAudioFile)</text>
<text text-anchor="start" x="8" y="-1411" font-family="Helvetica,sans-Serif" font-size="10.00">+ CNormalizeAudio(const</text>
<text text-anchor="start" x="8" y="-1400" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfAudioBuff, long</text>
<text text-anchor="start" x="8" y="-1389" font-family="Helvetica,sans-Serif" font-size="10.00"> long iAudioLength)</text>
<text text-anchor="start" x="8" y="-1378" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CNormalizeAudio()</text>
<text text-anchor="start" x="8" y="-1367" font-family="Helvetica,sans-Serif" font-size="10.00">+ void normalizeBlock</text>
<text text-anchor="start" x="8" y="-1356" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfAudioBlock,</text>
<text text-anchor="start" x="8" y="-1345" font-family="Helvetica,sans-Serif" font-size="10.00"> long long iNumSamples)</text>
<text text-anchor="start" x="8" y="-1334" font-family="Helvetica,sans-Serif" font-size="10.00">+ static void normalizeSignal</text>
<text text-anchor="start" x="8" y="-1323" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfAudio, long long</text>
<text text-anchor="start" x="8" y="-1312" font-family="Helvetica,sans-Serif" font-size="10.00"> iNumSamples)</text>
<text text-anchor="start" x="8" y="-1301" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CNormalizeAudio()</text>
<text text-anchor="start" x="8" y="-1290" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CNormalizeAudio(const</text>
<text text-anchor="start" x="8" y="-1279" font-family="Helvetica,sans-Serif" font-size="10.00"> CNormalizeAudio &amp;that)</text>
<text text-anchor="start" x="8" y="-1268" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CNormalizeAudio &amp; operator</text>
<text text-anchor="start" x="8" y="-1257" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CNormalizeAudio &amp;c)</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node2 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node2</title>
<path fill="none" stroke="#404040" d="M81.57,-1249.67C90.36,-1160.22 110.92,-1035.34 159,-936 199.32,-852.69 266.08,-773.47 324.42,-713.76"/>
<polygon fill="none" stroke="#404040" points="324.53,-713.64 325.9,-706.56 332.96,-705.09 331.6,-712.17 324.53,-713.64"/>
<text text-anchor="middle" x="208.5" y="-910" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCNormalize</text>
</g>
<!-- Node4 -->
<g id="node4" class="node">
<title>Node4</title>
<g id="a_node4"><a xlink:href="a00529.xhtml" target="_top" xlink:title="forward declaration">
<polygon fill="white" stroke="black" points="168,-1151 168,-1582 328,-1582 328,-1151 168,-1151"/>
<text text-anchor="middle" x="248" y="-1570" font-family="Helvetica,sans-Serif" font-size="10.00">CBlockAudioIf</text>
<polyline fill="none" stroke="black" points="168,-1563 328,-1563 "/>
<text text-anchor="start" x="176" y="-1551" font-family="Helvetica,sans-Serif" font-size="10.00"># long long m_iNumBlocks</text>
<text text-anchor="start" x="176" y="-1540" font-family="Helvetica,sans-Serif" font-size="10.00"># long long m_iCurrBlock</text>
<text text-anchor="start" x="176" y="-1529" font-family="Helvetica,sans-Serif" font-size="10.00"># long long m_iAudioLength</text>
<text text-anchor="start" x="176" y="-1518" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iBlockLength</text>
<text text-anchor="start" x="176" y="-1507" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iNumChannels</text>
<text text-anchor="start" x="176" y="-1496" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iHopLength</text>
<text text-anchor="start" x="176" y="-1485" font-family="Helvetica,sans-Serif" font-size="10.00"># float m_fSampleRate</text>
<polyline fill="none" stroke="black" points="168,-1478 328,-1478 "/>
<text text-anchor="start" x="176" y="-1466" font-family="Helvetica,sans-Serif" font-size="10.00">+ long long getNumBlocks</text>
<text text-anchor="start" x="176" y="-1455" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="176" y="-1444" font-family="Helvetica,sans-Serif" font-size="10.00">+ long long getLengthInSamples</text>
<text text-anchor="start" x="176" y="-1433" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="176" y="-1422" font-family="Helvetica,sans-Serif" font-size="10.00">+ float getTimeStamp</text>
<text text-anchor="start" x="176" y="-1411" font-family="Helvetica,sans-Serif" font-size="10.00">(long long iBlockIdx)</text>
<text text-anchor="start" x="176" y="-1400" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual bool isEndOfData</text>
<text text-anchor="start" x="176" y="-1389" font-family="Helvetica,sans-Serif" font-size="10.00">() const =0</text>
<text text-anchor="start" x="176" y="-1378" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual int getNextBlock</text>
<text text-anchor="start" x="176" y="-1367" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfBlock, float</text>
<text text-anchor="start" x="176" y="-1356" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfTimeStampInS=0)=0</text>
<text text-anchor="start" x="176" y="-1345" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="176" y="-1334" font-family="Helvetica,sans-Serif" font-size="10.00">(CBlockAudioIf *&amp;pCInstance,</text>
<text text-anchor="start" x="176" y="-1323" font-family="Helvetica,sans-Serif" font-size="10.00"> CAudioFileIf *pCAudioFile,</text>
<text text-anchor="start" x="176" y="-1312" font-family="Helvetica,sans-Serif" font-size="10.00"> int iBlockLength, int iHopLength)</text>
<text text-anchor="start" x="176" y="-1301" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="176" y="-1290" font-family="Helvetica,sans-Serif" font-size="10.00">(CBlockAudioIf *&amp;pCInstance,</text>
<text text-anchor="start" x="176" y="-1279" font-family="Helvetica,sans-Serif" font-size="10.00"> const float *pfAudioBuff,</text>
<text text-anchor="start" x="176" y="-1268" font-family="Helvetica,sans-Serif" font-size="10.00"> long long iAudioLength, int</text>
<text text-anchor="start" x="176" y="-1257" font-family="Helvetica,sans-Serif" font-size="10.00"> iBlockLength, int iHopLength,</text>
<text text-anchor="start" x="176" y="-1246" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate)</text>
<text text-anchor="start" x="176" y="-1235" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="176" y="-1224" font-family="Helvetica,sans-Serif" font-size="10.00">(CBlockAudioIf *&amp;pCInstance)</text>
<text text-anchor="start" x="176" y="-1213" font-family="Helvetica,sans-Serif" font-size="10.00"># CBlockAudioIf()</text>
<text text-anchor="start" x="176" y="-1202" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CBlockAudioIf()</text>
<text text-anchor="start" x="176" y="-1191" font-family="Helvetica,sans-Serif" font-size="10.00"># CBlockAudioIf(const</text>
<text text-anchor="start" x="176" y="-1180" font-family="Helvetica,sans-Serif" font-size="10.00"> CBlockAudioIf &amp;that)</text>
<text text-anchor="start" x="176" y="-1169" font-family="Helvetica,sans-Serif" font-size="10.00"># CBlockAudioIf &amp; operator</text>
<text text-anchor="start" x="176" y="-1158" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CBlockAudioIf &amp;c)</text>
</a>
</g>
</g>
<!-- Node4&#45;&gt;Node2 -->
<g id="edge3" class="edge">
<title>Node4&#45;&gt;Node2</title>
<path fill="none" stroke="#404040" d="M288.07,-1150.98C302.12,-1082 318.94,-1005.46 337,-936 340.01,-924.41 343.19,-912.62 346.47,-900.74"/>
<polygon fill="none" stroke="#404040" points="346.57,-900.39 344.34,-893.53 349.8,-888.83 352.04,-895.68 346.57,-900.39"/>
<text text-anchor="middle" x="386.5" y="-910" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCBlockAudio</text>
</g>
<!-- Node5 -->
<g id="node5" class="node">
<title>Node5</title>
<g id="a_node5"><a xlink:href="a00457.xhtml" target="_top" xlink:title="class for computation of a feature from a block of data (e.g., time or magnitude spectrum)">
<polygon fill="white" stroke="black" points="346,-936.5 346,-1796.5 534,-1796.5 534,-936.5 346,-936.5"/>
<text text-anchor="middle" x="440" y="-1784.5" font-family="Helvetica,sans-Serif" font-size="10.00">CFeatureFromBlockIf</text>
<polyline fill="none" stroke="black" points="346,-1777.5 534,-1777.5 "/>
<text text-anchor="start" x="354" y="-1765.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static const float</text>
<text text-anchor="start" x="354" y="-1754.5" font-family="Helvetica,sans-Serif" font-size="10.00"> m_kfFloatThresh</text>
<text text-anchor="start" x="354" y="-1743.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CFeatureIf::Feature</text>
<text text-anchor="start" x="354" y="-1732.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t m_eFeatureIdx</text>
<text text-anchor="start" x="354" y="-1721.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iDataLength</text>
<text text-anchor="start" x="354" y="-1710.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float m_fSampleRate</text>
<text text-anchor="start" x="354" y="-1699.5" font-family="Helvetica,sans-Serif" font-size="10.00"># const std::map&lt; CFeature</text>
<text text-anchor="start" x="354" y="-1688.5" font-family="Helvetica,sans-Serif" font-size="10.00">If::Feature_t, std::function</text>
<text text-anchor="start" x="354" y="-1677.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; float(const float *, int,</text>
<text text-anchor="start" x="354" y="-1666.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float)&gt; &gt; m_DispatchMap</text>
<polyline fill="none" stroke="black" points="346,-1659.5 534,-1659.5 "/>
<text text-anchor="start" x="354" y="-1647.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual int getFeatureDimensions</text>
<text text-anchor="start" x="354" y="-1636.5" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="354" y="-1625.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CFeatureIf::Feature</text>
<text text-anchor="start" x="354" y="-1614.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t getFeatureIdx() const</text>
<text text-anchor="start" x="354" y="-1603.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Error_t compFeature</text>
<text text-anchor="start" x="354" y="-1592.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfFeature, const</text>
<text text-anchor="start" x="354" y="-1581.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfInput)</text>
<text text-anchor="start" x="354" y="-1570.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual bool hasAdditional</text>
<text text-anchor="start" x="354" y="-1559.5" font-family="Helvetica,sans-Serif" font-size="10.00">Param() const</text>
<text text-anchor="start" x="354" y="-1548.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Error_t setAdditional</text>
<text text-anchor="start" x="354" y="-1537.5" font-family="Helvetica,sans-Serif" font-size="10.00">Param(float fParamValue)</text>
<text text-anchor="start" x="354" y="-1526.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="354" y="-1515.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CFeatureFromBlockIf</text>
<text text-anchor="start" x="354" y="-1504.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *&amp;pCInstance, CFeatureIf</text>
<text text-anchor="start" x="354" y="-1493.5" font-family="Helvetica,sans-Serif" font-size="10.00">::Feature_t eFeatureIdx,</text>
<text text-anchor="start" x="354" y="-1482.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="354" y="-1471.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="354" y="-1460.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CFeatureFromBlockIf *&amp;pCInstance)</text>
<text text-anchor="start" x="354" y="-1449.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="354" y="-1438.5" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralCentroid(const</text>
<text text-anchor="start" x="354" y="-1427.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfMagSpec, int</text>
<text text-anchor="start" x="354" y="-1416.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="354" y="-1405.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="354" y="-1394.5" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralCrestFactor(const</text>
<text text-anchor="start" x="354" y="-1383.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfMagSpec, int iDataLength,</text>
<text text-anchor="start" x="354" y="-1372.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate=1.F)</text>
<text text-anchor="start" x="354" y="-1361.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="354" y="-1350.5" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralDecrease(const</text>
<text text-anchor="start" x="354" y="-1339.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfMagSpec, int</text>
<text text-anchor="start" x="354" y="-1328.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="354" y="-1317.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="354" y="-1306.5" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralFlatness(const</text>
<text text-anchor="start" x="354" y="-1295.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfMagSpec, int</text>
<text text-anchor="start" x="354" y="-1284.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="354" y="-1273.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="354" y="-1262.5" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralFlux(const float</text>
<text text-anchor="start" x="354" y="-1251.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfMagSpec, const float</text>
<text text-anchor="start" x="354" y="-1240.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfPrevSpec, int iDataLength,</text>
<text text-anchor="start" x="354" y="-1229.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate=1.F)</text>
<text text-anchor="start" x="354" y="-1218.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="354" y="-1207.5" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralKurtosis(const</text>
<text text-anchor="start" x="354" y="-1196.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfMagSpec, int</text>
<text text-anchor="start" x="354" y="-1185.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="354" y="-1174.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="354" y="-1163.5" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralRolloff(const</text>
<text text-anchor="start" x="354" y="-1152.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfMagSpec, int</text>
<text text-anchor="start" x="354" y="-1141.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iDataLength, float fSampleRate</text>
<text text-anchor="start" x="354" y="-1130.5" font-family="Helvetica,sans-Serif" font-size="10.00">=1.F, float fKappa=.85F)</text>
<text text-anchor="start" x="354" y="-1119.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="354" y="-1108.5" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralSkewness(const</text>
<text text-anchor="start" x="354" y="-1097.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfMagSpec, int</text>
<text text-anchor="start" x="354" y="-1086.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="354" y="-1075.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 8 more...</text>
<text text-anchor="start" x="354" y="-1064.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CFeatureFromBlockIf()</text>
<text text-anchor="start" x="354" y="-1053.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CFeatureFromBlockIf</text>
<text text-anchor="start" x="354" y="-1042.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CFeatureIf::Feature</text>
<text text-anchor="start" x="354" y="-1031.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t eFeatureIdx, int iDataLength,</text>
<text text-anchor="start" x="354" y="-1020.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate)</text>
<text text-anchor="start" x="354" y="-1009.5" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CFeatureFromBlockIf()</text>
<text text-anchor="start" x="354" y="-998.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CFeatureFromBlockIf</text>
<text text-anchor="start" x="354" y="-987.5" font-family="Helvetica,sans-Serif" font-size="10.00">(const CFeatureFromBlockIf</text>
<text text-anchor="start" x="354" y="-976.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;that)</text>
<text text-anchor="start" x="354" y="-965.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CFeatureFromBlockIf</text>
<text text-anchor="start" x="354" y="-954.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp; operator=(const CFeature</text>
<text text-anchor="start" x="354" y="-943.5" font-family="Helvetica,sans-Serif" font-size="10.00">FromBlockIf &amp;c)</text>
</a>
</g>
</g>
<!-- Node5&#45;&gt;Node2 -->
<g id="edge4" class="edge">
<title>Node5&#45;&gt;Node2</title>
<path fill="none" stroke="#404040" d="M440,-936.4C440,-924.48 440,-912.64 440,-900.91"/>
<polygon fill="none" stroke="#404040" points="440,-900.74 436,-894.74 440,-888.74 444,-894.74 440,-900.74"/>
<text text-anchor="middle" x="473.5" y="-910" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCFeature</text>
</g>
<!-- Node6 -->
<g id="node6" class="node">
<title>Node6</title>
<g id="a_node6"><a xlink:href="a00461.xhtml" target="_top" xlink:title="class for FFT computation with windowing">
<polygon fill="white" stroke="black" points="552,-1123.5 552,-1609.5 740,-1609.5 740,-1123.5 552,-1123.5"/>
<text text-anchor="middle" x="646" y="-1597.5" font-family="Helvetica,sans-Serif" font-size="10.00">CFft</text>
<polyline fill="none" stroke="black" points="552,-1590.5 740,-1590.5 "/>
<text text-anchor="start" x="560" y="-1578.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_pfProcessBuff</text>
<text text-anchor="start" x="560" y="-1567.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_pfWindowBuff</text>
<text text-anchor="start" x="560" y="-1556.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iDataLength</text>
<text text-anchor="start" x="560" y="-1545.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iFftLength</text>
<text text-anchor="start" x="560" y="-1534.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Windowing_t m_ePrePostWindowOpt</text>
<text text-anchor="start" x="560" y="-1523.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; bool m_bIsInitialized</text>
<text text-anchor="start" x="560" y="-1512.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; static const float m_Pi</text>
<text text-anchor="start" x="560" y="-1501.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; static const float</text>
<text text-anchor="start" x="560" y="-1490.5" font-family="Helvetica,sans-Serif" font-size="10.00"> m_Pi2</text>
<polyline fill="none" stroke="black" points="552,-1483.5 740,-1483.5 "/>
<text text-anchor="start" x="560" y="-1471.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CFft()</text>
<text text-anchor="start" x="560" y="-1460.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CFft()</text>
<text text-anchor="start" x="560" y="-1449.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t init(int iBlockLength,</text>
<text text-anchor="start" x="560" y="-1438.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iZeroPadFactor=1, WindowFunction</text>
<text text-anchor="start" x="560" y="-1427.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t eWindow=kWindowHann, Windowing</text>
<text text-anchor="start" x="560" y="-1416.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t eWindowing=kPreWindow)</text>
<text text-anchor="start" x="560" y="-1405.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t reset()</text>
<text text-anchor="start" x="560" y="-1394.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t overrideWindow</text>
<text text-anchor="start" x="560" y="-1383.5" font-family="Helvetica,sans-Serif" font-size="10.00">(const float *pfNewWindow)</text>
<text text-anchor="start" x="560" y="-1372.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getWindow(float</text>
<text text-anchor="start" x="560" y="-1361.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfWindow) const</text>
<text text-anchor="start" x="560" y="-1350.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compFft(complex</text>
<text text-anchor="start" x="560" y="-1339.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t *pfSpectrum, const</text>
<text text-anchor="start" x="560" y="-1328.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfInput)</text>
<text text-anchor="start" x="560" y="-1317.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compInvFft</text>
<text text-anchor="start" x="560" y="-1306.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfOutput, const</text>
<text text-anchor="start" x="560" y="-1295.5" font-family="Helvetica,sans-Serif" font-size="10.00"> complex_t *pfSpectrum)</text>
<text text-anchor="start" x="560" y="-1284.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getMagnitude</text>
<text text-anchor="start" x="560" y="-1273.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfMag, const</text>
<text text-anchor="start" x="560" y="-1262.5" font-family="Helvetica,sans-Serif" font-size="10.00"> complex_t *pfSpectrum)</text>
<text text-anchor="start" x="560" y="-1251.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const</text>
<text text-anchor="start" x="560" y="-1240.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getPhase(float</text>
<text text-anchor="start" x="560" y="-1229.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfPhase, const complex</text>
<text text-anchor="start" x="560" y="-1218.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t *pfSpectrum) const</text>
<text text-anchor="start" x="560" y="-1207.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 7 more...</text>
<text text-anchor="start" x="560" y="-1196.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CFft(const CFft &amp;that)</text>
<text text-anchor="start" x="560" y="-1185.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CFft &amp; operator=(const</text>
<text text-anchor="start" x="560" y="-1174.5" font-family="Helvetica,sans-Serif" font-size="10.00"> CFft &amp;c)</text>
<text text-anchor="start" x="560" y="-1163.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Error_t allocMemory_()</text>
<text text-anchor="start" x="560" y="-1152.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Error_t freeMemory_()</text>
<text text-anchor="start" x="560" y="-1141.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Error_t computeWindow</text>
<text text-anchor="start" x="560" y="-1130.5" font-family="Helvetica,sans-Serif" font-size="10.00">_(WindowFunction_t eWindow)</text>
</a>
</g>
</g>
<!-- Node6&#45;&gt;Node2 -->
<g id="edge5" class="edge">
<title>Node6&#45;&gt;Node2</title>
<path fill="none" stroke="#404040" d="M591.03,-1123.4C576.25,-1062.05 559.71,-996.42 543,-936 539.74,-924.23 536.35,-912.25 532.86,-900.16"/>
<polygon fill="none" stroke="#404040" points="532.84,-900.06 527.32,-895.42 529.49,-888.54 535.01,-893.19 532.84,-900.06"/>
<text text-anchor="middle" x="558" y="-910" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCFft</text>
</g>
<!-- Node7 -->
<g id="node7" class="node">
<title>Node7</title>
<g id="a_node7"><a xlink:href="a00497.xhtml" target="_top" xlink:title="computation of key profile distance">
<polygon fill="white" stroke="black" points="629.5,-534.5 629.5,-679.5 778.5,-679.5 778.5,-534.5 629.5,-534.5"/>
<text text-anchor="middle" x="704" y="-667.5" font-family="Helvetica,sans-Serif" font-size="10.00">CKeyFromChroma</text>
<polyline fill="none" stroke="black" points="629.5,-660.5 778.5,-660.5 "/>
<text text-anchor="start" x="637.5" y="-648.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; const float m_aafKeyProfiles</text>
<polyline fill="none" stroke="black" points="629.5,-641.5 778.5,-641.5 "/>
<text text-anchor="start" x="637.5" y="-629.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CKeyFromChroma(void)</text>
<text text-anchor="start" x="637.5" y="-618.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CKeyFromChroma</text>
<text text-anchor="start" x="637.5" y="-607.5" font-family="Helvetica,sans-Serif" font-size="10.00">(void)</text>
<text text-anchor="start" x="637.5" y="-596.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ int getKey(const float</text>
<text text-anchor="start" x="637.5" y="-585.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfQuery)</text>
<text text-anchor="start" x="637.5" y="-574.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CKeyFromChroma(const</text>
<text text-anchor="start" x="637.5" y="-563.5" font-family="Helvetica,sans-Serif" font-size="10.00"> CKeyFromChroma &amp;that)</text>
<text text-anchor="start" x="637.5" y="-552.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CKeyFromChroma &amp; operator</text>
<text text-anchor="start" x="637.5" y="-541.5" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CKeyFromChroma &amp;c)</text>
</a>
</g>
</g>
<!-- Node7&#45;&gt;Node1 -->
<g id="edge6" class="edge">
<title>Node7&#45;&gt;Node1</title>
<path fill="none" stroke="#404040" d="M695.34,-534.39C685.95,-470.2 667.85,-374.35 636,-296 631.36,-284.58 625.91,-273.06 620,-261.71"/>
<polygon fill="none" stroke="#404040" points="619.87,-261.48 613.51,-258.08 614.2,-250.91 620.56,-254.3 619.87,-261.48"/>
<text text-anchor="middle" x="692" y="-299" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCKeyFromChroma</text>
</g>
<!-- Node8 -->
<g id="node8" class="node">
<title>Node8</title>
<g id="a_node8"><a xlink:href="a00477.xhtml" target="_top" xlink:title=" ">
<polygon fill="white" stroke="black" points="758.5,-1184 758.5,-1549 891.5,-1549 891.5,-1184 758.5,-1184"/>
<text text-anchor="middle" x="825" y="-1537" font-family="Helvetica,sans-Serif" font-size="10.00">CRingBuffer&lt; float &gt;</text>
<polyline fill="none" stroke="black" points="758.5,-1530 891.5,-1530 "/>
<text text-anchor="start" x="766.5" y="-1518" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iBuffLength</text>
<text text-anchor="start" x="766.5" y="-1507" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iReadIdx</text>
<text text-anchor="start" x="766.5" y="-1496" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iWriteIdx</text>
<text text-anchor="start" x="766.5" y="-1485" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_ptBuff</text>
<polyline fill="none" stroke="black" points="758.5,-1478 891.5,-1478 "/>
<text text-anchor="start" x="766.5" y="-1466" font-family="Helvetica,sans-Serif" font-size="10.00">+ CRingBuffer(int iBuffer</text>
<text text-anchor="start" x="766.5" y="-1455" font-family="Helvetica,sans-Serif" font-size="10.00">LengthInSamples)</text>
<text text-anchor="start" x="766.5" y="-1444" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CRingBuffer()</text>
<text text-anchor="start" x="766.5" y="-1433" font-family="Helvetica,sans-Serif" font-size="10.00">+ void putPostInc(float</text>
<text text-anchor="start" x="766.5" y="-1422" font-family="Helvetica,sans-Serif" font-size="10.00"> tNewValue)</text>
<text text-anchor="start" x="766.5" y="-1411" font-family="Helvetica,sans-Serif" font-size="10.00">+ void putPostInc(const</text>
<text text-anchor="start" x="766.5" y="-1400" font-family="Helvetica,sans-Serif" font-size="10.00"> float *ptNewBuff, int</text>
<text text-anchor="start" x="766.5" y="-1389" font-family="Helvetica,sans-Serif" font-size="10.00"> iLength)</text>
<text text-anchor="start" x="766.5" y="-1378" font-family="Helvetica,sans-Serif" font-size="10.00">+ void put(float tNewValue)</text>
<text text-anchor="start" x="766.5" y="-1367" font-family="Helvetica,sans-Serif" font-size="10.00">+ void put(const float</text>
<text text-anchor="start" x="766.5" y="-1356" font-family="Helvetica,sans-Serif" font-size="10.00"> *ptNewBuff, int iLength)</text>
<text text-anchor="start" x="766.5" y="-1345" font-family="Helvetica,sans-Serif" font-size="10.00">+ float getPostInc()</text>
<text text-anchor="start" x="766.5" y="-1334" font-family="Helvetica,sans-Serif" font-size="10.00">+ void getPostInc(float</text>
<text text-anchor="start" x="766.5" y="-1323" font-family="Helvetica,sans-Serif" font-size="10.00"> *ptBuff, int iLength)</text>
<text text-anchor="start" x="766.5" y="-1312" font-family="Helvetica,sans-Serif" font-size="10.00">+ float get(float fOffset</text>
<text text-anchor="start" x="766.5" y="-1301" font-family="Helvetica,sans-Serif" font-size="10.00">=0) const</text>
<text text-anchor="start" x="766.5" y="-1290" font-family="Helvetica,sans-Serif" font-size="10.00">+ void get(float *ptBuff,</text>
<text text-anchor="start" x="766.5" y="-1279" font-family="Helvetica,sans-Serif" font-size="10.00"> int iLength) const</text>
<text text-anchor="start" x="766.5" y="-1268" font-family="Helvetica,sans-Serif" font-size="10.00">and 7 more...</text>
<text text-anchor="start" x="766.5" y="-1257" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CRingBuffer()</text>
<text text-anchor="start" x="766.5" y="-1246" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CRingBuffer(const</text>
<text text-anchor="start" x="766.5" y="-1235" font-family="Helvetica,sans-Serif" font-size="10.00"> CRingBuffer &amp;that)</text>
<text text-anchor="start" x="766.5" y="-1224" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CRingBuffer &amp; operator</text>
<text text-anchor="start" x="766.5" y="-1213" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CRingBuffer &amp;c)</text>
<text text-anchor="start" x="766.5" y="-1202" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; void incIdx(int &amp;iIdx,</text>
<text text-anchor="start" x="766.5" y="-1191" font-family="Helvetica,sans-Serif" font-size="10.00"> int iOffset=1)</text>
</a>
</g>
</g>
<!-- Node8&#45;&gt;Node7 -->
<g id="edge7" class="edge">
<title>Node8&#45;&gt;Node7</title>
<path fill="none" stroke="#404040" d="M795.94,-1183.58C771.02,-1027.57 736.25,-809.87 717.41,-691.95"/>
<polygon fill="none" stroke="#404040" points="717.36,-691.67 712.47,-686.37 715.47,-679.82 720.37,-685.11 717.36,-691.67"/>
<text text-anchor="middle" x="787.5" y="-910" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;m_apCRingBuff</text>
</g>
<!-- Node9 -->
<g id="node9" class="node">
<title>Node9</title>
<g id="a_node9"><a xlink:href="a00477.xhtml" target="_top" xlink:title="implement a circular buffer of type T">
<polygon fill="white" stroke="black" points="747.5,-1844.5 747.5,-2187.5 902.5,-2187.5 902.5,-1844.5 747.5,-1844.5"/>
<text text-anchor="middle" x="825" y="-2175.5" font-family="Helvetica,sans-Serif" font-size="10.00">CRingBuffer&lt; T &gt;</text>
<polyline fill="none" stroke="black" points="747.5,-2168.5 902.5,-2168.5 "/>
<text text-anchor="start" x="755.5" y="-2156.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iBuffLength</text>
<text text-anchor="start" x="755.5" y="-2145.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iReadIdx</text>
<text text-anchor="start" x="755.5" y="-2134.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iWriteIdx</text>
<text text-anchor="start" x="755.5" y="-2123.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; T * m_ptBuff</text>
<polyline fill="none" stroke="black" points="747.5,-2116.5 902.5,-2116.5 "/>
<text text-anchor="start" x="755.5" y="-2104.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CRingBuffer(int iBuffer</text>
<text text-anchor="start" x="755.5" y="-2093.5" font-family="Helvetica,sans-Serif" font-size="10.00">LengthInSamples)</text>
<text text-anchor="start" x="755.5" y="-2082.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CRingBuffer()</text>
<text text-anchor="start" x="755.5" y="-2071.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void putPostInc(T tNewValue)</text>
<text text-anchor="start" x="755.5" y="-2060.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void putPostInc(const</text>
<text text-anchor="start" x="755.5" y="-2049.5" font-family="Helvetica,sans-Serif" font-size="10.00"> T *ptNewBuff, int iLength)</text>
<text text-anchor="start" x="755.5" y="-2038.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void put(T tNewValue)</text>
<text text-anchor="start" x="755.5" y="-2027.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void put(const T *ptNewBuff,</text>
<text text-anchor="start" x="755.5" y="-2016.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iLength)</text>
<text text-anchor="start" x="755.5" y="-2005.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ T getPostInc()</text>
<text text-anchor="start" x="755.5" y="-1994.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void getPostInc(T *ptBuff,</text>
<text text-anchor="start" x="755.5" y="-1983.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iLength)</text>
<text text-anchor="start" x="755.5" y="-1972.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ T get(float fOffset</text>
<text text-anchor="start" x="755.5" y="-1961.5" font-family="Helvetica,sans-Serif" font-size="10.00">=0) const</text>
<text text-anchor="start" x="755.5" y="-1950.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void get(T *ptBuff,</text>
<text text-anchor="start" x="755.5" y="-1939.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iLength) const</text>
<text text-anchor="start" x="755.5" y="-1928.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 7 more...</text>
<text text-anchor="start" x="755.5" y="-1917.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CRingBuffer()</text>
<text text-anchor="start" x="755.5" y="-1906.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CRingBuffer(const</text>
<text text-anchor="start" x="755.5" y="-1895.5" font-family="Helvetica,sans-Serif" font-size="10.00"> CRingBuffer &amp;that)</text>
<text text-anchor="start" x="755.5" y="-1884.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CRingBuffer &amp; operator</text>
<text text-anchor="start" x="755.5" y="-1873.5" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CRingBuffer &amp;c)</text>
<text text-anchor="start" x="755.5" y="-1862.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; void incIdx(int &amp;iIdx,</text>
<text text-anchor="start" x="755.5" y="-1851.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iOffset=1)</text>
</a>
</g>
</g>
<!-- Node9&#45;&gt;Node8 -->
<g id="edge8" class="edge">
<title>Node9&#45;&gt;Node8</title>
<path fill="none" stroke="orange" d="M825,-1834.24C825,-1745.22 825,-1638.14 825,-1549.01"/>
<polygon fill="orange" stroke="orange" points="821.5,-1834.45 825,-1844.45 828.5,-1834.45 821.5,-1834.45"/>
<text text-anchor="middle" x="843.5" y="-1818" font-family="Helvetica,sans-Serif" font-size="10.00"> &lt; float &gt;</text>
</g>
</g>
</svg>
