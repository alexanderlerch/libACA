<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.4"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ACA: CRingBuffer&lt; T &gt; Class Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">ACA<span id="projectnumber">&#160;0.3.1</span>
   </div>
   <div id="projectbrief">Example Code for Audio Content Analysis</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.4 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search",'Search','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('a00490.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pri-methods">Private Member Functions</a> &#124;
<a href="#pri-attribs">Private Attributes</a> &#124;
<a href="a00487.xhtml">List of all members</a>  </div>
  <div class="headertitle"><div class="title">CRingBuffer&lt; T &gt; Class Template Reference</div></div>
</div><!--header-->
<div class="contents">

<p>implement a circular buffer of type T  
 <a href="a00490.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="a00146_source.xhtml">RingBuffer.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for CRingBuffer&lt; T &gt;:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00489.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<div class="dynheader">
Collaboration diagram for CRingBuffer&lt; T &gt;:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00488.svg" width="218" height="470"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a0e007e130e9190892274dde988e40a59"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00490.xhtml#a0e007e130e9190892274dde988e40a59">CRingBuffer</a> (int iBufferLengthInSamples)</td></tr>
<tr class="separator:a0e007e130e9190892274dde988e40a59"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a97c8bb4689fcef14d595e897ea72cba9"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00490.xhtml#a97c8bb4689fcef14d595e897ea72cba9">~CRingBuffer</a> ()</td></tr>
<tr class="separator:a97c8bb4689fcef14d595e897ea72cba9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2bd848181a662312600bc590b9040d2a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00490.xhtml#a2bd848181a662312600bc590b9040d2a">putPostInc</a> (T tNewValue)</td></tr>
<tr class="separator:a2bd848181a662312600bc590b9040d2a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a21568ce259aa8e97ea3f3d7aec4828b7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00490.xhtml#a21568ce259aa8e97ea3f3d7aec4828b7">putPostInc</a> (const T *ptNewBuff, int iLength)</td></tr>
<tr class="separator:a21568ce259aa8e97ea3f3d7aec4828b7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a702eb6314380082795f735df74a816c9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00490.xhtml#a702eb6314380082795f735df74a816c9">put</a> (T tNewValue)</td></tr>
<tr class="separator:a702eb6314380082795f735df74a816c9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a15f6463cfcafd855157d33d253011dc7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00490.xhtml#a15f6463cfcafd855157d33d253011dc7">put</a> (const T *ptNewBuff, int iLength)</td></tr>
<tr class="separator:a15f6463cfcafd855157d33d253011dc7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0f25eadaafa6a2e7bfe2f9ef6af1104b"><td class="memItemLeft" align="right" valign="top">T&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00490.xhtml#a0f25eadaafa6a2e7bfe2f9ef6af1104b">getPostInc</a> ()</td></tr>
<tr class="separator:a0f25eadaafa6a2e7bfe2f9ef6af1104b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeb86fd660cbaadd93a9d89dc529d5b76"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00490.xhtml#aeb86fd660cbaadd93a9d89dc529d5b76">getPostInc</a> (T *ptBuff, int iLength)</td></tr>
<tr class="separator:aeb86fd660cbaadd93a9d89dc529d5b76"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a23d9877584d712c17811a9833835605e"><td class="memItemLeft" align="right" valign="top">T&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00490.xhtml#a23d9877584d712c17811a9833835605e">get</a> (float fOffset=0) const</td></tr>
<tr class="separator:a23d9877584d712c17811a9833835605e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a047d589f30b02374de2aabdbc6892912"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00490.xhtml#a047d589f30b02374de2aabdbc6892912">get</a> (T *ptBuff, int iLength) const</td></tr>
<tr class="separator:a047d589f30b02374de2aabdbc6892912"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a716fb4acc03355a73cc7d96f3ceb2995"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00490.xhtml#a716fb4acc03355a73cc7d96f3ceb2995">reset</a> ()</td></tr>
<tr class="separator:a716fb4acc03355a73cc7d96f3ceb2995"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8173fd5abe5c4ff4e78ffad4b14ea88b"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00490.xhtml#a8173fd5abe5c4ff4e78ffad4b14ea88b">getWriteIdx</a> () const</td></tr>
<tr class="separator:a8173fd5abe5c4ff4e78ffad4b14ea88b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a408e0ec5855fca27bd2dc5862fa913ab"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00490.xhtml#a408e0ec5855fca27bd2dc5862fa913ab">setWriteIdx</a> (int iNewWriteIdx)</td></tr>
<tr class="separator:a408e0ec5855fca27bd2dc5862fa913ab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab18fac37cac4e8bde0419fe04845ac9d"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00490.xhtml#ab18fac37cac4e8bde0419fe04845ac9d">getReadIdx</a> () const</td></tr>
<tr class="separator:ab18fac37cac4e8bde0419fe04845ac9d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af265a6322c4b1584c880def00d31e663"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00490.xhtml#af265a6322c4b1584c880def00d31e663">setReadIdx</a> (int iNewReadIdx)</td></tr>
<tr class="separator:af265a6322c4b1584c880def00d31e663"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa04a6cb30d486a6ddd5f7929db1eef9d"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00490.xhtml#aa04a6cb30d486a6ddd5f7929db1eef9d">getNumValuesInBuffer</a> () const</td></tr>
<tr class="separator:aa04a6cb30d486a6ddd5f7929db1eef9d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0ec2bd62a49e5078d3ca0a03fa123c9e"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00490.xhtml#a0ec2bd62a49e5078d3ca0a03fa123c9e">getLength</a> () const</td></tr>
<tr class="separator:a0ec2bd62a49e5078d3ca0a03fa123c9e"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pri-methods" name="pri-methods"></a>
Private Member Functions</h2></td></tr>
<tr class="memitem:a16631e41f7e79a0da11a5246dfcade5c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00490.xhtml#a16631e41f7e79a0da11a5246dfcade5c">CRingBuffer</a> ()</td></tr>
<tr class="separator:a16631e41f7e79a0da11a5246dfcade5c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:add36d66b9e45b08cb8bb11b1fbc83e1b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00490.xhtml#add36d66b9e45b08cb8bb11b1fbc83e1b">CRingBuffer</a> (const <a class="el" href="a00490.xhtml">CRingBuffer</a> &amp;that)</td></tr>
<tr class="separator:add36d66b9e45b08cb8bb11b1fbc83e1b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a76a236cd8dcd7e464abd9416dd445f2c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00490.xhtml">CRingBuffer</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00490.xhtml#a76a236cd8dcd7e464abd9416dd445f2c">operator=</a> (const <a class="el" href="a00490.xhtml">CRingBuffer</a> &amp;c)</td></tr>
<tr class="separator:a76a236cd8dcd7e464abd9416dd445f2c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a67eddecd2a880c52c80093774bc37c24"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00490.xhtml#a67eddecd2a880c52c80093774bc37c24">incIdx</a> (int &amp;iIdx, int iOffset=1)</td></tr>
<tr class="separator:a67eddecd2a880c52c80093774bc37c24"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pri-attribs" name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr class="memitem:a3f35b48aa5632a863a85d09de775fb0b"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00490.xhtml#a3f35b48aa5632a863a85d09de775fb0b">m_iBuffLength</a> = 0</td></tr>
<tr class="memdesc:a3f35b48aa5632a863a85d09de775fb0b"><td class="mdescLeft">&#160;</td><td class="mdescRight">length of the internal buffer  <a href="a00490.xhtml#a3f35b48aa5632a863a85d09de775fb0b">More...</a><br /></td></tr>
<tr class="separator:a3f35b48aa5632a863a85d09de775fb0b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a17237cdeda2b10e77e1815def129debd"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00490.xhtml#a17237cdeda2b10e77e1815def129debd">m_iReadIdx</a> = 0</td></tr>
<tr class="memdesc:a17237cdeda2b10e77e1815def129debd"><td class="mdescLeft">&#160;</td><td class="mdescRight">current read index  <a href="a00490.xhtml#a17237cdeda2b10e77e1815def129debd">More...</a><br /></td></tr>
<tr class="separator:a17237cdeda2b10e77e1815def129debd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad2bfd60fbefec3403b6a2a420b8695a5"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00490.xhtml#ad2bfd60fbefec3403b6a2a420b8695a5">m_iWriteIdx</a> = 0</td></tr>
<tr class="memdesc:ad2bfd60fbefec3403b6a2a420b8695a5"><td class="mdescLeft">&#160;</td><td class="mdescRight">current write index  <a href="a00490.xhtml#ad2bfd60fbefec3403b6a2a420b8695a5">More...</a><br /></td></tr>
<tr class="separator:ad2bfd60fbefec3403b6a2a420b8695a5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6c82ffd2218093776e8952e15309c51e"><td class="memItemLeft" align="right" valign="top">T *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00490.xhtml#a6c82ffd2218093776e8952e15309c51e">m_ptBuff</a> = 0</td></tr>
<tr class="memdesc:a6c82ffd2218093776e8952e15309c51e"><td class="mdescLeft">&#160;</td><td class="mdescRight">data buffer  <a href="a00490.xhtml#a6c82ffd2218093776e8952e15309c51e">More...</a><br /></td></tr>
<tr class="separator:a6c82ffd2218093776e8952e15309c51e"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><div class="compoundTemplParams">template&lt;class T&gt;<br />
class CRingBuffer&lt; T &gt;</div><p >implement a circular buffer of type T </p>

<p class="definition">Definition at line <a class="el" href="a00146_source.xhtml#l00013">13</a> of file <a class="el" href="a00146_source.xhtml">RingBuffer.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a0e007e130e9190892274dde988e40a59" name="a0e007e130e9190892274dde988e40a59"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0e007e130e9190892274dde988e40a59">&#9670;&nbsp;</a></span>CRingBuffer() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00490.xhtml">CRingBuffer</a>&lt; T &gt;<a class="el" href="a00490.xhtml">::CRingBuffer</a> </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>iBufferLengthInSamples</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">explicit</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="a00146_source.xhtml#l00016">16</a> of file <a class="el" href="a00146_source.xhtml">RingBuffer.h</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   16</span>                                                     :</div>
<div class="line"><span class="lineno">   17</span>        <a class="code hl_variable" href="a00490.xhtml#a3f35b48aa5632a863a85d09de775fb0b">m_iBuffLength</a>(iBufferLengthInSamples)</div>
<div class="line"><span class="lineno">   18</span>    {</div>
<div class="line"><span class="lineno">   19</span>        assert(iBufferLengthInSamples &gt; 0);</div>
<div class="line"><span class="lineno">   20</span> </div>
<div class="line"><span class="lineno">   21</span>        <a class="code hl_variable" href="a00490.xhtml#a6c82ffd2218093776e8952e15309c51e">m_ptBuff</a> = <span class="keyword">new</span> T[<a class="code hl_variable" href="a00490.xhtml#a3f35b48aa5632a863a85d09de775fb0b">m_iBuffLength</a>];</div>
<div class="line"><span class="lineno">   22</span>        <a class="code hl_function" href="a00490.xhtml#a716fb4acc03355a73cc7d96f3ceb2995">reset</a>();</div>
<div class="line"><span class="lineno">   23</span>    }</div>
<div class="ttc" id="aa00490_xhtml_a3f35b48aa5632a863a85d09de775fb0b"><div class="ttname"><a href="a00490.xhtml#a3f35b48aa5632a863a85d09de775fb0b">CRingBuffer::m_iBuffLength</a></div><div class="ttdeci">int m_iBuffLength</div><div class="ttdoc">length of the internal buffer</div><div class="ttdef"><b>Definition:</b> <a href="a00146_source.xhtml#l00206">RingBuffer.h:206</a></div></div>
<div class="ttc" id="aa00490_xhtml_a6c82ffd2218093776e8952e15309c51e"><div class="ttname"><a href="a00490.xhtml#a6c82ffd2218093776e8952e15309c51e">CRingBuffer::m_ptBuff</a></div><div class="ttdeci">T * m_ptBuff</div><div class="ttdoc">data buffer</div><div class="ttdef"><b>Definition:</b> <a href="a00146_source.xhtml#l00210">RingBuffer.h:210</a></div></div>
<div class="ttc" id="aa00490_xhtml_a716fb4acc03355a73cc7d96f3ceb2995"><div class="ttname"><a href="a00490.xhtml#a716fb4acc03355a73cc7d96f3ceb2995">CRingBuffer::reset</a></div><div class="ttdeci">void reset()</div><div class="ttdef"><b>Definition:</b> <a href="a00146_source.xhtml#l00137">RingBuffer.h:137</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00146_source.xhtml#l00206">CRingBuffer&lt; T &gt;::m_iBuffLength</a>, <a class="el" href="a00146_source.xhtml#l00210">CRingBuffer&lt; T &gt;::m_ptBuff</a>, and <a class="el" href="a00146_source.xhtml#l00137">CRingBuffer&lt; T &gt;::reset()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00490_a0e007e130e9190892274dde988e40a59_cgraph.svg" width="352" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a97c8bb4689fcef14d595e897ea72cba9" name="a97c8bb4689fcef14d595e897ea72cba9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a97c8bb4689fcef14d595e897ea72cba9">&#9670;&nbsp;</a></span>~CRingBuffer()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="a00490.xhtml">CRingBuffer</a>&lt; T &gt;::~<a class="el" href="a00490.xhtml">CRingBuffer</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="a00146_source.xhtml#l00025">25</a> of file <a class="el" href="a00146_source.xhtml">RingBuffer.h</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   26</span>    {</div>
<div class="line"><span class="lineno">   27</span>        <span class="keyword">delete</span>[] <a class="code hl_variable" href="a00490.xhtml#a6c82ffd2218093776e8952e15309c51e">m_ptBuff</a>;</div>
<div class="line"><span class="lineno">   28</span>        <a class="code hl_variable" href="a00490.xhtml#a6c82ffd2218093776e8952e15309c51e">m_ptBuff</a> = 0;</div>
<div class="line"><span class="lineno">   29</span>    }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00146_source.xhtml#l00210">CRingBuffer&lt; T &gt;::m_ptBuff</a>.</p>

</div>
</div>
<a id="a16631e41f7e79a0da11a5246dfcade5c" name="a16631e41f7e79a0da11a5246dfcade5c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a16631e41f7e79a0da11a5246dfcade5c">&#9670;&nbsp;</a></span>CRingBuffer() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00490.xhtml">CRingBuffer</a>&lt; T &gt;<a class="el" href="a00490.xhtml">::CRingBuffer</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="add36d66b9e45b08cb8bb11b1fbc83e1b" name="add36d66b9e45b08cb8bb11b1fbc83e1b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#add36d66b9e45b08cb8bb11b1fbc83e1b">&#9670;&nbsp;</a></span>CRingBuffer() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00490.xhtml">CRingBuffer</a>&lt; T &gt;<a class="el" href="a00490.xhtml">::CRingBuffer</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="a00490.xhtml">CRingBuffer</a>&lt; T &gt; &amp;&#160;</td>
          <td class="paramname"><em>that</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a23d9877584d712c17811a9833835605e" name="a23d9877584d712c17811a9833835605e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a23d9877584d712c17811a9833835605e">&#9670;&nbsp;</a></span>get() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">T <a class="el" href="a00490.xhtml">CRingBuffer</a>&lt; T &gt;::get </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fOffset</em> = <code>0</code></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p >return the value at the current read index </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">fOffset</td><td>read at offset from read index </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>float the value from the read index </dd></dl>

<p class="definition">Definition at line <a class="el" href="a00146_source.xhtml#l00098">98</a> of file <a class="el" href="a00146_source.xhtml">RingBuffer.h</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   99</span>    {</div>
<div class="line"><span class="lineno">  100</span>        <span class="keywordflow">if</span> (fOffset == 0)</div>
<div class="line"><span class="lineno">  101</span>            <span class="keywordflow">return</span> <a class="code hl_variable" href="a00490.xhtml#a6c82ffd2218093776e8952e15309c51e">m_ptBuff</a>[<a class="code hl_variable" href="a00490.xhtml#a17237cdeda2b10e77e1815def129debd">m_iReadIdx</a>];</div>
<div class="line"><span class="lineno">  102</span>        <span class="keywordflow">else</span></div>
<div class="line"><span class="lineno">  103</span>        {</div>
<div class="line"><span class="lineno">  104</span> </div>
<div class="line"><span class="lineno">  105</span>            <span class="comment">// compute fraction for linear interpolation </span></div>
<div class="line"><span class="lineno">  106</span>            <span class="keywordtype">int</span>     iOffset = <span class="keyword">static_cast&lt;</span><span class="keywordtype">int</span><span class="keyword">&gt;</span>(std::floor(fOffset));</div>
<div class="line"><span class="lineno">  107</span>            <span class="keywordtype">float</span>   fFrac = fOffset - iOffset;</div>
<div class="line"><span class="lineno">  108</span>            <span class="keywordtype">int</span>     iRead = <a class="code hl_variable" href="a00490.xhtml#a17237cdeda2b10e77e1815def129debd">m_iReadIdx</a> + iOffset;</div>
<div class="line"><span class="lineno">  109</span>            <span class="keywordflow">while</span> (iRead &gt; <a class="code hl_variable" href="a00490.xhtml#a3f35b48aa5632a863a85d09de775fb0b">m_iBuffLength</a> - 1)</div>
<div class="line"><span class="lineno">  110</span>                iRead -= <a class="code hl_variable" href="a00490.xhtml#a3f35b48aa5632a863a85d09de775fb0b">m_iBuffLength</a>;</div>
<div class="line"><span class="lineno">  111</span>            <span class="keywordflow">while</span> (iRead &lt; 0)</div>
<div class="line"><span class="lineno">  112</span>                iRead += <a class="code hl_variable" href="a00490.xhtml#a3f35b48aa5632a863a85d09de775fb0b">m_iBuffLength</a>;</div>
<div class="line"><span class="lineno">  113</span> </div>
<div class="line"><span class="lineno">  114</span>            <span class="keywordflow">return</span> (1 - fFrac) * <a class="code hl_variable" href="a00490.xhtml#a6c82ffd2218093776e8952e15309c51e">m_ptBuff</a>[iRead] +</div>
<div class="line"><span class="lineno">  115</span>                fFrac * <a class="code hl_variable" href="a00490.xhtml#a6c82ffd2218093776e8952e15309c51e">m_ptBuff</a>[(iRead + 1) % <a class="code hl_variable" href="a00490.xhtml#a3f35b48aa5632a863a85d09de775fb0b">m_iBuffLength</a>];</div>
<div class="line"><span class="lineno">  116</span>        }</div>
<div class="line"><span class="lineno">  117</span>    }</div>
<div class="ttc" id="aa00490_xhtml_a17237cdeda2b10e77e1815def129debd"><div class="ttname"><a href="a00490.xhtml#a17237cdeda2b10e77e1815def129debd">CRingBuffer::m_iReadIdx</a></div><div class="ttdeci">int m_iReadIdx</div><div class="ttdoc">current read index</div><div class="ttdef"><b>Definition:</b> <a href="a00146_source.xhtml#l00207">RingBuffer.h:207</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00146_source.xhtml#l00206">CRingBuffer&lt; T &gt;::m_iBuffLength</a>, <a class="el" href="a00146_source.xhtml#l00207">CRingBuffer&lt; T &gt;::m_iReadIdx</a>, and <a class="el" href="a00146_source.xhtml#l00210">CRingBuffer&lt; T &gt;::m_ptBuff</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00080_source.xhtml#l00031">CKeyFromChroma::getKey()</a>, <a class="el" href="a00104_source.xhtml#l00056">CBlockAudioFile::getNextBlock()</a>, and <a class="el" href="a00146_source.xhtml#l00077">CRingBuffer&lt; T &gt;::getPostInc()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00490_a23d9877584d712c17811a9833835605e_icgraph.svg" width="100%" height="435"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="a047d589f30b02374de2aabdbc6892912" name="a047d589f30b02374de2aabdbc6892912"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a047d589f30b02374de2aabdbc6892912">&#9670;&nbsp;</a></span>get() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="a00490.xhtml">CRingBuffer</a>&lt; T &gt;::get </td>
          <td>(</td>
          <td class="paramtype">T *&#160;</td>
          <td class="paramname"><em>ptBuff</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>iLength</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p >return the values starting at the current read index </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ptBuff</td><td>to where the values will be written </td></tr>
    <tr><td class="paramname">iLength</td><td>number of values </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="a00146_source.xhtml#l00123">123</a> of file <a class="el" href="a00146_source.xhtml">RingBuffer.h</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  124</span>    {</div>
<div class="line"><span class="lineno">  125</span>        assert(iLength &lt;= m_iBuffLength &amp;&amp; iLength &gt;= 0);</div>
<div class="line"><span class="lineno">  126</span> </div>
<div class="line"><span class="lineno">  127</span>        <span class="comment">// copy two parts: to the end of buffer and after wrap around</span></div>
<div class="line"><span class="lineno">  128</span>        <span class="keywordtype">int</span> iNumValues2End = std::min(iLength, <a class="code hl_variable" href="a00490.xhtml#a3f35b48aa5632a863a85d09de775fb0b">m_iBuffLength</a> - <a class="code hl_variable" href="a00490.xhtml#a17237cdeda2b10e77e1815def129debd">m_iReadIdx</a>);</div>
<div class="line"><span class="lineno">  129</span> </div>
<div class="line"><span class="lineno">  130</span>        std::memcpy(ptBuff, &amp;<a class="code hl_variable" href="a00490.xhtml#a6c82ffd2218093776e8952e15309c51e">m_ptBuff</a>[<a class="code hl_variable" href="a00490.xhtml#a17237cdeda2b10e77e1815def129debd">m_iReadIdx</a>], <span class="keyword">sizeof</span>(T) * iNumValues2End);</div>
<div class="line"><span class="lineno">  131</span>        <span class="keywordflow">if</span> ((iLength - iNumValues2End) &gt; 0)</div>
<div class="line"><span class="lineno">  132</span>            std::memcpy(&amp;ptBuff[iNumValues2End], <a class="code hl_variable" href="a00490.xhtml#a6c82ffd2218093776e8952e15309c51e">m_ptBuff</a>, <span class="keyword">sizeof</span>(T) * (<span class="keyword">static_cast&lt;</span><span class="keywordtype">long</span> <span class="keywordtype">long</span><span class="keyword">&gt;</span>(iLength) - iNumValues2End));</div>
<div class="line"><span class="lineno">  133</span>    }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00146_source.xhtml#l00206">CRingBuffer&lt; T &gt;::m_iBuffLength</a>, <a class="el" href="a00146_source.xhtml#l00207">CRingBuffer&lt; T &gt;::m_iReadIdx</a>, and <a class="el" href="a00146_source.xhtml#l00210">CRingBuffer&lt; T &gt;::m_ptBuff</a>.</p>

</div>
</div>
<a id="a0ec2bd62a49e5078d3ca0a03fa123c9e" name="a0ec2bd62a49e5078d3ca0a03fa123c9e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0ec2bd62a49e5078d3ca0a03fa123c9e">&#9670;&nbsp;</a></span>getLength()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int <a class="el" href="a00490.xhtml">CRingBuffer</a>&lt; T &gt;::getLength </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p >returns the length of the internal buffer </p><dl class="section return"><dt>Returns</dt><dd>int </dd></dl>

<p class="definition">Definition at line <a class="el" href="a00146_source.xhtml#l00187">187</a> of file <a class="el" href="a00146_source.xhtml">RingBuffer.h</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  188</span>    {</div>
<div class="line"><span class="lineno">  189</span>        <span class="keywordflow">return</span> <a class="code hl_variable" href="a00490.xhtml#a3f35b48aa5632a863a85d09de775fb0b">m_iBuffLength</a>;</div>
<div class="line"><span class="lineno">  190</span>    }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00146_source.xhtml#l00206">CRingBuffer&lt; T &gt;::m_iBuffLength</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00104_source.xhtml#l00016">CBlockAudioFile::CBlockAudioFile()</a>, and <a class="el" href="a00134_source.xhtml#l00153">CMovingAverage::setFilterParam()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00490_a0ec2bd62a49e5078d3ca0a03fa123c9e_icgraph.svg" width="100%" height="391"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="aa04a6cb30d486a6ddd5f7929db1eef9d" name="aa04a6cb30d486a6ddd5f7929db1eef9d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa04a6cb30d486a6ddd5f7929db1eef9d">&#9670;&nbsp;</a></span>getNumValuesInBuffer()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int <a class="el" href="a00490.xhtml">CRingBuffer</a>&lt; T &gt;::getNumValuesInBuffer </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p >returns the number of values currently buffered (note: 0 could also mean the buffer is full!) </p><dl class="section return"><dt>Returns</dt><dd>int </dd></dl>

<p class="definition">Definition at line <a class="el" href="a00146_source.xhtml#l00179">179</a> of file <a class="el" href="a00146_source.xhtml">RingBuffer.h</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  180</span>    {</div>
<div class="line"><span class="lineno">  181</span>        <span class="keywordflow">return</span> (<a class="code hl_variable" href="a00490.xhtml#ad2bfd60fbefec3403b6a2a420b8695a5">m_iWriteIdx</a> - <a class="code hl_variable" href="a00490.xhtml#a17237cdeda2b10e77e1815def129debd">m_iReadIdx</a> + <a class="code hl_variable" href="a00490.xhtml#a3f35b48aa5632a863a85d09de775fb0b">m_iBuffLength</a>) % <a class="code hl_variable" href="a00490.xhtml#a3f35b48aa5632a863a85d09de775fb0b">m_iBuffLength</a>;</div>
<div class="line"><span class="lineno">  182</span>    }</div>
<div class="ttc" id="aa00490_xhtml_ad2bfd60fbefec3403b6a2a420b8695a5"><div class="ttname"><a href="a00490.xhtml#ad2bfd60fbefec3403b6a2a420b8695a5">CRingBuffer::m_iWriteIdx</a></div><div class="ttdeci">int m_iWriteIdx</div><div class="ttdoc">current write index</div><div class="ttdef"><b>Definition:</b> <a href="a00146_source.xhtml#l00208">RingBuffer.h:208</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00146_source.xhtml#l00206">CRingBuffer&lt; T &gt;::m_iBuffLength</a>, <a class="el" href="a00146_source.xhtml#l00207">CRingBuffer&lt; T &gt;::m_iReadIdx</a>, and <a class="el" href="a00146_source.xhtml#l00208">CRingBuffer&lt; T &gt;::m_iWriteIdx</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00104_source.xhtml#l00016">CBlockAudioFile::CBlockAudioFile()</a>, <a class="el" href="a00134_source.xhtml#l00171">CMovingAverage::getFilterParam()</a>, <a class="el" href="a00104_source.xhtml#l00056">CBlockAudioFile::getNextBlock()</a>, and <a class="el" href="a00134_source.xhtml#l00197">CMovingAverage::process()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00490_aa04a6cb30d486a6ddd5f7929db1eef9d_icgraph.svg" width="100%" height="465"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="a0f25eadaafa6a2e7bfe2f9ef6af1104b" name="a0f25eadaafa6a2e7bfe2f9ef6af1104b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0f25eadaafa6a2e7bfe2f9ef6af1104b">&#9670;&nbsp;</a></span>getPostInc() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">T <a class="el" href="a00490.xhtml">CRingBuffer</a>&lt; T &gt;::getPostInc </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p >return the value at the current read index and increment the read pointer </p><dl class="section return"><dt>Returns</dt><dd>float the value from the read index </dd></dl>

<p class="definition">Definition at line <a class="el" href="a00146_source.xhtml#l00077">77</a> of file <a class="el" href="a00146_source.xhtml">RingBuffer.h</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   78</span>    {</div>
<div class="line"><span class="lineno">   79</span>        T tValue = <a class="code hl_function" href="a00490.xhtml#a23d9877584d712c17811a9833835605e">get</a>();</div>
<div class="line"><span class="lineno">   80</span>        <a class="code hl_function" href="a00490.xhtml#a67eddecd2a880c52c80093774bc37c24">incIdx</a>(<a class="code hl_variable" href="a00490.xhtml#a17237cdeda2b10e77e1815def129debd">m_iReadIdx</a>);</div>
<div class="line"><span class="lineno">   81</span>        <span class="keywordflow">return</span> tValue;</div>
<div class="line"><span class="lineno">   82</span>    }</div>
<div class="ttc" id="aa00490_xhtml_a23d9877584d712c17811a9833835605e"><div class="ttname"><a href="a00490.xhtml#a23d9877584d712c17811a9833835605e">CRingBuffer::get</a></div><div class="ttdeci">T get(float fOffset=0) const</div><div class="ttdef"><b>Definition:</b> <a href="a00146_source.xhtml#l00098">RingBuffer.h:98</a></div></div>
<div class="ttc" id="aa00490_xhtml_a67eddecd2a880c52c80093774bc37c24"><div class="ttname"><a href="a00490.xhtml#a67eddecd2a880c52c80093774bc37c24">CRingBuffer::incIdx</a></div><div class="ttdeci">void incIdx(int &amp;iIdx, int iOffset=1)</div><div class="ttdef"><b>Definition:</b> <a href="a00146_source.xhtml#l00196">RingBuffer.h:196</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00146_source.xhtml#l00098">CRingBuffer&lt; T &gt;::get()</a>, <a class="el" href="a00146_source.xhtml#l00196">CRingBuffer&lt; T &gt;::incIdx()</a>, and <a class="el" href="a00146_source.xhtml#l00207">CRingBuffer&lt; T &gt;::m_iReadIdx</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00134_source.xhtml#l00197">CMovingAverage::process()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00490_a0f25eadaafa6a2e7bfe2f9ef6af1104b_cgraph.svg" width="350" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00490_a0f25eadaafa6a2e7bfe2f9ef6af1104b_icgraph.svg" width="100%" height="366"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="aeb86fd660cbaadd93a9d89dc529d5b76" name="aeb86fd660cbaadd93a9d89dc529d5b76"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aeb86fd660cbaadd93a9d89dc529d5b76">&#9670;&nbsp;</a></span>getPostInc() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="a00490.xhtml">CRingBuffer</a>&lt; T &gt;::getPostInc </td>
          <td>(</td>
          <td class="paramtype">T *&#160;</td>
          <td class="paramname"><em>ptBuff</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>iLength</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p >return the values starting at the current read index and increment the read pointer </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ptBuff</td><td>pointer to where the values will be written </td></tr>
    <tr><td class="paramname">iLength</td><td>number of values </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="a00146_source.xhtml#l00088">88</a> of file <a class="el" href="a00146_source.xhtml">RingBuffer.h</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   89</span>    {</div>
<div class="line"><span class="lineno">   90</span>        <a class="code hl_function" href="a00490.xhtml#a23d9877584d712c17811a9833835605e">get</a>(ptBuff, iLength);</div>
<div class="line"><span class="lineno">   91</span>        <a class="code hl_function" href="a00490.xhtml#a67eddecd2a880c52c80093774bc37c24">incIdx</a>(<a class="code hl_variable" href="a00490.xhtml#a17237cdeda2b10e77e1815def129debd">m_iReadIdx</a>, iLength);</div>
<div class="line"><span class="lineno">   92</span>    }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00146_source.xhtml#l00098">CRingBuffer&lt; T &gt;::get()</a>, <a class="el" href="a00146_source.xhtml#l00196">CRingBuffer&lt; T &gt;::incIdx()</a>, and <a class="el" href="a00146_source.xhtml#l00207">CRingBuffer&lt; T &gt;::m_iReadIdx</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00490_aeb86fd660cbaadd93a9d89dc529d5b76_cgraph.svg" width="350" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ab18fac37cac4e8bde0419fe04845ac9d" name="ab18fac37cac4e8bde0419fe04845ac9d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab18fac37cac4e8bde0419fe04845ac9d">&#9670;&nbsp;</a></span>getReadIdx()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int <a class="el" href="a00490.xhtml">CRingBuffer</a>&lt; T &gt;::getReadIdx </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p >return the current index for reading/get </p><dl class="section return"><dt>Returns</dt><dd>int </dd></dl>

<p class="definition">Definition at line <a class="el" href="a00146_source.xhtml#l00163">163</a> of file <a class="el" href="a00146_source.xhtml">RingBuffer.h</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  164</span>    {</div>
<div class="line"><span class="lineno">  165</span>        <span class="keywordflow">return</span> <a class="code hl_variable" href="a00490.xhtml#a17237cdeda2b10e77e1815def129debd">m_iReadIdx</a>;</div>
<div class="line"><span class="lineno">  166</span>    }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00146_source.xhtml#l00207">CRingBuffer&lt; T &gt;::m_iReadIdx</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00104_source.xhtml#l00056">CBlockAudioFile::getNextBlock()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00490_ab18fac37cac4e8bde0419fe04845ac9d_icgraph.svg" width="391" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a8173fd5abe5c4ff4e78ffad4b14ea88b" name="a8173fd5abe5c4ff4e78ffad4b14ea88b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8173fd5abe5c4ff4e78ffad4b14ea88b">&#9670;&nbsp;</a></span>getWriteIdx()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int <a class="el" href="a00490.xhtml">CRingBuffer</a>&lt; T &gt;::getWriteIdx </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p >return the current index for writing/put </p><dl class="section return"><dt>Returns</dt><dd>int </dd></dl>

<p class="definition">Definition at line <a class="el" href="a00146_source.xhtml#l00147">147</a> of file <a class="el" href="a00146_source.xhtml">RingBuffer.h</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  148</span>    {</div>
<div class="line"><span class="lineno">  149</span>        <span class="keywordflow">return</span> <a class="code hl_variable" href="a00490.xhtml#ad2bfd60fbefec3403b6a2a420b8695a5">m_iWriteIdx</a>;</div>
<div class="line"><span class="lineno">  150</span>    }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00146_source.xhtml#l00208">CRingBuffer&lt; T &gt;::m_iWriteIdx</a>.</p>

</div>
</div>
<a id="a67eddecd2a880c52c80093774bc37c24" name="a67eddecd2a880c52c80093774bc37c24"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a67eddecd2a880c52c80093774bc37c24">&#9670;&nbsp;</a></span>incIdx()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="a00490.xhtml">CRingBuffer</a>&lt; T &gt;::incIdx </td>
          <td>(</td>
          <td class="paramtype">int &amp;&#160;</td>
          <td class="paramname"><em>iIdx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>iOffset</em> = <code>1</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="a00146_source.xhtml#l00196">196</a> of file <a class="el" href="a00146_source.xhtml">RingBuffer.h</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  197</span>    {</div>
<div class="line"><span class="lineno">  198</span>        <span class="keywordflow">while</span> ((iIdx + iOffset) &lt; 0)</div>
<div class="line"><span class="lineno">  199</span>        {</div>
<div class="line"><span class="lineno">  200</span>            <span class="comment">// avoid negative buffer indices</span></div>
<div class="line"><span class="lineno">  201</span>            iOffset += <a class="code hl_variable" href="a00490.xhtml#a3f35b48aa5632a863a85d09de775fb0b">m_iBuffLength</a>;</div>
<div class="line"><span class="lineno">  202</span>        }</div>
<div class="line"><span class="lineno">  203</span>        iIdx = (iIdx + iOffset) % <a class="code hl_variable" href="a00490.xhtml#a3f35b48aa5632a863a85d09de775fb0b">m_iBuffLength</a>;</div>
<div class="line"><span class="lineno">  204</span>    };</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00146_source.xhtml#l00206">CRingBuffer&lt; T &gt;::m_iBuffLength</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00146_source.xhtml#l00077">CRingBuffer&lt; T &gt;::getPostInc()</a>, <a class="el" href="a00146_source.xhtml#l00034">CRingBuffer&lt; T &gt;::putPostInc()</a>, <a class="el" href="a00146_source.xhtml#l00171">CRingBuffer&lt; T &gt;::setReadIdx()</a>, and <a class="el" href="a00146_source.xhtml#l00155">CRingBuffer&lt; T &gt;::setWriteIdx()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00490_a67eddecd2a880c52c80093774bc37c24_icgraph.svg" width="100%" height="574"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="a76a236cd8dcd7e464abd9416dd445f2c" name="a76a236cd8dcd7e464abd9416dd445f2c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a76a236cd8dcd7e464abd9416dd445f2c">&#9670;&nbsp;</a></span>operator=()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00490.xhtml">CRingBuffer</a> &amp; <a class="el" href="a00490.xhtml">CRingBuffer</a>&lt; T &gt;::operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="a00490.xhtml">CRingBuffer</a>&lt; T &gt; &amp;&#160;</td>
          <td class="paramname"><em>c</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a15f6463cfcafd855157d33d253011dc7" name="a15f6463cfcafd855157d33d253011dc7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a15f6463cfcafd855157d33d253011dc7">&#9670;&nbsp;</a></span>put() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="a00490.xhtml">CRingBuffer</a>&lt; T &gt;::put </td>
          <td>(</td>
          <td class="paramtype">const T *&#160;</td>
          <td class="paramname"><em>ptNewBuff</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>iLength</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p >add new values of type T to write index </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ptNewBuff</td><td>new values </td></tr>
    <tr><td class="paramname">iLength</td><td>number of values </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="a00146_source.xhtml#l00062">62</a> of file <a class="el" href="a00146_source.xhtml">RingBuffer.h</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   63</span>    {</div>
<div class="line"><span class="lineno">   64</span>        assert(iLength &lt;= m_iBuffLength &amp;&amp; iLength &gt;= 0);</div>
<div class="line"><span class="lineno">   65</span> </div>
<div class="line"><span class="lineno">   66</span>        <span class="comment">// copy two parts: to the end of buffer and after wrap around</span></div>
<div class="line"><span class="lineno">   67</span>        <span class="keywordtype">int</span> iNumValues2End = std::min(iLength, <a class="code hl_variable" href="a00490.xhtml#a3f35b48aa5632a863a85d09de775fb0b">m_iBuffLength</a> - <a class="code hl_variable" href="a00490.xhtml#ad2bfd60fbefec3403b6a2a420b8695a5">m_iWriteIdx</a>);</div>
<div class="line"><span class="lineno">   68</span> </div>
<div class="line"><span class="lineno">   69</span>        std::memcpy(&amp;<a class="code hl_variable" href="a00490.xhtml#a6c82ffd2218093776e8952e15309c51e">m_ptBuff</a>[<a class="code hl_variable" href="a00490.xhtml#ad2bfd60fbefec3403b6a2a420b8695a5">m_iWriteIdx</a>], ptNewBuff, <span class="keyword">sizeof</span>(T) * iNumValues2End);</div>
<div class="line"><span class="lineno">   70</span>        <span class="keywordflow">if</span> ((iLength - iNumValues2End) &gt; 0)</div>
<div class="line"><span class="lineno">   71</span>            std::memcpy(<a class="code hl_variable" href="a00490.xhtml#a6c82ffd2218093776e8952e15309c51e">m_ptBuff</a>, &amp;ptNewBuff[iNumValues2End], <span class="keyword">sizeof</span>(T) * (<span class="keyword">static_cast&lt;</span><span class="keywordtype">long</span> <span class="keywordtype">long</span><span class="keyword">&gt;</span>(iLength) - iNumValues2End));</div>
<div class="line"><span class="lineno">   72</span>    }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00146_source.xhtml#l00206">CRingBuffer&lt; T &gt;::m_iBuffLength</a>, <a class="el" href="a00146_source.xhtml#l00208">CRingBuffer&lt; T &gt;::m_iWriteIdx</a>, and <a class="el" href="a00146_source.xhtml#l00210">CRingBuffer&lt; T &gt;::m_ptBuff</a>.</p>

</div>
</div>
<a id="a702eb6314380082795f735df74a816c9" name="a702eb6314380082795f735df74a816c9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a702eb6314380082795f735df74a816c9">&#9670;&nbsp;</a></span>put() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="a00490.xhtml">CRingBuffer</a>&lt; T &gt;::put </td>
          <td>(</td>
          <td class="paramtype">T&#160;</td>
          <td class="paramname"><em>tNewValue</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p >add a new value of type T to write index </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">tNewValue</td><td>the new value </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="a00146_source.xhtml#l00053">53</a> of file <a class="el" href="a00146_source.xhtml">RingBuffer.h</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   54</span>    {</div>
<div class="line"><span class="lineno">   55</span>        <a class="code hl_variable" href="a00490.xhtml#a6c82ffd2218093776e8952e15309c51e">m_ptBuff</a>[<a class="code hl_variable" href="a00490.xhtml#ad2bfd60fbefec3403b6a2a420b8695a5">m_iWriteIdx</a>] = tNewValue;</div>
<div class="line"><span class="lineno">   56</span>    }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00146_source.xhtml#l00208">CRingBuffer&lt; T &gt;::m_iWriteIdx</a>, and <a class="el" href="a00146_source.xhtml#l00210">CRingBuffer&lt; T &gt;::m_ptBuff</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00146_source.xhtml#l00034">CRingBuffer&lt; T &gt;::putPostInc()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00490_a702eb6314380082795f735df74a816c9_icgraph.svg" width="100%" height="438"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="a21568ce259aa8e97ea3f3d7aec4828b7" name="a21568ce259aa8e97ea3f3d7aec4828b7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a21568ce259aa8e97ea3f3d7aec4828b7">&#9670;&nbsp;</a></span>putPostInc() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="a00490.xhtml">CRingBuffer</a>&lt; T &gt;::putPostInc </td>
          <td>(</td>
          <td class="paramtype">const T *&#160;</td>
          <td class="paramname"><em>ptNewBuff</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>iLength</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p >add new values of type T to write index and increment write index </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ptNewBuff</td><td>new values </td></tr>
    <tr><td class="paramname">iLength</td><td>number of values </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="a00146_source.xhtml#l00044">44</a> of file <a class="el" href="a00146_source.xhtml">RingBuffer.h</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   45</span>    {</div>
<div class="line"><span class="lineno">   46</span>        <a class="code hl_function" href="a00490.xhtml#a702eb6314380082795f735df74a816c9">put</a>(ptNewBuff, iLength);</div>
<div class="line"><span class="lineno">   47</span>        <a class="code hl_function" href="a00490.xhtml#a67eddecd2a880c52c80093774bc37c24">incIdx</a>(<a class="code hl_variable" href="a00490.xhtml#ad2bfd60fbefec3403b6a2a420b8695a5">m_iWriteIdx</a>, iLength);</div>
<div class="line"><span class="lineno">   48</span>    }</div>
<div class="ttc" id="aa00490_xhtml_a702eb6314380082795f735df74a816c9"><div class="ttname"><a href="a00490.xhtml#a702eb6314380082795f735df74a816c9">CRingBuffer::put</a></div><div class="ttdeci">void put(T tNewValue)</div><div class="ttdef"><b>Definition:</b> <a href="a00146_source.xhtml#l00053">RingBuffer.h:53</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00146_source.xhtml#l00196">CRingBuffer&lt; T &gt;::incIdx()</a>, <a class="el" href="a00146_source.xhtml#l00208">CRingBuffer&lt; T &gt;::m_iWriteIdx</a>, and <a class="el" href="a00146_source.xhtml#l00053">CRingBuffer&lt; T &gt;::put()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00490_a21568ce259aa8e97ea3f3d7aec4828b7_cgraph.svg" width="350" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a2bd848181a662312600bc590b9040d2a" name="a2bd848181a662312600bc590b9040d2a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2bd848181a662312600bc590b9040d2a">&#9670;&nbsp;</a></span>putPostInc() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="a00490.xhtml">CRingBuffer</a>&lt; T &gt;::putPostInc </td>
          <td>(</td>
          <td class="paramtype">T&#160;</td>
          <td class="paramname"><em>tNewValue</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p >add a new value of type T to write index and increment write index </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">tNewValue</td><td>the new value </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="a00146_source.xhtml#l00034">34</a> of file <a class="el" href="a00146_source.xhtml">RingBuffer.h</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   35</span>    {</div>
<div class="line"><span class="lineno">   36</span>        <a class="code hl_function" href="a00490.xhtml#a702eb6314380082795f735df74a816c9">put</a>(tNewValue);</div>
<div class="line"><span class="lineno">   37</span>        <a class="code hl_function" href="a00490.xhtml#a67eddecd2a880c52c80093774bc37c24">incIdx</a>(<a class="code hl_variable" href="a00490.xhtml#ad2bfd60fbefec3403b6a2a420b8695a5">m_iWriteIdx</a>);</div>
<div class="line"><span class="lineno">   38</span>    }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00146_source.xhtml#l00196">CRingBuffer&lt; T &gt;::incIdx()</a>, <a class="el" href="a00146_source.xhtml#l00208">CRingBuffer&lt; T &gt;::m_iWriteIdx</a>, and <a class="el" href="a00146_source.xhtml#l00053">CRingBuffer&lt; T &gt;::put()</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00134_source.xhtml#l00197">CMovingAverage::process()</a>, and <a class="el" href="a00104_source.xhtml#l00091">CBlockAudioFile::readFile2RingBuff()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00490_a2bd848181a662312600bc590b9040d2a_cgraph.svg" width="350" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00490_a2bd848181a662312600bc590b9040d2a_icgraph.svg" width="100%" height="438"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="a716fb4acc03355a73cc7d96f3ceb2995" name="a716fb4acc03355a73cc7d96f3ceb2995"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a716fb4acc03355a73cc7d96f3ceb2995">&#9670;&nbsp;</a></span>reset()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="a00490.xhtml">CRingBuffer</a>&lt; T &gt;::reset </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p >set buffer content and indices to 0 </p>

<p class="definition">Definition at line <a class="el" href="a00146_source.xhtml#l00137">137</a> of file <a class="el" href="a00146_source.xhtml">RingBuffer.h</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  138</span>    {</div>
<div class="line"><span class="lineno">  139</span>        std::memset(<a class="code hl_variable" href="a00490.xhtml#a6c82ffd2218093776e8952e15309c51e">m_ptBuff</a>, 0, <span class="keyword">sizeof</span>(T) * <a class="code hl_variable" href="a00490.xhtml#a3f35b48aa5632a863a85d09de775fb0b">m_iBuffLength</a>);</div>
<div class="line"><span class="lineno">  140</span>        <a class="code hl_variable" href="a00490.xhtml#a17237cdeda2b10e77e1815def129debd">m_iReadIdx</a> = 0;</div>
<div class="line"><span class="lineno">  141</span>        <a class="code hl_variable" href="a00490.xhtml#ad2bfd60fbefec3403b6a2a420b8695a5">m_iWriteIdx</a> = 0;</div>
<div class="line"><span class="lineno">  142</span>    }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00146_source.xhtml#l00206">CRingBuffer&lt; T &gt;::m_iBuffLength</a>, <a class="el" href="a00146_source.xhtml#l00207">CRingBuffer&lt; T &gt;::m_iReadIdx</a>, <a class="el" href="a00146_source.xhtml#l00208">CRingBuffer&lt; T &gt;::m_iWriteIdx</a>, and <a class="el" href="a00146_source.xhtml#l00210">CRingBuffer&lt; T &gt;::m_ptBuff</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00146_source.xhtml#l00016">CRingBuffer&lt; T &gt;::CRingBuffer()</a>, and <a class="el" href="a00134_source.xhtml#l00218">CMovingAverage::reset()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00490_a716fb4acc03355a73cc7d96f3ceb2995_icgraph.svg" width="100%" height="469"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="af265a6322c4b1584c880def00d31e663" name="af265a6322c4b1584c880def00d31e663"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af265a6322c4b1584c880def00d31e663">&#9670;&nbsp;</a></span>setReadIdx()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="a00490.xhtml">CRingBuffer</a>&lt; T &gt;::setReadIdx </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>iNewReadIdx</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p >move the read index to a new position </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">iNewReadIdx</td><td>new position </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="a00146_source.xhtml#l00171">171</a> of file <a class="el" href="a00146_source.xhtml">RingBuffer.h</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  172</span>    {</div>
<div class="line"><span class="lineno">  173</span>        <a class="code hl_function" href="a00490.xhtml#a67eddecd2a880c52c80093774bc37c24">incIdx</a>(<a class="code hl_variable" href="a00490.xhtml#a17237cdeda2b10e77e1815def129debd">m_iReadIdx</a>, iNewReadIdx - <a class="code hl_variable" href="a00490.xhtml#a17237cdeda2b10e77e1815def129debd">m_iReadIdx</a>);</div>
<div class="line"><span class="lineno">  174</span>    }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00146_source.xhtml#l00196">CRingBuffer&lt; T &gt;::incIdx()</a>, and <a class="el" href="a00146_source.xhtml#l00207">CRingBuffer&lt; T &gt;::m_iReadIdx</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00080_source.xhtml#l00031">CKeyFromChroma::getKey()</a>, <a class="el" href="a00104_source.xhtml#l00056">CBlockAudioFile::getNextBlock()</a>, <a class="el" href="a00134_source.xhtml#l00218">CMovingAverage::reset()</a>, and <a class="el" href="a00134_source.xhtml#l00153">CMovingAverage::setFilterParam()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00490_af265a6322c4b1584c880def00d31e663_cgraph.svg" width="352" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00490_af265a6322c4b1584c880def00d31e663_icgraph.svg" width="100%" height="476"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="a408e0ec5855fca27bd2dc5862fa913ab" name="a408e0ec5855fca27bd2dc5862fa913ab"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a408e0ec5855fca27bd2dc5862fa913ab">&#9670;&nbsp;</a></span>setWriteIdx()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="a00490.xhtml">CRingBuffer</a>&lt; T &gt;::setWriteIdx </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>iNewWriteIdx</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p >move the write index to a new position </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">iNewWriteIdx</td><td>new position </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="a00146_source.xhtml#l00155">155</a> of file <a class="el" href="a00146_source.xhtml">RingBuffer.h</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  156</span>    {</div>
<div class="line"><span class="lineno">  157</span>        <a class="code hl_function" href="a00490.xhtml#a67eddecd2a880c52c80093774bc37c24">incIdx</a>(<a class="code hl_variable" href="a00490.xhtml#ad2bfd60fbefec3403b6a2a420b8695a5">m_iWriteIdx</a>, iNewWriteIdx - <a class="code hl_variable" href="a00490.xhtml#ad2bfd60fbefec3403b6a2a420b8695a5">m_iWriteIdx</a>);</div>
<div class="line"><span class="lineno">  158</span>    }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00146_source.xhtml#l00196">CRingBuffer&lt; T &gt;::incIdx()</a>, and <a class="el" href="a00146_source.xhtml#l00208">CRingBuffer&lt; T &gt;::m_iWriteIdx</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00490_a408e0ec5855fca27bd2dc5862fa913ab_cgraph.svg" width="352" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="a3f35b48aa5632a863a85d09de775fb0b" name="a3f35b48aa5632a863a85d09de775fb0b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3f35b48aa5632a863a85d09de775fb0b">&#9670;&nbsp;</a></span>m_iBuffLength</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int <a class="el" href="a00490.xhtml">CRingBuffer</a>&lt; T &gt;::m_iBuffLength = 0</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>length of the internal buffer </p>

<p class="definition">Definition at line <a class="el" href="a00146_source.xhtml#l00206">206</a> of file <a class="el" href="a00146_source.xhtml">RingBuffer.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00146_source.xhtml#l00016">CRingBuffer&lt; T &gt;::CRingBuffer()</a>, <a class="el" href="a00146_source.xhtml#l00098">CRingBuffer&lt; T &gt;::get()</a>, <a class="el" href="a00146_source.xhtml#l00187">CRingBuffer&lt; T &gt;::getLength()</a>, <a class="el" href="a00146_source.xhtml#l00179">CRingBuffer&lt; T &gt;::getNumValuesInBuffer()</a>, <a class="el" href="a00146_source.xhtml#l00196">CRingBuffer&lt; T &gt;::incIdx()</a>, <a class="el" href="a00146_source.xhtml#l00062">CRingBuffer&lt; T &gt;::put()</a>, and <a class="el" href="a00146_source.xhtml#l00137">CRingBuffer&lt; T &gt;::reset()</a>.</p>

</div>
</div>
<a id="a17237cdeda2b10e77e1815def129debd" name="a17237cdeda2b10e77e1815def129debd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a17237cdeda2b10e77e1815def129debd">&#9670;&nbsp;</a></span>m_iReadIdx</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int <a class="el" href="a00490.xhtml">CRingBuffer</a>&lt; T &gt;::m_iReadIdx = 0</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>current read index </p>

<p class="definition">Definition at line <a class="el" href="a00146_source.xhtml#l00207">207</a> of file <a class="el" href="a00146_source.xhtml">RingBuffer.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00146_source.xhtml#l00098">CRingBuffer&lt; T &gt;::get()</a>, <a class="el" href="a00146_source.xhtml#l00179">CRingBuffer&lt; T &gt;::getNumValuesInBuffer()</a>, <a class="el" href="a00146_source.xhtml#l00077">CRingBuffer&lt; T &gt;::getPostInc()</a>, <a class="el" href="a00146_source.xhtml#l00163">CRingBuffer&lt; T &gt;::getReadIdx()</a>, <a class="el" href="a00146_source.xhtml#l00137">CRingBuffer&lt; T &gt;::reset()</a>, and <a class="el" href="a00146_source.xhtml#l00171">CRingBuffer&lt; T &gt;::setReadIdx()</a>.</p>

</div>
</div>
<a id="ad2bfd60fbefec3403b6a2a420b8695a5" name="ad2bfd60fbefec3403b6a2a420b8695a5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad2bfd60fbefec3403b6a2a420b8695a5">&#9670;&nbsp;</a></span>m_iWriteIdx</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int <a class="el" href="a00490.xhtml">CRingBuffer</a>&lt; T &gt;::m_iWriteIdx = 0</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>current write index </p>

<p class="definition">Definition at line <a class="el" href="a00146_source.xhtml#l00208">208</a> of file <a class="el" href="a00146_source.xhtml">RingBuffer.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00146_source.xhtml#l00179">CRingBuffer&lt; T &gt;::getNumValuesInBuffer()</a>, <a class="el" href="a00146_source.xhtml#l00147">CRingBuffer&lt; T &gt;::getWriteIdx()</a>, <a class="el" href="a00146_source.xhtml#l00053">CRingBuffer&lt; T &gt;::put()</a>, <a class="el" href="a00146_source.xhtml#l00034">CRingBuffer&lt; T &gt;::putPostInc()</a>, <a class="el" href="a00146_source.xhtml#l00137">CRingBuffer&lt; T &gt;::reset()</a>, and <a class="el" href="a00146_source.xhtml#l00155">CRingBuffer&lt; T &gt;::setWriteIdx()</a>.</p>

</div>
</div>
<a id="a6c82ffd2218093776e8952e15309c51e" name="a6c82ffd2218093776e8952e15309c51e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6c82ffd2218093776e8952e15309c51e">&#9670;&nbsp;</a></span>m_ptBuff</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">T* <a class="el" href="a00490.xhtml">CRingBuffer</a>&lt; T &gt;::m_ptBuff = 0</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>data buffer </p>

<p class="definition">Definition at line <a class="el" href="a00146_source.xhtml#l00210">210</a> of file <a class="el" href="a00146_source.xhtml">RingBuffer.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00146_source.xhtml#l00016">CRingBuffer&lt; T &gt;::CRingBuffer()</a>, <a class="el" href="a00146_source.xhtml#l00098">CRingBuffer&lt; T &gt;::get()</a>, <a class="el" href="a00146_source.xhtml#l00053">CRingBuffer&lt; T &gt;::put()</a>, <a class="el" href="a00146_source.xhtml#l00137">CRingBuffer&lt; T &gt;::reset()</a>, and <a class="el" href="a00146_source.xhtml#l00025">CRingBuffer&lt; T &gt;::~CRingBuffer()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="a00146_source.xhtml">RingBuffer.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="a00490.xhtml">CRingBuffer</a></li>
    <li class="footer">Generated on Sun Jun 19 2022 18:35:25 for ACA by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.4 </li>
  </ul>
</div>
</body>
</html>
