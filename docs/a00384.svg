<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 4.0.0 (20220602.1335)
 -->
<!-- Title: CPitchTimeAcf Pages: 1 -->
<!--zoomable 1123 -->
<svg id="main" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" onload="init(evt)">
<style type="text/css"><![CDATA[
.edge:hover path { stroke: red; }
.edge:hover polygon { stroke: red; fill: red; }
]]></style>
<script type="text/javascript"><![CDATA[
var edges = document.getElementsByTagName('g');
if (edges && edges.length) {
  for (var i=0;i<edges.length;i++) {
    if (edges[i].id.substr(0,4)=='edge') {
      edges[i].setAttribute('class','edge');
    }
  }
}
]]></script>
        <defs>
                <circle id="rim" cx="0" cy="0" r="7"/>
                <circle id="rim2" cx="0" cy="0" r="3.5"/>
                <g id="zoomPlus">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomplus.mouseover" end="zoomplus.mouseout"/>
                        </use>
                        <path d="M-4,0h8M0,-4v8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="zoomMin">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomminus.mouseover" end="zoomminus.mouseout"/>
                        </use>
                        <path d="M-4,0h8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="dirArrow">
                        <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
               <g id="resetDef">
                       <use xlink:href="#rim2" fill="#404040">
                               <set attributeName="fill" to="#808080" begin="reset.mouseover" end="reset.mouseout"/>
                       </use>
               </g>
        </defs>

<script type="text/javascript">
var viewWidth = 370;
var viewHeight = 1123;
var sectionId = 'dynsection-1';
</script>
<script xlink:href="svgpan.js"/>
<svg id="graph" class="graph">
<g id="viewport">
<title>CPitchTimeAcf</title>
<polygon fill="white" stroke="transparent" points="-4,4 -4,-1119 365.5,-1119 365.5,4 -4,4"/>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="class for computation of the pitch via the acf of the time domain signal">
<polygon fill="#bfbfbf" stroke="black" points="15,-0.5 15,-189.5 184,-189.5 184,-0.5 15,-0.5"/>
<text text-anchor="middle" x="99.5" y="-177.5" font-family="Helvetica,sans-Serif" font-size="10.00">CPitchTimeAcf</text>
<polyline fill="none" stroke="black" points="15,-170.5 184,-170.5 "/>
<text text-anchor="start" x="23" y="-158.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_pfAcf</text>
<text text-anchor="start" x="23" y="-147.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float m_fMax</text>
<text text-anchor="start" x="23" y="-136.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; const float m_fMinThresh</text>
<polyline fill="none" stroke="black" points="15,-129.5 184,-129.5 "/>
<text text-anchor="start" x="23" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CPitchTimeAcf(CPitchIf</text>
<text text-anchor="start" x="23" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00">::PitchExtractors_t ePitchIdx,</text>
<text text-anchor="start" x="23" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iDataLength, float fSampleRate)</text>
<text text-anchor="start" x="23" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CPitchTimeAcf()</text>
<text text-anchor="start" x="23" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ float compF0(const</text>
<text text-anchor="start" x="23" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfIn) override</text>
<text text-anchor="start" x="23" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CPitchTimeAcf()</text>
<text text-anchor="start" x="23" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CPitchTimeAcf(const</text>
<text text-anchor="start" x="23" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00"> CPitchTimeAcf &amp;that)</text>
<text text-anchor="start" x="23" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CPitchTimeAcf &amp; operator</text>
<text text-anchor="start" x="23" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CPitchTimeAcf &amp;c)</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="a00526.xhtml" target="_top" xlink:title="class for computation of f0 from a block of data (e.g., time or magnitude spectrum)">
<polygon fill="white" stroke="black" points="0,-237.5 0,-580.5 167,-580.5 167,-237.5 0,-237.5"/>
<text text-anchor="middle" x="83.5" y="-568.5" font-family="Helvetica,sans-Serif" font-size="10.00">CPitchFromBlockIf</text>
<polyline fill="none" stroke="black" points="0,-561.5 167,-561.5 "/>
<text text-anchor="start" x="8" y="-549.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CPitchIf::PitchExtractors</text>
<text text-anchor="start" x="8" y="-538.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t m_ePitchIdx</text>
<text text-anchor="start" x="8" y="-527.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iDataLength</text>
<text text-anchor="start" x="8" y="-516.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float m_fSampleRate</text>
<polyline fill="none" stroke="black" points="0,-509.5 167,-509.5 "/>
<text text-anchor="start" x="8" y="-497.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CPitchIf::PitchExtractors</text>
<text text-anchor="start" x="8" y="-486.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t getPitchExtractorIdx</text>
<text text-anchor="start" x="8" y="-475.5" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="8" y="-464.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual float compF0</text>
<text text-anchor="start" x="8" y="-453.5" font-family="Helvetica,sans-Serif" font-size="10.00">(const float *pfIn)=0</text>
<text text-anchor="start" x="8" y="-442.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="8" y="-431.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CPitchFromBlockIf *&amp;pCInstance,</text>
<text text-anchor="start" x="8" y="-420.5" font-family="Helvetica,sans-Serif" font-size="10.00"> CPitchIf::PitchExtractors</text>
<text text-anchor="start" x="8" y="-409.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t ePitchIdx, int iDataLength,</text>
<text text-anchor="start" x="8" y="-398.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate=1.F)</text>
<text text-anchor="start" x="8" y="-387.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="8" y="-376.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CPitchFromBlockIf *&amp;pCInstance)</text>
<text text-anchor="start" x="8" y="-365.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CPitchFromBlockIf()</text>
<text text-anchor="start" x="8" y="-354.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CPitchFromBlockIf</text>
<text text-anchor="start" x="8" y="-343.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CPitchIf::PitchExtractors</text>
<text text-anchor="start" x="8" y="-332.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t ePitchIdx, int iDataLength,</text>
<text text-anchor="start" x="8" y="-321.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate)</text>
<text text-anchor="start" x="8" y="-310.5" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CPitchFromBlockIf()</text>
<text text-anchor="start" x="8" y="-299.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CPitchFromBlockIf</text>
<text text-anchor="start" x="8" y="-288.5" font-family="Helvetica,sans-Serif" font-size="10.00">(const CPitchFromBlockIf</text>
<text text-anchor="start" x="8" y="-277.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;that)</text>
<text text-anchor="start" x="8" y="-266.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CPitchFromBlockIf &amp;</text>
<text text-anchor="start" x="8" y="-255.5" font-family="Helvetica,sans-Serif" font-size="10.00"> operator=(const CPitchFrom</text>
<text text-anchor="start" x="8" y="-244.5" font-family="Helvetica,sans-Serif" font-size="10.00">BlockIf &amp;c)</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M92.78,-227.08C93.44,-214.26 94.08,-201.68 94.7,-189.69"/>
<polygon fill="none" stroke="midnightblue" points="89.27,-227.23 92.25,-237.39 96.26,-227.59 89.27,-227.23"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="a00546.xhtml" target="_top" xlink:title="computation of correlation (freq domain implementation)">
<polygon fill="white" stroke="black" points="185.5,-259.5 185.5,-558.5 349.5,-558.5 349.5,-259.5 185.5,-259.5"/>
<text text-anchor="middle" x="267.5" y="-546.5" font-family="Helvetica,sans-Serif" font-size="10.00">CCcf</text>
<polyline fill="none" stroke="black" points="185.5,-539.5 349.5,-539.5 "/>
<text text-anchor="start" x="193.5" y="-527.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; bool m_bIsInitialized</text>
<text text-anchor="start" x="193.5" y="-516.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; bool m_bWasProcessed</text>
<text text-anchor="start" x="193.5" y="-505.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_apfData</text>
<text text-anchor="start" x="193.5" y="-494.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iBlockLength</text>
<text text-anchor="start" x="193.5" y="-483.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iFftLength</text>
<polyline fill="none" stroke="black" points="185.5,-476.5 349.5,-476.5 "/>
<text text-anchor="start" x="193.5" y="-464.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CCcf(void)</text>
<text text-anchor="start" x="193.5" y="-453.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CCcf(void)</text>
<text text-anchor="start" x="193.5" y="-442.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t init(int iBlockLength)</text>
<text text-anchor="start" x="193.5" y="-431.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t reset()</text>
<text text-anchor="start" x="193.5" y="-420.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compCcf(const</text>
<text text-anchor="start" x="193.5" y="-409.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfIn1, const</text>
<text text-anchor="start" x="193.5" y="-398.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfIn2, bool bNormalize=true)</text>
<text text-anchor="start" x="193.5" y="-387.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ int getCcfLength(bool</text>
<text text-anchor="start" x="193.5" y="-376.5" font-family="Helvetica,sans-Serif" font-size="10.00"> bisAcf=false)</text>
<text text-anchor="start" x="193.5" y="-365.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getCcf(float</text>
<text text-anchor="start" x="193.5" y="-354.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfCcfResult, bool bisAcf</text>
<text text-anchor="start" x="193.5" y="-343.5" font-family="Helvetica,sans-Serif" font-size="10.00">=false) const</text>
<text text-anchor="start" x="193.5" y="-332.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ float getCcfMax(bool</text>
<text text-anchor="start" x="193.5" y="-321.5" font-family="Helvetica,sans-Serif" font-size="10.00"> bisAcf=false) const</text>
<text text-anchor="start" x="193.5" y="-310.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ int getCcfMaxIdx(bool</text>
<text text-anchor="start" x="193.5" y="-299.5" font-family="Helvetica,sans-Serif" font-size="10.00"> bisAcf=false) const</text>
<text text-anchor="start" x="193.5" y="-288.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CCcf(const CCcf &amp;that)</text>
<text text-anchor="start" x="193.5" y="-277.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CCcf &amp; operator=(const</text>
<text text-anchor="start" x="193.5" y="-266.5" font-family="Helvetica,sans-Serif" font-size="10.00"> CCcf &amp;c)</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node1 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node1</title>
<path fill="none" stroke="#404040" d="M187.47,-259.24C183.43,-251.72 179.42,-244.27 175.5,-237 169.13,-225.16 162.45,-212.77 155.81,-200.45"/>
<polygon fill="none" stroke="#404040" points="155.69,-200.23 149.32,-196.84 150,-189.66 156.37,-193.05 155.69,-200.23"/>
<text text-anchor="middle" x="187.5" y="-211" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;m_pCCcf</text>
</g>
<!-- Node4 -->
<g id="node4" class="node">
<title>Node4</title>
<g id="a_node4"><a xlink:href="a00474.xhtml" target="_top" xlink:title="class for FFT computation with windowing">
<polygon fill="white" stroke="black" points="173.5,-628.5 173.5,-1114.5 361.5,-1114.5 361.5,-628.5 173.5,-628.5"/>
<text text-anchor="middle" x="267.5" y="-1102.5" font-family="Helvetica,sans-Serif" font-size="10.00">CFft</text>
<polyline fill="none" stroke="black" points="173.5,-1095.5 361.5,-1095.5 "/>
<text text-anchor="start" x="181.5" y="-1083.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_pfProcBuff</text>
<text text-anchor="start" x="181.5" y="-1072.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_pfWindowBuff</text>
<text text-anchor="start" x="181.5" y="-1061.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iDataLength</text>
<text text-anchor="start" x="181.5" y="-1050.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iFftLength</text>
<text text-anchor="start" x="181.5" y="-1039.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Windowing_t m_ePrePostWindowOpt</text>
<text text-anchor="start" x="181.5" y="-1028.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; bool m_bIsInitialized</text>
<text text-anchor="start" x="181.5" y="-1017.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; static const float m_Pi</text>
<text text-anchor="start" x="181.5" y="-1006.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; static const float</text>
<text text-anchor="start" x="181.5" y="-995.5" font-family="Helvetica,sans-Serif" font-size="10.00"> m_Pi2</text>
<polyline fill="none" stroke="black" points="173.5,-988.5 361.5,-988.5 "/>
<text text-anchor="start" x="181.5" y="-976.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CFft()</text>
<text text-anchor="start" x="181.5" y="-965.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CFft()</text>
<text text-anchor="start" x="181.5" y="-954.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t init(int iBlockLength,</text>
<text text-anchor="start" x="181.5" y="-943.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iZeroPadFactor=1, WindowFunction</text>
<text text-anchor="start" x="181.5" y="-932.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t eWindow=kWindowHann, Windowing</text>
<text text-anchor="start" x="181.5" y="-921.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t eWindowing=kPreWindow)</text>
<text text-anchor="start" x="181.5" y="-910.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t reset()</text>
<text text-anchor="start" x="181.5" y="-899.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t overrideWindow</text>
<text text-anchor="start" x="181.5" y="-888.5" font-family="Helvetica,sans-Serif" font-size="10.00">(const float *pfNewWindow)</text>
<text text-anchor="start" x="181.5" y="-877.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getWindow(float</text>
<text text-anchor="start" x="181.5" y="-866.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfWindow) const</text>
<text text-anchor="start" x="181.5" y="-855.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compFft(complex</text>
<text text-anchor="start" x="181.5" y="-844.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t *pfSpectrum, const</text>
<text text-anchor="start" x="181.5" y="-833.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfIn)</text>
<text text-anchor="start" x="181.5" y="-822.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compInvFft</text>
<text text-anchor="start" x="181.5" y="-811.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfOut, const</text>
<text text-anchor="start" x="181.5" y="-800.5" font-family="Helvetica,sans-Serif" font-size="10.00"> complex_t *pfSpectrum)</text>
<text text-anchor="start" x="181.5" y="-789.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getMagnitude</text>
<text text-anchor="start" x="181.5" y="-778.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfMag, const</text>
<text text-anchor="start" x="181.5" y="-767.5" font-family="Helvetica,sans-Serif" font-size="10.00"> complex_t *pfSpectrum)</text>
<text text-anchor="start" x="181.5" y="-756.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const</text>
<text text-anchor="start" x="181.5" y="-745.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getPhase(float</text>
<text text-anchor="start" x="181.5" y="-734.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfPhase, const complex</text>
<text text-anchor="start" x="181.5" y="-723.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t *pfSpectrum) const</text>
<text text-anchor="start" x="181.5" y="-712.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 7 more...</text>
<text text-anchor="start" x="181.5" y="-701.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CFft(const CFft &amp;that)</text>
<text text-anchor="start" x="181.5" y="-690.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CFft &amp; operator=(const</text>
<text text-anchor="start" x="181.5" y="-679.5" font-family="Helvetica,sans-Serif" font-size="10.00"> CFft &amp;c)</text>
<text text-anchor="start" x="181.5" y="-668.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Error_t allocMemory_()</text>
<text text-anchor="start" x="181.5" y="-657.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Error_t freeMemory_()</text>
<text text-anchor="start" x="181.5" y="-646.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Error_t computeWindow</text>
<text text-anchor="start" x="181.5" y="-635.5" font-family="Helvetica,sans-Serif" font-size="10.00">_(WindowFunction_t eWindow)</text>
</a>
</g>
</g>
<!-- Node4&#45;&gt;Node3 -->
<g id="edge3" class="edge">
<title>Node4&#45;&gt;Node3</title>
<path fill="none" stroke="#404040" d="M267.5,-628.45C267.5,-608.97 267.5,-589.59 267.5,-570.9"/>
<polygon fill="none" stroke="#404040" points="267.5,-570.71 263.5,-564.71 267.5,-558.71 271.5,-564.71 267.5,-570.71"/>
<text text-anchor="middle" x="289" y="-602" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;m_pCFft</text>
</g>
</g>
</svg>
        <g id="navigator" transform="translate(0 0)" fill="#404254">
                <rect fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width=".5" x="0" y="0" width="60" height="60"/>
                <use id="zoomplus" xlink:href="#zoomPlus" x="17" y="9" onmousedown="handleZoom(evt,'in')"/>
                <use id="zoomminus" xlink:href="#zoomMin" x="42" y="9" onmousedown="handleZoom(evt,'out')"/>
                <use id="reset" xlink:href="#resetDef" x="30" y="36" onmousedown="handleReset()"/>
                <g id="arrowUp" xlink:href="#dirArrow" transform="translate(30 24)" onmousedown="handlePan(0,-1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowUp.mouseover" end="arrowUp.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowRight" xlink:href="#dirArrow" transform="rotate(90) translate(36 -43)" onmousedown="handlePan(1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowRight.mouseover" end="arrowRight.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowDown" xlink:href="#dirArrow" transform="rotate(180) translate(-30 -48)" onmousedown="handlePan(0,1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowDown.mouseover" end="arrowDown.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowLeft" xlink:href="#dirArrow" transform="rotate(270) translate(-36 17)" onmousedown="handlePan(-1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowLeft.mouseover" end="arrowLeft.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
        </g>
        <svg viewBox="0 0 15 15" width="100%" height="30px" preserveAspectRatio="xMaxYMin meet">
         <g id="arrow_out" transform="scale(0.3 0.3)">
          <a xlink:href="a00384_org.svg" target="_base">
           <rect id="button" ry="5" rx="5" y="6" x="6" height="38" width="38"
                fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width="1.0"/>
           <path id="arrow"
             d="M 11.500037,31.436501 C 11.940474,20.09759 22.043105,11.32322 32.158766,21.979434 L 37.068811,17.246167 C 37.068811,17.246167 37.088388,32 37.088388,32 L 22.160133,31.978069 C 22.160133,31.978069 26.997745,27.140456 26.997745,27.140456 C 18.528582,18.264221 13.291696,25.230495 11.500037,31.436501 z"
             style="fill:#404040;"/>
          </a>
         </g>
        </svg>
</svg>
