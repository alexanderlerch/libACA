<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 4.0.0 (20220602.1335)
 -->
<!-- Title: CNoveltyFromVector Pages: 1 -->
<!--zoomable 2137 -->
<svg id="main" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" onload="init(evt)">
<style type="text/css"><![CDATA[
.edge:hover path { stroke: red; }
.edge:hover polygon { stroke: red; fill: red; }
]]></style>
<script type="text/javascript"><![CDATA[
var edges = document.getElementsByTagName('g');
if (edges && edges.length) {
  for (var i=0;i<edges.length;i++) {
    if (edges[i].id.substr(0,4)=='edge') {
      edges[i].setAttribute('class','edge');
    }
  }
}
]]></script>
        <defs>
                <circle id="rim" cx="0" cy="0" r="7"/>
                <circle id="rim2" cx="0" cy="0" r="3.5"/>
                <g id="zoomPlus">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomplus.mouseover" end="zoomplus.mouseout"/>
                        </use>
                        <path d="M-4,0h8M0,-4v8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="zoomMin">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomminus.mouseover" end="zoomminus.mouseout"/>
                        </use>
                        <path d="M-4,0h8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="dirArrow">
                        <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
               <g id="resetDef">
                       <use xlink:href="#rim2" fill="#404040">
                               <set attributeName="fill" to="#808080" begin="reset.mouseover" end="reset.mouseout"/>
                       </use>
               </g>
        </defs>

<script type="text/javascript">
var viewWidth = 926;
var viewHeight = 2137;
var sectionId = 'dynsection-1';
</script>
<script xlink:href="svgpan.js"/>
<svg id="graph" class="graph">
<g id="viewport">
<title>CNoveltyFromVector</title>
<polygon fill="white" stroke="transparent" points="-4,4 -4,-2133 921.5,-2133 921.5,4 -4,4"/>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title=" ">
<polygon fill="#bfbfbf" stroke="black" points="362.5,-0.5 362.5,-123.5 517.5,-123.5 517.5,-0.5 362.5,-0.5"/>
<text text-anchor="middle" x="440" y="-111.5" font-family="Helvetica,sans-Serif" font-size="10.00">CNoveltyFromVector</text>
<polyline fill="none" stroke="black" points="362.5,-104.5 517.5,-104.5 "/>
<text text-anchor="middle" x="440" y="-92.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="362.5,-85.5 517.5,-85.5 "/>
<text text-anchor="start" x="370.5" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CNoveltyFromVector</text>
<text text-anchor="start" x="370.5" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00">(Novelty_t eNoveltyIdx,</text>
<text text-anchor="start" x="370.5" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const float *pfAudio,</text>
<text text-anchor="start" x="370.5" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00"> long long iAudioLength,</text>
<text text-anchor="start" x="370.5" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate, int</text>
<text text-anchor="start" x="370.5" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iBlockLength, int iHopLength)</text>
<text text-anchor="start" x="370.5" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CNoveltyFromVector()</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="a00507.xhtml" target="_top" xlink:title="class for computation of a magnitude Novelty from either a file or a vector">
<polygon fill="white" stroke="black" points="335.5,-161.5 335.5,-713.5 544.5,-713.5 544.5,-161.5 335.5,-161.5"/>
<text text-anchor="middle" x="440" y="-701.5" font-family="Helvetica,sans-Serif" font-size="10.00">CNoveltyIf</text>
<polyline fill="none" stroke="black" points="335.5,-694.5 544.5,-694.5 "/>
<text text-anchor="start" x="343.5" y="-682.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iBlockLength</text>
<text text-anchor="start" x="343.5" y="-671.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iHopLength</text>
<text text-anchor="start" x="343.5" y="-660.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float m_fSampleRate</text>
<text text-anchor="start" x="343.5" y="-649.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float * m_pfProcessBuff2</text>
<text text-anchor="start" x="343.5" y="-638.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float * m_pfProcessBuff1</text>
<text text-anchor="start" x="343.5" y="-627.5" font-family="Helvetica,sans-Serif" font-size="10.00"># bool m_bIsInitialized</text>
<polyline fill="none" stroke="black" points="335.5,-620.5 544.5,-620.5 "/>
<text text-anchor="start" x="343.5" y="-608.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getNumBlocks</text>
<text text-anchor="start" x="343.5" y="-597.5" font-family="Helvetica,sans-Serif" font-size="10.00">(int &amp;iNumBlocks) const</text>
<text text-anchor="start" x="343.5" y="-586.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ int getNumBlocks()</text>
<text text-anchor="start" x="343.5" y="-575.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const</text>
<text text-anchor="start" x="343.5" y="-564.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ float getTimeStamp</text>
<text text-anchor="start" x="343.5" y="-553.5" font-family="Helvetica,sans-Serif" font-size="10.00">(int iBlockIdx) const</text>
<text text-anchor="start" x="343.5" y="-542.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getTimeStamps</text>
<text text-anchor="start" x="343.5" y="-531.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfAxisTicks) const</text>
<text text-anchor="start" x="343.5" y="-520.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compNovelty</text>
<text text-anchor="start" x="343.5" y="-509.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfNovelty, bool</text>
<text text-anchor="start" x="343.5" y="-498.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pbisOnset=0)</text>
<text text-anchor="start" x="343.5" y="-487.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="343.5" y="-476.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CNoveltyIf *&amp;pCInstance,</text>
<text text-anchor="start" x="343.5" y="-465.5" font-family="Helvetica,sans-Serif" font-size="10.00"> Novelty_t eNoveltyIdx,</text>
<text text-anchor="start" x="343.5" y="-454.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const std::string &amp;strAudioFile</text>
<text text-anchor="start" x="343.5" y="-443.5" font-family="Helvetica,sans-Serif" font-size="10.00">Path, int iBlockLength=4096,</text>
<text text-anchor="start" x="343.5" y="-432.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iHopLength=512)</text>
<text text-anchor="start" x="343.5" y="-421.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="343.5" y="-410.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CNoveltyIf *&amp;pCInstance,</text>
<text text-anchor="start" x="343.5" y="-399.5" font-family="Helvetica,sans-Serif" font-size="10.00"> Novelty_t eNoveltyIdx,</text>
<text text-anchor="start" x="343.5" y="-388.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const float *pfAudio, long</text>
<text text-anchor="start" x="343.5" y="-377.5" font-family="Helvetica,sans-Serif" font-size="10.00"> long iNumFrames, float fSampleRate,</text>
<text text-anchor="start" x="343.5" y="-366.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iBlockLength=4096, int iHopLength=512)</text>
<text text-anchor="start" x="343.5" y="-355.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="343.5" y="-344.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CNoveltyIf *&amp;pCInstance)</text>
<text text-anchor="start" x="343.5" y="-333.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static std::string</text>
<text text-anchor="start" x="343.5" y="-322.5" font-family="Helvetica,sans-Serif" font-size="10.00"> getNoveltyString(Novelty</text>
<text text-anchor="start" x="343.5" y="-311.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t eNoveltyIdx)</text>
<text text-anchor="start" x="343.5" y="-300.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Novelty_t getNovelty</text>
<text text-anchor="start" x="343.5" y="-289.5" font-family="Helvetica,sans-Serif" font-size="10.00">IdxFromString(std::string</text>
<text text-anchor="start" x="343.5" y="-278.5" font-family="Helvetica,sans-Serif" font-size="10.00"> sNoveltyString)</text>
<text text-anchor="start" x="343.5" y="-267.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CNoveltyIf()</text>
<text text-anchor="start" x="343.5" y="-256.5" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CNoveltyIf()</text>
<text text-anchor="start" x="343.5" y="-245.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CNoveltyIf(const CNovelty</text>
<text text-anchor="start" x="343.5" y="-234.5" font-family="Helvetica,sans-Serif" font-size="10.00">If &amp;that)</text>
<text text-anchor="start" x="343.5" y="-223.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CNoveltyIf &amp; operator</text>
<text text-anchor="start" x="343.5" y="-212.5" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CNoveltyIf &amp;c)</text>
<text text-anchor="start" x="343.5" y="-201.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t reset_()</text>
<text text-anchor="start" x="343.5" y="-190.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t init_(Novelty</text>
<text text-anchor="start" x="343.5" y="-179.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t eNoveltyIdx)</text>
<text text-anchor="start" x="343.5" y="-168.5" font-family="Helvetica,sans-Serif" font-size="10.00"># void computeMagSpectrum_()</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M440,-150.9C440,-141.24 440,-132.08 440,-123.57"/>
<polygon fill="none" stroke="midnightblue" points="436.5,-151.13 440,-161.13 443.5,-151.13 436.5,-151.13"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="a00591.xhtml" target="_top" xlink:title="class for audio normalization offering three options">
<polygon fill="white" stroke="black" points="0,-926.5 0,-1159.5 150,-1159.5 150,-926.5 0,-926.5"/>
<text text-anchor="middle" x="75" y="-1147.5" font-family="Helvetica,sans-Serif" font-size="10.00">CNormalizeAudio</text>
<polyline fill="none" stroke="black" points="0,-1140.5 150,-1140.5 "/>
<text text-anchor="start" x="8" y="-1128.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float m_fScaleFactor</text>
<polyline fill="none" stroke="black" points="0,-1121.5 150,-1121.5 "/>
<text text-anchor="start" x="8" y="-1109.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CNormalizeAudio(CAudioFile</text>
<text text-anchor="start" x="8" y="-1098.5" font-family="Helvetica,sans-Serif" font-size="10.00">If *pCAudioFile)</text>
<text text-anchor="start" x="8" y="-1087.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CNormalizeAudio(const</text>
<text text-anchor="start" x="8" y="-1076.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfAudioBuff, long</text>
<text text-anchor="start" x="8" y="-1065.5" font-family="Helvetica,sans-Serif" font-size="10.00"> long iAudioLength)</text>
<text text-anchor="start" x="8" y="-1054.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CNormalizeAudio()</text>
<text text-anchor="start" x="8" y="-1043.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void normalizeBlock</text>
<text text-anchor="start" x="8" y="-1032.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfAudioBlock,</text>
<text text-anchor="start" x="8" y="-1021.5" font-family="Helvetica,sans-Serif" font-size="10.00"> long long iNumSamples)</text>
<text text-anchor="start" x="8" y="-1010.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static void normalizeSignal</text>
<text text-anchor="start" x="8" y="-999.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfAudio, long long</text>
<text text-anchor="start" x="8" y="-988.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iNumSamples)</text>
<text text-anchor="start" x="8" y="-977.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CNormalizeAudio()</text>
<text text-anchor="start" x="8" y="-966.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CNormalizeAudio(const</text>
<text text-anchor="start" x="8" y="-955.5" font-family="Helvetica,sans-Serif" font-size="10.00"> CNormalizeAudio &amp;that)</text>
<text text-anchor="start" x="8" y="-944.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CNormalizeAudio &amp; operator</text>
<text text-anchor="start" x="8" y="-933.5" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CNormalizeAudio &amp;c)</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node2 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node2</title>
<path fill="none" stroke="#404040" d="M97.75,-926.5C111.01,-873.93 130.8,-812.17 159,-761 202.97,-681.19 269.35,-603.8 326.55,-544.84"/>
<polygon fill="none" stroke="#404040" points="326.89,-544.49 328.23,-537.41 335.28,-535.91 333.95,-543 326.89,-544.49"/>
<text text-anchor="middle" x="209.5" y="-735" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCNormalize</text>
</g>
<!-- Node4 -->
<g id="node4" class="node">
<title>Node4</title>
<g id="a_node4"><a xlink:href="a00535.xhtml" target="_top" xlink:title="forward declaration">
<polygon fill="white" stroke="black" points="168,-827.5 168,-1258.5 328,-1258.5 328,-827.5 168,-827.5"/>
<text text-anchor="middle" x="248" y="-1246.5" font-family="Helvetica,sans-Serif" font-size="10.00">CBlockAudioIf</text>
<polyline fill="none" stroke="black" points="168,-1239.5 328,-1239.5 "/>
<text text-anchor="start" x="176" y="-1227.5" font-family="Helvetica,sans-Serif" font-size="10.00"># long long m_iNumBlocks</text>
<text text-anchor="start" x="176" y="-1216.5" font-family="Helvetica,sans-Serif" font-size="10.00"># long long m_iCurrBlock</text>
<text text-anchor="start" x="176" y="-1205.5" font-family="Helvetica,sans-Serif" font-size="10.00"># long long m_iAudioLength</text>
<text text-anchor="start" x="176" y="-1194.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iBlockLength</text>
<text text-anchor="start" x="176" y="-1183.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iNumChannels</text>
<text text-anchor="start" x="176" y="-1172.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iHopLength</text>
<text text-anchor="start" x="176" y="-1161.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float m_fSampleRate</text>
<polyline fill="none" stroke="black" points="168,-1154.5 328,-1154.5 "/>
<text text-anchor="start" x="176" y="-1142.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ long long getNumBlocks</text>
<text text-anchor="start" x="176" y="-1131.5" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="176" y="-1120.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ long long getLengthInSamples</text>
<text text-anchor="start" x="176" y="-1109.5" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="176" y="-1098.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ float getTimeStamp</text>
<text text-anchor="start" x="176" y="-1087.5" font-family="Helvetica,sans-Serif" font-size="10.00">(long long iBlockIdx)</text>
<text text-anchor="start" x="176" y="-1076.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual bool isEndOfData</text>
<text text-anchor="start" x="176" y="-1065.5" font-family="Helvetica,sans-Serif" font-size="10.00">() const =0</text>
<text text-anchor="start" x="176" y="-1054.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual int getNextBlock</text>
<text text-anchor="start" x="176" y="-1043.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfBlock, float</text>
<text text-anchor="start" x="176" y="-1032.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfTimeStampInS=0)=0</text>
<text text-anchor="start" x="176" y="-1021.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="176" y="-1010.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CBlockAudioIf *&amp;pCInstance,</text>
<text text-anchor="start" x="176" y="-999.5" font-family="Helvetica,sans-Serif" font-size="10.00"> CAudioFileIf *pCAudioFile,</text>
<text text-anchor="start" x="176" y="-988.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iBlockLength, int iHopLength)</text>
<text text-anchor="start" x="176" y="-977.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="176" y="-966.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CBlockAudioIf *&amp;pCInstance,</text>
<text text-anchor="start" x="176" y="-955.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const float *pfAudioBuff,</text>
<text text-anchor="start" x="176" y="-944.5" font-family="Helvetica,sans-Serif" font-size="10.00"> long long iAudioLength, int</text>
<text text-anchor="start" x="176" y="-933.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iBlockLength, int iHopLength,</text>
<text text-anchor="start" x="176" y="-922.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate)</text>
<text text-anchor="start" x="176" y="-911.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="176" y="-900.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CBlockAudioIf *&amp;pCInstance)</text>
<text text-anchor="start" x="176" y="-889.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CBlockAudioIf()</text>
<text text-anchor="start" x="176" y="-878.5" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CBlockAudioIf()</text>
<text text-anchor="start" x="176" y="-867.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CBlockAudioIf(const</text>
<text text-anchor="start" x="176" y="-856.5" font-family="Helvetica,sans-Serif" font-size="10.00"> CBlockAudioIf &amp;that)</text>
<text text-anchor="start" x="176" y="-845.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CBlockAudioIf &amp; operator</text>
<text text-anchor="start" x="176" y="-834.5" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CBlockAudioIf &amp;c)</text>
</a>
</g>
</g>
<!-- Node4&#45;&gt;Node2 -->
<g id="edge3" class="edge">
<title>Node4&#45;&gt;Node2</title>
<path fill="none" stroke="#404040" d="M315.98,-827.19C323.07,-804.84 330.18,-782.46 337,-761 340.71,-749.33 344.5,-737.42 348.33,-725.39"/>
<polygon fill="none" stroke="#404040" points="348.38,-725.25 346.39,-718.32 352.02,-713.82 354.01,-720.75 348.38,-725.25"/>
<text text-anchor="middle" x="387.5" y="-735" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCBlockAudio</text>
</g>
<!-- Node5 -->
<g id="node5" class="node">
<title>Node5</title>
<g id="a_node5"><a xlink:href="a00511.xhtml" target="_top" xlink:title="class for computation of a Novelty from a block of data (e.g., time or magnitude spectrum)">
<polygon fill="white" stroke="black" points="346,-761.5 346,-1324.5 534,-1324.5 534,-761.5 346,-761.5"/>
<text text-anchor="middle" x="440" y="-1312.5" font-family="Helvetica,sans-Serif" font-size="10.00">CNoveltyFromBlockIf</text>
<polyline fill="none" stroke="black" points="346,-1305.5 534,-1305.5 "/>
<text text-anchor="start" x="354" y="-1293.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CNoveltyIf::Novelty</text>
<text text-anchor="start" x="354" y="-1282.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t m_eNoveltyIdx</text>
<text text-anchor="start" x="354" y="-1271.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iDataLength</text>
<text text-anchor="start" x="354" y="-1260.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float m_fSampleRate</text>
<text text-anchor="start" x="354" y="-1249.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float * m_pfPrevSpec</text>
<text text-anchor="start" x="354" y="-1238.5" font-family="Helvetica,sans-Serif" font-size="10.00"># const std::map&lt; CNovelty</text>
<text text-anchor="start" x="354" y="-1227.5" font-family="Helvetica,sans-Serif" font-size="10.00">If::Novelty_t, std::function</text>
<text text-anchor="start" x="354" y="-1216.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; float(const float *, const</text>
<text text-anchor="start" x="354" y="-1205.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *, int, float)&gt; &gt; m_DispatchMap</text>
<polyline fill="none" stroke="black" points="346,-1198.5 534,-1198.5 "/>
<text text-anchor="start" x="354" y="-1186.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual int getNoveltyDimension</text>
<text text-anchor="start" x="354" y="-1175.5" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="354" y="-1164.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CNoveltyIf::Novelty</text>
<text text-anchor="start" x="354" y="-1153.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t getNoveltyIdx() const</text>
<text text-anchor="start" x="354" y="-1142.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Error_t compNovelty</text>
<text text-anchor="start" x="354" y="-1131.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfNovelty, const</text>
<text text-anchor="start" x="354" y="-1120.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfInput)</text>
<text text-anchor="start" x="354" y="-1109.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="354" y="-1098.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CNoveltyFromBlockIf</text>
<text text-anchor="start" x="354" y="-1087.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *&amp;pCInstance, CNoveltyIf</text>
<text text-anchor="start" x="354" y="-1076.5" font-family="Helvetica,sans-Serif" font-size="10.00">::Novelty_t eNoveltyIdx,</text>
<text text-anchor="start" x="354" y="-1065.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="354" y="-1054.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="354" y="-1043.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CNoveltyFromBlockIf *&amp;pCInstance)</text>
<text text-anchor="start" x="354" y="-1032.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compNovelty</text>
<text text-anchor="start" x="354" y="-1021.5" font-family="Helvetica,sans-Serif" font-size="10.00">Flux(const float *pfMagSpec,</text>
<text text-anchor="start" x="354" y="-1010.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const float *pfPrevSpec,</text>
<text text-anchor="start" x="354" y="-999.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="354" y="-988.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compNovelty</text>
<text text-anchor="start" x="354" y="-977.5" font-family="Helvetica,sans-Serif" font-size="10.00">Hainsworth(const float</text>
<text text-anchor="start" x="354" y="-966.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfMagSpec, const float</text>
<text text-anchor="start" x="354" y="-955.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfPrevSpec, int iDataLength,</text>
<text text-anchor="start" x="354" y="-944.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate=1.F)</text>
<text text-anchor="start" x="354" y="-933.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compNovelty</text>
<text text-anchor="start" x="354" y="-922.5" font-family="Helvetica,sans-Serif" font-size="10.00">Laroche(const float *pfMagSpec,</text>
<text text-anchor="start" x="354" y="-911.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const float *pfPrevSpec, int</text>
<text text-anchor="start" x="354" y="-900.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="354" y="-889.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CNoveltyFromBlockIf()</text>
<text text-anchor="start" x="354" y="-878.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CNoveltyFromBlockIf</text>
<text text-anchor="start" x="354" y="-867.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CNoveltyIf::Novelty</text>
<text text-anchor="start" x="354" y="-856.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t eNoveltyIdx, int iDataLength,</text>
<text text-anchor="start" x="354" y="-845.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate)</text>
<text text-anchor="start" x="354" y="-834.5" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CNoveltyFromBlockIf()</text>
<text text-anchor="start" x="354" y="-823.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CNoveltyFromBlockIf</text>
<text text-anchor="start" x="354" y="-812.5" font-family="Helvetica,sans-Serif" font-size="10.00">(const CNoveltyFromBlockIf</text>
<text text-anchor="start" x="354" y="-801.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;that)</text>
<text text-anchor="start" x="354" y="-790.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CNoveltyFromBlockIf</text>
<text text-anchor="start" x="354" y="-779.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp; operator=(const CNovelty</text>
<text text-anchor="start" x="354" y="-768.5" font-family="Helvetica,sans-Serif" font-size="10.00">FromBlockIf &amp;c)</text>
</a>
</g>
</g>
<!-- Node5&#45;&gt;Node2 -->
<g id="edge4" class="edge">
<title>Node5&#45;&gt;Node2</title>
<path fill="none" stroke="#404040" d="M440,-761.45C440,-749.69 440,-737.88 440,-726.1"/>
<polygon fill="none" stroke="#404040" points="440,-725.84 436,-719.84 440,-713.84 444,-719.84 440,-725.84"/>
<text text-anchor="middle" x="473.5" y="-735" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCNovelty</text>
</g>
<!-- Node6 -->
<g id="node6" class="node">
<title>Node6</title>
<g id="a_node6"><a xlink:href="a00467.xhtml" target="_top" xlink:title="class for FFT computation with windowing">
<polygon fill="white" stroke="black" points="552,-800 552,-1286 740,-1286 740,-800 552,-800"/>
<text text-anchor="middle" x="646" y="-1274" font-family="Helvetica,sans-Serif" font-size="10.00">CFft</text>
<polyline fill="none" stroke="black" points="552,-1267 740,-1267 "/>
<text text-anchor="start" x="560" y="-1255" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_pfProcessBuff</text>
<text text-anchor="start" x="560" y="-1244" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_pfWindowBuff</text>
<text text-anchor="start" x="560" y="-1233" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iDataLength</text>
<text text-anchor="start" x="560" y="-1222" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iFftLength</text>
<text text-anchor="start" x="560" y="-1211" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Windowing_t m_ePrePostWindowOpt</text>
<text text-anchor="start" x="560" y="-1200" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; bool m_bIsInitialized</text>
<text text-anchor="start" x="560" y="-1189" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; static const float m_Pi</text>
<text text-anchor="start" x="560" y="-1178" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; static const float</text>
<text text-anchor="start" x="560" y="-1167" font-family="Helvetica,sans-Serif" font-size="10.00"> m_Pi2</text>
<polyline fill="none" stroke="black" points="552,-1160 740,-1160 "/>
<text text-anchor="start" x="560" y="-1148" font-family="Helvetica,sans-Serif" font-size="10.00">+ CFft()</text>
<text text-anchor="start" x="560" y="-1137" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CFft()</text>
<text text-anchor="start" x="560" y="-1126" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t init(int iBlockLength,</text>
<text text-anchor="start" x="560" y="-1115" font-family="Helvetica,sans-Serif" font-size="10.00"> int iZeroPadFactor=1, WindowFunction</text>
<text text-anchor="start" x="560" y="-1104" font-family="Helvetica,sans-Serif" font-size="10.00">_t eWindow=kWindowHann, Windowing</text>
<text text-anchor="start" x="560" y="-1093" font-family="Helvetica,sans-Serif" font-size="10.00">_t eWindowing=kPreWindow)</text>
<text text-anchor="start" x="560" y="-1082" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t reset()</text>
<text text-anchor="start" x="560" y="-1071" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t overrideWindow</text>
<text text-anchor="start" x="560" y="-1060" font-family="Helvetica,sans-Serif" font-size="10.00">(const float *pfNewWindow)</text>
<text text-anchor="start" x="560" y="-1049" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getWindow(float</text>
<text text-anchor="start" x="560" y="-1038" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfWindow) const</text>
<text text-anchor="start" x="560" y="-1027" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compFft(complex</text>
<text text-anchor="start" x="560" y="-1016" font-family="Helvetica,sans-Serif" font-size="10.00">_t *pfSpectrum, const</text>
<text text-anchor="start" x="560" y="-1005" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfInput)</text>
<text text-anchor="start" x="560" y="-994" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compInvFft</text>
<text text-anchor="start" x="560" y="-983" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfOutput, const</text>
<text text-anchor="start" x="560" y="-972" font-family="Helvetica,sans-Serif" font-size="10.00"> complex_t *pfSpectrum)</text>
<text text-anchor="start" x="560" y="-961" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getMagnitude</text>
<text text-anchor="start" x="560" y="-950" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfMag, const</text>
<text text-anchor="start" x="560" y="-939" font-family="Helvetica,sans-Serif" font-size="10.00"> complex_t *pfSpectrum)</text>
<text text-anchor="start" x="560" y="-928" font-family="Helvetica,sans-Serif" font-size="10.00"> const</text>
<text text-anchor="start" x="560" y="-917" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getPhase(float</text>
<text text-anchor="start" x="560" y="-906" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfPhase, const complex</text>
<text text-anchor="start" x="560" y="-895" font-family="Helvetica,sans-Serif" font-size="10.00">_t *pfSpectrum) const</text>
<text text-anchor="start" x="560" y="-884" font-family="Helvetica,sans-Serif" font-size="10.00">and 7 more...</text>
<text text-anchor="start" x="560" y="-873" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CFft(const CFft &amp;that)</text>
<text text-anchor="start" x="560" y="-862" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CFft &amp; operator=(const</text>
<text text-anchor="start" x="560" y="-851" font-family="Helvetica,sans-Serif" font-size="10.00"> CFft &amp;c)</text>
<text text-anchor="start" x="560" y="-840" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Error_t allocMemory_()</text>
<text text-anchor="start" x="560" y="-829" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Error_t freeMemory_()</text>
<text text-anchor="start" x="560" y="-818" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Error_t computeWindow</text>
<text text-anchor="start" x="560" y="-807" font-family="Helvetica,sans-Serif" font-size="10.00">_(WindowFunction_t eWindow)</text>
</a>
</g>
</g>
<!-- Node6&#45;&gt;Node2 -->
<g id="edge5" class="edge">
<title>Node6&#45;&gt;Node2</title>
<path fill="none" stroke="#404040" d="M563.25,-799.58C554.91,-775.14 546.38,-750.15 537.9,-725.31"/>
<polygon fill="none" stroke="#404040" points="537.88,-725.26 532.16,-720.87 534.01,-713.9 539.73,-718.29 537.88,-725.26"/>
<text text-anchor="middle" x="566" y="-735" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCFft</text>
</g>
<!-- Node7 -->
<g id="node7" class="node">
<title>Node7</title>
<g id="a_node7"><a xlink:href="a00571.xhtml" target="_top" xlink:title="class for single&#45;pole low pass filtering">
<polygon fill="white" stroke="black" points="758.5,-877 758.5,-1209 917.5,-1209 917.5,-877 758.5,-877"/>
<text text-anchor="middle" x="838" y="-1197" font-family="Helvetica,sans-Serif" font-size="10.00">CMovingAverage</text>
<polyline fill="none" stroke="black" points="758.5,-1190 917.5,-1190 "/>
<text text-anchor="start" x="766.5" y="-1178" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float m_fPrevOut</text>
<polyline fill="none" stroke="black" points="758.5,-1171 917.5,-1171 "/>
<text text-anchor="start" x="766.5" y="-1159" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t setFilterParam</text>
<text text-anchor="start" x="766.5" y="-1148" font-family="Helvetica,sans-Serif" font-size="10.00">(int iFilterLength=64)</text>
<text text-anchor="start" x="766.5" y="-1137" font-family="Helvetica,sans-Serif" font-size="10.00">+ int getFilterParam</text>
<text text-anchor="start" x="766.5" y="-1126" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="766.5" y="-1115" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t process(float</text>
<text text-anchor="start" x="766.5" y="-1104" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfOutput, const float</text>
<text text-anchor="start" x="766.5" y="-1093" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfInput, long long iLengthOf</text>
<text text-anchor="start" x="766.5" y="-1082" font-family="Helvetica,sans-Serif" font-size="10.00">Buffer)</text>
<text text-anchor="start" x="766.5" y="-1071" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t reset()</text>
<text text-anchor="start" x="766.5" y="-1060" font-family="Helvetica,sans-Serif" font-size="10.00">+ void filtfilt(float</text>
<text text-anchor="start" x="766.5" y="-1049" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfOutput, const float</text>
<text text-anchor="start" x="766.5" y="-1038" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfInput, long long iLengthOf</text>
<text text-anchor="start" x="766.5" y="-1027" font-family="Helvetica,sans-Serif" font-size="10.00">Buffer)</text>
<text text-anchor="start" x="766.5" y="-1016" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="766.5" y="-1005" font-family="Helvetica,sans-Serif" font-size="10.00">(CMovingAverage *&amp;pCInstance)</text>
<text text-anchor="start" x="766.5" y="-994" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="766.5" y="-983" font-family="Helvetica,sans-Serif" font-size="10.00">(CMovingAverage *&amp;pCInstance)</text>
<text text-anchor="start" x="766.5" y="-972" font-family="Helvetica,sans-Serif" font-size="10.00">+ static int calcFilterLength</text>
<text text-anchor="start" x="766.5" y="-961" font-family="Helvetica,sans-Serif" font-size="10.00">(float fIntegrationTimeInS,</text>
<text text-anchor="start" x="766.5" y="-950" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate)</text>
<text text-anchor="start" x="766.5" y="-939" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CMovingAverage()</text>
<text text-anchor="start" x="766.5" y="-928" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; virtual ~CMovingAverage()</text>
<text text-anchor="start" x="766.5" y="-917" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CMovingAverage(const</text>
<text text-anchor="start" x="766.5" y="-906" font-family="Helvetica,sans-Serif" font-size="10.00"> CMovingAverage &amp;that)</text>
<text text-anchor="start" x="766.5" y="-895" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CMovingAverage &amp; operator</text>
<text text-anchor="start" x="766.5" y="-884" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CMovingAverage &amp;c)</text>
</a>
</g>
</g>
<!-- Node7&#45;&gt;Node2 -->
<g id="edge6" class="edge">
<title>Node7&#45;&gt;Node2</title>
<path fill="none" stroke="#404040" d="M799.5,-876.84C786.62,-837.36 770.02,-796.43 749,-761 697.62,-674.37 618.83,-592.63 553.67,-533.11"/>
<polygon fill="none" stroke="#404040" points="553.46,-532.92 546.33,-531.86 544.57,-524.86 551.7,-525.93 553.46,-532.92"/>
<text text-anchor="middle" x="769.5" y="-735" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCLpFilter</text>
</g>
<!-- Node8 -->
<g id="node8" class="node">
<title>Node8</title>
<g id="a_node8"><a xlink:href="a00483.xhtml" target="_top" xlink:title=" ">
<polygon fill="white" stroke="black" points="771.5,-1372.5 771.5,-1737.5 904.5,-1737.5 904.5,-1372.5 771.5,-1372.5"/>
<text text-anchor="middle" x="838" y="-1725.5" font-family="Helvetica,sans-Serif" font-size="10.00">CRingBuffer&lt; float &gt;</text>
<polyline fill="none" stroke="black" points="771.5,-1718.5 904.5,-1718.5 "/>
<text text-anchor="start" x="779.5" y="-1706.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iBuffLength</text>
<text text-anchor="start" x="779.5" y="-1695.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iReadIdx</text>
<text text-anchor="start" x="779.5" y="-1684.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iWriteIdx</text>
<text text-anchor="start" x="779.5" y="-1673.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_ptBuff</text>
<polyline fill="none" stroke="black" points="771.5,-1666.5 904.5,-1666.5 "/>
<text text-anchor="start" x="779.5" y="-1654.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CRingBuffer(int iBuffer</text>
<text text-anchor="start" x="779.5" y="-1643.5" font-family="Helvetica,sans-Serif" font-size="10.00">LengthInSamples)</text>
<text text-anchor="start" x="779.5" y="-1632.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CRingBuffer()</text>
<text text-anchor="start" x="779.5" y="-1621.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void putPostInc(float</text>
<text text-anchor="start" x="779.5" y="-1610.5" font-family="Helvetica,sans-Serif" font-size="10.00"> tNewValue)</text>
<text text-anchor="start" x="779.5" y="-1599.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void putPostInc(const</text>
<text text-anchor="start" x="779.5" y="-1588.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *ptNewBuff, int</text>
<text text-anchor="start" x="779.5" y="-1577.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iLength)</text>
<text text-anchor="start" x="779.5" y="-1566.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void put(float tNewValue)</text>
<text text-anchor="start" x="779.5" y="-1555.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void put(const float</text>
<text text-anchor="start" x="779.5" y="-1544.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *ptNewBuff, int iLength)</text>
<text text-anchor="start" x="779.5" y="-1533.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ float getPostInc()</text>
<text text-anchor="start" x="779.5" y="-1522.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void getPostInc(float</text>
<text text-anchor="start" x="779.5" y="-1511.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *ptBuff, int iLength)</text>
<text text-anchor="start" x="779.5" y="-1500.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ float get(float fOffset</text>
<text text-anchor="start" x="779.5" y="-1489.5" font-family="Helvetica,sans-Serif" font-size="10.00">=0) const</text>
<text text-anchor="start" x="779.5" y="-1478.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void get(float *ptBuff,</text>
<text text-anchor="start" x="779.5" y="-1467.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iLength) const</text>
<text text-anchor="start" x="779.5" y="-1456.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 7 more...</text>
<text text-anchor="start" x="779.5" y="-1445.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CRingBuffer()</text>
<text text-anchor="start" x="779.5" y="-1434.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CRingBuffer(const</text>
<text text-anchor="start" x="779.5" y="-1423.5" font-family="Helvetica,sans-Serif" font-size="10.00"> CRingBuffer &amp;that)</text>
<text text-anchor="start" x="779.5" y="-1412.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CRingBuffer &amp; operator</text>
<text text-anchor="start" x="779.5" y="-1401.5" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CRingBuffer &amp;c)</text>
<text text-anchor="start" x="779.5" y="-1390.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; void incIdx(int &amp;iIdx,</text>
<text text-anchor="start" x="779.5" y="-1379.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iOffset=1)</text>
</a>
</g>
</g>
<!-- Node8&#45;&gt;Node7 -->
<g id="edge7" class="edge">
<title>Node8&#45;&gt;Node7</title>
<path fill="none" stroke="#404040" d="M838,-1372.4C838,-1323.22 838,-1270.07 838,-1221.14"/>
<polygon fill="none" stroke="#404040" points="838,-1221.13 834,-1215.13 838,-1209.13 842,-1215.13 838,-1221.13"/>
<text text-anchor="middle" x="872" y="-1346" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;m_pCRingBuff</text>
</g>
<!-- Node9 -->
<g id="node9" class="node">
<title>Node9</title>
<g id="a_node9"><a xlink:href="a00483.xhtml" target="_top" xlink:title="implement a circular buffer of type T">
<polygon fill="white" stroke="black" points="760.5,-1785.5 760.5,-2128.5 915.5,-2128.5 915.5,-1785.5 760.5,-1785.5"/>
<text text-anchor="middle" x="838" y="-2116.5" font-family="Helvetica,sans-Serif" font-size="10.00">CRingBuffer&lt; T &gt;</text>
<polyline fill="none" stroke="black" points="760.5,-2109.5 915.5,-2109.5 "/>
<text text-anchor="start" x="768.5" y="-2097.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iBuffLength</text>
<text text-anchor="start" x="768.5" y="-2086.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iReadIdx</text>
<text text-anchor="start" x="768.5" y="-2075.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iWriteIdx</text>
<text text-anchor="start" x="768.5" y="-2064.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; T * m_ptBuff</text>
<polyline fill="none" stroke="black" points="760.5,-2057.5 915.5,-2057.5 "/>
<text text-anchor="start" x="768.5" y="-2045.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CRingBuffer(int iBuffer</text>
<text text-anchor="start" x="768.5" y="-2034.5" font-family="Helvetica,sans-Serif" font-size="10.00">LengthInSamples)</text>
<text text-anchor="start" x="768.5" y="-2023.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CRingBuffer()</text>
<text text-anchor="start" x="768.5" y="-2012.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void putPostInc(T tNewValue)</text>
<text text-anchor="start" x="768.5" y="-2001.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void putPostInc(const</text>
<text text-anchor="start" x="768.5" y="-1990.5" font-family="Helvetica,sans-Serif" font-size="10.00"> T *ptNewBuff, int iLength)</text>
<text text-anchor="start" x="768.5" y="-1979.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void put(T tNewValue)</text>
<text text-anchor="start" x="768.5" y="-1968.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void put(const T *ptNewBuff,</text>
<text text-anchor="start" x="768.5" y="-1957.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iLength)</text>
<text text-anchor="start" x="768.5" y="-1946.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ T getPostInc()</text>
<text text-anchor="start" x="768.5" y="-1935.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void getPostInc(T *ptBuff,</text>
<text text-anchor="start" x="768.5" y="-1924.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iLength)</text>
<text text-anchor="start" x="768.5" y="-1913.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ T get(float fOffset</text>
<text text-anchor="start" x="768.5" y="-1902.5" font-family="Helvetica,sans-Serif" font-size="10.00">=0) const</text>
<text text-anchor="start" x="768.5" y="-1891.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void get(T *ptBuff,</text>
<text text-anchor="start" x="768.5" y="-1880.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iLength) const</text>
<text text-anchor="start" x="768.5" y="-1869.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 7 more...</text>
<text text-anchor="start" x="768.5" y="-1858.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CRingBuffer()</text>
<text text-anchor="start" x="768.5" y="-1847.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CRingBuffer(const</text>
<text text-anchor="start" x="768.5" y="-1836.5" font-family="Helvetica,sans-Serif" font-size="10.00"> CRingBuffer &amp;that)</text>
<text text-anchor="start" x="768.5" y="-1825.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CRingBuffer &amp; operator</text>
<text text-anchor="start" x="768.5" y="-1814.5" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CRingBuffer &amp;c)</text>
<text text-anchor="start" x="768.5" y="-1803.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; void incIdx(int &amp;iIdx,</text>
<text text-anchor="start" x="768.5" y="-1792.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iOffset=1)</text>
</a>
</g>
</g>
<!-- Node9&#45;&gt;Node8 -->
<g id="edge8" class="edge">
<title>Node9&#45;&gt;Node8</title>
<path fill="none" stroke="orange" d="M838,-1775.45C838,-1762.89 838,-1750.22 838,-1737.65"/>
<polygon fill="orange" stroke="orange" points="834.5,-1775.49 838,-1785.49 841.5,-1775.49 834.5,-1775.49"/>
<text text-anchor="middle" x="856.5" y="-1759" font-family="Helvetica,sans-Serif" font-size="10.00"> &lt; float &gt;</text>
</g>
</g>
</svg>
        <g id="navigator" transform="translate(0 0)" fill="#404254">
                <rect fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width=".5" x="0" y="0" width="60" height="60"/>
                <use id="zoomplus" xlink:href="#zoomPlus" x="17" y="9" onmousedown="handleZoom(evt,'in')"/>
                <use id="zoomminus" xlink:href="#zoomMin" x="42" y="9" onmousedown="handleZoom(evt,'out')"/>
                <use id="reset" xlink:href="#resetDef" x="30" y="36" onmousedown="handleReset()"/>
                <g id="arrowUp" xlink:href="#dirArrow" transform="translate(30 24)" onmousedown="handlePan(0,-1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowUp.mouseover" end="arrowUp.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowRight" xlink:href="#dirArrow" transform="rotate(90) translate(36 -43)" onmousedown="handlePan(1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowRight.mouseover" end="arrowRight.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowDown" xlink:href="#dirArrow" transform="rotate(180) translate(-30 -48)" onmousedown="handlePan(0,1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowDown.mouseover" end="arrowDown.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowLeft" xlink:href="#dirArrow" transform="rotate(270) translate(-36 17)" onmousedown="handlePan(-1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowLeft.mouseover" end="arrowLeft.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
        </g>
        <svg viewBox="0 0 15 15" width="100%" height="30px" preserveAspectRatio="xMaxYMin meet">
         <g id="arrow_out" transform="scale(0.3 0.3)">
          <a xlink:href="a00361_org.svg" target="_base">
           <rect id="button" ry="5" rx="5" y="6" x="6" height="38" width="38"
                fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width="1.0"/>
           <path id="arrow"
             d="M 11.500037,31.436501 C 11.940474,20.09759 22.043105,11.32322 32.158766,21.979434 L 37.068811,17.246167 C 37.068811,17.246167 37.088388,32 37.088388,32 L 22.160133,31.978069 C 22.160133,31.978069 26.997745,27.140456 26.997745,27.140456 C 18.528582,18.264221 13.291696,25.230495 11.500037,31.436501 z"
             style="fill:#404040;"/>
          </a>
         </g>
        </svg>
</svg>
