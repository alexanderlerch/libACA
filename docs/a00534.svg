<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 4.0.0 (20220602.1335)
 -->
<!-- Title: CSpectrogramIf Pages: 1 -->
<!--zoomable 1216 -->
<svg id="main" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" onload="init(evt)">
<style type="text/css"><![CDATA[
.edge:hover path { stroke: red; }
.edge:hover polygon { stroke: red; fill: red; }
]]></style>
<script type="text/javascript"><![CDATA[
var edges = document.getElementsByTagName('g');
if (edges && edges.length) {
  for (var i=0;i<edges.length;i++) {
    if (edges[i].id.substr(0,4)=='edge') {
      edges[i].setAttribute('class','edge');
    }
  }
}
]]></script>
        <defs>
                <circle id="rim" cx="0" cy="0" r="7"/>
                <circle id="rim2" cx="0" cy="0" r="3.5"/>
                <g id="zoomPlus">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomplus.mouseover" end="zoomplus.mouseout"/>
                        </use>
                        <path d="M-4,0h8M0,-4v8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="zoomMin">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomminus.mouseover" end="zoomminus.mouseout"/>
                        </use>
                        <path d="M-4,0h8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="dirArrow">
                        <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
               <g id="resetDef">
                       <use xlink:href="#rim2" fill="#404040">
                               <set attributeName="fill" to="#808080" begin="reset.mouseover" end="reset.mouseout"/>
                       </use>
               </g>
        </defs>

<script type="text/javascript">
var viewWidth = 542;
var viewHeight = 1216;
var sectionId = 'dynsection-1';
</script>
<script xlink:href="svgpan.js"/>
<svg id="graph" class="graph">
<g id="viewport">
<title>CSpectrogramIf</title>
<polygon fill="white" stroke="transparent" points="-4,4 -4,-1212 538,-1212 538,4 -4,4"/>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="class for computation of a magnitude spectrogram from either a file or a vector">
<polygon fill="#bfbfbf" stroke="black" points="134.5,-0.5 134.5,-673.5 361.5,-673.5 361.5,-0.5 134.5,-0.5"/>
<text text-anchor="middle" x="248" y="-661.5" font-family="Helvetica,sans-Serif" font-size="10.00">CSpectrogramIf</text>
<polyline fill="none" stroke="black" points="134.5,-654.5 361.5,-654.5 "/>
<text text-anchor="start" x="142.5" y="-642.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iBlockLength</text>
<text text-anchor="start" x="142.5" y="-631.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iHopLength</text>
<text text-anchor="start" x="142.5" y="-620.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float m_fSampleRate</text>
<text text-anchor="start" x="142.5" y="-609.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float * m_pfSpectrum</text>
<text text-anchor="start" x="142.5" y="-598.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float * m_pfProcessBuff</text>
<text text-anchor="start" x="142.5" y="-587.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float ** m_ppfHMel</text>
<text text-anchor="start" x="142.5" y="-576.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float * m_pffcMel</text>
<text text-anchor="start" x="142.5" y="-565.5" font-family="Helvetica,sans-Serif" font-size="10.00"># bool m_bIsInitialized</text>
<polyline fill="none" stroke="black" points="134.5,-558.5 361.5,-558.5 "/>
<text text-anchor="start" x="142.5" y="-546.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getSpectrogramDimensions</text>
<text text-anchor="start" x="142.5" y="-535.5" font-family="Helvetica,sans-Serif" font-size="10.00">(int &amp;iNumRows, int &amp;iNumCols) const</text>
<text text-anchor="start" x="142.5" y="-524.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getSpectrogramAxis</text>
<text text-anchor="start" x="142.5" y="-513.5" font-family="Helvetica,sans-Serif" font-size="10.00">Vectors(float *pfAxisTicks,</text>
<text text-anchor="start" x="142.5" y="-502.5" font-family="Helvetica,sans-Serif" font-size="10.00"> enum AxisLabel_t eAxisLabel) const</text>
<text text-anchor="start" x="142.5" y="-491.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compSpectrogram</text>
<text text-anchor="start" x="142.5" y="-480.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float **ppfSpectrogram)</text>
<text text-anchor="start" x="142.5" y="-469.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getMelSpectrogram</text>
<text text-anchor="start" x="142.5" y="-458.5" font-family="Helvetica,sans-Serif" font-size="10.00">Dimensions(int &amp;iNumRows,</text>
<text text-anchor="start" x="142.5" y="-447.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int &amp;iNumCols, const MelSpectrogram</text>
<text text-anchor="start" x="142.5" y="-436.5" font-family="Helvetica,sans-Serif" font-size="10.00">Config_t *pMelSpecConfig) const</text>
<text text-anchor="start" x="142.5" y="-425.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getMelSpectrogram</text>
<text text-anchor="start" x="142.5" y="-414.5" font-family="Helvetica,sans-Serif" font-size="10.00">AxisVectors(float *pfAxisTicks,</text>
<text text-anchor="start" x="142.5" y="-403.5" font-family="Helvetica,sans-Serif" font-size="10.00"> enum AxisLabel_t eAxisLabel,</text>
<text text-anchor="start" x="142.5" y="-392.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const MelSpectrogramConfig_t</text>
<text text-anchor="start" x="142.5" y="-381.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pMelSpecConfig)</text>
<text text-anchor="start" x="142.5" y="-370.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compMelSpectrogram</text>
<text text-anchor="start" x="142.5" y="-359.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float **ppfMelSpectrogram,</text>
<text text-anchor="start" x="142.5" y="-348.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const MelSpectrogramConfig</text>
<text text-anchor="start" x="142.5" y="-337.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t *pMelSpecConfig)</text>
<text text-anchor="start" x="142.5" y="-326.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="142.5" y="-315.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CSpectrogramIf *&amp;pCInstance,</text>
<text text-anchor="start" x="142.5" y="-304.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const std::string &amp;strAudioFilePath,</text>
<text text-anchor="start" x="142.5" y="-293.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iBlockLength=2048, int iHopLength</text>
<text text-anchor="start" x="142.5" y="-282.5" font-family="Helvetica,sans-Serif" font-size="10.00">=1024, bool bNormalize=true, float *pfWindow=0)</text>
<text text-anchor="start" x="142.5" y="-271.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="142.5" y="-260.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CSpectrogramIf *&amp;pCInstance,</text>
<text text-anchor="start" x="142.5" y="-249.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const float *pfAudio, long</text>
<text text-anchor="start" x="142.5" y="-238.5" font-family="Helvetica,sans-Serif" font-size="10.00"> long iNumFrames, float fSampleRate,</text>
<text text-anchor="start" x="142.5" y="-227.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iBlockLength=2048, int iHopLength</text>
<text text-anchor="start" x="142.5" y="-216.5" font-family="Helvetica,sans-Serif" font-size="10.00">=1024, bool bNormalize=true, float *pfWindow=0)</text>
<text text-anchor="start" x="142.5" y="-205.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="142.5" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CSpectrogramIf *&amp;pCInstance)</text>
<text text-anchor="start" x="142.5" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CSpectrogramIf()</text>
<text text-anchor="start" x="142.5" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CSpectrogramIf()</text>
<text text-anchor="start" x="142.5" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CSpectrogramIf(const</text>
<text text-anchor="start" x="142.5" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00"> CSpectrogramIf &amp;that)</text>
<text text-anchor="start" x="142.5" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CSpectrogramIf &amp; operator</text>
<text text-anchor="start" x="142.5" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CSpectrogramIf &amp;c)</text>
<text text-anchor="start" x="142.5" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t reset_()</text>
<text text-anchor="start" x="142.5" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t init_(float</text>
<text text-anchor="start" x="142.5" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfWindow)</text>
<text text-anchor="start" x="142.5" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00"># void computeMagSpectrum</text>
<text text-anchor="start" x="142.5" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00">_(int iLength)</text>
<text text-anchor="start" x="142.5" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t generateMelFb</text>
<text text-anchor="start" x="142.5" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">_(const MelSpectrogramConfig</text>
<text text-anchor="start" x="142.5" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t *pMelSpecConfig)</text>
<text text-anchor="start" x="142.5" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00"># void destroyMelFb_</text>
<text text-anchor="start" x="142.5" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">(const MelSpectrogramConfig</text>
<text text-anchor="start" x="142.5" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t *pMelSpecConfig)</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="a00608.xhtml" target="_top" xlink:title="class for audio normalization offering three options">
<polygon fill="white" stroke="black" points="0,-848 0,-1081 150,-1081 150,-848 0,-848"/>
<text text-anchor="middle" x="75" y="-1069" font-family="Helvetica,sans-Serif" font-size="10.00">CNormalizeAudio</text>
<polyline fill="none" stroke="black" points="0,-1062 150,-1062 "/>
<text text-anchor="start" x="8" y="-1050" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float m_fScaleFactor</text>
<polyline fill="none" stroke="black" points="0,-1043 150,-1043 "/>
<text text-anchor="start" x="8" y="-1031" font-family="Helvetica,sans-Serif" font-size="10.00">+ CNormalizeAudio(CAudioFile</text>
<text text-anchor="start" x="8" y="-1020" font-family="Helvetica,sans-Serif" font-size="10.00">If *pCAudioFile)</text>
<text text-anchor="start" x="8" y="-1009" font-family="Helvetica,sans-Serif" font-size="10.00">+ CNormalizeAudio(const</text>
<text text-anchor="start" x="8" y="-998" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfAudioBuff, long</text>
<text text-anchor="start" x="8" y="-987" font-family="Helvetica,sans-Serif" font-size="10.00"> long iAudioLength)</text>
<text text-anchor="start" x="8" y="-976" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CNormalizeAudio()</text>
<text text-anchor="start" x="8" y="-965" font-family="Helvetica,sans-Serif" font-size="10.00">+ void normalizeBlock</text>
<text text-anchor="start" x="8" y="-954" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfAudioBlock,</text>
<text text-anchor="start" x="8" y="-943" font-family="Helvetica,sans-Serif" font-size="10.00"> long long iNumSamples)</text>
<text text-anchor="start" x="8" y="-932" font-family="Helvetica,sans-Serif" font-size="10.00">+ static void normalizeSignal</text>
<text text-anchor="start" x="8" y="-921" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfAudio, long long</text>
<text text-anchor="start" x="8" y="-910" font-family="Helvetica,sans-Serif" font-size="10.00"> iNumSamples)</text>
<text text-anchor="start" x="8" y="-899" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CNormalizeAudio()</text>
<text text-anchor="start" x="8" y="-888" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CNormalizeAudio(const</text>
<text text-anchor="start" x="8" y="-877" font-family="Helvetica,sans-Serif" font-size="10.00"> CNormalizeAudio &amp;that)</text>
<text text-anchor="start" x="8" y="-866" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CNormalizeAudio &amp; operator</text>
<text text-anchor="start" x="8" y="-855" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CNormalizeAudio &amp;c)</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="#404040" d="M107.03,-847.68C120.01,-800.75 135.75,-743.85 151.94,-685.31"/>
<polygon fill="none" stroke="#404040" points="151.99,-685.14 149.73,-678.3 155.19,-673.58 157.44,-680.43 151.99,-685.14"/>
<text text-anchor="middle" x="187.5" y="-695" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCNormalize</text>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="a00548.xhtml" target="_top" xlink:title="forward declaration">
<polygon fill="white" stroke="black" points="168,-749 168,-1180 328,-1180 328,-749 168,-749"/>
<text text-anchor="middle" x="248" y="-1168" font-family="Helvetica,sans-Serif" font-size="10.00">CBlockAudioIf</text>
<polyline fill="none" stroke="black" points="168,-1161 328,-1161 "/>
<text text-anchor="start" x="176" y="-1149" font-family="Helvetica,sans-Serif" font-size="10.00"># long long m_iNumBlocks</text>
<text text-anchor="start" x="176" y="-1138" font-family="Helvetica,sans-Serif" font-size="10.00"># long long m_iCurrBlock</text>
<text text-anchor="start" x="176" y="-1127" font-family="Helvetica,sans-Serif" font-size="10.00"># long long m_iAudioLength</text>
<text text-anchor="start" x="176" y="-1116" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iBlockLength</text>
<text text-anchor="start" x="176" y="-1105" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iNumChannels</text>
<text text-anchor="start" x="176" y="-1094" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iHopLength</text>
<text text-anchor="start" x="176" y="-1083" font-family="Helvetica,sans-Serif" font-size="10.00"># float m_fSampleRate</text>
<polyline fill="none" stroke="black" points="168,-1076 328,-1076 "/>
<text text-anchor="start" x="176" y="-1064" font-family="Helvetica,sans-Serif" font-size="10.00">+ long long getNumBlocks</text>
<text text-anchor="start" x="176" y="-1053" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="176" y="-1042" font-family="Helvetica,sans-Serif" font-size="10.00">+ long long getLengthInSamples</text>
<text text-anchor="start" x="176" y="-1031" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="176" y="-1020" font-family="Helvetica,sans-Serif" font-size="10.00">+ float getTimeStamp</text>
<text text-anchor="start" x="176" y="-1009" font-family="Helvetica,sans-Serif" font-size="10.00">(long long iBlockIdx)</text>
<text text-anchor="start" x="176" y="-998" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual bool isEndOfData</text>
<text text-anchor="start" x="176" y="-987" font-family="Helvetica,sans-Serif" font-size="10.00">() const =0</text>
<text text-anchor="start" x="176" y="-976" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual int getNextBlock</text>
<text text-anchor="start" x="176" y="-965" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfBlock, float</text>
<text text-anchor="start" x="176" y="-954" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfTimeStampInS=0)=0</text>
<text text-anchor="start" x="176" y="-943" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="176" y="-932" font-family="Helvetica,sans-Serif" font-size="10.00">(CBlockAudioIf *&amp;pCInstance,</text>
<text text-anchor="start" x="176" y="-921" font-family="Helvetica,sans-Serif" font-size="10.00"> CAudioFileIf *pCAudioFile,</text>
<text text-anchor="start" x="176" y="-910" font-family="Helvetica,sans-Serif" font-size="10.00"> int iBlockLength, int iHopLength)</text>
<text text-anchor="start" x="176" y="-899" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="176" y="-888" font-family="Helvetica,sans-Serif" font-size="10.00">(CBlockAudioIf *&amp;pCInstance,</text>
<text text-anchor="start" x="176" y="-877" font-family="Helvetica,sans-Serif" font-size="10.00"> const float *pfAudioBuff,</text>
<text text-anchor="start" x="176" y="-866" font-family="Helvetica,sans-Serif" font-size="10.00"> long long iAudioLength, int</text>
<text text-anchor="start" x="176" y="-855" font-family="Helvetica,sans-Serif" font-size="10.00"> iBlockLength, int iHopLength,</text>
<text text-anchor="start" x="176" y="-844" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate)</text>
<text text-anchor="start" x="176" y="-833" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="176" y="-822" font-family="Helvetica,sans-Serif" font-size="10.00">(CBlockAudioIf *&amp;pCInstance)</text>
<text text-anchor="start" x="176" y="-811" font-family="Helvetica,sans-Serif" font-size="10.00"># CBlockAudioIf()</text>
<text text-anchor="start" x="176" y="-800" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CBlockAudioIf()</text>
<text text-anchor="start" x="176" y="-789" font-family="Helvetica,sans-Serif" font-size="10.00"># CBlockAudioIf(const</text>
<text text-anchor="start" x="176" y="-778" font-family="Helvetica,sans-Serif" font-size="10.00"> CBlockAudioIf &amp;that)</text>
<text text-anchor="start" x="176" y="-767" font-family="Helvetica,sans-Serif" font-size="10.00"># CBlockAudioIf &amp; operator</text>
<text text-anchor="start" x="176" y="-756" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CBlockAudioIf &amp;c)</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node1 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node1</title>
<path fill="none" stroke="#404040" d="M248,-748.68C248,-728.19 248,-707.08 248,-685.75"/>
<polygon fill="none" stroke="#404040" points="248,-685.53 244,-679.53 248,-673.53 252,-679.53 248,-685.53"/>
<text text-anchor="middle" x="289.5" y="-695" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCBlockAudio</text>
</g>
<!-- Node4 -->
<g id="node4" class="node">
<title>Node4</title>
<g id="a_node4"><a xlink:href="a00480.xhtml" target="_top" xlink:title="class for FFT computation with windowing">
<polygon fill="white" stroke="black" points="346,-721.5 346,-1207.5 534,-1207.5 534,-721.5 346,-721.5"/>
<text text-anchor="middle" x="440" y="-1195.5" font-family="Helvetica,sans-Serif" font-size="10.00">CFft</text>
<polyline fill="none" stroke="black" points="346,-1188.5 534,-1188.5 "/>
<text text-anchor="start" x="354" y="-1176.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_pfProcessBuff</text>
<text text-anchor="start" x="354" y="-1165.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_pfWindowBuff</text>
<text text-anchor="start" x="354" y="-1154.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iDataLength</text>
<text text-anchor="start" x="354" y="-1143.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iFftLength</text>
<text text-anchor="start" x="354" y="-1132.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Windowing_t m_ePrePostWindowOpt</text>
<text text-anchor="start" x="354" y="-1121.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; bool m_bIsInitialized</text>
<text text-anchor="start" x="354" y="-1110.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; static const float m_Pi</text>
<text text-anchor="start" x="354" y="-1099.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; static const float</text>
<text text-anchor="start" x="354" y="-1088.5" font-family="Helvetica,sans-Serif" font-size="10.00"> m_Pi2</text>
<polyline fill="none" stroke="black" points="346,-1081.5 534,-1081.5 "/>
<text text-anchor="start" x="354" y="-1069.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CFft()</text>
<text text-anchor="start" x="354" y="-1058.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CFft()</text>
<text text-anchor="start" x="354" y="-1047.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t init(int iBlockLength,</text>
<text text-anchor="start" x="354" y="-1036.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iZeroPadFactor=1, WindowFunction</text>
<text text-anchor="start" x="354" y="-1025.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t eWindow=kWindowHann, Windowing</text>
<text text-anchor="start" x="354" y="-1014.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t eWindowing=kPreWindow)</text>
<text text-anchor="start" x="354" y="-1003.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t reset()</text>
<text text-anchor="start" x="354" y="-992.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t overrideWindow</text>
<text text-anchor="start" x="354" y="-981.5" font-family="Helvetica,sans-Serif" font-size="10.00">(const float *pfNewWindow)</text>
<text text-anchor="start" x="354" y="-970.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getWindow(float</text>
<text text-anchor="start" x="354" y="-959.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfWindow) const</text>
<text text-anchor="start" x="354" y="-948.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compFft(complex</text>
<text text-anchor="start" x="354" y="-937.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t *pfSpectrum, const</text>
<text text-anchor="start" x="354" y="-926.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfInput)</text>
<text text-anchor="start" x="354" y="-915.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compInvFft</text>
<text text-anchor="start" x="354" y="-904.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfOutput, const</text>
<text text-anchor="start" x="354" y="-893.5" font-family="Helvetica,sans-Serif" font-size="10.00"> complex_t *pfSpectrum)</text>
<text text-anchor="start" x="354" y="-882.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getMagnitude</text>
<text text-anchor="start" x="354" y="-871.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfMag, const</text>
<text text-anchor="start" x="354" y="-860.5" font-family="Helvetica,sans-Serif" font-size="10.00"> complex_t *pfSpectrum)</text>
<text text-anchor="start" x="354" y="-849.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const</text>
<text text-anchor="start" x="354" y="-838.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getPhase(float</text>
<text text-anchor="start" x="354" y="-827.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfPhase, const complex</text>
<text text-anchor="start" x="354" y="-816.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t *pfSpectrum) const</text>
<text text-anchor="start" x="354" y="-805.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 7 more...</text>
<text text-anchor="start" x="354" y="-794.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CFft(const CFft &amp;that)</text>
<text text-anchor="start" x="354" y="-783.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CFft &amp; operator=(const</text>
<text text-anchor="start" x="354" y="-772.5" font-family="Helvetica,sans-Serif" font-size="10.00"> CFft &amp;c)</text>
<text text-anchor="start" x="354" y="-761.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Error_t allocMemory_()</text>
<text text-anchor="start" x="354" y="-750.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Error_t freeMemory_()</text>
<text text-anchor="start" x="354" y="-739.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Error_t computeWindow</text>
<text text-anchor="start" x="354" y="-728.5" font-family="Helvetica,sans-Serif" font-size="10.00">_(WindowFunction_t eWindow)</text>
</a>
</g>
</g>
<!-- Node4&#45;&gt;Node1 -->
<g id="edge3" class="edge">
<title>Node4&#45;&gt;Node1</title>
<path fill="none" stroke="#404040" d="M365.63,-721.22C361.99,-709.37 358.31,-697.38 354.61,-685.32"/>
<polygon fill="none" stroke="#404040" points="354.58,-685.21 348.99,-680.65 351.06,-673.74 356.64,-678.3 354.58,-685.21"/>
<text text-anchor="middle" x="381" y="-695" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCFft</text>
</g>
</g>
</svg>
        <g id="navigator" transform="translate(0 0)" fill="#404254">
                <rect fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width=".5" x="0" y="0" width="60" height="60"/>
                <use id="zoomplus" xlink:href="#zoomPlus" x="17" y="9" onmousedown="handleZoom(evt,'in')"/>
                <use id="zoomminus" xlink:href="#zoomMin" x="42" y="9" onmousedown="handleZoom(evt,'out')"/>
                <use id="reset" xlink:href="#resetDef" x="30" y="36" onmousedown="handleReset()"/>
                <g id="arrowUp" xlink:href="#dirArrow" transform="translate(30 24)" onmousedown="handlePan(0,-1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowUp.mouseover" end="arrowUp.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowRight" xlink:href="#dirArrow" transform="rotate(90) translate(36 -43)" onmousedown="handlePan(1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowRight.mouseover" end="arrowRight.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowDown" xlink:href="#dirArrow" transform="rotate(180) translate(-30 -48)" onmousedown="handlePan(0,1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowDown.mouseover" end="arrowDown.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowLeft" xlink:href="#dirArrow" transform="rotate(270) translate(-36 17)" onmousedown="handlePan(-1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowLeft.mouseover" end="arrowLeft.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
        </g>
        <svg viewBox="0 0 15 15" width="100%" height="30px" preserveAspectRatio="xMaxYMin meet">
         <g id="arrow_out" transform="scale(0.3 0.3)">
          <a xlink:href="a00534_org.svg" target="_base">
           <rect id="button" ry="5" rx="5" y="6" x="6" height="38" width="38"
                fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width="1.0"/>
           <path id="arrow"
             d="M 11.500037,31.436501 C 11.940474,20.09759 22.043105,11.32322 32.158766,21.979434 L 37.068811,17.246167 C 37.068811,17.246167 37.088388,32 37.088388,32 L 22.160133,31.978069 C 22.160133,31.978069 26.997745,27.140456 26.997745,27.140456 C 18.528582,18.264221 13.291696,25.230495 11.500037,31.436501 z"
             style="fill:#404040;"/>
          </a>
         </g>
        </svg>
</svg>
