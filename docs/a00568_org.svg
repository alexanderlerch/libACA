<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 6.0.1 (20220911.1526)
 -->
<!-- Title: CGmmClassifier Pages: 1 -->
<svg width="414pt" height="951pt"
 viewBox="0.00 0.00 414.00 951.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 947)">
<title>CGmmClassifier</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="computation of k nearest neighbor">
<polygon fill="#999999" stroke="#666666" points="321.5,-382 105.5,-382 105.5,0 321.5,0 321.5,-382"/>
<text text-anchor="middle" x="213.5" y="-370" font-family="Helvetica,sans-Serif" font-size="10.00">{CGmmClassifier</text>
<text text-anchor="start" x="113.5" y="-359" font-family="Helvetica,sans-Serif" font-size="10.00">|&#45; int m_iNumFeatures</text>
<text text-anchor="start" x="113.5" y="-348" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iNumObs</text>
<text text-anchor="start" x="113.5" y="-337" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iNumClasses</text>
<text text-anchor="start" x="113.5" y="-326" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iK</text>
<text text-anchor="start" x="113.5" y="-315" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int * m_piClassLabels</text>
<text text-anchor="start" x="113.5" y="-304" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_pfQuery</text>
<text text-anchor="start" x="113.5" y="-293" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; bool m_bIsInitialized</text>
<text text-anchor="start" x="113.5" y="-282" font-family="Helvetica,sans-Serif" font-size="10.00">|+ &#160;CGmmClassifier(void)</text>
<text text-anchor="start" x="113.5" y="-271" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CGmmClassifier</text>
<text text-anchor="start" x="113.5" y="-260" font-family="Helvetica,sans-Serif" font-size="10.00">(void)</text>
<text text-anchor="start" x="113.5" y="-249" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t init(int iNumFeatures,</text>
<text text-anchor="start" x="113.5" y="-238" font-family="Helvetica,sans-Serif" font-size="10.00"> int iNumObservations) override</text>
<text text-anchor="start" x="113.5" y="-227" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t train(const</text>
<text text-anchor="start" x="113.5" y="-216" font-family="Helvetica,sans-Serif" font-size="10.00"> float *const *const</text>
<text text-anchor="start" x="113.5" y="-205" font-family="Helvetica,sans-Serif" font-size="10.00"> ppfTrainFeatures, const</text>
<text text-anchor="start" x="113.5" y="-194" font-family="Helvetica,sans-Serif" font-size="10.00"> int *piTrainClassIndices,</text>
<text text-anchor="start" x="113.5" y="-183" font-family="Helvetica,sans-Serif" font-size="10.00"> CClassifierBase::Normalization</text>
<text text-anchor="start" x="113.5" y="-172" font-family="Helvetica,sans-Serif" font-size="10.00">_t eNorm=CClassifierBase::kNoNormalization)</text>
<text text-anchor="start" x="113.5" y="-161" font-family="Helvetica,sans-Serif" font-size="10.00"> override</text>
<text text-anchor="start" x="113.5" y="-150" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t reset() override</text>
<text text-anchor="start" x="113.5" y="-139" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t setNumMixtures</text>
<text text-anchor="start" x="113.5" y="-128" font-family="Helvetica,sans-Serif" font-size="10.00">(int iK=3)</text>
<text text-anchor="start" x="113.5" y="-117" font-family="Helvetica,sans-Serif" font-size="10.00">+ int getNumMixtures</text>
<text text-anchor="start" x="113.5" y="-106" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="113.5" y="-95" font-family="Helvetica,sans-Serif" font-size="10.00">+ int classify(const</text>
<text text-anchor="start" x="113.5" y="-84" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfQuery) override</text>
<text text-anchor="start" x="113.5" y="-73" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; &#160;CGmmClassifier(const</text>
<text text-anchor="start" x="113.5" y="-62" font-family="Helvetica,sans-Serif" font-size="10.00"> CGmmClassifier &amp;that)</text>
<text text-anchor="start" x="113.5" y="-51" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CGmmClassifier &amp; operator</text>
<text text-anchor="start" x="113.5" y="-40" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CGmmClassifier &amp;c)</text>
<text text-anchor="start" x="113.5" y="-29" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int countClasses(const</text>
<text text-anchor="start" x="113.5" y="-18" font-family="Helvetica,sans-Serif" font-size="10.00"> int *piClassLabels)</text>
<text text-anchor="middle" x="213.5" y="-7" font-family="Helvetica,sans-Serif" font-size="10.00">}</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="a00462.xhtml" target="_top" xlink:title="abstract base class for traditional classifiers">
<polygon fill="white" stroke="#666666" points="215,-822 0,-822 0,-550 215,-550 215,-822"/>
<text text-anchor="middle" x="107.5" y="-810" font-family="Helvetica,sans-Serif" font-size="10.00">{CClassifierBase</text>
<text text-anchor="start" x="8" y="-799" font-family="Helvetica,sans-Serif" font-size="10.00">|+ static const int kIllegal</text>
<text text-anchor="start" x="8" y="-788" font-family="Helvetica,sans-Serif" font-size="10.00">ClassLabel</text>
<text text-anchor="start" x="8" y="-777" font-family="Helvetica,sans-Serif" font-size="10.00"># float * m_pfNormScale</text>
<text text-anchor="start" x="8" y="-766" font-family="Helvetica,sans-Serif" font-size="10.00"># float * m_pfNormSub</text>
<text text-anchor="start" x="8" y="-755" font-family="Helvetica,sans-Serif" font-size="10.00">|+ virtual Error_t init</text>
<text text-anchor="start" x="8" y="-744" font-family="Helvetica,sans-Serif" font-size="10.00">(int iNumFeatures, int</text>
<text text-anchor="start" x="8" y="-733" font-family="Helvetica,sans-Serif" font-size="10.00"> iNumObs)=0</text>
<text text-anchor="start" x="8" y="-722" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Error_t train</text>
<text text-anchor="start" x="8" y="-711" font-family="Helvetica,sans-Serif" font-size="10.00">(const float *const *const</text>
<text text-anchor="start" x="8" y="-700" font-family="Helvetica,sans-Serif" font-size="10.00"> ppfTrainFeatures, const</text>
<text text-anchor="start" x="8" y="-689" font-family="Helvetica,sans-Serif" font-size="10.00"> int *piTrainClassIndices,</text>
<text text-anchor="start" x="8" y="-678" font-family="Helvetica,sans-Serif" font-size="10.00"> Normalization_t eNorm=kNoNormalization)=0</text>
<text text-anchor="start" x="8" y="-667" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Error_t reset()=0</text>
<text text-anchor="start" x="8" y="-656" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual int classify</text>
<text text-anchor="start" x="8" y="-645" font-family="Helvetica,sans-Serif" font-size="10.00">(const float *pfQuery)=0</text>
<text text-anchor="start" x="8" y="-634" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CClassifierBase()</text>
<text text-anchor="start" x="8" y="-623" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual void compNormConstants</text>
<text text-anchor="start" x="8" y="-612" font-family="Helvetica,sans-Serif" font-size="10.00">(const float *const *const</text>
<text text-anchor="start" x="8" y="-601" font-family="Helvetica,sans-Serif" font-size="10.00"> ppfTrainFeatures, int iNumFeatures,</text>
<text text-anchor="start" x="8" y="-590" font-family="Helvetica,sans-Serif" font-size="10.00"> int iNumObs, Normalization_t eNorm)</text>
<text text-anchor="start" x="8" y="-579" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual void normalizeVector</text>
<text text-anchor="start" x="8" y="-568" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfQuery, int iNumFeatures)</text>
<text text-anchor="middle" x="107.5" y="-557" font-family="Helvetica,sans-Serif" font-size="10.00">}</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="#63b8ff" d="M138.64,-540.16C149.27,-490.73 161.32,-434.68 172.6,-382.22"/>
<polygon fill="none" stroke="#63b8ff" points="135.22,-539.45 136.54,-549.96 142.06,-540.92 135.22,-539.45"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="a00562.xhtml" target="_top" xlink:title="class holding the result/details of a Gaussian Mixture Model created with CGmm">
<polygon fill="white" stroke="#666666" points="406,-943 233,-943 233,-429 406,-429 406,-943"/>
<text text-anchor="middle" x="319.5" y="-931" font-family="Helvetica,sans-Serif" font-size="10.00">{CGmmResult</text>
<text text-anchor="start" x="241" y="-920" font-family="Helvetica,sans-Serif" font-size="10.00">|&#45; float ** m_ppfMu</text>
<text text-anchor="start" x="241" y="-909" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_pfPrior</text>
<text text-anchor="start" x="241" y="-898" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float *** m_apppfSigma</text>
<text text-anchor="start" x="241" y="-887" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_apfProc</text>
<text text-anchor="start" x="241" y="-876" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iK</text>
<text text-anchor="start" x="241" y="-865" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iNumFeatures</text>
<text text-anchor="start" x="241" y="-854" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; bool m_bIsInitialized</text>
<text text-anchor="start" x="241" y="-843" font-family="Helvetica,sans-Serif" font-size="10.00">|+ &#160;CGmmResult()</text>
<text text-anchor="start" x="241" y="-832" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CGmmResult</text>
<text text-anchor="start" x="241" y="-821" font-family="Helvetica,sans-Serif" font-size="10.00">(void)</text>
<text text-anchor="start" x="241" y="-810" font-family="Helvetica,sans-Serif" font-size="10.00">+ &#160;CGmmResult(const CGmmResult</text>
<text text-anchor="start" x="241" y="-799" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;that)</text>
<text text-anchor="start" x="241" y="-788" font-family="Helvetica,sans-Serif" font-size="10.00">+ int getNumGaussians</text>
<text text-anchor="start" x="241" y="-777" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="241" y="-766" font-family="Helvetica,sans-Serif" font-size="10.00">+ int getNumDimensions</text>
<text text-anchor="start" x="241" y="-755" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="241" y="-744" font-family="Helvetica,sans-Serif" font-size="10.00">+ float getMu(int iGaussian</text>
<text text-anchor="start" x="241" y="-733" font-family="Helvetica,sans-Serif" font-size="10.00">Idx, int iFeatureIdx) const</text>
<text text-anchor="start" x="241" y="-722" font-family="Helvetica,sans-Serif" font-size="10.00">+ float getPrior(int</text>
<text text-anchor="start" x="241" y="-711" font-family="Helvetica,sans-Serif" font-size="10.00"> iGaussianIdx) const</text>
<text text-anchor="start" x="241" y="-700" font-family="Helvetica,sans-Serif" font-size="10.00">+ float getSigma(int</text>
<text text-anchor="start" x="241" y="-689" font-family="Helvetica,sans-Serif" font-size="10.00"> iGaussianIdx, int iRowIdx,</text>
<text text-anchor="start" x="241" y="-678" font-family="Helvetica,sans-Serif" font-size="10.00"> int iColIdx) const</text>
<text text-anchor="start" x="241" y="-667" font-family="Helvetica,sans-Serif" font-size="10.00">+ void getSigma(float</text>
<text text-anchor="start" x="241" y="-656" font-family="Helvetica,sans-Serif" font-size="10.00"> **ppfSigma, int iGaussian</text>
<text text-anchor="start" x="241" y="-645" font-family="Helvetica,sans-Serif" font-size="10.00">Idx) const</text>
<text text-anchor="start" x="241" y="-634" font-family="Helvetica,sans-Serif" font-size="10.00">+ float getProb(const</text>
<text text-anchor="start" x="241" y="-623" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfQuery)</text>
<text text-anchor="start" x="241" y="-612" font-family="Helvetica,sans-Serif" font-size="10.00">+ bool isInitialized</text>
<text text-anchor="start" x="241" y="-601" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="241" y="-590" font-family="Helvetica,sans-Serif" font-size="10.00">+ CGmmResult &amp; operator</text>
<text text-anchor="start" x="241" y="-579" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CGmmResult &amp;that)</text>
<text text-anchor="start" x="241" y="-568" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t init(int iK,</text>
<text text-anchor="start" x="241" y="-557" font-family="Helvetica,sans-Serif" font-size="10.00"> int iNumFeatures)</text>
<text text-anchor="start" x="241" y="-546" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t reset()</text>
<text text-anchor="start" x="241" y="-535" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t setMu(int iGaussian</text>
<text text-anchor="start" x="241" y="-524" font-family="Helvetica,sans-Serif" font-size="10.00">Idx, int iFeatureIdx, float</text>
<text text-anchor="start" x="241" y="-513" font-family="Helvetica,sans-Serif" font-size="10.00"> fParamValue)</text>
<text text-anchor="start" x="241" y="-502" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t setPrior(int</text>
<text text-anchor="start" x="241" y="-491" font-family="Helvetica,sans-Serif" font-size="10.00"> iGaussianIdx, float</text>
<text text-anchor="start" x="241" y="-480" font-family="Helvetica,sans-Serif" font-size="10.00"> fParamValue)</text>
<text text-anchor="start" x="241" y="-469" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t setSigma(int</text>
<text text-anchor="start" x="241" y="-458" font-family="Helvetica,sans-Serif" font-size="10.00"> iGaussianIdx, float</text>
<text text-anchor="start" x="241" y="-447" font-family="Helvetica,sans-Serif" font-size="10.00"> **ppfSigma)</text>
<text text-anchor="middle" x="319.5" y="-436" font-family="Helvetica,sans-Serif" font-size="10.00">}</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node1 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node1</title>
<path fill="none" stroke="#404040" d="M264.4,-428.75C261.9,-417.11 259.4,-405.49 256.93,-394"/>
<polygon fill="none" stroke="#404040" points="256.89,-393.82 251.72,-388.8 254.37,-382.09 259.54,-387.11 256.89,-393.82"/>
<text text-anchor="middle" x="304.5" y="-403" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;m_ppCGmmResult</text>
</g>
</g>
</svg>
