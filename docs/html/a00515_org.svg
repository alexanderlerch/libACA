<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 4.0.0 (20220602.1335)
 -->
<!-- Title: CMovingAverage Pages: 1 -->
<svg width="167pt" height="1145pt"
 viewBox="0.00 0.00 167.00 1145.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 1141)">
<title>CMovingAverage</title>
<polygon fill="white" stroke="transparent" points="-4,4 -4,-1141 163,-1141 163,4 -4,4"/>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="class for single&#45;pole low pass filtering">
<polygon fill="#bfbfbf" stroke="black" points="0,-0.5 0,-332.5 159,-332.5 159,-0.5 0,-0.5"/>
<text text-anchor="middle" x="79.5" y="-320.5" font-family="Helvetica,sans-Serif" font-size="10.00">CMovingAverage</text>
<polyline fill="none" stroke="black" points="0,-313.5 159,-313.5 "/>
<text text-anchor="start" x="8" y="-301.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float m_fPrevOut</text>
<polyline fill="none" stroke="black" points="0,-294.5 159,-294.5 "/>
<text text-anchor="start" x="8" y="-282.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t setFilterParam</text>
<text text-anchor="start" x="8" y="-271.5" font-family="Helvetica,sans-Serif" font-size="10.00">(int iFilterLength=64)</text>
<text text-anchor="start" x="8" y="-260.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ int getFilterParam</text>
<text text-anchor="start" x="8" y="-249.5" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="8" y="-238.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t process(float</text>
<text text-anchor="start" x="8" y="-227.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfOutput, const float</text>
<text text-anchor="start" x="8" y="-216.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfInput, long long iLengthOf</text>
<text text-anchor="start" x="8" y="-205.5" font-family="Helvetica,sans-Serif" font-size="10.00">Buffer)</text>
<text text-anchor="start" x="8" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t reset()</text>
<text text-anchor="start" x="8" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void filtfilt(float</text>
<text text-anchor="start" x="8" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfOutput, const float</text>
<text text-anchor="start" x="8" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfInput, long long iLengthOf</text>
<text text-anchor="start" x="8" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00">Buffer)</text>
<text text-anchor="start" x="8" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="8" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CMovingAverage *&amp;pCInstance)</text>
<text text-anchor="start" x="8" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="8" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CMovingAverage *&amp;pCInstance)</text>
<text text-anchor="start" x="8" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static int calcFilterLength</text>
<text text-anchor="start" x="8" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float fIntegrationTimeInS,</text>
<text text-anchor="start" x="8" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate)</text>
<text text-anchor="start" x="8" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CMovingAverage()</text>
<text text-anchor="start" x="8" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; virtual ~CMovingAverage()</text>
<text text-anchor="start" x="8" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CMovingAverage(const</text>
<text text-anchor="start" x="8" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00"> CMovingAverage &amp;that)</text>
<text text-anchor="start" x="8" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CMovingAverage &amp; operator</text>
<text text-anchor="start" x="8" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CMovingAverage &amp;c)</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="a00453.xhtml" target="_top" xlink:title=" ">
<polygon fill="white" stroke="black" points="13,-380.5 13,-745.5 146,-745.5 146,-380.5 13,-380.5"/>
<text text-anchor="middle" x="79.5" y="-733.5" font-family="Helvetica,sans-Serif" font-size="10.00">CRingBuffer&lt; float &gt;</text>
<polyline fill="none" stroke="black" points="13,-726.5 146,-726.5 "/>
<text text-anchor="start" x="21" y="-714.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iBuffLength</text>
<text text-anchor="start" x="21" y="-703.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iReadIdx</text>
<text text-anchor="start" x="21" y="-692.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iWriteIdx</text>
<text text-anchor="start" x="21" y="-681.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_ptBuff</text>
<polyline fill="none" stroke="black" points="13,-674.5 146,-674.5 "/>
<text text-anchor="start" x="21" y="-662.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CRingBuffer(int iBuffer</text>
<text text-anchor="start" x="21" y="-651.5" font-family="Helvetica,sans-Serif" font-size="10.00">LengthInSamples)</text>
<text text-anchor="start" x="21" y="-640.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CRingBuffer()</text>
<text text-anchor="start" x="21" y="-629.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void putPostInc(float</text>
<text text-anchor="start" x="21" y="-618.5" font-family="Helvetica,sans-Serif" font-size="10.00"> tNewValue)</text>
<text text-anchor="start" x="21" y="-607.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void putPostInc(const</text>
<text text-anchor="start" x="21" y="-596.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *ptNewBuff, int</text>
<text text-anchor="start" x="21" y="-585.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iLength)</text>
<text text-anchor="start" x="21" y="-574.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void put(float tNewValue)</text>
<text text-anchor="start" x="21" y="-563.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void put(const float</text>
<text text-anchor="start" x="21" y="-552.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *ptNewBuff, int iLength)</text>
<text text-anchor="start" x="21" y="-541.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ float getPostInc()</text>
<text text-anchor="start" x="21" y="-530.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void getPostInc(float</text>
<text text-anchor="start" x="21" y="-519.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *ptBuff, int iLength)</text>
<text text-anchor="start" x="21" y="-508.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ float get(float fOffset</text>
<text text-anchor="start" x="21" y="-497.5" font-family="Helvetica,sans-Serif" font-size="10.00">=0) const</text>
<text text-anchor="start" x="21" y="-486.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void get(float *ptBuff,</text>
<text text-anchor="start" x="21" y="-475.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iLength) const</text>
<text text-anchor="start" x="21" y="-464.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 7 more...</text>
<text text-anchor="start" x="21" y="-453.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CRingBuffer()</text>
<text text-anchor="start" x="21" y="-442.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CRingBuffer(const</text>
<text text-anchor="start" x="21" y="-431.5" font-family="Helvetica,sans-Serif" font-size="10.00"> CRingBuffer &amp;that)</text>
<text text-anchor="start" x="21" y="-420.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CRingBuffer &amp; operator</text>
<text text-anchor="start" x="21" y="-409.5" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CRingBuffer &amp;c)</text>
<text text-anchor="start" x="21" y="-398.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; void incIdx(int &amp;iIdx,</text>
<text text-anchor="start" x="21" y="-387.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iOffset=1)</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="#404040" d="M79.5,-380.34C79.5,-368.56 79.5,-356.7 79.5,-344.94"/>
<polygon fill="none" stroke="#404040" points="79.5,-344.72 75.5,-338.72 79.5,-332.72 83.5,-338.72 79.5,-344.72"/>
<text text-anchor="middle" x="113.5" y="-354" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;m_pCRingBuff</text>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="a00453.xhtml" target="_top" xlink:title="implement a circular buffer of type T">
<polygon fill="white" stroke="black" points="2,-793.5 2,-1136.5 157,-1136.5 157,-793.5 2,-793.5"/>
<text text-anchor="middle" x="79.5" y="-1124.5" font-family="Helvetica,sans-Serif" font-size="10.00">CRingBuffer&lt; T &gt;</text>
<polyline fill="none" stroke="black" points="2,-1117.5 157,-1117.5 "/>
<text text-anchor="start" x="10" y="-1105.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iBuffLength</text>
<text text-anchor="start" x="10" y="-1094.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iReadIdx</text>
<text text-anchor="start" x="10" y="-1083.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iWriteIdx</text>
<text text-anchor="start" x="10" y="-1072.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; T * m_ptBuff</text>
<polyline fill="none" stroke="black" points="2,-1065.5 157,-1065.5 "/>
<text text-anchor="start" x="10" y="-1053.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CRingBuffer(int iBuffer</text>
<text text-anchor="start" x="10" y="-1042.5" font-family="Helvetica,sans-Serif" font-size="10.00">LengthInSamples)</text>
<text text-anchor="start" x="10" y="-1031.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CRingBuffer()</text>
<text text-anchor="start" x="10" y="-1020.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void putPostInc(T tNewValue)</text>
<text text-anchor="start" x="10" y="-1009.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void putPostInc(const</text>
<text text-anchor="start" x="10" y="-998.5" font-family="Helvetica,sans-Serif" font-size="10.00"> T *ptNewBuff, int iLength)</text>
<text text-anchor="start" x="10" y="-987.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void put(T tNewValue)</text>
<text text-anchor="start" x="10" y="-976.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void put(const T *ptNewBuff,</text>
<text text-anchor="start" x="10" y="-965.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iLength)</text>
<text text-anchor="start" x="10" y="-954.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ T getPostInc()</text>
<text text-anchor="start" x="10" y="-943.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void getPostInc(T *ptBuff,</text>
<text text-anchor="start" x="10" y="-932.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iLength)</text>
<text text-anchor="start" x="10" y="-921.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ T get(float fOffset</text>
<text text-anchor="start" x="10" y="-910.5" font-family="Helvetica,sans-Serif" font-size="10.00">=0) const</text>
<text text-anchor="start" x="10" y="-899.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void get(T *ptBuff,</text>
<text text-anchor="start" x="10" y="-888.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iLength) const</text>
<text text-anchor="start" x="10" y="-877.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 7 more...</text>
<text text-anchor="start" x="10" y="-866.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CRingBuffer()</text>
<text text-anchor="start" x="10" y="-855.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CRingBuffer(const</text>
<text text-anchor="start" x="10" y="-844.5" font-family="Helvetica,sans-Serif" font-size="10.00"> CRingBuffer &amp;that)</text>
<text text-anchor="start" x="10" y="-833.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CRingBuffer &amp; operator</text>
<text text-anchor="start" x="10" y="-822.5" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CRingBuffer &amp;c)</text>
<text text-anchor="start" x="10" y="-811.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; void incIdx(int &amp;iIdx,</text>
<text text-anchor="start" x="10" y="-800.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iOffset=1)</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node2 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node2</title>
<path fill="none" stroke="orange" d="M79.5,-783.45C79.5,-770.89 79.5,-758.22 79.5,-745.65"/>
<polygon fill="orange" stroke="orange" points="76,-783.49 79.5,-793.49 83,-783.49 76,-783.49"/>
<text text-anchor="middle" x="98" y="-767" font-family="Helvetica,sans-Serif" font-size="10.00"> &lt; float &gt;</text>
</g>
</g>
</svg>
