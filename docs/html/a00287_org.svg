<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 4.0.0 (20220602.1335)
 -->
<!-- Title: CFeatureFromVector Pages: 1 -->
<svg width="748pt" height="1641pt"
 viewBox="0.00 0.00 748.00 1641.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 1637)">
<title>CFeatureFromVector</title>
<polygon fill="white" stroke="transparent" points="-4,4 -4,-1637 744,-1637 744,4 -4,4"/>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title=" ">
<polygon fill="#bfbfbf" stroke="black" points="266.5,-0.5 266.5,-123.5 421.5,-123.5 421.5,-0.5 266.5,-0.5"/>
<text text-anchor="middle" x="344" y="-111.5" font-family="Helvetica,sans-Serif" font-size="10.00">CFeatureFromVector</text>
<polyline fill="none" stroke="black" points="266.5,-104.5 421.5,-104.5 "/>
<text text-anchor="middle" x="344" y="-92.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="266.5,-85.5 421.5,-85.5 "/>
<text text-anchor="start" x="274.5" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CFeatureFromVector</text>
<text text-anchor="start" x="274.5" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00">(Feature_t eFeatureIdx,</text>
<text text-anchor="start" x="274.5" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const float *pfAudio,</text>
<text text-anchor="start" x="274.5" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00"> long long iAudioLength,</text>
<text text-anchor="start" x="274.5" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate, int</text>
<text text-anchor="start" x="274.5" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iBlockLength, int iHopLength)</text>
<text text-anchor="start" x="274.5" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CFeatureFromVector()</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="a00429.xhtml" target="_top" xlink:title="class for computation of a magnitude Feature from either a file or a vector">
<polygon fill="white" stroke="black" points="237,-161.5 237,-724.5 451,-724.5 451,-161.5 237,-161.5"/>
<text text-anchor="middle" x="344" y="-712.5" font-family="Helvetica,sans-Serif" font-size="10.00">CFeatureIf</text>
<polyline fill="none" stroke="black" points="237,-705.5 451,-705.5 "/>
<text text-anchor="start" x="245" y="-693.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iBlockLength</text>
<text text-anchor="start" x="245" y="-682.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iHopLength</text>
<text text-anchor="start" x="245" y="-671.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float m_fSampleRate</text>
<text text-anchor="start" x="245" y="-660.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float * m_pfProcessBuff2</text>
<text text-anchor="start" x="245" y="-649.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float * m_pfProcessBuff1</text>
<text text-anchor="start" x="245" y="-638.5" font-family="Helvetica,sans-Serif" font-size="10.00"># bool m_bIsInitialized</text>
<polyline fill="none" stroke="black" points="237,-631.5 451,-631.5 "/>
<text text-anchor="start" x="245" y="-619.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getFeatureDimensions</text>
<text text-anchor="start" x="245" y="-608.5" font-family="Helvetica,sans-Serif" font-size="10.00">(int &amp;iNumRows, int &amp;iNumCols) const</text>
<text text-anchor="start" x="245" y="-597.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ float getTimeStamp</text>
<text text-anchor="start" x="245" y="-586.5" font-family="Helvetica,sans-Serif" font-size="10.00">(int iBlockIdx) const</text>
<text text-anchor="start" x="245" y="-575.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getTimeStamps</text>
<text text-anchor="start" x="245" y="-564.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfAxisTicks) const</text>
<text text-anchor="start" x="245" y="-553.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compFeature1Dim</text>
<text text-anchor="start" x="245" y="-542.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfFeature)</text>
<text text-anchor="start" x="245" y="-531.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compFeatureNDim</text>
<text text-anchor="start" x="245" y="-520.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float **ppfFeature)</text>
<text text-anchor="start" x="245" y="-509.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="245" y="-498.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CFeatureIf *&amp;pCInstance,</text>
<text text-anchor="start" x="245" y="-487.5" font-family="Helvetica,sans-Serif" font-size="10.00"> Feature_t eFeatureIdx,</text>
<text text-anchor="start" x="245" y="-476.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const std::string &amp;strAudioFile</text>
<text text-anchor="start" x="245" y="-465.5" font-family="Helvetica,sans-Serif" font-size="10.00">Path, int iBlockLength=2048,</text>
<text text-anchor="start" x="245" y="-454.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iHopLength=1024)</text>
<text text-anchor="start" x="245" y="-443.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="245" y="-432.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CFeatureIf *&amp;pCInstance,</text>
<text text-anchor="start" x="245" y="-421.5" font-family="Helvetica,sans-Serif" font-size="10.00"> Feature_t eFeatureIdx,</text>
<text text-anchor="start" x="245" y="-410.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const float *pfAudio, long</text>
<text text-anchor="start" x="245" y="-399.5" font-family="Helvetica,sans-Serif" font-size="10.00"> long iNumFrames, float fSampleRate,</text>
<text text-anchor="start" x="245" y="-388.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iBlockLength=2048, int iHopLength=1024)</text>
<text text-anchor="start" x="245" y="-377.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="245" y="-366.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CFeatureIf *&amp;pCInstance)</text>
<text text-anchor="start" x="245" y="-355.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static std::string</text>
<text text-anchor="start" x="245" y="-344.5" font-family="Helvetica,sans-Serif" font-size="10.00"> getFeatureString(Feature</text>
<text text-anchor="start" x="245" y="-333.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t eFeatureIdx)</text>
<text text-anchor="start" x="245" y="-322.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Feature_t getFeature</text>
<text text-anchor="start" x="245" y="-311.5" font-family="Helvetica,sans-Serif" font-size="10.00">IdxFromString(std::string</text>
<text text-anchor="start" x="245" y="-300.5" font-family="Helvetica,sans-Serif" font-size="10.00"> sFeatureString)</text>
<text text-anchor="start" x="245" y="-289.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CFeatureIf()</text>
<text text-anchor="start" x="245" y="-278.5" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CFeatureIf()</text>
<text text-anchor="start" x="245" y="-267.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CFeatureIf(const CFeature</text>
<text text-anchor="start" x="245" y="-256.5" font-family="Helvetica,sans-Serif" font-size="10.00">If &amp;that)</text>
<text text-anchor="start" x="245" y="-245.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CFeatureIf &amp; operator</text>
<text text-anchor="start" x="245" y="-234.5" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CFeatureIf &amp;c)</text>
<text text-anchor="start" x="245" y="-223.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t reset_()</text>
<text text-anchor="start" x="245" y="-212.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t init_(Feature</text>
<text text-anchor="start" x="245" y="-201.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t eFeatureIdx)</text>
<text text-anchor="start" x="245" y="-190.5" font-family="Helvetica,sans-Serif" font-size="10.00"># bool isFeatureSpectral</text>
<text text-anchor="start" x="245" y="-179.5" font-family="Helvetica,sans-Serif" font-size="10.00">_(Feature_t eFeatureIdx)</text>
<text text-anchor="start" x="245" y="-168.5" font-family="Helvetica,sans-Serif" font-size="10.00"># void computeMagSpectrum_()</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M344,-150.85C344,-141.18 344,-132.01 344,-123.51"/>
<polygon fill="none" stroke="midnightblue" points="340.5,-151.09 344,-161.09 347.5,-151.09 340.5,-151.09"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="a00537.xhtml" target="_top" xlink:title="class for audio normalization offering three options">
<polygon fill="white" stroke="black" points="0,-1086 0,-1319 150,-1319 150,-1086 0,-1086"/>
<text text-anchor="middle" x="75" y="-1307" font-family="Helvetica,sans-Serif" font-size="10.00">CNormalizeAudio</text>
<polyline fill="none" stroke="black" points="0,-1300 150,-1300 "/>
<text text-anchor="start" x="8" y="-1288" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float m_fScaleFactor</text>
<polyline fill="none" stroke="black" points="0,-1281 150,-1281 "/>
<text text-anchor="start" x="8" y="-1269" font-family="Helvetica,sans-Serif" font-size="10.00">+ CNormalizeAudio(CAudioFile</text>
<text text-anchor="start" x="8" y="-1258" font-family="Helvetica,sans-Serif" font-size="10.00">If *pCAudioFile)</text>
<text text-anchor="start" x="8" y="-1247" font-family="Helvetica,sans-Serif" font-size="10.00">+ CNormalizeAudio(const</text>
<text text-anchor="start" x="8" y="-1236" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfAudioBuff, long</text>
<text text-anchor="start" x="8" y="-1225" font-family="Helvetica,sans-Serif" font-size="10.00"> long iAudioLength)</text>
<text text-anchor="start" x="8" y="-1214" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CNormalizeAudio()</text>
<text text-anchor="start" x="8" y="-1203" font-family="Helvetica,sans-Serif" font-size="10.00">+ void normalizeBlock</text>
<text text-anchor="start" x="8" y="-1192" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfAudioBlock,</text>
<text text-anchor="start" x="8" y="-1181" font-family="Helvetica,sans-Serif" font-size="10.00"> long long iNumSamples)</text>
<text text-anchor="start" x="8" y="-1170" font-family="Helvetica,sans-Serif" font-size="10.00">+ static void normalizeSignal</text>
<text text-anchor="start" x="8" y="-1159" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfAudio, long long</text>
<text text-anchor="start" x="8" y="-1148" font-family="Helvetica,sans-Serif" font-size="10.00"> iNumSamples)</text>
<text text-anchor="start" x="8" y="-1137" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CNormalizeAudio()</text>
<text text-anchor="start" x="8" y="-1126" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CNormalizeAudio(const</text>
<text text-anchor="start" x="8" y="-1115" font-family="Helvetica,sans-Serif" font-size="10.00"> CNormalizeAudio &amp;that)</text>
<text text-anchor="start" x="8" y="-1104" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CNormalizeAudio &amp; operator</text>
<text text-anchor="start" x="8" y="-1093" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CNormalizeAudio &amp;c)</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node2 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node2</title>
<path fill="none" stroke="#404040" d="M87.43,-1085.75C99.29,-997.72 121.14,-874.65 159,-772 177.92,-720.71 204.21,-667.94 231.05,-620.12"/>
<polygon fill="none" stroke="#404040" points="231.05,-620.11 230.52,-612.92 236.96,-609.67 237.49,-616.86 231.05,-620.11"/>
<text text-anchor="middle" x="209.5" y="-746" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCNormalize</text>
</g>
<!-- Node4 -->
<g id="node4" class="node">
<title>Node4</title>
<g id="a_node4"><a xlink:href="a00493.xhtml" target="_top" xlink:title="forward declaration">
<polygon fill="white" stroke="black" points="168,-987 168,-1418 328,-1418 328,-987 168,-987"/>
<text text-anchor="middle" x="248" y="-1406" font-family="Helvetica,sans-Serif" font-size="10.00">CBlockAudioIf</text>
<polyline fill="none" stroke="black" points="168,-1399 328,-1399 "/>
<text text-anchor="start" x="176" y="-1387" font-family="Helvetica,sans-Serif" font-size="10.00"># long long m_iNumBlocks</text>
<text text-anchor="start" x="176" y="-1376" font-family="Helvetica,sans-Serif" font-size="10.00"># long long m_iCurrBlock</text>
<text text-anchor="start" x="176" y="-1365" font-family="Helvetica,sans-Serif" font-size="10.00"># long long m_iAudioLength</text>
<text text-anchor="start" x="176" y="-1354" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iBlockLength</text>
<text text-anchor="start" x="176" y="-1343" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iNumChannels</text>
<text text-anchor="start" x="176" y="-1332" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iHopLength</text>
<text text-anchor="start" x="176" y="-1321" font-family="Helvetica,sans-Serif" font-size="10.00"># float m_fSampleRate</text>
<polyline fill="none" stroke="black" points="168,-1314 328,-1314 "/>
<text text-anchor="start" x="176" y="-1302" font-family="Helvetica,sans-Serif" font-size="10.00">+ long long getNumBlocks</text>
<text text-anchor="start" x="176" y="-1291" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="176" y="-1280" font-family="Helvetica,sans-Serif" font-size="10.00">+ long long getLengthInSamples</text>
<text text-anchor="start" x="176" y="-1269" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="176" y="-1258" font-family="Helvetica,sans-Serif" font-size="10.00">+ float getTimeStamp</text>
<text text-anchor="start" x="176" y="-1247" font-family="Helvetica,sans-Serif" font-size="10.00">(long long iBlockIdx)</text>
<text text-anchor="start" x="176" y="-1236" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual bool isEndOfData</text>
<text text-anchor="start" x="176" y="-1225" font-family="Helvetica,sans-Serif" font-size="10.00">() const =0</text>
<text text-anchor="start" x="176" y="-1214" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual int getNextBlock</text>
<text text-anchor="start" x="176" y="-1203" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfBlock, float</text>
<text text-anchor="start" x="176" y="-1192" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfTimeStampInS=0)=0</text>
<text text-anchor="start" x="176" y="-1181" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="176" y="-1170" font-family="Helvetica,sans-Serif" font-size="10.00">(CBlockAudioIf *&amp;pCInstance,</text>
<text text-anchor="start" x="176" y="-1159" font-family="Helvetica,sans-Serif" font-size="10.00"> CAudioFileIf *pCAudioFile,</text>
<text text-anchor="start" x="176" y="-1148" font-family="Helvetica,sans-Serif" font-size="10.00"> int iBlockLength, int iHopLength)</text>
<text text-anchor="start" x="176" y="-1137" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="176" y="-1126" font-family="Helvetica,sans-Serif" font-size="10.00">(CBlockAudioIf *&amp;pCInstance,</text>
<text text-anchor="start" x="176" y="-1115" font-family="Helvetica,sans-Serif" font-size="10.00"> const float *pfAudioBuff,</text>
<text text-anchor="start" x="176" y="-1104" font-family="Helvetica,sans-Serif" font-size="10.00"> long long iAudioLength, int</text>
<text text-anchor="start" x="176" y="-1093" font-family="Helvetica,sans-Serif" font-size="10.00"> iBlockLength, int iHopLength,</text>
<text text-anchor="start" x="176" y="-1082" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate)</text>
<text text-anchor="start" x="176" y="-1071" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="176" y="-1060" font-family="Helvetica,sans-Serif" font-size="10.00">(CBlockAudioIf *&amp;pCInstance)</text>
<text text-anchor="start" x="176" y="-1049" font-family="Helvetica,sans-Serif" font-size="10.00"># CBlockAudioIf()</text>
<text text-anchor="start" x="176" y="-1038" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CBlockAudioIf()</text>
<text text-anchor="start" x="176" y="-1027" font-family="Helvetica,sans-Serif" font-size="10.00"># CBlockAudioIf(const</text>
<text text-anchor="start" x="176" y="-1016" font-family="Helvetica,sans-Serif" font-size="10.00"> CBlockAudioIf &amp;that)</text>
<text text-anchor="start" x="176" y="-1005" font-family="Helvetica,sans-Serif" font-size="10.00"># CBlockAudioIf &amp; operator</text>
<text text-anchor="start" x="176" y="-994" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CBlockAudioIf &amp;c)</text>
</a>
</g>
</g>
<!-- Node4&#45;&gt;Node2 -->
<g id="edge3" class="edge">
<title>Node4&#45;&gt;Node2</title>
<path fill="none" stroke="#404040" d="M275.19,-986.96C285.04,-909.23 296.34,-820.05 306.9,-736.73"/>
<polygon fill="none" stroke="#404040" points="306.91,-736.65 303.7,-730.2 308.42,-724.75 311.63,-731.2 306.91,-736.65"/>
<text text-anchor="middle" x="348.5" y="-746" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCBlockAudio</text>
</g>
<!-- Node5 -->
<g id="node5" class="node">
<title>Node5</title>
<g id="a_node5"><a xlink:href="a00433.xhtml" target="_top" xlink:title="class for computation of a feature from a block of data (e.g., time or magnitude spectrum)">
<polygon fill="white" stroke="black" points="346,-772.5 346,-1632.5 534,-1632.5 534,-772.5 346,-772.5"/>
<text text-anchor="middle" x="440" y="-1620.5" font-family="Helvetica,sans-Serif" font-size="10.00">CFeatureFromBlockIf</text>
<polyline fill="none" stroke="black" points="346,-1613.5 534,-1613.5 "/>
<text text-anchor="start" x="354" y="-1601.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static const float</text>
<text text-anchor="start" x="354" y="-1590.5" font-family="Helvetica,sans-Serif" font-size="10.00"> m_kfFloatThresh</text>
<text text-anchor="start" x="354" y="-1579.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CFeatureIf::Feature</text>
<text text-anchor="start" x="354" y="-1568.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t m_eFeatureIdx</text>
<text text-anchor="start" x="354" y="-1557.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iDataLength</text>
<text text-anchor="start" x="354" y="-1546.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float m_fSampleRate</text>
<text text-anchor="start" x="354" y="-1535.5" font-family="Helvetica,sans-Serif" font-size="10.00"># const std::map&lt; CFeature</text>
<text text-anchor="start" x="354" y="-1524.5" font-family="Helvetica,sans-Serif" font-size="10.00">If::Feature_t, std::function</text>
<text text-anchor="start" x="354" y="-1513.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; float(const float *, int,</text>
<text text-anchor="start" x="354" y="-1502.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float)&gt; &gt; m_DispatchMap</text>
<polyline fill="none" stroke="black" points="346,-1495.5 534,-1495.5 "/>
<text text-anchor="start" x="354" y="-1483.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual int getFeatureDimensions</text>
<text text-anchor="start" x="354" y="-1472.5" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="354" y="-1461.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CFeatureIf::Feature</text>
<text text-anchor="start" x="354" y="-1450.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t getFeatureIdx() const</text>
<text text-anchor="start" x="354" y="-1439.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Error_t compFeature</text>
<text text-anchor="start" x="354" y="-1428.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfFeature, const</text>
<text text-anchor="start" x="354" y="-1417.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfInput)</text>
<text text-anchor="start" x="354" y="-1406.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual bool hasAdditional</text>
<text text-anchor="start" x="354" y="-1395.5" font-family="Helvetica,sans-Serif" font-size="10.00">Param() const</text>
<text text-anchor="start" x="354" y="-1384.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Error_t setAdditional</text>
<text text-anchor="start" x="354" y="-1373.5" font-family="Helvetica,sans-Serif" font-size="10.00">Param(float fParamValue)</text>
<text text-anchor="start" x="354" y="-1362.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="354" y="-1351.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CFeatureFromBlockIf</text>
<text text-anchor="start" x="354" y="-1340.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *&amp;pCInstance, CFeatureIf</text>
<text text-anchor="start" x="354" y="-1329.5" font-family="Helvetica,sans-Serif" font-size="10.00">::Feature_t eFeatureIdx,</text>
<text text-anchor="start" x="354" y="-1318.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="354" y="-1307.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="354" y="-1296.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CFeatureFromBlockIf *&amp;pCInstance)</text>
<text text-anchor="start" x="354" y="-1285.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="354" y="-1274.5" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralCentroid(const</text>
<text text-anchor="start" x="354" y="-1263.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfMagSpec, int</text>
<text text-anchor="start" x="354" y="-1252.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="354" y="-1241.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="354" y="-1230.5" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralCrestFactor(const</text>
<text text-anchor="start" x="354" y="-1219.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfMagSpec, int iDataLength,</text>
<text text-anchor="start" x="354" y="-1208.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate=1.F)</text>
<text text-anchor="start" x="354" y="-1197.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="354" y="-1186.5" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralDecrease(const</text>
<text text-anchor="start" x="354" y="-1175.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfMagSpec, int</text>
<text text-anchor="start" x="354" y="-1164.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="354" y="-1153.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="354" y="-1142.5" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralFlatness(const</text>
<text text-anchor="start" x="354" y="-1131.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfMagSpec, int</text>
<text text-anchor="start" x="354" y="-1120.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="354" y="-1109.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="354" y="-1098.5" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralFlux(const float</text>
<text text-anchor="start" x="354" y="-1087.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfMagSpec, const float</text>
<text text-anchor="start" x="354" y="-1076.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfPrevSpec, int iDataLength,</text>
<text text-anchor="start" x="354" y="-1065.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate=1.F)</text>
<text text-anchor="start" x="354" y="-1054.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="354" y="-1043.5" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralKurtosis(const</text>
<text text-anchor="start" x="354" y="-1032.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfMagSpec, int</text>
<text text-anchor="start" x="354" y="-1021.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="354" y="-1010.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="354" y="-999.5" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralRolloff(const</text>
<text text-anchor="start" x="354" y="-988.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfMagSpec, int</text>
<text text-anchor="start" x="354" y="-977.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iDataLength, float fSampleRate</text>
<text text-anchor="start" x="354" y="-966.5" font-family="Helvetica,sans-Serif" font-size="10.00">=1.F, float fKappa=.85F)</text>
<text text-anchor="start" x="354" y="-955.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="354" y="-944.5" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralSkewness(const</text>
<text text-anchor="start" x="354" y="-933.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfMagSpec, int</text>
<text text-anchor="start" x="354" y="-922.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="354" y="-911.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 8 more...</text>
<text text-anchor="start" x="354" y="-900.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CFeatureFromBlockIf()</text>
<text text-anchor="start" x="354" y="-889.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CFeatureFromBlockIf</text>
<text text-anchor="start" x="354" y="-878.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CFeatureIf::Feature</text>
<text text-anchor="start" x="354" y="-867.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t eFeatureIdx, int iDataLength,</text>
<text text-anchor="start" x="354" y="-856.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate)</text>
<text text-anchor="start" x="354" y="-845.5" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CFeatureFromBlockIf()</text>
<text text-anchor="start" x="354" y="-834.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CFeatureFromBlockIf</text>
<text text-anchor="start" x="354" y="-823.5" font-family="Helvetica,sans-Serif" font-size="10.00">(const CFeatureFromBlockIf</text>
<text text-anchor="start" x="354" y="-812.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;that)</text>
<text text-anchor="start" x="354" y="-801.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CFeatureFromBlockIf</text>
<text text-anchor="start" x="354" y="-790.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp; operator=(const CFeature</text>
<text text-anchor="start" x="354" y="-779.5" font-family="Helvetica,sans-Serif" font-size="10.00">FromBlockIf &amp;c)</text>
</a>
</g>
</g>
<!-- Node5&#45;&gt;Node2 -->
<g id="edge4" class="edge">
<title>Node5&#45;&gt;Node2</title>
<path fill="none" stroke="#404040" d="M397.84,-772.47C396.58,-762.55 395.3,-752.71 394,-743 393.72,-740.94 393.45,-738.87 393.16,-736.79"/>
<polygon fill="none" stroke="#404040" points="393.15,-736.71 388.37,-731.32 391.51,-724.83 396.3,-730.22 393.15,-736.71"/>
<text text-anchor="middle" x="427.5" y="-746" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCFeature</text>
</g>
<!-- Node6 -->
<g id="node6" class="node">
<title>Node6</title>
<g id="a_node6"><a xlink:href="a00437.xhtml" target="_top" xlink:title="class for FFT computation with windowing">
<polygon fill="white" stroke="black" points="552,-959.5 552,-1445.5 740,-1445.5 740,-959.5 552,-959.5"/>
<text text-anchor="middle" x="646" y="-1433.5" font-family="Helvetica,sans-Serif" font-size="10.00">CFft</text>
<polyline fill="none" stroke="black" points="552,-1426.5 740,-1426.5 "/>
<text text-anchor="start" x="560" y="-1414.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_pfProcessBuff</text>
<text text-anchor="start" x="560" y="-1403.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_pfWindowBuff</text>
<text text-anchor="start" x="560" y="-1392.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iDataLength</text>
<text text-anchor="start" x="560" y="-1381.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iFftLength</text>
<text text-anchor="start" x="560" y="-1370.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Windowing_t m_ePrePostWindowOpt</text>
<text text-anchor="start" x="560" y="-1359.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; bool m_bIsInitialized</text>
<text text-anchor="start" x="560" y="-1348.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; static const float m_Pi</text>
<text text-anchor="start" x="560" y="-1337.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; static const float</text>
<text text-anchor="start" x="560" y="-1326.5" font-family="Helvetica,sans-Serif" font-size="10.00"> m_Pi2</text>
<polyline fill="none" stroke="black" points="552,-1319.5 740,-1319.5 "/>
<text text-anchor="start" x="560" y="-1307.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CFft()</text>
<text text-anchor="start" x="560" y="-1296.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CFft()</text>
<text text-anchor="start" x="560" y="-1285.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t init(int iBlockLength,</text>
<text text-anchor="start" x="560" y="-1274.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iZeroPadFactor=1, WindowFunction</text>
<text text-anchor="start" x="560" y="-1263.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t eWindow=kWindowHann, Windowing</text>
<text text-anchor="start" x="560" y="-1252.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t eWindowing=kPreWindow)</text>
<text text-anchor="start" x="560" y="-1241.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t reset()</text>
<text text-anchor="start" x="560" y="-1230.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t overrideWindow</text>
<text text-anchor="start" x="560" y="-1219.5" font-family="Helvetica,sans-Serif" font-size="10.00">(const float *pfNewWindow)</text>
<text text-anchor="start" x="560" y="-1208.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getWindow(float</text>
<text text-anchor="start" x="560" y="-1197.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfWindow) const</text>
<text text-anchor="start" x="560" y="-1186.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compFft(complex</text>
<text text-anchor="start" x="560" y="-1175.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t *pfSpectrum, const</text>
<text text-anchor="start" x="560" y="-1164.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfInput)</text>
<text text-anchor="start" x="560" y="-1153.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compInvFft</text>
<text text-anchor="start" x="560" y="-1142.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfOutput, const</text>
<text text-anchor="start" x="560" y="-1131.5" font-family="Helvetica,sans-Serif" font-size="10.00"> complex_t *pfSpectrum)</text>
<text text-anchor="start" x="560" y="-1120.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getMagnitude</text>
<text text-anchor="start" x="560" y="-1109.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfMag, const</text>
<text text-anchor="start" x="560" y="-1098.5" font-family="Helvetica,sans-Serif" font-size="10.00"> complex_t *pfSpectrum)</text>
<text text-anchor="start" x="560" y="-1087.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const</text>
<text text-anchor="start" x="560" y="-1076.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getPhase(float</text>
<text text-anchor="start" x="560" y="-1065.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfPhase, const complex</text>
<text text-anchor="start" x="560" y="-1054.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t *pfSpectrum) const</text>
<text text-anchor="start" x="560" y="-1043.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 7 more...</text>
<text text-anchor="start" x="560" y="-1032.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CFft(const CFft &amp;that)</text>
<text text-anchor="start" x="560" y="-1021.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CFft &amp; operator=(const</text>
<text text-anchor="start" x="560" y="-1010.5" font-family="Helvetica,sans-Serif" font-size="10.00"> CFft &amp;c)</text>
<text text-anchor="start" x="560" y="-999.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Error_t allocMemory_()</text>
<text text-anchor="start" x="560" y="-988.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Error_t freeMemory_()</text>
<text text-anchor="start" x="560" y="-977.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Error_t computeWindow</text>
<text text-anchor="start" x="560" y="-966.5" font-family="Helvetica,sans-Serif" font-size="10.00">_(WindowFunction_t eWindow)</text>
</a>
</g>
</g>
<!-- Node6&#45;&gt;Node2 -->
<g id="edge5" class="edge">
<title>Node6&#45;&gt;Node2</title>
<path fill="none" stroke="#404040" d="M601.78,-959.37C586.68,-897.09 567.29,-831.03 543,-772 520.12,-716.39 488.63,-659.21 457.44,-608.49"/>
<polygon fill="none" stroke="#404040" points="457.33,-608.3 450.77,-605.3 451.01,-598.1 457.57,-601.09 457.33,-608.3"/>
<text text-anchor="middle" x="557" y="-746" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCFft</text>
</g>
</g>
</svg>
