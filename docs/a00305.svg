<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 4.0.0 (20220602.1335)
 -->
<!-- Title: CChordFromFile Pages: 1 -->
<!--zoomable 2493 -->
<svg id="main" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" onload="init(evt)">
<style type="text/css"><![CDATA[
.edge:hover path { stroke: red; }
.edge:hover polygon { stroke: red; fill: red; }
]]></style>
<script type="text/javascript"><![CDATA[
var edges = document.getElementsByTagName('g');
if (edges && edges.length) {
  for (var i=0;i<edges.length;i++) {
    if (edges[i].id.substr(0,4)=='edge') {
      edges[i].setAttribute('class','edge');
    }
  }
}
]]></script>
        <defs>
                <circle id="rim" cx="0" cy="0" r="7"/>
                <circle id="rim2" cx="0" cy="0" r="3.5"/>
                <g id="zoomPlus">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomplus.mouseover" end="zoomplus.mouseout"/>
                        </use>
                        <path d="M-4,0h8M0,-4v8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="zoomMin">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomminus.mouseover" end="zoomminus.mouseout"/>
                        </use>
                        <path d="M-4,0h8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="dirArrow">
                        <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
               <g id="resetDef">
                       <use xlink:href="#rim2" fill="#404040">
                               <set attributeName="fill" to="#808080" begin="reset.mouseover" end="reset.mouseout"/>
                       </use>
               </g>
        </defs>

<script type="text/javascript">
var viewWidth = 1065;
var viewHeight = 2493;
var sectionId = 'dynsection-1';
</script>
<script xlink:href="svgpan.js"/>
<svg id="graph" class="graph">
<g id="viewport">
<title>CChordFromFile</title>
<polygon fill="white" stroke="transparent" points="-4,4 -4,-2489 1060.5,-2489 1060.5,4 -4,4"/>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title=" ">
<polygon fill="#bfbfbf" stroke="black" points="585,-0.5 585,-90.5 745,-90.5 745,-0.5 585,-0.5"/>
<text text-anchor="middle" x="665" y="-78.5" font-family="Helvetica,sans-Serif" font-size="10.00">CChordFromFile</text>
<polyline fill="none" stroke="black" points="585,-71.5 745,-71.5 "/>
<text text-anchor="middle" x="665" y="-59.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="585,-52.5 745,-52.5 "/>
<text text-anchor="start" x="593" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CChordFromFile(std</text>
<text text-anchor="start" x="593" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">::string strAudioFilePath,</text>
<text text-anchor="start" x="593" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iBlockLength, int iHopLength)</text>
<text text-anchor="start" x="593" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CChordFromFile()</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="a00451.xhtml" target="_top" xlink:title="class for computation of a magnitude Chord from either a file or a vector">
<polygon fill="white" stroke="black" points="501,-314.5 501,-866.5 655,-866.5 655,-314.5 501,-314.5"/>
<text text-anchor="middle" x="578" y="-854.5" font-family="Helvetica,sans-Serif" font-size="10.00">CChordIf</text>
<polyline fill="none" stroke="black" points="501,-847.5 655,-847.5 "/>
<text text-anchor="start" x="509" y="-835.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iBlockLength</text>
<text text-anchor="start" x="509" y="-824.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iHopLength</text>
<text text-anchor="start" x="509" y="-813.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float m_fSampleRate</text>
<text text-anchor="start" x="509" y="-802.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float * m_pfProcessBuff2</text>
<text text-anchor="start" x="509" y="-791.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float * m_pfProcessBuff1</text>
<text text-anchor="start" x="509" y="-780.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float ** m_ppfChordProbs</text>
<text text-anchor="start" x="509" y="-769.5" font-family="Helvetica,sans-Serif" font-size="10.00"># bool m_bIsInitialized</text>
<polyline fill="none" stroke="black" points="501,-762.5 655,-762.5 "/>
<text text-anchor="start" x="509" y="-750.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getNumBlocks</text>
<text text-anchor="start" x="509" y="-739.5" font-family="Helvetica,sans-Serif" font-size="10.00">(int &amp;iNumBlocks) const</text>
<text text-anchor="start" x="509" y="-728.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ int getNumBlocks()</text>
<text text-anchor="start" x="509" y="-717.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const</text>
<text text-anchor="start" x="509" y="-706.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ float getTimeStamp</text>
<text text-anchor="start" x="509" y="-695.5" font-family="Helvetica,sans-Serif" font-size="10.00">(int iBlockIdx) const</text>
<text text-anchor="start" x="509" y="-684.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getTimeStamps</text>
<text text-anchor="start" x="509" y="-673.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfAxisTicks) const</text>
<text text-anchor="start" x="509" y="-662.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compChords</text>
<text text-anchor="start" x="509" y="-651.5" font-family="Helvetica,sans-Serif" font-size="10.00">(Chords_t *peChord,</text>
<text text-anchor="start" x="509" y="-640.5" font-family="Helvetica,sans-Serif" font-size="10.00"> bool bWithViterbi=true)</text>
<text text-anchor="start" x="509" y="-629.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="509" y="-618.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CChordIf *&amp;pCInstance,</text>
<text text-anchor="start" x="509" y="-607.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const std::string &amp;strAudioFile</text>
<text text-anchor="start" x="509" y="-596.5" font-family="Helvetica,sans-Serif" font-size="10.00">Path, int iBlockLength=8192,</text>
<text text-anchor="start" x="509" y="-585.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iHopLength=2048)</text>
<text text-anchor="start" x="509" y="-574.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="509" y="-563.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CChordIf *&amp;pCInstance,</text>
<text text-anchor="start" x="509" y="-552.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const float *pfAudio,</text>
<text text-anchor="start" x="509" y="-541.5" font-family="Helvetica,sans-Serif" font-size="10.00"> long long iNumFrames, float</text>
<text text-anchor="start" x="509" y="-530.5" font-family="Helvetica,sans-Serif" font-size="10.00"> fSampleRate, int iBlockLength</text>
<text text-anchor="start" x="509" y="-519.5" font-family="Helvetica,sans-Serif" font-size="10.00">=8192, int iHopLength=2048)</text>
<text text-anchor="start" x="509" y="-508.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="509" y="-497.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CChordIf *&amp;pCInstance)</text>
<text text-anchor="start" x="509" y="-486.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static std::string</text>
<text text-anchor="start" x="509" y="-475.5" font-family="Helvetica,sans-Serif" font-size="10.00"> getChordString(Chords</text>
<text text-anchor="start" x="509" y="-464.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t eChordIdx)</text>
<text text-anchor="start" x="509" y="-453.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Chords_t getChord</text>
<text text-anchor="start" x="509" y="-442.5" font-family="Helvetica,sans-Serif" font-size="10.00">IdxFromString(std::string</text>
<text text-anchor="start" x="509" y="-431.5" font-family="Helvetica,sans-Serif" font-size="10.00"> sChordString)</text>
<text text-anchor="start" x="509" y="-420.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CChordIf()</text>
<text text-anchor="start" x="509" y="-409.5" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CChordIf()</text>
<text text-anchor="start" x="509" y="-398.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CChordIf(const CChordIf</text>
<text text-anchor="start" x="509" y="-387.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;that)</text>
<text text-anchor="start" x="509" y="-376.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CChordIf &amp; operator</text>
<text text-anchor="start" x="509" y="-365.5" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CChordIf &amp;c)</text>
<text text-anchor="start" x="509" y="-354.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t reset_()</text>
<text text-anchor="start" x="509" y="-343.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t init_()</text>
<text text-anchor="start" x="509" y="-332.5" font-family="Helvetica,sans-Serif" font-size="10.00"># void initViterbi_()</text>
<text text-anchor="start" x="509" y="-321.5" font-family="Helvetica,sans-Serif" font-size="10.00"># void computeMagSpectrum_()</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M623.67,-304.49C637.06,-220.9 650.17,-139.03 657.92,-90.66"/>
<polygon fill="none" stroke="midnightblue" points="620.2,-303.99 622.07,-314.42 627.11,-305.1 620.2,-303.99"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="a00591.xhtml" target="_top" xlink:title="class for audio normalization offering three options">
<polygon fill="white" stroke="black" points="0,-1217 0,-1450 150,-1450 150,-1217 0,-1217"/>
<text text-anchor="middle" x="75" y="-1438" font-family="Helvetica,sans-Serif" font-size="10.00">CNormalizeAudio</text>
<polyline fill="none" stroke="black" points="0,-1431 150,-1431 "/>
<text text-anchor="start" x="8" y="-1419" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float m_fScaleFactor</text>
<polyline fill="none" stroke="black" points="0,-1412 150,-1412 "/>
<text text-anchor="start" x="8" y="-1400" font-family="Helvetica,sans-Serif" font-size="10.00">+ CNormalizeAudio(CAudioFile</text>
<text text-anchor="start" x="8" y="-1389" font-family="Helvetica,sans-Serif" font-size="10.00">If *pCAudioFile)</text>
<text text-anchor="start" x="8" y="-1378" font-family="Helvetica,sans-Serif" font-size="10.00">+ CNormalizeAudio(const</text>
<text text-anchor="start" x="8" y="-1367" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfAudioBuff, long</text>
<text text-anchor="start" x="8" y="-1356" font-family="Helvetica,sans-Serif" font-size="10.00"> long iAudioLength)</text>
<text text-anchor="start" x="8" y="-1345" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CNormalizeAudio()</text>
<text text-anchor="start" x="8" y="-1334" font-family="Helvetica,sans-Serif" font-size="10.00">+ void normalizeBlock</text>
<text text-anchor="start" x="8" y="-1323" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfAudioBlock,</text>
<text text-anchor="start" x="8" y="-1312" font-family="Helvetica,sans-Serif" font-size="10.00"> long long iNumSamples)</text>
<text text-anchor="start" x="8" y="-1301" font-family="Helvetica,sans-Serif" font-size="10.00">+ static void normalizeSignal</text>
<text text-anchor="start" x="8" y="-1290" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfAudio, long long</text>
<text text-anchor="start" x="8" y="-1279" font-family="Helvetica,sans-Serif" font-size="10.00"> iNumSamples)</text>
<text text-anchor="start" x="8" y="-1268" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CNormalizeAudio()</text>
<text text-anchor="start" x="8" y="-1257" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CNormalizeAudio(const</text>
<text text-anchor="start" x="8" y="-1246" font-family="Helvetica,sans-Serif" font-size="10.00"> CNormalizeAudio &amp;that)</text>
<text text-anchor="start" x="8" y="-1235" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CNormalizeAudio &amp; operator</text>
<text text-anchor="start" x="8" y="-1224" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CNormalizeAudio &amp;c)</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node2 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node2</title>
<path fill="none" stroke="#404040" d="M105.56,-1216.8C118.94,-1175.37 136.73,-1129.23 159,-1090 251.26,-927.43 399.13,-766.92 492.28,-673.61"/>
<polygon fill="none" stroke="#404040" points="492.35,-673.55 493.77,-666.48 500.85,-665.07 499.42,-672.14 492.35,-673.55"/>
<text text-anchor="middle" x="211.5" y="-1064" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCNormalize</text>
</g>
<!-- Node4 -->
<g id="node4" class="node">
<title>Node4</title>
<g id="a_node4"><a xlink:href="a00535.xhtml" target="_top" xlink:title="forward declaration">
<polygon fill="white" stroke="black" points="168,-1118 168,-1549 328,-1549 328,-1118 168,-1118"/>
<text text-anchor="middle" x="248" y="-1537" font-family="Helvetica,sans-Serif" font-size="10.00">CBlockAudioIf</text>
<polyline fill="none" stroke="black" points="168,-1530 328,-1530 "/>
<text text-anchor="start" x="176" y="-1518" font-family="Helvetica,sans-Serif" font-size="10.00"># long long m_iNumBlocks</text>
<text text-anchor="start" x="176" y="-1507" font-family="Helvetica,sans-Serif" font-size="10.00"># long long m_iCurrBlock</text>
<text text-anchor="start" x="176" y="-1496" font-family="Helvetica,sans-Serif" font-size="10.00"># long long m_iAudioLength</text>
<text text-anchor="start" x="176" y="-1485" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iBlockLength</text>
<text text-anchor="start" x="176" y="-1474" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iNumChannels</text>
<text text-anchor="start" x="176" y="-1463" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iHopLength</text>
<text text-anchor="start" x="176" y="-1452" font-family="Helvetica,sans-Serif" font-size="10.00"># float m_fSampleRate</text>
<polyline fill="none" stroke="black" points="168,-1445 328,-1445 "/>
<text text-anchor="start" x="176" y="-1433" font-family="Helvetica,sans-Serif" font-size="10.00">+ long long getNumBlocks</text>
<text text-anchor="start" x="176" y="-1422" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="176" y="-1411" font-family="Helvetica,sans-Serif" font-size="10.00">+ long long getLengthInSamples</text>
<text text-anchor="start" x="176" y="-1400" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="176" y="-1389" font-family="Helvetica,sans-Serif" font-size="10.00">+ float getTimeStamp</text>
<text text-anchor="start" x="176" y="-1378" font-family="Helvetica,sans-Serif" font-size="10.00">(long long iBlockIdx)</text>
<text text-anchor="start" x="176" y="-1367" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual bool isEndOfData</text>
<text text-anchor="start" x="176" y="-1356" font-family="Helvetica,sans-Serif" font-size="10.00">() const =0</text>
<text text-anchor="start" x="176" y="-1345" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual int getNextBlock</text>
<text text-anchor="start" x="176" y="-1334" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfBlock, float</text>
<text text-anchor="start" x="176" y="-1323" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfTimeStampInS=0)=0</text>
<text text-anchor="start" x="176" y="-1312" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="176" y="-1301" font-family="Helvetica,sans-Serif" font-size="10.00">(CBlockAudioIf *&amp;pCInstance,</text>
<text text-anchor="start" x="176" y="-1290" font-family="Helvetica,sans-Serif" font-size="10.00"> CAudioFileIf *pCAudioFile,</text>
<text text-anchor="start" x="176" y="-1279" font-family="Helvetica,sans-Serif" font-size="10.00"> int iBlockLength, int iHopLength)</text>
<text text-anchor="start" x="176" y="-1268" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="176" y="-1257" font-family="Helvetica,sans-Serif" font-size="10.00">(CBlockAudioIf *&amp;pCInstance,</text>
<text text-anchor="start" x="176" y="-1246" font-family="Helvetica,sans-Serif" font-size="10.00"> const float *pfAudioBuff,</text>
<text text-anchor="start" x="176" y="-1235" font-family="Helvetica,sans-Serif" font-size="10.00"> long long iAudioLength, int</text>
<text text-anchor="start" x="176" y="-1224" font-family="Helvetica,sans-Serif" font-size="10.00"> iBlockLength, int iHopLength,</text>
<text text-anchor="start" x="176" y="-1213" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate)</text>
<text text-anchor="start" x="176" y="-1202" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="176" y="-1191" font-family="Helvetica,sans-Serif" font-size="10.00">(CBlockAudioIf *&amp;pCInstance)</text>
<text text-anchor="start" x="176" y="-1180" font-family="Helvetica,sans-Serif" font-size="10.00"># CBlockAudioIf()</text>
<text text-anchor="start" x="176" y="-1169" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CBlockAudioIf()</text>
<text text-anchor="start" x="176" y="-1158" font-family="Helvetica,sans-Serif" font-size="10.00"># CBlockAudioIf(const</text>
<text text-anchor="start" x="176" y="-1147" font-family="Helvetica,sans-Serif" font-size="10.00"> CBlockAudioIf &amp;that)</text>
<text text-anchor="start" x="176" y="-1136" font-family="Helvetica,sans-Serif" font-size="10.00"># CBlockAudioIf &amp; operator</text>
<text text-anchor="start" x="176" y="-1125" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CBlockAudioIf &amp;c)</text>
</a>
</g>
</g>
<!-- Node4&#45;&gt;Node2 -->
<g id="edge3" class="edge">
<title>Node4&#45;&gt;Node2</title>
<path fill="none" stroke="#404040" d="M325.49,-1117.83C329.3,-1108.4 333.15,-1099.08 337,-1090 385.69,-975.16 446.94,-848.66 495.51,-751.83"/>
<polygon fill="none" stroke="#404040" points="495.53,-751.79 494.65,-744.63 500.92,-741.07 501.8,-748.23 495.53,-751.79"/>
<text text-anchor="middle" x="390.5" y="-1064" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCBlockAudio</text>
</g>
<!-- Node5 -->
<g id="node5" class="node">
<title>Node5</title>
<g id="a_node5"><a xlink:href="a00455.xhtml" target="_top" xlink:title="class for computation of a chord from a magnitude spectrum">
<polygon fill="white" stroke="black" points="346,-1184 346,-1483 516,-1483 516,-1184 346,-1184"/>
<text text-anchor="middle" x="431" y="-1471" font-family="Helvetica,sans-Serif" font-size="10.00">CChordFromBlockIf</text>
<polyline fill="none" stroke="black" points="346,-1464 516,-1464 "/>
<text text-anchor="start" x="354" y="-1452" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iMagSpecLength</text>
<text text-anchor="start" x="354" y="-1441" font-family="Helvetica,sans-Serif" font-size="10.00"># float m_fSampleRate</text>
<text text-anchor="start" x="354" y="-1430" font-family="Helvetica,sans-Serif" font-size="10.00"># float * m_pfPitchChroma</text>
<text text-anchor="start" x="354" y="-1419" font-family="Helvetica,sans-Serif" font-size="10.00"># float ** m_ppfTemplateMatrix</text>
<polyline fill="none" stroke="black" points="346,-1412 516,-1412 "/>
<text text-anchor="start" x="354" y="-1400" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Error_t compChord</text>
<text text-anchor="start" x="354" y="-1389" font-family="Helvetica,sans-Serif" font-size="10.00">Prob(float *pfChordProb,</text>
<text text-anchor="start" x="354" y="-1378" font-family="Helvetica,sans-Serif" font-size="10.00"> const float *pfInput)</text>
<text text-anchor="start" x="354" y="-1367" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="354" y="-1356" font-family="Helvetica,sans-Serif" font-size="10.00">(CChordFromBlockIf *&amp;pCInstance,</text>
<text text-anchor="start" x="354" y="-1345" font-family="Helvetica,sans-Serif" font-size="10.00"> int iMagSpecLength, float</text>
<text text-anchor="start" x="354" y="-1334" font-family="Helvetica,sans-Serif" font-size="10.00"> fSampleRate=1.F)</text>
<text text-anchor="start" x="354" y="-1323" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="354" y="-1312" font-family="Helvetica,sans-Serif" font-size="10.00">(CChordFromBlockIf *&amp;pCInstance)</text>
<text text-anchor="start" x="354" y="-1301" font-family="Helvetica,sans-Serif" font-size="10.00"># CChordFromBlockIf</text>
<text text-anchor="start" x="354" y="-1290" font-family="Helvetica,sans-Serif" font-size="10.00">(int iMagSpecLength,</text>
<text text-anchor="start" x="354" y="-1279" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate)</text>
<text text-anchor="start" x="354" y="-1268" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CChordFromBlockIf()</text>
<text text-anchor="start" x="354" y="-1257" font-family="Helvetica,sans-Serif" font-size="10.00"># CChordFromBlockIf</text>
<text text-anchor="start" x="354" y="-1246" font-family="Helvetica,sans-Serif" font-size="10.00">(const CChordFromBlockIf</text>
<text text-anchor="start" x="354" y="-1235" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;that)</text>
<text text-anchor="start" x="354" y="-1224" font-family="Helvetica,sans-Serif" font-size="10.00"># CChordFromBlockIf &amp;</text>
<text text-anchor="start" x="354" y="-1213" font-family="Helvetica,sans-Serif" font-size="10.00"> operator=(const CChordFrom</text>
<text text-anchor="start" x="354" y="-1202" font-family="Helvetica,sans-Serif" font-size="10.00">BlockIf &amp;c)</text>
<text text-anchor="start" x="354" y="-1191" font-family="Helvetica,sans-Serif" font-size="10.00"># void genTemplateMatrix_()</text>
</a>
</g>
</g>
<!-- Node5&#45;&gt;Node2 -->
<g id="edge4" class="edge">
<title>Node5&#45;&gt;Node2</title>
<path fill="none" stroke="#404040" d="M460.48,-1183.88C477.83,-1096.42 500.37,-982.84 521.05,-878.56"/>
<polygon fill="none" stroke="#404040" points="521.1,-878.31 518.35,-871.65 523.44,-866.54 526.19,-873.21 521.1,-878.31"/>
<text text-anchor="middle" x="512.5" y="-1064" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCChord</text>
</g>
<!-- Node6 -->
<g id="node6" class="node">
<title>Node6</title>
<g id="a_node6"><a xlink:href="a00463.xhtml" target="_top" xlink:title="class for computation of a feature from a block of data (e.g., time or magnitude spectrum)">
<polygon fill="white" stroke="black" points="337,-1624.5 337,-2484.5 525,-2484.5 525,-1624.5 337,-1624.5"/>
<text text-anchor="middle" x="431" y="-2472.5" font-family="Helvetica,sans-Serif" font-size="10.00">CFeatureFromBlockIf</text>
<polyline fill="none" stroke="black" points="337,-2465.5 525,-2465.5 "/>
<text text-anchor="start" x="345" y="-2453.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static const float</text>
<text text-anchor="start" x="345" y="-2442.5" font-family="Helvetica,sans-Serif" font-size="10.00"> m_kfFloatThresh</text>
<text text-anchor="start" x="345" y="-2431.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CFeatureIf::Feature</text>
<text text-anchor="start" x="345" y="-2420.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t m_eFeatureIdx</text>
<text text-anchor="start" x="345" y="-2409.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iDataLength</text>
<text text-anchor="start" x="345" y="-2398.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float m_fSampleRate</text>
<text text-anchor="start" x="345" y="-2387.5" font-family="Helvetica,sans-Serif" font-size="10.00"># const std::map&lt; CFeature</text>
<text text-anchor="start" x="345" y="-2376.5" font-family="Helvetica,sans-Serif" font-size="10.00">If::Feature_t, std::function</text>
<text text-anchor="start" x="345" y="-2365.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; float(const float *, int,</text>
<text text-anchor="start" x="345" y="-2354.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float)&gt; &gt; m_DispatchMap</text>
<polyline fill="none" stroke="black" points="337,-2347.5 525,-2347.5 "/>
<text text-anchor="start" x="345" y="-2335.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual int getFeatureDimensions</text>
<text text-anchor="start" x="345" y="-2324.5" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="345" y="-2313.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CFeatureIf::Feature</text>
<text text-anchor="start" x="345" y="-2302.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t getFeatureIdx() const</text>
<text text-anchor="start" x="345" y="-2291.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Error_t compFeature</text>
<text text-anchor="start" x="345" y="-2280.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfFeature, const</text>
<text text-anchor="start" x="345" y="-2269.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfInput)</text>
<text text-anchor="start" x="345" y="-2258.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual bool hasAdditional</text>
<text text-anchor="start" x="345" y="-2247.5" font-family="Helvetica,sans-Serif" font-size="10.00">Param() const</text>
<text text-anchor="start" x="345" y="-2236.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Error_t setAdditional</text>
<text text-anchor="start" x="345" y="-2225.5" font-family="Helvetica,sans-Serif" font-size="10.00">Param(float fParamValue)</text>
<text text-anchor="start" x="345" y="-2214.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="345" y="-2203.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CFeatureFromBlockIf</text>
<text text-anchor="start" x="345" y="-2192.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *&amp;pCInstance, CFeatureIf</text>
<text text-anchor="start" x="345" y="-2181.5" font-family="Helvetica,sans-Serif" font-size="10.00">::Feature_t eFeatureIdx,</text>
<text text-anchor="start" x="345" y="-2170.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="345" y="-2159.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="345" y="-2148.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CFeatureFromBlockIf *&amp;pCInstance)</text>
<text text-anchor="start" x="345" y="-2137.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="345" y="-2126.5" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralCentroid(const</text>
<text text-anchor="start" x="345" y="-2115.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfMagSpec, int</text>
<text text-anchor="start" x="345" y="-2104.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="345" y="-2093.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="345" y="-2082.5" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralCrestFactor(const</text>
<text text-anchor="start" x="345" y="-2071.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfMagSpec, int iDataLength,</text>
<text text-anchor="start" x="345" y="-2060.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate=1.F)</text>
<text text-anchor="start" x="345" y="-2049.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="345" y="-2038.5" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralDecrease(const</text>
<text text-anchor="start" x="345" y="-2027.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfMagSpec, int</text>
<text text-anchor="start" x="345" y="-2016.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="345" y="-2005.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="345" y="-1994.5" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralFlatness(const</text>
<text text-anchor="start" x="345" y="-1983.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfMagSpec, int</text>
<text text-anchor="start" x="345" y="-1972.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="345" y="-1961.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="345" y="-1950.5" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralFlux(const float</text>
<text text-anchor="start" x="345" y="-1939.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfMagSpec, const float</text>
<text text-anchor="start" x="345" y="-1928.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfPrevSpec, int iDataLength,</text>
<text text-anchor="start" x="345" y="-1917.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate=1.F)</text>
<text text-anchor="start" x="345" y="-1906.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="345" y="-1895.5" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralKurtosis(const</text>
<text text-anchor="start" x="345" y="-1884.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfMagSpec, int</text>
<text text-anchor="start" x="345" y="-1873.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="345" y="-1862.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="345" y="-1851.5" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralRolloff(const</text>
<text text-anchor="start" x="345" y="-1840.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfMagSpec, int</text>
<text text-anchor="start" x="345" y="-1829.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iDataLength, float fSampleRate</text>
<text text-anchor="start" x="345" y="-1818.5" font-family="Helvetica,sans-Serif" font-size="10.00">=1.F, float fKappa=.85F)</text>
<text text-anchor="start" x="345" y="-1807.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="345" y="-1796.5" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralSkewness(const</text>
<text text-anchor="start" x="345" y="-1785.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfMagSpec, int</text>
<text text-anchor="start" x="345" y="-1774.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="345" y="-1763.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 8 more...</text>
<text text-anchor="start" x="345" y="-1752.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CFeatureFromBlockIf()</text>
<text text-anchor="start" x="345" y="-1741.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CFeatureFromBlockIf</text>
<text text-anchor="start" x="345" y="-1730.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CFeatureIf::Feature</text>
<text text-anchor="start" x="345" y="-1719.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t eFeatureIdx, int iDataLength,</text>
<text text-anchor="start" x="345" y="-1708.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate)</text>
<text text-anchor="start" x="345" y="-1697.5" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CFeatureFromBlockIf()</text>
<text text-anchor="start" x="345" y="-1686.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CFeatureFromBlockIf</text>
<text text-anchor="start" x="345" y="-1675.5" font-family="Helvetica,sans-Serif" font-size="10.00">(const CFeatureFromBlockIf</text>
<text text-anchor="start" x="345" y="-1664.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;that)</text>
<text text-anchor="start" x="345" y="-1653.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CFeatureFromBlockIf</text>
<text text-anchor="start" x="345" y="-1642.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp; operator=(const CFeature</text>
<text text-anchor="start" x="345" y="-1631.5" font-family="Helvetica,sans-Serif" font-size="10.00">FromBlockIf &amp;c)</text>
</a>
</g>
</g>
<!-- Node6&#45;&gt;Node5 -->
<g id="edge5" class="edge">
<title>Node6&#45;&gt;Node5</title>
<path fill="none" stroke="#404040" d="M431,-1624.35C431,-1578.77 431,-1534.73 431,-1495.34"/>
<polygon fill="none" stroke="#404040" points="431,-1495.26 427,-1489.26 431,-1483.26 435,-1489.26 431,-1495.26"/>
<text text-anchor="middle" x="483.5" y="-1598" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCFeatureExtractor</text>
</g>
<!-- Node7 -->
<g id="node7" class="node">
<title>Node7</title>
<g id="a_node7"><a xlink:href="a00467.xhtml" target="_top" xlink:title="class for FFT computation with windowing">
<polygon fill="white" stroke="black" points="534,-1090.5 534,-1576.5 722,-1576.5 722,-1090.5 534,-1090.5"/>
<text text-anchor="middle" x="628" y="-1564.5" font-family="Helvetica,sans-Serif" font-size="10.00">CFft</text>
<polyline fill="none" stroke="black" points="534,-1557.5 722,-1557.5 "/>
<text text-anchor="start" x="542" y="-1545.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_pfProcessBuff</text>
<text text-anchor="start" x="542" y="-1534.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_pfWindowBuff</text>
<text text-anchor="start" x="542" y="-1523.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iDataLength</text>
<text text-anchor="start" x="542" y="-1512.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iFftLength</text>
<text text-anchor="start" x="542" y="-1501.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Windowing_t m_ePrePostWindowOpt</text>
<text text-anchor="start" x="542" y="-1490.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; bool m_bIsInitialized</text>
<text text-anchor="start" x="542" y="-1479.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; static const float m_Pi</text>
<text text-anchor="start" x="542" y="-1468.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; static const float</text>
<text text-anchor="start" x="542" y="-1457.5" font-family="Helvetica,sans-Serif" font-size="10.00"> m_Pi2</text>
<polyline fill="none" stroke="black" points="534,-1450.5 722,-1450.5 "/>
<text text-anchor="start" x="542" y="-1438.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CFft()</text>
<text text-anchor="start" x="542" y="-1427.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CFft()</text>
<text text-anchor="start" x="542" y="-1416.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t init(int iBlockLength,</text>
<text text-anchor="start" x="542" y="-1405.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iZeroPadFactor=1, WindowFunction</text>
<text text-anchor="start" x="542" y="-1394.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t eWindow=kWindowHann, Windowing</text>
<text text-anchor="start" x="542" y="-1383.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t eWindowing=kPreWindow)</text>
<text text-anchor="start" x="542" y="-1372.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t reset()</text>
<text text-anchor="start" x="542" y="-1361.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t overrideWindow</text>
<text text-anchor="start" x="542" y="-1350.5" font-family="Helvetica,sans-Serif" font-size="10.00">(const float *pfNewWindow)</text>
<text text-anchor="start" x="542" y="-1339.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getWindow(float</text>
<text text-anchor="start" x="542" y="-1328.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfWindow) const</text>
<text text-anchor="start" x="542" y="-1317.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compFft(complex</text>
<text text-anchor="start" x="542" y="-1306.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t *pfSpectrum, const</text>
<text text-anchor="start" x="542" y="-1295.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfInput)</text>
<text text-anchor="start" x="542" y="-1284.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compInvFft</text>
<text text-anchor="start" x="542" y="-1273.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfOutput, const</text>
<text text-anchor="start" x="542" y="-1262.5" font-family="Helvetica,sans-Serif" font-size="10.00"> complex_t *pfSpectrum)</text>
<text text-anchor="start" x="542" y="-1251.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getMagnitude</text>
<text text-anchor="start" x="542" y="-1240.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfMag, const</text>
<text text-anchor="start" x="542" y="-1229.5" font-family="Helvetica,sans-Serif" font-size="10.00"> complex_t *pfSpectrum)</text>
<text text-anchor="start" x="542" y="-1218.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const</text>
<text text-anchor="start" x="542" y="-1207.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getPhase(float</text>
<text text-anchor="start" x="542" y="-1196.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfPhase, const complex</text>
<text text-anchor="start" x="542" y="-1185.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t *pfSpectrum) const</text>
<text text-anchor="start" x="542" y="-1174.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 7 more...</text>
<text text-anchor="start" x="542" y="-1163.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CFft(const CFft &amp;that)</text>
<text text-anchor="start" x="542" y="-1152.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CFft &amp; operator=(const</text>
<text text-anchor="start" x="542" y="-1141.5" font-family="Helvetica,sans-Serif" font-size="10.00"> CFft &amp;c)</text>
<text text-anchor="start" x="542" y="-1130.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Error_t allocMemory_()</text>
<text text-anchor="start" x="542" y="-1119.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Error_t freeMemory_()</text>
<text text-anchor="start" x="542" y="-1108.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Error_t computeWindow</text>
<text text-anchor="start" x="542" y="-1097.5" font-family="Helvetica,sans-Serif" font-size="10.00">_(WindowFunction_t eWindow)</text>
</a>
</g>
</g>
<!-- Node7&#45;&gt;Node2 -->
<g id="edge6" class="edge">
<title>Node7&#45;&gt;Node2</title>
<path fill="none" stroke="#404040" d="M611.66,-1090.38C607.1,-1022.83 602.11,-948.78 597.39,-878.89"/>
<polygon fill="none" stroke="#404040" points="597.38,-878.78 592.99,-873.06 596.58,-866.81 600.97,-872.52 597.38,-878.78"/>
<text text-anchor="middle" x="634" y="-1064" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCFft</text>
</g>
<!-- Node8 -->
<g id="node8" class="node">
<title>Node8</title>
<g id="a_node8"><a xlink:href="a00615.xhtml" target="_top" xlink:title="viterbi algorithm">
<polygon fill="white" stroke="black" points="740.5,-1134.5 740.5,-1532.5 889.5,-1532.5 889.5,-1134.5 740.5,-1134.5"/>
<text text-anchor="middle" x="815" y="-1520.5" font-family="Helvetica,sans-Serif" font-size="10.00">CViterbi</text>
<polyline fill="none" stroke="black" points="740.5,-1513.5 889.5,-1513.5 "/>
<text text-anchor="start" x="748.5" y="-1501.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float ** m_ppfProb</text>
<text text-anchor="start" x="748.5" y="-1490.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float ** m_ppfTransProb</text>
<text text-anchor="start" x="748.5" y="-1479.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_pfStart</text>
<text text-anchor="start" x="748.5" y="-1468.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float m_fOverallProb</text>
<text text-anchor="start" x="748.5" y="-1457.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; unsigned int ** m_ppiPathIdx</text>
<text text-anchor="start" x="748.5" y="-1446.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iNumStates</text>
<text text-anchor="start" x="748.5" y="-1435.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iNumObs</text>
<text text-anchor="start" x="748.5" y="-1424.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iEndState</text>
<text text-anchor="start" x="748.5" y="-1413.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; const float m_kLogMin</text>
<text text-anchor="start" x="748.5" y="-1402.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; bool m_bIsInitialized</text>
<text text-anchor="start" x="748.5" y="-1391.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; bool m_bWasProcessed</text>
<polyline fill="none" stroke="black" points="740.5,-1384.5 889.5,-1384.5 "/>
<text text-anchor="start" x="748.5" y="-1372.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CViterbi(void)</text>
<text text-anchor="start" x="748.5" y="-1361.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CViterbi(void)</text>
<text text-anchor="start" x="748.5" y="-1350.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t init(float</text>
<text text-anchor="start" x="748.5" y="-1339.5" font-family="Helvetica,sans-Serif" font-size="10.00"> **ppfPTransition, float</text>
<text text-anchor="start" x="748.5" y="-1328.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfPStart, int iNumStates,</text>
<text text-anchor="start" x="748.5" y="-1317.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iNumObservations)</text>
<text text-anchor="start" x="748.5" y="-1306.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t reset()</text>
<text text-anchor="start" x="748.5" y="-1295.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compViterbi</text>
<text text-anchor="start" x="748.5" y="-1284.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float **ppfPEmission,</text>
<text text-anchor="start" x="748.5" y="-1273.5" font-family="Helvetica,sans-Serif" font-size="10.00"> bool bUseLogLikelihood=true)</text>
<text text-anchor="start" x="748.5" y="-1262.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ float getOverallProbability</text>
<text text-anchor="start" x="748.5" y="-1251.5" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="748.5" y="-1240.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getStateSequence</text>
<text text-anchor="start" x="748.5" y="-1229.5" font-family="Helvetica,sans-Serif" font-size="10.00">(int *pistateSequence) const</text>
<text text-anchor="start" x="748.5" y="-1218.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CViterbi(const CViterbi</text>
<text text-anchor="start" x="748.5" y="-1207.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;that)</text>
<text text-anchor="start" x="748.5" y="-1196.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CViterbi &amp; operator</text>
<text text-anchor="start" x="748.5" y="-1185.5" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CViterbi &amp;c)</text>
<text text-anchor="start" x="748.5" y="-1174.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; void compProbability</text>
<text text-anchor="start" x="748.5" y="-1163.5" font-family="Helvetica,sans-Serif" font-size="10.00">_(float **ppfPEmission)</text>
<text text-anchor="start" x="748.5" y="-1152.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; void compLogLikelihood</text>
<text text-anchor="start" x="748.5" y="-1141.5" font-family="Helvetica,sans-Serif" font-size="10.00">_(float **ppfPEmission)</text>
</a>
</g>
</g>
<!-- Node8&#45;&gt;Node2 -->
<g id="edge7" class="edge">
<title>Node8&#45;&gt;Node2</title>
<path fill="none" stroke="#404040" d="M751.64,-1134.41C723.12,-1045.22 689.1,-938.87 658.77,-844.04"/>
<polygon fill="none" stroke="#404040" points="658.75,-843.96 653.11,-839.47 655.09,-832.53 660.73,-837.03 658.75,-843.96"/>
<text text-anchor="middle" x="761.5" y="-1064" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCViterbi</text>
</g>
<!-- Node9 -->
<g id="node9" class="node">
<title>Node9</title>
<g id="a_node9"><a xlink:href="a00439.xhtml" target="_top" xlink:title="open, read, and write audio files">
<polygon fill="white" stroke="black" points="811,-138.5 811,-1042.5 973,-1042.5 973,-138.5 811,-138.5"/>
<text text-anchor="middle" x="892" y="-1030.5" font-family="Helvetica,sans-Serif" font-size="10.00">CAudioFileIf</text>
<polyline fill="none" stroke="black" points="811,-1023.5 973,-1023.5 "/>
<text text-anchor="start" x="819" y="-1011.5" font-family="Helvetica,sans-Serif" font-size="10.00"># static const long long</text>
<text text-anchor="start" x="819" y="-1000.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int m_kiDefBlockLength</text>
<text text-anchor="start" x="819" y="-989.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; FileIoType_t m_eIoType</text>
<text text-anchor="start" x="819" y="-978.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; bool m_bWithClipping</text>
<text text-anchor="start" x="819" y="-967.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; bool m_bIsInitialized</text>
<text text-anchor="start" x="819" y="-956.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iNumBytesPerSample</text>
<polyline fill="none" stroke="black" points="811,-949.5 973,-949.5 "/>
<text text-anchor="start" x="819" y="-937.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Error_t reset</text>
<text text-anchor="start" x="819" y="-926.5" font-family="Helvetica,sans-Serif" font-size="10.00">(bool bFreeMemory=false)</text>
<text text-anchor="start" x="819" y="-915.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Error_t openFile</text>
<text text-anchor="start" x="819" y="-904.5" font-family="Helvetica,sans-Serif" font-size="10.00">(std::string cAudioFileName,</text>
<text text-anchor="start" x="819" y="-893.5" font-family="Helvetica,sans-Serif" font-size="10.00"> FileIoType_t eIoType, FileSpec</text>
<text text-anchor="start" x="819" y="-882.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t const *psFileSpec=0)=0</text>
<text text-anchor="start" x="819" y="-871.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Error_t closeFile()=0</text>
<text text-anchor="start" x="819" y="-860.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Error_t readData</text>
<text text-anchor="start" x="819" y="-849.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float **ppfAudioData,</text>
<text text-anchor="start" x="819" y="-838.5" font-family="Helvetica,sans-Serif" font-size="10.00"> long long int &amp;iNumFrames)</text>
<text text-anchor="start" x="819" y="-827.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Error_t writeData</text>
<text text-anchor="start" x="819" y="-816.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float **ppfAudioData,</text>
<text text-anchor="start" x="819" y="-805.5" font-family="Helvetica,sans-Serif" font-size="10.00"> long long int iNumFrames)</text>
<text text-anchor="start" x="819" y="-794.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getFileSpec</text>
<text text-anchor="start" x="819" y="-783.5" font-family="Helvetica,sans-Serif" font-size="10.00">(FileSpec_t &amp;sFileSpec)</text>
<text text-anchor="start" x="819" y="-772.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Error_t setPosition</text>
<text text-anchor="start" x="819" y="-761.5" font-family="Helvetica,sans-Serif" font-size="10.00">(long long iFrame=0)</text>
<text text-anchor="start" x="819" y="-750.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t setPosition</text>
<text text-anchor="start" x="819" y="-739.5" font-family="Helvetica,sans-Serif" font-size="10.00">(double dTimeInS=.0)</text>
<text text-anchor="start" x="819" y="-728.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t setClippingEnabled</text>
<text text-anchor="start" x="819" y="-717.5" font-family="Helvetica,sans-Serif" font-size="10.00">(bool bisEnabled=true)</text>
<text text-anchor="start" x="819" y="-706.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ bool isClippingEnabled()</text>
<text text-anchor="start" x="819" y="-695.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 7 more...</text>
<text text-anchor="start" x="819" y="-684.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="819" y="-673.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CAudioFileIf *&amp;pCInstance)</text>
<text text-anchor="start" x="819" y="-662.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="819" y="-651.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CAudioFileIf *&amp;pCInstance)</text>
<text text-anchor="start" x="819" y="-640.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CAudioFileIf()</text>
<text text-anchor="start" x="819" y="-629.5" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CAudioFileIf()</text>
<text text-anchor="start" x="819" y="-618.5" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual Error_t freeMemory_()</text>
<text text-anchor="start" x="819" y="-607.5" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual Error_t allocMemory_()</text>
<text text-anchor="start" x="819" y="-596.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t setInitialized</text>
<text text-anchor="start" x="819" y="-585.5" font-family="Helvetica,sans-Serif" font-size="10.00">_(bool bInitialized=true)</text>
<text text-anchor="start" x="819" y="-574.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t setIoType_</text>
<text text-anchor="start" x="819" y="-563.5" font-family="Helvetica,sans-Serif" font-size="10.00">(FileIoType_t eIoType)</text>
<text text-anchor="start" x="819" y="-552.5" font-family="Helvetica,sans-Serif" font-size="10.00"># FileIoType_t getIoType</text>
<text text-anchor="start" x="819" y="-541.5" font-family="Helvetica,sans-Serif" font-size="10.00">_() const</text>
<text text-anchor="start" x="819" y="-530.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t setFileSpec</text>
<text text-anchor="start" x="819" y="-519.5" font-family="Helvetica,sans-Serif" font-size="10.00">_(const FileSpec_t *pFileSpec)</text>
<text text-anchor="start" x="819" y="-508.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int getNumChannels</text>
<text text-anchor="start" x="819" y="-497.5" font-family="Helvetica,sans-Serif" font-size="10.00">_() const</text>
<text text-anchor="start" x="819" y="-486.5" font-family="Helvetica,sans-Serif" font-size="10.00"># long long convFrames2Bytes</text>
<text text-anchor="start" x="819" y="-475.5" font-family="Helvetica,sans-Serif" font-size="10.00">_(long long iNumFrames)</text>
<text text-anchor="start" x="819" y="-464.5" font-family="Helvetica,sans-Serif" font-size="10.00"># long long convBytes2Frames</text>
<text text-anchor="start" x="819" y="-453.5" font-family="Helvetica,sans-Serif" font-size="10.00">_(long long iNumFrames)</text>
<text text-anchor="start" x="819" y="-442.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t setNumBytesPerSample</text>
<text text-anchor="start" x="819" y="-431.5" font-family="Helvetica,sans-Serif" font-size="10.00">_(int iNumBytes)</text>
<text text-anchor="start" x="819" y="-420.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int getNumBytesPerSample</text>
<text text-anchor="start" x="819" y="-409.5" font-family="Helvetica,sans-Serif" font-size="10.00">_() const</text>
<text text-anchor="start" x="819" y="-398.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int getNumBitsPerSample</text>
<text text-anchor="start" x="819" y="-387.5" font-family="Helvetica,sans-Serif" font-size="10.00">_() const</text>
<text text-anchor="start" x="819" y="-376.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float clip2Range_(float</text>
<text text-anchor="start" x="819" y="-365.5" font-family="Helvetica,sans-Serif" font-size="10.00"> fSample2Clip, float fMin,</text>
<text text-anchor="start" x="819" y="-354.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float fMax)</text>
<text text-anchor="start" x="819" y="-343.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CAudioFileIf(const</text>
<text text-anchor="start" x="819" y="-332.5" font-family="Helvetica,sans-Serif" font-size="10.00"> CAudioFileIf &amp;that)</text>
<text text-anchor="start" x="819" y="-321.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CAudioFileIf &amp; operator</text>
<text text-anchor="start" x="819" y="-310.5" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CAudioFileIf &amp;c)</text>
<text text-anchor="start" x="819" y="-299.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; virtual Error_t initDefaults_()</text>
<text text-anchor="start" x="819" y="-288.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; virtual long long int</text>
<text text-anchor="start" x="819" y="-277.5" font-family="Helvetica,sans-Serif" font-size="10.00"> readDataIntern_(float</text>
<text text-anchor="start" x="819" y="-266.5" font-family="Helvetica,sans-Serif" font-size="10.00"> **ppfAudioData, long long</text>
<text text-anchor="start" x="819" y="-255.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iLength)=0</text>
<text text-anchor="start" x="819" y="-244.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; virtual long long int</text>
<text text-anchor="start" x="819" y="-233.5" font-family="Helvetica,sans-Serif" font-size="10.00"> writeDataIntern_(float</text>
<text text-anchor="start" x="819" y="-222.5" font-family="Helvetica,sans-Serif" font-size="10.00"> **ppfAudioData, long long</text>
<text text-anchor="start" x="819" y="-211.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iLength)=0</text>
<text text-anchor="start" x="819" y="-200.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; virtual long long getLength</text>
<text text-anchor="start" x="819" y="-189.5" font-family="Helvetica,sans-Serif" font-size="10.00">Intern_()=0</text>
<text text-anchor="start" x="819" y="-178.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; virtual long long getPosition</text>
<text text-anchor="start" x="819" y="-167.5" font-family="Helvetica,sans-Serif" font-size="10.00">Intern_()=0</text>
<text text-anchor="start" x="819" y="-156.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; virtual Error_t setPosition</text>
<text text-anchor="start" x="819" y="-145.5" font-family="Helvetica,sans-Serif" font-size="10.00">Intern_(long long iFrame)=0</text>
</a>
</g>
</g>
<!-- Node9&#45;&gt;Node1 -->
<g id="edge8" class="edge">
<title>Node9&#45;&gt;Node1</title>
<path fill="none" stroke="#404040" d="M810.85,-395.38C767.36,-291.34 716.95,-170.76 688.23,-102.07"/>
<polygon fill="none" stroke="#404040" points="688.1,-101.76 682.09,-97.76 683.47,-90.68 689.48,-94.68 688.1,-101.76"/>
<text text-anchor="middle" x="730" y="-112" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;m_pCAudioFile</text>
</g>
<!-- Node10 -->
<g id="node10" class="node">
<title>Node10</title>
<g id="a_node10"><a xlink:href="a00443.xhtml" target="_top" xlink:title=" ">
<polygon fill="white" stroke="black" points="907.5,-1288.5 907.5,-1378.5 1056.5,-1378.5 1056.5,-1288.5 907.5,-1288.5"/>
<text text-anchor="middle" x="982" y="-1366.5" font-family="Helvetica,sans-Serif" font-size="10.00">CAudioFileIf::FileSpec_t</text>
<polyline fill="none" stroke="black" points="907.5,-1359.5 1056.5,-1359.5 "/>
<text text-anchor="start" x="915.5" y="-1347.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FileFormat_t eFormat</text>
<text text-anchor="start" x="915.5" y="-1336.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ BitStream_t eBitStreamType</text>
<text text-anchor="start" x="915.5" y="-1325.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ int iNumChannels</text>
<text text-anchor="start" x="915.5" y="-1314.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ float fSampleRateInHz</text>
<polyline fill="none" stroke="black" points="907.5,-1307.5 1056.5,-1307.5 "/>
<text text-anchor="middle" x="982" y="-1295.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
</a>
</g>
</g>
<!-- Node10&#45;&gt;Node9 -->
<g id="edge9" class="edge">
<title>Node10&#45;&gt;Node9</title>
<path fill="none" stroke="#404040" d="M976.64,-1288.37C970.55,-1238.27 959.94,-1150.91 948.25,-1054.63"/>
<polygon fill="none" stroke="#404040" points="948.23,-1054.45 943.53,-1048.97 946.78,-1042.54 951.48,-1048.01 948.23,-1054.45"/>
<text text-anchor="middle" x="988" y="-1064" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;m_CurrFileSpec</text>
</g>
</g>
</svg>
        <g id="navigator" transform="translate(0 0)" fill="#404254">
                <rect fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width=".5" x="0" y="0" width="60" height="60"/>
                <use id="zoomplus" xlink:href="#zoomPlus" x="17" y="9" onmousedown="handleZoom(evt,'in')"/>
                <use id="zoomminus" xlink:href="#zoomMin" x="42" y="9" onmousedown="handleZoom(evt,'out')"/>
                <use id="reset" xlink:href="#resetDef" x="30" y="36" onmousedown="handleReset()"/>
                <g id="arrowUp" xlink:href="#dirArrow" transform="translate(30 24)" onmousedown="handlePan(0,-1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowUp.mouseover" end="arrowUp.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowRight" xlink:href="#dirArrow" transform="rotate(90) translate(36 -43)" onmousedown="handlePan(1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowRight.mouseover" end="arrowRight.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowDown" xlink:href="#dirArrow" transform="rotate(180) translate(-30 -48)" onmousedown="handlePan(0,1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowDown.mouseover" end="arrowDown.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowLeft" xlink:href="#dirArrow" transform="rotate(270) translate(-36 17)" onmousedown="handlePan(-1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowLeft.mouseover" end="arrowLeft.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
        </g>
        <svg viewBox="0 0 15 15" width="100%" height="30px" preserveAspectRatio="xMaxYMin meet">
         <g id="arrow_out" transform="scale(0.3 0.3)">
          <a xlink:href="a00305_org.svg" target="_base">
           <rect id="button" ry="5" rx="5" y="6" x="6" height="38" width="38"
                fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width="1.0"/>
           <path id="arrow"
             d="M 11.500037,31.436501 C 11.940474,20.09759 22.043105,11.32322 32.158766,21.979434 L 37.068811,17.246167 C 37.068811,17.246167 37.088388,32 37.088388,32 L 22.160133,31.978069 C 22.160133,31.978069 26.997745,27.140456 26.997745,27.140456 C 18.528582,18.264221 13.291696,25.230495 11.500037,31.436501 z"
             style="fill:#404040;"/>
          </a>
         </g>
        </svg>
</svg>
