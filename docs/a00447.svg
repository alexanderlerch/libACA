<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 4.0.0 (20220602.1335)
 -->
<!-- Title: CChordFromBlockIf Pages: 1 -->
<!--zoomable 1216 -->
<svg id="main" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" onload="init(evt)">
<style type="text/css"><![CDATA[
.edge:hover path { stroke: red; }
.edge:hover polygon { stroke: red; fill: red; }
]]></style>
<script type="text/javascript"><![CDATA[
var edges = document.getElementsByTagName('g');
if (edges && edges.length) {
  for (var i=0;i<edges.length;i++) {
    if (edges[i].id.substr(0,4)=='edge') {
      edges[i].setAttribute('class','edge');
    }
  }
}
]]></script>
        <defs>
                <circle id="rim" cx="0" cy="0" r="7"/>
                <circle id="rim2" cx="0" cy="0" r="3.5"/>
                <g id="zoomPlus">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomplus.mouseover" end="zoomplus.mouseout"/>
                        </use>
                        <path d="M-4,0h8M0,-4v8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="zoomMin">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomminus.mouseover" end="zoomminus.mouseout"/>
                        </use>
                        <path d="M-4,0h8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="dirArrow">
                        <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
               <g id="resetDef">
                       <use xlink:href="#rim2" fill="#404040">
                               <set attributeName="fill" to="#808080" begin="reset.mouseover" end="reset.mouseout"/>
                       </use>
               </g>
        </defs>

<script type="text/javascript">
var viewWidth = 207;
var viewHeight = 1216;
var sectionId = 'dynsection-0';
</script>
<script xlink:href="svgpan.js"/>
<svg id="graph" class="graph">
<g id="viewport">
<title>CChordFromBlockIf</title>
<polygon fill="white" stroke="transparent" points="-4,4 -4,-1212 203,-1212 203,4 -4,4"/>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="class for computation of a chord from a magnitude spectrum">
<polygon fill="#bfbfbf" stroke="black" points="9,-0.5 9,-299.5 179,-299.5 179,-0.5 9,-0.5"/>
<text text-anchor="middle" x="94" y="-287.5" font-family="Helvetica,sans-Serif" font-size="10.00">CChordFromBlockIf</text>
<polyline fill="none" stroke="black" points="9,-280.5 179,-280.5 "/>
<text text-anchor="start" x="17" y="-268.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iMagSpecLength</text>
<text text-anchor="start" x="17" y="-257.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float m_fSampleRate</text>
<text text-anchor="start" x="17" y="-246.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float * m_pfPitchChroma</text>
<text text-anchor="start" x="17" y="-235.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float ** m_ppfTemplateMatrix</text>
<polyline fill="none" stroke="black" points="9,-228.5 179,-228.5 "/>
<text text-anchor="start" x="17" y="-216.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Error_t compChord</text>
<text text-anchor="start" x="17" y="-205.5" font-family="Helvetica,sans-Serif" font-size="10.00">Prob(float *pfChordProb,</text>
<text text-anchor="start" x="17" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const float *pfInput)</text>
<text text-anchor="start" x="17" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="17" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CChordFromBlockIf *&amp;pCInstance,</text>
<text text-anchor="start" x="17" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iMagSpecLength, float</text>
<text text-anchor="start" x="17" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00"> fSampleRate=1.F)</text>
<text text-anchor="start" x="17" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="17" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CChordFromBlockIf *&amp;pCInstance)</text>
<text text-anchor="start" x="17" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CChordFromBlockIf</text>
<text text-anchor="start" x="17" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00">(int iMagSpecLength,</text>
<text text-anchor="start" x="17" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate)</text>
<text text-anchor="start" x="17" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CChordFromBlockIf()</text>
<text text-anchor="start" x="17" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CChordFromBlockIf</text>
<text text-anchor="start" x="17" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00">(const CChordFromBlockIf</text>
<text text-anchor="start" x="17" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;that)</text>
<text text-anchor="start" x="17" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CChordFromBlockIf &amp;</text>
<text text-anchor="start" x="17" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00"> operator=(const CChordFrom</text>
<text text-anchor="start" x="17" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">BlockIf &amp;c)</text>
<text text-anchor="start" x="17" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00"># void genTemplateMatrix_()</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="a00457.xhtml" target="_top" xlink:title="class for computation of a feature from a block of data (e.g., time or magnitude spectrum)">
<polygon fill="white" stroke="black" points="0,-347.5 0,-1207.5 188,-1207.5 188,-347.5 0,-347.5"/>
<text text-anchor="middle" x="94" y="-1195.5" font-family="Helvetica,sans-Serif" font-size="10.00">CFeatureFromBlockIf</text>
<polyline fill="none" stroke="black" points="0,-1188.5 188,-1188.5 "/>
<text text-anchor="start" x="8" y="-1176.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static const float</text>
<text text-anchor="start" x="8" y="-1165.5" font-family="Helvetica,sans-Serif" font-size="10.00"> m_kfFloatThresh</text>
<text text-anchor="start" x="8" y="-1154.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CFeatureIf::Feature</text>
<text text-anchor="start" x="8" y="-1143.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t m_eFeatureIdx</text>
<text text-anchor="start" x="8" y="-1132.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iDataLength</text>
<text text-anchor="start" x="8" y="-1121.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float m_fSampleRate</text>
<text text-anchor="start" x="8" y="-1110.5" font-family="Helvetica,sans-Serif" font-size="10.00"># const std::map&lt; CFeature</text>
<text text-anchor="start" x="8" y="-1099.5" font-family="Helvetica,sans-Serif" font-size="10.00">If::Feature_t, std::function</text>
<text text-anchor="start" x="8" y="-1088.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; float(const float *, int,</text>
<text text-anchor="start" x="8" y="-1077.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float)&gt; &gt; m_DispatchMap</text>
<polyline fill="none" stroke="black" points="0,-1070.5 188,-1070.5 "/>
<text text-anchor="start" x="8" y="-1058.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual int getFeatureDimensions</text>
<text text-anchor="start" x="8" y="-1047.5" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="8" y="-1036.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CFeatureIf::Feature</text>
<text text-anchor="start" x="8" y="-1025.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t getFeatureIdx() const</text>
<text text-anchor="start" x="8" y="-1014.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Error_t compFeature</text>
<text text-anchor="start" x="8" y="-1003.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfFeature, const</text>
<text text-anchor="start" x="8" y="-992.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfInput)</text>
<text text-anchor="start" x="8" y="-981.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual bool hasAdditional</text>
<text text-anchor="start" x="8" y="-970.5" font-family="Helvetica,sans-Serif" font-size="10.00">Param() const</text>
<text text-anchor="start" x="8" y="-959.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Error_t setAdditional</text>
<text text-anchor="start" x="8" y="-948.5" font-family="Helvetica,sans-Serif" font-size="10.00">Param(float fParamValue)</text>
<text text-anchor="start" x="8" y="-937.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="8" y="-926.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CFeatureFromBlockIf</text>
<text text-anchor="start" x="8" y="-915.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *&amp;pCInstance, CFeatureIf</text>
<text text-anchor="start" x="8" y="-904.5" font-family="Helvetica,sans-Serif" font-size="10.00">::Feature_t eFeatureIdx,</text>
<text text-anchor="start" x="8" y="-893.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="8" y="-882.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="8" y="-871.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CFeatureFromBlockIf *&amp;pCInstance)</text>
<text text-anchor="start" x="8" y="-860.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="8" y="-849.5" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralCentroid(const</text>
<text text-anchor="start" x="8" y="-838.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfMagSpec, int</text>
<text text-anchor="start" x="8" y="-827.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="8" y="-816.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="8" y="-805.5" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralCrestFactor(const</text>
<text text-anchor="start" x="8" y="-794.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfMagSpec, int iDataLength,</text>
<text text-anchor="start" x="8" y="-783.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate=1.F)</text>
<text text-anchor="start" x="8" y="-772.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="8" y="-761.5" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralDecrease(const</text>
<text text-anchor="start" x="8" y="-750.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfMagSpec, int</text>
<text text-anchor="start" x="8" y="-739.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="8" y="-728.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="8" y="-717.5" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralFlatness(const</text>
<text text-anchor="start" x="8" y="-706.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfMagSpec, int</text>
<text text-anchor="start" x="8" y="-695.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="8" y="-684.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="8" y="-673.5" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralFlux(const float</text>
<text text-anchor="start" x="8" y="-662.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfMagSpec, const float</text>
<text text-anchor="start" x="8" y="-651.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfPrevSpec, int iDataLength,</text>
<text text-anchor="start" x="8" y="-640.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate=1.F)</text>
<text text-anchor="start" x="8" y="-629.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="8" y="-618.5" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralKurtosis(const</text>
<text text-anchor="start" x="8" y="-607.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfMagSpec, int</text>
<text text-anchor="start" x="8" y="-596.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="8" y="-585.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="8" y="-574.5" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralRolloff(const</text>
<text text-anchor="start" x="8" y="-563.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfMagSpec, int</text>
<text text-anchor="start" x="8" y="-552.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iDataLength, float fSampleRate</text>
<text text-anchor="start" x="8" y="-541.5" font-family="Helvetica,sans-Serif" font-size="10.00">=1.F, float fKappa=.85F)</text>
<text text-anchor="start" x="8" y="-530.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compFeature</text>
<text text-anchor="start" x="8" y="-519.5" font-family="Helvetica,sans-Serif" font-size="10.00">SpectralSkewness(const</text>
<text text-anchor="start" x="8" y="-508.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfMagSpec, int</text>
<text text-anchor="start" x="8" y="-497.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="8" y="-486.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 8 more...</text>
<text text-anchor="start" x="8" y="-475.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CFeatureFromBlockIf()</text>
<text text-anchor="start" x="8" y="-464.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CFeatureFromBlockIf</text>
<text text-anchor="start" x="8" y="-453.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CFeatureIf::Feature</text>
<text text-anchor="start" x="8" y="-442.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t eFeatureIdx, int iDataLength,</text>
<text text-anchor="start" x="8" y="-431.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate)</text>
<text text-anchor="start" x="8" y="-420.5" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CFeatureFromBlockIf()</text>
<text text-anchor="start" x="8" y="-409.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CFeatureFromBlockIf</text>
<text text-anchor="start" x="8" y="-398.5" font-family="Helvetica,sans-Serif" font-size="10.00">(const CFeatureFromBlockIf</text>
<text text-anchor="start" x="8" y="-387.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;that)</text>
<text text-anchor="start" x="8" y="-376.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CFeatureFromBlockIf</text>
<text text-anchor="start" x="8" y="-365.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp; operator=(const CFeature</text>
<text text-anchor="start" x="8" y="-354.5" font-family="Helvetica,sans-Serif" font-size="10.00">FromBlockIf &amp;c)</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="#404040" d="M94,-347.2C94,-335.14 94,-323.36 94,-311.93"/>
<polygon fill="none" stroke="#404040" points="94,-311.67 90,-305.67 94,-299.67 98,-305.67 94,-311.67"/>
<text text-anchor="middle" x="146.5" y="-321" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCFeatureExtractor</text>
</g>
</g>
</svg>
        <g id="navigator" transform="translate(0 0)" fill="#404254">
                <rect fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width=".5" x="0" y="0" width="60" height="60"/>
                <use id="zoomplus" xlink:href="#zoomPlus" x="17" y="9" onmousedown="handleZoom(evt,'in')"/>
                <use id="zoomminus" xlink:href="#zoomMin" x="42" y="9" onmousedown="handleZoom(evt,'out')"/>
                <use id="reset" xlink:href="#resetDef" x="30" y="36" onmousedown="handleReset()"/>
                <g id="arrowUp" xlink:href="#dirArrow" transform="translate(30 24)" onmousedown="handlePan(0,-1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowUp.mouseover" end="arrowUp.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowRight" xlink:href="#dirArrow" transform="rotate(90) translate(36 -43)" onmousedown="handlePan(1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowRight.mouseover" end="arrowRight.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowDown" xlink:href="#dirArrow" transform="rotate(180) translate(-30 -48)" onmousedown="handlePan(0,1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowDown.mouseover" end="arrowDown.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowLeft" xlink:href="#dirArrow" transform="rotate(270) translate(-36 17)" onmousedown="handlePan(-1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowLeft.mouseover" end="arrowLeft.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
        </g>
        <svg viewBox="0 0 15 15" width="100%" height="30px" preserveAspectRatio="xMaxYMin meet">
         <g id="arrow_out" transform="scale(0.3 0.3)">
          <a xlink:href="a00447_org.svg" target="_base">
           <rect id="button" ry="5" rx="5" y="6" x="6" height="38" width="38"
                fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width="1.0"/>
           <path id="arrow"
             d="M 11.500037,31.436501 C 11.940474,20.09759 22.043105,11.32322 32.158766,21.979434 L 37.068811,17.246167 C 37.068811,17.246167 37.088388,32 37.088388,32 L 22.160133,31.978069 C 22.160133,31.978069 26.997745,27.140456 26.997745,27.140456 C 18.528582,18.264221 13.291696,25.230495 11.500037,31.436501 z"
             style="fill:#404040;"/>
          </a>
         </g>
        </svg>
</svg>
