<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 6.0.1 (20220911.1526)
 -->
<!-- Title: CSpectrogramFromVector Pages: 1 -->
<!--zoomable 1359 -->
<svg id="main" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" onload="init(evt)">
<style type="text/css"><![CDATA[
.edge:hover path { stroke: red; }
.edge:hover polygon { stroke: red; fill: red; }
]]></style>
<script type="text/javascript"><![CDATA[
var edges = document.getElementsByTagName('g');
if (edges && edges.length) {
  for (var i=0;i<edges.length;i++) {
    if (edges[i].id.substr(0,4)=='edge') {
      edges[i].setAttribute('class','edge');
    }
  }
}
]]></script>
        <defs>
                <circle id="rim" cx="0" cy="0" r="7"/>
                <circle id="rim2" cx="0" cy="0" r="3.5"/>
                <g id="zoomPlus">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomplus.mouseover" end="zoomplus.mouseout"/>
                        </use>
                        <path d="M-4,0h8M0,-4v8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="zoomMin">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomminus.mouseover" end="zoomminus.mouseout"/>
                        </use>
                        <path d="M-4,0h8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="dirArrow">
                        <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
               <g id="resetDef">
                       <use xlink:href="#rim2" fill="#404040">
                               <set attributeName="fill" to="#808080" begin="reset.mouseover" end="reset.mouseout"/>
                       </use>
               </g>
        </defs>

<script type="text/javascript">
var viewWidth = 548;
var viewHeight = 1359;
var sectionId = 'dynsection-1';
</script>
<script xlink:href="svgpan.js"/>
<svg id="graph" class="graph">
<g id="viewport">
<title>CSpectrogramFromVector</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="class for computation of the spectrogram from a vector of audio data">
<polygon fill="#999999" stroke="#666666" points="335,-118 172,-118 172,0 335,0 335,-118"/>
<text text-anchor="middle" x="253.5" y="-106" font-family="Helvetica,sans-Serif" font-size="10.00">{CSpectrogramFromVector</text>
<text text-anchor="start" x="180" y="-95" font-family="Helvetica,sans-Serif" font-size="10.00">||+ &#160;CSpectrogramFromVector</text>
<text text-anchor="start" x="180" y="-84" font-family="Helvetica,sans-Serif" font-size="10.00">(const float *pfAudio,</text>
<text text-anchor="start" x="180" y="-73" font-family="Helvetica,sans-Serif" font-size="10.00"> long long iAudioLength,</text>
<text text-anchor="start" x="180" y="-62" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate, int</text>
<text text-anchor="start" x="180" y="-51" font-family="Helvetica,sans-Serif" font-size="10.00"> iBlockLength, int iHopLength,</text>
<text text-anchor="start" x="180" y="-40" font-family="Helvetica,sans-Serif" font-size="10.00"> bool bNormalize, float *pfWindow)</text>
<text text-anchor="start" x="180" y="-29" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CSpectrogramFrom</text>
<text text-anchor="start" x="180" y="-18" font-family="Helvetica,sans-Serif" font-size="10.00">Vector()</text>
<text text-anchor="middle" x="253.5" y="-7" font-family="Helvetica,sans-Serif" font-size="10.00">}</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="a00530.xhtml" target="_top" xlink:title="class for computation of a magnitude spectrogram from either a file or a vector">
<polygon fill="white" stroke="#666666" points="367,-823 140,-823 140,-155 367,-155 367,-823"/>
<text text-anchor="middle" x="253.5" y="-811" font-family="Helvetica,sans-Serif" font-size="10.00">{CSpectrogramIf</text>
<text text-anchor="start" x="148" y="-800" font-family="Helvetica,sans-Serif" font-size="10.00">|# int m_iBlockLength</text>
<text text-anchor="start" x="148" y="-789" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iHopLength</text>
<text text-anchor="start" x="148" y="-778" font-family="Helvetica,sans-Serif" font-size="10.00"># float m_fSampleRate</text>
<text text-anchor="start" x="148" y="-767" font-family="Helvetica,sans-Serif" font-size="10.00"># float * m_pfSpectrum</text>
<text text-anchor="start" x="148" y="-756" font-family="Helvetica,sans-Serif" font-size="10.00"># float * m_pfProcBuff</text>
<text text-anchor="start" x="148" y="-745" font-family="Helvetica,sans-Serif" font-size="10.00"># float ** m_ppfHMel</text>
<text text-anchor="start" x="148" y="-734" font-family="Helvetica,sans-Serif" font-size="10.00"># float * m_pffcMel</text>
<text text-anchor="start" x="148" y="-723" font-family="Helvetica,sans-Serif" font-size="10.00"># bool m_bIsInitialized</text>
<text text-anchor="start" x="148" y="-712" font-family="Helvetica,sans-Serif" font-size="10.00">|+ Error_t getSpectrogramDimensions</text>
<text text-anchor="start" x="148" y="-701" font-family="Helvetica,sans-Serif" font-size="10.00">(int &amp;iNumRows, int &amp;iNumCols) const</text>
<text text-anchor="start" x="148" y="-690" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getSpectrogramAxis</text>
<text text-anchor="start" x="148" y="-679" font-family="Helvetica,sans-Serif" font-size="10.00">Vectors(float *pfAxisTicks,</text>
<text text-anchor="start" x="148" y="-668" font-family="Helvetica,sans-Serif" font-size="10.00"> enum AxisLabel_t eAxisLabel) const</text>
<text text-anchor="start" x="148" y="-657" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compSpectrogram</text>
<text text-anchor="start" x="148" y="-646" font-family="Helvetica,sans-Serif" font-size="10.00">(float **ppfSpectrogram)</text>
<text text-anchor="start" x="148" y="-635" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getMelSpectrogram</text>
<text text-anchor="start" x="148" y="-624" font-family="Helvetica,sans-Serif" font-size="10.00">Dimensions(int &amp;iNumRows,</text>
<text text-anchor="start" x="148" y="-613" font-family="Helvetica,sans-Serif" font-size="10.00"> int &amp;iNumCols, const MelSpectrogram</text>
<text text-anchor="start" x="148" y="-602" font-family="Helvetica,sans-Serif" font-size="10.00">Config_t *pMelSpecConfig) const</text>
<text text-anchor="start" x="148" y="-591" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getMelSpectrogram</text>
<text text-anchor="start" x="148" y="-580" font-family="Helvetica,sans-Serif" font-size="10.00">AxisVectors(float *pfAxisTicks,</text>
<text text-anchor="start" x="148" y="-569" font-family="Helvetica,sans-Serif" font-size="10.00"> enum AxisLabel_t eAxisLabel,</text>
<text text-anchor="start" x="148" y="-558" font-family="Helvetica,sans-Serif" font-size="10.00"> const MelSpectrogramConfig_t</text>
<text text-anchor="start" x="148" y="-547" font-family="Helvetica,sans-Serif" font-size="10.00"> *pMelSpecConfig)</text>
<text text-anchor="start" x="148" y="-536" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compMelSpectrogram</text>
<text text-anchor="start" x="148" y="-525" font-family="Helvetica,sans-Serif" font-size="10.00">(float **ppfMelSpectrogram,</text>
<text text-anchor="start" x="148" y="-514" font-family="Helvetica,sans-Serif" font-size="10.00"> const MelSpectrogramConfig</text>
<text text-anchor="start" x="148" y="-503" font-family="Helvetica,sans-Serif" font-size="10.00">_t *pMelSpecConfig)</text>
<text text-anchor="start" x="148" y="-492" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="148" y="-481" font-family="Helvetica,sans-Serif" font-size="10.00">(CSpectrogramIf *&amp;pCInstance,</text>
<text text-anchor="start" x="148" y="-470" font-family="Helvetica,sans-Serif" font-size="10.00"> const std::string &amp;strAudioFilePath,</text>
<text text-anchor="start" x="148" y="-459" font-family="Helvetica,sans-Serif" font-size="10.00"> int iBlockLength=2048, int iHopLength</text>
<text text-anchor="start" x="148" y="-448" font-family="Helvetica,sans-Serif" font-size="10.00">=1024, bool bNormalize=true, float *pfWindow=0)</text>
<text text-anchor="start" x="148" y="-437" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="148" y="-426" font-family="Helvetica,sans-Serif" font-size="10.00">(CSpectrogramIf *&amp;pCInstance,</text>
<text text-anchor="start" x="148" y="-415" font-family="Helvetica,sans-Serif" font-size="10.00"> const float *pfAudio, long</text>
<text text-anchor="start" x="148" y="-404" font-family="Helvetica,sans-Serif" font-size="10.00"> long iNumSamples, float fSampleRate,</text>
<text text-anchor="start" x="148" y="-393" font-family="Helvetica,sans-Serif" font-size="10.00"> int iBlockLength=2048, int iHopLength</text>
<text text-anchor="start" x="148" y="-382" font-family="Helvetica,sans-Serif" font-size="10.00">=1024, bool bNormalize=true, float *pfWindow=0)</text>
<text text-anchor="start" x="148" y="-371" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="148" y="-360" font-family="Helvetica,sans-Serif" font-size="10.00">(CSpectrogramIf *&amp;pCInstance)</text>
<text text-anchor="start" x="148" y="-349" font-family="Helvetica,sans-Serif" font-size="10.00"># &#160;CSpectrogramIf()</text>
<text text-anchor="start" x="148" y="-338" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CSpectrogramIf()</text>
<text text-anchor="start" x="148" y="-327" font-family="Helvetica,sans-Serif" font-size="10.00"># &#160;CSpectrogramIf(const</text>
<text text-anchor="start" x="148" y="-316" font-family="Helvetica,sans-Serif" font-size="10.00"> CSpectrogramIf &amp;that)</text>
<text text-anchor="start" x="148" y="-305" font-family="Helvetica,sans-Serif" font-size="10.00"># CSpectrogramIf &amp; operator</text>
<text text-anchor="start" x="148" y="-294" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CSpectrogramIf &amp;c)</text>
<text text-anchor="start" x="148" y="-283" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t reset_()</text>
<text text-anchor="start" x="148" y="-272" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t init_(float</text>
<text text-anchor="start" x="148" y="-261" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfWindow)</text>
<text text-anchor="start" x="148" y="-250" font-family="Helvetica,sans-Serif" font-size="10.00"># void computeMagSpectrum</text>
<text text-anchor="start" x="148" y="-239" font-family="Helvetica,sans-Serif" font-size="10.00">_(int iLength)</text>
<text text-anchor="start" x="148" y="-228" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t generateMelFb</text>
<text text-anchor="start" x="148" y="-217" font-family="Helvetica,sans-Serif" font-size="10.00">_(const MelSpectrogramConfig</text>
<text text-anchor="start" x="148" y="-206" font-family="Helvetica,sans-Serif" font-size="10.00">_t *pMelSpecConfig)</text>
<text text-anchor="start" x="148" y="-195" font-family="Helvetica,sans-Serif" font-size="10.00"># void destroyMelFb_</text>
<text text-anchor="start" x="148" y="-184" font-family="Helvetica,sans-Serif" font-size="10.00">(const MelSpectrogramConfig</text>
<text text-anchor="start" x="148" y="-173" font-family="Helvetica,sans-Serif" font-size="10.00">_t *pMelSpecConfig)</text>
<text text-anchor="middle" x="253.5" y="-162" font-family="Helvetica,sans-Serif" font-size="10.00">}</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="#63b8ff" d="M253.5,-144.9C253.5,-135.41 253.5,-126.46 253.5,-118.19"/>
<polygon fill="none" stroke="#63b8ff" points="250,-144.99 253.5,-154.99 257,-144.99 250,-144.99"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="a00606.xhtml" target="_top" xlink:title="class for audio normalization offering three options">
<polygon fill="white" stroke="#666666" points="155,-1224.5 0,-1224.5 0,-996.5 155,-996.5 155,-1224.5"/>
<text text-anchor="middle" x="77.5" y="-1212.5" font-family="Helvetica,sans-Serif" font-size="10.00">{CNormalizeAudio</text>
<text text-anchor="start" x="8" y="-1201.5" font-family="Helvetica,sans-Serif" font-size="10.00">|&#45; float m_fScaleFactor</text>
<text text-anchor="start" x="8" y="-1190.5" font-family="Helvetica,sans-Serif" font-size="10.00">|+ &#160;CNormalizeAudio(CAudioFile</text>
<text text-anchor="start" x="8" y="-1179.5" font-family="Helvetica,sans-Serif" font-size="10.00">If *pCAudioFile)</text>
<text text-anchor="start" x="8" y="-1168.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ &#160;CNormalizeAudio(const</text>
<text text-anchor="start" x="8" y="-1157.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfAudioBuff, long</text>
<text text-anchor="start" x="8" y="-1146.5" font-family="Helvetica,sans-Serif" font-size="10.00"> long iAudioLength)</text>
<text text-anchor="start" x="8" y="-1135.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CNormalizeAudio()</text>
<text text-anchor="start" x="8" y="-1124.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void normalizeBlock</text>
<text text-anchor="start" x="8" y="-1113.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfAudioBlock,</text>
<text text-anchor="start" x="8" y="-1102.5" font-family="Helvetica,sans-Serif" font-size="10.00"> long long iNumSamples)</text>
<text text-anchor="start" x="8" y="-1091.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static void normalizeSignal</text>
<text text-anchor="start" x="8" y="-1080.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfAudio, long long</text>
<text text-anchor="start" x="8" y="-1069.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iNumSamples)</text>
<text text-anchor="start" x="8" y="-1058.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; &#160;CNormalizeAudio()</text>
<text text-anchor="start" x="8" y="-1047.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; &#160;CNormalizeAudio(const</text>
<text text-anchor="start" x="8" y="-1036.5" font-family="Helvetica,sans-Serif" font-size="10.00"> CNormalizeAudio &amp;that)</text>
<text text-anchor="start" x="8" y="-1025.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CNormalizeAudio &amp; operator</text>
<text text-anchor="start" x="8" y="-1014.5" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CNormalizeAudio &amp;c)</text>
<text text-anchor="middle" x="77.5" y="-1003.5" font-family="Helvetica,sans-Serif" font-size="10.00">}</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node2 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node2</title>
<path fill="none" stroke="#404040" d="M109.68,-996.23C122.91,-949.67 139,-893.02 155.57,-834.7"/>
<polygon fill="none" stroke="#404040" points="155.61,-834.55 153.4,-827.69 158.89,-823.01 161.1,-829.88 155.61,-834.55"/>
<text text-anchor="middle" x="191" y="-844" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCNormalize</text>
</g>
<!-- Node4 -->
<g id="node4" class="node">
<title>Node4</title>
<g id="a_node4"><a xlink:href="a00542.xhtml" target="_top" xlink:title="forward declaration">
<polygon fill="white" stroke="#666666" points="333.5,-1323.5 173.5,-1323.5 173.5,-897.5 333.5,-897.5 333.5,-1323.5"/>
<text text-anchor="middle" x="253.5" y="-1311.5" font-family="Helvetica,sans-Serif" font-size="10.00">{CBlockAudioIf</text>
<text text-anchor="start" x="181.5" y="-1300.5" font-family="Helvetica,sans-Serif" font-size="10.00">|# long long m_iNumBlocks</text>
<text text-anchor="start" x="181.5" y="-1289.5" font-family="Helvetica,sans-Serif" font-size="10.00"># long long m_iCurrBlock</text>
<text text-anchor="start" x="181.5" y="-1278.5" font-family="Helvetica,sans-Serif" font-size="10.00"># long long m_iAudioLength</text>
<text text-anchor="start" x="181.5" y="-1267.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iBlockLength</text>
<text text-anchor="start" x="181.5" y="-1256.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iNumChannels</text>
<text text-anchor="start" x="181.5" y="-1245.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iHopLength</text>
<text text-anchor="start" x="181.5" y="-1234.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float m_fSampleRate</text>
<text text-anchor="start" x="181.5" y="-1223.5" font-family="Helvetica,sans-Serif" font-size="10.00">|+ long long getNumBlocks</text>
<text text-anchor="start" x="181.5" y="-1212.5" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="181.5" y="-1201.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ long long getLengthInSamples</text>
<text text-anchor="start" x="181.5" y="-1190.5" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="181.5" y="-1179.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ float getTimeStamp</text>
<text text-anchor="start" x="181.5" y="-1168.5" font-family="Helvetica,sans-Serif" font-size="10.00">(long long iBlockIdx)</text>
<text text-anchor="start" x="181.5" y="-1157.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual bool isEndOfData</text>
<text text-anchor="start" x="181.5" y="-1146.5" font-family="Helvetica,sans-Serif" font-size="10.00">() const =0</text>
<text text-anchor="start" x="181.5" y="-1135.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual int getNextBlock</text>
<text text-anchor="start" x="181.5" y="-1124.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfBlock, float</text>
<text text-anchor="start" x="181.5" y="-1113.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfTimeStampInS=0)=0</text>
<text text-anchor="start" x="181.5" y="-1102.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="181.5" y="-1091.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CBlockAudioIf *&amp;pCInstance,</text>
<text text-anchor="start" x="181.5" y="-1080.5" font-family="Helvetica,sans-Serif" font-size="10.00"> CAudioFileIf *pCAudioFile,</text>
<text text-anchor="start" x="181.5" y="-1069.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iBlockLength, int iHopLength)</text>
<text text-anchor="start" x="181.5" y="-1058.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="181.5" y="-1047.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CBlockAudioIf *&amp;pCInstance,</text>
<text text-anchor="start" x="181.5" y="-1036.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const float *pfAudioBuff,</text>
<text text-anchor="start" x="181.5" y="-1025.5" font-family="Helvetica,sans-Serif" font-size="10.00"> long long iAudioLength, int</text>
<text text-anchor="start" x="181.5" y="-1014.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iBlockLength, int iHopLength,</text>
<text text-anchor="start" x="181.5" y="-1003.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate)</text>
<text text-anchor="start" x="181.5" y="-992.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="181.5" y="-981.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CBlockAudioIf *&amp;pCInstance)</text>
<text text-anchor="start" x="181.5" y="-970.5" font-family="Helvetica,sans-Serif" font-size="10.00"># &#160;CBlockAudioIf()</text>
<text text-anchor="start" x="181.5" y="-959.5" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CBlockAudioIf()</text>
<text text-anchor="start" x="181.5" y="-948.5" font-family="Helvetica,sans-Serif" font-size="10.00"># &#160;CBlockAudioIf(const</text>
<text text-anchor="start" x="181.5" y="-937.5" font-family="Helvetica,sans-Serif" font-size="10.00"> CBlockAudioIf &amp;that)</text>
<text text-anchor="start" x="181.5" y="-926.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CBlockAudioIf &amp; operator</text>
<text text-anchor="start" x="181.5" y="-915.5" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CBlockAudioIf &amp;c)</text>
<text text-anchor="middle" x="253.5" y="-904.5" font-family="Helvetica,sans-Serif" font-size="10.00">}</text>
</a>
</g>
</g>
<!-- Node4&#45;&gt;Node2 -->
<g id="edge3" class="edge">
<title>Node4&#45;&gt;Node2</title>
<path fill="none" stroke="#404040" d="M253.5,-897.17C253.5,-877.02 253.5,-856.26 253.5,-835.27"/>
<polygon fill="none" stroke="#404040" points="253.5,-835.25 249.5,-829.25 253.5,-823.25 257.5,-829.25 253.5,-835.25"/>
<text text-anchor="middle" x="295" y="-844" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCBlockAudio</text>
</g>
<!-- Node5 -->
<g id="node5" class="node">
<title>Node5</title>
<g id="a_node5"><a xlink:href="a00474.xhtml" target="_top" xlink:title="class for FFT computation with windowing">
<polygon fill="white" stroke="#666666" points="539.5,-1351 351.5,-1351 351.5,-870 539.5,-870 539.5,-1351"/>
<text text-anchor="middle" x="445.5" y="-1339" font-family="Helvetica,sans-Serif" font-size="10.00">{CFft</text>
<text text-anchor="start" x="359.5" y="-1328" font-family="Helvetica,sans-Serif" font-size="10.00">|&#45; float * m_pfProcBuff</text>
<text text-anchor="start" x="359.5" y="-1317" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_pfWindowBuff</text>
<text text-anchor="start" x="359.5" y="-1306" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iDataLength</text>
<text text-anchor="start" x="359.5" y="-1295" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iFftLength</text>
<text text-anchor="start" x="359.5" y="-1284" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Windowing_t m_ePrePostWindowOpt</text>
<text text-anchor="start" x="359.5" y="-1273" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; bool m_bIsInitialized</text>
<text text-anchor="start" x="359.5" y="-1262" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; static const float m_Pi</text>
<text text-anchor="start" x="359.5" y="-1251" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; static const float</text>
<text text-anchor="start" x="359.5" y="-1240" font-family="Helvetica,sans-Serif" font-size="10.00"> m_Pi2</text>
<text text-anchor="start" x="359.5" y="-1229" font-family="Helvetica,sans-Serif" font-size="10.00">|+ &#160;CFft()</text>
<text text-anchor="start" x="359.5" y="-1218" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CFft()</text>
<text text-anchor="start" x="359.5" y="-1207" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t init(int iBlockLength,</text>
<text text-anchor="start" x="359.5" y="-1196" font-family="Helvetica,sans-Serif" font-size="10.00"> int iZeroPadFactor=1, WindowFunction</text>
<text text-anchor="start" x="359.5" y="-1185" font-family="Helvetica,sans-Serif" font-size="10.00">_t eWindow=kWindowHann, Windowing</text>
<text text-anchor="start" x="359.5" y="-1174" font-family="Helvetica,sans-Serif" font-size="10.00">_t eWindowing=kPreWindow)</text>
<text text-anchor="start" x="359.5" y="-1163" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t reset()</text>
<text text-anchor="start" x="359.5" y="-1152" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t overrideWindow</text>
<text text-anchor="start" x="359.5" y="-1141" font-family="Helvetica,sans-Serif" font-size="10.00">(const float *pfNewWindow)</text>
<text text-anchor="start" x="359.5" y="-1130" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getWindow(float</text>
<text text-anchor="start" x="359.5" y="-1119" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfWindow) const</text>
<text text-anchor="start" x="359.5" y="-1108" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compFft(complex</text>
<text text-anchor="start" x="359.5" y="-1097" font-family="Helvetica,sans-Serif" font-size="10.00">_t *pfSpectrum, const</text>
<text text-anchor="start" x="359.5" y="-1086" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfIn)</text>
<text text-anchor="start" x="359.5" y="-1075" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compInvFft</text>
<text text-anchor="start" x="359.5" y="-1064" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfOut, const</text>
<text text-anchor="start" x="359.5" y="-1053" font-family="Helvetica,sans-Serif" font-size="10.00"> complex_t *pfSpectrum)</text>
<text text-anchor="start" x="359.5" y="-1042" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getMagnitude</text>
<text text-anchor="start" x="359.5" y="-1031" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfMag, const</text>
<text text-anchor="start" x="359.5" y="-1020" font-family="Helvetica,sans-Serif" font-size="10.00"> complex_t *pfSpectrum)</text>
<text text-anchor="start" x="359.5" y="-1009" font-family="Helvetica,sans-Serif" font-size="10.00"> const</text>
<text text-anchor="start" x="359.5" y="-998" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getPhase(float</text>
<text text-anchor="start" x="359.5" y="-987" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfPhase, const complex</text>
<text text-anchor="start" x="359.5" y="-976" font-family="Helvetica,sans-Serif" font-size="10.00">_t *pfSpectrum) const</text>
<text text-anchor="start" x="359.5" y="-965" font-family="Helvetica,sans-Serif" font-size="10.00">and 7 more...</text>
<text text-anchor="start" x="359.5" y="-954" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; &#160;CFft(const CFft &amp;that)</text>
<text text-anchor="start" x="359.5" y="-943" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CFft &amp; operator=(const</text>
<text text-anchor="start" x="359.5" y="-932" font-family="Helvetica,sans-Serif" font-size="10.00"> CFft &amp;c)</text>
<text text-anchor="start" x="359.5" y="-921" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Error_t allocMemory_()</text>
<text text-anchor="start" x="359.5" y="-910" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Error_t freeMemory_()</text>
<text text-anchor="start" x="359.5" y="-899" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Error_t computeWindow</text>
<text text-anchor="start" x="359.5" y="-888" font-family="Helvetica,sans-Serif" font-size="10.00">_(WindowFunction_t eWindow)</text>
<text text-anchor="middle" x="445.5" y="-877" font-family="Helvetica,sans-Serif" font-size="10.00">}</text>
</a>
</g>
</g>
<!-- Node5&#45;&gt;Node2 -->
<g id="edge4" class="edge">
<title>Node5&#45;&gt;Node2</title>
<path fill="none" stroke="#404040" d="M371.27,-869.99C367.69,-858.43 364.06,-846.74 360.42,-834.98"/>
<polygon fill="none" stroke="#404040" points="360.32,-834.66 354.72,-830.11 356.77,-823.19 362.36,-827.74 360.32,-834.66"/>
<text text-anchor="middle" x="386.5" y="-844" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCFft</text>
</g>
</g>
</svg>
        <g id="navigator" transform="translate(0 0)" fill="#404254">
                <rect fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width=".5" x="0" y="0" width="60" height="60"/>
                <use id="zoomplus" xlink:href="#zoomPlus" x="17" y="9" onmousedown="handleZoom(evt,'in')"/>
                <use id="zoomminus" xlink:href="#zoomMin" x="42" y="9" onmousedown="handleZoom(evt,'out')"/>
                <use id="reset" xlink:href="#resetDef" x="30" y="36" onmousedown="handleReset()"/>
                <g id="arrowUp" xlink:href="#dirArrow" transform="translate(30 24)" onmousedown="handlePan(0,-1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowUp.mouseover" end="arrowUp.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowRight" xlink:href="#dirArrow" transform="rotate(90) translate(36 -43)" onmousedown="handlePan(1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowRight.mouseover" end="arrowRight.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowDown" xlink:href="#dirArrow" transform="rotate(180) translate(-30 -48)" onmousedown="handlePan(0,1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowDown.mouseover" end="arrowDown.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowLeft" xlink:href="#dirArrow" transform="rotate(270) translate(-36 17)" onmousedown="handlePan(-1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowLeft.mouseover" end="arrowLeft.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
        </g>
        <svg viewBox="0 0 15 15" width="100%" height="30px" preserveAspectRatio="xMaxYMin meet">
         <g id="arrow_out" transform="scale(0.3 0.3)">
          <a xlink:href="a00404_org.svg" target="_base">
           <rect id="button" ry="5" rx="5" y="6" x="6" height="38" width="38"
                fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width="1.0"/>
           <path id="arrow"
             d="M 11.500037,31.436501 C 11.940474,20.09759 22.043105,11.32322 32.158766,21.979434 L 37.068811,17.246167 C 37.068811,17.246167 37.088388,32 37.088388,32 L 22.160133,31.978069 C 22.160133,31.978069 26.997745,27.140456 26.997745,27.140456 C 18.528582,18.264221 13.291696,25.230495 11.500037,31.436501 z"
             style="fill:#404040;"/>
          </a>
         </g>
        </svg>
</svg>
