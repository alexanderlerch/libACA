<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.4"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ACA: CViterbi Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">ACA<span id="projectnumber">&#160;0.2.6</span>
   </div>
   <div id="projectbrief">Example Code for Audio Content Analysis</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.4 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search",'Search','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('a00615.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pri-types">Private Types</a> &#124;
<a href="#pri-methods">Private Member Functions</a> &#124;
<a href="#pri-attribs">Private Attributes</a> &#124;
<a href="a00612.xhtml">List of all members</a>  </div>
  <div class="headertitle"><div class="title">CViterbi Class Reference</div></div>
</div><!--header-->
<div class="contents">

<p>viterbi algorithm  
 <a href="a00615.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="a00185_source.xhtml">ToolViterbi.h</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for CViterbi:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00613.svg" width="210" height="543"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ab172f2f3df6d0605afd5b5e833736c5a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00615.xhtml#ab172f2f3df6d0605afd5b5e833736c5a">CViterbi</a> (void)</td></tr>
<tr class="separator:ab172f2f3df6d0605afd5b5e833736c5a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2c69d34fe3a52ead4cb040e1eb8a724c"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00615.xhtml#a2c69d34fe3a52ead4cb040e1eb8a724c">~CViterbi</a> (void)</td></tr>
<tr class="separator:a2c69d34fe3a52ead4cb040e1eb8a724c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a650535a050fd47b41632c2fc43e19a8d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00119.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00615.xhtml#a650535a050fd47b41632c2fc43e19a8d">init</a> (float **ppfPTransition, float *pfPStart, int iNumStates, int iNumObservations)</td></tr>
<tr class="separator:a650535a050fd47b41632c2fc43e19a8d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acae19af3a95069496771f05336e4f94f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00119.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00615.xhtml#acae19af3a95069496771f05336e4f94f">reset</a> ()</td></tr>
<tr class="separator:acae19af3a95069496771f05336e4f94f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a01e3528ba8c1fffb4b239e9e54dcc2fb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00119.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00615.xhtml#a01e3528ba8c1fffb4b239e9e54dcc2fb">compViterbi</a> (float **ppfPEmission, <a class="el" href="a00245.xhtml#abb452686968e48b67397da5f97445f5b">bool</a> bUseLogLikelihood=<a class="el" href="a00245.xhtml#a41f9c5fb8b08eb5dc3edce4dcb37fee7">true</a>)</td></tr>
<tr class="separator:a01e3528ba8c1fffb4b239e9e54dcc2fb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a94e29fa23ee33171e0720842543773f7"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00615.xhtml#a94e29fa23ee33171e0720842543773f7">getOverallProbability</a> () const</td></tr>
<tr class="separator:a94e29fa23ee33171e0720842543773f7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad38834e360270390b08848a9f6e60969"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00119.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00615.xhtml#ad38834e360270390b08848a9f6e60969">getStateSequence</a> (int *pistateSequence) const</td></tr>
<tr class="separator:ad38834e360270390b08848a9f6e60969"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pri-types" name="pri-types"></a>
Private Types</h2></td></tr>
<tr class="memitem:a342a9a0e046dd7ec771935993d9cfd8d"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00615.xhtml#a342a9a0e046dd7ec771935993d9cfd8d">MatrixDimension_t</a> { <a class="el" href="a00615.xhtml#a342a9a0e046dd7ec771935993d9cfd8daa12e23d1f3fc15c9f9850a55628d835e">kRow</a>
, <a class="el" href="a00615.xhtml#a342a9a0e046dd7ec771935993d9cfd8da3f173a47171bb87acf0d46702908b743">kCol</a>
, <a class="el" href="a00615.xhtml#a342a9a0e046dd7ec771935993d9cfd8da2db4e06f32f446303c99f49f8d3af212">kNumMatrixDimensions</a>
 }</td></tr>
<tr class="separator:a342a9a0e046dd7ec771935993d9cfd8d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pri-methods" name="pri-methods"></a>
Private Member Functions</h2></td></tr>
<tr class="memitem:a7e5d3922d99b15fb4016ec4c4ba61baf"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00615.xhtml#a7e5d3922d99b15fb4016ec4c4ba61baf">CViterbi</a> (const <a class="el" href="a00615.xhtml">CViterbi</a> &amp;that)</td></tr>
<tr class="separator:a7e5d3922d99b15fb4016ec4c4ba61baf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a01e6ea216c35cbc03ee9e3c789462411"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00615.xhtml">CViterbi</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00615.xhtml#a01e6ea216c35cbc03ee9e3c789462411">operator=</a> (const <a class="el" href="a00615.xhtml">CViterbi</a> &amp;c)</td></tr>
<tr class="separator:a01e6ea216c35cbc03ee9e3c789462411"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae18a51101c1d13bf871a46b48aed8418"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00615.xhtml#ae18a51101c1d13bf871a46b48aed8418">compProbability_</a> (float **ppfPEmission)</td></tr>
<tr class="separator:ae18a51101c1d13bf871a46b48aed8418"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae2d59f488478d0124c18c5196ff26d81"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00615.xhtml#ae2d59f488478d0124c18c5196ff26d81">compLogLikelihood_</a> (float **ppfPEmission)</td></tr>
<tr class="separator:ae2d59f488478d0124c18c5196ff26d81"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pri-attribs" name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr class="memitem:ad1972227ea5e46dda3583343ca4bfdf7"><td class="memItemLeft" align="right" valign="top">float **&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00615.xhtml#ad1972227ea5e46dda3583343ca4bfdf7">m_ppfProb</a> = 0</td></tr>
<tr class="memdesc:ad1972227ea5e46dda3583343ca4bfdf7"><td class="mdescLeft">&#160;</td><td class="mdescRight">probability matrix  <a href="a00615.xhtml#ad1972227ea5e46dda3583343ca4bfdf7">More...</a><br /></td></tr>
<tr class="separator:ad1972227ea5e46dda3583343ca4bfdf7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9a6a55f1326056c6d8682175f3a00570"><td class="memItemLeft" align="right" valign="top">float **&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00615.xhtml#a9a6a55f1326056c6d8682175f3a00570">m_ppfTransProb</a> = 0</td></tr>
<tr class="memdesc:a9a6a55f1326056c6d8682175f3a00570"><td class="mdescLeft">&#160;</td><td class="mdescRight">transition probability matrix  <a href="a00615.xhtml#a9a6a55f1326056c6d8682175f3a00570">More...</a><br /></td></tr>
<tr class="separator:a9a6a55f1326056c6d8682175f3a00570"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeb1f5ece1eebddece837c8b25c9b51c3"><td class="memItemLeft" align="right" valign="top">float *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00615.xhtml#aeb1f5ece1eebddece837c8b25c9b51c3">m_pfStart</a> = 0</td></tr>
<tr class="memdesc:aeb1f5ece1eebddece837c8b25c9b51c3"><td class="mdescLeft">&#160;</td><td class="mdescRight">start probability vector  <a href="a00615.xhtml#aeb1f5ece1eebddece837c8b25c9b51c3">More...</a><br /></td></tr>
<tr class="separator:aeb1f5ece1eebddece837c8b25c9b51c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a06c115793e070d6b19c0d87e1f729667"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00615.xhtml#a06c115793e070d6b19c0d87e1f729667">m_fOverallProb</a> = -1e30F</td></tr>
<tr class="memdesc:a06c115793e070d6b19c0d87e1f729667"><td class="mdescLeft">&#160;</td><td class="mdescRight">resulting overall path probability  <a href="a00615.xhtml#a06c115793e070d6b19c0d87e1f729667">More...</a><br /></td></tr>
<tr class="separator:a06c115793e070d6b19c0d87e1f729667"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a886f45e563f269e36e666b7bc10cfff9"><td class="memItemLeft" align="right" valign="top">unsigned int **&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00615.xhtml#a886f45e563f269e36e666b7bc10cfff9">m_ppiPathIdx</a> = 0</td></tr>
<tr class="memdesc:a886f45e563f269e36e666b7bc10cfff9"><td class="mdescLeft">&#160;</td><td class="mdescRight">matrix with directions for traceback  <a href="a00615.xhtml#a886f45e563f269e36e666b7bc10cfff9">More...</a><br /></td></tr>
<tr class="separator:a886f45e563f269e36e666b7bc10cfff9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa7b5ff16e7dce82a55dd7f6ccc603615"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00615.xhtml#aa7b5ff16e7dce82a55dd7f6ccc603615">m_iNumStates</a> = 0</td></tr>
<tr class="memdesc:aa7b5ff16e7dce82a55dd7f6ccc603615"><td class="mdescLeft">&#160;</td><td class="mdescRight">number of states  <a href="a00615.xhtml#aa7b5ff16e7dce82a55dd7f6ccc603615">More...</a><br /></td></tr>
<tr class="separator:aa7b5ff16e7dce82a55dd7f6ccc603615"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aae2cae830bdd03a817761582040a48bf"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00615.xhtml#aae2cae830bdd03a817761582040a48bf">m_iNumObs</a> = 0</td></tr>
<tr class="memdesc:aae2cae830bdd03a817761582040a48bf"><td class="mdescLeft">&#160;</td><td class="mdescRight">number of observations  <a href="a00615.xhtml#aae2cae830bdd03a817761582040a48bf">More...</a><br /></td></tr>
<tr class="separator:aae2cae830bdd03a817761582040a48bf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6350f4a0aeaa79e6150bb6fbceaf0ae5"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00615.xhtml#a6350f4a0aeaa79e6150bb6fbceaf0ae5">m_iEndState</a> = -1</td></tr>
<tr class="memdesc:a6350f4a0aeaa79e6150bb6fbceaf0ae5"><td class="mdescLeft">&#160;</td><td class="mdescRight">most likely end state  <a href="a00615.xhtml#a6350f4a0aeaa79e6150bb6fbceaf0ae5">More...</a><br /></td></tr>
<tr class="separator:a6350f4a0aeaa79e6150bb6fbceaf0ae5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aac4d5ae838ef1324b4330b1d4c4b16f6"><td class="memItemLeft" align="right" valign="top">const float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00615.xhtml#aac4d5ae838ef1324b4330b1d4c4b16f6">m_kLogMin</a> = 1e-30F</td></tr>
<tr class="memdesc:aac4d5ae838ef1324b4330b1d4c4b16f6"><td class="mdescLeft">&#160;</td><td class="mdescRight">constant to avoid log(0)  <a href="a00615.xhtml#aac4d5ae838ef1324b4330b1d4c4b16f6">More...</a><br /></td></tr>
<tr class="separator:aac4d5ae838ef1324b4330b1d4c4b16f6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab56cf94da025a3510acfa5721b8d116b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00245.xhtml#abb452686968e48b67397da5f97445f5b">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00615.xhtml#ab56cf94da025a3510acfa5721b8d116b">m_bIsInitialized</a> = <a class="el" href="a00245.xhtml#a65e9886d74aaee76545e83dd09011727">false</a></td></tr>
<tr class="memdesc:ab56cf94da025a3510acfa5721b8d116b"><td class="mdescLeft">&#160;</td><td class="mdescRight">true if init has been called  <a href="a00615.xhtml#ab56cf94da025a3510acfa5721b8d116b">More...</a><br /></td></tr>
<tr class="separator:ab56cf94da025a3510acfa5721b8d116b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad24c9e982f04ea536abb15c632489a6b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00245.xhtml#abb452686968e48b67397da5f97445f5b">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00615.xhtml#ad24c9e982f04ea536abb15c632489a6b">m_bWasProcessed</a> = <a class="el" href="a00245.xhtml#a65e9886d74aaee76545e83dd09011727">false</a></td></tr>
<tr class="memdesc:ad24c9e982f04ea536abb15c632489a6b"><td class="mdescLeft">&#160;</td><td class="mdescRight">true if compViterbi has been called  <a href="a00615.xhtml#ad24c9e982f04ea536abb15c632489a6b">More...</a><br /></td></tr>
<tr class="separator:ad24c9e982f04ea536abb15c632489a6b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p >viterbi algorithm </p>

<p class="definition">Definition at line <a class="el" href="a00185_source.xhtml#l00010">10</a> of file <a class="el" href="a00185_source.xhtml">ToolViterbi.h</a>.</p>
</div><h2 class="groupheader">Member Enumeration Documentation</h2>
<a id="a342a9a0e046dd7ec771935993d9cfd8d" name="a342a9a0e046dd7ec771935993d9cfd8d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a342a9a0e046dd7ec771935993d9cfd8d">&#9670;&nbsp;</a></span>MatrixDimension_t</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="a00615.xhtml#a342a9a0e046dd7ec771935993d9cfd8d">CViterbi::MatrixDimension_t</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="a342a9a0e046dd7ec771935993d9cfd8daa12e23d1f3fc15c9f9850a55628d835e" name="a342a9a0e046dd7ec771935993d9cfd8daa12e23d1f3fc15c9f9850a55628d835e"></a>kRow&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a342a9a0e046dd7ec771935993d9cfd8da3f173a47171bb87acf0d46702908b743" name="a342a9a0e046dd7ec771935993d9cfd8da3f173a47171bb87acf0d46702908b743"></a>kCol&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a342a9a0e046dd7ec771935993d9cfd8da2db4e06f32f446303c99f49f8d3af212" name="a342a9a0e046dd7ec771935993d9cfd8da2db4e06f32f446303c99f49f8d3af212"></a>kNumMatrixDimensions&#160;</td><td class="fielddoc"></td></tr>
</table>

<p class="definition">Definition at line <a class="el" href="a00185_source.xhtml#l00055">55</a> of file <a class="el" href="a00185_source.xhtml">ToolViterbi.h</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   56</span>    {</div>
<div class="line"><span class="lineno">   57</span>        <a class="code hl_enumvalue" href="a00615.xhtml#a342a9a0e046dd7ec771935993d9cfd8daa12e23d1f3fc15c9f9850a55628d835e">kRow</a>,</div>
<div class="line"><span class="lineno">   58</span>        <a class="code hl_enumvalue" href="a00615.xhtml#a342a9a0e046dd7ec771935993d9cfd8da3f173a47171bb87acf0d46702908b743">kCol</a>,</div>
<div class="line"><span class="lineno">   59</span> </div>
<div class="line"><span class="lineno">   60</span>        <a class="code hl_enumvalue" href="a00615.xhtml#a342a9a0e046dd7ec771935993d9cfd8da2db4e06f32f446303c99f49f8d3af212">kNumMatrixDimensions</a></div>
<div class="line"><span class="lineno">   61</span>    };</div>
<div class="ttc" id="aa00615_xhtml_a342a9a0e046dd7ec771935993d9cfd8da2db4e06f32f446303c99f49f8d3af212"><div class="ttname"><a href="a00615.xhtml#a342a9a0e046dd7ec771935993d9cfd8da2db4e06f32f446303c99f49f8d3af212">CViterbi::kNumMatrixDimensions</a></div><div class="ttdeci">@ kNumMatrixDimensions</div><div class="ttdef"><b>Definition:</b> <a href="a00185_source.xhtml#l00061">ToolViterbi.h:60</a></div></div>
<div class="ttc" id="aa00615_xhtml_a342a9a0e046dd7ec771935993d9cfd8da3f173a47171bb87acf0d46702908b743"><div class="ttname"><a href="a00615.xhtml#a342a9a0e046dd7ec771935993d9cfd8da3f173a47171bb87acf0d46702908b743">CViterbi::kCol</a></div><div class="ttdeci">@ kCol</div><div class="ttdef"><b>Definition:</b> <a href="a00185_source.xhtml#l00058">ToolViterbi.h:58</a></div></div>
<div class="ttc" id="aa00615_xhtml_a342a9a0e046dd7ec771935993d9cfd8daa12e23d1f3fc15c9f9850a55628d835e"><div class="ttname"><a href="a00615.xhtml#a342a9a0e046dd7ec771935993d9cfd8daa12e23d1f3fc15c9f9850a55628d835e">CViterbi::kRow</a></div><div class="ttdeci">@ kRow</div><div class="ttdef"><b>Definition:</b> <a href="a00185_source.xhtml#l00057">ToolViterbi.h:57</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="ab172f2f3df6d0605afd5b5e833736c5a" name="ab172f2f3df6d0605afd5b5e833736c5a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab172f2f3df6d0605afd5b5e833736c5a">&#9670;&nbsp;</a></span>CViterbi() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">CViterbi::CViterbi </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="a00080_source.xhtml#l00007">7</a> of file <a class="el" href="a00080_source.xhtml">ToolViterbi.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">    8</span>{</div>
<div class="line"><span class="lineno">    9</span>    <a class="code hl_function" href="a00615.xhtml#acae19af3a95069496771f05336e4f94f">reset</a>();</div>
<div class="line"><span class="lineno">   10</span>}</div>
<div class="ttc" id="aa00615_xhtml_acae19af3a95069496771f05336e4f94f"><div class="ttname"><a href="a00615.xhtml#acae19af3a95069496771f05336e4f94f">CViterbi::reset</a></div><div class="ttdeci">Error_t reset()</div><div class="ttdef"><b>Definition:</b> <a href="a00080_source.xhtml#l00050">ToolViterbi.cpp:50</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00080_source.xhtml#l00050">reset()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00615_ab172f2f3df6d0605afd5b5e833736c5a_cgraph.svg" width="570" height="63"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a2c69d34fe3a52ead4cb040e1eb8a724c" name="a2c69d34fe3a52ead4cb040e1eb8a724c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2c69d34fe3a52ead4cb040e1eb8a724c">&#9670;&nbsp;</a></span>~CViterbi()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">CViterbi::~CViterbi </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="a00080_source.xhtml#l00012">12</a> of file <a class="el" href="a00080_source.xhtml">ToolViterbi.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   13</span>{</div>
<div class="line"><span class="lineno">   14</span>    <a class="code hl_function" href="a00615.xhtml#acae19af3a95069496771f05336e4f94f">reset</a>();</div>
<div class="line"><span class="lineno">   15</span>}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00080_source.xhtml#l00050">reset()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00615_a2c69d34fe3a52ead4cb040e1eb8a724c_cgraph.svg" width="576" height="63"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a7e5d3922d99b15fb4016ec4c4ba61baf" name="a7e5d3922d99b15fb4016ec4c4ba61baf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7e5d3922d99b15fb4016ec4c4ba61baf">&#9670;&nbsp;</a></span>CViterbi() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">CViterbi::CViterbi </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="a00615.xhtml">CViterbi</a> &amp;&#160;</td>
          <td class="paramname"><em>that</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="ae2d59f488478d0124c18c5196ff26d81" name="ae2d59f488478d0124c18c5196ff26d81"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae2d59f488478d0124c18c5196ff26d81">&#9670;&nbsp;</a></span>compLogLikelihood_()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void CViterbi::compLogLikelihood_ </td>
          <td>(</td>
          <td class="paramtype">float **&#160;</td>
          <td class="paramname"><em>ppfPEmission</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="a00080_source.xhtml#l00134">134</a> of file <a class="el" href="a00080_source.xhtml">ToolViterbi.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  135</span>{</div>
<div class="line"><span class="lineno">  136</span>    <span class="comment">// convert trans prob to log</span></div>
<div class="line"><span class="lineno">  137</span>    <span class="keywordflow">for</span> (<span class="keyword">auto</span> m = 0; m &lt; <a class="code hl_variable" href="a00615.xhtml#aa7b5ff16e7dce82a55dd7f6ccc603615">m_iNumStates</a>; m++)</div>
<div class="line"><span class="lineno">  138</span>        <span class="keywordflow">for</span> (<span class="keyword">auto</span> s = 0; s &lt; <a class="code hl_variable" href="a00615.xhtml#aa7b5ff16e7dce82a55dd7f6ccc603615">m_iNumStates</a>; s++)</div>
<div class="line"><span class="lineno">  139</span>            <a class="code hl_variable" href="a00615.xhtml#a9a6a55f1326056c6d8682175f3a00570">m_ppfTransProb</a>[m][s] = std::log(<a class="code hl_variable" href="a00615.xhtml#a9a6a55f1326056c6d8682175f3a00570">m_ppfTransProb</a>[m][s] + <a class="code hl_variable" href="a00615.xhtml#aac4d5ae838ef1324b4330b1d4c4b16f6">m_kLogMin</a>);</div>
<div class="line"><span class="lineno">  140</span> </div>
<div class="line"><span class="lineno">  141</span>    <span class="comment">// initialize</span></div>
<div class="line"><span class="lineno">  142</span>    <span class="keywordflow">for</span> (<span class="keyword">auto</span> m = 0; m &lt; <a class="code hl_variable" href="a00615.xhtml#aa7b5ff16e7dce82a55dd7f6ccc603615">m_iNumStates</a>; m++)</div>
<div class="line"><span class="lineno">  143</span>        <a class="code hl_variable" href="a00615.xhtml#ad1972227ea5e46dda3583343ca4bfdf7">m_ppfProb</a>[m][0] = std::log(ppfPEmission[m][0]+ <a class="code hl_variable" href="a00615.xhtml#aac4d5ae838ef1324b4330b1d4c4b16f6">m_kLogMin</a>) + std::log(<a class="code hl_variable" href="a00615.xhtml#aeb1f5ece1eebddece837c8b25c9b51c3">m_pfStart</a>[m]+ <a class="code hl_variable" href="a00615.xhtml#aac4d5ae838ef1324b4330b1d4c4b16f6">m_kLogMin</a>);</div>
<div class="line"><span class="lineno">  144</span> </div>
<div class="line"><span class="lineno">  145</span> </div>
<div class="line"><span class="lineno">  146</span>    <span class="comment">// compute probability matrix and store backtracking path</span></div>
<div class="line"><span class="lineno">  147</span>    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> n = 1; n &lt; <a class="code hl_variable" href="a00615.xhtml#aae2cae830bdd03a817761582040a48bf">m_iNumObs</a>; n++)</div>
<div class="line"><span class="lineno">  148</span>    {</div>
<div class="line"><span class="lineno">  149</span>        <span class="keywordflow">for</span> (<span class="keywordtype">int</span> m = 0; m &lt; <a class="code hl_variable" href="a00615.xhtml#aa7b5ff16e7dce82a55dd7f6ccc603615">m_iNumStates</a>; m++)</div>
<div class="line"><span class="lineno">  150</span>        {</div>
<div class="line"><span class="lineno">  151</span>            <span class="comment">// find max of preceding times trans prob</span></div>
<div class="line"><span class="lineno">  152</span>            <span class="keywordtype">float</span> fMaxProb = -std::numeric_limits&lt;float&gt;::max();</div>
<div class="line"><span class="lineno">  153</span>            <span class="keywordflow">for</span> (<span class="keyword">auto</span> s = 0; s &lt; <a class="code hl_variable" href="a00615.xhtml#aa7b5ff16e7dce82a55dd7f6ccc603615">m_iNumStates</a>; s++)</div>
<div class="line"><span class="lineno">  154</span>            {</div>
<div class="line"><span class="lineno">  155</span>                <span class="keywordtype">float</span> fProbsm = <a class="code hl_variable" href="a00615.xhtml#ad1972227ea5e46dda3583343ca4bfdf7">m_ppfProb</a>[s][n - 1] + <a class="code hl_variable" href="a00615.xhtml#a9a6a55f1326056c6d8682175f3a00570">m_ppfTransProb</a>[s][m];</div>
<div class="line"><span class="lineno">  156</span>                <span class="keywordflow">if</span> (fProbsm &gt; fMaxProb)</div>
<div class="line"><span class="lineno">  157</span>                {</div>
<div class="line"><span class="lineno">  158</span>                    fMaxProb = fProbsm;</div>
<div class="line"><span class="lineno">  159</span>                    <a class="code hl_variable" href="a00615.xhtml#ad1972227ea5e46dda3583343ca4bfdf7">m_ppfProb</a>[m][n] = fMaxProb;</div>
<div class="line"><span class="lineno">  160</span>                    <a class="code hl_variable" href="a00615.xhtml#a886f45e563f269e36e666b7bc10cfff9">m_ppiPathIdx</a>[m][n] = s;</div>
<div class="line"><span class="lineno">  161</span>                }</div>
<div class="line"><span class="lineno">  162</span>            }</div>
<div class="line"><span class="lineno">  163</span>            <a class="code hl_variable" href="a00615.xhtml#ad1972227ea5e46dda3583343ca4bfdf7">m_ppfProb</a>[m][n] += std::log(ppfPEmission[m][n]+ <a class="code hl_variable" href="a00615.xhtml#aac4d5ae838ef1324b4330b1d4c4b16f6">m_kLogMin</a>);</div>
<div class="line"><span class="lineno">  164</span>        }</div>
<div class="line"><span class="lineno">  165</span>    }</div>
<div class="line"><span class="lineno">  166</span>}</div>
<div class="ttc" id="aa00615_xhtml_a886f45e563f269e36e666b7bc10cfff9"><div class="ttname"><a href="a00615.xhtml#a886f45e563f269e36e666b7bc10cfff9">CViterbi::m_ppiPathIdx</a></div><div class="ttdeci">unsigned int ** m_ppiPathIdx</div><div class="ttdoc">matrix with directions for traceback</div><div class="ttdef"><b>Definition:</b> <a href="a00185_source.xhtml#l00068">ToolViterbi.h:68</a></div></div>
<div class="ttc" id="aa00615_xhtml_a9a6a55f1326056c6d8682175f3a00570"><div class="ttname"><a href="a00615.xhtml#a9a6a55f1326056c6d8682175f3a00570">CViterbi::m_ppfTransProb</a></div><div class="ttdeci">float ** m_ppfTransProb</div><div class="ttdoc">transition probability matrix</div><div class="ttdef"><b>Definition:</b> <a href="a00185_source.xhtml#l00064">ToolViterbi.h:64</a></div></div>
<div class="ttc" id="aa00615_xhtml_aa7b5ff16e7dce82a55dd7f6ccc603615"><div class="ttname"><a href="a00615.xhtml#aa7b5ff16e7dce82a55dd7f6ccc603615">CViterbi::m_iNumStates</a></div><div class="ttdeci">int m_iNumStates</div><div class="ttdoc">number of states</div><div class="ttdef"><b>Definition:</b> <a href="a00185_source.xhtml#l00070">ToolViterbi.h:70</a></div></div>
<div class="ttc" id="aa00615_xhtml_aac4d5ae838ef1324b4330b1d4c4b16f6"><div class="ttname"><a href="a00615.xhtml#aac4d5ae838ef1324b4330b1d4c4b16f6">CViterbi::m_kLogMin</a></div><div class="ttdeci">const float m_kLogMin</div><div class="ttdoc">constant to avoid log(0)</div><div class="ttdef"><b>Definition:</b> <a href="a00185_source.xhtml#l00074">ToolViterbi.h:74</a></div></div>
<div class="ttc" id="aa00615_xhtml_aae2cae830bdd03a817761582040a48bf"><div class="ttname"><a href="a00615.xhtml#aae2cae830bdd03a817761582040a48bf">CViterbi::m_iNumObs</a></div><div class="ttdeci">int m_iNumObs</div><div class="ttdoc">number of observations</div><div class="ttdef"><b>Definition:</b> <a href="a00185_source.xhtml#l00071">ToolViterbi.h:71</a></div></div>
<div class="ttc" id="aa00615_xhtml_ad1972227ea5e46dda3583343ca4bfdf7"><div class="ttname"><a href="a00615.xhtml#ad1972227ea5e46dda3583343ca4bfdf7">CViterbi::m_ppfProb</a></div><div class="ttdeci">float ** m_ppfProb</div><div class="ttdoc">probability matrix</div><div class="ttdef"><b>Definition:</b> <a href="a00185_source.xhtml#l00063">ToolViterbi.h:63</a></div></div>
<div class="ttc" id="aa00615_xhtml_aeb1f5ece1eebddece837c8b25c9b51c3"><div class="ttname"><a href="a00615.xhtml#aeb1f5ece1eebddece837c8b25c9b51c3">CViterbi::m_pfStart</a></div><div class="ttdeci">float * m_pfStart</div><div class="ttdoc">start probability vector</div><div class="ttdef"><b>Definition:</b> <a href="a00185_source.xhtml#l00065">ToolViterbi.h:65</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00185_source.xhtml#l00071">m_iNumObs</a>, <a class="el" href="a00185_source.xhtml#l00070">m_iNumStates</a>, <a class="el" href="a00185_source.xhtml#l00074">m_kLogMin</a>, <a class="el" href="a00185_source.xhtml#l00065">m_pfStart</a>, <a class="el" href="a00185_source.xhtml#l00063">m_ppfProb</a>, <a class="el" href="a00185_source.xhtml#l00064">m_ppfTransProb</a>, and <a class="el" href="a00185_source.xhtml#l00068">m_ppiPathIdx</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00080_source.xhtml#l00069">compViterbi()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00615_ae2d59f488478d0124c18c5196ff26d81_icgraph.svg" width="100%" height="300"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="ae18a51101c1d13bf871a46b48aed8418" name="ae18a51101c1d13bf871a46b48aed8418"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae18a51101c1d13bf871a46b48aed8418">&#9670;&nbsp;</a></span>compProbability_()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void CViterbi::compProbability_ </td>
          <td>(</td>
          <td class="paramtype">float **&#160;</td>
          <td class="paramname"><em>ppfPEmission</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="a00080_source.xhtml#l00102">102</a> of file <a class="el" href="a00080_source.xhtml">ToolViterbi.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  103</span>{</div>
<div class="line"><span class="lineno">  104</span>    <span class="comment">// initialize</span></div>
<div class="line"><span class="lineno">  105</span>    <span class="keywordflow">for</span> (<span class="keyword">auto</span> m = 0; m &lt; <a class="code hl_variable" href="a00615.xhtml#aa7b5ff16e7dce82a55dd7f6ccc603615">m_iNumStates</a>; m++)</div>
<div class="line"><span class="lineno">  106</span>    {</div>
<div class="line"><span class="lineno">  107</span>        <a class="code hl_function" href="a00495.xhtml#a4cf9544dd96801e3ee47fd1ef2049a1b">CVector::setValue</a>(<a class="code hl_variable" href="a00615.xhtml#ad1972227ea5e46dda3583343ca4bfdf7">m_ppfProb</a>[m], 1.F, <a class="code hl_variable" href="a00615.xhtml#aae2cae830bdd03a817761582040a48bf">m_iNumObs</a>);</div>
<div class="line"><span class="lineno">  108</span>        <a class="code hl_variable" href="a00615.xhtml#ad1972227ea5e46dda3583343ca4bfdf7">m_ppfProb</a>[m][0] = ppfPEmission[m][0] * <a class="code hl_variable" href="a00615.xhtml#aeb1f5ece1eebddece837c8b25c9b51c3">m_pfStart</a>[m];</div>
<div class="line"><span class="lineno">  109</span>    }</div>
<div class="line"><span class="lineno">  110</span> </div>
<div class="line"><span class="lineno">  111</span> </div>
<div class="line"><span class="lineno">  112</span>    <span class="comment">// compute probability matrix and store backtracking path</span></div>
<div class="line"><span class="lineno">  113</span>    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> n = 1; n &lt; <a class="code hl_variable" href="a00615.xhtml#aae2cae830bdd03a817761582040a48bf">m_iNumObs</a>; n++)</div>
<div class="line"><span class="lineno">  114</span>    {</div>
<div class="line"><span class="lineno">  115</span>        <span class="keywordflow">for</span> (<span class="keywordtype">int</span> m = 0; m &lt; <a class="code hl_variable" href="a00615.xhtml#aa7b5ff16e7dce82a55dd7f6ccc603615">m_iNumStates</a>; m++)</div>
<div class="line"><span class="lineno">  116</span>        {</div>
<div class="line"><span class="lineno">  117</span>            <span class="comment">// find max of preceding times trans prob</span></div>
<div class="line"><span class="lineno">  118</span>            <span class="keywordtype">float</span> fMaxProb = 0;</div>
<div class="line"><span class="lineno">  119</span>            <span class="keywordflow">for</span> (<span class="keyword">auto</span> s = 0; s &lt; <a class="code hl_variable" href="a00615.xhtml#aa7b5ff16e7dce82a55dd7f6ccc603615">m_iNumStates</a>; s++)</div>
<div class="line"><span class="lineno">  120</span>            {</div>
<div class="line"><span class="lineno">  121</span>                <span class="keywordtype">float</span> fProbsm = <a class="code hl_variable" href="a00615.xhtml#ad1972227ea5e46dda3583343ca4bfdf7">m_ppfProb</a>[s][n - 1] * <a class="code hl_variable" href="a00615.xhtml#a9a6a55f1326056c6d8682175f3a00570">m_ppfTransProb</a>[s][m];</div>
<div class="line"><span class="lineno">  122</span>                <span class="keywordflow">if</span> (fProbsm &gt; fMaxProb)</div>
<div class="line"><span class="lineno">  123</span>                {</div>
<div class="line"><span class="lineno">  124</span>                    fMaxProb = fProbsm;</div>
<div class="line"><span class="lineno">  125</span>                    <a class="code hl_variable" href="a00615.xhtml#ad1972227ea5e46dda3583343ca4bfdf7">m_ppfProb</a>[m][n] = fMaxProb;</div>
<div class="line"><span class="lineno">  126</span>                    <a class="code hl_variable" href="a00615.xhtml#a886f45e563f269e36e666b7bc10cfff9">m_ppiPathIdx</a>[m][n] = s;</div>
<div class="line"><span class="lineno">  127</span>                }</div>
<div class="line"><span class="lineno">  128</span>            }</div>
<div class="line"><span class="lineno">  129</span>            <a class="code hl_variable" href="a00615.xhtml#ad1972227ea5e46dda3583343ca4bfdf7">m_ppfProb</a>[m][n] *= ppfPEmission[m][n];</div>
<div class="line"><span class="lineno">  130</span>        }</div>
<div class="line"><span class="lineno">  131</span>    }</div>
<div class="line"><span class="lineno">  132</span>}</div>
<div class="ttc" id="aa00495_xhtml_a4cf9544dd96801e3ee47fd1ef2049a1b"><div class="ttname"><a href="a00495.xhtml#a4cf9544dd96801e3ee47fd1ef2049a1b">CVector::setValue</a></div><div class="ttdeci">static void setValue(T *ptDest, T tValue, long long iLength)</div><div class="ttdef"><b>Definition:</b> <a href="a00155_source.xhtml#l00067">Vector.h:67</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00185_source.xhtml#l00071">m_iNumObs</a>, <a class="el" href="a00185_source.xhtml#l00070">m_iNumStates</a>, <a class="el" href="a00185_source.xhtml#l00065">m_pfStart</a>, <a class="el" href="a00185_source.xhtml#l00063">m_ppfProb</a>, <a class="el" href="a00185_source.xhtml#l00064">m_ppfTransProb</a>, <a class="el" href="a00185_source.xhtml#l00068">m_ppiPathIdx</a>, and <a class="el" href="a00155_source.xhtml#l00067">CVector::setValue()</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00080_source.xhtml#l00069">compViterbi()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00615_ae18a51101c1d13bf871a46b48aed8418_cgraph.svg" width="359" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00615_ae18a51101c1d13bf871a46b48aed8418_icgraph.svg" width="100%" height="300"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="a01e3528ba8c1fffb4b239e9e54dcc2fb" name="a01e3528ba8c1fffb4b239e9e54dcc2fb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a01e3528ba8c1fffb4b239e9e54dcc2fb">&#9670;&nbsp;</a></span>compViterbi()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00119.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> CViterbi::compViterbi </td>
          <td>(</td>
          <td class="paramtype">float **&#160;</td>
          <td class="paramname"><em>ppfPEmission</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="a00245.xhtml#abb452686968e48b67397da5f97445f5b">bool</a>&#160;</td>
          <td class="paramname"><em>bUseLogLikelihood</em> = <code><a class="el" href="a00245.xhtml#a41f9c5fb8b08eb5dc3edce4dcb37fee7">true</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >computes cost and path w/o back-tracking </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ppfPEmission</td><td>(dimensions iNumStates X iNumObservations) </td></tr>
    <tr><td class="paramname">bUseLogLikelihood</td><td>(use logarithmic likelihood - needed at least for longer sequences) </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Error_t </dd></dl>

<p class="definition">Definition at line <a class="el" href="a00080_source.xhtml#l00069">69</a> of file <a class="el" href="a00080_source.xhtml">ToolViterbi.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   70</span>{</div>
<div class="line"><span class="lineno">   71</span>    <span class="keywordflow">if</span> (!<a class="code hl_variable" href="a00615.xhtml#ab56cf94da025a3510acfa5721b8d116b">m_bIsInitialized</a>)</div>
<div class="line"><span class="lineno">   72</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00119.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fad0b37fe7dcc839e4cda4d7f5553d52cb">Error_t::kNotInitializedError</a>;</div>
<div class="line"><span class="lineno">   73</span> </div>
<div class="line"><span class="lineno">   74</span>    <span class="keywordflow">if</span> (!ppfPEmission)</div>
<div class="line"><span class="lineno">   75</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00119.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248">Error_t::kFunctionInvalidArgsError</a>;</div>
<div class="line"><span class="lineno">   76</span> </div>
<div class="line"><span class="lineno">   77</span>    assert(ppfPEmission[0]);</div>
<div class="line"><span class="lineno">   78</span> </div>
<div class="line"><span class="lineno">   79</span>    <span class="comment">// the computation of the probability matrix takes place here</span></div>
<div class="line"><span class="lineno">   80</span>    <span class="keywordflow">if</span> (!bUseLogLikelihood)</div>
<div class="line"><span class="lineno">   81</span>        <a class="code hl_function" href="a00615.xhtml#ae18a51101c1d13bf871a46b48aed8418">compProbability_</a>(ppfPEmission);</div>
<div class="line"><span class="lineno">   82</span>    <span class="keywordflow">else</span></div>
<div class="line"><span class="lineno">   83</span>        <a class="code hl_function" href="a00615.xhtml#ae2d59f488478d0124c18c5196ff26d81">compLogLikelihood_</a>(ppfPEmission);</div>
<div class="line"><span class="lineno">   84</span> </div>
<div class="line"><span class="lineno">   85</span>    <span class="comment">// find overall probability</span></div>
<div class="line"><span class="lineno">   86</span>    <a class="code hl_variable" href="a00615.xhtml#a06c115793e070d6b19c0d87e1f729667">m_fOverallProb</a> = -std::numeric_limits&lt;float&gt;::max();</div>
<div class="line"><span class="lineno">   87</span>    <span class="keywordflow">for</span> (<span class="keyword">auto</span> m = 0; m &lt; <a class="code hl_variable" href="a00615.xhtml#aa7b5ff16e7dce82a55dd7f6ccc603615">m_iNumStates</a>; m++)</div>
<div class="line"><span class="lineno">   88</span>    {</div>
<div class="line"><span class="lineno">   89</span>        <span class="keywordflow">if</span> (<a class="code hl_variable" href="a00615.xhtml#ad1972227ea5e46dda3583343ca4bfdf7">m_ppfProb</a>[m][<a class="code hl_variable" href="a00615.xhtml#aae2cae830bdd03a817761582040a48bf">m_iNumObs</a> - 1] &gt; <a class="code hl_variable" href="a00615.xhtml#a06c115793e070d6b19c0d87e1f729667">m_fOverallProb</a>)</div>
<div class="line"><span class="lineno">   90</span>        {</div>
<div class="line"><span class="lineno">   91</span>            <a class="code hl_variable" href="a00615.xhtml#a06c115793e070d6b19c0d87e1f729667">m_fOverallProb</a> = <a class="code hl_variable" href="a00615.xhtml#ad1972227ea5e46dda3583343ca4bfdf7">m_ppfProb</a>[m][<a class="code hl_variable" href="a00615.xhtml#aae2cae830bdd03a817761582040a48bf">m_iNumObs</a> - 1];</div>
<div class="line"><span class="lineno">   92</span>            <a class="code hl_variable" href="a00615.xhtml#a6350f4a0aeaa79e6150bb6fbceaf0ae5">m_iEndState</a> = m;</div>
<div class="line"><span class="lineno">   93</span>        }</div>
<div class="line"><span class="lineno">   94</span>    }</div>
<div class="line"><span class="lineno">   95</span> </div>
<div class="line"><span class="lineno">   96</span>    <span class="comment">// all done</span></div>
<div class="line"><span class="lineno">   97</span>    <a class="code hl_variable" href="a00615.xhtml#ad24c9e982f04ea536abb15c632489a6b">m_bWasProcessed</a> = <span class="keyword">true</span>;</div>
<div class="line"><span class="lineno">   98</span> </div>
<div class="line"><span class="lineno">   99</span>    <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00119.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><span class="lineno">  100</span>}</div>
<div class="ttc" id="aa00119_xhtml_a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248"><div class="ttname"><a href="a00119.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248">Error_t::kFunctionInvalidArgsError</a></div><div class="ttdeci">@ kFunctionInvalidArgsError</div></div>
<div class="ttc" id="aa00119_xhtml_a4e8c0d09726859e3d3369c0da5a1aa7fad0b37fe7dcc839e4cda4d7f5553d52cb"><div class="ttname"><a href="a00119.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fad0b37fe7dcc839e4cda4d7f5553d52cb">Error_t::kNotInitializedError</a></div><div class="ttdeci">@ kNotInitializedError</div></div>
<div class="ttc" id="aa00119_xhtml_a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b"><div class="ttname"><a href="a00119.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a></div><div class="ttdeci">@ kNoError</div></div>
<div class="ttc" id="aa00615_xhtml_a06c115793e070d6b19c0d87e1f729667"><div class="ttname"><a href="a00615.xhtml#a06c115793e070d6b19c0d87e1f729667">CViterbi::m_fOverallProb</a></div><div class="ttdeci">float m_fOverallProb</div><div class="ttdoc">resulting overall path probability</div><div class="ttdef"><b>Definition:</b> <a href="a00185_source.xhtml#l00066">ToolViterbi.h:66</a></div></div>
<div class="ttc" id="aa00615_xhtml_a6350f4a0aeaa79e6150bb6fbceaf0ae5"><div class="ttname"><a href="a00615.xhtml#a6350f4a0aeaa79e6150bb6fbceaf0ae5">CViterbi::m_iEndState</a></div><div class="ttdeci">int m_iEndState</div><div class="ttdoc">most likely end state</div><div class="ttdef"><b>Definition:</b> <a href="a00185_source.xhtml#l00072">ToolViterbi.h:72</a></div></div>
<div class="ttc" id="aa00615_xhtml_ab56cf94da025a3510acfa5721b8d116b"><div class="ttname"><a href="a00615.xhtml#ab56cf94da025a3510acfa5721b8d116b">CViterbi::m_bIsInitialized</a></div><div class="ttdeci">bool m_bIsInitialized</div><div class="ttdoc">true if init has been called</div><div class="ttdef"><b>Definition:</b> <a href="a00185_source.xhtml#l00076">ToolViterbi.h:76</a></div></div>
<div class="ttc" id="aa00615_xhtml_ad24c9e982f04ea536abb15c632489a6b"><div class="ttname"><a href="a00615.xhtml#ad24c9e982f04ea536abb15c632489a6b">CViterbi::m_bWasProcessed</a></div><div class="ttdeci">bool m_bWasProcessed</div><div class="ttdoc">true if compViterbi has been called</div><div class="ttdef"><b>Definition:</b> <a href="a00185_source.xhtml#l00077">ToolViterbi.h:77</a></div></div>
<div class="ttc" id="aa00615_xhtml_ae18a51101c1d13bf871a46b48aed8418"><div class="ttname"><a href="a00615.xhtml#ae18a51101c1d13bf871a46b48aed8418">CViterbi::compProbability_</a></div><div class="ttdeci">void compProbability_(float **ppfPEmission)</div><div class="ttdef"><b>Definition:</b> <a href="a00080_source.xhtml#l00102">ToolViterbi.cpp:102</a></div></div>
<div class="ttc" id="aa00615_xhtml_ae2d59f488478d0124c18c5196ff26d81"><div class="ttname"><a href="a00615.xhtml#ae2d59f488478d0124c18c5196ff26d81">CViterbi::compLogLikelihood_</a></div><div class="ttdeci">void compLogLikelihood_(float **ppfPEmission)</div><div class="ttdef"><b>Definition:</b> <a href="a00080_source.xhtml#l00134">ToolViterbi.cpp:134</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00080_source.xhtml#l00134">compLogLikelihood_()</a>, <a class="el" href="a00080_source.xhtml#l00102">compProbability_()</a>, <a class="el" href="a00119.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248">kFunctionInvalidArgsError</a>, <a class="el" href="a00119.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">kNoError</a>, <a class="el" href="a00119.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fad0b37fe7dcc839e4cda4d7f5553d52cb">kNotInitializedError</a>, <a class="el" href="a00185_source.xhtml#l00076">m_bIsInitialized</a>, <a class="el" href="a00185_source.xhtml#l00077">m_bWasProcessed</a>, <a class="el" href="a00185_source.xhtml#l00066">m_fOverallProb</a>, <a class="el" href="a00185_source.xhtml#l00072">m_iEndState</a>, <a class="el" href="a00185_source.xhtml#l00071">m_iNumObs</a>, <a class="el" href="a00185_source.xhtml#l00070">m_iNumStates</a>, and <a class="el" href="a00185_source.xhtml#l00063">m_ppfProb</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00110_source.xhtml#l00196">CChordIf::compChords()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00615_a01e3528ba8c1fffb4b239e9e54dcc2fb_cgraph.svg" width="571" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00615_a01e3528ba8c1fffb4b239e9e54dcc2fb_icgraph.svg" width="452" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a94e29fa23ee33171e0720842543773f7" name="a94e29fa23ee33171e0720842543773f7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a94e29fa23ee33171e0720842543773f7">&#9670;&nbsp;</a></span>getOverallProbability()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">float CViterbi::getOverallProbability </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >returns the overall probability </p><dl class="section return"><dt>Returns</dt><dd>float </dd></dl>

<p class="definition">Definition at line <a class="el" href="a00080_source.xhtml#l00169">169</a> of file <a class="el" href="a00080_source.xhtml">ToolViterbi.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  170</span>{</div>
<div class="line"><span class="lineno">  171</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="a00615.xhtml#a06c115793e070d6b19c0d87e1f729667">m_fOverallProb</a>;</div>
<div class="line"><span class="lineno">  172</span>}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00185_source.xhtml#l00066">m_fOverallProb</a>.</p>

</div>
</div>
<a id="ad38834e360270390b08848a9f6e60969" name="ad38834e360270390b08848a9f6e60969"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad38834e360270390b08848a9f6e60969">&#9670;&nbsp;</a></span>getStateSequence()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00119.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> CViterbi::getStateSequence </td>
          <td>(</td>
          <td class="paramtype">int *&#160;</td>
          <td class="paramname"><em>pistateSequence</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >returns the state sequence </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pistateSequence</td><td>pointer to memory the result is written to (user allocated, length iNumObservations) </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Error_t </dd></dl>

<p class="definition">Definition at line <a class="el" href="a00080_source.xhtml#l00174">174</a> of file <a class="el" href="a00080_source.xhtml">ToolViterbi.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  175</span>{</div>
<div class="line"><span class="lineno">  176</span>    <span class="keywordflow">if</span> (!piStateSequence)</div>
<div class="line"><span class="lineno">  177</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00119.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248">Error_t::kFunctionInvalidArgsError</a>;</div>
<div class="line"><span class="lineno">  178</span> </div>
<div class="line"><span class="lineno">  179</span>    <span class="keywordflow">if</span> (!<a class="code hl_variable" href="a00615.xhtml#ad24c9e982f04ea536abb15c632489a6b">m_bWasProcessed</a> || <a class="code hl_variable" href="a00615.xhtml#a6350f4a0aeaa79e6150bb6fbceaf0ae5">m_iEndState</a> &lt; 0)</div>
<div class="line"><span class="lineno">  180</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00119.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fad7652bf47cff43c21f12cb7df4ca66ec">Error_t::kFunctionIllegalCallError</a>;</div>
<div class="line"><span class="lineno">  181</span> </div>
<div class="line"><span class="lineno">  182</span>    <span class="keywordtype">int</span> iIdx = <a class="code hl_variable" href="a00615.xhtml#aae2cae830bdd03a817761582040a48bf">m_iNumObs</a> - 1;</div>
<div class="line"><span class="lineno">  183</span> </div>
<div class="line"><span class="lineno">  184</span>    <span class="comment">// init</span></div>
<div class="line"><span class="lineno">  185</span>    piStateSequence[iIdx] = <a class="code hl_variable" href="a00615.xhtml#a6350f4a0aeaa79e6150bb6fbceaf0ae5">m_iEndState</a>;</div>
<div class="line"><span class="lineno">  186</span> </div>
<div class="line"><span class="lineno">  187</span>    <span class="keywordflow">while</span> (iIdx &gt; 0)</div>
<div class="line"><span class="lineno">  188</span>    {</div>
<div class="line"><span class="lineno">  189</span>        piStateSequence[iIdx-1] = <a class="code hl_variable" href="a00615.xhtml#a886f45e563f269e36e666b7bc10cfff9">m_ppiPathIdx</a>[piStateSequence[iIdx]][iIdx];</div>
<div class="line"><span class="lineno">  190</span>        iIdx--;</div>
<div class="line"><span class="lineno">  191</span>    }</div>
<div class="line"><span class="lineno">  192</span> </div>
<div class="line"><span class="lineno">  193</span>    <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00119.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><span class="lineno">  194</span>}</div>
<div class="ttc" id="aa00119_xhtml_a4e8c0d09726859e3d3369c0da5a1aa7fad7652bf47cff43c21f12cb7df4ca66ec"><div class="ttname"><a href="a00119.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fad7652bf47cff43c21f12cb7df4ca66ec">Error_t::kFunctionIllegalCallError</a></div><div class="ttdeci">@ kFunctionIllegalCallError</div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00119.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fad7652bf47cff43c21f12cb7df4ca66ec">kFunctionIllegalCallError</a>, <a class="el" href="a00119.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248">kFunctionInvalidArgsError</a>, <a class="el" href="a00119.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">kNoError</a>, <a class="el" href="a00185_source.xhtml#l00077">m_bWasProcessed</a>, <a class="el" href="a00185_source.xhtml#l00072">m_iEndState</a>, <a class="el" href="a00185_source.xhtml#l00071">m_iNumObs</a>, and <a class="el" href="a00185_source.xhtml#l00068">m_ppiPathIdx</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00110_source.xhtml#l00196">CChordIf::compChords()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00615_ad38834e360270390b08848a9f6e60969_icgraph.svg" width="491" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a650535a050fd47b41632c2fc43e19a8d" name="a650535a050fd47b41632c2fc43e19a8d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a650535a050fd47b41632c2fc43e19a8d">&#9670;&nbsp;</a></span>init()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00119.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> CViterbi::init </td>
          <td>(</td>
          <td class="paramtype">float **&#160;</td>
          <td class="paramname"><em>ppfPTransition</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>pfPStart</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>iNumStates</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>iNumObservations</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >initializes the class </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ppfPTransition</td><td>transition probability matrix (dimension iNumStates X iNumStates) </td></tr>
    <tr><td class="paramname">pfPStart</td><td>start probabilities (length iNumStates) </td></tr>
    <tr><td class="paramname">iNumStates</td><td>number of states </td></tr>
    <tr><td class="paramname">iNumObservations</td><td>number of observations </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Error_t </dd></dl>

<p class="definition">Definition at line <a class="el" href="a00080_source.xhtml#l00017">17</a> of file <a class="el" href="a00080_source.xhtml">ToolViterbi.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   18</span>{</div>
<div class="line"><span class="lineno">   19</span>    <span class="keywordflow">if</span> (!ppfPTransition || !pfPStart)</div>
<div class="line"><span class="lineno">   20</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00119.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248">Error_t::kFunctionInvalidArgsError</a>;</div>
<div class="line"><span class="lineno">   21</span> </div>
<div class="line"><span class="lineno">   22</span>    <span class="keywordflow">if</span> (iNumStates &lt;= 0 || iNumObservations &lt;= 0)</div>
<div class="line"><span class="lineno">   23</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00119.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248">Error_t::kFunctionInvalidArgsError</a>;</div>
<div class="line"><span class="lineno">   24</span> </div>
<div class="line"><span class="lineno">   25</span>    assert(ppfPTransition[0]);</div>
<div class="line"><span class="lineno">   26</span> </div>
<div class="line"><span class="lineno">   27</span>    <a class="code hl_function" href="a00615.xhtml#acae19af3a95069496771f05336e4f94f">reset</a>();</div>
<div class="line"><span class="lineno">   28</span> </div>
<div class="line"><span class="lineno">   29</span>    <a class="code hl_variable" href="a00615.xhtml#aa7b5ff16e7dce82a55dd7f6ccc603615">m_iNumStates</a>  = iNumStates;</div>
<div class="line"><span class="lineno">   30</span>    <a class="code hl_variable" href="a00615.xhtml#aae2cae830bdd03a817761582040a48bf">m_iNumObs</a>  = iNumObservations;</div>
<div class="line"><span class="lineno">   31</span> </div>
<div class="line"><span class="lineno">   32</span>    <span class="comment">// allocate memory</span></div>
<div class="line"><span class="lineno">   33</span>    <a class="code hl_function" href="a00495.xhtml#abaadac98b1cad18b7b568852bc951696">CVector::alloc</a>(<a class="code hl_variable" href="a00615.xhtml#aeb1f5ece1eebddece837c8b25c9b51c3">m_pfStart</a>, <a class="code hl_variable" href="a00615.xhtml#aa7b5ff16e7dce82a55dd7f6ccc603615">m_iNumStates</a>);</div>
<div class="line"><span class="lineno">   34</span> </div>
<div class="line"><span class="lineno">   35</span>    <a class="code hl_function" href="a00479.xhtml#a6501b78d76c912d49eee88c8f7242923">CMatrix::alloc</a>(<a class="code hl_variable" href="a00615.xhtml#ad1972227ea5e46dda3583343ca4bfdf7">m_ppfProb</a>, <a class="code hl_variable" href="a00615.xhtml#aa7b5ff16e7dce82a55dd7f6ccc603615">m_iNumStates</a>, <a class="code hl_variable" href="a00615.xhtml#aae2cae830bdd03a817761582040a48bf">m_iNumObs</a>);</div>
<div class="line"><span class="lineno">   36</span> </div>
<div class="line"><span class="lineno">   37</span>    <a class="code hl_function" href="a00479.xhtml#a6501b78d76c912d49eee88c8f7242923">CMatrix::alloc</a>(<a class="code hl_variable" href="a00615.xhtml#a9a6a55f1326056c6d8682175f3a00570">m_ppfTransProb</a>, <a class="code hl_variable" href="a00615.xhtml#aa7b5ff16e7dce82a55dd7f6ccc603615">m_iNumStates</a>, <a class="code hl_variable" href="a00615.xhtml#aa7b5ff16e7dce82a55dd7f6ccc603615">m_iNumStates</a>);</div>
<div class="line"><span class="lineno">   38</span>    <a class="code hl_function" href="a00479.xhtml#a6501b78d76c912d49eee88c8f7242923">CMatrix::alloc</a>(<a class="code hl_variable" href="a00615.xhtml#a886f45e563f269e36e666b7bc10cfff9">m_ppiPathIdx</a>, <a class="code hl_variable" href="a00615.xhtml#aa7b5ff16e7dce82a55dd7f6ccc603615">m_iNumStates</a>, <a class="code hl_variable" href="a00615.xhtml#aae2cae830bdd03a817761582040a48bf">m_iNumObs</a>);</div>
<div class="line"><span class="lineno">   39</span> </div>
<div class="line"><span class="lineno">   40</span>    <span class="comment">// set values</span></div>
<div class="line"><span class="lineno">   41</span>    <a class="code hl_function" href="a00495.xhtml#ad7c5cba73e439adac77778f61c9418f0">CVector::copy</a>(<a class="code hl_variable" href="a00615.xhtml#aeb1f5ece1eebddece837c8b25c9b51c3">m_pfStart</a>, pfPStart, iNumStates);</div>
<div class="line"><span class="lineno">   42</span>    <a class="code hl_function" href="a00479.xhtml#a9f723a71e61f425d0ee9a51aa2162bf3">CMatrix::copy</a>(<a class="code hl_variable" href="a00615.xhtml#a9a6a55f1326056c6d8682175f3a00570">m_ppfTransProb</a>, ppfPTransition, <a class="code hl_variable" href="a00615.xhtml#aa7b5ff16e7dce82a55dd7f6ccc603615">m_iNumStates</a>, <a class="code hl_variable" href="a00615.xhtml#aa7b5ff16e7dce82a55dd7f6ccc603615">m_iNumStates</a>);</div>
<div class="line"><span class="lineno">   43</span> </div>
<div class="line"><span class="lineno">   44</span>    <span class="comment">// all done here</span></div>
<div class="line"><span class="lineno">   45</span>    <a class="code hl_variable" href="a00615.xhtml#ab56cf94da025a3510acfa5721b8d116b">m_bIsInitialized</a>    = <span class="keyword">true</span>;</div>
<div class="line"><span class="lineno">   46</span> </div>
<div class="line"><span class="lineno">   47</span>    <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00119.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><span class="lineno">   48</span>}</div>
<div class="ttc" id="aa00479_xhtml_a6501b78d76c912d49eee88c8f7242923"><div class="ttname"><a href="a00479.xhtml#a6501b78d76c912d49eee88c8f7242923">CMatrix::alloc</a></div><div class="ttdeci">static void alloc(T **&amp;pptMat, int iNumRows, int iNumCols)</div><div class="ttdef"><b>Definition:</b> <a href="a00149_source.xhtml#l00022">Matrix.h:22</a></div></div>
<div class="ttc" id="aa00479_xhtml_a9f723a71e61f425d0ee9a51aa2162bf3"><div class="ttname"><a href="a00479.xhtml#a9f723a71e61f425d0ee9a51aa2162bf3">CMatrix::copy</a></div><div class="ttdeci">static void copy(T **pptDestMat, T **pptSrcMat, int iNumRows, int iNumCols)</div><div class="ttdef"><b>Definition:</b> <a href="a00149_source.xhtml#l00694">Matrix.h:694</a></div></div>
<div class="ttc" id="aa00495_xhtml_abaadac98b1cad18b7b568852bc951696"><div class="ttname"><a href="a00495.xhtml#abaadac98b1cad18b7b568852bc951696">CVector::alloc</a></div><div class="ttdeci">static void alloc(T *&amp;ptVec, long long iLength)</div><div class="ttdef"><b>Definition:</b> <a href="a00155_source.xhtml#l00024">Vector.h:24</a></div></div>
<div class="ttc" id="aa00495_xhtml_ad7c5cba73e439adac77778f61c9418f0"><div class="ttname"><a href="a00495.xhtml#ad7c5cba73e439adac77778f61c9418f0">CVector::copy</a></div><div class="ttdeci">static void copy(T *ptDest, const T *ptSrc, long long int iLength)</div><div class="ttdef"><b>Definition:</b> <a href="a00155_source.xhtml#l00113">Vector.h:113</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00155_source.xhtml#l00024">CVector::alloc()</a>, <a class="el" href="a00149_source.xhtml#l00022">CMatrix::alloc()</a>, <a class="el" href="a00149_source.xhtml#l00694">CMatrix::copy()</a>, <a class="el" href="a00155_source.xhtml#l00113">CVector::copy()</a>, <a class="el" href="a00119.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248">kFunctionInvalidArgsError</a>, <a class="el" href="a00119.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">kNoError</a>, <a class="el" href="a00185_source.xhtml#l00076">m_bIsInitialized</a>, <a class="el" href="a00185_source.xhtml#l00071">m_iNumObs</a>, <a class="el" href="a00185_source.xhtml#l00070">m_iNumStates</a>, <a class="el" href="a00185_source.xhtml#l00065">m_pfStart</a>, <a class="el" href="a00185_source.xhtml#l00063">m_ppfProb</a>, <a class="el" href="a00185_source.xhtml#l00064">m_ppfTransProb</a>, <a class="el" href="a00185_source.xhtml#l00068">m_ppiPathIdx</a>, and <a class="el" href="a00080_source.xhtml#l00050">reset()</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00110_source.xhtml#l00413">CChordIf::initViterbi_()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00615_a650535a050fd47b41632c2fc43e19a8d_cgraph.svg" width="570" height="244"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00615_a650535a050fd47b41632c2fc43e19a8d_icgraph.svg" width="100%" height="378"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="a01e6ea216c35cbc03ee9e3c789462411" name="a01e6ea216c35cbc03ee9e3c789462411"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a01e6ea216c35cbc03ee9e3c789462411">&#9670;&nbsp;</a></span>operator=()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00615.xhtml">CViterbi</a> &amp; CViterbi::operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="a00615.xhtml">CViterbi</a> &amp;&#160;</td>
          <td class="paramname"><em>c</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="acae19af3a95069496771f05336e4f94f" name="acae19af3a95069496771f05336e4f94f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acae19af3a95069496771f05336e4f94f">&#9670;&nbsp;</a></span>reset()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00119.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> CViterbi::reset </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >resets all internal class members </p><dl class="section return"><dt>Returns</dt><dd>Error_t </dd></dl>

<p class="definition">Definition at line <a class="el" href="a00080_source.xhtml#l00050">50</a> of file <a class="el" href="a00080_source.xhtml">ToolViterbi.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   51</span>{</div>
<div class="line"><span class="lineno">   52</span>    <a class="code hl_variable" href="a00615.xhtml#ab56cf94da025a3510acfa5721b8d116b">m_bIsInitialized</a>    = <span class="keyword">false</span>;</div>
<div class="line"><span class="lineno">   53</span>    <a class="code hl_variable" href="a00615.xhtml#ad24c9e982f04ea536abb15c632489a6b">m_bWasProcessed</a>     = <span class="keyword">false</span>;</div>
<div class="line"><span class="lineno">   54</span> </div>
<div class="line"><span class="lineno">   55</span>    <a class="code hl_function" href="a00495.xhtml#aa86bdb0c663d4d52f2765793756f8737">CVector::free</a>(<a class="code hl_variable" href="a00615.xhtml#aeb1f5ece1eebddece837c8b25c9b51c3">m_pfStart</a>);</div>
<div class="line"><span class="lineno">   56</span> </div>
<div class="line"><span class="lineno">   57</span>    <a class="code hl_function" href="a00479.xhtml#a591097c6b1935c4d6273b3445f8f552b">CMatrix::free</a>(<a class="code hl_variable" href="a00615.xhtml#ad1972227ea5e46dda3583343ca4bfdf7">m_ppfProb</a>, <a class="code hl_variable" href="a00615.xhtml#aa7b5ff16e7dce82a55dd7f6ccc603615">m_iNumStates</a>);</div>
<div class="line"><span class="lineno">   58</span> </div>
<div class="line"><span class="lineno">   59</span>    <a class="code hl_function" href="a00479.xhtml#a591097c6b1935c4d6273b3445f8f552b">CMatrix::free</a>(<a class="code hl_variable" href="a00615.xhtml#a9a6a55f1326056c6d8682175f3a00570">m_ppfTransProb</a>, <a class="code hl_variable" href="a00615.xhtml#aa7b5ff16e7dce82a55dd7f6ccc603615">m_iNumStates</a>);</div>
<div class="line"><span class="lineno">   60</span>    <a class="code hl_function" href="a00479.xhtml#a591097c6b1935c4d6273b3445f8f552b">CMatrix::free</a>(<a class="code hl_variable" href="a00615.xhtml#a886f45e563f269e36e666b7bc10cfff9">m_ppiPathIdx</a>, <a class="code hl_variable" href="a00615.xhtml#aa7b5ff16e7dce82a55dd7f6ccc603615">m_iNumStates</a>);</div>
<div class="line"><span class="lineno">   61</span> </div>
<div class="line"><span class="lineno">   62</span>    <a class="code hl_variable" href="a00615.xhtml#aa7b5ff16e7dce82a55dd7f6ccc603615">m_iNumStates</a> = 0;</div>
<div class="line"><span class="lineno">   63</span>    <a class="code hl_variable" href="a00615.xhtml#aae2cae830bdd03a817761582040a48bf">m_iNumObs</a> = 0;</div>
<div class="line"><span class="lineno">   64</span>    <a class="code hl_variable" href="a00615.xhtml#a06c115793e070d6b19c0d87e1f729667">m_fOverallProb</a> = 0;</div>
<div class="line"><span class="lineno">   65</span> </div>
<div class="line"><span class="lineno">   66</span>    <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00119.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><span class="lineno">   67</span>}</div>
<div class="ttc" id="aa00479_xhtml_a591097c6b1935c4d6273b3445f8f552b"><div class="ttname"><a href="a00479.xhtml#a591097c6b1935c4d6273b3445f8f552b">CMatrix::free</a></div><div class="ttdeci">static void free(T **&amp;pptMat, int iNumRows)</div><div class="ttdef"><b>Definition:</b> <a href="a00149_source.xhtml#l00040">Matrix.h:40</a></div></div>
<div class="ttc" id="aa00495_xhtml_aa86bdb0c663d4d52f2765793756f8737"><div class="ttname"><a href="a00495.xhtml#aa86bdb0c663d4d52f2765793756f8737">CVector::free</a></div><div class="ttdeci">static void free(T *&amp;ptVec)</div><div class="ttdef"><b>Definition:</b> <a href="a00155_source.xhtml#l00039">Vector.h:39</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00155_source.xhtml#l00039">CVector::free()</a>, <a class="el" href="a00149_source.xhtml#l00040">CMatrix::free()</a>, <a class="el" href="a00119.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">kNoError</a>, <a class="el" href="a00185_source.xhtml#l00076">m_bIsInitialized</a>, <a class="el" href="a00185_source.xhtml#l00077">m_bWasProcessed</a>, <a class="el" href="a00185_source.xhtml#l00066">m_fOverallProb</a>, <a class="el" href="a00185_source.xhtml#l00071">m_iNumObs</a>, <a class="el" href="a00185_source.xhtml#l00070">m_iNumStates</a>, <a class="el" href="a00185_source.xhtml#l00065">m_pfStart</a>, <a class="el" href="a00185_source.xhtml#l00063">m_ppfProb</a>, <a class="el" href="a00185_source.xhtml#l00064">m_ppfTransProb</a>, and <a class="el" href="a00185_source.xhtml#l00068">m_ppiPathIdx</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00080_source.xhtml#l00007">CViterbi()</a>, <a class="el" href="a00080_source.xhtml#l00017">init()</a>, and <a class="el" href="a00080_source.xhtml#l00012">~CViterbi()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00615_acae19af3a95069496771f05336e4f94f_cgraph.svg" width="402" height="63"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00615_acae19af3a95069496771f05336e4f94f_icgraph.svg" width="100%" height="404"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="ab56cf94da025a3510acfa5721b8d116b" name="ab56cf94da025a3510acfa5721b8d116b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab56cf94da025a3510acfa5721b8d116b">&#9670;&nbsp;</a></span>m_bIsInitialized</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00245.xhtml#abb452686968e48b67397da5f97445f5b">bool</a> CViterbi::m_bIsInitialized = <a class="el" href="a00245.xhtml#a65e9886d74aaee76545e83dd09011727">false</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>true if init has been called </p>

<p class="definition">Definition at line <a class="el" href="a00185_source.xhtml#l00076">76</a> of file <a class="el" href="a00185_source.xhtml">ToolViterbi.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00080_source.xhtml#l00069">compViterbi()</a>, <a class="el" href="a00080_source.xhtml#l00017">init()</a>, and <a class="el" href="a00080_source.xhtml#l00050">reset()</a>.</p>

</div>
</div>
<a id="ad24c9e982f04ea536abb15c632489a6b" name="ad24c9e982f04ea536abb15c632489a6b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad24c9e982f04ea536abb15c632489a6b">&#9670;&nbsp;</a></span>m_bWasProcessed</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00245.xhtml#abb452686968e48b67397da5f97445f5b">bool</a> CViterbi::m_bWasProcessed = <a class="el" href="a00245.xhtml#a65e9886d74aaee76545e83dd09011727">false</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>true if compViterbi has been called </p>

<p class="definition">Definition at line <a class="el" href="a00185_source.xhtml#l00077">77</a> of file <a class="el" href="a00185_source.xhtml">ToolViterbi.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00080_source.xhtml#l00069">compViterbi()</a>, <a class="el" href="a00080_source.xhtml#l00174">getStateSequence()</a>, and <a class="el" href="a00080_source.xhtml#l00050">reset()</a>.</p>

</div>
</div>
<a id="a06c115793e070d6b19c0d87e1f729667" name="a06c115793e070d6b19c0d87e1f729667"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a06c115793e070d6b19c0d87e1f729667">&#9670;&nbsp;</a></span>m_fOverallProb</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float CViterbi::m_fOverallProb = -1e30F</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>resulting overall path probability </p>

<p class="definition">Definition at line <a class="el" href="a00185_source.xhtml#l00066">66</a> of file <a class="el" href="a00185_source.xhtml">ToolViterbi.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00080_source.xhtml#l00069">compViterbi()</a>, <a class="el" href="a00080_source.xhtml#l00169">getOverallProbability()</a>, and <a class="el" href="a00080_source.xhtml#l00050">reset()</a>.</p>

</div>
</div>
<a id="a6350f4a0aeaa79e6150bb6fbceaf0ae5" name="a6350f4a0aeaa79e6150bb6fbceaf0ae5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6350f4a0aeaa79e6150bb6fbceaf0ae5">&#9670;&nbsp;</a></span>m_iEndState</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int CViterbi::m_iEndState = -1</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>most likely end state </p>

<p class="definition">Definition at line <a class="el" href="a00185_source.xhtml#l00072">72</a> of file <a class="el" href="a00185_source.xhtml">ToolViterbi.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00080_source.xhtml#l00069">compViterbi()</a>, and <a class="el" href="a00080_source.xhtml#l00174">getStateSequence()</a>.</p>

</div>
</div>
<a id="aae2cae830bdd03a817761582040a48bf" name="aae2cae830bdd03a817761582040a48bf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aae2cae830bdd03a817761582040a48bf">&#9670;&nbsp;</a></span>m_iNumObs</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int CViterbi::m_iNumObs = 0</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>number of observations </p>

<p class="definition">Definition at line <a class="el" href="a00185_source.xhtml#l00071">71</a> of file <a class="el" href="a00185_source.xhtml">ToolViterbi.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00080_source.xhtml#l00134">compLogLikelihood_()</a>, <a class="el" href="a00080_source.xhtml#l00102">compProbability_()</a>, <a class="el" href="a00080_source.xhtml#l00069">compViterbi()</a>, <a class="el" href="a00080_source.xhtml#l00174">getStateSequence()</a>, <a class="el" href="a00080_source.xhtml#l00017">init()</a>, and <a class="el" href="a00080_source.xhtml#l00050">reset()</a>.</p>

</div>
</div>
<a id="aa7b5ff16e7dce82a55dd7f6ccc603615" name="aa7b5ff16e7dce82a55dd7f6ccc603615"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa7b5ff16e7dce82a55dd7f6ccc603615">&#9670;&nbsp;</a></span>m_iNumStates</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int CViterbi::m_iNumStates = 0</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>number of states </p>

<p class="definition">Definition at line <a class="el" href="a00185_source.xhtml#l00070">70</a> of file <a class="el" href="a00185_source.xhtml">ToolViterbi.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00080_source.xhtml#l00134">compLogLikelihood_()</a>, <a class="el" href="a00080_source.xhtml#l00102">compProbability_()</a>, <a class="el" href="a00080_source.xhtml#l00069">compViterbi()</a>, <a class="el" href="a00080_source.xhtml#l00017">init()</a>, and <a class="el" href="a00080_source.xhtml#l00050">reset()</a>.</p>

</div>
</div>
<a id="aac4d5ae838ef1324b4330b1d4c4b16f6" name="aac4d5ae838ef1324b4330b1d4c4b16f6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aac4d5ae838ef1324b4330b1d4c4b16f6">&#9670;&nbsp;</a></span>m_kLogMin</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const float CViterbi::m_kLogMin = 1e-30F</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>constant to avoid log(0) </p>

<p class="definition">Definition at line <a class="el" href="a00185_source.xhtml#l00074">74</a> of file <a class="el" href="a00185_source.xhtml">ToolViterbi.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00080_source.xhtml#l00134">compLogLikelihood_()</a>.</p>

</div>
</div>
<a id="aeb1f5ece1eebddece837c8b25c9b51c3" name="aeb1f5ece1eebddece837c8b25c9b51c3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aeb1f5ece1eebddece837c8b25c9b51c3">&#9670;&nbsp;</a></span>m_pfStart</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float* CViterbi::m_pfStart = 0</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>start probability vector </p>

<p class="definition">Definition at line <a class="el" href="a00185_source.xhtml#l00065">65</a> of file <a class="el" href="a00185_source.xhtml">ToolViterbi.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00080_source.xhtml#l00134">compLogLikelihood_()</a>, <a class="el" href="a00080_source.xhtml#l00102">compProbability_()</a>, <a class="el" href="a00080_source.xhtml#l00017">init()</a>, and <a class="el" href="a00080_source.xhtml#l00050">reset()</a>.</p>

</div>
</div>
<a id="ad1972227ea5e46dda3583343ca4bfdf7" name="ad1972227ea5e46dda3583343ca4bfdf7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad1972227ea5e46dda3583343ca4bfdf7">&#9670;&nbsp;</a></span>m_ppfProb</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float** CViterbi::m_ppfProb = 0</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>probability matrix </p>

<p class="definition">Definition at line <a class="el" href="a00185_source.xhtml#l00063">63</a> of file <a class="el" href="a00185_source.xhtml">ToolViterbi.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00080_source.xhtml#l00134">compLogLikelihood_()</a>, <a class="el" href="a00080_source.xhtml#l00102">compProbability_()</a>, <a class="el" href="a00080_source.xhtml#l00069">compViterbi()</a>, <a class="el" href="a00080_source.xhtml#l00017">init()</a>, and <a class="el" href="a00080_source.xhtml#l00050">reset()</a>.</p>

</div>
</div>
<a id="a9a6a55f1326056c6d8682175f3a00570" name="a9a6a55f1326056c6d8682175f3a00570"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9a6a55f1326056c6d8682175f3a00570">&#9670;&nbsp;</a></span>m_ppfTransProb</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float** CViterbi::m_ppfTransProb = 0</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>transition probability matrix </p>

<p class="definition">Definition at line <a class="el" href="a00185_source.xhtml#l00064">64</a> of file <a class="el" href="a00185_source.xhtml">ToolViterbi.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00080_source.xhtml#l00134">compLogLikelihood_()</a>, <a class="el" href="a00080_source.xhtml#l00102">compProbability_()</a>, <a class="el" href="a00080_source.xhtml#l00017">init()</a>, and <a class="el" href="a00080_source.xhtml#l00050">reset()</a>.</p>

</div>
</div>
<a id="a886f45e563f269e36e666b7bc10cfff9" name="a886f45e563f269e36e666b7bc10cfff9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a886f45e563f269e36e666b7bc10cfff9">&#9670;&nbsp;</a></span>m_ppiPathIdx</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int** CViterbi::m_ppiPathIdx = 0</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>matrix with directions for traceback </p>

<p class="definition">Definition at line <a class="el" href="a00185_source.xhtml#l00068">68</a> of file <a class="el" href="a00185_source.xhtml">ToolViterbi.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00080_source.xhtml#l00134">compLogLikelihood_()</a>, <a class="el" href="a00080_source.xhtml#l00102">compProbability_()</a>, <a class="el" href="a00080_source.xhtml#l00174">getStateSequence()</a>, <a class="el" href="a00080_source.xhtml#l00017">init()</a>, and <a class="el" href="a00080_source.xhtml#l00050">reset()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="a00185_source.xhtml">ToolViterbi.h</a></li>
<li><a class="el" href="a00080_source.xhtml">ToolViterbi.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="a00615.xhtml">CViterbi</a></li>
    <li class="footer">Generated on Mon Jun 13 2022 22:01:50 for ACA by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.4 </li>
  </ul>
</div>
</body>
</html>
