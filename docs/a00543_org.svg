<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 4.0.0 (20220602.1335)
 -->
<!-- Title: CGammaToneFbIf Pages: 1 -->
<svg width="582pt" height="2147pt"
 viewBox="0.00 0.00 582.00 2147.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 2143)">
<title>CGammaToneFbIf</title>
<polygon fill="white" stroke="transparent" points="-4,4 -4,-2143 578,-2143 578,4 -4,4"/>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="class for computation of a Gammatone filterbank output from either a file or a vector">
<polygon fill="#bfbfbf" stroke="black" points="151,-0.5 151,-475.5 345,-475.5 345,-0.5 151,-0.5"/>
<text text-anchor="middle" x="248" y="-463.5" font-family="Helvetica,sans-Serif" font-size="10.00">CGammaToneFbIf</text>
<polyline fill="none" stroke="black" points="151,-456.5 345,-456.5 "/>
<text text-anchor="start" x="159" y="-444.5" font-family="Helvetica,sans-Serif" font-size="10.00"># const int m_iBlockLength</text>
<text text-anchor="start" x="159" y="-433.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iNumBands</text>
<text text-anchor="start" x="159" y="-422.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float m_fSampleRate</text>
<text text-anchor="start" x="159" y="-411.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float m_fStartInHz</text>
<text text-anchor="start" x="159" y="-400.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float * m_pfProcessBuff</text>
<text text-anchor="start" x="159" y="-389.5" font-family="Helvetica,sans-Serif" font-size="10.00"># bool m_bIsInitialized</text>
<polyline fill="none" stroke="black" points="151,-382.5 345,-382.5 "/>
<text text-anchor="start" x="159" y="-370.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getOutputDimensions</text>
<text text-anchor="start" x="159" y="-359.5" font-family="Helvetica,sans-Serif" font-size="10.00">(long long &amp;iNumRows, long</text>
<text text-anchor="start" x="159" y="-348.5" font-family="Helvetica,sans-Serif" font-size="10.00"> long &amp;iNumCols) const</text>
<text text-anchor="start" x="159" y="-337.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ float getCenterFreq</text>
<text text-anchor="start" x="159" y="-326.5" font-family="Helvetica,sans-Serif" font-size="10.00">(int iBandIdx) const</text>
<text text-anchor="start" x="159" y="-315.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t process(float</text>
<text text-anchor="start" x="159" y="-304.5" font-family="Helvetica,sans-Serif" font-size="10.00"> **ppfOutput, const float</text>
<text text-anchor="start" x="159" y="-293.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfInput=0, long long iNumSamples=0)</text>
<text text-anchor="start" x="159" y="-282.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="159" y="-271.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CGammaToneFbIf *&amp;pCInstance,</text>
<text text-anchor="start" x="159" y="-260.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const std::string &amp;strAudioFilePath,</text>
<text text-anchor="start" x="159" y="-249.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iNumBands=20, float fStartInHz=100)</text>
<text text-anchor="start" x="159" y="-238.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="159" y="-227.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CGammaToneFbIf *&amp;pCInstance,</text>
<text text-anchor="start" x="159" y="-216.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const float *pfAudio, long</text>
<text text-anchor="start" x="159" y="-205.5" font-family="Helvetica,sans-Serif" font-size="10.00"> long iNumSamples, float fSampleRate,</text>
<text text-anchor="start" x="159" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iNumBands=20, float fStartInHz=100)</text>
<text text-anchor="start" x="159" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="159" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CGammaToneFbIf *&amp;pCInstance,</text>
<text text-anchor="start" x="159" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate, int iNumBands</text>
<text text-anchor="start" x="159" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00">=20, float fStartInHz=100)</text>
<text text-anchor="start" x="159" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="159" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CGammaToneFbIf *&amp;pCInstance)</text>
<text text-anchor="start" x="159" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CGammaToneFbIf()</text>
<text text-anchor="start" x="159" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CGammaToneFbIf()</text>
<text text-anchor="start" x="159" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CGammaToneFbIf(const</text>
<text text-anchor="start" x="159" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00"> CGammaToneFbIf &amp;that)</text>
<text text-anchor="start" x="159" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CGammaToneFbIf &amp; operator</text>
<text text-anchor="start" x="159" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CGammaToneFbIf &amp;c)</text>
<text text-anchor="start" x="159" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t reset_()</text>
<text text-anchor="start" x="159" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t init_()</text>
<text text-anchor="start" x="159" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float compMidFreqs</text>
<text text-anchor="start" x="159" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">_(float fFreqLow, float</text>
<text text-anchor="start" x="159" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00"> fFreqHigh, int k) const</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="a00577.xhtml" target="_top" xlink:title="class for audio normalization offering three options">
<polygon fill="white" stroke="black" points="0,-622.5 0,-855.5 150,-855.5 150,-622.5 0,-622.5"/>
<text text-anchor="middle" x="75" y="-843.5" font-family="Helvetica,sans-Serif" font-size="10.00">CNormalizeAudio</text>
<polyline fill="none" stroke="black" points="0,-836.5 150,-836.5 "/>
<text text-anchor="start" x="8" y="-824.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float m_fScaleFactor</text>
<polyline fill="none" stroke="black" points="0,-817.5 150,-817.5 "/>
<text text-anchor="start" x="8" y="-805.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CNormalizeAudio(CAudioFile</text>
<text text-anchor="start" x="8" y="-794.5" font-family="Helvetica,sans-Serif" font-size="10.00">If *pCAudioFile)</text>
<text text-anchor="start" x="8" y="-783.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CNormalizeAudio(const</text>
<text text-anchor="start" x="8" y="-772.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfAudioBuff, long</text>
<text text-anchor="start" x="8" y="-761.5" font-family="Helvetica,sans-Serif" font-size="10.00"> long iAudioLength)</text>
<text text-anchor="start" x="8" y="-750.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CNormalizeAudio()</text>
<text text-anchor="start" x="8" y="-739.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void normalizeBlock</text>
<text text-anchor="start" x="8" y="-728.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfAudioBlock,</text>
<text text-anchor="start" x="8" y="-717.5" font-family="Helvetica,sans-Serif" font-size="10.00"> long long iNumSamples)</text>
<text text-anchor="start" x="8" y="-706.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static void normalizeSignal</text>
<text text-anchor="start" x="8" y="-695.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfAudio, long long</text>
<text text-anchor="start" x="8" y="-684.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iNumSamples)</text>
<text text-anchor="start" x="8" y="-673.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CNormalizeAudio()</text>
<text text-anchor="start" x="8" y="-662.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CNormalizeAudio(const</text>
<text text-anchor="start" x="8" y="-651.5" font-family="Helvetica,sans-Serif" font-size="10.00"> CNormalizeAudio &amp;that)</text>
<text text-anchor="start" x="8" y="-640.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CNormalizeAudio &amp; operator</text>
<text text-anchor="start" x="8" y="-629.5" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CNormalizeAudio &amp;c)</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="#404040" d="M115.12,-622.27C129.22,-581.62 145.64,-534.25 162.04,-486.95"/>
<polygon fill="none" stroke="#404040" points="162.05,-486.91 160.24,-479.94 165.98,-475.58 167.79,-482.56 162.05,-486.91"/>
<text text-anchor="middle" x="195.5" y="-497" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCNormalize</text>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="a00529.xhtml" target="_top" xlink:title="forward declaration">
<polygon fill="white" stroke="black" points="168,-523.5 168,-954.5 328,-954.5 328,-523.5 168,-523.5"/>
<text text-anchor="middle" x="248" y="-942.5" font-family="Helvetica,sans-Serif" font-size="10.00">CBlockAudioIf</text>
<polyline fill="none" stroke="black" points="168,-935.5 328,-935.5 "/>
<text text-anchor="start" x="176" y="-923.5" font-family="Helvetica,sans-Serif" font-size="10.00"># long long m_iNumBlocks</text>
<text text-anchor="start" x="176" y="-912.5" font-family="Helvetica,sans-Serif" font-size="10.00"># long long m_iCurrBlock</text>
<text text-anchor="start" x="176" y="-901.5" font-family="Helvetica,sans-Serif" font-size="10.00"># long long m_iAudioLength</text>
<text text-anchor="start" x="176" y="-890.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iBlockLength</text>
<text text-anchor="start" x="176" y="-879.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iNumChannels</text>
<text text-anchor="start" x="176" y="-868.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iHopLength</text>
<text text-anchor="start" x="176" y="-857.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float m_fSampleRate</text>
<polyline fill="none" stroke="black" points="168,-850.5 328,-850.5 "/>
<text text-anchor="start" x="176" y="-838.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ long long getNumBlocks</text>
<text text-anchor="start" x="176" y="-827.5" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="176" y="-816.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ long long getLengthInSamples</text>
<text text-anchor="start" x="176" y="-805.5" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="176" y="-794.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ float getTimeStamp</text>
<text text-anchor="start" x="176" y="-783.5" font-family="Helvetica,sans-Serif" font-size="10.00">(long long iBlockIdx)</text>
<text text-anchor="start" x="176" y="-772.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual bool isEndOfData</text>
<text text-anchor="start" x="176" y="-761.5" font-family="Helvetica,sans-Serif" font-size="10.00">() const =0</text>
<text text-anchor="start" x="176" y="-750.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual int getNextBlock</text>
<text text-anchor="start" x="176" y="-739.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfBlock, float</text>
<text text-anchor="start" x="176" y="-728.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfTimeStampInS=0)=0</text>
<text text-anchor="start" x="176" y="-717.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="176" y="-706.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CBlockAudioIf *&amp;pCInstance,</text>
<text text-anchor="start" x="176" y="-695.5" font-family="Helvetica,sans-Serif" font-size="10.00"> CAudioFileIf *pCAudioFile,</text>
<text text-anchor="start" x="176" y="-684.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iBlockLength, int iHopLength)</text>
<text text-anchor="start" x="176" y="-673.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="176" y="-662.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CBlockAudioIf *&amp;pCInstance,</text>
<text text-anchor="start" x="176" y="-651.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const float *pfAudioBuff,</text>
<text text-anchor="start" x="176" y="-640.5" font-family="Helvetica,sans-Serif" font-size="10.00"> long long iAudioLength, int</text>
<text text-anchor="start" x="176" y="-629.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iBlockLength, int iHopLength,</text>
<text text-anchor="start" x="176" y="-618.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate)</text>
<text text-anchor="start" x="176" y="-607.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="176" y="-596.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CBlockAudioIf *&amp;pCInstance)</text>
<text text-anchor="start" x="176" y="-585.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CBlockAudioIf()</text>
<text text-anchor="start" x="176" y="-574.5" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CBlockAudioIf()</text>
<text text-anchor="start" x="176" y="-563.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CBlockAudioIf(const</text>
<text text-anchor="start" x="176" y="-552.5" font-family="Helvetica,sans-Serif" font-size="10.00"> CBlockAudioIf &amp;that)</text>
<text text-anchor="start" x="176" y="-541.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CBlockAudioIf &amp; operator</text>
<text text-anchor="start" x="176" y="-530.5" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CBlockAudioIf &amp;c)</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node1 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node1</title>
<path fill="none" stroke="#404040" d="M248,-523.48C248,-511.72 248,-499.85 248,-487.98"/>
<polygon fill="none" stroke="#404040" points="248,-487.62 244,-481.62 248,-475.62 252,-481.62 248,-487.62"/>
<text text-anchor="middle" x="289.5" y="-497" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCBlockAudio</text>
</g>
<!-- Node4 -->
<g id="node4" class="node">
<title>Node4</title>
<g id="a_node4"><a xlink:href="a00409.xhtml" target="_top" xlink:title="class for a single gammtone filter">
<polygon fill="white" stroke="black" points="346.5,-611.5 346.5,-866.5 517.5,-866.5 517.5,-611.5 346.5,-611.5"/>
<text text-anchor="middle" x="432" y="-854.5" font-family="Helvetica,sans-Serif" font-size="10.00">CGammatone</text>
<polyline fill="none" stroke="black" points="346.5,-847.5 517.5,-847.5 "/>
<text text-anchor="start" x="354.5" y="-835.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float m_fFreqCenter</text>
<text text-anchor="start" x="354.5" y="-824.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float m_fSampleRate</text>
<text text-anchor="start" x="354.5" y="-813.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float m_aafCoeffB</text>
<text text-anchor="start" x="354.5" y="-802.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float m_aafCoeffA</text>
<text text-anchor="start" x="354.5" y="-791.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; bool m_bIsInitialized</text>
<polyline fill="none" stroke="black" points="346.5,-784.5 517.5,-784.5 "/>
<text text-anchor="start" x="354.5" y="-772.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CGammatone()</text>
<text text-anchor="start" x="354.5" y="-761.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CGammatone()</text>
<text text-anchor="start" x="354.5" y="-750.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t init(float</text>
<text text-anchor="start" x="354.5" y="-739.5" font-family="Helvetica,sans-Serif" font-size="10.00"> fFreqCenter, float</text>
<text text-anchor="start" x="354.5" y="-728.5" font-family="Helvetica,sans-Serif" font-size="10.00"> fSampleRate)</text>
<text text-anchor="start" x="354.5" y="-717.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t process(float</text>
<text text-anchor="start" x="354.5" y="-706.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfOutput, const float</text>
<text text-anchor="start" x="354.5" y="-695.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfInput, long long iNumSamples)</text>
<text text-anchor="start" x="354.5" y="-684.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t reset()</text>
<text text-anchor="start" x="354.5" y="-673.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CGammatone(const CGammatone</text>
<text text-anchor="start" x="354.5" y="-662.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;that)</text>
<text text-anchor="start" x="354.5" y="-651.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CGammatone &amp; operator</text>
<text text-anchor="start" x="354.5" y="-640.5" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CGammatone &amp;c)</text>
<text text-anchor="start" x="354.5" y="-629.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; void calcFilterCoeffs</text>
<text text-anchor="start" x="354.5" y="-618.5" font-family="Helvetica,sans-Serif" font-size="10.00">_(int iOrder=1)</text>
</a>
</g>
</g>
<!-- Node4&#45;&gt;Node1 -->
<g id="edge3" class="edge">
<title>Node4&#45;&gt;Node1</title>
<path fill="none" stroke="#404040" d="M385.33,-611.44C371.28,-573.32 355.34,-530.1 339.43,-486.94"/>
<polygon fill="none" stroke="#404040" points="339.42,-486.94 333.6,-482.69 335.27,-475.68 341.1,-479.92 339.42,-486.94"/>
<text text-anchor="middle" x="391" y="-497" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_ppCGammatone</text>
</g>
<!-- Node5 -->
<g id="node5" class="node">
<title>Node5</title>
<g id="a_node5"><a xlink:href="a00465.xhtml" target="_top" xlink:title=" ">
<polygon fill="white" stroke="black" points="357.5,-1002.5 357.5,-1334.5 506.5,-1334.5 506.5,-1002.5 357.5,-1002.5"/>
<text text-anchor="middle" x="432" y="-1322.5" font-family="Helvetica,sans-Serif" font-size="10.00">CFilter&lt; float &gt;</text>
<polyline fill="none" stroke="black" points="357.5,-1315.5 506.5,-1315.5 "/>
<text text-anchor="start" x="365.5" y="-1303.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_aptCoeff</text>
<text text-anchor="start" x="365.5" y="-1292.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_ptProcBuff</text>
<text text-anchor="start" x="365.5" y="-1281.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iNumFilterCoeffs</text>
<text text-anchor="start" x="365.5" y="-1270.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; bool m_bisInitialized</text>
<polyline fill="none" stroke="black" points="357.5,-1263.5 506.5,-1263.5 "/>
<text text-anchor="start" x="365.5" y="-1251.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CFilter()</text>
<text text-anchor="start" x="365.5" y="-1240.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CFilter()</text>
<text text-anchor="start" x="365.5" y="-1229.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t init(const</text>
<text text-anchor="start" x="365.5" y="-1218.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfB, const float</text>
<text text-anchor="start" x="365.5" y="-1207.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfA, int iNumCoeffs)</text>
<text text-anchor="start" x="365.5" y="-1196.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t reset(bool</text>
<text text-anchor="start" x="365.5" y="-1185.5" font-family="Helvetica,sans-Serif" font-size="10.00"> bFreeMem=true)</text>
<text text-anchor="start" x="365.5" y="-1174.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t process(float</text>
<text text-anchor="start" x="365.5" y="-1163.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfOut, const float</text>
<text text-anchor="start" x="365.5" y="-1152.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfIn, long long iNumSamples)</text>
<text text-anchor="start" x="365.5" y="-1141.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t processDFII</text>
<text text-anchor="start" x="365.5" y="-1130.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfOut, const</text>
<text text-anchor="start" x="365.5" y="-1119.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfIn, long long</text>
<text text-anchor="start" x="365.5" y="-1108.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iNumSamples)</text>
<text text-anchor="start" x="365.5" y="-1097.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t filtfilt(float</text>
<text text-anchor="start" x="365.5" y="-1086.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfOut, const float *pfIn,</text>
<text text-anchor="start" x="365.5" y="-1075.5" font-family="Helvetica,sans-Serif" font-size="10.00"> long long iNumSamples)</text>
<text text-anchor="start" x="365.5" y="-1064.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CFilter(const CFilter</text>
<text text-anchor="start" x="365.5" y="-1053.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;that)</text>
<text text-anchor="start" x="365.5" y="-1042.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CFilter &amp; operator</text>
<text text-anchor="start" x="365.5" y="-1031.5" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CFilter &amp;c)</text>
<text text-anchor="start" x="365.5" y="-1020.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; void setInitState_</text>
<text text-anchor="start" x="365.5" y="-1009.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float fWeight)</text>
</a>
</g>
</g>
<!-- Node5&#45;&gt;Node4 -->
<g id="edge4" class="edge">
<title>Node5&#45;&gt;Node4</title>
<path fill="none" stroke="#404040" d="M432,-1002.22C432,-961.44 432,-918.18 432,-878.81"/>
<polygon fill="none" stroke="#404040" points="432,-878.72 428,-872.72 432,-866.72 436,-872.72 432,-878.72"/>
<text text-anchor="middle" x="461" y="-976" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;m_apCFilter</text>
</g>
<!-- Node6 -->
<g id="node6" class="node">
<title>Node6</title>
<g id="a_node6"><a xlink:href="a00477.xhtml" target="_top" xlink:title=" ">
<polygon fill="white" stroke="black" points="290.5,-1382.5 290.5,-1747.5 423.5,-1747.5 423.5,-1382.5 290.5,-1382.5"/>
<text text-anchor="middle" x="357" y="-1735.5" font-family="Helvetica,sans-Serif" font-size="10.00">CRingBuffer&lt; float &gt;</text>
<polyline fill="none" stroke="black" points="290.5,-1728.5 423.5,-1728.5 "/>
<text text-anchor="start" x="298.5" y="-1716.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iBuffLength</text>
<text text-anchor="start" x="298.5" y="-1705.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iReadIdx</text>
<text text-anchor="start" x="298.5" y="-1694.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iWriteIdx</text>
<text text-anchor="start" x="298.5" y="-1683.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_ptBuff</text>
<polyline fill="none" stroke="black" points="290.5,-1676.5 423.5,-1676.5 "/>
<text text-anchor="start" x="298.5" y="-1664.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CRingBuffer(int iBuffer</text>
<text text-anchor="start" x="298.5" y="-1653.5" font-family="Helvetica,sans-Serif" font-size="10.00">LengthInSamples)</text>
<text text-anchor="start" x="298.5" y="-1642.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CRingBuffer()</text>
<text text-anchor="start" x="298.5" y="-1631.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void putPostInc(float</text>
<text text-anchor="start" x="298.5" y="-1620.5" font-family="Helvetica,sans-Serif" font-size="10.00"> tNewValue)</text>
<text text-anchor="start" x="298.5" y="-1609.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void putPostInc(const</text>
<text text-anchor="start" x="298.5" y="-1598.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *ptNewBuff, int</text>
<text text-anchor="start" x="298.5" y="-1587.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iLength)</text>
<text text-anchor="start" x="298.5" y="-1576.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void put(float tNewValue)</text>
<text text-anchor="start" x="298.5" y="-1565.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void put(const float</text>
<text text-anchor="start" x="298.5" y="-1554.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *ptNewBuff, int iLength)</text>
<text text-anchor="start" x="298.5" y="-1543.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ float getPostInc()</text>
<text text-anchor="start" x="298.5" y="-1532.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void getPostInc(float</text>
<text text-anchor="start" x="298.5" y="-1521.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *ptBuff, int iLength)</text>
<text text-anchor="start" x="298.5" y="-1510.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ float get(float fOffset</text>
<text text-anchor="start" x="298.5" y="-1499.5" font-family="Helvetica,sans-Serif" font-size="10.00">=0) const</text>
<text text-anchor="start" x="298.5" y="-1488.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void get(float *ptBuff,</text>
<text text-anchor="start" x="298.5" y="-1477.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iLength) const</text>
<text text-anchor="start" x="298.5" y="-1466.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 7 more...</text>
<text text-anchor="start" x="298.5" y="-1455.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CRingBuffer()</text>
<text text-anchor="start" x="298.5" y="-1444.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CRingBuffer(const</text>
<text text-anchor="start" x="298.5" y="-1433.5" font-family="Helvetica,sans-Serif" font-size="10.00"> CRingBuffer &amp;that)</text>
<text text-anchor="start" x="298.5" y="-1422.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CRingBuffer &amp; operator</text>
<text text-anchor="start" x="298.5" y="-1411.5" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CRingBuffer &amp;c)</text>
<text text-anchor="start" x="298.5" y="-1400.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; void incIdx(int &amp;iIdx,</text>
<text text-anchor="start" x="298.5" y="-1389.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iOffset=1)</text>
</a>
</g>
</g>
<!-- Node6&#45;&gt;Node5 -->
<g id="edge5" class="edge">
<title>Node6&#45;&gt;Node5</title>
<path fill="none" stroke="#404040" d="M391.54,-1382.34C393.8,-1370.43 396.08,-1358.45 398.34,-1346.57"/>
<polygon fill="none" stroke="#404040" points="398.35,-1346.51 395.54,-1339.87 400.59,-1334.72 403.4,-1341.37 398.35,-1346.51"/>
<text text-anchor="middle" x="431" y="-1356" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;m_pCFilterBuff</text>
</g>
<!-- Node7 -->
<g id="node7" class="node">
<title>Node7</title>
<g id="a_node7"><a xlink:href="a00477.xhtml" target="_top" xlink:title="implement a circular buffer of type T">
<polygon fill="white" stroke="black" points="279.5,-1795.5 279.5,-2138.5 434.5,-2138.5 434.5,-1795.5 279.5,-1795.5"/>
<text text-anchor="middle" x="357" y="-2126.5" font-family="Helvetica,sans-Serif" font-size="10.00">CRingBuffer&lt; T &gt;</text>
<polyline fill="none" stroke="black" points="279.5,-2119.5 434.5,-2119.5 "/>
<text text-anchor="start" x="287.5" y="-2107.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iBuffLength</text>
<text text-anchor="start" x="287.5" y="-2096.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iReadIdx</text>
<text text-anchor="start" x="287.5" y="-2085.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iWriteIdx</text>
<text text-anchor="start" x="287.5" y="-2074.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; T * m_ptBuff</text>
<polyline fill="none" stroke="black" points="279.5,-2067.5 434.5,-2067.5 "/>
<text text-anchor="start" x="287.5" y="-2055.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CRingBuffer(int iBuffer</text>
<text text-anchor="start" x="287.5" y="-2044.5" font-family="Helvetica,sans-Serif" font-size="10.00">LengthInSamples)</text>
<text text-anchor="start" x="287.5" y="-2033.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CRingBuffer()</text>
<text text-anchor="start" x="287.5" y="-2022.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void putPostInc(T tNewValue)</text>
<text text-anchor="start" x="287.5" y="-2011.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void putPostInc(const</text>
<text text-anchor="start" x="287.5" y="-2000.5" font-family="Helvetica,sans-Serif" font-size="10.00"> T *ptNewBuff, int iLength)</text>
<text text-anchor="start" x="287.5" y="-1989.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void put(T tNewValue)</text>
<text text-anchor="start" x="287.5" y="-1978.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void put(const T *ptNewBuff,</text>
<text text-anchor="start" x="287.5" y="-1967.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iLength)</text>
<text text-anchor="start" x="287.5" y="-1956.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ T getPostInc()</text>
<text text-anchor="start" x="287.5" y="-1945.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void getPostInc(T *ptBuff,</text>
<text text-anchor="start" x="287.5" y="-1934.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iLength)</text>
<text text-anchor="start" x="287.5" y="-1923.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ T get(float fOffset</text>
<text text-anchor="start" x="287.5" y="-1912.5" font-family="Helvetica,sans-Serif" font-size="10.00">=0) const</text>
<text text-anchor="start" x="287.5" y="-1901.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void get(T *ptBuff,</text>
<text text-anchor="start" x="287.5" y="-1890.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iLength) const</text>
<text text-anchor="start" x="287.5" y="-1879.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 7 more...</text>
<text text-anchor="start" x="287.5" y="-1868.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CRingBuffer()</text>
<text text-anchor="start" x="287.5" y="-1857.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CRingBuffer(const</text>
<text text-anchor="start" x="287.5" y="-1846.5" font-family="Helvetica,sans-Serif" font-size="10.00"> CRingBuffer &amp;that)</text>
<text text-anchor="start" x="287.5" y="-1835.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CRingBuffer &amp; operator</text>
<text text-anchor="start" x="287.5" y="-1824.5" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CRingBuffer &amp;c)</text>
<text text-anchor="start" x="287.5" y="-1813.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; void incIdx(int &amp;iIdx,</text>
<text text-anchor="start" x="287.5" y="-1802.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iOffset=1)</text>
</a>
</g>
</g>
<!-- Node7&#45;&gt;Node6 -->
<g id="edge6" class="edge">
<title>Node7&#45;&gt;Node6</title>
<path fill="none" stroke="orange" d="M357,-1785.45C357,-1772.89 357,-1760.22 357,-1747.65"/>
<polygon fill="orange" stroke="orange" points="353.5,-1785.49 357,-1795.49 360.5,-1785.49 353.5,-1785.49"/>
<text text-anchor="middle" x="375.5" y="-1769" font-family="Helvetica,sans-Serif" font-size="10.00"> &lt; float &gt;</text>
</g>
<!-- Node8 -->
<g id="node8" class="node">
<title>Node8</title>
<g id="a_node8"><a xlink:href="a00465.xhtml" target="_top" xlink:title="class providing a generic filter implementation">
<polygon fill="white" stroke="black" points="442,-1393.5 442,-1736.5 574,-1736.5 574,-1393.5 442,-1393.5"/>
<text text-anchor="middle" x="508" y="-1724.5" font-family="Helvetica,sans-Serif" font-size="10.00">CFilter&lt; T &gt;</text>
<polyline fill="none" stroke="black" points="442,-1717.5 574,-1717.5 "/>
<text text-anchor="start" x="450" y="-1705.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CRingBuffer&lt; T &gt; *</text>
<text text-anchor="start" x="450" y="-1694.5" font-family="Helvetica,sans-Serif" font-size="10.00"> m_pCFilterBuff</text>
<text text-anchor="start" x="450" y="-1683.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; T * m_aptCoeff</text>
<text text-anchor="start" x="450" y="-1672.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; T * m_ptProcBuff</text>
<text text-anchor="start" x="450" y="-1661.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iNumFilterCoeffs</text>
<text text-anchor="start" x="450" y="-1650.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; bool m_bisInitialized</text>
<polyline fill="none" stroke="black" points="442,-1643.5 574,-1643.5 "/>
<text text-anchor="start" x="450" y="-1631.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CFilter()</text>
<text text-anchor="start" x="450" y="-1620.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CFilter()</text>
<text text-anchor="start" x="450" y="-1609.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t init(const</text>
<text text-anchor="start" x="450" y="-1598.5" font-family="Helvetica,sans-Serif" font-size="10.00"> T *pfB, const T *pfA,</text>
<text text-anchor="start" x="450" y="-1587.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iNumCoeffs)</text>
<text text-anchor="start" x="450" y="-1576.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t reset(bool</text>
<text text-anchor="start" x="450" y="-1565.5" font-family="Helvetica,sans-Serif" font-size="10.00"> bFreeMem=true)</text>
<text text-anchor="start" x="450" y="-1554.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t process(T *pfOut,</text>
<text text-anchor="start" x="450" y="-1543.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const T *pfIn, long long</text>
<text text-anchor="start" x="450" y="-1532.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iNumSamples)</text>
<text text-anchor="start" x="450" y="-1521.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t processDFII</text>
<text text-anchor="start" x="450" y="-1510.5" font-family="Helvetica,sans-Serif" font-size="10.00">(T *pfOut, const T *pfIn,</text>
<text text-anchor="start" x="450" y="-1499.5" font-family="Helvetica,sans-Serif" font-size="10.00"> long long iNumSamples)</text>
<text text-anchor="start" x="450" y="-1488.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t filtfilt(T</text>
<text text-anchor="start" x="450" y="-1477.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfOut, const T *pfIn,</text>
<text text-anchor="start" x="450" y="-1466.5" font-family="Helvetica,sans-Serif" font-size="10.00"> long long iNumSamples)</text>
<text text-anchor="start" x="450" y="-1455.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CFilter(const CFilter</text>
<text text-anchor="start" x="450" y="-1444.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;that)</text>
<text text-anchor="start" x="450" y="-1433.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CFilter &amp; operator</text>
<text text-anchor="start" x="450" y="-1422.5" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CFilter &amp;c)</text>
<text text-anchor="start" x="450" y="-1411.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; void setInitState_</text>
<text text-anchor="start" x="450" y="-1400.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float fWeight)</text>
</a>
</g>
</g>
<!-- Node8&#45;&gt;Node5 -->
<g id="edge7" class="edge">
<title>Node8&#45;&gt;Node5</title>
<path fill="none" stroke="orange" d="M475.82,-1383.55C473.88,-1373.21 471.93,-1362.97 470,-1353 468.83,-1346.93 467.62,-1340.75 466.38,-1334.51"/>
<polygon fill="orange" stroke="orange" points="472.4,-1384.31 477.68,-1393.49 479.28,-1383.02 472.4,-1384.31"/>
<text text-anchor="middle" x="489.5" y="-1356" font-family="Helvetica,sans-Serif" font-size="10.00"> &lt; float &gt;</text>
</g>
</g>
</svg>
