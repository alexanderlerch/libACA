<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.4"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ACA: CCcf Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">ACA<span id="projectnumber">&#160;0.2.6</span>
   </div>
   <div id="projectbrief">Example Code for Audio Content Analysis</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.4 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search",'Search','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('a00552.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pri-methods">Private Member Functions</a> &#124;
<a href="#pri-attribs">Private Attributes</a> &#124;
<a href="a00549.xhtml">List of all members</a>  </div>
  <div class="headertitle"><div class="title">CCcf Class Reference</div></div>
</div><!--header-->
<div class="contents">

<p>computation of correlation (freq domain)  
 <a href="a00552.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="a00206_source.xhtml">ToolCcf.h</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for CCcf:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00550.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ac12b4a9809a1dba42dea5ceefb45da36"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00552.xhtml#ac12b4a9809a1dba42dea5ceefb45da36">CCcf</a> (void)</td></tr>
<tr class="separator:ac12b4a9809a1dba42dea5ceefb45da36"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:add051d7bf13a84ed1fa5e18627e5e2b9"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00552.xhtml#add051d7bf13a84ed1fa5e18627e5e2b9">~CCcf</a> (void)</td></tr>
<tr class="separator:add051d7bf13a84ed1fa5e18627e5e2b9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af683b1b5e37ca2039424af02f4bfb3c5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00122.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00552.xhtml#af683b1b5e37ca2039424af02f4bfb3c5">init</a> (int iBlockLength)</td></tr>
<tr class="separator:af683b1b5e37ca2039424af02f4bfb3c5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6edce7be75bf0b89dcc4a20e491ad8d8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00122.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00552.xhtml#a6edce7be75bf0b89dcc4a20e491ad8d8">reset</a> ()</td></tr>
<tr class="separator:a6edce7be75bf0b89dcc4a20e491ad8d8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4d7d19dd39b24147d9a1fab5d7e05257"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00122.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00552.xhtml#a4d7d19dd39b24147d9a1fab5d7e05257">compCcf</a> (const float *pfInput1, const float *pfInput2, <a class="el" href="a00254.xhtml#abb452686968e48b67397da5f97445f5b">bool</a> bNormalize=<a class="el" href="a00254.xhtml#a41f9c5fb8b08eb5dc3edce4dcb37fee7">true</a>)</td></tr>
<tr class="separator:a4d7d19dd39b24147d9a1fab5d7e05257"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe56cc1681b982d7d31b0830b3471b61"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00552.xhtml#afe56cc1681b982d7d31b0830b3471b61">getCcfLength</a> (<a class="el" href="a00254.xhtml#abb452686968e48b67397da5f97445f5b">bool</a> bisAcf=<a class="el" href="a00254.xhtml#a65e9886d74aaee76545e83dd09011727">false</a>)</td></tr>
<tr class="separator:afe56cc1681b982d7d31b0830b3471b61"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a02c0e23cbcecab5af2fb20a25160321a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00122.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00552.xhtml#a02c0e23cbcecab5af2fb20a25160321a">getCcf</a> (float *pfCcfResult, <a class="el" href="a00254.xhtml#abb452686968e48b67397da5f97445f5b">bool</a> bisAcf=<a class="el" href="a00254.xhtml#a65e9886d74aaee76545e83dd09011727">false</a>) const</td></tr>
<tr class="separator:a02c0e23cbcecab5af2fb20a25160321a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afa3cb0579386bd1108d010962e801d31"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00552.xhtml#afa3cb0579386bd1108d010962e801d31">getCcfMax</a> (<a class="el" href="a00254.xhtml#abb452686968e48b67397da5f97445f5b">bool</a> bisAcf=<a class="el" href="a00254.xhtml#a65e9886d74aaee76545e83dd09011727">false</a>) const</td></tr>
<tr class="separator:afa3cb0579386bd1108d010962e801d31"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a166090237df809ea2fa9e0cb73bca3c0"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00552.xhtml#a166090237df809ea2fa9e0cb73bca3c0">getCcfMaxIdx</a> (<a class="el" href="a00254.xhtml#abb452686968e48b67397da5f97445f5b">bool</a> bisAcf=<a class="el" href="a00254.xhtml#a65e9886d74aaee76545e83dd09011727">false</a>) const</td></tr>
<tr class="separator:a166090237df809ea2fa9e0cb73bca3c0"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pri-methods" name="pri-methods"></a>
Private Member Functions</h2></td></tr>
<tr class="memitem:a0656881ae3fa9d467613abcc2500ed49"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00552.xhtml#a0656881ae3fa9d467613abcc2500ed49">CCcf</a> (const <a class="el" href="a00552.xhtml">CCcf</a> &amp;that)</td></tr>
<tr class="memdesc:a0656881ae3fa9d467613abcc2500ed49"><td class="mdescLeft">&#160;</td><td class="mdescRight">disallow copy construction <br  />
  <a href="a00552.xhtml#a0656881ae3fa9d467613abcc2500ed49">More...</a><br /></td></tr>
<tr class="separator:a0656881ae3fa9d467613abcc2500ed49"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab96999b26a5f44a07cc7ca0057d8531e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00552.xhtml">CCcf</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00552.xhtml#ab96999b26a5f44a07cc7ca0057d8531e">operator=</a> (const <a class="el" href="a00552.xhtml">CCcf</a> &amp;c)</td></tr>
<tr class="separator:ab96999b26a5f44a07cc7ca0057d8531e"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pri-attribs" name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr class="memitem:a9dd23e9688d57262ae7b7b8d03a4c918"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00254.xhtml#abb452686968e48b67397da5f97445f5b">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00552.xhtml#a9dd23e9688d57262ae7b7b8d03a4c918">m_bIsInitialized</a> = <a class="el" href="a00254.xhtml#a65e9886d74aaee76545e83dd09011727">false</a></td></tr>
<tr class="memdesc:a9dd23e9688d57262ae7b7b8d03a4c918"><td class="mdescLeft">&#160;</td><td class="mdescRight">true if init has been called  <a href="a00552.xhtml#a9dd23e9688d57262ae7b7b8d03a4c918">More...</a><br /></td></tr>
<tr class="separator:a9dd23e9688d57262ae7b7b8d03a4c918"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a245d68ee43cdd28bab6701bf0d6b3974"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00254.xhtml#abb452686968e48b67397da5f97445f5b">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00552.xhtml#a245d68ee43cdd28bab6701bf0d6b3974">m_bWasProcessed</a> = <a class="el" href="a00254.xhtml#a65e9886d74aaee76545e83dd09011727">false</a></td></tr>
<tr class="memdesc:a245d68ee43cdd28bab6701bf0d6b3974"><td class="mdescLeft">&#160;</td><td class="mdescRight">true if process has been called  <a href="a00552.xhtml#a245d68ee43cdd28bab6701bf0d6b3974">More...</a><br /></td></tr>
<tr class="separator:a245d68ee43cdd28bab6701bf0d6b3974"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa8cad7d3e5fa2685d3504ab813cc2ce7"><td class="memItemLeft" align="right" valign="top">float *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00552.xhtml#aa8cad7d3e5fa2685d3504ab813cc2ce7">m_apfData</a> [2] = { 0,0 }</td></tr>
<tr class="memdesc:aa8cad7d3e5fa2685d3504ab813cc2ce7"><td class="mdescLeft">&#160;</td><td class="mdescRight">CCF result.  <a href="a00552.xhtml#aa8cad7d3e5fa2685d3504ab813cc2ce7">More...</a><br /></td></tr>
<tr class="separator:aa8cad7d3e5fa2685d3504ab813cc2ce7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8474a655b6e148c237aa7ba9ecee7d47"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00480.xhtml">CFft</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00552.xhtml#a8474a655b6e148c237aa7ba9ecee7d47">m_pCFft</a> = 0</td></tr>
<tr class="memdesc:a8474a655b6e148c237aa7ba9ecee7d47"><td class="mdescLeft">&#160;</td><td class="mdescRight">FFT instance.  <a href="a00552.xhtml#a8474a655b6e148c237aa7ba9ecee7d47">More...</a><br /></td></tr>
<tr class="separator:a8474a655b6e148c237aa7ba9ecee7d47"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa3513c5e5bfa407a3d9f09f5775696a5"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00552.xhtml#aa3513c5e5bfa407a3d9f09f5775696a5">m_iBlockLength</a> = 0</td></tr>
<tr class="memdesc:aa3513c5e5bfa407a3d9f09f5775696a5"><td class="mdescLeft">&#160;</td><td class="mdescRight">length of input  <a href="a00552.xhtml#aa3513c5e5bfa407a3d9f09f5775696a5">More...</a><br /></td></tr>
<tr class="separator:aa3513c5e5bfa407a3d9f09f5775696a5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3172706be7e3ec2182b40669ef468c00"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00552.xhtml#a3172706be7e3ec2182b40669ef468c00">m_iFftLength</a> = 0</td></tr>
<tr class="memdesc:a3172706be7e3ec2182b40669ef468c00"><td class="mdescLeft">&#160;</td><td class="mdescRight">length of FFT  <a href="a00552.xhtml#a3172706be7e3ec2182b40669ef468c00">More...</a><br /></td></tr>
<tr class="separator:a3172706be7e3ec2182b40669ef468c00"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p >computation of correlation (freq domain) </p>

<p class="definition">Definition at line <a class="el" href="a00206_source.xhtml#l00013">13</a> of file <a class="el" href="a00206_source.xhtml">ToolCcf.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="ac12b4a9809a1dba42dea5ceefb45da36" name="ac12b4a9809a1dba42dea5ceefb45da36"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac12b4a9809a1dba42dea5ceefb45da36">&#9670;&nbsp;</a></span>CCcf() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">CCcf::CCcf </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="a00107_source.xhtml#l00008">8</a> of file <a class="el" href="a00107_source.xhtml">ToolCcf.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">    9</span>{</div>
<div class="line"><span class="lineno">   10</span>    <a class="code hl_variable" href="a00552.xhtml#a8474a655b6e148c237aa7ba9ecee7d47">m_pCFft</a> = <span class="keyword">new</span> <a class="code hl_class" href="a00480.xhtml">CFft</a>();</div>
<div class="line"><span class="lineno">   11</span>}</div>
<div class="ttc" id="aa00480_xhtml"><div class="ttname"><a href="a00480.xhtml">CFft</a></div><div class="ttdoc">class for FFT computation with windowing</div><div class="ttdef"><b>Definition:</b> <a href="a00149_source.xhtml#l00008">Fft.h:9</a></div></div>
<div class="ttc" id="aa00552_xhtml_a8474a655b6e148c237aa7ba9ecee7d47"><div class="ttname"><a href="a00552.xhtml#a8474a655b6e148c237aa7ba9ecee7d47">CCcf::m_pCFft</a></div><div class="ttdeci">CFft * m_pCFft</div><div class="ttdoc">FFT instance.</div><div class="ttdef"><b>Definition:</b> <a href="a00206_source.xhtml#l00071">ToolCcf.h:71</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00206_source.xhtml#l00071">m_pCFft</a>.</p>

</div>
</div>
<a id="add051d7bf13a84ed1fa5e18627e5e2b9" name="add051d7bf13a84ed1fa5e18627e5e2b9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#add051d7bf13a84ed1fa5e18627e5e2b9">&#9670;&nbsp;</a></span>~CCcf()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">CCcf::~CCcf </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="a00107_source.xhtml#l00013">13</a> of file <a class="el" href="a00107_source.xhtml">ToolCcf.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   14</span>{</div>
<div class="line"><span class="lineno">   15</span>    <a class="code hl_function" href="a00552.xhtml#a6edce7be75bf0b89dcc4a20e491ad8d8">reset</a>();</div>
<div class="line"><span class="lineno">   16</span> </div>
<div class="line"><span class="lineno">   17</span>    <span class="keyword">delete</span> <a class="code hl_variable" href="a00552.xhtml#a8474a655b6e148c237aa7ba9ecee7d47">m_pCFft</a>;</div>
<div class="line"><span class="lineno">   18</span>}</div>
<div class="ttc" id="aa00552_xhtml_a6edce7be75bf0b89dcc4a20e491ad8d8"><div class="ttname"><a href="a00552.xhtml#a6edce7be75bf0b89dcc4a20e491ad8d8">CCcf::reset</a></div><div class="ttdeci">Error_t reset()</div><div class="ttdef"><b>Definition:</b> <a href="a00107_source.xhtml#l00044">ToolCcf.cpp:44</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00206_source.xhtml#l00071">m_pCFft</a>, and <a class="el" href="a00107_source.xhtml#l00044">reset()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00552_add051d7bf13a84ed1fa5e18627e5e2b9_cgraph.svg" width="100%" height="300"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="a0656881ae3fa9d467613abcc2500ed49" name="a0656881ae3fa9d467613abcc2500ed49"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0656881ae3fa9d467613abcc2500ed49">&#9670;&nbsp;</a></span>CCcf() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">CCcf::CCcf </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="a00552.xhtml">CCcf</a> &amp;&#160;</td>
          <td class="paramname"><em>that</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>disallow copy construction <br  />
 </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a4d7d19dd39b24147d9a1fab5d7e05257" name="a4d7d19dd39b24147d9a1fab5d7e05257"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4d7d19dd39b24147d9a1fab5d7e05257">&#9670;&nbsp;</a></span>compCcf()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00122.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> CCcf::compCcf </td>
          <td>(</td>
          <td class="paramtype">const float *&#160;</td>
          <td class="paramname"><em>pfInput1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float *&#160;</td>
          <td class="paramname"><em>pfInput2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="a00254.xhtml#abb452686968e48b67397da5f97445f5b">bool</a>&#160;</td>
          <td class="paramname"><em>bNormalize</em> = <code><a class="el" href="a00254.xhtml#a41f9c5fb8b08eb5dc3edce4dcb37fee7">true</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >computes cross correlation function </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pfInput1</td><td>(block of data to be correlated) </td></tr>
    <tr><td class="paramname">pfInput2</td><td>(block of data to be correlated, equals pfInput1 when ACF) </td></tr>
    <tr><td class="paramname">bNormalize</td><td>flag whether the output is normalized </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Error_t </dd></dl>

<p class="definition">Definition at line <a class="el" href="a00107_source.xhtml#l00062">62</a> of file <a class="el" href="a00107_source.xhtml">ToolCcf.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   63</span>{</div>
<div class="line"><span class="lineno">   64</span>    <span class="keywordflow">if</span> (!pfInput1 || !pfInput2)</div>
<div class="line"><span class="lineno">   65</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00122.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248">Error_t::kFunctionInvalidArgsError</a>;   </div>
<div class="line"><span class="lineno">   66</span> </div>
<div class="line"><span class="lineno">   67</span>    <span class="keywordflow">if</span> (!<a class="code hl_variable" href="a00552.xhtml#a9dd23e9688d57262ae7b7b8d03a4c918">m_bIsInitialized</a>)</div>
<div class="line"><span class="lineno">   68</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00122.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fad7652bf47cff43c21f12cb7df4ca66ec">Error_t::kFunctionIllegalCallError</a>;</div>
<div class="line"><span class="lineno">   69</span>    </div>
<div class="line"><span class="lineno">   70</span>    <span class="comment">// extract standard deviation for normalization</span></div>
<div class="line"><span class="lineno">   71</span>    <span class="keywordtype">float</span> afStd[2] = { 1.F, 1.F };</div>
<div class="line"><span class="lineno">   72</span>    <span class="keywordflow">if</span> (bNormalize)</div>
<div class="line"><span class="lineno">   73</span>    {</div>
<div class="line"><span class="lineno">   74</span>        <span class="keywordtype">float</span> fPower = std::sqrt(<a class="code hl_function" href="a00508.xhtml#a269d316eeb6000aac4f57ade32c83127">CVector::mulScalar</a>(pfInput1, pfInput1, <a class="code hl_variable" href="a00552.xhtml#aa3513c5e5bfa407a3d9f09f5775696a5">m_iBlockLength</a>));</div>
<div class="line"><span class="lineno">   75</span>        afStd[0] = fPower &gt; 0 ? fPower : 1.F;</div>
<div class="line"><span class="lineno">   76</span>        fPower = std::sqrt(<a class="code hl_function" href="a00508.xhtml#a269d316eeb6000aac4f57ade32c83127">CVector::mulScalar</a>(pfInput2, pfInput2, <a class="code hl_variable" href="a00552.xhtml#aa3513c5e5bfa407a3d9f09f5775696a5">m_iBlockLength</a>));</div>
<div class="line"><span class="lineno">   77</span>        afStd[1] = fPower &gt; 0 ? fPower : 1.F;</div>
<div class="line"><span class="lineno">   78</span>    }</div>
<div class="line"><span class="lineno">   79</span> </div>
<div class="line"><span class="lineno">   80</span>    <span class="comment">// compute the FFTs</span></div>
<div class="line"><span class="lineno">   81</span>    <a class="code hl_variable" href="a00552.xhtml#a8474a655b6e148c237aa7ba9ecee7d47">m_pCFft</a>-&gt;<a class="code hl_function" href="a00480.xhtml#a3cae73896785c2f12ba979e15de48087">compFft</a>(<a class="code hl_variable" href="a00552.xhtml#aa8cad7d3e5fa2685d3504ab813cc2ce7">m_apfData</a>[0], pfInput1);</div>
<div class="line"><span class="lineno">   82</span>    <a class="code hl_variable" href="a00552.xhtml#a8474a655b6e148c237aa7ba9ecee7d47">m_pCFft</a>-&gt;<a class="code hl_function" href="a00480.xhtml#a3cae73896785c2f12ba979e15de48087">compFft</a>(<a class="code hl_variable" href="a00552.xhtml#aa8cad7d3e5fa2685d3504ab813cc2ce7">m_apfData</a>[1], pfInput2);</div>
<div class="line"><span class="lineno">   83</span> </div>
<div class="line"><span class="lineno">   84</span>    <span class="comment">// conjugate complex multiply</span></div>
<div class="line"><span class="lineno">   85</span>    <a class="code hl_function" href="a00508.xhtml#a9811f50434dd058d201290b2dc98bfcd">CVector::mulC_I</a>(<a class="code hl_variable" href="a00552.xhtml#aa8cad7d3e5fa2685d3504ab813cc2ce7">m_apfData</a>[1], <span class="keyword">static_cast&lt;</span><span class="keywordtype">float</span><span class="keyword">&gt;</span>(<a class="code hl_variable" href="a00552.xhtml#a3172706be7e3ec2182b40669ef468c00">m_iFftLength</a>), <a class="code hl_variable" href="a00552.xhtml#a3172706be7e3ec2182b40669ef468c00">m_iFftLength</a>);</div>
<div class="line"><span class="lineno">   86</span>    <a class="code hl_variable" href="a00552.xhtml#a8474a655b6e148c237aa7ba9ecee7d47">m_pCFft</a>-&gt;<a class="code hl_function" href="a00480.xhtml#ab6245bc0fdabc5e62ab910414eb4b923">conjugate_I</a>(<a class="code hl_variable" href="a00552.xhtml#aa8cad7d3e5fa2685d3504ab813cc2ce7">m_apfData</a>[1]);</div>
<div class="line"><span class="lineno">   87</span>    <a class="code hl_variable" href="a00552.xhtml#a8474a655b6e148c237aa7ba9ecee7d47">m_pCFft</a>-&gt;<a class="code hl_function" href="a00480.xhtml#a1d114960d5fc8ff4c328732adf638885">multiply_I</a>(<a class="code hl_variable" href="a00552.xhtml#aa8cad7d3e5fa2685d3504ab813cc2ce7">m_apfData</a>[0], <a class="code hl_variable" href="a00552.xhtml#aa8cad7d3e5fa2685d3504ab813cc2ce7">m_apfData</a>[1]);</div>
<div class="line"><span class="lineno">   88</span> </div>
<div class="line"><span class="lineno">   89</span>    <span class="comment">// normalization</span></div>
<div class="line"><span class="lineno">   90</span>    <a class="code hl_function" href="a00508.xhtml#a9811f50434dd058d201290b2dc98bfcd">CVector::mulC_I</a>(<a class="code hl_variable" href="a00552.xhtml#aa8cad7d3e5fa2685d3504ab813cc2ce7">m_apfData</a>[0], 1.F / (afStd[0] * afStd[1]), <a class="code hl_variable" href="a00552.xhtml#a3172706be7e3ec2182b40669ef468c00">m_iFftLength</a>);</div>
<div class="line"><span class="lineno">   91</span> </div>
<div class="line"><span class="lineno">   92</span>    <span class="comment">// inverse Fft</span></div>
<div class="line"><span class="lineno">   93</span>    <a class="code hl_variable" href="a00552.xhtml#a8474a655b6e148c237aa7ba9ecee7d47">m_pCFft</a>-&gt;<a class="code hl_function" href="a00480.xhtml#a2d2fa880b32c7087973ed25628002129">compInvFft</a>(<a class="code hl_variable" href="a00552.xhtml#aa8cad7d3e5fa2685d3504ab813cc2ce7">m_apfData</a>[0], <a class="code hl_variable" href="a00552.xhtml#aa8cad7d3e5fa2685d3504ab813cc2ce7">m_apfData</a>[0]);</div>
<div class="line"><span class="lineno">   94</span> </div>
<div class="line"><span class="lineno">   95</span>    <span class="comment">// copy results</span></div>
<div class="line"><span class="lineno">   96</span>    <a class="code hl_function" href="a00508.xhtml#ad7c5cba73e439adac77778f61c9418f0">CVector::copy</a>(<a class="code hl_variable" href="a00552.xhtml#aa8cad7d3e5fa2685d3504ab813cc2ce7">m_apfData</a>[1], &amp;<a class="code hl_variable" href="a00552.xhtml#aa8cad7d3e5fa2685d3504ab813cc2ce7">m_apfData</a>[0][<span class="keyword">static_cast&lt;</span><span class="keywordtype">long</span> <span class="keywordtype">long</span><span class="keyword">&gt;</span>(<a class="code hl_variable" href="a00552.xhtml#a3172706be7e3ec2182b40669ef468c00">m_iFftLength</a>) - <a class="code hl_variable" href="a00552.xhtml#aa3513c5e5bfa407a3d9f09f5775696a5">m_iBlockLength</a> + 1], <span class="keyword">static_cast&lt;</span><span class="keywordtype">long</span> <span class="keywordtype">long</span><span class="keyword">&gt;</span>(<a class="code hl_variable" href="a00552.xhtml#aa3513c5e5bfa407a3d9f09f5775696a5">m_iBlockLength</a>) - 1);</div>
<div class="line"><span class="lineno">   97</span>    <a class="code hl_function" href="a00508.xhtml#ad7c5cba73e439adac77778f61c9418f0">CVector::copy</a>(&amp;<a class="code hl_variable" href="a00552.xhtml#aa8cad7d3e5fa2685d3504ab813cc2ce7">m_apfData</a>[1][<a class="code hl_variable" href="a00552.xhtml#aa3513c5e5bfa407a3d9f09f5775696a5">m_iBlockLength</a> - 1], <a class="code hl_variable" href="a00552.xhtml#aa8cad7d3e5fa2685d3504ab813cc2ce7">m_apfData</a>[0], <a class="code hl_variable" href="a00552.xhtml#aa3513c5e5bfa407a3d9f09f5775696a5">m_iBlockLength</a>);</div>
<div class="line"><span class="lineno">   98</span> </div>
<div class="line"><span class="lineno">   99</span>    <a class="code hl_variable" href="a00552.xhtml#a245d68ee43cdd28bab6701bf0d6b3974">m_bWasProcessed</a> = <span class="keyword">true</span>;</div>
<div class="line"><span class="lineno">  100</span>    <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00122.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><span class="lineno">  101</span>}</div>
<div class="ttc" id="aa00122_xhtml_a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248"><div class="ttname"><a href="a00122.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248">Error_t::kFunctionInvalidArgsError</a></div><div class="ttdeci">@ kFunctionInvalidArgsError</div></div>
<div class="ttc" id="aa00122_xhtml_a4e8c0d09726859e3d3369c0da5a1aa7fad7652bf47cff43c21f12cb7df4ca66ec"><div class="ttname"><a href="a00122.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fad7652bf47cff43c21f12cb7df4ca66ec">Error_t::kFunctionIllegalCallError</a></div><div class="ttdeci">@ kFunctionIllegalCallError</div></div>
<div class="ttc" id="aa00122_xhtml_a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b"><div class="ttname"><a href="a00122.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a></div><div class="ttdeci">@ kNoError</div></div>
<div class="ttc" id="aa00480_xhtml_a1d114960d5fc8ff4c328732adf638885"><div class="ttname"><a href="a00480.xhtml#a1d114960d5fc8ff4c328732adf638885">CFft::multiply_I</a></div><div class="ttdeci">void multiply_I(complex_t *pfFftSrc1Dest, const complex_t *pfFftSrc2) const</div><div class="ttdef"><b>Definition:</b> <a href="a00074_source.xhtml#l00232">Fft.cpp:232</a></div></div>
<div class="ttc" id="aa00480_xhtml_a2d2fa880b32c7087973ed25628002129"><div class="ttname"><a href="a00480.xhtml#a2d2fa880b32c7087973ed25628002129">CFft::compInvFft</a></div><div class="ttdeci">Error_t compInvFft(float *pfOutput, const complex_t *pfSpectrum)</div><div class="ttdef"><b>Definition:</b> <a href="a00074_source.xhtml#l00115">Fft.cpp:115</a></div></div>
<div class="ttc" id="aa00480_xhtml_a3cae73896785c2f12ba979e15de48087"><div class="ttname"><a href="a00480.xhtml#a3cae73896785c2f12ba979e15de48087">CFft::compFft</a></div><div class="ttdeci">Error_t compFft(complex_t *pfSpectrum, const float *pfInput)</div><div class="ttdef"><b>Definition:</b> <a href="a00074_source.xhtml#l00091">Fft.cpp:91</a></div></div>
<div class="ttc" id="aa00480_xhtml_ab6245bc0fdabc5e62ab910414eb4b923"><div class="ttname"><a href="a00480.xhtml#ab6245bc0fdabc5e62ab910414eb4b923">CFft::conjugate_I</a></div><div class="ttdeci">void conjugate_I(complex_t *pfFftResult) const</div><div class="ttdef"><b>Definition:</b> <a href="a00074_source.xhtml#l00226">Fft.cpp:226</a></div></div>
<div class="ttc" id="aa00508_xhtml_a269d316eeb6000aac4f57ade32c83127"><div class="ttname"><a href="a00508.xhtml#a269d316eeb6000aac4f57ade32c83127">CVector::mulScalar</a></div><div class="ttdeci">static T mulScalar(const T *ptSrc1, const T *ptSrc2, long long int iLength)</div><div class="ttdef"><b>Definition:</b> <a href="a00158_source.xhtml#l00194">Vector.h:194</a></div></div>
<div class="ttc" id="aa00508_xhtml_a9811f50434dd058d201290b2dc98bfcd"><div class="ttname"><a href="a00508.xhtml#a9811f50434dd058d201290b2dc98bfcd">CVector::mulC_I</a></div><div class="ttdeci">static void mulC_I(T *ptSrcDest, T fScale, long long int iLength)</div><div class="ttdef"><b>Definition:</b> <a href="a00158_source.xhtml#l00162">Vector.h:162</a></div></div>
<div class="ttc" id="aa00508_xhtml_ad7c5cba73e439adac77778f61c9418f0"><div class="ttname"><a href="a00508.xhtml#ad7c5cba73e439adac77778f61c9418f0">CVector::copy</a></div><div class="ttdeci">static void copy(T *ptDest, const T *ptSrc, long long int iLength)</div><div class="ttdef"><b>Definition:</b> <a href="a00158_source.xhtml#l00106">Vector.h:106</a></div></div>
<div class="ttc" id="aa00552_xhtml_a245d68ee43cdd28bab6701bf0d6b3974"><div class="ttname"><a href="a00552.xhtml#a245d68ee43cdd28bab6701bf0d6b3974">CCcf::m_bWasProcessed</a></div><div class="ttdeci">bool m_bWasProcessed</div><div class="ttdoc">true if process has been called</div><div class="ttdef"><b>Definition:</b> <a href="a00206_source.xhtml#l00068">ToolCcf.h:68</a></div></div>
<div class="ttc" id="aa00552_xhtml_a3172706be7e3ec2182b40669ef468c00"><div class="ttname"><a href="a00552.xhtml#a3172706be7e3ec2182b40669ef468c00">CCcf::m_iFftLength</a></div><div class="ttdeci">int m_iFftLength</div><div class="ttdoc">length of FFT</div><div class="ttdef"><b>Definition:</b> <a href="a00206_source.xhtml#l00074">ToolCcf.h:74</a></div></div>
<div class="ttc" id="aa00552_xhtml_a9dd23e9688d57262ae7b7b8d03a4c918"><div class="ttname"><a href="a00552.xhtml#a9dd23e9688d57262ae7b7b8d03a4c918">CCcf::m_bIsInitialized</a></div><div class="ttdeci">bool m_bIsInitialized</div><div class="ttdoc">true if init has been called</div><div class="ttdef"><b>Definition:</b> <a href="a00206_source.xhtml#l00067">ToolCcf.h:67</a></div></div>
<div class="ttc" id="aa00552_xhtml_aa3513c5e5bfa407a3d9f09f5775696a5"><div class="ttname"><a href="a00552.xhtml#aa3513c5e5bfa407a3d9f09f5775696a5">CCcf::m_iBlockLength</a></div><div class="ttdeci">int m_iBlockLength</div><div class="ttdoc">length of input</div><div class="ttdef"><b>Definition:</b> <a href="a00206_source.xhtml#l00073">ToolCcf.h:73</a></div></div>
<div class="ttc" id="aa00552_xhtml_aa8cad7d3e5fa2685d3504ab813cc2ce7"><div class="ttname"><a href="a00552.xhtml#aa8cad7d3e5fa2685d3504ab813cc2ce7">CCcf::m_apfData</a></div><div class="ttdeci">float * m_apfData[2]</div><div class="ttdoc">CCF result.</div><div class="ttdef"><b>Definition:</b> <a href="a00206_source.xhtml#l00070">ToolCcf.h:70</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00074_source.xhtml#l00091">CFft::compFft()</a>, <a class="el" href="a00074_source.xhtml#l00115">CFft::compInvFft()</a>, <a class="el" href="a00074_source.xhtml#l00226">CFft::conjugate_I()</a>, <a class="el" href="a00158_source.xhtml#l00106">CVector::copy()</a>, <a class="el" href="a00122.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fad7652bf47cff43c21f12cb7df4ca66ec">kFunctionIllegalCallError</a>, <a class="el" href="a00122.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248">kFunctionInvalidArgsError</a>, <a class="el" href="a00122.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">kNoError</a>, <a class="el" href="a00206_source.xhtml#l00070">m_apfData</a>, <a class="el" href="a00206_source.xhtml#l00067">m_bIsInitialized</a>, <a class="el" href="a00206_source.xhtml#l00068">m_bWasProcessed</a>, <a class="el" href="a00206_source.xhtml#l00073">m_iBlockLength</a>, <a class="el" href="a00206_source.xhtml#l00074">m_iFftLength</a>, <a class="el" href="a00206_source.xhtml#l00071">m_pCFft</a>, <a class="el" href="a00158_source.xhtml#l00162">CVector::mulC_I()</a>, <a class="el" href="a00158_source.xhtml#l00194">CVector::mulScalar()</a>, and <a class="el" href="a00074_source.xhtml#l00232">CFft::multiply_I()</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00086_source.xhtml#l00113">CBeatHistoIf::compBeatHisto()</a>, <a class="el" href="a00104_source.xhtml#l00036">CPitchSpectralAcf::compF0()</a>, <a class="el" href="a00104_source.xhtml#l00157">CPitchTimeAcf::compF0()</a>, <a class="el" href="a00104_source.xhtml#l00253">CPitchTimeAuditory::compF0()</a>, and <a class="el" href="a00038_source.xhtml#l00745">CFeatureTimeMaxAcf::compFeature()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00552_a4d7d19dd39b24147d9a1fab5d7e05257_cgraph.svg" width="468" height="415"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00552_a4d7d19dd39b24147d9a1fab5d7e05257_icgraph.svg" width="460" height="287"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a02c0e23cbcecab5af2fb20a25160321a" name="a02c0e23cbcecab5af2fb20a25160321a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a02c0e23cbcecab5af2fb20a25160321a">&#9670;&nbsp;</a></span>getCcf()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00122.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> CCcf::getCcf </td>
          <td>(</td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>pfCcfResult</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="a00254.xhtml#abb452686968e48b67397da5f97445f5b">bool</a>&#160;</td>
          <td class="paramname"><em>bisAcf</em> = <code><a class="el" href="a00254.xhtml#a65e9886d74aaee76545e83dd09011727">false</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >returns the correlation result </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pfCcfResult</td><td>result buffer </td></tr>
    <tr><td class="paramname">bisAcf</td><td>returns only non-redundant ACF result if true </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Error_t </dd></dl>

<p class="definition">Definition at line <a class="el" href="a00107_source.xhtml#l00111">111</a> of file <a class="el" href="a00107_source.xhtml">ToolCcf.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  112</span>{</div>
<div class="line"><span class="lineno">  113</span>    <span class="keywordflow">if</span> (!(<a class="code hl_variable" href="a00552.xhtml#a9dd23e9688d57262ae7b7b8d03a4c918">m_bIsInitialized</a> &amp;&amp; <a class="code hl_variable" href="a00552.xhtml#a245d68ee43cdd28bab6701bf0d6b3974">m_bWasProcessed</a>))</div>
<div class="line"><span class="lineno">  114</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00122.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fad7652bf47cff43c21f12cb7df4ca66ec">Error_t::kFunctionIllegalCallError</a>;</div>
<div class="line"><span class="lineno">  115</span>    <span class="keywordflow">if</span> (!pfCcfResult)</div>
<div class="line"><span class="lineno">  116</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00122.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248">Error_t::kFunctionInvalidArgsError</a>;</div>
<div class="line"><span class="lineno">  117</span> </div>
<div class="line"><span class="lineno">  118</span>    <span class="keywordtype">int</span> iStartIdx = bIsAcf ? <a class="code hl_variable" href="a00552.xhtml#aa3513c5e5bfa407a3d9f09f5775696a5">m_iBlockLength</a> - 1 : 0;</div>
<div class="line"><span class="lineno">  119</span>    <a class="code hl_function" href="a00508.xhtml#ad7c5cba73e439adac77778f61c9418f0">CVector::copy</a>(pfCcfResult, &amp;<a class="code hl_variable" href="a00552.xhtml#aa8cad7d3e5fa2685d3504ab813cc2ce7">m_apfData</a>[1][iStartIdx], <span class="keyword">static_cast&lt;</span><span class="keywordtype">long</span> <span class="keywordtype">long</span><span class="keyword">&gt;</span>(2) * <a class="code hl_variable" href="a00552.xhtml#aa3513c5e5bfa407a3d9f09f5775696a5">m_iBlockLength</a> - 1 - iStartIdx);</div>
<div class="line"><span class="lineno">  120</span> </div>
<div class="line"><span class="lineno">  121</span>    <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00122.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><span class="lineno">  122</span>}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00158_source.xhtml#l00106">CVector::copy()</a>, <a class="el" href="a00122.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fad7652bf47cff43c21f12cb7df4ca66ec">kFunctionIllegalCallError</a>, <a class="el" href="a00122.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248">kFunctionInvalidArgsError</a>, <a class="el" href="a00122.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">kNoError</a>, <a class="el" href="a00206_source.xhtml#l00070">m_apfData</a>, <a class="el" href="a00206_source.xhtml#l00067">m_bIsInitialized</a>, <a class="el" href="a00206_source.xhtml#l00068">m_bWasProcessed</a>, and <a class="el" href="a00206_source.xhtml#l00073">m_iBlockLength</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00086_source.xhtml#l00113">CBeatHistoIf::compBeatHisto()</a>, <a class="el" href="a00104_source.xhtml#l00036">CPitchSpectralAcf::compF0()</a>, <a class="el" href="a00104_source.xhtml#l00157">CPitchTimeAcf::compF0()</a>, <a class="el" href="a00104_source.xhtml#l00253">CPitchTimeAuditory::compF0()</a>, and <a class="el" href="a00038_source.xhtml#l00745">CFeatureTimeMaxAcf::compFeature()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00552_a02c0e23cbcecab5af2fb20a25160321a_cgraph.svg" width="256" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00552_a02c0e23cbcecab5af2fb20a25160321a_icgraph.svg" width="446" height="287"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="afe56cc1681b982d7d31b0830b3471b61" name="afe56cc1681b982d7d31b0830b3471b61"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afe56cc1681b982d7d31b0830b3471b61">&#9670;&nbsp;</a></span>getCcfLength()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int CCcf::getCcfLength </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="a00254.xhtml#abb452686968e48b67397da5f97445f5b">bool</a>&#160;</td>
          <td class="paramname"><em>bisAcf</em> = <code><a class="el" href="a00254.xhtml#a65e9886d74aaee76545e83dd09011727">false</a></code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >returns the length of the CCF result </p><dl class="section return"><dt>Returns</dt><dd>int </dd></dl>

<p class="definition">Definition at line <a class="el" href="a00107_source.xhtml#l00103">103</a> of file <a class="el" href="a00107_source.xhtml">ToolCcf.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  104</span>{</div>
<div class="line"><span class="lineno">  105</span>    <span class="keywordflow">if</span> (!<a class="code hl_variable" href="a00552.xhtml#a9dd23e9688d57262ae7b7b8d03a4c918">m_bIsInitialized</a>)</div>
<div class="line"><span class="lineno">  106</span>        <span class="keywordflow">return</span> -1;</div>
<div class="line"><span class="lineno">  107</span> </div>
<div class="line"><span class="lineno">  108</span>    <span class="keywordflow">return</span> bIsAcf ? <a class="code hl_variable" href="a00552.xhtml#aa3513c5e5bfa407a3d9f09f5775696a5">m_iBlockLength</a> : 2 * <a class="code hl_variable" href="a00552.xhtml#aa3513c5e5bfa407a3d9f09f5775696a5">m_iBlockLength</a> - 1;</div>
<div class="line"><span class="lineno">  109</span>}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00206_source.xhtml#l00067">m_bIsInitialized</a>, and <a class="el" href="a00206_source.xhtml#l00073">m_iBlockLength</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00038_source.xhtml#l00729">CFeatureTimeMaxAcf::CFeatureTimeMaxAcf()</a>, <a class="el" href="a00104_source.xhtml#l00018">CPitchSpectralAcf::CPitchSpectralAcf()</a>, <a class="el" href="a00104_source.xhtml#l00141">CPitchTimeAcf::CPitchTimeAcf()</a>, and <a class="el" href="a00104_source.xhtml#l00215">CPitchTimeAuditory::CPitchTimeAuditory()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00552_afe56cc1681b982d7d31b0830b3471b61_icgraph.svg" width="398" height="235"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="afa3cb0579386bd1108d010962e801d31" name="afa3cb0579386bd1108d010962e801d31"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afa3cb0579386bd1108d010962e801d31">&#9670;&nbsp;</a></span>getCcfMax()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">float CCcf::getCcfMax </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="a00254.xhtml#abb452686968e48b67397da5f97445f5b">bool</a>&#160;</td>
          <td class="paramname"><em>bisAcf</em> = <code><a class="el" href="a00254.xhtml#a65e9886d74aaee76545e83dd09011727">false</a></code></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >returns the overall max </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">bisAcf</td><td>search only non-redundant ACF result if true </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>float </dd></dl>

<p class="definition">Definition at line <a class="el" href="a00107_source.xhtml#l00124">124</a> of file <a class="el" href="a00107_source.xhtml">ToolCcf.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  125</span>{</div>
<div class="line"><span class="lineno">  126</span>    <span class="keywordflow">if</span> (!(<a class="code hl_variable" href="a00552.xhtml#a9dd23e9688d57262ae7b7b8d03a4c918">m_bIsInitialized</a> &amp;&amp; <a class="code hl_variable" href="a00552.xhtml#a245d68ee43cdd28bab6701bf0d6b3974">m_bWasProcessed</a>))</div>
<div class="line"><span class="lineno">  127</span>        <span class="keywordflow">return</span> -1.F;</div>
<div class="line"><span class="lineno">  128</span> </div>
<div class="line"><span class="lineno">  129</span>    <span class="keywordtype">int</span> iStartIdx = bIsAcf ? <a class="code hl_variable" href="a00552.xhtml#aa3513c5e5bfa407a3d9f09f5775696a5">m_iBlockLength</a> - 1 : 0;</div>
<div class="line"><span class="lineno">  130</span>    <span class="keywordflow">return</span> <a class="code hl_function" href="a00508.xhtml#a9f5be871090bc5a64a7732cebfb4f8ec">CVector::getMax</a>(&amp;<a class="code hl_variable" href="a00552.xhtml#aa8cad7d3e5fa2685d3504ab813cc2ce7">m_apfData</a>[1][iStartIdx], <span class="keyword">static_cast&lt;</span><span class="keywordtype">long</span> <span class="keywordtype">long</span><span class="keyword">&gt;</span>(2) * <a class="code hl_variable" href="a00552.xhtml#aa3513c5e5bfa407a3d9f09f5775696a5">m_iBlockLength</a> - 1 - iStartIdx);</div>
<div class="line"><span class="lineno">  131</span>}</div>
<div class="ttc" id="aa00508_xhtml_a9f5be871090bc5a64a7732cebfb4f8ec"><div class="ttname"><a href="a00508.xhtml#a9f5be871090bc5a64a7732cebfb4f8ec">CVector::getMax</a></div><div class="ttdeci">static T getMax(const T *ptSrc, long long int iLength, bool bAbs=false)</div><div class="ttdef"><b>Definition:</b> <a href="a00158_source.xhtml#l00554">Vector.h:554</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00158_source.xhtml#l00554">CVector::getMax()</a>, <a class="el" href="a00206_source.xhtml#l00070">m_apfData</a>, <a class="el" href="a00206_source.xhtml#l00067">m_bIsInitialized</a>, <a class="el" href="a00206_source.xhtml#l00068">m_bWasProcessed</a>, and <a class="el" href="a00206_source.xhtml#l00073">m_iBlockLength</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00552_afa3cb0579386bd1108d010962e801d31_cgraph.svg" width="462" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a166090237df809ea2fa9e0cb73bca3c0" name="a166090237df809ea2fa9e0cb73bca3c0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a166090237df809ea2fa9e0cb73bca3c0">&#9670;&nbsp;</a></span>getCcfMaxIdx()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int CCcf::getCcfMaxIdx </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="a00254.xhtml#abb452686968e48b67397da5f97445f5b">bool</a>&#160;</td>
          <td class="paramname"><em>bisAcf</em> = <code><a class="el" href="a00254.xhtml#a65e9886d74aaee76545e83dd09011727">false</a></code></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >returns the index of the overall max </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">bisAcf</td><td>search only non-redundant ACF result if true </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>float </dd></dl>

<p class="definition">Definition at line <a class="el" href="a00107_source.xhtml#l00133">133</a> of file <a class="el" href="a00107_source.xhtml">ToolCcf.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  134</span>{</div>
<div class="line"><span class="lineno">  135</span>    <span class="keywordflow">if</span> (!(<a class="code hl_variable" href="a00552.xhtml#a9dd23e9688d57262ae7b7b8d03a4c918">m_bIsInitialized</a> &amp;&amp; <a class="code hl_variable" href="a00552.xhtml#a245d68ee43cdd28bab6701bf0d6b3974">m_bWasProcessed</a>))</div>
<div class="line"><span class="lineno">  136</span>        <span class="keywordflow">return</span> -1;</div>
<div class="line"><span class="lineno">  137</span>    <span class="keywordtype">float</span> fMax = -1.F;</div>
<div class="line"><span class="lineno">  138</span>    <span class="keywordtype">long</span> <span class="keywordtype">long</span> iMax = -1;</div>
<div class="line"><span class="lineno">  139</span>    <span class="keywordtype">int</span> iStartIdx = bIsAcf ? <a class="code hl_variable" href="a00552.xhtml#aa3513c5e5bfa407a3d9f09f5775696a5">m_iBlockLength</a> - 1 : 0;</div>
<div class="line"><span class="lineno">  140</span>    </div>
<div class="line"><span class="lineno">  141</span>    <a class="code hl_function" href="a00508.xhtml#a34a5c0abd80cd982df8a8bae7cbcea19">CVector::findMax</a>(&amp;<a class="code hl_variable" href="a00552.xhtml#aa8cad7d3e5fa2685d3504ab813cc2ce7">m_apfData</a>[1][iStartIdx], fMax, iMax, <span class="keyword">static_cast&lt;</span><span class="keywordtype">long</span> <span class="keywordtype">long</span><span class="keyword">&gt;</span>(2) * <a class="code hl_variable" href="a00552.xhtml#aa3513c5e5bfa407a3d9f09f5775696a5">m_iBlockLength</a> - 1 - iStartIdx);</div>
<div class="line"><span class="lineno">  142</span> </div>
<div class="line"><span class="lineno">  143</span>    <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span><span class="keywordtype">int</span><span class="keyword">&gt;</span>(iMax);</div>
<div class="line"><span class="lineno">  144</span>}</div>
<div class="ttc" id="aa00508_xhtml_a34a5c0abd80cd982df8a8bae7cbcea19"><div class="ttname"><a href="a00508.xhtml#a34a5c0abd80cd982df8a8bae7cbcea19">CVector::findMax</a></div><div class="ttdeci">static void findMax(const T *ptSrc, T &amp;fMax, long long &amp;iMax, long long int iLength, bool bAbs=false)</div><div class="ttdef"><b>Definition:</b> <a href="a00158_source.xhtml#l00625">Vector.h:625</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00158_source.xhtml#l00625">CVector::findMax()</a>, <a class="el" href="a00206_source.xhtml#l00070">m_apfData</a>, <a class="el" href="a00206_source.xhtml#l00067">m_bIsInitialized</a>, <a class="el" href="a00206_source.xhtml#l00068">m_bWasProcessed</a>, and <a class="el" href="a00206_source.xhtml#l00073">m_iBlockLength</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00552_a166090237df809ea2fa9e0cb73bca3c0_cgraph.svg" width="314" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="af683b1b5e37ca2039424af02f4bfb3c5" name="af683b1b5e37ca2039424af02f4bfb3c5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af683b1b5e37ca2039424af02f4bfb3c5">&#9670;&nbsp;</a></span>init()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00122.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> CCcf::init </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>iBlockLength</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >initializes the class with the size of the distance matrix </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">iBlockLength</td><td></td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Error_t </dd></dl>

<p class="definition">Definition at line <a class="el" href="a00107_source.xhtml#l00020">20</a> of file <a class="el" href="a00107_source.xhtml">ToolCcf.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   21</span>{</div>
<div class="line"><span class="lineno">   22</span>    <span class="keywordflow">if</span> (iBlockLength &lt;= 0)</div>
<div class="line"><span class="lineno">   23</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00122.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248">Error_t::kFunctionInvalidArgsError</a>;</div>
<div class="line"><span class="lineno">   24</span> </div>
<div class="line"><span class="lineno">   25</span>    <span class="keywordflow">if</span> (<a class="code hl_variable" href="a00552.xhtml#a9dd23e9688d57262ae7b7b8d03a4c918">m_bIsInitialized</a>)</div>
<div class="line"><span class="lineno">   26</span>        <a class="code hl_function" href="a00552.xhtml#a6edce7be75bf0b89dcc4a20e491ad8d8">reset</a>();</div>
<div class="line"><span class="lineno">   27</span> </div>
<div class="line"><span class="lineno">   28</span>    <a class="code hl_variable" href="a00552.xhtml#aa3513c5e5bfa407a3d9f09f5775696a5">m_iBlockLength</a> = iBlockLength;</div>
<div class="line"><span class="lineno">   29</span>    <span class="keywordflow">if</span> (<a class="code hl_function" href="a00504.xhtml#a6d0e75b0bcbbb243b7141cfc0126e443">CUtil::isPowOf2</a>(<a class="code hl_variable" href="a00552.xhtml#aa3513c5e5bfa407a3d9f09f5775696a5">m_iBlockLength</a>))</div>
<div class="line"><span class="lineno">   30</span>        <a class="code hl_variable" href="a00552.xhtml#a3172706be7e3ec2182b40669ef468c00">m_iFftLength</a> = 2 * <a class="code hl_variable" href="a00552.xhtml#aa3513c5e5bfa407a3d9f09f5775696a5">m_iBlockLength</a>;</div>
<div class="line"><span class="lineno">   31</span>    <span class="keywordflow">else</span></div>
<div class="line"><span class="lineno">   32</span>        <a class="code hl_variable" href="a00552.xhtml#a3172706be7e3ec2182b40669ef468c00">m_iFftLength</a> = <a class="code hl_function" href="a00504.xhtml#a0fd55429d52515a9efb2fe602ce8f9ed">CUtil::nextPowOf2</a>(2*iBlockLength);</div>
<div class="line"><span class="lineno">   33</span> </div>
<div class="line"><span class="lineno">   34</span>    <a class="code hl_variable" href="a00552.xhtml#a8474a655b6e148c237aa7ba9ecee7d47">m_pCFft</a>-&gt;<a class="code hl_function" href="a00480.xhtml#adea9b0cecccfdb5a3da3218da6f683dd">init</a>(<a class="code hl_variable" href="a00552.xhtml#aa3513c5e5bfa407a3d9f09f5775696a5">m_iBlockLength</a>, 2, <a class="code hl_enumvalue" href="a00480.xhtml#a8eb1a5f3e9aaca08421479d2438dac84a197866057d0b408d209e05c687389a07">CFft::kWindowHann</a>, <a class="code hl_enumvalue" href="a00480.xhtml#a76d891ae674880a00dc09d0d86aff31ea5535e62c1ffea869f26081217ac36614">CFft::kNoWindow</a>);</div>
<div class="line"><span class="lineno">   35</span> </div>
<div class="line"><span class="lineno">   36</span>    <span class="keywordflow">for</span> (<span class="keyword">auto</span> j = 0; j &lt; 2; j++)</div>
<div class="line"><span class="lineno">   37</span>        <a class="code hl_function" href="a00508.xhtml#abaadac98b1cad18b7b568852bc951696">CVector::alloc</a>(<a class="code hl_variable" href="a00552.xhtml#aa8cad7d3e5fa2685d3504ab813cc2ce7">m_apfData</a>[j], <a class="code hl_variable" href="a00552.xhtml#a3172706be7e3ec2182b40669ef468c00">m_iFftLength</a>);</div>
<div class="line"><span class="lineno">   38</span> </div>
<div class="line"><span class="lineno">   39</span>    <a class="code hl_variable" href="a00552.xhtml#a9dd23e9688d57262ae7b7b8d03a4c918">m_bIsInitialized</a> = <span class="keyword">true</span>;</div>
<div class="line"><span class="lineno">   40</span> </div>
<div class="line"><span class="lineno">   41</span>    <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00122.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><span class="lineno">   42</span>}</div>
<div class="ttc" id="aa00480_xhtml_a76d891ae674880a00dc09d0d86aff31ea5535e62c1ffea869f26081217ac36614"><div class="ttname"><a href="a00480.xhtml#a76d891ae674880a00dc09d0d86aff31ea5535e62c1ffea869f26081217ac36614">CFft::kNoWindow</a></div><div class="ttdeci">@ kNoWindow</div><div class="ttdoc">do not apply any window</div><div class="ttdef"><b>Definition:</b> <a href="a00149_source.xhtml#l00025">Fft.h:25</a></div></div>
<div class="ttc" id="aa00480_xhtml_a8eb1a5f3e9aaca08421479d2438dac84a197866057d0b408d209e05c687389a07"><div class="ttname"><a href="a00480.xhtml#a8eb1a5f3e9aaca08421479d2438dac84a197866057d0b408d209e05c687389a07">CFft::kWindowHann</a></div><div class="ttdeci">@ kWindowHann</div><div class="ttdoc">von-Hann window</div><div class="ttdef"><b>Definition:</b> <a href="a00149_source.xhtml#l00018">Fft.h:18</a></div></div>
<div class="ttc" id="aa00480_xhtml_adea9b0cecccfdb5a3da3218da6f683dd"><div class="ttname"><a href="a00480.xhtml#adea9b0cecccfdb5a3da3218da6f683dd">CFft::init</a></div><div class="ttdeci">Error_t init(int iBlockLength, int iZeroPadFactor=1, WindowFunction_t eWindow=kWindowHann, Windowing_t eWindowing=kPreWindow)</div><div class="ttdef"><b>Definition:</b> <a href="a00074_source.xhtml#l00024">Fft.cpp:24</a></div></div>
<div class="ttc" id="aa00504_xhtml_a0fd55429d52515a9efb2fe602ce8f9ed"><div class="ttname"><a href="a00504.xhtml#a0fd55429d52515a9efb2fe602ce8f9ed">CUtil::nextPowOf2</a></div><div class="ttdeci">static int nextPowOf2(int n)</div><div class="ttdef"><b>Definition:</b> <a href="a00164_source.xhtml#l00051">Util.h:51</a></div></div>
<div class="ttc" id="aa00504_xhtml_a6d0e75b0bcbbb243b7141cfc0126e443"><div class="ttname"><a href="a00504.xhtml#a6d0e75b0bcbbb243b7141cfc0126e443">CUtil::isPowOf2</a></div><div class="ttdeci">static bool isPowOf2(int n)</div><div class="ttdef"><b>Definition:</b> <a href="a00164_source.xhtml#l00042">Util.h:42</a></div></div>
<div class="ttc" id="aa00508_xhtml_abaadac98b1cad18b7b568852bc951696"><div class="ttname"><a href="a00508.xhtml#abaadac98b1cad18b7b568852bc951696">CVector::alloc</a></div><div class="ttdeci">static void alloc(T *&amp;ptVec, long long iLength)</div><div class="ttdef"><b>Definition:</b> <a href="a00158_source.xhtml#l00023">Vector.h:23</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00158_source.xhtml#l00023">CVector::alloc()</a>, <a class="el" href="a00074_source.xhtml#l00024">CFft::init()</a>, <a class="el" href="a00164_source.xhtml#l00042">CUtil::isPowOf2()</a>, <a class="el" href="a00122.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248">kFunctionInvalidArgsError</a>, <a class="el" href="a00122.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">kNoError</a>, <a class="el" href="a00149_source.xhtml#l00025">CFft::kNoWindow</a>, <a class="el" href="a00149_source.xhtml#l00018">CFft::kWindowHann</a>, <a class="el" href="a00206_source.xhtml#l00070">m_apfData</a>, <a class="el" href="a00206_source.xhtml#l00067">m_bIsInitialized</a>, <a class="el" href="a00206_source.xhtml#l00073">m_iBlockLength</a>, <a class="el" href="a00206_source.xhtml#l00074">m_iFftLength</a>, <a class="el" href="a00206_source.xhtml#l00071">m_pCFft</a>, <a class="el" href="a00164_source.xhtml#l00051">CUtil::nextPowOf2()</a>, and <a class="el" href="a00107_source.xhtml#l00044">reset()</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00038_source.xhtml#l00729">CFeatureTimeMaxAcf::CFeatureTimeMaxAcf()</a>, <a class="el" href="a00086_source.xhtml#l00113">CBeatHistoIf::compBeatHisto()</a>, <a class="el" href="a00104_source.xhtml#l00018">CPitchSpectralAcf::CPitchSpectralAcf()</a>, <a class="el" href="a00104_source.xhtml#l00141">CPitchTimeAcf::CPitchTimeAcf()</a>, and <a class="el" href="a00104_source.xhtml#l00215">CPitchTimeAuditory::CPitchTimeAuditory()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00552_af683b1b5e37ca2039424af02f4bfb3c5_cgraph.svg" width="100%" height="516"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00552_af683b1b5e37ca2039424af02f4bfb3c5_icgraph.svg" width="436" height="287"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ab96999b26a5f44a07cc7ca0057d8531e" name="ab96999b26a5f44a07cc7ca0057d8531e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab96999b26a5f44a07cc7ca0057d8531e">&#9670;&nbsp;</a></span>operator=()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00552.xhtml">CCcf</a> &amp; CCcf::operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="a00552.xhtml">CCcf</a> &amp;&#160;</td>
          <td class="paramname"><em>c</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a6edce7be75bf0b89dcc4a20e491ad8d8" name="a6edce7be75bf0b89dcc4a20e491ad8d8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6edce7be75bf0b89dcc4a20e491ad8d8">&#9670;&nbsp;</a></span>reset()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00122.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> CCcf::reset </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >resets all internal class members </p><dl class="section return"><dt>Returns</dt><dd>Error_t </dd></dl>

<p class="definition">Definition at line <a class="el" href="a00107_source.xhtml#l00044">44</a> of file <a class="el" href="a00107_source.xhtml">ToolCcf.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   45</span>{</div>
<div class="line"><span class="lineno">   46</span>    <a class="code hl_variable" href="a00552.xhtml#a245d68ee43cdd28bab6701bf0d6b3974">m_bWasProcessed</a> = <span class="keyword">false</span>;</div>
<div class="line"><span class="lineno">   47</span>    <a class="code hl_variable" href="a00552.xhtml#a9dd23e9688d57262ae7b7b8d03a4c918">m_bIsInitialized</a> = <span class="keyword">false</span>;</div>
<div class="line"><span class="lineno">   48</span> </div>
<div class="line"><span class="lineno">   49</span>    <a class="code hl_variable" href="a00552.xhtml#a8474a655b6e148c237aa7ba9ecee7d47">m_pCFft</a>-&gt;<a class="code hl_function" href="a00480.xhtml#a0a0053b6ce93161553b573a16c77387a">reset</a>();</div>
<div class="line"><span class="lineno">   50</span> </div>
<div class="line"><span class="lineno">   51</span>    <span class="keywordflow">for</span> (<span class="keyword">auto</span> j = 0; j &lt; 2; j++)</div>
<div class="line"><span class="lineno">   52</span>    {</div>
<div class="line"><span class="lineno">   53</span>        <a class="code hl_function" href="a00508.xhtml#aa86bdb0c663d4d52f2765793756f8737">CVector::free</a>(<a class="code hl_variable" href="a00552.xhtml#aa8cad7d3e5fa2685d3504ab813cc2ce7">m_apfData</a>[j]);</div>
<div class="line"><span class="lineno">   54</span>    }</div>
<div class="line"><span class="lineno">   55</span>    </div>
<div class="line"><span class="lineno">   56</span>    <a class="code hl_variable" href="a00552.xhtml#a3172706be7e3ec2182b40669ef468c00">m_iFftLength</a> = 0;</div>
<div class="line"><span class="lineno">   57</span>    <a class="code hl_variable" href="a00552.xhtml#aa3513c5e5bfa407a3d9f09f5775696a5">m_iBlockLength</a> = 0;</div>
<div class="line"><span class="lineno">   58</span> </div>
<div class="line"><span class="lineno">   59</span>    <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00122.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><span class="lineno">   60</span>}</div>
<div class="ttc" id="aa00480_xhtml_a0a0053b6ce93161553b573a16c77387a"><div class="ttname"><a href="a00480.xhtml#a0a0053b6ce93161553b573a16c77387a">CFft::reset</a></div><div class="ttdeci">Error_t reset()</div><div class="ttdef"><b>Definition:</b> <a href="a00074_source.xhtml#l00053">Fft.cpp:53</a></div></div>
<div class="ttc" id="aa00508_xhtml_aa86bdb0c663d4d52f2765793756f8737"><div class="ttname"><a href="a00508.xhtml#aa86bdb0c663d4d52f2765793756f8737">CVector::free</a></div><div class="ttdeci">static void free(T *&amp;ptVec)</div><div class="ttdef"><b>Definition:</b> <a href="a00158_source.xhtml#l00037">Vector.h:37</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00158_source.xhtml#l00037">CVector::free()</a>, <a class="el" href="a00122.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">kNoError</a>, <a class="el" href="a00206_source.xhtml#l00070">m_apfData</a>, <a class="el" href="a00206_source.xhtml#l00067">m_bIsInitialized</a>, <a class="el" href="a00206_source.xhtml#l00068">m_bWasProcessed</a>, <a class="el" href="a00206_source.xhtml#l00073">m_iBlockLength</a>, <a class="el" href="a00206_source.xhtml#l00074">m_iFftLength</a>, <a class="el" href="a00206_source.xhtml#l00071">m_pCFft</a>, and <a class="el" href="a00074_source.xhtml#l00053">CFft::reset()</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00107_source.xhtml#l00020">init()</a>, and <a class="el" href="a00107_source.xhtml#l00013">~CCcf()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00552_a6edce7be75bf0b89dcc4a20e491ad8d8_cgraph.svg" width="550" height="63"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00552_a6edce7be75bf0b89dcc4a20e491ad8d8_icgraph.svg" width="590" height="287"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="aa8cad7d3e5fa2685d3504ab813cc2ce7" name="aa8cad7d3e5fa2685d3504ab813cc2ce7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa8cad7d3e5fa2685d3504ab813cc2ce7">&#9670;&nbsp;</a></span>m_apfData</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float* CCcf::m_apfData[2] = { 0,0 }</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>CCF result. </p>

<p class="definition">Definition at line <a class="el" href="a00206_source.xhtml#l00070">70</a> of file <a class="el" href="a00206_source.xhtml">ToolCcf.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00107_source.xhtml#l00062">compCcf()</a>, <a class="el" href="a00107_source.xhtml#l00111">getCcf()</a>, <a class="el" href="a00107_source.xhtml#l00124">getCcfMax()</a>, <a class="el" href="a00107_source.xhtml#l00133">getCcfMaxIdx()</a>, <a class="el" href="a00107_source.xhtml#l00020">init()</a>, and <a class="el" href="a00107_source.xhtml#l00044">reset()</a>.</p>

</div>
</div>
<a id="a9dd23e9688d57262ae7b7b8d03a4c918" name="a9dd23e9688d57262ae7b7b8d03a4c918"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9dd23e9688d57262ae7b7b8d03a4c918">&#9670;&nbsp;</a></span>m_bIsInitialized</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00254.xhtml#abb452686968e48b67397da5f97445f5b">bool</a> CCcf::m_bIsInitialized = <a class="el" href="a00254.xhtml#a65e9886d74aaee76545e83dd09011727">false</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>true if init has been called </p>

<p class="definition">Definition at line <a class="el" href="a00206_source.xhtml#l00067">67</a> of file <a class="el" href="a00206_source.xhtml">ToolCcf.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00107_source.xhtml#l00062">compCcf()</a>, <a class="el" href="a00107_source.xhtml#l00111">getCcf()</a>, <a class="el" href="a00107_source.xhtml#l00103">getCcfLength()</a>, <a class="el" href="a00107_source.xhtml#l00124">getCcfMax()</a>, <a class="el" href="a00107_source.xhtml#l00133">getCcfMaxIdx()</a>, <a class="el" href="a00107_source.xhtml#l00020">init()</a>, and <a class="el" href="a00107_source.xhtml#l00044">reset()</a>.</p>

</div>
</div>
<a id="a245d68ee43cdd28bab6701bf0d6b3974" name="a245d68ee43cdd28bab6701bf0d6b3974"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a245d68ee43cdd28bab6701bf0d6b3974">&#9670;&nbsp;</a></span>m_bWasProcessed</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00254.xhtml#abb452686968e48b67397da5f97445f5b">bool</a> CCcf::m_bWasProcessed = <a class="el" href="a00254.xhtml#a65e9886d74aaee76545e83dd09011727">false</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>true if process has been called </p>

<p class="definition">Definition at line <a class="el" href="a00206_source.xhtml#l00068">68</a> of file <a class="el" href="a00206_source.xhtml">ToolCcf.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00107_source.xhtml#l00062">compCcf()</a>, <a class="el" href="a00107_source.xhtml#l00111">getCcf()</a>, <a class="el" href="a00107_source.xhtml#l00124">getCcfMax()</a>, <a class="el" href="a00107_source.xhtml#l00133">getCcfMaxIdx()</a>, and <a class="el" href="a00107_source.xhtml#l00044">reset()</a>.</p>

</div>
</div>
<a id="aa3513c5e5bfa407a3d9f09f5775696a5" name="aa3513c5e5bfa407a3d9f09f5775696a5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa3513c5e5bfa407a3d9f09f5775696a5">&#9670;&nbsp;</a></span>m_iBlockLength</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int CCcf::m_iBlockLength = 0</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>length of input </p>

<p class="definition">Definition at line <a class="el" href="a00206_source.xhtml#l00073">73</a> of file <a class="el" href="a00206_source.xhtml">ToolCcf.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00107_source.xhtml#l00062">compCcf()</a>, <a class="el" href="a00107_source.xhtml#l00111">getCcf()</a>, <a class="el" href="a00107_source.xhtml#l00103">getCcfLength()</a>, <a class="el" href="a00107_source.xhtml#l00124">getCcfMax()</a>, <a class="el" href="a00107_source.xhtml#l00133">getCcfMaxIdx()</a>, <a class="el" href="a00107_source.xhtml#l00020">init()</a>, and <a class="el" href="a00107_source.xhtml#l00044">reset()</a>.</p>

</div>
</div>
<a id="a3172706be7e3ec2182b40669ef468c00" name="a3172706be7e3ec2182b40669ef468c00"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3172706be7e3ec2182b40669ef468c00">&#9670;&nbsp;</a></span>m_iFftLength</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int CCcf::m_iFftLength = 0</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>length of FFT </p>

<p class="definition">Definition at line <a class="el" href="a00206_source.xhtml#l00074">74</a> of file <a class="el" href="a00206_source.xhtml">ToolCcf.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00107_source.xhtml#l00062">compCcf()</a>, <a class="el" href="a00107_source.xhtml#l00020">init()</a>, and <a class="el" href="a00107_source.xhtml#l00044">reset()</a>.</p>

</div>
</div>
<a id="a8474a655b6e148c237aa7ba9ecee7d47" name="a8474a655b6e148c237aa7ba9ecee7d47"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8474a655b6e148c237aa7ba9ecee7d47">&#9670;&nbsp;</a></span>m_pCFft</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00480.xhtml">CFft</a>* CCcf::m_pCFft = 0</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>FFT instance. </p>

<p class="definition">Definition at line <a class="el" href="a00206_source.xhtml#l00071">71</a> of file <a class="el" href="a00206_source.xhtml">ToolCcf.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00107_source.xhtml#l00008">CCcf()</a>, <a class="el" href="a00107_source.xhtml#l00062">compCcf()</a>, <a class="el" href="a00107_source.xhtml#l00020">init()</a>, <a class="el" href="a00107_source.xhtml#l00044">reset()</a>, and <a class="el" href="a00107_source.xhtml#l00013">~CCcf()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="a00206_source.xhtml">ToolCcf.h</a></li>
<li><a class="el" href="a00107_source.xhtml">ToolCcf.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="a00552.xhtml">CCcf</a></li>
    <li class="footer">Generated on Tue Jun 14 2022 21:07:19 for ACA by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.4 </li>
  </ul>
</div>
</body>
</html>
