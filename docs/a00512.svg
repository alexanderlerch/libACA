<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 4.0.0 (20220602.1335)
 -->
<!-- Title: CNoveltyIf Pages: 1 -->
<!--zoomable 1976 -->
<svg id="main" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" onload="init(evt)">
<style type="text/css"><![CDATA[
.edge:hover path { stroke: red; }
.edge:hover polygon { stroke: red; fill: red; }
]]></style>
<script type="text/javascript"><![CDATA[
var edges = document.getElementsByTagName('g');
if (edges && edges.length) {
  for (var i=0;i<edges.length;i++) {
    if (edges[i].id.substr(0,4)=='edge') {
      edges[i].setAttribute('class','edge');
    }
  }
}
]]></script>
        <defs>
                <circle id="rim" cx="0" cy="0" r="7"/>
                <circle id="rim2" cx="0" cy="0" r="3.5"/>
                <g id="zoomPlus">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomplus.mouseover" end="zoomplus.mouseout"/>
                        </use>
                        <path d="M-4,0h8M0,-4v8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="zoomMin">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomminus.mouseover" end="zoomminus.mouseout"/>
                        </use>
                        <path d="M-4,0h8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="dirArrow">
                        <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
               <g id="resetDef">
                       <use xlink:href="#rim2" fill="#404040">
                               <set attributeName="fill" to="#808080" begin="reset.mouseover" end="reset.mouseout"/>
                       </use>
               </g>
        </defs>

<script type="text/javascript">
var viewWidth = 926;
var viewHeight = 1976;
var sectionId = 'dynsection-1';
</script>
<script xlink:href="svgpan.js"/>
<svg id="graph" class="graph">
<g id="viewport">
<title>CNoveltyIf</title>
<polygon fill="white" stroke="transparent" points="-4,4 -4,-1972 921.5,-1972 921.5,4 -4,4"/>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="class for computation of a magnitude Novelty from either a file or a vector">
<polygon fill="#bfbfbf" stroke="black" points="335.5,-0.5 335.5,-552.5 544.5,-552.5 544.5,-0.5 335.5,-0.5"/>
<text text-anchor="middle" x="440" y="-540.5" font-family="Helvetica,sans-Serif" font-size="10.00">CNoveltyIf</text>
<polyline fill="none" stroke="black" points="335.5,-533.5 544.5,-533.5 "/>
<text text-anchor="start" x="343.5" y="-521.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iBlockLength</text>
<text text-anchor="start" x="343.5" y="-510.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iHopLength</text>
<text text-anchor="start" x="343.5" y="-499.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float m_fSampleRate</text>
<text text-anchor="start" x="343.5" y="-488.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float * m_pfProcBuff2</text>
<text text-anchor="start" x="343.5" y="-477.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float * m_pfProcBuff1</text>
<text text-anchor="start" x="343.5" y="-466.5" font-family="Helvetica,sans-Serif" font-size="10.00"># bool m_bIsInitialized</text>
<polyline fill="none" stroke="black" points="335.5,-459.5 544.5,-459.5 "/>
<text text-anchor="start" x="343.5" y="-447.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getNumBlocks</text>
<text text-anchor="start" x="343.5" y="-436.5" font-family="Helvetica,sans-Serif" font-size="10.00">(int &amp;iNumBlocks) const</text>
<text text-anchor="start" x="343.5" y="-425.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ int getNumBlocks()</text>
<text text-anchor="start" x="343.5" y="-414.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const</text>
<text text-anchor="start" x="343.5" y="-403.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ float getTimeStamp</text>
<text text-anchor="start" x="343.5" y="-392.5" font-family="Helvetica,sans-Serif" font-size="10.00">(int iBlockIdx) const</text>
<text text-anchor="start" x="343.5" y="-381.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getTimeStamps</text>
<text text-anchor="start" x="343.5" y="-370.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfAxisTicks) const</text>
<text text-anchor="start" x="343.5" y="-359.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compNovelty</text>
<text text-anchor="start" x="343.5" y="-348.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfNovelty, bool</text>
<text text-anchor="start" x="343.5" y="-337.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pbisOnset=0)</text>
<text text-anchor="start" x="343.5" y="-326.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="343.5" y="-315.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CNoveltyIf *&amp;pCInstance,</text>
<text text-anchor="start" x="343.5" y="-304.5" font-family="Helvetica,sans-Serif" font-size="10.00"> Novelty_t eNoveltyIdx,</text>
<text text-anchor="start" x="343.5" y="-293.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const std::string &amp;strAudioFile</text>
<text text-anchor="start" x="343.5" y="-282.5" font-family="Helvetica,sans-Serif" font-size="10.00">Path, int iBlockLength=4096,</text>
<text text-anchor="start" x="343.5" y="-271.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iHopLength=512)</text>
<text text-anchor="start" x="343.5" y="-260.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="343.5" y="-249.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CNoveltyIf *&amp;pCInstance,</text>
<text text-anchor="start" x="343.5" y="-238.5" font-family="Helvetica,sans-Serif" font-size="10.00"> Novelty_t eNoveltyIdx,</text>
<text text-anchor="start" x="343.5" y="-227.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const float *pfAudio, long</text>
<text text-anchor="start" x="343.5" y="-216.5" font-family="Helvetica,sans-Serif" font-size="10.00"> long iNumSamples, float fSampleRate,</text>
<text text-anchor="start" x="343.5" y="-205.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iBlockLength=4096, int iHopLength=512)</text>
<text text-anchor="start" x="343.5" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="343.5" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CNoveltyIf *&amp;pCInstance)</text>
<text text-anchor="start" x="343.5" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static std::string</text>
<text text-anchor="start" x="343.5" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00"> getNoveltyString(Novelty</text>
<text text-anchor="start" x="343.5" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t eNoveltyIdx)</text>
<text text-anchor="start" x="343.5" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Novelty_t getNovelty</text>
<text text-anchor="start" x="343.5" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00">IdxFromString(std::string</text>
<text text-anchor="start" x="343.5" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00"> sNoveltyString)</text>
<text text-anchor="start" x="343.5" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CNoveltyIf()</text>
<text text-anchor="start" x="343.5" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CNoveltyIf()</text>
<text text-anchor="start" x="343.5" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CNoveltyIf(const CNovelty</text>
<text text-anchor="start" x="343.5" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00">If &amp;that)</text>
<text text-anchor="start" x="343.5" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CNoveltyIf &amp; operator</text>
<text text-anchor="start" x="343.5" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CNoveltyIf &amp;c)</text>
<text text-anchor="start" x="343.5" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t reset_()</text>
<text text-anchor="start" x="343.5" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t init_(Novelty</text>
<text text-anchor="start" x="343.5" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t eNoveltyIdx)</text>
<text text-anchor="start" x="343.5" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00"># void computeMagSpectrum_()</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="a00606.xhtml" target="_top" xlink:title="class for audio normalization offering three options">
<polygon fill="white" stroke="black" points="0,-765.5 0,-998.5 150,-998.5 150,-765.5 0,-765.5"/>
<text text-anchor="middle" x="75" y="-986.5" font-family="Helvetica,sans-Serif" font-size="10.00">CNormalizeAudio</text>
<polyline fill="none" stroke="black" points="0,-979.5 150,-979.5 "/>
<text text-anchor="start" x="8" y="-967.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float m_fScaleFactor</text>
<polyline fill="none" stroke="black" points="0,-960.5 150,-960.5 "/>
<text text-anchor="start" x="8" y="-948.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CNormalizeAudio(CAudioFile</text>
<text text-anchor="start" x="8" y="-937.5" font-family="Helvetica,sans-Serif" font-size="10.00">If *pCAudioFile)</text>
<text text-anchor="start" x="8" y="-926.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CNormalizeAudio(const</text>
<text text-anchor="start" x="8" y="-915.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfAudioBuff, long</text>
<text text-anchor="start" x="8" y="-904.5" font-family="Helvetica,sans-Serif" font-size="10.00"> long iAudioLength)</text>
<text text-anchor="start" x="8" y="-893.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CNormalizeAudio()</text>
<text text-anchor="start" x="8" y="-882.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void normalizeBlock</text>
<text text-anchor="start" x="8" y="-871.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfAudioBlock,</text>
<text text-anchor="start" x="8" y="-860.5" font-family="Helvetica,sans-Serif" font-size="10.00"> long long iNumSamples)</text>
<text text-anchor="start" x="8" y="-849.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static void normalizeSignal</text>
<text text-anchor="start" x="8" y="-838.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfAudio, long long</text>
<text text-anchor="start" x="8" y="-827.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iNumSamples)</text>
<text text-anchor="start" x="8" y="-816.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CNormalizeAudio()</text>
<text text-anchor="start" x="8" y="-805.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CNormalizeAudio(const</text>
<text text-anchor="start" x="8" y="-794.5" font-family="Helvetica,sans-Serif" font-size="10.00"> CNormalizeAudio &amp;that)</text>
<text text-anchor="start" x="8" y="-783.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CNormalizeAudio &amp; operator</text>
<text text-anchor="start" x="8" y="-772.5" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CNormalizeAudio &amp;c)</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="#404040" d="M97.75,-765.5C111.01,-712.93 130.8,-651.17 159,-600 202.97,-520.19 269.35,-442.8 326.55,-383.84"/>
<polygon fill="none" stroke="#404040" points="326.89,-383.49 328.23,-376.41 335.28,-374.91 333.95,-382 326.89,-383.49"/>
<text text-anchor="middle" x="209.5" y="-574" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCNormalize</text>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="a00542.xhtml" target="_top" xlink:title="forward declaration">
<polygon fill="white" stroke="black" points="168,-666.5 168,-1097.5 328,-1097.5 328,-666.5 168,-666.5"/>
<text text-anchor="middle" x="248" y="-1085.5" font-family="Helvetica,sans-Serif" font-size="10.00">CBlockAudioIf</text>
<polyline fill="none" stroke="black" points="168,-1078.5 328,-1078.5 "/>
<text text-anchor="start" x="176" y="-1066.5" font-family="Helvetica,sans-Serif" font-size="10.00"># long long m_iNumBlocks</text>
<text text-anchor="start" x="176" y="-1055.5" font-family="Helvetica,sans-Serif" font-size="10.00"># long long m_iCurrBlock</text>
<text text-anchor="start" x="176" y="-1044.5" font-family="Helvetica,sans-Serif" font-size="10.00"># long long m_iAudioLength</text>
<text text-anchor="start" x="176" y="-1033.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iBlockLength</text>
<text text-anchor="start" x="176" y="-1022.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iNumChannels</text>
<text text-anchor="start" x="176" y="-1011.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iHopLength</text>
<text text-anchor="start" x="176" y="-1000.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float m_fSampleRate</text>
<polyline fill="none" stroke="black" points="168,-993.5 328,-993.5 "/>
<text text-anchor="start" x="176" y="-981.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ long long getNumBlocks</text>
<text text-anchor="start" x="176" y="-970.5" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="176" y="-959.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ long long getLengthInSamples</text>
<text text-anchor="start" x="176" y="-948.5" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="176" y="-937.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ float getTimeStamp</text>
<text text-anchor="start" x="176" y="-926.5" font-family="Helvetica,sans-Serif" font-size="10.00">(long long iBlockIdx)</text>
<text text-anchor="start" x="176" y="-915.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual bool isEndOfData</text>
<text text-anchor="start" x="176" y="-904.5" font-family="Helvetica,sans-Serif" font-size="10.00">() const =0</text>
<text text-anchor="start" x="176" y="-893.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual int getNextBlock</text>
<text text-anchor="start" x="176" y="-882.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfBlock, float</text>
<text text-anchor="start" x="176" y="-871.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfTimeStampInS=0)=0</text>
<text text-anchor="start" x="176" y="-860.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="176" y="-849.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CBlockAudioIf *&amp;pCInstance,</text>
<text text-anchor="start" x="176" y="-838.5" font-family="Helvetica,sans-Serif" font-size="10.00"> CAudioFileIf *pCAudioFile,</text>
<text text-anchor="start" x="176" y="-827.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iBlockLength, int iHopLength)</text>
<text text-anchor="start" x="176" y="-816.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="176" y="-805.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CBlockAudioIf *&amp;pCInstance,</text>
<text text-anchor="start" x="176" y="-794.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const float *pfAudioBuff,</text>
<text text-anchor="start" x="176" y="-783.5" font-family="Helvetica,sans-Serif" font-size="10.00"> long long iAudioLength, int</text>
<text text-anchor="start" x="176" y="-772.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iBlockLength, int iHopLength,</text>
<text text-anchor="start" x="176" y="-761.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate)</text>
<text text-anchor="start" x="176" y="-750.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="176" y="-739.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CBlockAudioIf *&amp;pCInstance)</text>
<text text-anchor="start" x="176" y="-728.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CBlockAudioIf()</text>
<text text-anchor="start" x="176" y="-717.5" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CBlockAudioIf()</text>
<text text-anchor="start" x="176" y="-706.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CBlockAudioIf(const</text>
<text text-anchor="start" x="176" y="-695.5" font-family="Helvetica,sans-Serif" font-size="10.00"> CBlockAudioIf &amp;that)</text>
<text text-anchor="start" x="176" y="-684.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CBlockAudioIf &amp; operator</text>
<text text-anchor="start" x="176" y="-673.5" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CBlockAudioIf &amp;c)</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node1 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node1</title>
<path fill="none" stroke="#404040" d="M315.98,-666.19C323.07,-643.84 330.18,-621.46 337,-600 340.71,-588.33 344.5,-576.42 348.33,-564.39"/>
<polygon fill="none" stroke="#404040" points="348.38,-564.25 346.39,-557.32 352.02,-552.82 354.01,-559.75 348.38,-564.25"/>
<text text-anchor="middle" x="387.5" y="-574" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCBlockAudio</text>
</g>
<!-- Node4 -->
<g id="node4" class="node">
<title>Node4</title>
<g id="a_node4"><a xlink:href="a00518.xhtml" target="_top" xlink:title="class for computation of a Novelty from a block of data (e.g., time or magnitude spectrum)">
<polygon fill="white" stroke="black" points="346,-600.5 346,-1163.5 534,-1163.5 534,-600.5 346,-600.5"/>
<text text-anchor="middle" x="440" y="-1151.5" font-family="Helvetica,sans-Serif" font-size="10.00">CNoveltyFromBlockIf</text>
<polyline fill="none" stroke="black" points="346,-1144.5 534,-1144.5 "/>
<text text-anchor="start" x="354" y="-1132.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CNoveltyIf::Novelty</text>
<text text-anchor="start" x="354" y="-1121.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t m_eNoveltyIdx</text>
<text text-anchor="start" x="354" y="-1110.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iDataLength</text>
<text text-anchor="start" x="354" y="-1099.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float m_fSampleRate</text>
<text text-anchor="start" x="354" y="-1088.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float * m_pfPrevSpec</text>
<text text-anchor="start" x="354" y="-1077.5" font-family="Helvetica,sans-Serif" font-size="10.00"># const std::map&lt; CNovelty</text>
<text text-anchor="start" x="354" y="-1066.5" font-family="Helvetica,sans-Serif" font-size="10.00">If::Novelty_t, std::function</text>
<text text-anchor="start" x="354" y="-1055.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; float(const float *, const</text>
<text text-anchor="start" x="354" y="-1044.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *, int, float)&gt; &gt; m_DispatchMap</text>
<polyline fill="none" stroke="black" points="346,-1037.5 534,-1037.5 "/>
<text text-anchor="start" x="354" y="-1025.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual int getNoveltyDimension</text>
<text text-anchor="start" x="354" y="-1014.5" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="354" y="-1003.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CNoveltyIf::Novelty</text>
<text text-anchor="start" x="354" y="-992.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t getNoveltyIdx() const</text>
<text text-anchor="start" x="354" y="-981.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Error_t compNovelty</text>
<text text-anchor="start" x="354" y="-970.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfNovelty, const</text>
<text text-anchor="start" x="354" y="-959.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfIn)</text>
<text text-anchor="start" x="354" y="-948.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="354" y="-937.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CNoveltyFromBlockIf</text>
<text text-anchor="start" x="354" y="-926.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *&amp;pCInstance, CNoveltyIf</text>
<text text-anchor="start" x="354" y="-915.5" font-family="Helvetica,sans-Serif" font-size="10.00">::Novelty_t eNoveltyIdx,</text>
<text text-anchor="start" x="354" y="-904.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="354" y="-893.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="354" y="-882.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CNoveltyFromBlockIf *&amp;pCInstance)</text>
<text text-anchor="start" x="354" y="-871.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compNovelty</text>
<text text-anchor="start" x="354" y="-860.5" font-family="Helvetica,sans-Serif" font-size="10.00">Flux(const float *pfMagSpec,</text>
<text text-anchor="start" x="354" y="-849.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const float *pfPrevSpec,</text>
<text text-anchor="start" x="354" y="-838.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="354" y="-827.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compNovelty</text>
<text text-anchor="start" x="354" y="-816.5" font-family="Helvetica,sans-Serif" font-size="10.00">Hainsworth(const float</text>
<text text-anchor="start" x="354" y="-805.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfMagSpec, const float</text>
<text text-anchor="start" x="354" y="-794.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfPrevSpec, int iDataLength,</text>
<text text-anchor="start" x="354" y="-783.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate=1.F)</text>
<text text-anchor="start" x="354" y="-772.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compNovelty</text>
<text text-anchor="start" x="354" y="-761.5" font-family="Helvetica,sans-Serif" font-size="10.00">Laroche(const float *pfMagSpec,</text>
<text text-anchor="start" x="354" y="-750.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const float *pfPrevSpec, int</text>
<text text-anchor="start" x="354" y="-739.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="354" y="-728.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CNoveltyFromBlockIf()</text>
<text text-anchor="start" x="354" y="-717.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CNoveltyFromBlockIf</text>
<text text-anchor="start" x="354" y="-706.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CNoveltyIf::Novelty</text>
<text text-anchor="start" x="354" y="-695.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t eNoveltyIdx, int iDataLength,</text>
<text text-anchor="start" x="354" y="-684.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate)</text>
<text text-anchor="start" x="354" y="-673.5" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CNoveltyFromBlockIf()</text>
<text text-anchor="start" x="354" y="-662.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CNoveltyFromBlockIf</text>
<text text-anchor="start" x="354" y="-651.5" font-family="Helvetica,sans-Serif" font-size="10.00">(const CNoveltyFromBlockIf</text>
<text text-anchor="start" x="354" y="-640.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;that)</text>
<text text-anchor="start" x="354" y="-629.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CNoveltyFromBlockIf</text>
<text text-anchor="start" x="354" y="-618.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp; operator=(const CNovelty</text>
<text text-anchor="start" x="354" y="-607.5" font-family="Helvetica,sans-Serif" font-size="10.00">FromBlockIf &amp;c)</text>
</a>
</g>
</g>
<!-- Node4&#45;&gt;Node1 -->
<g id="edge3" class="edge">
<title>Node4&#45;&gt;Node1</title>
<path fill="none" stroke="#404040" d="M440,-600.45C440,-588.69 440,-576.88 440,-565.1"/>
<polygon fill="none" stroke="#404040" points="440,-564.84 436,-558.84 440,-552.84 444,-558.84 440,-564.84"/>
<text text-anchor="middle" x="473.5" y="-574" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCNovelty</text>
</g>
<!-- Node5 -->
<g id="node5" class="node">
<title>Node5</title>
<g id="a_node5"><a xlink:href="a00474.xhtml" target="_top" xlink:title="class for FFT computation with windowing">
<polygon fill="white" stroke="black" points="552,-639 552,-1125 740,-1125 740,-639 552,-639"/>
<text text-anchor="middle" x="646" y="-1113" font-family="Helvetica,sans-Serif" font-size="10.00">CFft</text>
<polyline fill="none" stroke="black" points="552,-1106 740,-1106 "/>
<text text-anchor="start" x="560" y="-1094" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_pfProcBuff</text>
<text text-anchor="start" x="560" y="-1083" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_pfWindowBuff</text>
<text text-anchor="start" x="560" y="-1072" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iDataLength</text>
<text text-anchor="start" x="560" y="-1061" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iFftLength</text>
<text text-anchor="start" x="560" y="-1050" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Windowing_t m_ePrePostWindowOpt</text>
<text text-anchor="start" x="560" y="-1039" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; bool m_bIsInitialized</text>
<text text-anchor="start" x="560" y="-1028" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; static const float m_Pi</text>
<text text-anchor="start" x="560" y="-1017" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; static const float</text>
<text text-anchor="start" x="560" y="-1006" font-family="Helvetica,sans-Serif" font-size="10.00"> m_Pi2</text>
<polyline fill="none" stroke="black" points="552,-999 740,-999 "/>
<text text-anchor="start" x="560" y="-987" font-family="Helvetica,sans-Serif" font-size="10.00">+ CFft()</text>
<text text-anchor="start" x="560" y="-976" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CFft()</text>
<text text-anchor="start" x="560" y="-965" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t init(int iBlockLength,</text>
<text text-anchor="start" x="560" y="-954" font-family="Helvetica,sans-Serif" font-size="10.00"> int iZeroPadFactor=1, WindowFunction</text>
<text text-anchor="start" x="560" y="-943" font-family="Helvetica,sans-Serif" font-size="10.00">_t eWindow=kWindowHann, Windowing</text>
<text text-anchor="start" x="560" y="-932" font-family="Helvetica,sans-Serif" font-size="10.00">_t eWindowing=kPreWindow)</text>
<text text-anchor="start" x="560" y="-921" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t reset()</text>
<text text-anchor="start" x="560" y="-910" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t overrideWindow</text>
<text text-anchor="start" x="560" y="-899" font-family="Helvetica,sans-Serif" font-size="10.00">(const float *pfNewWindow)</text>
<text text-anchor="start" x="560" y="-888" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getWindow(float</text>
<text text-anchor="start" x="560" y="-877" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfWindow) const</text>
<text text-anchor="start" x="560" y="-866" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compFft(complex</text>
<text text-anchor="start" x="560" y="-855" font-family="Helvetica,sans-Serif" font-size="10.00">_t *pfSpectrum, const</text>
<text text-anchor="start" x="560" y="-844" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfIn)</text>
<text text-anchor="start" x="560" y="-833" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compInvFft</text>
<text text-anchor="start" x="560" y="-822" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfOut, const</text>
<text text-anchor="start" x="560" y="-811" font-family="Helvetica,sans-Serif" font-size="10.00"> complex_t *pfSpectrum)</text>
<text text-anchor="start" x="560" y="-800" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getMagnitude</text>
<text text-anchor="start" x="560" y="-789" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfMag, const</text>
<text text-anchor="start" x="560" y="-778" font-family="Helvetica,sans-Serif" font-size="10.00"> complex_t *pfSpectrum)</text>
<text text-anchor="start" x="560" y="-767" font-family="Helvetica,sans-Serif" font-size="10.00"> const</text>
<text text-anchor="start" x="560" y="-756" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getPhase(float</text>
<text text-anchor="start" x="560" y="-745" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfPhase, const complex</text>
<text text-anchor="start" x="560" y="-734" font-family="Helvetica,sans-Serif" font-size="10.00">_t *pfSpectrum) const</text>
<text text-anchor="start" x="560" y="-723" font-family="Helvetica,sans-Serif" font-size="10.00">and 7 more...</text>
<text text-anchor="start" x="560" y="-712" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CFft(const CFft &amp;that)</text>
<text text-anchor="start" x="560" y="-701" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CFft &amp; operator=(const</text>
<text text-anchor="start" x="560" y="-690" font-family="Helvetica,sans-Serif" font-size="10.00"> CFft &amp;c)</text>
<text text-anchor="start" x="560" y="-679" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Error_t allocMemory_()</text>
<text text-anchor="start" x="560" y="-668" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Error_t freeMemory_()</text>
<text text-anchor="start" x="560" y="-657" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Error_t computeWindow</text>
<text text-anchor="start" x="560" y="-646" font-family="Helvetica,sans-Serif" font-size="10.00">_(WindowFunction_t eWindow)</text>
</a>
</g>
</g>
<!-- Node5&#45;&gt;Node1 -->
<g id="edge4" class="edge">
<title>Node5&#45;&gt;Node1</title>
<path fill="none" stroke="#404040" d="M563.25,-638.58C554.91,-614.14 546.38,-589.15 537.9,-564.31"/>
<polygon fill="none" stroke="#404040" points="537.88,-564.26 532.16,-559.87 534.01,-552.9 539.73,-557.29 537.88,-564.26"/>
<text text-anchor="middle" x="566" y="-574" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCFft</text>
</g>
<!-- Node6 -->
<g id="node6" class="node">
<title>Node6</title>
<g id="a_node6"><a xlink:href="a00586.xhtml" target="_top" xlink:title="class for moving average low pass filtering">
<polygon fill="white" stroke="black" points="758.5,-727 758.5,-1037 917.5,-1037 917.5,-727 758.5,-727"/>
<text text-anchor="middle" x="838" y="-1025" font-family="Helvetica,sans-Serif" font-size="10.00">CMovingAverage</text>
<polyline fill="none" stroke="black" points="758.5,-1018 917.5,-1018 "/>
<text text-anchor="start" x="766.5" y="-1006" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float m_fPrevOut</text>
<polyline fill="none" stroke="black" points="758.5,-999 917.5,-999 "/>
<text text-anchor="start" x="766.5" y="-987" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t setFilterParam</text>
<text text-anchor="start" x="766.5" y="-976" font-family="Helvetica,sans-Serif" font-size="10.00">(int iFilterLength=64)</text>
<text text-anchor="start" x="766.5" y="-965" font-family="Helvetica,sans-Serif" font-size="10.00">+ int getFilterParam</text>
<text text-anchor="start" x="766.5" y="-954" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="766.5" y="-943" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t process(float</text>
<text text-anchor="start" x="766.5" y="-932" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfOut, const float</text>
<text text-anchor="start" x="766.5" y="-921" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfIn, long long iLenBuff)</text>
<text text-anchor="start" x="766.5" y="-910" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t reset()</text>
<text text-anchor="start" x="766.5" y="-899" font-family="Helvetica,sans-Serif" font-size="10.00">+ void filtfilt(float</text>
<text text-anchor="start" x="766.5" y="-888" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfOut, const float</text>
<text text-anchor="start" x="766.5" y="-877" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfIn, long long iLenBuff)</text>
<text text-anchor="start" x="766.5" y="-866" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="766.5" y="-855" font-family="Helvetica,sans-Serif" font-size="10.00">(CMovingAverage *&amp;pCInstance)</text>
<text text-anchor="start" x="766.5" y="-844" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="766.5" y="-833" font-family="Helvetica,sans-Serif" font-size="10.00">(CMovingAverage *&amp;pCInstance)</text>
<text text-anchor="start" x="766.5" y="-822" font-family="Helvetica,sans-Serif" font-size="10.00">+ static int calcFilterLength</text>
<text text-anchor="start" x="766.5" y="-811" font-family="Helvetica,sans-Serif" font-size="10.00">(float fIntegrationTimeInS,</text>
<text text-anchor="start" x="766.5" y="-800" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate)</text>
<text text-anchor="start" x="766.5" y="-789" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CMovingAverage()</text>
<text text-anchor="start" x="766.5" y="-778" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; virtual ~CMovingAverage()</text>
<text text-anchor="start" x="766.5" y="-767" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CMovingAverage(const</text>
<text text-anchor="start" x="766.5" y="-756" font-family="Helvetica,sans-Serif" font-size="10.00"> CMovingAverage &amp;that)</text>
<text text-anchor="start" x="766.5" y="-745" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CMovingAverage &amp; operator</text>
<text text-anchor="start" x="766.5" y="-734" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CMovingAverage &amp;c)</text>
</a>
</g>
</g>
<!-- Node6&#45;&gt;Node1 -->
<g id="edge5" class="edge">
<title>Node6&#45;&gt;Node1</title>
<path fill="none" stroke="#404040" d="M803,-726.83C789.67,-684.04 771.97,-638.73 749,-600 697.62,-513.37 618.83,-431.63 553.67,-372.11"/>
<polygon fill="none" stroke="#404040" points="553.46,-371.92 546.33,-370.86 544.57,-363.86 551.7,-364.93 553.46,-371.92"/>
<text text-anchor="middle" x="769.5" y="-574" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCLpFilter</text>
</g>
<!-- Node7 -->
<g id="node7" class="node">
<title>Node7</title>
<g id="a_node7"><a xlink:href="a00490.xhtml" target="_top" xlink:title=" ">
<polygon fill="white" stroke="black" points="771.5,-1211.5 771.5,-1576.5 904.5,-1576.5 904.5,-1211.5 771.5,-1211.5"/>
<text text-anchor="middle" x="838" y="-1564.5" font-family="Helvetica,sans-Serif" font-size="10.00">CRingBuffer&lt; float &gt;</text>
<polyline fill="none" stroke="black" points="771.5,-1557.5 904.5,-1557.5 "/>
<text text-anchor="start" x="779.5" y="-1545.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iBuffLength</text>
<text text-anchor="start" x="779.5" y="-1534.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iReadIdx</text>
<text text-anchor="start" x="779.5" y="-1523.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iWriteIdx</text>
<text text-anchor="start" x="779.5" y="-1512.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_ptBuff</text>
<polyline fill="none" stroke="black" points="771.5,-1505.5 904.5,-1505.5 "/>
<text text-anchor="start" x="779.5" y="-1493.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CRingBuffer(int iBuffer</text>
<text text-anchor="start" x="779.5" y="-1482.5" font-family="Helvetica,sans-Serif" font-size="10.00">LengthInSamples)</text>
<text text-anchor="start" x="779.5" y="-1471.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CRingBuffer()</text>
<text text-anchor="start" x="779.5" y="-1460.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void putPostInc(float</text>
<text text-anchor="start" x="779.5" y="-1449.5" font-family="Helvetica,sans-Serif" font-size="10.00"> tNewValue)</text>
<text text-anchor="start" x="779.5" y="-1438.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void putPostInc(const</text>
<text text-anchor="start" x="779.5" y="-1427.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *ptNewBuff, int</text>
<text text-anchor="start" x="779.5" y="-1416.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iLength)</text>
<text text-anchor="start" x="779.5" y="-1405.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void put(float tNewValue)</text>
<text text-anchor="start" x="779.5" y="-1394.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void put(const float</text>
<text text-anchor="start" x="779.5" y="-1383.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *ptNewBuff, int iLength)</text>
<text text-anchor="start" x="779.5" y="-1372.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ float getPostInc()</text>
<text text-anchor="start" x="779.5" y="-1361.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void getPostInc(float</text>
<text text-anchor="start" x="779.5" y="-1350.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *ptBuff, int iLength)</text>
<text text-anchor="start" x="779.5" y="-1339.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ float get(float fOffset</text>
<text text-anchor="start" x="779.5" y="-1328.5" font-family="Helvetica,sans-Serif" font-size="10.00">=0) const</text>
<text text-anchor="start" x="779.5" y="-1317.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void get(float *ptBuff,</text>
<text text-anchor="start" x="779.5" y="-1306.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iLength) const</text>
<text text-anchor="start" x="779.5" y="-1295.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 7 more...</text>
<text text-anchor="start" x="779.5" y="-1284.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CRingBuffer()</text>
<text text-anchor="start" x="779.5" y="-1273.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CRingBuffer(const</text>
<text text-anchor="start" x="779.5" y="-1262.5" font-family="Helvetica,sans-Serif" font-size="10.00"> CRingBuffer &amp;that)</text>
<text text-anchor="start" x="779.5" y="-1251.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CRingBuffer &amp; operator</text>
<text text-anchor="start" x="779.5" y="-1240.5" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CRingBuffer &amp;c)</text>
<text text-anchor="start" x="779.5" y="-1229.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; void incIdx(int &amp;iIdx,</text>
<text text-anchor="start" x="779.5" y="-1218.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iOffset=1)</text>
</a>
</g>
</g>
<!-- Node7&#45;&gt;Node6 -->
<g id="edge6" class="edge">
<title>Node7&#45;&gt;Node6</title>
<path fill="none" stroke="#404040" d="M838,-1211.4C838,-1158.56 838,-1101.13 838,-1049.29"/>
<polygon fill="none" stroke="#404040" points="838,-1049.28 834,-1043.28 838,-1037.28 842,-1043.28 838,-1049.28"/>
<text text-anchor="middle" x="872" y="-1185" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;m_pCRingBuff</text>
</g>
<!-- Node8 -->
<g id="node8" class="node">
<title>Node8</title>
<g id="a_node8"><a xlink:href="a00490.xhtml" target="_top" xlink:title="implement a circular buffer of type T">
<polygon fill="white" stroke="black" points="760.5,-1624.5 760.5,-1967.5 915.5,-1967.5 915.5,-1624.5 760.5,-1624.5"/>
<text text-anchor="middle" x="838" y="-1955.5" font-family="Helvetica,sans-Serif" font-size="10.00">CRingBuffer&lt; T &gt;</text>
<polyline fill="none" stroke="black" points="760.5,-1948.5 915.5,-1948.5 "/>
<text text-anchor="start" x="768.5" y="-1936.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iBuffLength</text>
<text text-anchor="start" x="768.5" y="-1925.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iReadIdx</text>
<text text-anchor="start" x="768.5" y="-1914.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iWriteIdx</text>
<text text-anchor="start" x="768.5" y="-1903.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; T * m_ptBuff</text>
<polyline fill="none" stroke="black" points="760.5,-1896.5 915.5,-1896.5 "/>
<text text-anchor="start" x="768.5" y="-1884.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CRingBuffer(int iBuffer</text>
<text text-anchor="start" x="768.5" y="-1873.5" font-family="Helvetica,sans-Serif" font-size="10.00">LengthInSamples)</text>
<text text-anchor="start" x="768.5" y="-1862.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CRingBuffer()</text>
<text text-anchor="start" x="768.5" y="-1851.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void putPostInc(T tNewValue)</text>
<text text-anchor="start" x="768.5" y="-1840.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void putPostInc(const</text>
<text text-anchor="start" x="768.5" y="-1829.5" font-family="Helvetica,sans-Serif" font-size="10.00"> T *ptNewBuff, int iLength)</text>
<text text-anchor="start" x="768.5" y="-1818.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void put(T tNewValue)</text>
<text text-anchor="start" x="768.5" y="-1807.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void put(const T *ptNewBuff,</text>
<text text-anchor="start" x="768.5" y="-1796.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iLength)</text>
<text text-anchor="start" x="768.5" y="-1785.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ T getPostInc()</text>
<text text-anchor="start" x="768.5" y="-1774.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void getPostInc(T *ptBuff,</text>
<text text-anchor="start" x="768.5" y="-1763.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iLength)</text>
<text text-anchor="start" x="768.5" y="-1752.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ T get(float fOffset</text>
<text text-anchor="start" x="768.5" y="-1741.5" font-family="Helvetica,sans-Serif" font-size="10.00">=0) const</text>
<text text-anchor="start" x="768.5" y="-1730.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void get(T *ptBuff,</text>
<text text-anchor="start" x="768.5" y="-1719.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iLength) const</text>
<text text-anchor="start" x="768.5" y="-1708.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 7 more...</text>
<text text-anchor="start" x="768.5" y="-1697.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CRingBuffer()</text>
<text text-anchor="start" x="768.5" y="-1686.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CRingBuffer(const</text>
<text text-anchor="start" x="768.5" y="-1675.5" font-family="Helvetica,sans-Serif" font-size="10.00"> CRingBuffer &amp;that)</text>
<text text-anchor="start" x="768.5" y="-1664.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CRingBuffer &amp; operator</text>
<text text-anchor="start" x="768.5" y="-1653.5" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CRingBuffer &amp;c)</text>
<text text-anchor="start" x="768.5" y="-1642.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; void incIdx(int &amp;iIdx,</text>
<text text-anchor="start" x="768.5" y="-1631.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iOffset=1)</text>
</a>
</g>
</g>
<!-- Node8&#45;&gt;Node7 -->
<g id="edge7" class="edge">
<title>Node8&#45;&gt;Node7</title>
<path fill="none" stroke="orange" d="M838,-1614.45C838,-1601.89 838,-1589.22 838,-1576.65"/>
<polygon fill="orange" stroke="orange" points="834.5,-1614.49 838,-1624.49 841.5,-1614.49 834.5,-1614.49"/>
<text text-anchor="middle" x="856.5" y="-1598" font-family="Helvetica,sans-Serif" font-size="10.00"> &lt; float &gt;</text>
</g>
</g>
</svg>
        <g id="navigator" transform="translate(0 0)" fill="#404254">
                <rect fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width=".5" x="0" y="0" width="60" height="60"/>
                <use id="zoomplus" xlink:href="#zoomPlus" x="17" y="9" onmousedown="handleZoom(evt,'in')"/>
                <use id="zoomminus" xlink:href="#zoomMin" x="42" y="9" onmousedown="handleZoom(evt,'out')"/>
                <use id="reset" xlink:href="#resetDef" x="30" y="36" onmousedown="handleReset()"/>
                <g id="arrowUp" xlink:href="#dirArrow" transform="translate(30 24)" onmousedown="handlePan(0,-1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowUp.mouseover" end="arrowUp.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowRight" xlink:href="#dirArrow" transform="rotate(90) translate(36 -43)" onmousedown="handlePan(1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowRight.mouseover" end="arrowRight.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowDown" xlink:href="#dirArrow" transform="rotate(180) translate(-30 -48)" onmousedown="handlePan(0,1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowDown.mouseover" end="arrowDown.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowLeft" xlink:href="#dirArrow" transform="rotate(270) translate(-36 17)" onmousedown="handlePan(-1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowLeft.mouseover" end="arrowLeft.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
        </g>
        <svg viewBox="0 0 15 15" width="100%" height="30px" preserveAspectRatio="xMaxYMin meet">
         <g id="arrow_out" transform="scale(0.3 0.3)">
          <a xlink:href="a00512_org.svg" target="_base">
           <rect id="button" ry="5" rx="5" y="6" x="6" height="38" width="38"
                fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width="1.0"/>
           <path id="arrow"
             d="M 11.500037,31.436501 C 11.940474,20.09759 22.043105,11.32322 32.158766,21.979434 L 37.068811,17.246167 C 37.068811,17.246167 37.088388,32 37.088388,32 L 22.160133,31.978069 C 22.160133,31.978069 26.997745,27.140456 26.997745,27.140456 C 18.528582,18.264221 13.291696,25.230495 11.500037,31.436501 z"
             style="fill:#404040;"/>
          </a>
         </g>
        </svg>
</svg>
