<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.4"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ACA: CFeatureTimeMaxAcf Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">ACA<span id="projectnumber">&#160;0.2.8</span>
   </div>
   <div id="projectbrief">Example Code for Audio Content Analysis</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.4 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search",'Search','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('a00350.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pri-methods">Private Member Functions</a> &#124;
<a href="#pri-attribs">Private Attributes</a> &#124;
<a href="a00347.xhtml">List of all members</a>  </div>
  <div class="headertitle"><div class="title">CFeatureTimeMaxAcf Class Reference</div></div>
</div><!--header-->
<div class="contents">
<div class="dynheader">
Inheritance diagram for CFeatureTimeMaxAcf:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00349.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<div class="dynheader">
Collaboration diagram for CFeatureTimeMaxAcf:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00348.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a541f40820696e37cc302fc780b8313ee"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00350.xhtml#a541f40820696e37cc302fc780b8313ee">CFeatureTimeMaxAcf</a> (<a class="el" href="a00466.xhtml#a47ca14941c604beb42d60164b3e5e6b3">CFeatureIf::Feature_t</a> eFeatureIdx, int iDataLength, float fSampleRate)</td></tr>
<tr class="separator:a541f40820696e37cc302fc780b8313ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a48c4e7762ac0c1bbbb91a50ccc2a4ffc"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00350.xhtml#a48c4e7762ac0c1bbbb91a50ccc2a4ffc">~CFeatureTimeMaxAcf</a> ()</td></tr>
<tr class="separator:a48c4e7762ac0c1bbbb91a50ccc2a4ffc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af20724e23d18c1126e2edf4186cc8005"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00350.xhtml#af20724e23d18c1126e2edf4186cc8005">compFeature</a> (float *pfFeature, const float *pfInput) override</td></tr>
<tr class="separator:af20724e23d18c1126e2edf4186cc8005"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a03964245e9d7da47e512283728da4cd4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00284.xhtml#abb452686968e48b67397da5f97445f5b">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00350.xhtml#a03964245e9d7da47e512283728da4cd4">hasAdditionalParam</a> () const override</td></tr>
<tr class="separator:a03964245e9d7da47e512283728da4cd4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad08d755145fa0227b7e489000703ee30"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00350.xhtml#ad08d755145fa0227b7e489000703ee30">setAdditionalParam</a> (float fParamValue) override</td></tr>
<tr class="separator:ad08d755145fa0227b7e489000703ee30"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_a00470"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_a00470')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="a00470.xhtml">CFeatureFromBlockIf</a></td></tr>
<tr class="memitem:a8bf822f58aa66fc4787c5528352575c0 inherit pub_methods_a00470"><td class="memItemLeft" align="right" valign="top">virtual int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00470.xhtml#a8bf822f58aa66fc4787c5528352575c0">getFeatureDimensions</a> () const</td></tr>
<tr class="separator:a8bf822f58aa66fc4787c5528352575c0 inherit pub_methods_a00470"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab6ab50f7ebebbabec7e1610bc04a3328 inherit pub_methods_a00470"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00466.xhtml#a47ca14941c604beb42d60164b3e5e6b3">CFeatureIf::Feature_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00470.xhtml#ab6ab50f7ebebbabec7e1610bc04a3328">getFeatureIdx</a> () const</td></tr>
<tr class="separator:ab6ab50f7ebebbabec7e1610bc04a3328 inherit pub_methods_a00470"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aefd1cebf296212209ba41f38939e07bf inherit pub_methods_a00470"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00470.xhtml#aefd1cebf296212209ba41f38939e07bf">compFeature</a> (float *pfFeature, const float *pfInput)</td></tr>
<tr class="separator:aefd1cebf296212209ba41f38939e07bf inherit pub_methods_a00470"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a41daabd1afa9c2307c64b431fcf8da62 inherit pub_methods_a00470"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a00284.xhtml#abb452686968e48b67397da5f97445f5b">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00470.xhtml#a41daabd1afa9c2307c64b431fcf8da62">hasAdditionalParam</a> () const</td></tr>
<tr class="separator:a41daabd1afa9c2307c64b431fcf8da62 inherit pub_methods_a00470"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7f3f62f3787b0ddc4c8938f5d54170af inherit pub_methods_a00470"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00470.xhtml#a7f3f62f3787b0ddc4c8938f5d54170af">setAdditionalParam</a> (float fParamValue)</td></tr>
<tr class="separator:a7f3f62f3787b0ddc4c8938f5d54170af inherit pub_methods_a00470"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pri-methods" name="pri-methods"></a>
Private Member Functions</h2></td></tr>
<tr class="memitem:a8c9233f1ab2a403e78a7e03feefc2161"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00350.xhtml#a8c9233f1ab2a403e78a7e03feefc2161">CFeatureTimeMaxAcf</a> ()</td></tr>
<tr class="separator:a8c9233f1ab2a403e78a7e03feefc2161"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae651e7f716957560053ef017f839346b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00350.xhtml#ae651e7f716957560053ef017f839346b">CFeatureTimeMaxAcf</a> (const <a class="el" href="a00350.xhtml">CFeatureTimeMaxAcf</a> &amp;that)</td></tr>
<tr class="memdesc:ae651e7f716957560053ef017f839346b"><td class="mdescLeft">&#160;</td><td class="mdescRight">disallow copy construction  <a href="a00350.xhtml#ae651e7f716957560053ef017f839346b">More...</a><br /></td></tr>
<tr class="separator:ae651e7f716957560053ef017f839346b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adbb3dc0caf773c6fb706bbff9d0b7126"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00350.xhtml">CFeatureTimeMaxAcf</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00350.xhtml#adbb3dc0caf773c6fb706bbff9d0b7126">operator=</a> (const <a class="el" href="a00350.xhtml">CFeatureTimeMaxAcf</a> &amp;c)</td></tr>
<tr class="separator:adbb3dc0caf773c6fb706bbff9d0b7126"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pri-attribs" name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr class="memitem:a9fb60b727600dc5d28d874349adb5dc0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00546.xhtml">CCcf</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00350.xhtml#a9fb60b727600dc5d28d874349adb5dc0">m_pCCcf</a> = 0</td></tr>
<tr class="separator:a9fb60b727600dc5d28d874349adb5dc0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac15ec6a2d0fdf91df801d6befd4117db"><td class="memItemLeft" align="right" valign="top">float *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00350.xhtml#ac15ec6a2d0fdf91df801d6befd4117db">m_pfAcf</a> = 0</td></tr>
<tr class="separator:ac15ec6a2d0fdf91df801d6befd4117db"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeb05f443644d9e5db8bfd9a18af380a8"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00350.xhtml#aeb05f443644d9e5db8bfd9a18af380a8">m_fMax</a> = 2000.F</td></tr>
<tr class="separator:aeb05f443644d9e5db8bfd9a18af380a8"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="inherited" name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_static_methods_a00470"><td colspan="2" onclick="javascript:toggleInherit('pub_static_methods_a00470')"><img src="closed.png" alt="-"/>&#160;Static Public Member Functions inherited from <a class="el" href="a00470.xhtml">CFeatureFromBlockIf</a></td></tr>
<tr class="memitem:a6d3ca4f66582ae352e3addfd7f99a752 inherit pub_static_methods_a00470"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00470.xhtml#a6d3ca4f66582ae352e3addfd7f99a752">create</a> (<a class="el" href="a00470.xhtml">CFeatureFromBlockIf</a> *&amp;pCInstance, <a class="el" href="a00466.xhtml#a47ca14941c604beb42d60164b3e5e6b3">CFeatureIf::Feature_t</a> eFeatureIdx, int iDataLength, float fSampleRate=1.F)</td></tr>
<tr class="separator:a6d3ca4f66582ae352e3addfd7f99a752 inherit pub_static_methods_a00470"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a300e7b2134b2bd0faaa24cfecbd9cb51 inherit pub_static_methods_a00470"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00470.xhtml#a300e7b2134b2bd0faaa24cfecbd9cb51">destroy</a> (<a class="el" href="a00470.xhtml">CFeatureFromBlockIf</a> *&amp;pCInstance)</td></tr>
<tr class="separator:a300e7b2134b2bd0faaa24cfecbd9cb51 inherit pub_static_methods_a00470"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a880a58f05522dfd1f0f16f26c34703db inherit pub_static_methods_a00470"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00470.xhtml#a880a58f05522dfd1f0f16f26c34703db">compFeatureSpectralCentroid</a> (const float *pfMagSpec, int iDataLength, float fSampleRate=1.F)</td></tr>
<tr class="separator:a880a58f05522dfd1f0f16f26c34703db inherit pub_static_methods_a00470"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a15df133306497e4f85929692354f378a inherit pub_static_methods_a00470"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00470.xhtml#a15df133306497e4f85929692354f378a">compFeatureSpectralCrestFactor</a> (const float *pfMagSpec, int iDataLength, float fSampleRate=1.F)</td></tr>
<tr class="separator:a15df133306497e4f85929692354f378a inherit pub_static_methods_a00470"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9e03b3181d7ff9d8a9b0eaedabff9899 inherit pub_static_methods_a00470"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00470.xhtml#a9e03b3181d7ff9d8a9b0eaedabff9899">compFeatureSpectralDecrease</a> (const float *pfMagSpec, int iDataLength, float fSampleRate=1.F)</td></tr>
<tr class="separator:a9e03b3181d7ff9d8a9b0eaedabff9899 inherit pub_static_methods_a00470"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a361ef81afe12623645546fbbeab30b14 inherit pub_static_methods_a00470"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00470.xhtml#a361ef81afe12623645546fbbeab30b14">compFeatureSpectralFlatness</a> (const float *pfMagSpec, int iDataLength, float fSampleRate=1.F)</td></tr>
<tr class="separator:a361ef81afe12623645546fbbeab30b14 inherit pub_static_methods_a00470"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a42b11faa0f65881702ad7dcc1398ec5f inherit pub_static_methods_a00470"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00470.xhtml#a42b11faa0f65881702ad7dcc1398ec5f">compFeatureSpectralFlux</a> (const float *pfMagSpec, const float *pfPrevSpec, int iDataLength, float fSampleRate=1.F)</td></tr>
<tr class="separator:a42b11faa0f65881702ad7dcc1398ec5f inherit pub_static_methods_a00470"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aff5ebe0708311c49ba85c03c4546b6cf inherit pub_static_methods_a00470"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00470.xhtml#aff5ebe0708311c49ba85c03c4546b6cf">compFeatureSpectralKurtosis</a> (const float *pfMagSpec, int iDataLength, float fSampleRate=1.F)</td></tr>
<tr class="separator:aff5ebe0708311c49ba85c03c4546b6cf inherit pub_static_methods_a00470"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a28b9430a480ce697a7dbd73527057ac6 inherit pub_static_methods_a00470"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00470.xhtml#a28b9430a480ce697a7dbd73527057ac6">compFeatureSpectralRolloff</a> (const float *pfMagSpec, int iDataLength, float fSampleRate=1.F, float fKappa=.85F)</td></tr>
<tr class="separator:a28b9430a480ce697a7dbd73527057ac6 inherit pub_static_methods_a00470"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af130d46bb6a964262acb138fc7b7b9fd inherit pub_static_methods_a00470"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00470.xhtml#af130d46bb6a964262acb138fc7b7b9fd">compFeatureSpectralSkewness</a> (const float *pfMagSpec, int iDataLength, float fSampleRate=1.F)</td></tr>
<tr class="separator:af130d46bb6a964262acb138fc7b7b9fd inherit pub_static_methods_a00470"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8c8ded721d053ed4f34565a1392993fc inherit pub_static_methods_a00470"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00470.xhtml#a8c8ded721d053ed4f34565a1392993fc">compFeatureSpectralSlope</a> (const float *pfMagSpec, int iDataLength, float fSampleRate=1.F)</td></tr>
<tr class="separator:a8c8ded721d053ed4f34565a1392993fc inherit pub_static_methods_a00470"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa97614c73430e57facec7a88bee49c9f inherit pub_static_methods_a00470"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00470.xhtml#aa97614c73430e57facec7a88bee49c9f">compFeatureSpectralSpread</a> (const float *pfMagSpec, int iDataLength, float fSampleRate=1.F)</td></tr>
<tr class="separator:aa97614c73430e57facec7a88bee49c9f inherit pub_static_methods_a00470"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abdd05ed6160f4154fd4aae2816939f5e inherit pub_static_methods_a00470"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00470.xhtml#abdd05ed6160f4154fd4aae2816939f5e">compFeatureSpectralTonalPowerRatio</a> (const float *pfMagSpec, int iDataLength, float fSampleRate=1.F, float fThresh=5e-4)</td></tr>
<tr class="separator:abdd05ed6160f4154fd4aae2816939f5e inherit pub_static_methods_a00470"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a665af5d570876cc41adc56185201cd8c inherit pub_static_methods_a00470"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00470.xhtml#a665af5d570876cc41adc56185201cd8c">compFeatureTimeAcfCoeff</a> (const float *pfSamples, int iDataLength, float fSampleRate=1.F, int iEta=19)</td></tr>
<tr class="separator:a665af5d570876cc41adc56185201cd8c inherit pub_static_methods_a00470"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8343fab849f52e77639b46e759e7e49d inherit pub_static_methods_a00470"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00470.xhtml#a8343fab849f52e77639b46e759e7e49d">compFeatureTimePeakEnvelope</a> (const float *pfSamples, int iDataLength, float fSampleRate=1.F)</td></tr>
<tr class="separator:a8343fab849f52e77639b46e759e7e49d inherit pub_static_methods_a00470"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a46500f9eaa49f3860afa5f1fce555415 inherit pub_static_methods_a00470"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00470.xhtml#a46500f9eaa49f3860afa5f1fce555415">compFeatureTimeRms</a> (const float *pfSamples, int iDataLength, float fSampleRate=1.F)</td></tr>
<tr class="separator:a46500f9eaa49f3860afa5f1fce555415 inherit pub_static_methods_a00470"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4eca7f209c771fb5008fa08facffd598 inherit pub_static_methods_a00470"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00470.xhtml#a4eca7f209c771fb5008fa08facffd598">compFeatureTimeStd</a> (const float *pfSamples, int iDataLength, float fSampleRate=1.F)</td></tr>
<tr class="separator:a4eca7f209c771fb5008fa08facffd598 inherit pub_static_methods_a00470"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:add9e6742349500c1323607b2508d311d inherit pub_static_methods_a00470"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00470.xhtml#add9e6742349500c1323607b2508d311d">compFeatureTimeZeroCrossingRate</a> (const float *pfSamples, int iDataLength, float fSampleRate=1.F)</td></tr>
<tr class="separator:add9e6742349500c1323607b2508d311d inherit pub_static_methods_a00470"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_static_attribs_a00470"><td colspan="2" onclick="javascript:toggleInherit('pub_static_attribs_a00470')"><img src="closed.png" alt="-"/>&#160;Static Public Attributes inherited from <a class="el" href="a00470.xhtml">CFeatureFromBlockIf</a></td></tr>
<tr class="memitem:a23b1d6639637a13587d5529a57f3bf78 inherit pub_static_attribs_a00470"><td class="memItemLeft" align="right" valign="top">static const float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00470.xhtml#a23b1d6639637a13587d5529a57f3bf78">m_kfFloatThresh</a> = 1e-30F</td></tr>
<tr class="memdesc:a23b1d6639637a13587d5529a57f3bf78 inherit pub_static_attribs_a00470"><td class="mdescLeft">&#160;</td><td class="mdescRight">below this we just assume it's zero  <a href="a00470.xhtml#a23b1d6639637a13587d5529a57f3bf78">More...</a><br /></td></tr>
<tr class="separator:a23b1d6639637a13587d5529a57f3bf78 inherit pub_static_attribs_a00470"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_methods_a00470"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_a00470')"><img src="closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="a00470.xhtml">CFeatureFromBlockIf</a></td></tr>
<tr class="memitem:a483bca508e2817799a3173a6180d245e inherit pro_methods_a00470"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00470.xhtml#a483bca508e2817799a3173a6180d245e">CFeatureFromBlockIf</a> ()</td></tr>
<tr class="separator:a483bca508e2817799a3173a6180d245e inherit pro_methods_a00470"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a26bc5632321408486bf3fccfa3fbfa1c inherit pro_methods_a00470"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00470.xhtml#a26bc5632321408486bf3fccfa3fbfa1c">CFeatureFromBlockIf</a> (<a class="el" href="a00466.xhtml#a47ca14941c604beb42d60164b3e5e6b3">CFeatureIf::Feature_t</a> eFeatureIdx, int iDataLength, float fSampleRate)</td></tr>
<tr class="separator:a26bc5632321408486bf3fccfa3fbfa1c inherit pro_methods_a00470"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab3e21cffc4d8fb5851c9564671cad2cd inherit pro_methods_a00470"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00470.xhtml#ab3e21cffc4d8fb5851c9564671cad2cd">~CFeatureFromBlockIf</a> ()</td></tr>
<tr class="separator:ab3e21cffc4d8fb5851c9564671cad2cd inherit pro_methods_a00470"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3ca29d1d628143cb11f1c3400f6b23c4 inherit pro_methods_a00470"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00470.xhtml#a3ca29d1d628143cb11f1c3400f6b23c4">CFeatureFromBlockIf</a> (const <a class="el" href="a00470.xhtml">CFeatureFromBlockIf</a> &amp;that)</td></tr>
<tr class="separator:a3ca29d1d628143cb11f1c3400f6b23c4 inherit pro_methods_a00470"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af9650d7b6bb5362a2c4be9154e777089 inherit pro_methods_a00470"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00470.xhtml">CFeatureFromBlockIf</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00470.xhtml#af9650d7b6bb5362a2c4be9154e777089">operator=</a> (const <a class="el" href="a00470.xhtml">CFeatureFromBlockIf</a> &amp;c)</td></tr>
<tr class="separator:af9650d7b6bb5362a2c4be9154e777089 inherit pro_methods_a00470"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_a00470"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_a00470')"><img src="closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="a00470.xhtml">CFeatureFromBlockIf</a></td></tr>
<tr class="memitem:a3cdaa6a50139576cf1aaa73f4b0d3b6f inherit pro_attribs_a00470"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00466.xhtml#a47ca14941c604beb42d60164b3e5e6b3">CFeatureIf::Feature_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00470.xhtml#a3cdaa6a50139576cf1aaa73f4b0d3b6f">m_eFeatureIdx</a> = <a class="el" href="a00466.xhtml#a47ca14941c604beb42d60164b3e5e6b3abe9b4914b84bc00da1aacb5f0068545d">CFeatureIf::kNumFeatures</a></td></tr>
<tr class="memdesc:a3cdaa6a50139576cf1aaa73f4b0d3b6f inherit pro_attribs_a00470"><td class="mdescLeft">&#160;</td><td class="mdescRight">index of feature to extract  <a href="a00470.xhtml#a3cdaa6a50139576cf1aaa73f4b0d3b6f">More...</a><br /></td></tr>
<tr class="separator:a3cdaa6a50139576cf1aaa73f4b0d3b6f inherit pro_attribs_a00470"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2fefdb1b1217edd46c2b4e9336fa2aed inherit pro_attribs_a00470"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00470.xhtml#a2fefdb1b1217edd46c2b4e9336fa2aed">m_iDataLength</a> = 0</td></tr>
<tr class="memdesc:a2fefdb1b1217edd46c2b4e9336fa2aed inherit pro_attribs_a00470"><td class="mdescLeft">&#160;</td><td class="mdescRight">block length  <a href="a00470.xhtml#a2fefdb1b1217edd46c2b4e9336fa2aed">More...</a><br /></td></tr>
<tr class="separator:a2fefdb1b1217edd46c2b4e9336fa2aed inherit pro_attribs_a00470"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a75ac4ef94667058662a8100bb1c1e1cd inherit pro_attribs_a00470"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00470.xhtml#a75ac4ef94667058662a8100bb1c1e1cd">m_fSampleRate</a> = 0</td></tr>
<tr class="memdesc:a75ac4ef94667058662a8100bb1c1e1cd inherit pro_attribs_a00470"><td class="mdescLeft">&#160;</td><td class="mdescRight">sample rate  <a href="a00470.xhtml#a75ac4ef94667058662a8100bb1c1e1cd">More...</a><br /></td></tr>
<tr class="separator:a75ac4ef94667058662a8100bb1c1e1cd inherit pro_attribs_a00470"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a21d3edee07a3b9f4d0af407479591a6c inherit pro_attribs_a00470"><td class="memItemLeft" align="right" valign="top">const std::map&lt; <a class="el" href="a00466.xhtml#a47ca14941c604beb42d60164b3e5e6b3">CFeatureIf::Feature_t</a>, std::function&lt; float(const float *, int, float)&gt; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00470.xhtml#a21d3edee07a3b9f4d0af407479591a6c">m_DispatchMap</a></td></tr>
<tr class="separator:a21d3edee07a3b9f4d0af407479591a6c inherit pro_attribs_a00470"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p class="definition">Definition at line <a class="el" href="a00038_source.xhtml#l00726">726</a> of file <a class="el" href="a00038_source.xhtml">FeatureFromBlock.cpp</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a541f40820696e37cc302fc780b8313ee" name="a541f40820696e37cc302fc780b8313ee"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a541f40820696e37cc302fc780b8313ee">&#9670;&nbsp;</a></span>CFeatureTimeMaxAcf() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">CFeatureTimeMaxAcf::CFeatureTimeMaxAcf </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="a00466.xhtml#a47ca14941c604beb42d60164b3e5e6b3">CFeatureIf::Feature_t</a>&#160;</td>
          <td class="paramname"><em>eFeatureIdx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>iDataLength</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fSampleRate</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="a00038_source.xhtml#l00729">729</a> of file <a class="el" href="a00038_source.xhtml">FeatureFromBlock.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  729</span>                                                                                            : <a class="code hl_function" href="a00470.xhtml#a483bca508e2817799a3173a6180d245e">CFeatureFromBlockIf</a>(eFeatureIdx, iDataLength, fSampleRate)</div>
<div class="line"><span class="lineno">  730</span>    {</div>
<div class="line"><span class="lineno">  731</span>        <a class="code hl_variable" href="a00350.xhtml#a9fb60b727600dc5d28d874349adb5dc0">m_pCCcf</a> = <span class="keyword">new</span> <a class="code hl_class" href="a00546.xhtml">CCcf</a>();</div>
<div class="line"><span class="lineno">  732</span>        <a class="code hl_variable" href="a00350.xhtml#a9fb60b727600dc5d28d874349adb5dc0">m_pCCcf</a>-&gt;<a class="code hl_function" href="a00546.xhtml#af683b1b5e37ca2039424af02f4bfb3c5">init</a>(iDataLength);</div>
<div class="line"><span class="lineno">  733</span> </div>
<div class="line"><span class="lineno">  734</span>        <a class="code hl_function" href="a00502.xhtml#abaadac98b1cad18b7b568852bc951696">CVector::alloc</a>(<a class="code hl_variable" href="a00350.xhtml#ac15ec6a2d0fdf91df801d6befd4117db">m_pfAcf</a> , <a class="code hl_variable" href="a00350.xhtml#a9fb60b727600dc5d28d874349adb5dc0">m_pCCcf</a>-&gt;<a class="code hl_function" href="a00546.xhtml#afe56cc1681b982d7d31b0830b3471b61">getCcfLength</a>(<span class="keyword">true</span>));</div>
<div class="line"><span class="lineno">  735</span>    };</div>
<div class="ttc" id="aa00350_xhtml_a9fb60b727600dc5d28d874349adb5dc0"><div class="ttname"><a href="a00350.xhtml#a9fb60b727600dc5d28d874349adb5dc0">CFeatureTimeMaxAcf::m_pCCcf</a></div><div class="ttdeci">CCcf * m_pCCcf</div><div class="ttdef"><b>Definition:</b> <a href="a00038_source.xhtml#l00802">FeatureFromBlock.cpp:802</a></div></div>
<div class="ttc" id="aa00350_xhtml_ac15ec6a2d0fdf91df801d6befd4117db"><div class="ttname"><a href="a00350.xhtml#ac15ec6a2d0fdf91df801d6befd4117db">CFeatureTimeMaxAcf::m_pfAcf</a></div><div class="ttdeci">float * m_pfAcf</div><div class="ttdef"><b>Definition:</b> <a href="a00038_source.xhtml#l00803">FeatureFromBlock.cpp:803</a></div></div>
<div class="ttc" id="aa00470_xhtml_a483bca508e2817799a3173a6180d245e"><div class="ttname"><a href="a00470.xhtml#a483bca508e2817799a3173a6180d245e">CFeatureFromBlockIf::CFeatureFromBlockIf</a></div><div class="ttdeci">CFeatureFromBlockIf()</div><div class="ttdef"><b>Definition:</b> <a href="a00215_source.xhtml#l00088">FeatureFromBlock.h:88</a></div></div>
<div class="ttc" id="aa00502_xhtml_abaadac98b1cad18b7b568852bc951696"><div class="ttname"><a href="a00502.xhtml#abaadac98b1cad18b7b568852bc951696">CVector::alloc</a></div><div class="ttdeci">static void alloc(T *&amp;ptVec, long long iLength)</div><div class="ttdef"><b>Definition:</b> <a href="a00155_source.xhtml#l00023">Vector.h:23</a></div></div>
<div class="ttc" id="aa00546_xhtml"><div class="ttname"><a href="a00546.xhtml">CCcf</a></div><div class="ttdoc">computation of correlation (freq domain)</div><div class="ttdef"><b>Definition:</b> <a href="a00200_source.xhtml#l00013">ToolCcf.h:14</a></div></div>
<div class="ttc" id="aa00546_xhtml_af683b1b5e37ca2039424af02f4bfb3c5"><div class="ttname"><a href="a00546.xhtml#af683b1b5e37ca2039424af02f4bfb3c5">CCcf::init</a></div><div class="ttdeci">Error_t init(int iBlockLength)</div><div class="ttdef"><b>Definition:</b> <a href="a00086_source.xhtml#l00020">ToolCcf.cpp:20</a></div></div>
<div class="ttc" id="aa00546_xhtml_afe56cc1681b982d7d31b0830b3471b61"><div class="ttname"><a href="a00546.xhtml#afe56cc1681b982d7d31b0830b3471b61">CCcf::getCcfLength</a></div><div class="ttdeci">int getCcfLength(bool bisAcf=false)</div><div class="ttdef"><b>Definition:</b> <a href="a00086_source.xhtml#l00103">ToolCcf.cpp:103</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00155_source.xhtml#l00023">CVector::alloc()</a>, <a class="el" href="a00086_source.xhtml#l00103">CCcf::getCcfLength()</a>, <a class="el" href="a00086_source.xhtml#l00020">CCcf::init()</a>, <a class="el" href="a00038_source.xhtml#l00802">m_pCCcf</a>, and <a class="el" href="a00038_source.xhtml#l00803">m_pfAcf</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00350_a541f40820696e37cc302fc780b8313ee_cgraph.svg" width="100%" height="537"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="a48c4e7762ac0c1bbbb91a50ccc2a4ffc" name="a48c4e7762ac0c1bbbb91a50ccc2a4ffc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a48c4e7762ac0c1bbbb91a50ccc2a4ffc">&#9670;&nbsp;</a></span>~CFeatureTimeMaxAcf()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual CFeatureTimeMaxAcf::~CFeatureTimeMaxAcf </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="a00038_source.xhtml#l00737">737</a> of file <a class="el" href="a00038_source.xhtml">FeatureFromBlock.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  738</span>    {</div>
<div class="line"><span class="lineno">  739</span>        <a class="code hl_function" href="a00502.xhtml#aa86bdb0c663d4d52f2765793756f8737">CVector::free</a>(<a class="code hl_variable" href="a00350.xhtml#ac15ec6a2d0fdf91df801d6befd4117db">m_pfAcf</a>);</div>
<div class="line"><span class="lineno">  740</span> </div>
<div class="line"><span class="lineno">  741</span>        <span class="keyword">delete</span> <a class="code hl_variable" href="a00350.xhtml#a9fb60b727600dc5d28d874349adb5dc0">m_pCCcf</a>;</div>
<div class="line"><span class="lineno">  742</span>        <a class="code hl_variable" href="a00350.xhtml#a9fb60b727600dc5d28d874349adb5dc0">m_pCCcf</a> = 0;</div>
<div class="line"><span class="lineno">  743</span>    };</div>
<div class="ttc" id="aa00502_xhtml_aa86bdb0c663d4d52f2765793756f8737"><div class="ttname"><a href="a00502.xhtml#aa86bdb0c663d4d52f2765793756f8737">CVector::free</a></div><div class="ttdeci">static void free(T *&amp;ptVec)</div><div class="ttdef"><b>Definition:</b> <a href="a00155_source.xhtml#l00037">Vector.h:37</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00155_source.xhtml#l00037">CVector::free()</a>, <a class="el" href="a00038_source.xhtml#l00802">m_pCCcf</a>, and <a class="el" href="a00038_source.xhtml#l00803">m_pfAcf</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00350_a48c4e7762ac0c1bbbb91a50ccc2a4ffc_cgraph.svg" width="318" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a8c9233f1ab2a403e78a7e03feefc2161" name="a8c9233f1ab2a403e78a7e03feefc2161"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8c9233f1ab2a403e78a7e03feefc2161">&#9670;&nbsp;</a></span>CFeatureTimeMaxAcf() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">CFeatureTimeMaxAcf::CFeatureTimeMaxAcf </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="a00038_source.xhtml#l00798">798</a> of file <a class="el" href="a00038_source.xhtml">FeatureFromBlock.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  798</span>{};</div>
</div><!-- fragment -->
</div>
</div>
<a id="ae651e7f716957560053ef017f839346b" name="ae651e7f716957560053ef017f839346b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae651e7f716957560053ef017f839346b">&#9670;&nbsp;</a></span>CFeatureTimeMaxAcf() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">CFeatureTimeMaxAcf::CFeatureTimeMaxAcf </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="a00350.xhtml">CFeatureTimeMaxAcf</a> &amp;&#160;</td>
          <td class="paramname"><em>that</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>disallow copy construction </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="af20724e23d18c1126e2edf4186cc8005" name="af20724e23d18c1126e2edf4186cc8005"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af20724e23d18c1126e2edf4186cc8005">&#9670;&nbsp;</a></span>compFeature()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> CFeatureTimeMaxAcf::compFeature </td>
          <td>(</td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>pfFeature</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float *&#160;</td>
          <td class="paramname"><em>pfInput</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p >performs the FeatureFromBlock computation </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pfFeature</td><td>feature result (user-allocated, to be written, length from <a class="el" href="a00470.xhtml#a8bf822f58aa66fc4787c5528352575c0">CFeatureFromBlockIf::getFeatureDimensions</a>) </td></tr>
    <tr><td class="paramname">pfInput</td><td>input data of length iDataLength </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Error_t </dd></dl>

<p>Reimplemented from <a class="el" href="a00470.xhtml#aefd1cebf296212209ba41f38939e07bf">CFeatureFromBlockIf</a>.</p>

<p class="definition">Definition at line <a class="el" href="a00038_source.xhtml#l00745">745</a> of file <a class="el" href="a00038_source.xhtml">FeatureFromBlock.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  746</span>    {</div>
<div class="line"><span class="lineno">  747</span>        <span class="keywordtype">float</span> fMinThresh = 0.35F;</div>
<div class="line"><span class="lineno">  748</span> </div>
<div class="line"><span class="lineno">  749</span>        <span class="keywordtype">int</span> iEta = 0,</div>
<div class="line"><span class="lineno">  750</span>            iEtaMin = <span class="keyword">static_cast&lt;</span><span class="keywordtype">int</span><span class="keyword">&gt;</span>(<a class="code hl_variable" href="a00470.xhtml#a75ac4ef94667058662a8100bb1c1e1cd">m_fSampleRate</a> / <a class="code hl_variable" href="a00350.xhtml#aeb05f443644d9e5db8bfd9a18af380a8">m_fMax</a>);</div>
<div class="line"><span class="lineno">  751</span> </div>
<div class="line"><span class="lineno">  752</span>        <a class="code hl_variable" href="a00350.xhtml#a9fb60b727600dc5d28d874349adb5dc0">m_pCCcf</a>-&gt;<a class="code hl_function" href="a00546.xhtml#a4d7d19dd39b24147d9a1fab5d7e05257">compCcf</a>(pfInput, pfInput, <span class="keyword">true</span>);</div>
<div class="line"><span class="lineno">  753</span>        <a class="code hl_variable" href="a00350.xhtml#a9fb60b727600dc5d28d874349adb5dc0">m_pCCcf</a>-&gt;<a class="code hl_function" href="a00546.xhtml#a02c0e23cbcecab5af2fb20a25160321a">getCcf</a>(<a class="code hl_variable" href="a00350.xhtml#ac15ec6a2d0fdf91df801d6befd4117db">m_pfAcf</a>, <span class="keyword">true</span>);</div>
<div class="line"><span class="lineno">  754</span> </div>
<div class="line"><span class="lineno">  755</span>        <span class="comment">// avoid main lobe</span></div>
<div class="line"><span class="lineno">  756</span>        <span class="keywordflow">while</span> (<a class="code hl_variable" href="a00350.xhtml#ac15ec6a2d0fdf91df801d6befd4117db">m_pfAcf</a>[iEta] &gt; fMinThresh)</div>
<div class="line"><span class="lineno">  757</span>            iEta++;</div>
<div class="line"><span class="lineno">  758</span>        <span class="keywordflow">if</span> (iEtaMin &lt; iEta)</div>
<div class="line"><span class="lineno">  759</span>            iEtaMin = iEta;</div>
<div class="line"><span class="lineno">  760</span> </div>
<div class="line"><span class="lineno">  761</span>        <span class="comment">// only look after first minimum</span></div>
<div class="line"><span class="lineno">  762</span>        iEta = 0;</div>
<div class="line"><span class="lineno">  763</span>        <span class="keywordflow">while</span> (<a class="code hl_variable" href="a00350.xhtml#ac15ec6a2d0fdf91df801d6befd4117db">m_pfAcf</a>[iEta] &gt; <a class="code hl_variable" href="a00350.xhtml#ac15ec6a2d0fdf91df801d6befd4117db">m_pfAcf</a>[iEta + 1])</div>
<div class="line"><span class="lineno">  764</span>        {</div>
<div class="line"><span class="lineno">  765</span>            iEta++;</div>
<div class="line"><span class="lineno">  766</span>            <span class="keywordflow">if</span> (iEta &gt;= <a class="code hl_variable" href="a00470.xhtml#a2fefdb1b1217edd46c2b4e9336fa2aed">m_iDataLength</a>)</div>
<div class="line"><span class="lineno">  767</span>                <span class="keywordflow">break</span>;</div>
<div class="line"><span class="lineno">  768</span>        }</div>
<div class="line"><span class="lineno">  769</span>        </div>
<div class="line"><span class="lineno">  770</span> </div>
<div class="line"><span class="lineno">  771</span>        <span class="keywordflow">if</span> (iEta &gt;= <a class="code hl_variable" href="a00470.xhtml#a2fefdb1b1217edd46c2b4e9336fa2aed">m_iDataLength</a>)</div>
<div class="line"><span class="lineno">  772</span>            iEtaMin = 0;</div>
<div class="line"><span class="lineno">  773</span>        <span class="keywordflow">else</span> <span class="keywordflow">if</span> (iEtaMin &lt; iEta)</div>
<div class="line"><span class="lineno">  774</span>            iEtaMin = iEta;</div>
<div class="line"><span class="lineno">  775</span> </div>
<div class="line"><span class="lineno">  776</span>        <span class="comment">// get the maximum given the constraints above</span></div>
<div class="line"><span class="lineno">  777</span>        *pfFeature = <a class="code hl_function" href="a00502.xhtml#a9f5be871090bc5a64a7732cebfb4f8ec">CVector::getMax</a>(&amp;<a class="code hl_variable" href="a00350.xhtml#ac15ec6a2d0fdf91df801d6befd4117db">m_pfAcf</a>[iEtaMin], <span class="keyword">static_cast&lt;</span><span class="keywordtype">long</span> <span class="keywordtype">long</span><span class="keyword">&gt;</span>(<a class="code hl_variable" href="a00470.xhtml#a2fefdb1b1217edd46c2b4e9336fa2aed">m_iDataLength</a>) - iEtaMin);</div>
<div class="line"><span class="lineno">  778</span> </div>
<div class="line"><span class="lineno">  779</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><span class="lineno">  780</span>    };</div>
<div class="ttc" id="aa00224_xhtml_a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b"><div class="ttname"><a href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a></div><div class="ttdeci">@ kNoError</div></div>
<div class="ttc" id="aa00350_xhtml_aeb05f443644d9e5db8bfd9a18af380a8"><div class="ttname"><a href="a00350.xhtml#aeb05f443644d9e5db8bfd9a18af380a8">CFeatureTimeMaxAcf::m_fMax</a></div><div class="ttdeci">float m_fMax</div><div class="ttdef"><b>Definition:</b> <a href="a00038_source.xhtml#l00805">FeatureFromBlock.cpp:805</a></div></div>
<div class="ttc" id="aa00470_xhtml_a2fefdb1b1217edd46c2b4e9336fa2aed"><div class="ttname"><a href="a00470.xhtml#a2fefdb1b1217edd46c2b4e9336fa2aed">CFeatureFromBlockIf::m_iDataLength</a></div><div class="ttdeci">int m_iDataLength</div><div class="ttdoc">block length</div><div class="ttdef"><b>Definition:</b> <a href="a00215_source.xhtml#l00096">FeatureFromBlock.h:96</a></div></div>
<div class="ttc" id="aa00470_xhtml_a75ac4ef94667058662a8100bb1c1e1cd"><div class="ttname"><a href="a00470.xhtml#a75ac4ef94667058662a8100bb1c1e1cd">CFeatureFromBlockIf::m_fSampleRate</a></div><div class="ttdeci">float m_fSampleRate</div><div class="ttdoc">sample rate</div><div class="ttdef"><b>Definition:</b> <a href="a00215_source.xhtml#l00098">FeatureFromBlock.h:98</a></div></div>
<div class="ttc" id="aa00502_xhtml_a9f5be871090bc5a64a7732cebfb4f8ec"><div class="ttname"><a href="a00502.xhtml#a9f5be871090bc5a64a7732cebfb4f8ec">CVector::getMax</a></div><div class="ttdeci">static T getMax(const T *ptSrc, long long int iLength, bool bAbs=false)</div><div class="ttdef"><b>Definition:</b> <a href="a00155_source.xhtml#l00554">Vector.h:554</a></div></div>
<div class="ttc" id="aa00546_xhtml_a02c0e23cbcecab5af2fb20a25160321a"><div class="ttname"><a href="a00546.xhtml#a02c0e23cbcecab5af2fb20a25160321a">CCcf::getCcf</a></div><div class="ttdeci">Error_t getCcf(float *pfCcfResult, bool bisAcf=false) const</div><div class="ttdef"><b>Definition:</b> <a href="a00086_source.xhtml#l00111">ToolCcf.cpp:111</a></div></div>
<div class="ttc" id="aa00546_xhtml_a4d7d19dd39b24147d9a1fab5d7e05257"><div class="ttname"><a href="a00546.xhtml#a4d7d19dd39b24147d9a1fab5d7e05257">CCcf::compCcf</a></div><div class="ttdeci">Error_t compCcf(const float *pfInput1, const float *pfInput2, bool bNormalize=true)</div><div class="ttdef"><b>Definition:</b> <a href="a00086_source.xhtml#l00062">ToolCcf.cpp:62</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00086_source.xhtml#l00062">CCcf::compCcf()</a>, <a class="el" href="a00086_source.xhtml#l00111">CCcf::getCcf()</a>, <a class="el" href="a00155_source.xhtml#l00554">CVector::getMax()</a>, <a class="el" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">kNoError</a>, <a class="el" href="a00038_source.xhtml#l00805">m_fMax</a>, <a class="el" href="a00215_source.xhtml#l00098">CFeatureFromBlockIf::m_fSampleRate</a>, <a class="el" href="a00215_source.xhtml#l00096">CFeatureFromBlockIf::m_iDataLength</a>, <a class="el" href="a00038_source.xhtml#l00802">m_pCCcf</a>, and <a class="el" href="a00038_source.xhtml#l00803">m_pfAcf</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00350_af20724e23d18c1126e2edf4186cc8005_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="a03964245e9d7da47e512283728da4cd4" name="a03964245e9d7da47e512283728da4cd4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a03964245e9d7da47e512283728da4cd4">&#9670;&nbsp;</a></span>hasAdditionalParam()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00284.xhtml#abb452686968e48b67397da5f97445f5b">bool</a> CFeatureTimeMaxAcf::hasAdditionalParam </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p >returns true if there is an additional parameter </p><dl class="section return"><dt>Returns</dt><dd>bool </dd></dl>

<p>Reimplemented from <a class="el" href="a00470.xhtml#a41daabd1afa9c2307c64b431fcf8da62">CFeatureFromBlockIf</a>.</p>

<p class="definition">Definition at line <a class="el" href="a00038_source.xhtml#l00782">782</a> of file <a class="el" href="a00038_source.xhtml">FeatureFromBlock.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  783</span>    {</div>
<div class="line"><span class="lineno">  784</span>        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><span class="lineno">  785</span>    }</div>
</div><!-- fragment -->
</div>
</div>
<a id="adbb3dc0caf773c6fb706bbff9d0b7126" name="adbb3dc0caf773c6fb706bbff9d0b7126"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adbb3dc0caf773c6fb706bbff9d0b7126">&#9670;&nbsp;</a></span>operator=()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00350.xhtml">CFeatureTimeMaxAcf</a> &amp; CFeatureTimeMaxAcf::operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="a00350.xhtml">CFeatureTimeMaxAcf</a> &amp;&#160;</td>
          <td class="paramname"><em>c</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ad08d755145fa0227b7e489000703ee30" name="ad08d755145fa0227b7e489000703ee30"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad08d755145fa0227b7e489000703ee30">&#9670;&nbsp;</a></span>setAdditionalParam()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> CFeatureTimeMaxAcf::setAdditionalParam </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fParamValue</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p >returns true if there is an additional parameter </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">fParamValue</td><td>new parameter value </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>bool </dd></dl>

<p>Reimplemented from <a class="el" href="a00470.xhtml#a7f3f62f3787b0ddc4c8938f5d54170af">CFeatureFromBlockIf</a>.</p>

<p class="definition">Definition at line <a class="el" href="a00038_source.xhtml#l00787">787</a> of file <a class="el" href="a00038_source.xhtml">FeatureFromBlock.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  788</span>    {</div>
<div class="line"><span class="lineno">  789</span>        <span class="keywordflow">if</span> (fParamValue &lt;= 0 || fParamValue &gt; <a class="code hl_variable" href="a00470.xhtml#a75ac4ef94667058662a8100bb1c1e1cd">m_fSampleRate</a>/2)</div>
<div class="line"><span class="lineno">  790</span>            <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><span class="lineno">  791</span> </div>
<div class="line"><span class="lineno">  792</span>        <a class="code hl_variable" href="a00350.xhtml#aeb05f443644d9e5db8bfd9a18af380a8">m_fMax</a> = fParamValue;</div>
<div class="line"><span class="lineno">  793</span> </div>
<div class="line"><span class="lineno">  794</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><span class="lineno">  795</span>    }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00224.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">kNoError</a>, <a class="el" href="a00038_source.xhtml#l00805">m_fMax</a>, and <a class="el" href="a00215_source.xhtml#l00098">CFeatureFromBlockIf::m_fSampleRate</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="aeb05f443644d9e5db8bfd9a18af380a8" name="aeb05f443644d9e5db8bfd9a18af380a8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aeb05f443644d9e5db8bfd9a18af380a8">&#9670;&nbsp;</a></span>m_fMax</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float CFeatureTimeMaxAcf::m_fMax = 2000.F</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="a00038_source.xhtml#l00805">805</a> of file <a class="el" href="a00038_source.xhtml">FeatureFromBlock.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00038_source.xhtml#l00745">compFeature()</a>, and <a class="el" href="a00038_source.xhtml#l00787">setAdditionalParam()</a>.</p>

</div>
</div>
<a id="a9fb60b727600dc5d28d874349adb5dc0" name="a9fb60b727600dc5d28d874349adb5dc0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9fb60b727600dc5d28d874349adb5dc0">&#9670;&nbsp;</a></span>m_pCCcf</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00546.xhtml">CCcf</a>* CFeatureTimeMaxAcf::m_pCCcf = 0</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="a00038_source.xhtml#l00802">802</a> of file <a class="el" href="a00038_source.xhtml">FeatureFromBlock.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00038_source.xhtml#l00729">CFeatureTimeMaxAcf()</a>, <a class="el" href="a00038_source.xhtml#l00745">compFeature()</a>, and <a class="el" href="a00038_source.xhtml#l00737">~CFeatureTimeMaxAcf()</a>.</p>

</div>
</div>
<a id="ac15ec6a2d0fdf91df801d6befd4117db" name="ac15ec6a2d0fdf91df801d6befd4117db"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac15ec6a2d0fdf91df801d6befd4117db">&#9670;&nbsp;</a></span>m_pfAcf</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float* CFeatureTimeMaxAcf::m_pfAcf = 0</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="a00038_source.xhtml#l00803">803</a> of file <a class="el" href="a00038_source.xhtml">FeatureFromBlock.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00038_source.xhtml#l00729">CFeatureTimeMaxAcf()</a>, <a class="el" href="a00038_source.xhtml#l00745">compFeature()</a>, and <a class="el" href="a00038_source.xhtml#l00737">~CFeatureTimeMaxAcf()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="a00038_source.xhtml">FeatureFromBlock.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="a00350.xhtml">CFeatureTimeMaxAcf</a></li>
    <li class="footer">Generated on Thu Jun 16 2022 21:11:12 for ACA by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.4 </li>
  </ul>
</div>
</body>
</html>
