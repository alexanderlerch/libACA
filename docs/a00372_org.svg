<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 4.0.0 (20220602.1335)
 -->
<!-- Title: CPitchFromVector Pages: 1 -->
<svg width="728pt" height="1256pt"
 viewBox="0.00 0.00 728.00 1256.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 1252)">
<title>CPitchFromVector</title>
<polygon fill="white" stroke="transparent" points="-4,4 -4,-1252 724,-1252 724,4 -4,4"/>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="class for computation of the pitch from a vector of audio data">
<polygon fill="#bfbfbf" stroke="black" points="238.5,-0.5 238.5,-101.5 439.5,-101.5 439.5,-0.5 238.5,-0.5"/>
<text text-anchor="middle" x="339" y="-89.5" font-family="Helvetica,sans-Serif" font-size="10.00">CPitchFromVector</text>
<polyline fill="none" stroke="black" points="238.5,-82.5 439.5,-82.5 "/>
<text text-anchor="middle" x="339" y="-70.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="238.5,-63.5 439.5,-63.5 "/>
<text text-anchor="start" x="246.5" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CPitchFromVector(PitchExtractors</text>
<text text-anchor="start" x="246.5" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t ePitchIdx, const float *pfAudio,</text>
<text text-anchor="start" x="246.5" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00"> long long iAudioLength, float fSampleRate,</text>
<text text-anchor="start" x="246.5" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iBlockLength, int iHopLength)</text>
<text text-anchor="start" x="246.5" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CPitchFromVector()</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="a00522.xhtml" target="_top" xlink:title="class for computation of a magnitude Pitch from either a file or a vector">
<polygon fill="white" stroke="black" points="232,-139.5 232,-713.5 446,-713.5 446,-139.5 232,-139.5"/>
<text text-anchor="middle" x="339" y="-701.5" font-family="Helvetica,sans-Serif" font-size="10.00">CPitchIf</text>
<polyline fill="none" stroke="black" points="232,-694.5 446,-694.5 "/>
<text text-anchor="start" x="240" y="-682.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CPitchAuditory * m</text>
<text text-anchor="start" x="240" y="-671.5" font-family="Helvetica,sans-Serif" font-size="10.00">_pCAuditory</text>
<text text-anchor="start" x="240" y="-660.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iBlockLength</text>
<text text-anchor="start" x="240" y="-649.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iHopLength</text>
<text text-anchor="start" x="240" y="-638.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float m_fSampleRate</text>
<text text-anchor="start" x="240" y="-627.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float * m_pfProcBuff2</text>
<text text-anchor="start" x="240" y="-616.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float * m_pfProcBuff1</text>
<text text-anchor="start" x="240" y="-605.5" font-family="Helvetica,sans-Serif" font-size="10.00"># bool m_bIsInitialized</text>
<polyline fill="none" stroke="black" points="232,-598.5 446,-598.5 "/>
<text text-anchor="start" x="240" y="-586.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getNumBlocks</text>
<text text-anchor="start" x="240" y="-575.5" font-family="Helvetica,sans-Serif" font-size="10.00">(int &amp;iNumBlocks) const</text>
<text text-anchor="start" x="240" y="-564.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ int getNumBlocks()</text>
<text text-anchor="start" x="240" y="-553.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const</text>
<text text-anchor="start" x="240" y="-542.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ float getTimeStamp</text>
<text text-anchor="start" x="240" y="-531.5" font-family="Helvetica,sans-Serif" font-size="10.00">(int iBlockIdx) const</text>
<text text-anchor="start" x="240" y="-520.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getTimeStamps</text>
<text text-anchor="start" x="240" y="-509.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfAxisTicks) const</text>
<text text-anchor="start" x="240" y="-498.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compF0(float</text>
<text text-anchor="start" x="240" y="-487.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfPitch)</text>
<text text-anchor="start" x="240" y="-476.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="240" y="-465.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CPitchIf *&amp;pCInstance,</text>
<text text-anchor="start" x="240" y="-454.5" font-family="Helvetica,sans-Serif" font-size="10.00"> PitchExtractors_t ePitchIdx,</text>
<text text-anchor="start" x="240" y="-443.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const std::string &amp;strAudioFilePath,</text>
<text text-anchor="start" x="240" y="-432.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iBlockLength=2048, int iHopLength=1024)</text>
<text text-anchor="start" x="240" y="-421.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="240" y="-410.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CPitchIf *&amp;pCInstance,</text>
<text text-anchor="start" x="240" y="-399.5" font-family="Helvetica,sans-Serif" font-size="10.00"> PitchExtractors_t ePitchIdx,</text>
<text text-anchor="start" x="240" y="-388.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const float *pfAudio, long</text>
<text text-anchor="start" x="240" y="-377.5" font-family="Helvetica,sans-Serif" font-size="10.00"> long iNumSamples, float fSampleRate,</text>
<text text-anchor="start" x="240" y="-366.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iBlockLength=2048, int iHopLength=1024)</text>
<text text-anchor="start" x="240" y="-355.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="240" y="-344.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CPitchIf *&amp;pCInstance)</text>
<text text-anchor="start" x="240" y="-333.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static std::string</text>
<text text-anchor="start" x="240" y="-322.5" font-family="Helvetica,sans-Serif" font-size="10.00"> getPitchString(PitchExtractors</text>
<text text-anchor="start" x="240" y="-311.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t ePitchIdx)</text>
<text text-anchor="start" x="240" y="-300.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static PitchExtractors</text>
<text text-anchor="start" x="240" y="-289.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t getPitchIdxFromString</text>
<text text-anchor="start" x="240" y="-278.5" font-family="Helvetica,sans-Serif" font-size="10.00">(std::string sPitchString)</text>
<text text-anchor="start" x="240" y="-267.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CPitchIf()</text>
<text text-anchor="start" x="240" y="-256.5" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CPitchIf()</text>
<text text-anchor="start" x="240" y="-245.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CPitchIf(const CPitchIf</text>
<text text-anchor="start" x="240" y="-234.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;that)</text>
<text text-anchor="start" x="240" y="-223.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CPitchIf &amp; operator</text>
<text text-anchor="start" x="240" y="-212.5" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CPitchIf &amp;c)</text>
<text text-anchor="start" x="240" y="-201.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t reset_()</text>
<text text-anchor="start" x="240" y="-190.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t init_(PitchExtractors</text>
<text text-anchor="start" x="240" y="-179.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t ePitchIdx)</text>
<text text-anchor="start" x="240" y="-168.5" font-family="Helvetica,sans-Serif" font-size="10.00"># bool isPitchExtractorSpectral</text>
<text text-anchor="start" x="240" y="-157.5" font-family="Helvetica,sans-Serif" font-size="10.00">_(PitchExtractors_t ePitchIdx)</text>
<text text-anchor="start" x="240" y="-146.5" font-family="Helvetica,sans-Serif" font-size="10.00"># void computeMagSpectrum_()</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M339,-128.8C339,-119.12 339,-110.05 339,-101.78"/>
<polygon fill="none" stroke="midnightblue" points="335.5,-129.1 339,-139.1 342.5,-129.1 335.5,-129.1"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="a00606.xhtml" target="_top" xlink:title="class for audio normalization offering three options">
<polygon fill="white" stroke="black" points="0,-888 0,-1121 150,-1121 150,-888 0,-888"/>
<text text-anchor="middle" x="75" y="-1109" font-family="Helvetica,sans-Serif" font-size="10.00">CNormalizeAudio</text>
<polyline fill="none" stroke="black" points="0,-1102 150,-1102 "/>
<text text-anchor="start" x="8" y="-1090" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float m_fScaleFactor</text>
<polyline fill="none" stroke="black" points="0,-1083 150,-1083 "/>
<text text-anchor="start" x="8" y="-1071" font-family="Helvetica,sans-Serif" font-size="10.00">+ CNormalizeAudio(CAudioFile</text>
<text text-anchor="start" x="8" y="-1060" font-family="Helvetica,sans-Serif" font-size="10.00">If *pCAudioFile)</text>
<text text-anchor="start" x="8" y="-1049" font-family="Helvetica,sans-Serif" font-size="10.00">+ CNormalizeAudio(const</text>
<text text-anchor="start" x="8" y="-1038" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfAudioBuff, long</text>
<text text-anchor="start" x="8" y="-1027" font-family="Helvetica,sans-Serif" font-size="10.00"> long iAudioLength)</text>
<text text-anchor="start" x="8" y="-1016" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CNormalizeAudio()</text>
<text text-anchor="start" x="8" y="-1005" font-family="Helvetica,sans-Serif" font-size="10.00">+ void normalizeBlock</text>
<text text-anchor="start" x="8" y="-994" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfAudioBlock,</text>
<text text-anchor="start" x="8" y="-983" font-family="Helvetica,sans-Serif" font-size="10.00"> long long iNumSamples)</text>
<text text-anchor="start" x="8" y="-972" font-family="Helvetica,sans-Serif" font-size="10.00">+ static void normalizeSignal</text>
<text text-anchor="start" x="8" y="-961" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfAudio, long long</text>
<text text-anchor="start" x="8" y="-950" font-family="Helvetica,sans-Serif" font-size="10.00"> iNumSamples)</text>
<text text-anchor="start" x="8" y="-939" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CNormalizeAudio()</text>
<text text-anchor="start" x="8" y="-928" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CNormalizeAudio(const</text>
<text text-anchor="start" x="8" y="-917" font-family="Helvetica,sans-Serif" font-size="10.00"> CNormalizeAudio &amp;that)</text>
<text text-anchor="start" x="8" y="-906" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CNormalizeAudio &amp; operator</text>
<text text-anchor="start" x="8" y="-895" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CNormalizeAudio &amp;c)</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node2 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node2</title>
<path fill="none" stroke="#404040" d="M110.79,-887.92C124.5,-847.25 141.16,-801.58 159,-761 178.92,-715.69 202.67,-668.22 226.29,-623.76"/>
<polygon fill="none" stroke="#404040" points="226.31,-623.72 225.61,-616.54 231.96,-613.13 232.66,-620.31 226.31,-623.72"/>
<text text-anchor="middle" x="210.5" y="-735" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCNormalize</text>
</g>
<!-- Node4 -->
<g id="node4" class="node">
<title>Node4</title>
<g id="a_node4"><a xlink:href="a00542.xhtml" target="_top" xlink:title="forward declaration">
<polygon fill="white" stroke="black" points="168,-789 168,-1220 328,-1220 328,-789 168,-789"/>
<text text-anchor="middle" x="248" y="-1208" font-family="Helvetica,sans-Serif" font-size="10.00">CBlockAudioIf</text>
<polyline fill="none" stroke="black" points="168,-1201 328,-1201 "/>
<text text-anchor="start" x="176" y="-1189" font-family="Helvetica,sans-Serif" font-size="10.00"># long long m_iNumBlocks</text>
<text text-anchor="start" x="176" y="-1178" font-family="Helvetica,sans-Serif" font-size="10.00"># long long m_iCurrBlock</text>
<text text-anchor="start" x="176" y="-1167" font-family="Helvetica,sans-Serif" font-size="10.00"># long long m_iAudioLength</text>
<text text-anchor="start" x="176" y="-1156" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iBlockLength</text>
<text text-anchor="start" x="176" y="-1145" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iNumChannels</text>
<text text-anchor="start" x="176" y="-1134" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iHopLength</text>
<text text-anchor="start" x="176" y="-1123" font-family="Helvetica,sans-Serif" font-size="10.00"># float m_fSampleRate</text>
<polyline fill="none" stroke="black" points="168,-1116 328,-1116 "/>
<text text-anchor="start" x="176" y="-1104" font-family="Helvetica,sans-Serif" font-size="10.00">+ long long getNumBlocks</text>
<text text-anchor="start" x="176" y="-1093" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="176" y="-1082" font-family="Helvetica,sans-Serif" font-size="10.00">+ long long getLengthInSamples</text>
<text text-anchor="start" x="176" y="-1071" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="176" y="-1060" font-family="Helvetica,sans-Serif" font-size="10.00">+ float getTimeStamp</text>
<text text-anchor="start" x="176" y="-1049" font-family="Helvetica,sans-Serif" font-size="10.00">(long long iBlockIdx)</text>
<text text-anchor="start" x="176" y="-1038" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual bool isEndOfData</text>
<text text-anchor="start" x="176" y="-1027" font-family="Helvetica,sans-Serif" font-size="10.00">() const =0</text>
<text text-anchor="start" x="176" y="-1016" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual int getNextBlock</text>
<text text-anchor="start" x="176" y="-1005" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfBlock, float</text>
<text text-anchor="start" x="176" y="-994" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfTimeStampInS=0)=0</text>
<text text-anchor="start" x="176" y="-983" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="176" y="-972" font-family="Helvetica,sans-Serif" font-size="10.00">(CBlockAudioIf *&amp;pCInstance,</text>
<text text-anchor="start" x="176" y="-961" font-family="Helvetica,sans-Serif" font-size="10.00"> CAudioFileIf *pCAudioFile,</text>
<text text-anchor="start" x="176" y="-950" font-family="Helvetica,sans-Serif" font-size="10.00"> int iBlockLength, int iHopLength)</text>
<text text-anchor="start" x="176" y="-939" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="176" y="-928" font-family="Helvetica,sans-Serif" font-size="10.00">(CBlockAudioIf *&amp;pCInstance,</text>
<text text-anchor="start" x="176" y="-917" font-family="Helvetica,sans-Serif" font-size="10.00"> const float *pfAudioBuff,</text>
<text text-anchor="start" x="176" y="-906" font-family="Helvetica,sans-Serif" font-size="10.00"> long long iAudioLength, int</text>
<text text-anchor="start" x="176" y="-895" font-family="Helvetica,sans-Serif" font-size="10.00"> iBlockLength, int iHopLength,</text>
<text text-anchor="start" x="176" y="-884" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate)</text>
<text text-anchor="start" x="176" y="-873" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="176" y="-862" font-family="Helvetica,sans-Serif" font-size="10.00">(CBlockAudioIf *&amp;pCInstance)</text>
<text text-anchor="start" x="176" y="-851" font-family="Helvetica,sans-Serif" font-size="10.00"># CBlockAudioIf()</text>
<text text-anchor="start" x="176" y="-840" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CBlockAudioIf()</text>
<text text-anchor="start" x="176" y="-829" font-family="Helvetica,sans-Serif" font-size="10.00"># CBlockAudioIf(const</text>
<text text-anchor="start" x="176" y="-818" font-family="Helvetica,sans-Serif" font-size="10.00"> CBlockAudioIf &amp;that)</text>
<text text-anchor="start" x="176" y="-807" font-family="Helvetica,sans-Serif" font-size="10.00"># CBlockAudioIf &amp; operator</text>
<text text-anchor="start" x="176" y="-796" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CBlockAudioIf &amp;c)</text>
</a>
</g>
</g>
<!-- Node4&#45;&gt;Node2 -->
<g id="edge3" class="edge">
<title>Node4&#45;&gt;Node2</title>
<path fill="none" stroke="#404040" d="M281.95,-788.61C285.19,-768.07 288.52,-747 291.86,-725.85"/>
<polygon fill="none" stroke="#404040" points="291.9,-725.6 288.89,-719.05 293.78,-713.75 296.79,-720.3 291.9,-725.6"/>
<text text-anchor="middle" x="332.5" y="-735" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCBlockAudio</text>
</g>
<!-- Node5 -->
<g id="node5" class="node">
<title>Node5</title>
<g id="a_node5"><a xlink:href="a00526.xhtml" target="_top" xlink:title="class for computation of f0 from a block of data (e.g., time or magnitude spectrum)">
<polygon fill="white" stroke="black" points="346.5,-833 346.5,-1176 513.5,-1176 513.5,-833 346.5,-833"/>
<text text-anchor="middle" x="430" y="-1164" font-family="Helvetica,sans-Serif" font-size="10.00">CPitchFromBlockIf</text>
<polyline fill="none" stroke="black" points="346.5,-1157 513.5,-1157 "/>
<text text-anchor="start" x="354.5" y="-1145" font-family="Helvetica,sans-Serif" font-size="10.00"># CPitchIf::PitchExtractors</text>
<text text-anchor="start" x="354.5" y="-1134" font-family="Helvetica,sans-Serif" font-size="10.00">_t m_ePitchIdx</text>
<text text-anchor="start" x="354.5" y="-1123" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iDataLength</text>
<text text-anchor="start" x="354.5" y="-1112" font-family="Helvetica,sans-Serif" font-size="10.00"># float m_fSampleRate</text>
<polyline fill="none" stroke="black" points="346.5,-1105 513.5,-1105 "/>
<text text-anchor="start" x="354.5" y="-1093" font-family="Helvetica,sans-Serif" font-size="10.00">+ CPitchIf::PitchExtractors</text>
<text text-anchor="start" x="354.5" y="-1082" font-family="Helvetica,sans-Serif" font-size="10.00">_t getPitchExtractorIdx</text>
<text text-anchor="start" x="354.5" y="-1071" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="354.5" y="-1060" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual float compF0</text>
<text text-anchor="start" x="354.5" y="-1049" font-family="Helvetica,sans-Serif" font-size="10.00">(const float *pfIn)=0</text>
<text text-anchor="start" x="354.5" y="-1038" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="354.5" y="-1027" font-family="Helvetica,sans-Serif" font-size="10.00">(CPitchFromBlockIf *&amp;pCInstance,</text>
<text text-anchor="start" x="354.5" y="-1016" font-family="Helvetica,sans-Serif" font-size="10.00"> CPitchIf::PitchExtractors</text>
<text text-anchor="start" x="354.5" y="-1005" font-family="Helvetica,sans-Serif" font-size="10.00">_t ePitchIdx, int iDataLength,</text>
<text text-anchor="start" x="354.5" y="-994" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate=1.F)</text>
<text text-anchor="start" x="354.5" y="-983" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="354.5" y="-972" font-family="Helvetica,sans-Serif" font-size="10.00">(CPitchFromBlockIf *&amp;pCInstance)</text>
<text text-anchor="start" x="354.5" y="-961" font-family="Helvetica,sans-Serif" font-size="10.00"># CPitchFromBlockIf()</text>
<text text-anchor="start" x="354.5" y="-950" font-family="Helvetica,sans-Serif" font-size="10.00"># CPitchFromBlockIf</text>
<text text-anchor="start" x="354.5" y="-939" font-family="Helvetica,sans-Serif" font-size="10.00">(CPitchIf::PitchExtractors</text>
<text text-anchor="start" x="354.5" y="-928" font-family="Helvetica,sans-Serif" font-size="10.00">_t ePitchIdx, int iDataLength,</text>
<text text-anchor="start" x="354.5" y="-917" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate)</text>
<text text-anchor="start" x="354.5" y="-906" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CPitchFromBlockIf()</text>
<text text-anchor="start" x="354.5" y="-895" font-family="Helvetica,sans-Serif" font-size="10.00"># CPitchFromBlockIf</text>
<text text-anchor="start" x="354.5" y="-884" font-family="Helvetica,sans-Serif" font-size="10.00">(const CPitchFromBlockIf</text>
<text text-anchor="start" x="354.5" y="-873" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;that)</text>
<text text-anchor="start" x="354.5" y="-862" font-family="Helvetica,sans-Serif" font-size="10.00"># CPitchFromBlockIf &amp;</text>
<text text-anchor="start" x="354.5" y="-851" font-family="Helvetica,sans-Serif" font-size="10.00"> operator=(const CPitchFrom</text>
<text text-anchor="start" x="354.5" y="-840" font-family="Helvetica,sans-Serif" font-size="10.00">BlockIf &amp;c)</text>
</a>
</g>
</g>
<!-- Node5&#45;&gt;Node2 -->
<g id="edge4" class="edge">
<title>Node5&#45;&gt;Node2</title>
<path fill="none" stroke="#404040" d="M403,-832.63C397.65,-798.74 391.88,-762.23 386.08,-725.51"/>
<polygon fill="none" stroke="#404040" points="386.07,-725.44 381.18,-720.14 384.2,-713.58 389.08,-718.89 386.07,-725.44"/>
<text text-anchor="middle" x="415" y="-735" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCPitch</text>
</g>
<!-- Node6 -->
<g id="node6" class="node">
<title>Node6</title>
<g id="a_node6"><a xlink:href="a00474.xhtml" target="_top" xlink:title="class for FFT computation with windowing">
<polygon fill="white" stroke="black" points="532,-761.5 532,-1247.5 720,-1247.5 720,-761.5 532,-761.5"/>
<text text-anchor="middle" x="626" y="-1235.5" font-family="Helvetica,sans-Serif" font-size="10.00">CFft</text>
<polyline fill="none" stroke="black" points="532,-1228.5 720,-1228.5 "/>
<text text-anchor="start" x="540" y="-1216.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_pfProcBuff</text>
<text text-anchor="start" x="540" y="-1205.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_pfWindowBuff</text>
<text text-anchor="start" x="540" y="-1194.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iDataLength</text>
<text text-anchor="start" x="540" y="-1183.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iFftLength</text>
<text text-anchor="start" x="540" y="-1172.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Windowing_t m_ePrePostWindowOpt</text>
<text text-anchor="start" x="540" y="-1161.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; bool m_bIsInitialized</text>
<text text-anchor="start" x="540" y="-1150.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; static const float m_Pi</text>
<text text-anchor="start" x="540" y="-1139.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; static const float</text>
<text text-anchor="start" x="540" y="-1128.5" font-family="Helvetica,sans-Serif" font-size="10.00"> m_Pi2</text>
<polyline fill="none" stroke="black" points="532,-1121.5 720,-1121.5 "/>
<text text-anchor="start" x="540" y="-1109.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CFft()</text>
<text text-anchor="start" x="540" y="-1098.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CFft()</text>
<text text-anchor="start" x="540" y="-1087.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t init(int iBlockLength,</text>
<text text-anchor="start" x="540" y="-1076.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iZeroPadFactor=1, WindowFunction</text>
<text text-anchor="start" x="540" y="-1065.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t eWindow=kWindowHann, Windowing</text>
<text text-anchor="start" x="540" y="-1054.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t eWindowing=kPreWindow)</text>
<text text-anchor="start" x="540" y="-1043.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t reset()</text>
<text text-anchor="start" x="540" y="-1032.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t overrideWindow</text>
<text text-anchor="start" x="540" y="-1021.5" font-family="Helvetica,sans-Serif" font-size="10.00">(const float *pfNewWindow)</text>
<text text-anchor="start" x="540" y="-1010.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getWindow(float</text>
<text text-anchor="start" x="540" y="-999.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfWindow) const</text>
<text text-anchor="start" x="540" y="-988.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compFft(complex</text>
<text text-anchor="start" x="540" y="-977.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t *pfSpectrum, const</text>
<text text-anchor="start" x="540" y="-966.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfIn)</text>
<text text-anchor="start" x="540" y="-955.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compInvFft</text>
<text text-anchor="start" x="540" y="-944.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfOut, const</text>
<text text-anchor="start" x="540" y="-933.5" font-family="Helvetica,sans-Serif" font-size="10.00"> complex_t *pfSpectrum)</text>
<text text-anchor="start" x="540" y="-922.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getMagnitude</text>
<text text-anchor="start" x="540" y="-911.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfMag, const</text>
<text text-anchor="start" x="540" y="-900.5" font-family="Helvetica,sans-Serif" font-size="10.00"> complex_t *pfSpectrum)</text>
<text text-anchor="start" x="540" y="-889.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const</text>
<text text-anchor="start" x="540" y="-878.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getPhase(float</text>
<text text-anchor="start" x="540" y="-867.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfPhase, const complex</text>
<text text-anchor="start" x="540" y="-856.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t *pfSpectrum) const</text>
<text text-anchor="start" x="540" y="-845.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 7 more...</text>
<text text-anchor="start" x="540" y="-834.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CFft(const CFft &amp;that)</text>
<text text-anchor="start" x="540" y="-823.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CFft &amp; operator=(const</text>
<text text-anchor="start" x="540" y="-812.5" font-family="Helvetica,sans-Serif" font-size="10.00"> CFft &amp;c)</text>
<text text-anchor="start" x="540" y="-801.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Error_t allocMemory_()</text>
<text text-anchor="start" x="540" y="-790.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Error_t freeMemory_()</text>
<text text-anchor="start" x="540" y="-779.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Error_t computeWindow</text>
<text text-anchor="start" x="540" y="-768.5" font-family="Helvetica,sans-Serif" font-size="10.00">_(WindowFunction_t eWindow)</text>
</a>
</g>
</g>
<!-- Node6&#45;&gt;Node2 -->
<g id="edge5" class="edge">
<title>Node6&#45;&gt;Node2</title>
<path fill="none" stroke="#404040" d="M531.85,-779.49C528.91,-773.24 525.95,-767.07 523,-761 501.17,-716.14 476.22,-668.75 451.89,-624.22"/>
<polygon fill="none" stroke="#404040" points="451.82,-624.09 445.43,-620.75 446.06,-613.57 452.45,-616.91 451.82,-624.09"/>
<text text-anchor="middle" x="536" y="-735" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCFft</text>
</g>
</g>
</svg>
