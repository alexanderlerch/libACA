<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 6.0.1 (20220911.1526)
 -->
<!-- Title: CNoveltyFromFile Pages: 1 -->
<svg width="1098pt" height="2447pt"
 viewBox="0.00 0.00 1098.00 2447.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 2443)">
<title>CNoveltyFromFile</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="class for computation of the novelty function from a file">
<polygon fill="#999999" stroke="#666666" points="734,-85 565,-85 565,0 734,0 734,-85"/>
<text text-anchor="middle" x="649.5" y="-73" font-family="Helvetica,sans-Serif" font-size="10.00">{CNoveltyFromFile</text>
<text text-anchor="start" x="573" y="-62" font-family="Helvetica,sans-Serif" font-size="10.00">||+ &#160;CNoveltyFromFile(Novelty</text>
<text text-anchor="start" x="573" y="-51" font-family="Helvetica,sans-Serif" font-size="10.00">_t eNoveltyIdx, std::string</text>
<text text-anchor="start" x="573" y="-40" font-family="Helvetica,sans-Serif" font-size="10.00"> strAudioFilePath, int iBlockLength,</text>
<text text-anchor="start" x="573" y="-29" font-family="Helvetica,sans-Serif" font-size="10.00"> int iHopLength)</text>
<text text-anchor="start" x="573" y="-18" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CNoveltyFromFile()</text>
<text text-anchor="middle" x="649.5" y="-7" font-family="Helvetica,sans-Serif" font-size="10.00">}</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="a00514.xhtml" target="_top" xlink:title="class for computation of a magnitude Novelty from either a file or a vector">
<polygon fill="white" stroke="#666666" points="653,-860.5 444,-860.5 444,-313.5 653,-313.5 653,-860.5"/>
<text text-anchor="middle" x="548.5" y="-848.5" font-family="Helvetica,sans-Serif" font-size="10.00">{CNoveltyIf</text>
<text text-anchor="start" x="452" y="-837.5" font-family="Helvetica,sans-Serif" font-size="10.00">|# int m_iBlockLength</text>
<text text-anchor="start" x="452" y="-826.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iHopLength</text>
<text text-anchor="start" x="452" y="-815.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float m_fSampleRate</text>
<text text-anchor="start" x="452" y="-804.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float * m_pfProcBuff2</text>
<text text-anchor="start" x="452" y="-793.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float * m_pfProcBuff1</text>
<text text-anchor="start" x="452" y="-782.5" font-family="Helvetica,sans-Serif" font-size="10.00"># bool m_bIsInitialized</text>
<text text-anchor="start" x="452" y="-771.5" font-family="Helvetica,sans-Serif" font-size="10.00">|+ Error_t getNumBlocks</text>
<text text-anchor="start" x="452" y="-760.5" font-family="Helvetica,sans-Serif" font-size="10.00">(int &amp;iNumBlocks) const</text>
<text text-anchor="start" x="452" y="-749.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ int getNumBlocks()</text>
<text text-anchor="start" x="452" y="-738.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const</text>
<text text-anchor="start" x="452" y="-727.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ float getTimeStamp</text>
<text text-anchor="start" x="452" y="-716.5" font-family="Helvetica,sans-Serif" font-size="10.00">(int iBlockIdx) const</text>
<text text-anchor="start" x="452" y="-705.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getTimeStamps</text>
<text text-anchor="start" x="452" y="-694.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfAxisTicks) const</text>
<text text-anchor="start" x="452" y="-683.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compNovelty</text>
<text text-anchor="start" x="452" y="-672.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfNovelty, bool</text>
<text text-anchor="start" x="452" y="-661.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pbisOnset=0)</text>
<text text-anchor="start" x="452" y="-650.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="452" y="-639.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CNoveltyIf *&amp;pCInstance,</text>
<text text-anchor="start" x="452" y="-628.5" font-family="Helvetica,sans-Serif" font-size="10.00"> Novelty_t eNoveltyIdx,</text>
<text text-anchor="start" x="452" y="-617.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const std::string &amp;strAudioFile</text>
<text text-anchor="start" x="452" y="-606.5" font-family="Helvetica,sans-Serif" font-size="10.00">Path, int iBlockLength=4096,</text>
<text text-anchor="start" x="452" y="-595.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iHopLength=512)</text>
<text text-anchor="start" x="452" y="-584.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="452" y="-573.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CNoveltyIf *&amp;pCInstance,</text>
<text text-anchor="start" x="452" y="-562.5" font-family="Helvetica,sans-Serif" font-size="10.00"> Novelty_t eNoveltyIdx,</text>
<text text-anchor="start" x="452" y="-551.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const float *pfAudio, long</text>
<text text-anchor="start" x="452" y="-540.5" font-family="Helvetica,sans-Serif" font-size="10.00"> long iNumSamples, float fSampleRate,</text>
<text text-anchor="start" x="452" y="-529.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iBlockLength=4096, int iHopLength=512)</text>
<text text-anchor="start" x="452" y="-518.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="452" y="-507.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CNoveltyIf *&amp;pCInstance)</text>
<text text-anchor="start" x="452" y="-496.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static std::string</text>
<text text-anchor="start" x="452" y="-485.5" font-family="Helvetica,sans-Serif" font-size="10.00"> getNoveltyString(Novelty</text>
<text text-anchor="start" x="452" y="-474.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t eNoveltyIdx)</text>
<text text-anchor="start" x="452" y="-463.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Novelty_t getNovelty</text>
<text text-anchor="start" x="452" y="-452.5" font-family="Helvetica,sans-Serif" font-size="10.00">IdxFromString(std::string</text>
<text text-anchor="start" x="452" y="-441.5" font-family="Helvetica,sans-Serif" font-size="10.00"> sNoveltyString)</text>
<text text-anchor="start" x="452" y="-430.5" font-family="Helvetica,sans-Serif" font-size="10.00"># &#160;CNoveltyIf()</text>
<text text-anchor="start" x="452" y="-419.5" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CNoveltyIf()</text>
<text text-anchor="start" x="452" y="-408.5" font-family="Helvetica,sans-Serif" font-size="10.00"># &#160;CNoveltyIf(const CNovelty</text>
<text text-anchor="start" x="452" y="-397.5" font-family="Helvetica,sans-Serif" font-size="10.00">If &amp;that)</text>
<text text-anchor="start" x="452" y="-386.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CNoveltyIf &amp; operator</text>
<text text-anchor="start" x="452" y="-375.5" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CNoveltyIf &amp;c)</text>
<text text-anchor="start" x="452" y="-364.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t reset_()</text>
<text text-anchor="start" x="452" y="-353.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t init_(Novelty</text>
<text text-anchor="start" x="452" y="-342.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t eNoveltyIdx)</text>
<text text-anchor="start" x="452" y="-331.5" font-family="Helvetica,sans-Serif" font-size="10.00"># void computeMagSpectrum_()</text>
<text text-anchor="middle" x="548.5" y="-320.5" font-family="Helvetica,sans-Serif" font-size="10.00">}</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="#63b8ff" d="M601.14,-303.26C617.07,-217.71 632.71,-133.69 641.72,-85.31"/>
<polygon fill="none" stroke="#63b8ff" points="597.69,-302.69 599.3,-313.16 604.57,-303.97 597.69,-302.69"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="a00606.xhtml" target="_top" xlink:title="class for audio normalization offering three options">
<polygon fill="white" stroke="#666666" points="155,-1482 0,-1482 0,-1254 155,-1254 155,-1482"/>
<text text-anchor="middle" x="77.5" y="-1470" font-family="Helvetica,sans-Serif" font-size="10.00">{CNormalizeAudio</text>
<text text-anchor="start" x="8" y="-1459" font-family="Helvetica,sans-Serif" font-size="10.00">|&#45; float m_fScaleFactor</text>
<text text-anchor="start" x="8" y="-1448" font-family="Helvetica,sans-Serif" font-size="10.00">|+ &#160;CNormalizeAudio(CAudioFile</text>
<text text-anchor="start" x="8" y="-1437" font-family="Helvetica,sans-Serif" font-size="10.00">If *pCAudioFile)</text>
<text text-anchor="start" x="8" y="-1426" font-family="Helvetica,sans-Serif" font-size="10.00">+ &#160;CNormalizeAudio(const</text>
<text text-anchor="start" x="8" y="-1415" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfAudioBuff, long</text>
<text text-anchor="start" x="8" y="-1404" font-family="Helvetica,sans-Serif" font-size="10.00"> long iAudioLength)</text>
<text text-anchor="start" x="8" y="-1393" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CNormalizeAudio()</text>
<text text-anchor="start" x="8" y="-1382" font-family="Helvetica,sans-Serif" font-size="10.00">+ void normalizeBlock</text>
<text text-anchor="start" x="8" y="-1371" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfAudioBlock,</text>
<text text-anchor="start" x="8" y="-1360" font-family="Helvetica,sans-Serif" font-size="10.00"> long long iNumSamples)</text>
<text text-anchor="start" x="8" y="-1349" font-family="Helvetica,sans-Serif" font-size="10.00">+ static void normalizeSignal</text>
<text text-anchor="start" x="8" y="-1338" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfAudio, long long</text>
<text text-anchor="start" x="8" y="-1327" font-family="Helvetica,sans-Serif" font-size="10.00"> iNumSamples)</text>
<text text-anchor="start" x="8" y="-1316" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; &#160;CNormalizeAudio()</text>
<text text-anchor="start" x="8" y="-1305" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; &#160;CNormalizeAudio(const</text>
<text text-anchor="start" x="8" y="-1294" font-family="Helvetica,sans-Serif" font-size="10.00"> CNormalizeAudio &amp;that)</text>
<text text-anchor="start" x="8" y="-1283" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CNormalizeAudio &amp; operator</text>
<text text-anchor="start" x="8" y="-1272" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CNormalizeAudio &amp;c)</text>
<text text-anchor="middle" x="77.5" y="-1261" font-family="Helvetica,sans-Serif" font-size="10.00">}</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node2 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node2</title>
<path fill="none" stroke="#404040" d="M103.23,-1253.88C117.44,-1201.97 137.71,-1140.62 164.5,-1089 237.6,-948.12 350.89,-806.29 435.5,-709.68"/>
<polygon fill="none" stroke="#404040" points="435.67,-709.48 436.63,-702.34 443.6,-700.47 442.64,-707.62 435.67,-709.48"/>
<text text-anchor="middle" x="215" y="-1063" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCNormalize</text>
</g>
<!-- Node4 -->
<g id="node4" class="node">
<title>Node4</title>
<g id="a_node4"><a xlink:href="a00542.xhtml" target="_top" xlink:title="forward declaration">
<polygon fill="white" stroke="#666666" points="333.5,-1581 173.5,-1581 173.5,-1155 333.5,-1155 333.5,-1581"/>
<text text-anchor="middle" x="253.5" y="-1569" font-family="Helvetica,sans-Serif" font-size="10.00">{CBlockAudioIf</text>
<text text-anchor="start" x="181.5" y="-1558" font-family="Helvetica,sans-Serif" font-size="10.00">|# long long m_iNumBlocks</text>
<text text-anchor="start" x="181.5" y="-1547" font-family="Helvetica,sans-Serif" font-size="10.00"># long long m_iCurrBlock</text>
<text text-anchor="start" x="181.5" y="-1536" font-family="Helvetica,sans-Serif" font-size="10.00"># long long m_iAudioLength</text>
<text text-anchor="start" x="181.5" y="-1525" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iBlockLength</text>
<text text-anchor="start" x="181.5" y="-1514" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iNumChannels</text>
<text text-anchor="start" x="181.5" y="-1503" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iHopLength</text>
<text text-anchor="start" x="181.5" y="-1492" font-family="Helvetica,sans-Serif" font-size="10.00"># float m_fSampleRate</text>
<text text-anchor="start" x="181.5" y="-1481" font-family="Helvetica,sans-Serif" font-size="10.00">|+ long long getNumBlocks</text>
<text text-anchor="start" x="181.5" y="-1470" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="181.5" y="-1459" font-family="Helvetica,sans-Serif" font-size="10.00">+ long long getLengthInSamples</text>
<text text-anchor="start" x="181.5" y="-1448" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="181.5" y="-1437" font-family="Helvetica,sans-Serif" font-size="10.00">+ float getTimeStamp</text>
<text text-anchor="start" x="181.5" y="-1426" font-family="Helvetica,sans-Serif" font-size="10.00">(long long iBlockIdx)</text>
<text text-anchor="start" x="181.5" y="-1415" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual bool isEndOfData</text>
<text text-anchor="start" x="181.5" y="-1404" font-family="Helvetica,sans-Serif" font-size="10.00">() const =0</text>
<text text-anchor="start" x="181.5" y="-1393" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual int getNextBlock</text>
<text text-anchor="start" x="181.5" y="-1382" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfBlock, float</text>
<text text-anchor="start" x="181.5" y="-1371" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfTimeStampInS=0)=0</text>
<text text-anchor="start" x="181.5" y="-1360" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="181.5" y="-1349" font-family="Helvetica,sans-Serif" font-size="10.00">(CBlockAudioIf *&amp;pCInstance,</text>
<text text-anchor="start" x="181.5" y="-1338" font-family="Helvetica,sans-Serif" font-size="10.00"> CAudioFileIf *pCAudioFile,</text>
<text text-anchor="start" x="181.5" y="-1327" font-family="Helvetica,sans-Serif" font-size="10.00"> int iBlockLength, int iHopLength)</text>
<text text-anchor="start" x="181.5" y="-1316" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="181.5" y="-1305" font-family="Helvetica,sans-Serif" font-size="10.00">(CBlockAudioIf *&amp;pCInstance,</text>
<text text-anchor="start" x="181.5" y="-1294" font-family="Helvetica,sans-Serif" font-size="10.00"> const float *pfAudioBuff,</text>
<text text-anchor="start" x="181.5" y="-1283" font-family="Helvetica,sans-Serif" font-size="10.00"> long long iAudioLength, int</text>
<text text-anchor="start" x="181.5" y="-1272" font-family="Helvetica,sans-Serif" font-size="10.00"> iBlockLength, int iHopLength,</text>
<text text-anchor="start" x="181.5" y="-1261" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate)</text>
<text text-anchor="start" x="181.5" y="-1250" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="181.5" y="-1239" font-family="Helvetica,sans-Serif" font-size="10.00">(CBlockAudioIf *&amp;pCInstance)</text>
<text text-anchor="start" x="181.5" y="-1228" font-family="Helvetica,sans-Serif" font-size="10.00"># &#160;CBlockAudioIf()</text>
<text text-anchor="start" x="181.5" y="-1217" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CBlockAudioIf()</text>
<text text-anchor="start" x="181.5" y="-1206" font-family="Helvetica,sans-Serif" font-size="10.00"># &#160;CBlockAudioIf(const</text>
<text text-anchor="start" x="181.5" y="-1195" font-family="Helvetica,sans-Serif" font-size="10.00"> CBlockAudioIf &amp;that)</text>
<text text-anchor="start" x="181.5" y="-1184" font-family="Helvetica,sans-Serif" font-size="10.00"># CBlockAudioIf &amp; operator</text>
<text text-anchor="start" x="181.5" y="-1173" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CBlockAudioIf &amp;c)</text>
<text text-anchor="middle" x="253.5" y="-1162" font-family="Helvetica,sans-Serif" font-size="10.00">}</text>
</a>
</g>
</g>
<!-- Node4&#45;&gt;Node2 -->
<g id="edge3" class="edge">
<title>Node4&#45;&gt;Node2</title>
<path fill="none" stroke="#404040" d="M319.53,-1154.66C327.03,-1132.4 334.77,-1110.18 342.5,-1089 372,-1008.17 406.73,-921.11 439.18,-842.61"/>
<polygon fill="none" stroke="#404040" points="439.36,-842.18 437.96,-835.11 443.96,-831.09 445.36,-838.17 439.36,-842.18"/>
<text text-anchor="middle" x="395" y="-1063" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCBlockAudio</text>
</g>
<!-- Node5 -->
<g id="node5" class="node">
<title>Node5</title>
<g id="a_node5"><a xlink:href="a00518.xhtml" target="_top" xlink:title="class for computation of a Novelty from a block of data (e.g., time or magnitude spectrum)">
<polygon fill="white" stroke="#666666" points="539.5,-1647 351.5,-1647 351.5,-1089 539.5,-1089 539.5,-1647"/>
<text text-anchor="middle" x="445.5" y="-1635" font-family="Helvetica,sans-Serif" font-size="10.00">{CNoveltyFromBlockIf</text>
<text text-anchor="start" x="359.5" y="-1624" font-family="Helvetica,sans-Serif" font-size="10.00">|# CNoveltyIf::Novelty</text>
<text text-anchor="start" x="359.5" y="-1613" font-family="Helvetica,sans-Serif" font-size="10.00">_t m_eNoveltyIdx</text>
<text text-anchor="start" x="359.5" y="-1602" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iDataLength</text>
<text text-anchor="start" x="359.5" y="-1591" font-family="Helvetica,sans-Serif" font-size="10.00"># float m_fSampleRate</text>
<text text-anchor="start" x="359.5" y="-1580" font-family="Helvetica,sans-Serif" font-size="10.00"># float * m_pfPrevSpec</text>
<text text-anchor="start" x="359.5" y="-1569" font-family="Helvetica,sans-Serif" font-size="10.00"># const std::map&lt; CNovelty</text>
<text text-anchor="start" x="359.5" y="-1558" font-family="Helvetica,sans-Serif" font-size="10.00">If::Novelty_t, std::function</text>
<text text-anchor="start" x="359.5" y="-1547" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; float(const float *, const</text>
<text text-anchor="start" x="359.5" y="-1536" font-family="Helvetica,sans-Serif" font-size="10.00"> float *, int, float)&gt; &gt; m_DispatchMap</text>
<text text-anchor="start" x="359.5" y="-1525" font-family="Helvetica,sans-Serif" font-size="10.00">|+ virtual int getNoveltyDimension</text>
<text text-anchor="start" x="359.5" y="-1514" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="359.5" y="-1503" font-family="Helvetica,sans-Serif" font-size="10.00">+ CNoveltyIf::Novelty</text>
<text text-anchor="start" x="359.5" y="-1492" font-family="Helvetica,sans-Serif" font-size="10.00">_t getNoveltyIdx() const</text>
<text text-anchor="start" x="359.5" y="-1481" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Error_t compNovelty</text>
<text text-anchor="start" x="359.5" y="-1470" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfNovelty, const</text>
<text text-anchor="start" x="359.5" y="-1459" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfIn)</text>
<text text-anchor="start" x="359.5" y="-1448" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="359.5" y="-1437" font-family="Helvetica,sans-Serif" font-size="10.00">(CNoveltyFromBlockIf</text>
<text text-anchor="start" x="359.5" y="-1426" font-family="Helvetica,sans-Serif" font-size="10.00"> *&amp;pCInstance, CNoveltyIf</text>
<text text-anchor="start" x="359.5" y="-1415" font-family="Helvetica,sans-Serif" font-size="10.00">::Novelty_t eNoveltyIdx,</text>
<text text-anchor="start" x="359.5" y="-1404" font-family="Helvetica,sans-Serif" font-size="10.00"> int iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="359.5" y="-1393" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="359.5" y="-1382" font-family="Helvetica,sans-Serif" font-size="10.00">(CNoveltyFromBlockIf *&amp;pCInstance)</text>
<text text-anchor="start" x="359.5" y="-1371" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compNovelty</text>
<text text-anchor="start" x="359.5" y="-1360" font-family="Helvetica,sans-Serif" font-size="10.00">Flux(const float *pfMagSpec,</text>
<text text-anchor="start" x="359.5" y="-1349" font-family="Helvetica,sans-Serif" font-size="10.00"> const float *pfPrevSpec,</text>
<text text-anchor="start" x="359.5" y="-1338" font-family="Helvetica,sans-Serif" font-size="10.00"> int iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="359.5" y="-1327" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compNovelty</text>
<text text-anchor="start" x="359.5" y="-1316" font-family="Helvetica,sans-Serif" font-size="10.00">Hainsworth(const float</text>
<text text-anchor="start" x="359.5" y="-1305" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfMagSpec, const float</text>
<text text-anchor="start" x="359.5" y="-1294" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfPrevSpec, int iDataLength,</text>
<text text-anchor="start" x="359.5" y="-1283" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate=1.F)</text>
<text text-anchor="start" x="359.5" y="-1272" font-family="Helvetica,sans-Serif" font-size="10.00">+ static float compNovelty</text>
<text text-anchor="start" x="359.5" y="-1261" font-family="Helvetica,sans-Serif" font-size="10.00">Laroche(const float *pfMagSpec,</text>
<text text-anchor="start" x="359.5" y="-1250" font-family="Helvetica,sans-Serif" font-size="10.00"> const float *pfPrevSpec, int</text>
<text text-anchor="start" x="359.5" y="-1239" font-family="Helvetica,sans-Serif" font-size="10.00"> iDataLength, float fSampleRate=1.F)</text>
<text text-anchor="start" x="359.5" y="-1228" font-family="Helvetica,sans-Serif" font-size="10.00"># &#160;CNoveltyFromBlockIf()</text>
<text text-anchor="start" x="359.5" y="-1217" font-family="Helvetica,sans-Serif" font-size="10.00"># &#160;CNoveltyFromBlockIf</text>
<text text-anchor="start" x="359.5" y="-1206" font-family="Helvetica,sans-Serif" font-size="10.00">(CNoveltyIf::Novelty</text>
<text text-anchor="start" x="359.5" y="-1195" font-family="Helvetica,sans-Serif" font-size="10.00">_t eNoveltyIdx, int iDataLength,</text>
<text text-anchor="start" x="359.5" y="-1184" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate)</text>
<text text-anchor="start" x="359.5" y="-1173" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CNoveltyFromBlockIf()</text>
<text text-anchor="start" x="359.5" y="-1162" font-family="Helvetica,sans-Serif" font-size="10.00"># &#160;CNoveltyFromBlockIf</text>
<text text-anchor="start" x="359.5" y="-1151" font-family="Helvetica,sans-Serif" font-size="10.00">(const CNoveltyFromBlockIf</text>
<text text-anchor="start" x="359.5" y="-1140" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;that)</text>
<text text-anchor="start" x="359.5" y="-1129" font-family="Helvetica,sans-Serif" font-size="10.00"># CNoveltyFromBlockIf</text>
<text text-anchor="start" x="359.5" y="-1118" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp; operator=(const CNovelty</text>
<text text-anchor="start" x="359.5" y="-1107" font-family="Helvetica,sans-Serif" font-size="10.00">FromBlockIf &amp;c)</text>
<text text-anchor="middle" x="445.5" y="-1096" font-family="Helvetica,sans-Serif" font-size="10.00">}</text>
</a>
</g>
</g>
<!-- Node5&#45;&gt;Node2 -->
<g id="edge4" class="edge">
<title>Node5&#45;&gt;Node2</title>
<path fill="none" stroke="#404040" d="M482.29,-1088.79C491.55,-1018.69 501.52,-943.34 510.83,-872.91"/>
<polygon fill="none" stroke="#404040" points="510.86,-872.64 507.69,-866.16 512.44,-860.74 515.62,-867.21 510.86,-872.64"/>
<text text-anchor="middle" x="519" y="-1063" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCNovelty</text>
</g>
<!-- Node6 -->
<g id="node6" class="node">
<title>Node6</title>
<g id="a_node6"><a xlink:href="a00474.xhtml" target="_top" xlink:title="class for FFT computation with windowing">
<polygon fill="white" stroke="#666666" points="745.5,-1608.5 557.5,-1608.5 557.5,-1127.5 745.5,-1127.5 745.5,-1608.5"/>
<text text-anchor="middle" x="651.5" y="-1596.5" font-family="Helvetica,sans-Serif" font-size="10.00">{CFft</text>
<text text-anchor="start" x="565.5" y="-1585.5" font-family="Helvetica,sans-Serif" font-size="10.00">|&#45; float * m_pfProcBuff</text>
<text text-anchor="start" x="565.5" y="-1574.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_pfWindowBuff</text>
<text text-anchor="start" x="565.5" y="-1563.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iDataLength</text>
<text text-anchor="start" x="565.5" y="-1552.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iFftLength</text>
<text text-anchor="start" x="565.5" y="-1541.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Windowing_t m_ePrePostWindowOpt</text>
<text text-anchor="start" x="565.5" y="-1530.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; bool m_bIsInitialized</text>
<text text-anchor="start" x="565.5" y="-1519.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; static const float m_Pi</text>
<text text-anchor="start" x="565.5" y="-1508.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; static const float</text>
<text text-anchor="start" x="565.5" y="-1497.5" font-family="Helvetica,sans-Serif" font-size="10.00"> m_Pi2</text>
<text text-anchor="start" x="565.5" y="-1486.5" font-family="Helvetica,sans-Serif" font-size="10.00">|+ &#160;CFft()</text>
<text text-anchor="start" x="565.5" y="-1475.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CFft()</text>
<text text-anchor="start" x="565.5" y="-1464.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t init(int iBlockLength,</text>
<text text-anchor="start" x="565.5" y="-1453.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iZeroPadFactor=1, WindowFunction</text>
<text text-anchor="start" x="565.5" y="-1442.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t eWindow=kWindowHann, Windowing</text>
<text text-anchor="start" x="565.5" y="-1431.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t eWindowing=kPreWindow)</text>
<text text-anchor="start" x="565.5" y="-1420.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t reset()</text>
<text text-anchor="start" x="565.5" y="-1409.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t overrideWindow</text>
<text text-anchor="start" x="565.5" y="-1398.5" font-family="Helvetica,sans-Serif" font-size="10.00">(const float *pfNewWindow)</text>
<text text-anchor="start" x="565.5" y="-1387.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getWindow(float</text>
<text text-anchor="start" x="565.5" y="-1376.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfWindow) const</text>
<text text-anchor="start" x="565.5" y="-1365.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compFft(complex</text>
<text text-anchor="start" x="565.5" y="-1354.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t *pfSpectrum, const</text>
<text text-anchor="start" x="565.5" y="-1343.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfIn)</text>
<text text-anchor="start" x="565.5" y="-1332.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compInvFft</text>
<text text-anchor="start" x="565.5" y="-1321.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfOut, const</text>
<text text-anchor="start" x="565.5" y="-1310.5" font-family="Helvetica,sans-Serif" font-size="10.00"> complex_t *pfSpectrum)</text>
<text text-anchor="start" x="565.5" y="-1299.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getMagnitude</text>
<text text-anchor="start" x="565.5" y="-1288.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfMag, const</text>
<text text-anchor="start" x="565.5" y="-1277.5" font-family="Helvetica,sans-Serif" font-size="10.00"> complex_t *pfSpectrum)</text>
<text text-anchor="start" x="565.5" y="-1266.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const</text>
<text text-anchor="start" x="565.5" y="-1255.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getPhase(float</text>
<text text-anchor="start" x="565.5" y="-1244.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfPhase, const complex</text>
<text text-anchor="start" x="565.5" y="-1233.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t *pfSpectrum) const</text>
<text text-anchor="start" x="565.5" y="-1222.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 7 more...</text>
<text text-anchor="start" x="565.5" y="-1211.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; &#160;CFft(const CFft &amp;that)</text>
<text text-anchor="start" x="565.5" y="-1200.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CFft &amp; operator=(const</text>
<text text-anchor="start" x="565.5" y="-1189.5" font-family="Helvetica,sans-Serif" font-size="10.00"> CFft &amp;c)</text>
<text text-anchor="start" x="565.5" y="-1178.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Error_t allocMemory_()</text>
<text text-anchor="start" x="565.5" y="-1167.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Error_t freeMemory_()</text>
<text text-anchor="start" x="565.5" y="-1156.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Error_t computeWindow</text>
<text text-anchor="start" x="565.5" y="-1145.5" font-family="Helvetica,sans-Serif" font-size="10.00">_(WindowFunction_t eWindow)</text>
<text text-anchor="middle" x="651.5" y="-1134.5" font-family="Helvetica,sans-Serif" font-size="10.00">}</text>
</a>
</g>
</g>
<!-- Node6&#45;&gt;Node2 -->
<g id="edge5" class="edge">
<title>Node6&#45;&gt;Node2</title>
<path fill="none" stroke="#404040" d="M619.83,-1127.45C609.18,-1046.92 597.2,-956.31 586.14,-872.66"/>
<polygon fill="none" stroke="#404040" points="586.12,-872.53 581.37,-867.11 584.55,-860.64 589.3,-866.06 586.12,-872.53"/>
<text text-anchor="middle" x="635.5" y="-1063" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCFft</text>
</g>
<!-- Node7 -->
<g id="node7" class="node">
<title>Node7</title>
<g id="a_node7"><a xlink:href="a00586.xhtml" target="_top" xlink:title="class for moving average low pass filtering">
<polygon fill="white" stroke="#666666" points="923,-1520.5 764,-1520.5 764,-1215.5 923,-1215.5 923,-1520.5"/>
<text text-anchor="middle" x="843.5" y="-1508.5" font-family="Helvetica,sans-Serif" font-size="10.00">{CMovingAverage</text>
<text text-anchor="start" x="772" y="-1497.5" font-family="Helvetica,sans-Serif" font-size="10.00">|&#45; float m_fPrevOut</text>
<text text-anchor="start" x="772" y="-1486.5" font-family="Helvetica,sans-Serif" font-size="10.00">|+ Error_t setFilterParam</text>
<text text-anchor="start" x="772" y="-1475.5" font-family="Helvetica,sans-Serif" font-size="10.00">(int iFilterLength=64)</text>
<text text-anchor="start" x="772" y="-1464.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ int getFilterParam</text>
<text text-anchor="start" x="772" y="-1453.5" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="772" y="-1442.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t process(float</text>
<text text-anchor="start" x="772" y="-1431.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfOut, const float</text>
<text text-anchor="start" x="772" y="-1420.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfIn, long long iLenBuff)</text>
<text text-anchor="start" x="772" y="-1409.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t reset()</text>
<text text-anchor="start" x="772" y="-1398.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void filtfilt(float</text>
<text text-anchor="start" x="772" y="-1387.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfOut, const float</text>
<text text-anchor="start" x="772" y="-1376.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfIn, long long iLenBuff)</text>
<text text-anchor="start" x="772" y="-1365.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="772" y="-1354.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CMovingAverage *&amp;pCInstance)</text>
<text text-anchor="start" x="772" y="-1343.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="772" y="-1332.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CMovingAverage *&amp;pCInstance)</text>
<text text-anchor="start" x="772" y="-1321.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static int calcFilterLength</text>
<text text-anchor="start" x="772" y="-1310.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float fIntegrationTimeInS,</text>
<text text-anchor="start" x="772" y="-1299.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate)</text>
<text text-anchor="start" x="772" y="-1288.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; &#160;CMovingAverage()</text>
<text text-anchor="start" x="772" y="-1277.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; virtual ~CMovingAverage()</text>
<text text-anchor="start" x="772" y="-1266.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; &#160;CMovingAverage(const</text>
<text text-anchor="start" x="772" y="-1255.5" font-family="Helvetica,sans-Serif" font-size="10.00"> CMovingAverage &amp;that)</text>
<text text-anchor="start" x="772" y="-1244.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CMovingAverage &amp; operator</text>
<text text-anchor="start" x="772" y="-1233.5" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CMovingAverage &amp;c)</text>
<text text-anchor="middle" x="843.5" y="-1222.5" font-family="Helvetica,sans-Serif" font-size="10.00">}</text>
</a>
</g>
</g>
<!-- Node7&#45;&gt;Node2 -->
<g id="edge6" class="edge">
<title>Node7&#45;&gt;Node2</title>
<path fill="none" stroke="#404040" d="M797.42,-1215.48C784.22,-1174.23 769.36,-1129.7 754.5,-1089 725,-1008.17 690.27,-921.11 657.82,-842.61"/>
<polygon fill="none" stroke="#404040" points="657.64,-842.18 651.64,-838.17 653.04,-831.09 659.04,-835.11 657.64,-842.18"/>
<text text-anchor="middle" x="778" y="-1063" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCLpFilter</text>
</g>
<!-- Node8 -->
<g id="node8" class="node">
<title>Node8</title>
<g id="a_node8"><a xlink:href="a00490.xhtml" target="_top" xlink:title=" ">
<polygon fill="white" stroke="#666666" points="910,-2054 777,-2054 777,-1694 910,-1694 910,-2054"/>
<text text-anchor="middle" x="843.5" y="-2042" font-family="Helvetica,sans-Serif" font-size="10.00">{CRingBuffer&lt; float &gt;</text>
<text text-anchor="start" x="785" y="-2031" font-family="Helvetica,sans-Serif" font-size="10.00">|&#45; int m_iBuffLength</text>
<text text-anchor="start" x="785" y="-2020" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iReadIdx</text>
<text text-anchor="start" x="785" y="-2009" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iWriteIdx</text>
<text text-anchor="start" x="785" y="-1998" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_ptBuff</text>
<text text-anchor="start" x="785" y="-1987" font-family="Helvetica,sans-Serif" font-size="10.00">|+ &#160;CRingBuffer(int iBuffer</text>
<text text-anchor="start" x="785" y="-1976" font-family="Helvetica,sans-Serif" font-size="10.00">LengthInSamples)</text>
<text text-anchor="start" x="785" y="-1965" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CRingBuffer()</text>
<text text-anchor="start" x="785" y="-1954" font-family="Helvetica,sans-Serif" font-size="10.00">+ void putPostInc(float</text>
<text text-anchor="start" x="785" y="-1943" font-family="Helvetica,sans-Serif" font-size="10.00"> tNewValue)</text>
<text text-anchor="start" x="785" y="-1932" font-family="Helvetica,sans-Serif" font-size="10.00">+ void putPostInc(const</text>
<text text-anchor="start" x="785" y="-1921" font-family="Helvetica,sans-Serif" font-size="10.00"> float *ptNewBuff, int</text>
<text text-anchor="start" x="785" y="-1910" font-family="Helvetica,sans-Serif" font-size="10.00"> iLength)</text>
<text text-anchor="start" x="785" y="-1899" font-family="Helvetica,sans-Serif" font-size="10.00">+ void put(float tNewValue)</text>
<text text-anchor="start" x="785" y="-1888" font-family="Helvetica,sans-Serif" font-size="10.00">+ void put(const float</text>
<text text-anchor="start" x="785" y="-1877" font-family="Helvetica,sans-Serif" font-size="10.00"> *ptNewBuff, int iLength)</text>
<text text-anchor="start" x="785" y="-1866" font-family="Helvetica,sans-Serif" font-size="10.00">+ float getPostInc()</text>
<text text-anchor="start" x="785" y="-1855" font-family="Helvetica,sans-Serif" font-size="10.00">+ void getPostInc(float</text>
<text text-anchor="start" x="785" y="-1844" font-family="Helvetica,sans-Serif" font-size="10.00"> *ptBuff, int iLength)</text>
<text text-anchor="start" x="785" y="-1833" font-family="Helvetica,sans-Serif" font-size="10.00">+ float get(float fOffset</text>
<text text-anchor="start" x="785" y="-1822" font-family="Helvetica,sans-Serif" font-size="10.00">=0) const</text>
<text text-anchor="start" x="785" y="-1811" font-family="Helvetica,sans-Serif" font-size="10.00">+ void get(float *ptBuff,</text>
<text text-anchor="start" x="785" y="-1800" font-family="Helvetica,sans-Serif" font-size="10.00"> int iLength) const</text>
<text text-anchor="start" x="785" y="-1789" font-family="Helvetica,sans-Serif" font-size="10.00">and 7 more...</text>
<text text-anchor="start" x="785" y="-1778" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; &#160;CRingBuffer()</text>
<text text-anchor="start" x="785" y="-1767" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; &#160;CRingBuffer(const</text>
<text text-anchor="start" x="785" y="-1756" font-family="Helvetica,sans-Serif" font-size="10.00"> CRingBuffer &amp;that)</text>
<text text-anchor="start" x="785" y="-1745" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CRingBuffer &amp; operator</text>
<text text-anchor="start" x="785" y="-1734" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CRingBuffer &amp;c)</text>
<text text-anchor="start" x="785" y="-1723" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; void incIdx(int &amp;iIdx,</text>
<text text-anchor="start" x="785" y="-1712" font-family="Helvetica,sans-Serif" font-size="10.00"> int iOffset=1)</text>
<text text-anchor="middle" x="843.5" y="-1701" font-family="Helvetica,sans-Serif" font-size="10.00">}</text>
</a>
</g>
</g>
<!-- Node8&#45;&gt;Node7 -->
<g id="edge7" class="edge">
<title>Node8&#45;&gt;Node7</title>
<path fill="none" stroke="#404040" d="M843.5,-1693.89C843.5,-1641.5 843.5,-1584.52 843.5,-1533.11"/>
<polygon fill="none" stroke="#404040" points="843.5,-1532.86 839.5,-1526.86 843.5,-1520.86 847.5,-1526.86 843.5,-1532.86"/>
<text text-anchor="middle" x="877.5" y="-1668" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;m_pCRingBuff</text>
</g>
<!-- Node9 -->
<g id="node9" class="node">
<title>Node9</title>
<g id="a_node9"><a xlink:href="a00490.xhtml" target="_top" xlink:title="implement a circular buffer of type T">
<polygon fill="white" stroke="#666666" points="921,-2439 766,-2439 766,-2101 921,-2101 921,-2439"/>
<text text-anchor="middle" x="843.5" y="-2427" font-family="Helvetica,sans-Serif" font-size="10.00">{CRingBuffer&lt; T &gt;</text>
<text text-anchor="start" x="774" y="-2416" font-family="Helvetica,sans-Serif" font-size="10.00">|&#45; int m_iBuffLength</text>
<text text-anchor="start" x="774" y="-2405" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iReadIdx</text>
<text text-anchor="start" x="774" y="-2394" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iWriteIdx</text>
<text text-anchor="start" x="774" y="-2383" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; T * m_ptBuff</text>
<text text-anchor="start" x="774" y="-2372" font-family="Helvetica,sans-Serif" font-size="10.00">|+ &#160;CRingBuffer(int iBuffer</text>
<text text-anchor="start" x="774" y="-2361" font-family="Helvetica,sans-Serif" font-size="10.00">LengthInSamples)</text>
<text text-anchor="start" x="774" y="-2350" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CRingBuffer()</text>
<text text-anchor="start" x="774" y="-2339" font-family="Helvetica,sans-Serif" font-size="10.00">+ void putPostInc(T tNewValue)</text>
<text text-anchor="start" x="774" y="-2328" font-family="Helvetica,sans-Serif" font-size="10.00">+ void putPostInc(const</text>
<text text-anchor="start" x="774" y="-2317" font-family="Helvetica,sans-Serif" font-size="10.00"> T *ptNewBuff, int iLength)</text>
<text text-anchor="start" x="774" y="-2306" font-family="Helvetica,sans-Serif" font-size="10.00">+ void put(T tNewValue)</text>
<text text-anchor="start" x="774" y="-2295" font-family="Helvetica,sans-Serif" font-size="10.00">+ void put(const T *ptNewBuff,</text>
<text text-anchor="start" x="774" y="-2284" font-family="Helvetica,sans-Serif" font-size="10.00"> int iLength)</text>
<text text-anchor="start" x="774" y="-2273" font-family="Helvetica,sans-Serif" font-size="10.00">+ T getPostInc()</text>
<text text-anchor="start" x="774" y="-2262" font-family="Helvetica,sans-Serif" font-size="10.00">+ void getPostInc(T *ptBuff,</text>
<text text-anchor="start" x="774" y="-2251" font-family="Helvetica,sans-Serif" font-size="10.00"> int iLength)</text>
<text text-anchor="start" x="774" y="-2240" font-family="Helvetica,sans-Serif" font-size="10.00">+ T get(float fOffset</text>
<text text-anchor="start" x="774" y="-2229" font-family="Helvetica,sans-Serif" font-size="10.00">=0) const</text>
<text text-anchor="start" x="774" y="-2218" font-family="Helvetica,sans-Serif" font-size="10.00">+ void get(T *ptBuff,</text>
<text text-anchor="start" x="774" y="-2207" font-family="Helvetica,sans-Serif" font-size="10.00"> int iLength) const</text>
<text text-anchor="start" x="774" y="-2196" font-family="Helvetica,sans-Serif" font-size="10.00">and 7 more...</text>
<text text-anchor="start" x="774" y="-2185" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; &#160;CRingBuffer()</text>
<text text-anchor="start" x="774" y="-2174" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; &#160;CRingBuffer(const</text>
<text text-anchor="start" x="774" y="-2163" font-family="Helvetica,sans-Serif" font-size="10.00"> CRingBuffer &amp;that)</text>
<text text-anchor="start" x="774" y="-2152" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CRingBuffer &amp; operator</text>
<text text-anchor="start" x="774" y="-2141" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CRingBuffer &amp;c)</text>
<text text-anchor="start" x="774" y="-2130" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; void incIdx(int &amp;iIdx,</text>
<text text-anchor="start" x="774" y="-2119" font-family="Helvetica,sans-Serif" font-size="10.00"> int iOffset=1)</text>
<text text-anchor="middle" x="843.5" y="-2108" font-family="Helvetica,sans-Serif" font-size="10.00">}</text>
</a>
</g>
</g>
<!-- Node9&#45;&gt;Node8 -->
<g id="edge8" class="edge">
<title>Node9&#45;&gt;Node8</title>
<path fill="none" stroke="orange" d="M843.5,-2090.65C843.5,-2078.57 843.5,-2066.4 843.5,-2054.32"/>
<polygon fill="orange" stroke="orange" points="840,-2090.77 843.5,-2100.77 847,-2090.77 840,-2090.77"/>
<text text-anchor="middle" x="862" y="-2075" font-family="Helvetica,sans-Serif" font-size="10.00"> &lt; float &gt;</text>
</g>
<!-- Node10 -->
<g id="node10" class="node">
<title>Node10</title>
<g id="a_node10"><a xlink:href="a00442.xhtml" target="_top" xlink:title="open, read, and write audio files">
<polygon fill="white" stroke="#666666" points="964.5,-1042 802.5,-1042 802.5,-132 964.5,-132 964.5,-1042"/>
<text text-anchor="middle" x="883.5" y="-1030" font-family="Helvetica,sans-Serif" font-size="10.00">{CAudioFileIf</text>
<text text-anchor="start" x="810.5" y="-1019" font-family="Helvetica,sans-Serif" font-size="10.00">|# static const long long</text>
<text text-anchor="start" x="810.5" y="-1008" font-family="Helvetica,sans-Serif" font-size="10.00"> int m_kiDefBlockLength</text>
<text text-anchor="start" x="810.5" y="-997" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; FileIoType_t m_eIoType</text>
<text text-anchor="start" x="810.5" y="-986" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; bool m_bWithClipping</text>
<text text-anchor="start" x="810.5" y="-975" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; bool m_bIsInitialized</text>
<text text-anchor="start" x="810.5" y="-964" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iNumBytesPerSample</text>
<text text-anchor="start" x="810.5" y="-953" font-family="Helvetica,sans-Serif" font-size="10.00">|+ virtual Error_t reset</text>
<text text-anchor="start" x="810.5" y="-942" font-family="Helvetica,sans-Serif" font-size="10.00">(bool bFreeMemory=false)</text>
<text text-anchor="start" x="810.5" y="-931" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Error_t openFile</text>
<text text-anchor="start" x="810.5" y="-920" font-family="Helvetica,sans-Serif" font-size="10.00">(std::string cAudioFileName,</text>
<text text-anchor="start" x="810.5" y="-909" font-family="Helvetica,sans-Serif" font-size="10.00"> FileIoType_t eIoType, FileSpec</text>
<text text-anchor="start" x="810.5" y="-898" font-family="Helvetica,sans-Serif" font-size="10.00">_t const *psFileSpec=0)=0</text>
<text text-anchor="start" x="810.5" y="-887" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Error_t closeFile()=0</text>
<text text-anchor="start" x="810.5" y="-876" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Error_t readData</text>
<text text-anchor="start" x="810.5" y="-865" font-family="Helvetica,sans-Serif" font-size="10.00">(float **ppfAudioData,</text>
<text text-anchor="start" x="810.5" y="-854" font-family="Helvetica,sans-Serif" font-size="10.00"> long long int &amp;iNumFrames)</text>
<text text-anchor="start" x="810.5" y="-843" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Error_t writeData</text>
<text text-anchor="start" x="810.5" y="-832" font-family="Helvetica,sans-Serif" font-size="10.00">(const float *const *const</text>
<text text-anchor="start" x="810.5" y="-821" font-family="Helvetica,sans-Serif" font-size="10.00"> ppfAudioData, long long int</text>
<text text-anchor="start" x="810.5" y="-810" font-family="Helvetica,sans-Serif" font-size="10.00"> iNumFrames)</text>
<text text-anchor="start" x="810.5" y="-799" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getFileSpec</text>
<text text-anchor="start" x="810.5" y="-788" font-family="Helvetica,sans-Serif" font-size="10.00">(FileSpec_t &amp;sFileSpec)</text>
<text text-anchor="start" x="810.5" y="-777" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Error_t setPosition</text>
<text text-anchor="start" x="810.5" y="-766" font-family="Helvetica,sans-Serif" font-size="10.00">(long long iFrame=0)</text>
<text text-anchor="start" x="810.5" y="-755" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t setPosition</text>
<text text-anchor="start" x="810.5" y="-744" font-family="Helvetica,sans-Serif" font-size="10.00">(double dTimeInS=.0)</text>
<text text-anchor="start" x="810.5" y="-733" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t setClippingEnabled</text>
<text text-anchor="start" x="810.5" y="-722" font-family="Helvetica,sans-Serif" font-size="10.00">(bool bisEnabled=true)</text>
<text text-anchor="start" x="810.5" y="-711" font-family="Helvetica,sans-Serif" font-size="10.00">+ bool isClippingEnabled()</text>
<text text-anchor="start" x="810.5" y="-700" font-family="Helvetica,sans-Serif" font-size="10.00">and 7 more...</text>
<text text-anchor="start" x="810.5" y="-689" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="810.5" y="-678" font-family="Helvetica,sans-Serif" font-size="10.00">(CAudioFileIf *&amp;pCInstance)</text>
<text text-anchor="start" x="810.5" y="-667" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="810.5" y="-656" font-family="Helvetica,sans-Serif" font-size="10.00">(CAudioFileIf *&amp;pCInstance)</text>
<text text-anchor="start" x="810.5" y="-645" font-family="Helvetica,sans-Serif" font-size="10.00"># &#160;CAudioFileIf()</text>
<text text-anchor="start" x="810.5" y="-634" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CAudioFileIf()</text>
<text text-anchor="start" x="810.5" y="-623" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual Error_t freeMemory_()</text>
<text text-anchor="start" x="810.5" y="-612" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual Error_t allocMemory_()</text>
<text text-anchor="start" x="810.5" y="-601" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t setInitialized</text>
<text text-anchor="start" x="810.5" y="-590" font-family="Helvetica,sans-Serif" font-size="10.00">_(bool bInitialized=true)</text>
<text text-anchor="start" x="810.5" y="-579" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t setIoType_</text>
<text text-anchor="start" x="810.5" y="-568" font-family="Helvetica,sans-Serif" font-size="10.00">(FileIoType_t eIoType)</text>
<text text-anchor="start" x="810.5" y="-557" font-family="Helvetica,sans-Serif" font-size="10.00"># FileIoType_t getIoType</text>
<text text-anchor="start" x="810.5" y="-546" font-family="Helvetica,sans-Serif" font-size="10.00">_() const</text>
<text text-anchor="start" x="810.5" y="-535" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t setFileSpec</text>
<text text-anchor="start" x="810.5" y="-524" font-family="Helvetica,sans-Serif" font-size="10.00">_(const FileSpec_t *pFileSpec)</text>
<text text-anchor="start" x="810.5" y="-513" font-family="Helvetica,sans-Serif" font-size="10.00"># int getNumChannels</text>
<text text-anchor="start" x="810.5" y="-502" font-family="Helvetica,sans-Serif" font-size="10.00">_() const</text>
<text text-anchor="start" x="810.5" y="-491" font-family="Helvetica,sans-Serif" font-size="10.00"># long long convFrames2Bytes</text>
<text text-anchor="start" x="810.5" y="-480" font-family="Helvetica,sans-Serif" font-size="10.00">_(long long iNumFrames)</text>
<text text-anchor="start" x="810.5" y="-469" font-family="Helvetica,sans-Serif" font-size="10.00"># long long convBytes2Frames</text>
<text text-anchor="start" x="810.5" y="-458" font-family="Helvetica,sans-Serif" font-size="10.00">_(long long iNumFrames)</text>
<text text-anchor="start" x="810.5" y="-447" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t setNumBytesPerSample</text>
<text text-anchor="start" x="810.5" y="-436" font-family="Helvetica,sans-Serif" font-size="10.00">_(int iNumBytes)</text>
<text text-anchor="start" x="810.5" y="-425" font-family="Helvetica,sans-Serif" font-size="10.00"># int getNumBytesPerSample</text>
<text text-anchor="start" x="810.5" y="-414" font-family="Helvetica,sans-Serif" font-size="10.00">_() const</text>
<text text-anchor="start" x="810.5" y="-403" font-family="Helvetica,sans-Serif" font-size="10.00"># int getNumBitsPerSample</text>
<text text-anchor="start" x="810.5" y="-392" font-family="Helvetica,sans-Serif" font-size="10.00">_() const</text>
<text text-anchor="start" x="810.5" y="-381" font-family="Helvetica,sans-Serif" font-size="10.00"># float clip2Range_(float</text>
<text text-anchor="start" x="810.5" y="-370" font-family="Helvetica,sans-Serif" font-size="10.00"> fSample2Clip, float fMin,</text>
<text text-anchor="start" x="810.5" y="-359" font-family="Helvetica,sans-Serif" font-size="10.00"> float fMax)</text>
<text text-anchor="start" x="810.5" y="-348" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; &#160;CAudioFileIf(const</text>
<text text-anchor="start" x="810.5" y="-337" font-family="Helvetica,sans-Serif" font-size="10.00"> CAudioFileIf &amp;that)</text>
<text text-anchor="start" x="810.5" y="-326" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CAudioFileIf &amp; operator</text>
<text text-anchor="start" x="810.5" y="-315" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CAudioFileIf &amp;c)</text>
<text text-anchor="start" x="810.5" y="-304" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; virtual Error_t initDefaults_()</text>
<text text-anchor="start" x="810.5" y="-293" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; virtual long long int</text>
<text text-anchor="start" x="810.5" y="-282" font-family="Helvetica,sans-Serif" font-size="10.00"> readDataIntern_(float</text>
<text text-anchor="start" x="810.5" y="-271" font-family="Helvetica,sans-Serif" font-size="10.00"> **ppfAudioData, long long</text>
<text text-anchor="start" x="810.5" y="-260" font-family="Helvetica,sans-Serif" font-size="10.00"> int iLength)=0</text>
<text text-anchor="start" x="810.5" y="-249" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; virtual long long int</text>
<text text-anchor="start" x="810.5" y="-238" font-family="Helvetica,sans-Serif" font-size="10.00"> writeDataIntern_(const</text>
<text text-anchor="start" x="810.5" y="-227" font-family="Helvetica,sans-Serif" font-size="10.00"> float *const *const ppfAudioData,</text>
<text text-anchor="start" x="810.5" y="-216" font-family="Helvetica,sans-Serif" font-size="10.00"> long long int iLength)=0</text>
<text text-anchor="start" x="810.5" y="-205" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; virtual long long getLength</text>
<text text-anchor="start" x="810.5" y="-194" font-family="Helvetica,sans-Serif" font-size="10.00">Intern_()=0</text>
<text text-anchor="start" x="810.5" y="-183" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; virtual long long getPosition</text>
<text text-anchor="start" x="810.5" y="-172" font-family="Helvetica,sans-Serif" font-size="10.00">Intern_()=0</text>
<text text-anchor="start" x="810.5" y="-161" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; virtual Error_t setPosition</text>
<text text-anchor="start" x="810.5" y="-150" font-family="Helvetica,sans-Serif" font-size="10.00">Intern_(long long iFrame)=0</text>
<text text-anchor="middle" x="883.5" y="-139" font-family="Helvetica,sans-Serif" font-size="10.00">}</text>
</a>
</g>
</g>
<!-- Node10&#45;&gt;Node1 -->
<g id="edge9" class="edge">
<title>Node10&#45;&gt;Node1</title>
<path fill="none" stroke="#404040" d="M802.48,-398.16C756.45,-291.44 702.18,-165.64 672.23,-96.21"/>
<polygon fill="none" stroke="#404040" points="672.22,-96.17 666.17,-92.24 667.46,-85.15 673.51,-89.07 672.22,-96.17"/>
<text text-anchor="middle" x="714.5" y="-106" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;m_pCAudioFile</text>
</g>
<!-- Node11 -->
<g id="node11" class="node">
<title>Node11</title>
<g id="a_node11"><a xlink:href="a00446.xhtml" target="_top" xlink:title="structure containing basic data specs of the file">
<polygon fill="white" stroke="#666666" points="1090,-1405 941,-1405 941,-1331 1090,-1331 1090,-1405"/>
<text text-anchor="middle" x="1015.5" y="-1393" font-family="Helvetica,sans-Serif" font-size="10.00">{CAudioFileIf::FileSpec_t</text>
<text text-anchor="start" x="949" y="-1382" font-family="Helvetica,sans-Serif" font-size="10.00">|+ FileFormat_t eFormat</text>
<text text-anchor="start" x="949" y="-1371" font-family="Helvetica,sans-Serif" font-size="10.00">+ BitStream_t eBitStreamType</text>
<text text-anchor="start" x="949" y="-1360" font-family="Helvetica,sans-Serif" font-size="10.00">+ int iNumChannels</text>
<text text-anchor="start" x="949" y="-1349" font-family="Helvetica,sans-Serif" font-size="10.00">+ float fSampleRateInHz</text>
<text text-anchor="middle" x="1015.5" y="-1338" font-family="Helvetica,sans-Serif" font-size="10.00">|}</text>
</a>
</g>
</g>
<!-- Node11&#45;&gt;Node10 -->
<g id="edge10" class="edge">
<title>Node11&#45;&gt;Node10</title>
<path fill="none" stroke="#404040" d="M1009.4,-1330.99C1000.33,-1277.47 982.23,-1170.67 962.52,-1054.35"/>
<polygon fill="none" stroke="#404040" points="962.49,-1054.17 957.55,-1048.92 960.49,-1042.34 965.43,-1047.59 962.49,-1054.17"/>
<text text-anchor="middle" x="1002.5" y="-1063" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;m_CurrFileSpec</text>
</g>
</g>
</svg>
