<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 4.0.0 (20220602.1335)
 -->
<!-- Title: CPitchTimeAuditory Pages: 1 -->
<!--zoomable 2549 -->
<svg id="main" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" onload="init(evt)">
<style type="text/css"><![CDATA[
.edge:hover path { stroke: red; }
.edge:hover polygon { stroke: red; fill: red; }
]]></style>
<script type="text/javascript"><![CDATA[
var edges = document.getElementsByTagName('g');
if (edges && edges.length) {
  for (var i=0;i<edges.length;i++) {
    if (edges[i].id.substr(0,4)=='edge') {
      edges[i].setAttribute('class','edge');
    }
  }
}
]]></script>
        <defs>
                <circle id="rim" cx="0" cy="0" r="7"/>
                <circle id="rim2" cx="0" cy="0" r="3.5"/>
                <g id="zoomPlus">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomplus.mouseover" end="zoomplus.mouseout"/>
                        </use>
                        <path d="M-4,0h8M0,-4v8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="zoomMin">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomminus.mouseover" end="zoomminus.mouseout"/>
                        </use>
                        <path d="M-4,0h8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="dirArrow">
                        <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
               <g id="resetDef">
                       <use xlink:href="#rim2" fill="#404040">
                               <set attributeName="fill" to="#808080" begin="reset.mouseover" end="reset.mouseout"/>
                       </use>
               </g>
        </defs>

<script type="text/javascript">
var viewWidth = 795;
var viewHeight = 2549;
var sectionId = 'dynsection-1';
</script>
<script xlink:href="svgpan.js"/>
<svg id="graph" class="graph">
<g id="viewport">
<title>CPitchTimeAuditory</title>
<polygon fill="white" stroke="transparent" points="-4,4 -4,-2545 791,-2545 791,4 -4,4"/>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title=" ">
<polygon fill="#bfbfbf" stroke="black" points="288.5,-0.5 288.5,-299.5 443.5,-299.5 443.5,-0.5 288.5,-0.5"/>
<text text-anchor="middle" x="366" y="-287.5" font-family="Helvetica,sans-Serif" font-size="10.00">CPitchTimeAuditory</text>
<polyline fill="none" stroke="black" points="288.5,-280.5 443.5,-280.5 "/>
<text text-anchor="start" x="296.5" y="-268.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_pfAcf</text>
<text text-anchor="start" x="296.5" y="-257.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_pfSumAcf</text>
<text text-anchor="start" x="296.5" y="-246.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float ** m_ppfProcBuff</text>
<text text-anchor="start" x="296.5" y="-235.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float m_fMax</text>
<text text-anchor="start" x="296.5" y="-224.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; const float m_fSmoothLpCutoff</text>
<text text-anchor="start" x="296.5" y="-213.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; const float m_fMinThresh</text>
<text text-anchor="start" x="296.5" y="-202.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; static const int m</text>
<text text-anchor="start" x="296.5" y="-191.5" font-family="Helvetica,sans-Serif" font-size="10.00">_iNumBands</text>
<polyline fill="none" stroke="black" points="288.5,-184.5 443.5,-184.5 "/>
<text text-anchor="start" x="296.5" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CPitchTimeAuditory</text>
<text text-anchor="start" x="296.5" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CPitchIf::PitchExtractors</text>
<text text-anchor="start" x="296.5" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t ePitchIdx, int iDataLength,</text>
<text text-anchor="start" x="296.5" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate)</text>
<text text-anchor="start" x="296.5" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CPitchTimeAuditory()</text>
<text text-anchor="start" x="296.5" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ float compF0(const</text>
<text text-anchor="start" x="296.5" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfInput) override</text>
<text text-anchor="start" x="296.5" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CPitchTimeAuditory()</text>
<text text-anchor="start" x="296.5" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CPitchTimeAuditory</text>
<text text-anchor="start" x="296.5" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00">(const CPitchTimeAuditory</text>
<text text-anchor="start" x="296.5" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;that)</text>
<text text-anchor="start" x="296.5" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CPitchTimeAuditory</text>
<text text-anchor="start" x="296.5" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp; operator=(const CPitchTime</text>
<text text-anchor="start" x="296.5" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">Auditory &amp;c)</text>
<text text-anchor="start" x="296.5" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int getAcfMax_(const</text>
<text text-anchor="start" x="296.5" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfInput)</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="a00519.xhtml" target="_top" xlink:title="class for computation of a Pitch from a block of data (e.g., time or magnitude spectrum)">
<polygon fill="white" stroke="black" points="15.5,-413.5 15.5,-756.5 182.5,-756.5 182.5,-413.5 15.5,-413.5"/>
<text text-anchor="middle" x="99" y="-744.5" font-family="Helvetica,sans-Serif" font-size="10.00">CPitchFromBlockIf</text>
<polyline fill="none" stroke="black" points="15.5,-737.5 182.5,-737.5 "/>
<text text-anchor="start" x="23.5" y="-725.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CPitchIf::PitchExtractors</text>
<text text-anchor="start" x="23.5" y="-714.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t m_ePitchIdx</text>
<text text-anchor="start" x="23.5" y="-703.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iDataLength</text>
<text text-anchor="start" x="23.5" y="-692.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float m_fSampleRate</text>
<polyline fill="none" stroke="black" points="15.5,-685.5 182.5,-685.5 "/>
<text text-anchor="start" x="23.5" y="-673.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CPitchIf::PitchExtractors</text>
<text text-anchor="start" x="23.5" y="-662.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t getPitchExtractorIdx</text>
<text text-anchor="start" x="23.5" y="-651.5" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="23.5" y="-640.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual float compF0</text>
<text text-anchor="start" x="23.5" y="-629.5" font-family="Helvetica,sans-Serif" font-size="10.00">(const float *pfInput)=0</text>
<text text-anchor="start" x="23.5" y="-618.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="23.5" y="-607.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CPitchFromBlockIf *&amp;pCInstance,</text>
<text text-anchor="start" x="23.5" y="-596.5" font-family="Helvetica,sans-Serif" font-size="10.00"> CPitchIf::PitchExtractors</text>
<text text-anchor="start" x="23.5" y="-585.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t ePitchIdx, int iDataLength,</text>
<text text-anchor="start" x="23.5" y="-574.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate=1.F)</text>
<text text-anchor="start" x="23.5" y="-563.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="23.5" y="-552.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CPitchFromBlockIf *&amp;pCInstance)</text>
<text text-anchor="start" x="23.5" y="-541.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CPitchFromBlockIf()</text>
<text text-anchor="start" x="23.5" y="-530.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CPitchFromBlockIf</text>
<text text-anchor="start" x="23.5" y="-519.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CPitchIf::PitchExtractors</text>
<text text-anchor="start" x="23.5" y="-508.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t ePitchIdx, int iDataLength,</text>
<text text-anchor="start" x="23.5" y="-497.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate)</text>
<text text-anchor="start" x="23.5" y="-486.5" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CPitchFromBlockIf()</text>
<text text-anchor="start" x="23.5" y="-475.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CPitchFromBlockIf</text>
<text text-anchor="start" x="23.5" y="-464.5" font-family="Helvetica,sans-Serif" font-size="10.00">(const CPitchFromBlockIf</text>
<text text-anchor="start" x="23.5" y="-453.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;that)</text>
<text text-anchor="start" x="23.5" y="-442.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CPitchFromBlockIf &amp;</text>
<text text-anchor="start" x="23.5" y="-431.5" font-family="Helvetica,sans-Serif" font-size="10.00"> operator=(const CPitchFrom</text>
<text text-anchor="start" x="23.5" y="-420.5" font-family="Helvetica,sans-Serif" font-size="10.00">BlockIf &amp;c)</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M161.63,-404.31C170.84,-384.48 180.98,-364.97 192,-347 218.76,-303.36 255.6,-260.22 288.49,-225.58"/>
<polygon fill="none" stroke="midnightblue" points="158.43,-402.9 157.47,-413.45 164.8,-405.8 158.43,-402.9"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="a00539.xhtml" target="_top" xlink:title="computation of correlation (freq domain)">
<polygon fill="white" stroke="black" points="201,-430 201,-740 345,-740 345,-430 201,-430"/>
<text text-anchor="middle" x="273" y="-728" font-family="Helvetica,sans-Serif" font-size="10.00">CCcf</text>
<polyline fill="none" stroke="black" points="201,-721 345,-721 "/>
<text text-anchor="start" x="209" y="-709" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; bool m_bIsInitialized</text>
<text text-anchor="start" x="209" y="-698" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; bool m_bWasProcessed</text>
<text text-anchor="start" x="209" y="-687" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_apfData</text>
<text text-anchor="start" x="209" y="-676" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iBlockLength</text>
<text text-anchor="start" x="209" y="-665" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iFftLength</text>
<polyline fill="none" stroke="black" points="201,-658 345,-658 "/>
<text text-anchor="start" x="209" y="-646" font-family="Helvetica,sans-Serif" font-size="10.00">+ CCcf(void)</text>
<text text-anchor="start" x="209" y="-635" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CCcf(void)</text>
<text text-anchor="start" x="209" y="-624" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t init(int iBlockLength)</text>
<text text-anchor="start" x="209" y="-613" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t reset()</text>
<text text-anchor="start" x="209" y="-602" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compCcf(const</text>
<text text-anchor="start" x="209" y="-591" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfInput1, const</text>
<text text-anchor="start" x="209" y="-580" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfInput2, bool</text>
<text text-anchor="start" x="209" y="-569" font-family="Helvetica,sans-Serif" font-size="10.00"> bNormalize=true)</text>
<text text-anchor="start" x="209" y="-558" font-family="Helvetica,sans-Serif" font-size="10.00">+ int getCcfLength(bool</text>
<text text-anchor="start" x="209" y="-547" font-family="Helvetica,sans-Serif" font-size="10.00"> bisAcf=false)</text>
<text text-anchor="start" x="209" y="-536" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getCcf(float</text>
<text text-anchor="start" x="209" y="-525" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfCcfResult, bool bisAcf</text>
<text text-anchor="start" x="209" y="-514" font-family="Helvetica,sans-Serif" font-size="10.00">=false) const</text>
<text text-anchor="start" x="209" y="-503" font-family="Helvetica,sans-Serif" font-size="10.00">+ float getCcfMax(bool</text>
<text text-anchor="start" x="209" y="-492" font-family="Helvetica,sans-Serif" font-size="10.00"> bisAcf=false) const</text>
<text text-anchor="start" x="209" y="-481" font-family="Helvetica,sans-Serif" font-size="10.00">+ int getCcfMaxIdx(bool</text>
<text text-anchor="start" x="209" y="-470" font-family="Helvetica,sans-Serif" font-size="10.00"> bisAcf=false) const</text>
<text text-anchor="start" x="209" y="-459" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CCcf(const CCcf &amp;that)</text>
<text text-anchor="start" x="209" y="-448" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CCcf &amp; operator=(const</text>
<text text-anchor="start" x="209" y="-437" font-family="Helvetica,sans-Serif" font-size="10.00"> CCcf &amp;c)</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node1 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node1</title>
<path fill="none" stroke="#404040" d="M306.12,-429.82C314.34,-391.5 323.19,-350.34 331.48,-311.72"/>
<polygon fill="none" stroke="#404040" points="331.52,-311.56 328.86,-304.85 334.04,-299.82 336.69,-306.53 331.52,-311.56"/>
<text text-anchor="middle" x="351" y="-321" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;m_pCCcf</text>
</g>
<!-- Node4 -->
<g id="node4" class="node">
<title>Node4</title>
<g id="a_node4"><a xlink:href="a00467.xhtml" target="_top" xlink:title="class for FFT computation with windowing">
<polygon fill="white" stroke="black" points="0,-870.5 0,-1356.5 188,-1356.5 188,-870.5 0,-870.5"/>
<text text-anchor="middle" x="94" y="-1344.5" font-family="Helvetica,sans-Serif" font-size="10.00">CFft</text>
<polyline fill="none" stroke="black" points="0,-1337.5 188,-1337.5 "/>
<text text-anchor="start" x="8" y="-1325.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_pfProcessBuff</text>
<text text-anchor="start" x="8" y="-1314.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_pfWindowBuff</text>
<text text-anchor="start" x="8" y="-1303.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iDataLength</text>
<text text-anchor="start" x="8" y="-1292.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iFftLength</text>
<text text-anchor="start" x="8" y="-1281.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Windowing_t m_ePrePostWindowOpt</text>
<text text-anchor="start" x="8" y="-1270.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; bool m_bIsInitialized</text>
<text text-anchor="start" x="8" y="-1259.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; static const float m_Pi</text>
<text text-anchor="start" x="8" y="-1248.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; static const float</text>
<text text-anchor="start" x="8" y="-1237.5" font-family="Helvetica,sans-Serif" font-size="10.00"> m_Pi2</text>
<polyline fill="none" stroke="black" points="0,-1230.5 188,-1230.5 "/>
<text text-anchor="start" x="8" y="-1218.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CFft()</text>
<text text-anchor="start" x="8" y="-1207.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CFft()</text>
<text text-anchor="start" x="8" y="-1196.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t init(int iBlockLength,</text>
<text text-anchor="start" x="8" y="-1185.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iZeroPadFactor=1, WindowFunction</text>
<text text-anchor="start" x="8" y="-1174.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t eWindow=kWindowHann, Windowing</text>
<text text-anchor="start" x="8" y="-1163.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t eWindowing=kPreWindow)</text>
<text text-anchor="start" x="8" y="-1152.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t reset()</text>
<text text-anchor="start" x="8" y="-1141.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t overrideWindow</text>
<text text-anchor="start" x="8" y="-1130.5" font-family="Helvetica,sans-Serif" font-size="10.00">(const float *pfNewWindow)</text>
<text text-anchor="start" x="8" y="-1119.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getWindow(float</text>
<text text-anchor="start" x="8" y="-1108.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfWindow) const</text>
<text text-anchor="start" x="8" y="-1097.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compFft(complex</text>
<text text-anchor="start" x="8" y="-1086.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t *pfSpectrum, const</text>
<text text-anchor="start" x="8" y="-1075.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfInput)</text>
<text text-anchor="start" x="8" y="-1064.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compInvFft</text>
<text text-anchor="start" x="8" y="-1053.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfOutput, const</text>
<text text-anchor="start" x="8" y="-1042.5" font-family="Helvetica,sans-Serif" font-size="10.00"> complex_t *pfSpectrum)</text>
<text text-anchor="start" x="8" y="-1031.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getMagnitude</text>
<text text-anchor="start" x="8" y="-1020.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfMag, const</text>
<text text-anchor="start" x="8" y="-1009.5" font-family="Helvetica,sans-Serif" font-size="10.00"> complex_t *pfSpectrum)</text>
<text text-anchor="start" x="8" y="-998.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const</text>
<text text-anchor="start" x="8" y="-987.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getPhase(float</text>
<text text-anchor="start" x="8" y="-976.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfPhase, const complex</text>
<text text-anchor="start" x="8" y="-965.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t *pfSpectrum) const</text>
<text text-anchor="start" x="8" y="-954.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 7 more...</text>
<text text-anchor="start" x="8" y="-943.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CFft(const CFft &amp;that)</text>
<text text-anchor="start" x="8" y="-932.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CFft &amp; operator=(const</text>
<text text-anchor="start" x="8" y="-921.5" font-family="Helvetica,sans-Serif" font-size="10.00"> CFft &amp;c)</text>
<text text-anchor="start" x="8" y="-910.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Error_t allocMemory_()</text>
<text text-anchor="start" x="8" y="-899.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Error_t freeMemory_()</text>
<text text-anchor="start" x="8" y="-888.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Error_t computeWindow</text>
<text text-anchor="start" x="8" y="-877.5" font-family="Helvetica,sans-Serif" font-size="10.00">_(WindowFunction_t eWindow)</text>
</a>
</g>
</g>
<!-- Node4&#45;&gt;Node3 -->
<g id="edge3" class="edge">
<title>Node4&#45;&gt;Node3</title>
<path fill="none" stroke="#404040" d="M176.3,-870.44C189.94,-830.29 203.82,-789.49 216.64,-751.79"/>
<polygon fill="none" stroke="#404040" points="216.72,-751.55 214.86,-744.58 220.58,-740.19 222.43,-747.16 216.72,-751.55"/>
<text text-anchor="middle" x="205.5" y="-844" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;m_pCFft</text>
</g>
<!-- Node5 -->
<g id="node5" class="node">
<title>Node5</title>
<g id="a_node5"><a xlink:href="a00471.xhtml" target="_top" xlink:title=" ">
<polygon fill="white" stroke="black" points="531.5,-1404.5 531.5,-1736.5 680.5,-1736.5 680.5,-1404.5 531.5,-1404.5"/>
<text text-anchor="middle" x="606" y="-1724.5" font-family="Helvetica,sans-Serif" font-size="10.00">CFilter&lt; float &gt;</text>
<polyline fill="none" stroke="black" points="531.5,-1717.5 680.5,-1717.5 "/>
<text text-anchor="start" x="539.5" y="-1705.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_aptCoeff</text>
<text text-anchor="start" x="539.5" y="-1694.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_ptProcBuff</text>
<text text-anchor="start" x="539.5" y="-1683.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iNumFilterCoeffs</text>
<text text-anchor="start" x="539.5" y="-1672.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; bool m_bisInitialized</text>
<polyline fill="none" stroke="black" points="531.5,-1665.5 680.5,-1665.5 "/>
<text text-anchor="start" x="539.5" y="-1653.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CFilter()</text>
<text text-anchor="start" x="539.5" y="-1642.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CFilter()</text>
<text text-anchor="start" x="539.5" y="-1631.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t init(const</text>
<text text-anchor="start" x="539.5" y="-1620.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfB, const float</text>
<text text-anchor="start" x="539.5" y="-1609.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfA, int iNumCoeffs)</text>
<text text-anchor="start" x="539.5" y="-1598.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t reset(bool</text>
<text text-anchor="start" x="539.5" y="-1587.5" font-family="Helvetica,sans-Serif" font-size="10.00"> bFreeMem=true)</text>
<text text-anchor="start" x="539.5" y="-1576.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t process(float</text>
<text text-anchor="start" x="539.5" y="-1565.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfOut, const float</text>
<text text-anchor="start" x="539.5" y="-1554.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfIn, long long iNumSamples)</text>
<text text-anchor="start" x="539.5" y="-1543.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t processDFII</text>
<text text-anchor="start" x="539.5" y="-1532.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfOut, const</text>
<text text-anchor="start" x="539.5" y="-1521.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfIn, long long</text>
<text text-anchor="start" x="539.5" y="-1510.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iNumSamples)</text>
<text text-anchor="start" x="539.5" y="-1499.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t filtfilt(float</text>
<text text-anchor="start" x="539.5" y="-1488.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfOut, const float *pfIn,</text>
<text text-anchor="start" x="539.5" y="-1477.5" font-family="Helvetica,sans-Serif" font-size="10.00"> long long iNumSamples)</text>
<text text-anchor="start" x="539.5" y="-1466.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CFilter(const CFilter</text>
<text text-anchor="start" x="539.5" y="-1455.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;that)</text>
<text text-anchor="start" x="539.5" y="-1444.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CFilter &amp; operator</text>
<text text-anchor="start" x="539.5" y="-1433.5" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CFilter &amp;c)</text>
<text text-anchor="start" x="539.5" y="-1422.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; void setInitState_</text>
<text text-anchor="start" x="539.5" y="-1411.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float fWeight)</text>
</a>
</g>
</g>
<!-- Node5&#45;&gt;Node1 -->
<g id="edge4" class="edge">
<title>Node5&#45;&gt;Node1</title>
<path fill="none" stroke="#404040" d="M680.62,-1469.77C701.84,-1435.77 722.14,-1396.36 733,-1357 790.6,-1148.36 766.32,-1083.86 733,-870 695.44,-628.9 694.02,-554.73 566,-347 536.37,-298.91 492.43,-254.1 453.29,-219.5"/>
<polygon fill="none" stroke="#404040" points="453.02,-219.26 445.87,-218.34 443.98,-211.38 451.13,-212.31 453.02,-219.26"/>
<text text-anchor="middle" x="758" y="-844" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;m_apCFilter</text>
</g>
<!-- Node12 -->
<g id="node12" class="node">
<title>Node12</title>
<g id="a_node12"><a xlink:href="a00415.xhtml" target="_top" xlink:title="class for a single gammtone filter">
<polygon fill="white" stroke="black" points="374.5,-986 374.5,-1241 545.5,-1241 545.5,-986 374.5,-986"/>
<text text-anchor="middle" x="460" y="-1229" font-family="Helvetica,sans-Serif" font-size="10.00">CGammatone</text>
<polyline fill="none" stroke="black" points="374.5,-1222 545.5,-1222 "/>
<text text-anchor="start" x="382.5" y="-1210" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float m_fFreqCenter</text>
<text text-anchor="start" x="382.5" y="-1199" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float m_fSampleRate</text>
<text text-anchor="start" x="382.5" y="-1188" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float m_aafCoeffB</text>
<text text-anchor="start" x="382.5" y="-1177" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float m_aafCoeffA</text>
<text text-anchor="start" x="382.5" y="-1166" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; bool m_bIsInitialized</text>
<polyline fill="none" stroke="black" points="374.5,-1159 545.5,-1159 "/>
<text text-anchor="start" x="382.5" y="-1147" font-family="Helvetica,sans-Serif" font-size="10.00">+ CGammatone()</text>
<text text-anchor="start" x="382.5" y="-1136" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CGammatone()</text>
<text text-anchor="start" x="382.5" y="-1125" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t init(float</text>
<text text-anchor="start" x="382.5" y="-1114" font-family="Helvetica,sans-Serif" font-size="10.00"> fFreqCenter, float</text>
<text text-anchor="start" x="382.5" y="-1103" font-family="Helvetica,sans-Serif" font-size="10.00"> fSampleRate)</text>
<text text-anchor="start" x="382.5" y="-1092" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t process(float</text>
<text text-anchor="start" x="382.5" y="-1081" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfOutput, const float</text>
<text text-anchor="start" x="382.5" y="-1070" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfInput, long long iNumSamples)</text>
<text text-anchor="start" x="382.5" y="-1059" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t reset()</text>
<text text-anchor="start" x="382.5" y="-1048" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CGammatone(const CGammatone</text>
<text text-anchor="start" x="382.5" y="-1037" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;that)</text>
<text text-anchor="start" x="382.5" y="-1026" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CGammatone &amp; operator</text>
<text text-anchor="start" x="382.5" y="-1015" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CGammatone &amp;c)</text>
<text text-anchor="start" x="382.5" y="-1004" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; void calcFilterCoeffs</text>
<text text-anchor="start" x="382.5" y="-993" font-family="Helvetica,sans-Serif" font-size="10.00">_(int iOrder=1)</text>
</a>
</g>
</g>
<!-- Node5&#45;&gt;Node12 -->
<g id="edge12" class="edge">
<title>Node5&#45;&gt;Node12</title>
<path fill="none" stroke="#404040" d="M552.98,-1404.27C537.04,-1354.6 519.73,-1300.64 504.41,-1252.9"/>
<polygon fill="none" stroke="#404040" points="504.33,-1252.65 498.69,-1248.16 500.66,-1241.22 506.3,-1245.71 504.33,-1252.65"/>
<text text-anchor="middle" x="576" y="-1378" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;m_apCFilter</text>
</g>
<!-- Node6 -->
<g id="node6" class="node">
<title>Node6</title>
<g id="a_node6"><a xlink:href="a00483.xhtml" target="_top" xlink:title=" ">
<polygon fill="white" stroke="black" points="464.5,-1784.5 464.5,-2149.5 597.5,-2149.5 597.5,-1784.5 464.5,-1784.5"/>
<text text-anchor="middle" x="531" y="-2137.5" font-family="Helvetica,sans-Serif" font-size="10.00">CRingBuffer&lt; float &gt;</text>
<polyline fill="none" stroke="black" points="464.5,-2130.5 597.5,-2130.5 "/>
<text text-anchor="start" x="472.5" y="-2118.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iBuffLength</text>
<text text-anchor="start" x="472.5" y="-2107.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iReadIdx</text>
<text text-anchor="start" x="472.5" y="-2096.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iWriteIdx</text>
<text text-anchor="start" x="472.5" y="-2085.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_ptBuff</text>
<polyline fill="none" stroke="black" points="464.5,-2078.5 597.5,-2078.5 "/>
<text text-anchor="start" x="472.5" y="-2066.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CRingBuffer(int iBuffer</text>
<text text-anchor="start" x="472.5" y="-2055.5" font-family="Helvetica,sans-Serif" font-size="10.00">LengthInSamples)</text>
<text text-anchor="start" x="472.5" y="-2044.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CRingBuffer()</text>
<text text-anchor="start" x="472.5" y="-2033.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void putPostInc(float</text>
<text text-anchor="start" x="472.5" y="-2022.5" font-family="Helvetica,sans-Serif" font-size="10.00"> tNewValue)</text>
<text text-anchor="start" x="472.5" y="-2011.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void putPostInc(const</text>
<text text-anchor="start" x="472.5" y="-2000.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *ptNewBuff, int</text>
<text text-anchor="start" x="472.5" y="-1989.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iLength)</text>
<text text-anchor="start" x="472.5" y="-1978.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void put(float tNewValue)</text>
<text text-anchor="start" x="472.5" y="-1967.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void put(const float</text>
<text text-anchor="start" x="472.5" y="-1956.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *ptNewBuff, int iLength)</text>
<text text-anchor="start" x="472.5" y="-1945.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ float getPostInc()</text>
<text text-anchor="start" x="472.5" y="-1934.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void getPostInc(float</text>
<text text-anchor="start" x="472.5" y="-1923.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *ptBuff, int iLength)</text>
<text text-anchor="start" x="472.5" y="-1912.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ float get(float fOffset</text>
<text text-anchor="start" x="472.5" y="-1901.5" font-family="Helvetica,sans-Serif" font-size="10.00">=0) const</text>
<text text-anchor="start" x="472.5" y="-1890.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void get(float *ptBuff,</text>
<text text-anchor="start" x="472.5" y="-1879.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iLength) const</text>
<text text-anchor="start" x="472.5" y="-1868.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 7 more...</text>
<text text-anchor="start" x="472.5" y="-1857.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CRingBuffer()</text>
<text text-anchor="start" x="472.5" y="-1846.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CRingBuffer(const</text>
<text text-anchor="start" x="472.5" y="-1835.5" font-family="Helvetica,sans-Serif" font-size="10.00"> CRingBuffer &amp;that)</text>
<text text-anchor="start" x="472.5" y="-1824.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CRingBuffer &amp; operator</text>
<text text-anchor="start" x="472.5" y="-1813.5" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CRingBuffer &amp;c)</text>
<text text-anchor="start" x="472.5" y="-1802.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; void incIdx(int &amp;iIdx,</text>
<text text-anchor="start" x="472.5" y="-1791.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iOffset=1)</text>
</a>
</g>
</g>
<!-- Node6&#45;&gt;Node5 -->
<g id="edge5" class="edge">
<title>Node6&#45;&gt;Node5</title>
<path fill="none" stroke="#404040" d="M565.54,-1784.34C567.8,-1772.43 570.08,-1760.45 572.34,-1748.57"/>
<polygon fill="none" stroke="#404040" points="572.35,-1748.51 569.54,-1741.87 574.59,-1736.72 577.4,-1743.37 572.35,-1748.51"/>
<text text-anchor="middle" x="606" y="-1758" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;m_pCFilterBuff</text>
</g>
<!-- Node7 -->
<g id="node7" class="node">
<title>Node7</title>
<g id="a_node7"><a xlink:href="a00483.xhtml" target="_top" xlink:title="implement a circular buffer of type T">
<polygon fill="white" stroke="black" points="453.5,-2197.5 453.5,-2540.5 608.5,-2540.5 608.5,-2197.5 453.5,-2197.5"/>
<text text-anchor="middle" x="531" y="-2528.5" font-family="Helvetica,sans-Serif" font-size="10.00">CRingBuffer&lt; T &gt;</text>
<polyline fill="none" stroke="black" points="453.5,-2521.5 608.5,-2521.5 "/>
<text text-anchor="start" x="461.5" y="-2509.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iBuffLength</text>
<text text-anchor="start" x="461.5" y="-2498.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iReadIdx</text>
<text text-anchor="start" x="461.5" y="-2487.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iWriteIdx</text>
<text text-anchor="start" x="461.5" y="-2476.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; T * m_ptBuff</text>
<polyline fill="none" stroke="black" points="453.5,-2469.5 608.5,-2469.5 "/>
<text text-anchor="start" x="461.5" y="-2457.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CRingBuffer(int iBuffer</text>
<text text-anchor="start" x="461.5" y="-2446.5" font-family="Helvetica,sans-Serif" font-size="10.00">LengthInSamples)</text>
<text text-anchor="start" x="461.5" y="-2435.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CRingBuffer()</text>
<text text-anchor="start" x="461.5" y="-2424.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void putPostInc(T tNewValue)</text>
<text text-anchor="start" x="461.5" y="-2413.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void putPostInc(const</text>
<text text-anchor="start" x="461.5" y="-2402.5" font-family="Helvetica,sans-Serif" font-size="10.00"> T *ptNewBuff, int iLength)</text>
<text text-anchor="start" x="461.5" y="-2391.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void put(T tNewValue)</text>
<text text-anchor="start" x="461.5" y="-2380.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void put(const T *ptNewBuff,</text>
<text text-anchor="start" x="461.5" y="-2369.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iLength)</text>
<text text-anchor="start" x="461.5" y="-2358.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ T getPostInc()</text>
<text text-anchor="start" x="461.5" y="-2347.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void getPostInc(T *ptBuff,</text>
<text text-anchor="start" x="461.5" y="-2336.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iLength)</text>
<text text-anchor="start" x="461.5" y="-2325.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ T get(float fOffset</text>
<text text-anchor="start" x="461.5" y="-2314.5" font-family="Helvetica,sans-Serif" font-size="10.00">=0) const</text>
<text text-anchor="start" x="461.5" y="-2303.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void get(T *ptBuff,</text>
<text text-anchor="start" x="461.5" y="-2292.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iLength) const</text>
<text text-anchor="start" x="461.5" y="-2281.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 7 more...</text>
<text text-anchor="start" x="461.5" y="-2270.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CRingBuffer()</text>
<text text-anchor="start" x="461.5" y="-2259.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CRingBuffer(const</text>
<text text-anchor="start" x="461.5" y="-2248.5" font-family="Helvetica,sans-Serif" font-size="10.00"> CRingBuffer &amp;that)</text>
<text text-anchor="start" x="461.5" y="-2237.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CRingBuffer &amp; operator</text>
<text text-anchor="start" x="461.5" y="-2226.5" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CRingBuffer &amp;c)</text>
<text text-anchor="start" x="461.5" y="-2215.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; void incIdx(int &amp;iIdx,</text>
<text text-anchor="start" x="461.5" y="-2204.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iOffset=1)</text>
</a>
</g>
</g>
<!-- Node7&#45;&gt;Node6 -->
<g id="edge6" class="edge">
<title>Node7&#45;&gt;Node6</title>
<path fill="none" stroke="orange" d="M531,-2187.45C531,-2174.89 531,-2162.22 531,-2149.65"/>
<polygon fill="orange" stroke="orange" points="527.5,-2187.49 531,-2197.49 534.5,-2187.49 527.5,-2187.49"/>
<text text-anchor="middle" x="549.5" y="-2171" font-family="Helvetica,sans-Serif" font-size="10.00"> &lt; float &gt;</text>
</g>
<!-- Node8 -->
<g id="node8" class="node">
<title>Node8</title>
<g id="a_node8"><a xlink:href="a00471.xhtml" target="_top" xlink:title="class providing a generic filter implementation">
<polygon fill="white" stroke="black" points="616,-1795.5 616,-2138.5 748,-2138.5 748,-1795.5 616,-1795.5"/>
<text text-anchor="middle" x="682" y="-2126.5" font-family="Helvetica,sans-Serif" font-size="10.00">CFilter&lt; T &gt;</text>
<polyline fill="none" stroke="black" points="616,-2119.5 748,-2119.5 "/>
<text text-anchor="start" x="624" y="-2107.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CRingBuffer&lt; T &gt; *</text>
<text text-anchor="start" x="624" y="-2096.5" font-family="Helvetica,sans-Serif" font-size="10.00"> m_pCFilterBuff</text>
<text text-anchor="start" x="624" y="-2085.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; T * m_aptCoeff</text>
<text text-anchor="start" x="624" y="-2074.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; T * m_ptProcBuff</text>
<text text-anchor="start" x="624" y="-2063.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iNumFilterCoeffs</text>
<text text-anchor="start" x="624" y="-2052.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; bool m_bisInitialized</text>
<polyline fill="none" stroke="black" points="616,-2045.5 748,-2045.5 "/>
<text text-anchor="start" x="624" y="-2033.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CFilter()</text>
<text text-anchor="start" x="624" y="-2022.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CFilter()</text>
<text text-anchor="start" x="624" y="-2011.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t init(const</text>
<text text-anchor="start" x="624" y="-2000.5" font-family="Helvetica,sans-Serif" font-size="10.00"> T *pfB, const T *pfA,</text>
<text text-anchor="start" x="624" y="-1989.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iNumCoeffs)</text>
<text text-anchor="start" x="624" y="-1978.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t reset(bool</text>
<text text-anchor="start" x="624" y="-1967.5" font-family="Helvetica,sans-Serif" font-size="10.00"> bFreeMem=true)</text>
<text text-anchor="start" x="624" y="-1956.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t process(T *pfOut,</text>
<text text-anchor="start" x="624" y="-1945.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const T *pfIn, long long</text>
<text text-anchor="start" x="624" y="-1934.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iNumSamples)</text>
<text text-anchor="start" x="624" y="-1923.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t processDFII</text>
<text text-anchor="start" x="624" y="-1912.5" font-family="Helvetica,sans-Serif" font-size="10.00">(T *pfOut, const T *pfIn,</text>
<text text-anchor="start" x="624" y="-1901.5" font-family="Helvetica,sans-Serif" font-size="10.00"> long long iNumSamples)</text>
<text text-anchor="start" x="624" y="-1890.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t filtfilt(T</text>
<text text-anchor="start" x="624" y="-1879.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfOut, const T *pfIn,</text>
<text text-anchor="start" x="624" y="-1868.5" font-family="Helvetica,sans-Serif" font-size="10.00"> long long iNumSamples)</text>
<text text-anchor="start" x="624" y="-1857.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CFilter(const CFilter</text>
<text text-anchor="start" x="624" y="-1846.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;that)</text>
<text text-anchor="start" x="624" y="-1835.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CFilter &amp; operator</text>
<text text-anchor="start" x="624" y="-1824.5" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CFilter &amp;c)</text>
<text text-anchor="start" x="624" y="-1813.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; void setInitState_</text>
<text text-anchor="start" x="624" y="-1802.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float fWeight)</text>
</a>
</g>
</g>
<!-- Node8&#45;&gt;Node5 -->
<g id="edge7" class="edge">
<title>Node8&#45;&gt;Node5</title>
<path fill="none" stroke="orange" d="M650.8,-1785.53C648.87,-1775.19 646.93,-1764.96 645,-1755 643.85,-1749.08 642.67,-1743.07 641.46,-1736.99"/>
<polygon fill="orange" stroke="orange" points="647.37,-1786.27 652.64,-1795.47 654.26,-1785 647.37,-1786.27"/>
<text text-anchor="middle" x="664.5" y="-1758" font-family="Helvetica,sans-Serif" font-size="10.00"> &lt; float &gt;</text>
</g>
<!-- Node9 -->
<g id="node9" class="node">
<title>Node9</title>
<g id="a_node9"><a xlink:href="a00551.xhtml" target="_top" xlink:title="class for computation of a Gammatone filterbank output from either a file or a vector">
<polygon fill="white" stroke="black" points="363,-347.5 363,-822.5 557,-822.5 557,-347.5 363,-347.5"/>
<text text-anchor="middle" x="460" y="-810.5" font-family="Helvetica,sans-Serif" font-size="10.00">CGammaToneFbIf</text>
<polyline fill="none" stroke="black" points="363,-803.5 557,-803.5 "/>
<text text-anchor="start" x="371" y="-791.5" font-family="Helvetica,sans-Serif" font-size="10.00"># const int m_iBlockLength</text>
<text text-anchor="start" x="371" y="-780.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iNumBands</text>
<text text-anchor="start" x="371" y="-769.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float m_fSampleRate</text>
<text text-anchor="start" x="371" y="-758.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float m_fStartInHz</text>
<text text-anchor="start" x="371" y="-747.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float * m_pfProcessBuff</text>
<text text-anchor="start" x="371" y="-736.5" font-family="Helvetica,sans-Serif" font-size="10.00"># bool m_bIsInitialized</text>
<polyline fill="none" stroke="black" points="363,-729.5 557,-729.5 "/>
<text text-anchor="start" x="371" y="-717.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getOutputDimensions</text>
<text text-anchor="start" x="371" y="-706.5" font-family="Helvetica,sans-Serif" font-size="10.00">(long long &amp;iNumRows, long</text>
<text text-anchor="start" x="371" y="-695.5" font-family="Helvetica,sans-Serif" font-size="10.00"> long &amp;iNumCols) const</text>
<text text-anchor="start" x="371" y="-684.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ float getCenterFreq</text>
<text text-anchor="start" x="371" y="-673.5" font-family="Helvetica,sans-Serif" font-size="10.00">(int iBandIdx) const</text>
<text text-anchor="start" x="371" y="-662.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t process(float</text>
<text text-anchor="start" x="371" y="-651.5" font-family="Helvetica,sans-Serif" font-size="10.00"> **ppfOutput, const float</text>
<text text-anchor="start" x="371" y="-640.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfInput=0, long long iNumSamples=0)</text>
<text text-anchor="start" x="371" y="-629.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="371" y="-618.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CGammaToneFbIf *&amp;pCInstance,</text>
<text text-anchor="start" x="371" y="-607.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const std::string &amp;strAudioFilePath,</text>
<text text-anchor="start" x="371" y="-596.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iNumBands=20, float fStartInHz=100)</text>
<text text-anchor="start" x="371" y="-585.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="371" y="-574.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CGammaToneFbIf *&amp;pCInstance,</text>
<text text-anchor="start" x="371" y="-563.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const float *pfAudio, long</text>
<text text-anchor="start" x="371" y="-552.5" font-family="Helvetica,sans-Serif" font-size="10.00"> long iNumSamples, float fSampleRate,</text>
<text text-anchor="start" x="371" y="-541.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iNumBands=20, float fStartInHz=100)</text>
<text text-anchor="start" x="371" y="-530.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="371" y="-519.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CGammaToneFbIf *&amp;pCInstance,</text>
<text text-anchor="start" x="371" y="-508.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate, int iNumBands</text>
<text text-anchor="start" x="371" y="-497.5" font-family="Helvetica,sans-Serif" font-size="10.00">=20, float fStartInHz=100)</text>
<text text-anchor="start" x="371" y="-486.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="371" y="-475.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CGammaToneFbIf *&amp;pCInstance)</text>
<text text-anchor="start" x="371" y="-464.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CGammaToneFbIf()</text>
<text text-anchor="start" x="371" y="-453.5" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CGammaToneFbIf()</text>
<text text-anchor="start" x="371" y="-442.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CGammaToneFbIf(const</text>
<text text-anchor="start" x="371" y="-431.5" font-family="Helvetica,sans-Serif" font-size="10.00"> CGammaToneFbIf &amp;that)</text>
<text text-anchor="start" x="371" y="-420.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CGammaToneFbIf &amp; operator</text>
<text text-anchor="start" x="371" y="-409.5" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CGammaToneFbIf &amp;c)</text>
<text text-anchor="start" x="371" y="-398.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t reset_()</text>
<text text-anchor="start" x="371" y="-387.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t init_()</text>
<text text-anchor="start" x="371" y="-376.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float compMidFreqs</text>
<text text-anchor="start" x="371" y="-365.5" font-family="Helvetica,sans-Serif" font-size="10.00">_(float fFreqLow, float</text>
<text text-anchor="start" x="371" y="-354.5" font-family="Helvetica,sans-Serif" font-size="10.00"> fFreqHigh, int k) const</text>
</a>
</g>
</g>
<!-- Node9&#45;&gt;Node1 -->
<g id="edge8" class="edge">
<title>Node9&#45;&gt;Node1</title>
<path fill="none" stroke="#404040" d="M408.6,-347.23C406.01,-335.29 403.43,-323.43 400.91,-311.8"/>
<polygon fill="none" stroke="#404040" points="400.84,-311.49 395.66,-306.48 398.3,-299.77 403.48,-304.78 400.84,-311.49"/>
<text text-anchor="middle" x="443" y="-321" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;m_pCFilterBank</text>
</g>
<!-- Node10 -->
<g id="node10" class="node">
<title>Node10</title>
<g id="a_node10"><a xlink:href="a00591.xhtml" target="_top" xlink:title="class for audio normalization offering three options">
<polygon fill="white" stroke="black" points="206,-997 206,-1230 356,-1230 356,-997 206,-997"/>
<text text-anchor="middle" x="281" y="-1218" font-family="Helvetica,sans-Serif" font-size="10.00">CNormalizeAudio</text>
<polyline fill="none" stroke="black" points="206,-1211 356,-1211 "/>
<text text-anchor="start" x="214" y="-1199" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float m_fScaleFactor</text>
<polyline fill="none" stroke="black" points="206,-1192 356,-1192 "/>
<text text-anchor="start" x="214" y="-1180" font-family="Helvetica,sans-Serif" font-size="10.00">+ CNormalizeAudio(CAudioFile</text>
<text text-anchor="start" x="214" y="-1169" font-family="Helvetica,sans-Serif" font-size="10.00">If *pCAudioFile)</text>
<text text-anchor="start" x="214" y="-1158" font-family="Helvetica,sans-Serif" font-size="10.00">+ CNormalizeAudio(const</text>
<text text-anchor="start" x="214" y="-1147" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfAudioBuff, long</text>
<text text-anchor="start" x="214" y="-1136" font-family="Helvetica,sans-Serif" font-size="10.00"> long iAudioLength)</text>
<text text-anchor="start" x="214" y="-1125" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CNormalizeAudio()</text>
<text text-anchor="start" x="214" y="-1114" font-family="Helvetica,sans-Serif" font-size="10.00">+ void normalizeBlock</text>
<text text-anchor="start" x="214" y="-1103" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfAudioBlock,</text>
<text text-anchor="start" x="214" y="-1092" font-family="Helvetica,sans-Serif" font-size="10.00"> long long iNumSamples)</text>
<text text-anchor="start" x="214" y="-1081" font-family="Helvetica,sans-Serif" font-size="10.00">+ static void normalizeSignal</text>
<text text-anchor="start" x="214" y="-1070" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfAudio, long long</text>
<text text-anchor="start" x="214" y="-1059" font-family="Helvetica,sans-Serif" font-size="10.00"> iNumSamples)</text>
<text text-anchor="start" x="214" y="-1048" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CNormalizeAudio()</text>
<text text-anchor="start" x="214" y="-1037" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CNormalizeAudio(const</text>
<text text-anchor="start" x="214" y="-1026" font-family="Helvetica,sans-Serif" font-size="10.00"> CNormalizeAudio &amp;that)</text>
<text text-anchor="start" x="214" y="-1015" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CNormalizeAudio &amp; operator</text>
<text text-anchor="start" x="214" y="-1004" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CNormalizeAudio &amp;c)</text>
</a>
</g>
</g>
<!-- Node10&#45;&gt;Node9 -->
<g id="edge9" class="edge">
<title>Node10&#45;&gt;Node9</title>
<path fill="none" stroke="#404040" d="M320.28,-996.96C336.66,-948.79 356.35,-890.86 375.72,-833.89"/>
<polygon fill="none" stroke="#404040" points="375.73,-833.87 373.87,-826.91 379.59,-822.51 381.45,-829.48 375.73,-833.87"/>
<text text-anchor="middle" x="409.5" y="-844" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCNormalize</text>
</g>
<!-- Node11 -->
<g id="node11" class="node">
<title>Node11</title>
<g id="a_node11"><a xlink:href="a00535.xhtml" target="_top" xlink:title="forward declaration">
<polygon fill="white" stroke="black" points="564,-898 564,-1329 724,-1329 724,-898 564,-898"/>
<text text-anchor="middle" x="644" y="-1317" font-family="Helvetica,sans-Serif" font-size="10.00">CBlockAudioIf</text>
<polyline fill="none" stroke="black" points="564,-1310 724,-1310 "/>
<text text-anchor="start" x="572" y="-1298" font-family="Helvetica,sans-Serif" font-size="10.00"># long long m_iNumBlocks</text>
<text text-anchor="start" x="572" y="-1287" font-family="Helvetica,sans-Serif" font-size="10.00"># long long m_iCurrBlock</text>
<text text-anchor="start" x="572" y="-1276" font-family="Helvetica,sans-Serif" font-size="10.00"># long long m_iAudioLength</text>
<text text-anchor="start" x="572" y="-1265" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iBlockLength</text>
<text text-anchor="start" x="572" y="-1254" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iNumChannels</text>
<text text-anchor="start" x="572" y="-1243" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iHopLength</text>
<text text-anchor="start" x="572" y="-1232" font-family="Helvetica,sans-Serif" font-size="10.00"># float m_fSampleRate</text>
<polyline fill="none" stroke="black" points="564,-1225 724,-1225 "/>
<text text-anchor="start" x="572" y="-1213" font-family="Helvetica,sans-Serif" font-size="10.00">+ long long getNumBlocks</text>
<text text-anchor="start" x="572" y="-1202" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="572" y="-1191" font-family="Helvetica,sans-Serif" font-size="10.00">+ long long getLengthInSamples</text>
<text text-anchor="start" x="572" y="-1180" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="572" y="-1169" font-family="Helvetica,sans-Serif" font-size="10.00">+ float getTimeStamp</text>
<text text-anchor="start" x="572" y="-1158" font-family="Helvetica,sans-Serif" font-size="10.00">(long long iBlockIdx)</text>
<text text-anchor="start" x="572" y="-1147" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual bool isEndOfData</text>
<text text-anchor="start" x="572" y="-1136" font-family="Helvetica,sans-Serif" font-size="10.00">() const =0</text>
<text text-anchor="start" x="572" y="-1125" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual int getNextBlock</text>
<text text-anchor="start" x="572" y="-1114" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfBlock, float</text>
<text text-anchor="start" x="572" y="-1103" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfTimeStampInS=0)=0</text>
<text text-anchor="start" x="572" y="-1092" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="572" y="-1081" font-family="Helvetica,sans-Serif" font-size="10.00">(CBlockAudioIf *&amp;pCInstance,</text>
<text text-anchor="start" x="572" y="-1070" font-family="Helvetica,sans-Serif" font-size="10.00"> CAudioFileIf *pCAudioFile,</text>
<text text-anchor="start" x="572" y="-1059" font-family="Helvetica,sans-Serif" font-size="10.00"> int iBlockLength, int iHopLength)</text>
<text text-anchor="start" x="572" y="-1048" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="572" y="-1037" font-family="Helvetica,sans-Serif" font-size="10.00">(CBlockAudioIf *&amp;pCInstance,</text>
<text text-anchor="start" x="572" y="-1026" font-family="Helvetica,sans-Serif" font-size="10.00"> const float *pfAudioBuff,</text>
<text text-anchor="start" x="572" y="-1015" font-family="Helvetica,sans-Serif" font-size="10.00"> long long iAudioLength, int</text>
<text text-anchor="start" x="572" y="-1004" font-family="Helvetica,sans-Serif" font-size="10.00"> iBlockLength, int iHopLength,</text>
<text text-anchor="start" x="572" y="-993" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate)</text>
<text text-anchor="start" x="572" y="-982" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="572" y="-971" font-family="Helvetica,sans-Serif" font-size="10.00">(CBlockAudioIf *&amp;pCInstance)</text>
<text text-anchor="start" x="572" y="-960" font-family="Helvetica,sans-Serif" font-size="10.00"># CBlockAudioIf()</text>
<text text-anchor="start" x="572" y="-949" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CBlockAudioIf()</text>
<text text-anchor="start" x="572" y="-938" font-family="Helvetica,sans-Serif" font-size="10.00"># CBlockAudioIf(const</text>
<text text-anchor="start" x="572" y="-927" font-family="Helvetica,sans-Serif" font-size="10.00"> CBlockAudioIf &amp;that)</text>
<text text-anchor="start" x="572" y="-916" font-family="Helvetica,sans-Serif" font-size="10.00"># CBlockAudioIf &amp; operator</text>
<text text-anchor="start" x="572" y="-905" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CBlockAudioIf &amp;c)</text>
</a>
</g>
</g>
<!-- Node11&#45;&gt;Node9 -->
<g id="edge10" class="edge">
<title>Node11&#45;&gt;Node9</title>
<path fill="none" stroke="#404040" d="M575.39,-897.67C568.95,-878.47 562.43,-859.36 556,-841 555.21,-838.74 554.41,-836.47 553.61,-834.19"/>
<polygon fill="none" stroke="#404040" points="553.55,-834.03 547.78,-829.71 549.55,-822.72 555.32,-827.04 553.55,-834.03"/>
<text text-anchor="middle" x="600.5" y="-844" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCBlockAudio</text>
</g>
<!-- Node12&#45;&gt;Node9 -->
<g id="edge11" class="edge">
<title>Node12&#45;&gt;Node9</title>
<path fill="none" stroke="#404040" d="M460,-985.72C460,-940.2 460,-887.16 460,-834.87"/>
<polygon fill="none" stroke="#404040" points="460,-834.67 456,-828.67 460,-822.67 464,-828.67 460,-834.67"/>
<text text-anchor="middle" x="506" y="-844" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_ppCGammatone</text>
</g>
</g>
</svg>
        <g id="navigator" transform="translate(0 0)" fill="#404254">
                <rect fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width=".5" x="0" y="0" width="60" height="60"/>
                <use id="zoomplus" xlink:href="#zoomPlus" x="17" y="9" onmousedown="handleZoom(evt,'in')"/>
                <use id="zoomminus" xlink:href="#zoomMin" x="42" y="9" onmousedown="handleZoom(evt,'out')"/>
                <use id="reset" xlink:href="#resetDef" x="30" y="36" onmousedown="handleReset()"/>
                <g id="arrowUp" xlink:href="#dirArrow" transform="translate(30 24)" onmousedown="handlePan(0,-1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowUp.mouseover" end="arrowUp.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowRight" xlink:href="#dirArrow" transform="rotate(90) translate(36 -43)" onmousedown="handlePan(1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowRight.mouseover" end="arrowRight.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowDown" xlink:href="#dirArrow" transform="rotate(180) translate(-30 -48)" onmousedown="handlePan(0,1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowDown.mouseover" end="arrowDown.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowLeft" xlink:href="#dirArrow" transform="rotate(270) translate(-36 17)" onmousedown="handlePan(-1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowLeft.mouseover" end="arrowLeft.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
        </g>
        <svg viewBox="0 0 15 15" width="100%" height="30px" preserveAspectRatio="xMaxYMin meet">
         <g id="arrow_out" transform="scale(0.3 0.3)">
          <a xlink:href="a00385_org.svg" target="_base">
           <rect id="button" ry="5" rx="5" y="6" x="6" height="38" width="38"
                fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width="1.0"/>
           <path id="arrow"
             d="M 11.500037,31.436501 C 11.940474,20.09759 22.043105,11.32322 32.158766,21.979434 L 37.068811,17.246167 C 37.068811,17.246167 37.088388,32 37.088388,32 L 22.160133,31.978069 C 22.160133,31.978069 26.997745,27.140456 26.997745,27.140456 C 18.528582,18.264221 13.291696,25.230495 11.500037,31.436501 z"
             style="fill:#404040;"/>
          </a>
         </g>
        </svg>
</svg>
