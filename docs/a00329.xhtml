<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.13.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ACA: CFeatureSpectralFlux Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="clipboard.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="cookie.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">ACA<span id="projectnumber">&#160;0.3.1</span>
   </div>
   <div id="projectbrief">Example Code for Audio Content Analysis</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.13.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(0); });
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('a00329.xhtml',''); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pri-methods">Private Member Functions</a> &#124;
<a href="#pri-attribs">Private Attributes</a> &#124;
<a href="a00326.xhtml">List of all members</a>  </div>
  <div class="headertitle"><div class="title">CFeatureSpectralFlux Class Reference</div></div>
</div><!--header-->
<div class="contents">

<p>class for computation of the spectral flux  
 <a href="#details">More...</a></p>
<div class="dynheader">
Inheritance diagram for CFeatureSpectralFlux:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00328.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div class="dynheader">
Collaboration diagram for CFeatureSpectralFlux:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00327.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a1a45f132f54b2f2f3d63f0827dc8300f" id="r_a1a45f132f54b2f2f3d63f0827dc8300f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a1a45f132f54b2f2f3d63f0827dc8300f">CFeatureSpectralFlux</a> (<a class="el" href="a00469.xhtml#a47ca14941c604beb42d60164b3e5e6b3">CFeatureIf::Feature_t</a> eFeatureIdx, int iDataLength, float fSampleRate)</td></tr>
<tr class="separator:a1a45f132f54b2f2f3d63f0827dc8300f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3c5685b11c974c54df140122f7cbae9d" id="r_a3c5685b11c974c54df140122f7cbae9d"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a3c5685b11c974c54df140122f7cbae9d">~CFeatureSpectralFlux</a> ()</td></tr>
<tr class="separator:a3c5685b11c974c54df140122f7cbae9d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a01d9b56bba6b925332816534765b7723" id="r_a01d9b56bba6b925332816534765b7723"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a01d9b56bba6b925332816534765b7723">compFeature</a> (float *pfFeature, const float *pfIn) override</td></tr>
<tr class="separator:a01d9b56bba6b925332816534765b7723"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_a00473"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_methods_a00473')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="a00473.xhtml">CFeatureFromBlockIf</a></td></tr>
<tr class="memitem:a8bf822f58aa66fc4787c5528352575c0 inherit pub_methods_a00473" id="r_a8bf822f58aa66fc4787c5528352575c0"><td class="memItemLeft" align="right" valign="top">virtual int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00473.xhtml#a8bf822f58aa66fc4787c5528352575c0">getFeatureDimensions</a> () const</td></tr>
<tr class="separator:a8bf822f58aa66fc4787c5528352575c0 inherit pub_methods_a00473"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab6ab50f7ebebbabec7e1610bc04a3328 inherit pub_methods_a00473" id="r_ab6ab50f7ebebbabec7e1610bc04a3328"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00469.xhtml#a47ca14941c604beb42d60164b3e5e6b3">CFeatureIf::Feature_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00473.xhtml#ab6ab50f7ebebbabec7e1610bc04a3328">getFeatureIdx</a> () const</td></tr>
<tr class="separator:ab6ab50f7ebebbabec7e1610bc04a3328 inherit pub_methods_a00473"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a41daabd1afa9c2307c64b431fcf8da62 inherit pub_methods_a00473" id="r_a41daabd1afa9c2307c64b431fcf8da62"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a00263.xhtml#abb452686968e48b67397da5f97445f5b">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00473.xhtml#a41daabd1afa9c2307c64b431fcf8da62">hasAdditionalParam</a> () const</td></tr>
<tr class="separator:a41daabd1afa9c2307c64b431fcf8da62 inherit pub_methods_a00473"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7f3f62f3787b0ddc4c8938f5d54170af inherit pub_methods_a00473" id="r_a7f3f62f3787b0ddc4c8938f5d54170af"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00473.xhtml#a7f3f62f3787b0ddc4c8938f5d54170af">setAdditionalParam</a> (float fParamValue)</td></tr>
<tr class="separator:a7f3f62f3787b0ddc4c8938f5d54170af inherit pub_methods_a00473"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pri-methods" name="pri-methods"></a>
Private Member Functions</h2></td></tr>
<tr class="memitem:a3d14a66015eeea822a51bc8011e7ffa6" id="r_a3d14a66015eeea822a51bc8011e7ffa6"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a3d14a66015eeea822a51bc8011e7ffa6">CFeatureSpectralFlux</a> ()</td></tr>
<tr class="separator:a3d14a66015eeea822a51bc8011e7ffa6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a384605d1f9d59006342d548e7da1fd5c" id="r_a384605d1f9d59006342d548e7da1fd5c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a384605d1f9d59006342d548e7da1fd5c">CFeatureSpectralFlux</a> (const <a class="el" href="a00329.xhtml">CFeatureSpectralFlux</a> &amp;that)</td></tr>
<tr class="memdesc:a384605d1f9d59006342d548e7da1fd5c"><td class="mdescLeft">&#160;</td><td class="mdescRight">disallow copy construction  <br /></td></tr>
<tr class="separator:a384605d1f9d59006342d548e7da1fd5c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7edd2e4909ab2b6bda983779fa3b7fed" id="r_a7edd2e4909ab2b6bda983779fa3b7fed"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00329.xhtml">CFeatureSpectralFlux</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a7edd2e4909ab2b6bda983779fa3b7fed">operator=</a> (const <a class="el" href="a00329.xhtml">CFeatureSpectralFlux</a> &amp;c)</td></tr>
<tr class="separator:a7edd2e4909ab2b6bda983779fa3b7fed"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pri-attribs" name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr class="memitem:a0e7559e5ea0ca227f148f06aaa8edc06" id="r_a0e7559e5ea0ca227f148f06aaa8edc06"><td class="memItemLeft" align="right" valign="top">float *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a0e7559e5ea0ca227f148f06aaa8edc06">m_pfPrevSpec</a> = 0</td></tr>
<tr class="memdesc:a0e7559e5ea0ca227f148f06aaa8edc06"><td class="mdescLeft">&#160;</td><td class="mdescRight">memory of previous spectrum  <br /></td></tr>
<tr class="separator:a0e7559e5ea0ca227f148f06aaa8edc06"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="inherited" name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_static_methods_a00473"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_static_methods_a00473')"><img src="closed.png" alt="-"/>&#160;Static Public Member Functions inherited from <a class="el" href="a00473.xhtml">CFeatureFromBlockIf</a></td></tr>
<tr class="memitem:a6d3ca4f66582ae352e3addfd7f99a752 inherit pub_static_methods_a00473" id="r_a6d3ca4f66582ae352e3addfd7f99a752"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00473.xhtml#a6d3ca4f66582ae352e3addfd7f99a752">create</a> (<a class="el" href="a00473.xhtml">CFeatureFromBlockIf</a> *&amp;pCInstance, <a class="el" href="a00469.xhtml#a47ca14941c604beb42d60164b3e5e6b3">CFeatureIf::Feature_t</a> eFeatureIdx, int iDataLength, float fSampleRate=1.F)</td></tr>
<tr class="separator:a6d3ca4f66582ae352e3addfd7f99a752 inherit pub_static_methods_a00473"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a300e7b2134b2bd0faaa24cfecbd9cb51 inherit pub_static_methods_a00473" id="r_a300e7b2134b2bd0faaa24cfecbd9cb51"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00473.xhtml#a300e7b2134b2bd0faaa24cfecbd9cb51">destroy</a> (<a class="el" href="a00473.xhtml">CFeatureFromBlockIf</a> *&amp;pCInstance)</td></tr>
<tr class="separator:a300e7b2134b2bd0faaa24cfecbd9cb51 inherit pub_static_methods_a00473"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a880a58f05522dfd1f0f16f26c34703db inherit pub_static_methods_a00473" id="r_a880a58f05522dfd1f0f16f26c34703db"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00473.xhtml#a880a58f05522dfd1f0f16f26c34703db">compFeatureSpectralCentroid</a> (const float *pfMagSpec, int iDataLength, float fSampleRate=1.F)</td></tr>
<tr class="separator:a880a58f05522dfd1f0f16f26c34703db inherit pub_static_methods_a00473"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a15df133306497e4f85929692354f378a inherit pub_static_methods_a00473" id="r_a15df133306497e4f85929692354f378a"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00473.xhtml#a15df133306497e4f85929692354f378a">compFeatureSpectralCrestFactor</a> (const float *pfMagSpec, int iDataLength, float fSampleRate=1.F)</td></tr>
<tr class="separator:a15df133306497e4f85929692354f378a inherit pub_static_methods_a00473"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9e03b3181d7ff9d8a9b0eaedabff9899 inherit pub_static_methods_a00473" id="r_a9e03b3181d7ff9d8a9b0eaedabff9899"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00473.xhtml#a9e03b3181d7ff9d8a9b0eaedabff9899">compFeatureSpectralDecrease</a> (const float *pfMagSpec, int iDataLength, float fSampleRate=1.F)</td></tr>
<tr class="separator:a9e03b3181d7ff9d8a9b0eaedabff9899 inherit pub_static_methods_a00473"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a361ef81afe12623645546fbbeab30b14 inherit pub_static_methods_a00473" id="r_a361ef81afe12623645546fbbeab30b14"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00473.xhtml#a361ef81afe12623645546fbbeab30b14">compFeatureSpectralFlatness</a> (const float *pfMagSpec, int iDataLength, float fSampleRate=1.F)</td></tr>
<tr class="separator:a361ef81afe12623645546fbbeab30b14 inherit pub_static_methods_a00473"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a42b11faa0f65881702ad7dcc1398ec5f inherit pub_static_methods_a00473" id="r_a42b11faa0f65881702ad7dcc1398ec5f"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00473.xhtml#a42b11faa0f65881702ad7dcc1398ec5f">compFeatureSpectralFlux</a> (const float *pfMagSpec, const float *pfPrevSpec, int iDataLength, float fSampleRate=1.F)</td></tr>
<tr class="separator:a42b11faa0f65881702ad7dcc1398ec5f inherit pub_static_methods_a00473"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aff5ebe0708311c49ba85c03c4546b6cf inherit pub_static_methods_a00473" id="r_aff5ebe0708311c49ba85c03c4546b6cf"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00473.xhtml#aff5ebe0708311c49ba85c03c4546b6cf">compFeatureSpectralKurtosis</a> (const float *pfMagSpec, int iDataLength, float fSampleRate=1.F)</td></tr>
<tr class="separator:aff5ebe0708311c49ba85c03c4546b6cf inherit pub_static_methods_a00473"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a28b9430a480ce697a7dbd73527057ac6 inherit pub_static_methods_a00473" id="r_a28b9430a480ce697a7dbd73527057ac6"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00473.xhtml#a28b9430a480ce697a7dbd73527057ac6">compFeatureSpectralRolloff</a> (const float *pfMagSpec, int iDataLength, float fSampleRate=1.F, float fKappa=.85F)</td></tr>
<tr class="separator:a28b9430a480ce697a7dbd73527057ac6 inherit pub_static_methods_a00473"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af130d46bb6a964262acb138fc7b7b9fd inherit pub_static_methods_a00473" id="r_af130d46bb6a964262acb138fc7b7b9fd"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00473.xhtml#af130d46bb6a964262acb138fc7b7b9fd">compFeatureSpectralSkewness</a> (const float *pfMagSpec, int iDataLength, float fSampleRate=1.F)</td></tr>
<tr class="separator:af130d46bb6a964262acb138fc7b7b9fd inherit pub_static_methods_a00473"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8c8ded721d053ed4f34565a1392993fc inherit pub_static_methods_a00473" id="r_a8c8ded721d053ed4f34565a1392993fc"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00473.xhtml#a8c8ded721d053ed4f34565a1392993fc">compFeatureSpectralSlope</a> (const float *pfMagSpec, int iDataLength, float fSampleRate=1.F)</td></tr>
<tr class="separator:a8c8ded721d053ed4f34565a1392993fc inherit pub_static_methods_a00473"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa97614c73430e57facec7a88bee49c9f inherit pub_static_methods_a00473" id="r_aa97614c73430e57facec7a88bee49c9f"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00473.xhtml#aa97614c73430e57facec7a88bee49c9f">compFeatureSpectralSpread</a> (const float *pfMagSpec, int iDataLength, float fSampleRate=1.F)</td></tr>
<tr class="separator:aa97614c73430e57facec7a88bee49c9f inherit pub_static_methods_a00473"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abdd05ed6160f4154fd4aae2816939f5e inherit pub_static_methods_a00473" id="r_abdd05ed6160f4154fd4aae2816939f5e"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00473.xhtml#abdd05ed6160f4154fd4aae2816939f5e">compFeatureSpectralTonalPowerRatio</a> (const float *pfMagSpec, int iDataLength, float fSampleRate=1.F, float fThresh=5e-4)</td></tr>
<tr class="separator:abdd05ed6160f4154fd4aae2816939f5e inherit pub_static_methods_a00473"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a665af5d570876cc41adc56185201cd8c inherit pub_static_methods_a00473" id="r_a665af5d570876cc41adc56185201cd8c"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00473.xhtml#a665af5d570876cc41adc56185201cd8c">compFeatureTimeAcfCoeff</a> (const float *pfSamples, int iDataLength, float fSampleRate=1.F, int iEta=19)</td></tr>
<tr class="separator:a665af5d570876cc41adc56185201cd8c inherit pub_static_methods_a00473"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8343fab849f52e77639b46e759e7e49d inherit pub_static_methods_a00473" id="r_a8343fab849f52e77639b46e759e7e49d"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00473.xhtml#a8343fab849f52e77639b46e759e7e49d">compFeatureTimePeakEnvelope</a> (const float *pfSamples, int iDataLength, float fSampleRate=1.F)</td></tr>
<tr class="separator:a8343fab849f52e77639b46e759e7e49d inherit pub_static_methods_a00473"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a46500f9eaa49f3860afa5f1fce555415 inherit pub_static_methods_a00473" id="r_a46500f9eaa49f3860afa5f1fce555415"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00473.xhtml#a46500f9eaa49f3860afa5f1fce555415">compFeatureTimeRms</a> (const float *pfSamples, int iDataLength, float fSampleRate=1.F)</td></tr>
<tr class="separator:a46500f9eaa49f3860afa5f1fce555415 inherit pub_static_methods_a00473"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4eca7f209c771fb5008fa08facffd598 inherit pub_static_methods_a00473" id="r_a4eca7f209c771fb5008fa08facffd598"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00473.xhtml#a4eca7f209c771fb5008fa08facffd598">compFeatureTimeStd</a> (const float *pfSamples, int iDataLength, float fSampleRate=1.F)</td></tr>
<tr class="separator:a4eca7f209c771fb5008fa08facffd598 inherit pub_static_methods_a00473"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:add9e6742349500c1323607b2508d311d inherit pub_static_methods_a00473" id="r_add9e6742349500c1323607b2508d311d"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00473.xhtml#add9e6742349500c1323607b2508d311d">compFeatureTimeZeroCrossingRate</a> (const float *pfSamples, int iDataLength, float fSampleRate=1.F)</td></tr>
<tr class="separator:add9e6742349500c1323607b2508d311d inherit pub_static_methods_a00473"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_static_attribs_a00473"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_static_attribs_a00473')"><img src="closed.png" alt="-"/>&#160;Static Public Attributes inherited from <a class="el" href="a00473.xhtml">CFeatureFromBlockIf</a></td></tr>
<tr class="memitem:a23b1d6639637a13587d5529a57f3bf78 inherit pub_static_attribs_a00473" id="r_a23b1d6639637a13587d5529a57f3bf78"><td class="memItemLeft" align="right" valign="top">static const float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00473.xhtml#a23b1d6639637a13587d5529a57f3bf78">m_kfFloatThresh</a> = 1e-30F</td></tr>
<tr class="memdesc:a23b1d6639637a13587d5529a57f3bf78 inherit pub_static_attribs_a00473"><td class="mdescLeft">&#160;</td><td class="mdescRight">below this we just assume everything's zero  <br /></td></tr>
<tr class="separator:a23b1d6639637a13587d5529a57f3bf78 inherit pub_static_attribs_a00473"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_methods_a00473"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pro_methods_a00473')"><img src="closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="a00473.xhtml">CFeatureFromBlockIf</a></td></tr>
<tr class="memitem:a483bca508e2817799a3173a6180d245e inherit pro_methods_a00473" id="r_a483bca508e2817799a3173a6180d245e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00473.xhtml#a483bca508e2817799a3173a6180d245e">CFeatureFromBlockIf</a> ()</td></tr>
<tr class="separator:a483bca508e2817799a3173a6180d245e inherit pro_methods_a00473"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a26bc5632321408486bf3fccfa3fbfa1c inherit pro_methods_a00473" id="r_a26bc5632321408486bf3fccfa3fbfa1c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00473.xhtml#a26bc5632321408486bf3fccfa3fbfa1c">CFeatureFromBlockIf</a> (<a class="el" href="a00469.xhtml#a47ca14941c604beb42d60164b3e5e6b3">CFeatureIf::Feature_t</a> eFeatureIdx, int iDataLength, float fSampleRate)</td></tr>
<tr class="separator:a26bc5632321408486bf3fccfa3fbfa1c inherit pro_methods_a00473"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab3e21cffc4d8fb5851c9564671cad2cd inherit pro_methods_a00473" id="r_ab3e21cffc4d8fb5851c9564671cad2cd"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00473.xhtml#ab3e21cffc4d8fb5851c9564671cad2cd">~CFeatureFromBlockIf</a> ()</td></tr>
<tr class="separator:ab3e21cffc4d8fb5851c9564671cad2cd inherit pro_methods_a00473"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3ca29d1d628143cb11f1c3400f6b23c4 inherit pro_methods_a00473" id="r_a3ca29d1d628143cb11f1c3400f6b23c4"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00473.xhtml#a3ca29d1d628143cb11f1c3400f6b23c4">CFeatureFromBlockIf</a> (const <a class="el" href="a00473.xhtml">CFeatureFromBlockIf</a> &amp;that)</td></tr>
<tr class="separator:a3ca29d1d628143cb11f1c3400f6b23c4 inherit pro_methods_a00473"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af9650d7b6bb5362a2c4be9154e777089 inherit pro_methods_a00473" id="r_af9650d7b6bb5362a2c4be9154e777089"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00473.xhtml">CFeatureFromBlockIf</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00473.xhtml#af9650d7b6bb5362a2c4be9154e777089">operator=</a> (const <a class="el" href="a00473.xhtml">CFeatureFromBlockIf</a> &amp;c)</td></tr>
<tr class="separator:af9650d7b6bb5362a2c4be9154e777089 inherit pro_methods_a00473"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_a00473"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pro_attribs_a00473')"><img src="closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="a00473.xhtml">CFeatureFromBlockIf</a></td></tr>
<tr class="memitem:a3cdaa6a50139576cf1aaa73f4b0d3b6f inherit pro_attribs_a00473" id="r_a3cdaa6a50139576cf1aaa73f4b0d3b6f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00469.xhtml#a47ca14941c604beb42d60164b3e5e6b3">CFeatureIf::Feature_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00473.xhtml#a3cdaa6a50139576cf1aaa73f4b0d3b6f">m_eFeatureIdx</a> = <a class="el" href="a00469.xhtml#a47ca14941c604beb42d60164b3e5e6b3abe9b4914b84bc00da1aacb5f0068545d">CFeatureIf::kNumFeatures</a></td></tr>
<tr class="memdesc:a3cdaa6a50139576cf1aaa73f4b0d3b6f inherit pro_attribs_a00473"><td class="mdescLeft">&#160;</td><td class="mdescRight">index of feature to extract  <br /></td></tr>
<tr class="separator:a3cdaa6a50139576cf1aaa73f4b0d3b6f inherit pro_attribs_a00473"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2fefdb1b1217edd46c2b4e9336fa2aed inherit pro_attribs_a00473" id="r_a2fefdb1b1217edd46c2b4e9336fa2aed"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00473.xhtml#a2fefdb1b1217edd46c2b4e9336fa2aed">m_iDataLength</a> = 0</td></tr>
<tr class="memdesc:a2fefdb1b1217edd46c2b4e9336fa2aed inherit pro_attribs_a00473"><td class="mdescLeft">&#160;</td><td class="mdescRight">block length  <br /></td></tr>
<tr class="separator:a2fefdb1b1217edd46c2b4e9336fa2aed inherit pro_attribs_a00473"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a75ac4ef94667058662a8100bb1c1e1cd inherit pro_attribs_a00473" id="r_a75ac4ef94667058662a8100bb1c1e1cd"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00473.xhtml#a75ac4ef94667058662a8100bb1c1e1cd">m_fSampleRate</a> = 0</td></tr>
<tr class="memdesc:a75ac4ef94667058662a8100bb1c1e1cd inherit pro_attribs_a00473"><td class="mdescLeft">&#160;</td><td class="mdescRight">sample rate  <br /></td></tr>
<tr class="separator:a75ac4ef94667058662a8100bb1c1e1cd inherit pro_attribs_a00473"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abcd848057f825a60c88ca74394fbee6d inherit pro_attribs_a00473" id="r_abcd848057f825a60c88ca74394fbee6d"><td class="memItemLeft" align="right" valign="top">const std::map&lt; <a class="el" href="a00469.xhtml#a47ca14941c604beb42d60164b3e5e6b3">CFeatureIf::Feature_t</a>, std::function&lt; float(const float *, int, float)&gt; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00473.xhtml#abcd848057f825a60c88ca74394fbee6d">m_DispatchMap</a></td></tr>
<tr class="separator:abcd848057f825a60c88ca74394fbee6d inherit pro_attribs_a00473"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>class for computation of the spectral flux </p>

<p class="definition">Definition at line <a class="el" href="a00047_source.xhtml#l00343">343</a> of file <a class="el" href="a00047_source.xhtml">FeatureFromBlock.cpp</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a1a45f132f54b2f2f3d63f0827dc8300f" name="a1a45f132f54b2f2f3d63f0827dc8300f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1a45f132f54b2f2f3d63f0827dc8300f">&#9670;&#160;</a></span>CFeatureSpectralFlux() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">CFeatureSpectralFlux::CFeatureSpectralFlux </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="a00469.xhtml#a47ca14941c604beb42d60164b3e5e6b3">CFeatureIf::Feature_t</a></td>          <td class="paramname"><span class="paramname"><em>eFeatureIdx</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>iDataLength</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float</td>          <td class="paramname"><span class="paramname"><em>fSampleRate</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel inline">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="a00047_source.xhtml#l00346">346</a> of file <a class="el" href="a00047_source.xhtml">FeatureFromBlock.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  346</span>                                                                                              : <a class="code hl_function" href="a00473.xhtml#a483bca508e2817799a3173a6180d245e">CFeatureFromBlockIf</a>(eFeatureIdx, iDataLength, fSampleRate)</div>
<div class="line"><span class="lineno">  347</span>    {</div>
<div class="line"><span class="lineno">  348</span>        <a class="code hl_function" href="a00505.xhtml#abaadac98b1cad18b7b568852bc951696">CVector::alloc</a>(<a class="code hl_variable" href="#a0e7559e5ea0ca227f148f06aaa8edc06">m_pfPrevSpec</a>, <a class="code hl_variable" href="a00473.xhtml#a2fefdb1b1217edd46c2b4e9336fa2aed">m_iDataLength</a>);</div>
<div class="line"><span class="lineno">  349</span>        <a class="code hl_function" href="a00505.xhtml#a6dbb3f9f480568b60f7fe50090d20003">CVector::setZero</a>(<a class="code hl_variable" href="#a0e7559e5ea0ca227f148f06aaa8edc06">m_pfPrevSpec</a>, <a class="code hl_variable" href="a00473.xhtml#a2fefdb1b1217edd46c2b4e9336fa2aed">m_iDataLength</a>);</div>
<div class="line"><span class="lineno">  350</span>    };</div>
<div class="ttc" id="aa00329_xhtml_a0e7559e5ea0ca227f148f06aaa8edc06"><div class="ttname"><a href="#a0e7559e5ea0ca227f148f06aaa8edc06">CFeatureSpectralFlux::m_pfPrevSpec</a></div><div class="ttdeci">float * m_pfPrevSpec</div><div class="ttdoc">memory of previous spectrum</div><div class="ttdef"><b>Definition</b> <a href="a00047_source.xhtml#l00371">FeatureFromBlock.cpp:371</a></div></div>
<div class="ttc" id="aa00473_xhtml_a2fefdb1b1217edd46c2b4e9336fa2aed"><div class="ttname"><a href="a00473.xhtml#a2fefdb1b1217edd46c2b4e9336fa2aed">CFeatureFromBlockIf::m_iDataLength</a></div><div class="ttdeci">int m_iDataLength</div><div class="ttdoc">block length</div><div class="ttdef"><b>Definition</b> <a href="a00227_source.xhtml#l00196">FeatureFromBlock.h:196</a></div></div>
<div class="ttc" id="aa00473_xhtml_a483bca508e2817799a3173a6180d245e"><div class="ttname"><a href="a00473.xhtml#a483bca508e2817799a3173a6180d245e">CFeatureFromBlockIf::CFeatureFromBlockIf</a></div><div class="ttdeci">CFeatureFromBlockIf()</div><div class="ttdef"><b>Definition</b> <a href="a00227_source.xhtml#l00188">FeatureFromBlock.h:188</a></div></div>
<div class="ttc" id="aa00505_xhtml_a6dbb3f9f480568b60f7fe50090d20003"><div class="ttname"><a href="a00505.xhtml#a6dbb3f9f480568b60f7fe50090d20003">CVector::setZero</a></div><div class="ttdeci">static void setZero(T *ptSrcDest, long long iLength)</div><div class="ttdef"><b>Definition</b> <a href="a00185_source.xhtml#l00114">Vector.h:114</a></div></div>
<div class="ttc" id="aa00505_xhtml_abaadac98b1cad18b7b568852bc951696"><div class="ttname"><a href="a00505.xhtml#abaadac98b1cad18b7b568852bc951696">CVector::alloc</a></div><div class="ttdeci">static void alloc(T *&amp;ptVec, long long iLength)</div><div class="ttdef"><b>Definition</b> <a href="a00185_source.xhtml#l00025">Vector.h:25</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00185_source.xhtml#l00025">CVector::alloc()</a>, <a class="el" href="a00227_source.xhtml#l00188">CFeatureFromBlockIf::CFeatureFromBlockIf()</a>, <a class="el" href="a00227_source.xhtml#l00196">CFeatureFromBlockIf::m_iDataLength</a>, <a class="el" href="a00047_source.xhtml#l00371">m_pfPrevSpec</a>, and <a class="el" href="a00185_source.xhtml#l00114">CVector::setZero()</a>.</p>

<p class="reference">Referenced by <a class="el" href="#a384605d1f9d59006342d548e7da1fd5c">CFeatureSpectralFlux()</a>, and <a class="el" href="#a7edd2e4909ab2b6bda983779fa3b7fed">operator=()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00329_a1a45f132f54b2f2f3d63f0827dc8300f_cgraph.svg" width="530" height="152"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00329_a1a45f132f54b2f2f3d63f0827dc8300f_icgraph.svg" width="364" height="118"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a3c5685b11c974c54df140122f7cbae9d" name="a3c5685b11c974c54df140122f7cbae9d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3c5685b11c974c54df140122f7cbae9d">&#9670;&#160;</a></span>~CFeatureSpectralFlux()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual CFeatureSpectralFlux::~CFeatureSpectralFlux </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel inline">inline</span><span class="mlabel virtual">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="a00047_source.xhtml#l00352">352</a> of file <a class="el" href="a00047_source.xhtml">FeatureFromBlock.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  353</span>    {</div>
<div class="line"><span class="lineno">  354</span>        <a class="code hl_function" href="a00505.xhtml#aa86bdb0c663d4d52f2765793756f8737">CVector::free</a>(<a class="code hl_variable" href="#a0e7559e5ea0ca227f148f06aaa8edc06">m_pfPrevSpec</a>);</div>
<div class="line"><span class="lineno">  355</span>    };</div>
<div class="ttc" id="aa00505_xhtml_aa86bdb0c663d4d52f2765793756f8737"><div class="ttname"><a href="a00505.xhtml#aa86bdb0c663d4d52f2765793756f8737">CVector::free</a></div><div class="ttdeci">static void free(T *&amp;ptVec)</div><div class="ttdef"><b>Definition</b> <a href="a00185_source.xhtml#l00057">Vector.h:57</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00185_source.xhtml#l00057">CVector::free()</a>, and <a class="el" href="a00047_source.xhtml#l00371">m_pfPrevSpec</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00329_a3c5685b11c974c54df140122f7cbae9d_cgraph.svg" width="315" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a3d14a66015eeea822a51bc8011e7ffa6" name="a3d14a66015eeea822a51bc8011e7ffa6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3d14a66015eeea822a51bc8011e7ffa6">&#9670;&#160;</a></span>CFeatureSpectralFlux() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">CFeatureSpectralFlux::CFeatureSpectralFlux </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel inline">inline</span><span class="mlabel private">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="a00047_source.xhtml#l00367">367</a> of file <a class="el" href="a00047_source.xhtml">FeatureFromBlock.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  367</span>{};</div>
</div><!-- fragment -->
</div>
</div>
<a id="a384605d1f9d59006342d548e7da1fd5c" name="a384605d1f9d59006342d548e7da1fd5c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a384605d1f9d59006342d548e7da1fd5c">&#9670;&#160;</a></span>CFeatureSpectralFlux() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">CFeatureSpectralFlux::CFeatureSpectralFlux </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="a00329.xhtml">CFeatureSpectralFlux</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>that</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel private">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>disallow copy construction </p>

<p class="reference">References <a class="el" href="a00047_source.xhtml#l00346">CFeatureSpectralFlux()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00329_a384605d1f9d59006342d548e7da1fd5c_cgraph.svg" width="100%" height="414"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a01d9b56bba6b925332816534765b7723" name="a01d9b56bba6b925332816534765b7723"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a01d9b56bba6b925332816534765b7723">&#9670;&#160;</a></span>compFeature()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> CFeatureSpectralFlux::compFeature </td>
          <td>(</td>
          <td class="paramtype">float *</td>          <td class="paramname"><span class="paramname"><em>pfFeature</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float *</td>          <td class="paramname"><span class="paramname"><em>pfIn</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel inline">inline</span><span class="mlabel override">override</span><span class="mlabel virtual">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>performs the FeatureFromBlock computation </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pfFeature</td><td>feature result (user-allocated, to be written, length from <a class="el" href="a00473.xhtml#a8bf822f58aa66fc4787c5528352575c0">CFeatureFromBlockIf::getFeatureDimensions</a>) </td></tr>
    <tr><td class="paramname">pfIn</td><td>input data of length iDataLength </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> </dd></dl>

<p>Reimplemented from <a class="el" href="a00473.xhtml#a7eea1378e1f161f7a69c4723405efa8a">CFeatureFromBlockIf</a>.</p>

<p class="definition">Definition at line <a class="el" href="a00047_source.xhtml#l00357">357</a> of file <a class="el" href="a00047_source.xhtml">FeatureFromBlock.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  358</span>    {</div>
<div class="line"><span class="lineno">  359</span>        *pfFeature = <a class="code hl_function" href="a00473.xhtml#a42b11faa0f65881702ad7dcc1398ec5f">compFeatureSpectralFlux</a>(pfIn, <a class="code hl_variable" href="#a0e7559e5ea0ca227f148f06aaa8edc06">m_pfPrevSpec</a>, <a class="code hl_variable" href="a00473.xhtml#a2fefdb1b1217edd46c2b4e9336fa2aed">m_iDataLength</a>, <a class="code hl_variable" href="a00473.xhtml#a75ac4ef94667058662a8100bb1c1e1cd">m_fSampleRate</a>);</div>
<div class="line"><span class="lineno">  360</span> </div>
<div class="line"><span class="lineno">  361</span>        <a class="code hl_function" href="a00505.xhtml#ad7c5cba73e439adac77778f61c9418f0">CVector::copy</a>(<a class="code hl_variable" href="#a0e7559e5ea0ca227f148f06aaa8edc06">m_pfPrevSpec</a>, pfIn, <a class="code hl_variable" href="a00473.xhtml#a2fefdb1b1217edd46c2b4e9336fa2aed">m_iDataLength</a>);</div>
<div class="line"><span class="lineno">  362</span> </div>
<div class="line"><span class="lineno">  363</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><span class="lineno">  364</span>    };</div>
<div class="ttc" id="aa00167_xhtml_a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b"><div class="ttname"><a href="a00167.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a></div><div class="ttdeci">@ kNoError</div><div class="ttdef"><b>Definition</b> <a href="a00167_source.xhtml#l00006">ErrorDef.h:6</a></div></div>
<div class="ttc" id="aa00473_xhtml_a42b11faa0f65881702ad7dcc1398ec5f"><div class="ttname"><a href="a00473.xhtml#a42b11faa0f65881702ad7dcc1398ec5f">CFeatureFromBlockIf::compFeatureSpectralFlux</a></div><div class="ttdeci">static float compFeatureSpectralFlux(const float *pfMagSpec, const float *pfPrevSpec, int iDataLength, float fSampleRate=1.F)</div><div class="ttdef"><b>Definition</b> <a href="a00047_source.xhtml#l00093">FeatureFromBlock.cpp:93</a></div></div>
<div class="ttc" id="aa00473_xhtml_a75ac4ef94667058662a8100bb1c1e1cd"><div class="ttname"><a href="a00473.xhtml#a75ac4ef94667058662a8100bb1c1e1cd">CFeatureFromBlockIf::m_fSampleRate</a></div><div class="ttdeci">float m_fSampleRate</div><div class="ttdoc">sample rate</div><div class="ttdef"><b>Definition</b> <a href="a00227_source.xhtml#l00197">FeatureFromBlock.h:197</a></div></div>
<div class="ttc" id="aa00505_xhtml_ad7c5cba73e439adac77778f61c9418f0"><div class="ttname"><a href="a00505.xhtml#ad7c5cba73e439adac77778f61c9418f0">CVector::copy</a></div><div class="ttdeci">static void copy(T *ptDest, const T *ptSrc, long long int iLength)</div><div class="ttdef"><b>Definition</b> <a href="a00185_source.xhtml#l00041">Vector.h:41</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00047_source.xhtml#l00093">CFeatureFromBlockIf::compFeatureSpectralFlux()</a>, <a class="el" href="a00185_source.xhtml#l00041">CVector::copy()</a>, <a class="el" href="a00167_source.xhtml#l00006">kNoError</a>, <a class="el" href="a00227_source.xhtml#l00197">CFeatureFromBlockIf::m_fSampleRate</a>, <a class="el" href="a00227_source.xhtml#l00196">CFeatureFromBlockIf::m_iDataLength</a>, and <a class="el" href="a00047_source.xhtml#l00371">m_pfPrevSpec</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00329_a01d9b56bba6b925332816534765b7723_cgraph.svg" width="380" height="102"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a7edd2e4909ab2b6bda983779fa3b7fed" name="a7edd2e4909ab2b6bda983779fa3b7fed"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7edd2e4909ab2b6bda983779fa3b7fed">&#9670;&#160;</a></span>operator=()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00329.xhtml">CFeatureSpectralFlux</a> &amp; CFeatureSpectralFlux::operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="a00329.xhtml">CFeatureSpectralFlux</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>c</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel private">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="reference">References <a class="el" href="a00047_source.xhtml#l00346">CFeatureSpectralFlux()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00329_a7edd2e4909ab2b6bda983779fa3b7fed_cgraph.svg" width="100%" height="414"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="a0e7559e5ea0ca227f148f06aaa8edc06" name="a0e7559e5ea0ca227f148f06aaa8edc06"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0e7559e5ea0ca227f148f06aaa8edc06">&#9670;&#160;</a></span>m_pfPrevSpec</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float* CFeatureSpectralFlux::m_pfPrevSpec = 0</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel private">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>memory of previous spectrum </p>

<p class="definition">Definition at line <a class="el" href="a00047_source.xhtml#l00371">371</a> of file <a class="el" href="a00047_source.xhtml">FeatureFromBlock.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00047_source.xhtml#l00346">CFeatureSpectralFlux()</a>, <a class="el" href="a00047_source.xhtml#l00357">compFeature()</a>, and <a class="el" href="a00047_source.xhtml#l00352">~CFeatureSpectralFlux()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="a00047_source.xhtml">FeatureFromBlock.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="a00329.xhtml">CFeatureSpectralFlux</a></li>
    <li class="footer">Generated on Sat Jan 11 2025 18:58:05 for ACA by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.13.1 </li>
  </ul>
</div>
</body>
</html>
