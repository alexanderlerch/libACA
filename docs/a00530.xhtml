<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.5"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ACA: CSpectrogramIf Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">ACA<span id="projectnumber">&#160;0.3.1</span>
   </div>
   <div id="projectbrief">Example Code for Audio Content Analysis</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.5 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('a00530.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="a00527.xhtml">List of all members</a>  </div>
  <div class="headertitle"><div class="title">CSpectrogramIf Class Reference</div></div>
</div><!--header-->
<div class="contents">

<p>class for computation of a magnitude spectrogram from either a file or a vector  
 <a href="a00530.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="a00218_source.xhtml">Spectrogram.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for CSpectrogramIf:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00529.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<div class="dynheader">
Collaboration diagram for CSpectrogramIf:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00528.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="nested-classes" name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00534.xhtml">MelSpectrogramConfig_t</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">structure holding configuration specifics for the mel spectrogram computation  <a href="a00534.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-types" name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:aadd5bf0e8b40d9ba74dd66ce28bafbcf"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00530.xhtml#aadd5bf0e8b40d9ba74dd66ce28bafbcf">AxisLabel_t</a> { <a class="el" href="a00530.xhtml#aadd5bf0e8b40d9ba74dd66ce28bafbcfa0ae125df6dd5dd61b17eed69fc25c61d">kFrequencyInHz</a>
, <a class="el" href="a00530.xhtml#aadd5bf0e8b40d9ba74dd66ce28bafbcfa60478da724acf03bab5f69ae664dbe58">kTimeInS</a>
, <a class="el" href="a00530.xhtml#aadd5bf0e8b40d9ba74dd66ce28bafbcfaffe490e57f97386928481c89dfc849b9">kNumAxisLabels</a>
 }</td></tr>
<tr class="separator:aadd5bf0e8b40d9ba74dd66ce28bafbcf"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:afb50af1070f5876b4706f5891879fcd8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00158.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00530.xhtml#afb50af1070f5876b4706f5891879fcd8">getSpectrogramDimensions</a> (int &amp;iNumRows, int &amp;iNumCols) const</td></tr>
<tr class="separator:afb50af1070f5876b4706f5891879fcd8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2efaeb2df2ddfdc633ba53b2bb49b528"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00158.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00530.xhtml#a2efaeb2df2ddfdc633ba53b2bb49b528">getSpectrogramAxisVectors</a> (float *pfAxisTicks, enum <a class="el" href="a00530.xhtml#aadd5bf0e8b40d9ba74dd66ce28bafbcf">AxisLabel_t</a> eAxisLabel) const</td></tr>
<tr class="separator:a2efaeb2df2ddfdc633ba53b2bb49b528"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae041a770ec2b092761d9a88cc87946bb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00158.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00530.xhtml#ae041a770ec2b092761d9a88cc87946bb">compSpectrogram</a> (float **ppfSpectrogram)</td></tr>
<tr class="separator:ae041a770ec2b092761d9a88cc87946bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af50a3669266ad696a1159b1bb80b1c8a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00158.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00530.xhtml#af50a3669266ad696a1159b1bb80b1c8a">getMelSpectrogramDimensions</a> (int &amp;iNumRows, int &amp;iNumCols, const <a class="el" href="a00534.xhtml">MelSpectrogramConfig_t</a> *pMelSpecConfig) const</td></tr>
<tr class="separator:af50a3669266ad696a1159b1bb80b1c8a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afbc5337ad3646cbba2b189323de6ce3a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00158.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00530.xhtml#afbc5337ad3646cbba2b189323de6ce3a">getMelSpectrogramAxisVectors</a> (float *pfAxisTicks, enum <a class="el" href="a00530.xhtml#aadd5bf0e8b40d9ba74dd66ce28bafbcf">AxisLabel_t</a> eAxisLabel, const <a class="el" href="a00534.xhtml">MelSpectrogramConfig_t</a> *pMelSpecConfig)</td></tr>
<tr class="separator:afbc5337ad3646cbba2b189323de6ce3a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae89af275cdd54029bbf7f0f25ddf7945"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00158.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00530.xhtml#ae89af275cdd54029bbf7f0f25ddf7945">compMelSpectrogram</a> (float **ppfMelSpectrogram, const <a class="el" href="a00534.xhtml">MelSpectrogramConfig_t</a> *pMelSpecConfig)</td></tr>
<tr class="separator:ae89af275cdd54029bbf7f0f25ddf7945"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-static-methods" name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:acd73d8c1aaaed8b188de6b8bf2103139"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="a00158.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00530.xhtml#acd73d8c1aaaed8b188de6b8bf2103139">create</a> (<a class="el" href="a00530.xhtml">CSpectrogramIf</a> *&amp;pCInstance, const std::string &amp;strAudioFilePath, int iBlockLength=2048, int iHopLength=1024, <a class="el" href="a00269.xhtml#abb452686968e48b67397da5f97445f5b">bool</a> bNormalize=<a class="el" href="a00269.xhtml#a41f9c5fb8b08eb5dc3edce4dcb37fee7">true</a>, float *pfWindow=0)</td></tr>
<tr class="separator:acd73d8c1aaaed8b188de6b8bf2103139"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab6855532487f599a72b825e4706430fb"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="a00158.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00530.xhtml#ab6855532487f599a72b825e4706430fb">create</a> (<a class="el" href="a00530.xhtml">CSpectrogramIf</a> *&amp;pCInstance, const float *pfAudio, long long iNumSamples, float fSampleRate, int iBlockLength=2048, int iHopLength=1024, <a class="el" href="a00269.xhtml#abb452686968e48b67397da5f97445f5b">bool</a> bNormalize=<a class="el" href="a00269.xhtml#a41f9c5fb8b08eb5dc3edce4dcb37fee7">true</a>, float *pfWindow=0)</td></tr>
<tr class="separator:ab6855532487f599a72b825e4706430fb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6511fc72ef04be91a712ee5ef479bd7e"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="a00158.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00530.xhtml#a6511fc72ef04be91a712ee5ef479bd7e">destroy</a> (<a class="el" href="a00530.xhtml">CSpectrogramIf</a> *&amp;pCInstance)</td></tr>
<tr class="separator:a6511fc72ef04be91a712ee5ef479bd7e"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pro-methods" name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a8808d63b1b795444056e6ccdf46fc2b0"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00530.xhtml#a8808d63b1b795444056e6ccdf46fc2b0">CSpectrogramIf</a> ()</td></tr>
<tr class="separator:a8808d63b1b795444056e6ccdf46fc2b0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a321f47e4165fa5c8b78c0fa47286b53b"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00530.xhtml#a321f47e4165fa5c8b78c0fa47286b53b">~CSpectrogramIf</a> ()</td></tr>
<tr class="separator:a321f47e4165fa5c8b78c0fa47286b53b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a887642514f36ecb7048a7c53ec226a16"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00530.xhtml#a887642514f36ecb7048a7c53ec226a16">CSpectrogramIf</a> (const <a class="el" href="a00530.xhtml">CSpectrogramIf</a> &amp;that)</td></tr>
<tr class="separator:a887642514f36ecb7048a7c53ec226a16"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a532de34b312a3f850fa8ad4fb3cde62a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00530.xhtml">CSpectrogramIf</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00530.xhtml#a532de34b312a3f850fa8ad4fb3cde62a">operator=</a> (const <a class="el" href="a00530.xhtml">CSpectrogramIf</a> &amp;c)</td></tr>
<tr class="separator:a532de34b312a3f850fa8ad4fb3cde62a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afbe3214c599eaab59c8c5a886408630c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00158.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00530.xhtml#afbe3214c599eaab59c8c5a886408630c">reset_</a> ()</td></tr>
<tr class="memdesc:afbe3214c599eaab59c8c5a886408630c"><td class="mdescLeft">&#160;</td><td class="mdescRight">reset configuration  <a href="a00530.xhtml#afbe3214c599eaab59c8c5a886408630c">More...</a><br /></td></tr>
<tr class="separator:afbe3214c599eaab59c8c5a886408630c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9c4b2db2031256e48ade8c9fa235b6f2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00158.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00530.xhtml#a9c4b2db2031256e48ade8c9fa235b6f2">init_</a> (float *pfWindow)</td></tr>
<tr class="memdesc:a9c4b2db2031256e48ade8c9fa235b6f2"><td class="mdescLeft">&#160;</td><td class="mdescRight">init configuration  <a href="a00530.xhtml#a9c4b2db2031256e48ade8c9fa235b6f2">More...</a><br /></td></tr>
<tr class="separator:a9c4b2db2031256e48ade8c9fa235b6f2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abe25089ec6ef77b0b9952c33a7a8d739"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00530.xhtml#abe25089ec6ef77b0b9952c33a7a8d739">computeMagSpectrum_</a> (int iLength)</td></tr>
<tr class="separator:abe25089ec6ef77b0b9952c33a7a8d739"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a04d8f71d4562f2a4efc8a8537826d8c3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00158.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00530.xhtml#a04d8f71d4562f2a4efc8a8537826d8c3">generateMelFb_</a> (const <a class="el" href="a00534.xhtml">MelSpectrogramConfig_t</a> *pMelSpecConfig)</td></tr>
<tr class="separator:a04d8f71d4562f2a4efc8a8537826d8c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a00140b0dd45e87aef4561aed8ebc779a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00530.xhtml#a00140b0dd45e87aef4561aed8ebc779a">destroyMelFb_</a> (const <a class="el" href="a00534.xhtml">MelSpectrogramConfig_t</a> *pMelSpecConfig)</td></tr>
<tr class="separator:a00140b0dd45e87aef4561aed8ebc779a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pro-attribs" name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:a42a7505fe0188726c859c4656eaf61eb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00606.xhtml">CNormalizeAudio</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00530.xhtml#a42a7505fe0188726c859c4656eaf61eb">m_pCNormalize</a> = 0</td></tr>
<tr class="memdesc:a42a7505fe0188726c859c4656eaf61eb"><td class="mdescLeft">&#160;</td><td class="mdescRight">instantiate if audio file normalization is wanted  <a href="a00530.xhtml#a42a7505fe0188726c859c4656eaf61eb">More...</a><br /></td></tr>
<tr class="separator:a42a7505fe0188726c859c4656eaf61eb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8b0cd13bbb3570f6b87017b11ca10d63"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00542.xhtml">CBlockAudioIf</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00530.xhtml#a8b0cd13bbb3570f6b87017b11ca10d63">m_pCBlockAudio</a> = 0</td></tr>
<tr class="memdesc:a8b0cd13bbb3570f6b87017b11ca10d63"><td class="mdescLeft">&#160;</td><td class="mdescRight">instantiate for blocking time domain signal  <a href="a00530.xhtml#a8b0cd13bbb3570f6b87017b11ca10d63">More...</a><br /></td></tr>
<tr class="separator:a8b0cd13bbb3570f6b87017b11ca10d63"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af2d9ad1a7f19819df98a16a12910793b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00474.xhtml">CFft</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00530.xhtml#af2d9ad1a7f19819df98a16a12910793b">m_pCFft</a> = 0</td></tr>
<tr class="memdesc:af2d9ad1a7f19819df98a16a12910793b"><td class="mdescLeft">&#160;</td><td class="mdescRight">fft instance  <a href="a00530.xhtml#af2d9ad1a7f19819df98a16a12910793b">More...</a><br /></td></tr>
<tr class="separator:af2d9ad1a7f19819df98a16a12910793b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeb9a67e20abef3f1028bb8db15022a0a"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00530.xhtml#aeb9a67e20abef3f1028bb8db15022a0a">m_iBlockLength</a> = 0</td></tr>
<tr class="memdesc:aeb9a67e20abef3f1028bb8db15022a0a"><td class="mdescLeft">&#160;</td><td class="mdescRight">fft length  <a href="a00530.xhtml#aeb9a67e20abef3f1028bb8db15022a0a">More...</a><br /></td></tr>
<tr class="separator:aeb9a67e20abef3f1028bb8db15022a0a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3520208ce92977729d22e1bbaa5b9532"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00530.xhtml#a3520208ce92977729d22e1bbaa5b9532">m_iHopLength</a> = 0</td></tr>
<tr class="memdesc:a3520208ce92977729d22e1bbaa5b9532"><td class="mdescLeft">&#160;</td><td class="mdescRight">hop length  <a href="a00530.xhtml#a3520208ce92977729d22e1bbaa5b9532">More...</a><br /></td></tr>
<tr class="separator:a3520208ce92977729d22e1bbaa5b9532"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad41fa79049fdd292778046629a62139f"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00530.xhtml#ad41fa79049fdd292778046629a62139f">m_fSampleRate</a> = 0</td></tr>
<tr class="memdesc:ad41fa79049fdd292778046629a62139f"><td class="mdescLeft">&#160;</td><td class="mdescRight">sample rate  <a href="a00530.xhtml#ad41fa79049fdd292778046629a62139f">More...</a><br /></td></tr>
<tr class="separator:ad41fa79049fdd292778046629a62139f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a46220f31318fed176ec507649fae3e50"><td class="memItemLeft" align="right" valign="top">float *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00530.xhtml#a46220f31318fed176ec507649fae3e50">m_pfSpectrum</a> = 0</td></tr>
<tr class="memdesc:a46220f31318fed176ec507649fae3e50"><td class="mdescLeft">&#160;</td><td class="mdescRight">temporary buffer for current spectrum  <a href="a00530.xhtml#a46220f31318fed176ec507649fae3e50">More...</a><br /></td></tr>
<tr class="separator:a46220f31318fed176ec507649fae3e50"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0b4bcf166ebcebaa5866061eec85debf"><td class="memItemLeft" align="right" valign="top">float *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00530.xhtml#a0b4bcf166ebcebaa5866061eec85debf">m_pfProcBuff</a> = 0</td></tr>
<tr class="memdesc:a0b4bcf166ebcebaa5866061eec85debf"><td class="mdescLeft">&#160;</td><td class="mdescRight">temporary buffer  <a href="a00530.xhtml#a0b4bcf166ebcebaa5866061eec85debf">More...</a><br /></td></tr>
<tr class="separator:a0b4bcf166ebcebaa5866061eec85debf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae3a0596e56fb18c4bd4a42a3f75710ed"><td class="memItemLeft" align="right" valign="top">float **&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00530.xhtml#ae3a0596e56fb18c4bd4a42a3f75710ed">m_ppfHMel</a> = 0</td></tr>
<tr class="memdesc:ae3a0596e56fb18c4bd4a42a3f75710ed"><td class="mdescLeft">&#160;</td><td class="mdescRight">Mel filterbank.  <a href="a00530.xhtml#ae3a0596e56fb18c4bd4a42a3f75710ed">More...</a><br /></td></tr>
<tr class="separator:ae3a0596e56fb18c4bd4a42a3f75710ed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3311e6dae017c1c94dc174a3ae99a1dc"><td class="memItemLeft" align="right" valign="top">float *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00530.xhtml#a3311e6dae017c1c94dc174a3ae99a1dc">m_pffcMel</a> = 0</td></tr>
<tr class="memdesc:a3311e6dae017c1c94dc174a3ae99a1dc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Mel center frequencies.  <a href="a00530.xhtml#a3311e6dae017c1c94dc174a3ae99a1dc">More...</a><br /></td></tr>
<tr class="separator:a3311e6dae017c1c94dc174a3ae99a1dc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a92d816e5c53f69e15c9fef51876d771d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00269.xhtml#abb452686968e48b67397da5f97445f5b">bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00530.xhtml#a92d816e5c53f69e15c9fef51876d771d">m_bIsInitialized</a> = <a class="el" href="a00269.xhtml#a65e9886d74aaee76545e83dd09011727">false</a></td></tr>
<tr class="memdesc:a92d816e5c53f69e15c9fef51876d771d"><td class="mdescLeft">&#160;</td><td class="mdescRight">true if initialized  <a href="a00530.xhtml#a92d816e5c53f69e15c9fef51876d771d">More...</a><br /></td></tr>
<tr class="separator:a92d816e5c53f69e15c9fef51876d771d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p >class for computation of a magnitude spectrogram from either a file or a vector </p>

<p class="definition">Definition at line <a class="el" href="a00218_source.xhtml#l00016">16</a> of file <a class="el" href="a00218_source.xhtml">Spectrogram.h</a>.</p>
</div><h2 class="groupheader">Member Enumeration Documentation</h2>
<a id="aadd5bf0e8b40d9ba74dd66ce28bafbcf" name="aadd5bf0e8b40d9ba74dd66ce28bafbcf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aadd5bf0e8b40d9ba74dd66ce28bafbcf">&#9670;&#160;</a></span>AxisLabel_t</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="a00530.xhtml#aadd5bf0e8b40d9ba74dd66ce28bafbcf">CSpectrogramIf::AxisLabel_t</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="aadd5bf0e8b40d9ba74dd66ce28bafbcfa0ae125df6dd5dd61b17eed69fc25c61d" name="aadd5bf0e8b40d9ba74dd66ce28bafbcfa0ae125df6dd5dd61b17eed69fc25c61d"></a>kFrequencyInHz&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="aadd5bf0e8b40d9ba74dd66ce28bafbcfa60478da724acf03bab5f69ae664dbe58" name="aadd5bf0e8b40d9ba74dd66ce28bafbcfa60478da724acf03bab5f69ae664dbe58"></a>kTimeInS&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="aadd5bf0e8b40d9ba74dd66ce28bafbcfaffe490e57f97386928481c89dfc849b9" name="aadd5bf0e8b40d9ba74dd66ce28bafbcfaffe490e57f97386928481c89dfc849b9"></a>kNumAxisLabels&#160;</td><td class="fielddoc"></td></tr>
</table>

<p class="definition">Definition at line <a class="el" href="a00218_source.xhtml#l00019">19</a> of file <a class="el" href="a00218_source.xhtml">Spectrogram.h</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   20</span>    {</div>
<div class="line"><span class="lineno">   21</span>        <a class="code hl_enumvalue" href="a00530.xhtml#aadd5bf0e8b40d9ba74dd66ce28bafbcfa0ae125df6dd5dd61b17eed69fc25c61d">kFrequencyInHz</a>,</div>
<div class="line"><span class="lineno">   22</span>        <a class="code hl_enumvalue" href="a00530.xhtml#aadd5bf0e8b40d9ba74dd66ce28bafbcfa60478da724acf03bab5f69ae664dbe58">kTimeInS</a>,</div>
<div class="line"><span class="lineno">   23</span> </div>
<div class="line"><span class="lineno">   24</span>        <a class="code hl_enumvalue" href="a00530.xhtml#aadd5bf0e8b40d9ba74dd66ce28bafbcfaffe490e57f97386928481c89dfc849b9">kNumAxisLabels</a></div>
<div class="line"><span class="lineno">   25</span>    };</div>
<div class="ttc" id="aa00530_xhtml_aadd5bf0e8b40d9ba74dd66ce28bafbcfa0ae125df6dd5dd61b17eed69fc25c61d"><div class="ttname"><a href="a00530.xhtml#aadd5bf0e8b40d9ba74dd66ce28bafbcfa0ae125df6dd5dd61b17eed69fc25c61d">CSpectrogramIf::kFrequencyInHz</a></div><div class="ttdeci">@ kFrequencyInHz</div><div class="ttdef"><b>Definition:</b> <a href="a00218_source.xhtml#l00021">Spectrogram.h:21</a></div></div>
<div class="ttc" id="aa00530_xhtml_aadd5bf0e8b40d9ba74dd66ce28bafbcfa60478da724acf03bab5f69ae664dbe58"><div class="ttname"><a href="a00530.xhtml#aadd5bf0e8b40d9ba74dd66ce28bafbcfa60478da724acf03bab5f69ae664dbe58">CSpectrogramIf::kTimeInS</a></div><div class="ttdeci">@ kTimeInS</div><div class="ttdef"><b>Definition:</b> <a href="a00218_source.xhtml#l00022">Spectrogram.h:22</a></div></div>
<div class="ttc" id="aa00530_xhtml_aadd5bf0e8b40d9ba74dd66ce28bafbcfaffe490e57f97386928481c89dfc849b9"><div class="ttname"><a href="a00530.xhtml#aadd5bf0e8b40d9ba74dd66ce28bafbcfaffe490e57f97386928481c89dfc849b9">CSpectrogramIf::kNumAxisLabels</a></div><div class="ttdeci">@ kNumAxisLabels</div><div class="ttdef"><b>Definition:</b> <a href="a00218_source.xhtml#l00025">Spectrogram.h:24</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a8808d63b1b795444056e6ccdf46fc2b0" name="a8808d63b1b795444056e6ccdf46fc2b0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8808d63b1b795444056e6ccdf46fc2b0">&#9670;&#160;</a></span>CSpectrogramIf() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">CSpectrogramIf::CSpectrogramIf </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="a00038_source.xhtml#l00090">90</a> of file <a class="el" href="a00038_source.xhtml">Spectrogram.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   91</span>{</div>
<div class="line"><span class="lineno">   92</span>    <a class="code hl_function" href="a00530.xhtml#afbe3214c599eaab59c8c5a886408630c">reset_</a>();</div>
<div class="line"><span class="lineno">   93</span>}</div>
<div class="ttc" id="aa00530_xhtml_afbe3214c599eaab59c8c5a886408630c"><div class="ttname"><a href="a00530.xhtml#afbe3214c599eaab59c8c5a886408630c">CSpectrogramIf::reset_</a></div><div class="ttdeci">Error_t reset_()</div><div class="ttdoc">reset configuration</div><div class="ttdef"><b>Definition:</b> <a href="a00038_source.xhtml#l00238">Spectrogram.cpp:238</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00038_source.xhtml#l00238">reset_()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00530_a8808d63b1b795444056e6ccdf46fc2b0_cgraph.svg" width="626" height="86"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a321f47e4165fa5c8b78c0fa47286b53b" name="a321f47e4165fa5c8b78c0fa47286b53b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a321f47e4165fa5c8b78c0fa47286b53b">&#9670;&#160;</a></span>~CSpectrogramIf()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">CSpectrogramIf::~CSpectrogramIf </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="a00038_source.xhtml#l00095">95</a> of file <a class="el" href="a00038_source.xhtml">Spectrogram.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   96</span>{</div>
<div class="line"><span class="lineno">   97</span>    <a class="code hl_function" href="a00530.xhtml#afbe3214c599eaab59c8c5a886408630c">reset_</a>();</div>
<div class="line"><span class="lineno">   98</span>}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00038_source.xhtml#l00238">reset_()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00530_a321f47e4165fa5c8b78c0fa47286b53b_cgraph.svg" width="632" height="86"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a887642514f36ecb7048a7c53ec226a16" name="a887642514f36ecb7048a7c53ec226a16"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a887642514f36ecb7048a7c53ec226a16">&#9670;&#160;</a></span>CSpectrogramIf() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">CSpectrogramIf::CSpectrogramIf </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="a00530.xhtml">CSpectrogramIf</a> &amp;&#160;</td>
          <td class="paramname"><em>that</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="ae89af275cdd54029bbf7f0f25ddf7945" name="ae89af275cdd54029bbf7f0f25ddf7945"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae89af275cdd54029bbf7f0f25ddf7945">&#9670;&#160;</a></span>compMelSpectrogram()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00158.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> CSpectrogramIf::compMelSpectrogram </td>
          <td>(</td>
          <td class="paramtype">float **&#160;</td>
          <td class="paramname"><em>ppfMelSpectrogram</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="a00534.xhtml">MelSpectrogramConfig_t</a> *&#160;</td>
          <td class="paramname"><em>pMelSpecConfig</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >performs the Spectrogram computation </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ppfMelSpectrogram</td><td>(user-allocated, to be written, dimensions from <a class="el" href="a00530.xhtml#afb50af1070f5876b4706f5891879fcd8">CSpectrogramIf::getSpectrogramDimensions</a>) </td></tr>
    <tr><td class="paramname">pMelSpecConfig</td><td>parametrization of the mel spectrogram </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Error_t </dd></dl>

<p class="definition">Definition at line <a class="el" href="a00038_source.xhtml#l00333">333</a> of file <a class="el" href="a00038_source.xhtml">Spectrogram.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  334</span>{</div>
<div class="line"><span class="lineno">  335</span>    <span class="keywordflow">if</span> (!<a class="code hl_variable" href="a00530.xhtml#a92d816e5c53f69e15c9fef51876d771d">m_bIsInitialized</a>)</div>
<div class="line"><span class="lineno">  336</span>        <span class="keywordflow">return</span> Error_t::kFunctionIllegalCallError;</div>
<div class="line"><span class="lineno">  337</span>    <span class="keywordflow">if</span> (!pMelSpecConfig)</div>
<div class="line"><span class="lineno">  338</span>        <span class="keywordflow">return</span> Error_t::kFunctionInvalidArgsError;</div>
<div class="line"><span class="lineno">  339</span>    <span class="keywordflow">if</span> (!ppfMelSpectrogram)</div>
<div class="line"><span class="lineno">  340</span>        <span class="keywordflow">return</span> Error_t::kFunctionInvalidArgsError;</div>
<div class="line"><span class="lineno">  341</span>    <span class="keywordflow">if</span> (!ppfMelSpectrogram[0])</div>
<div class="line"><span class="lineno">  342</span>        <span class="keywordflow">return</span> Error_t::kFunctionInvalidArgsError;</div>
<div class="line"><span class="lineno">  343</span> </div>
<div class="line"><span class="lineno">  344</span>    assert(<a class="code hl_variable" href="a00530.xhtml#a0b4bcf166ebcebaa5866061eec85debf">m_pfProcBuff</a>);</div>
<div class="line"><span class="lineno">  345</span>    assert(<a class="code hl_variable" href="a00530.xhtml#a46220f31318fed176ec507649fae3e50">m_pfSpectrum</a>);</div>
<div class="line"><span class="lineno">  346</span>    assert(<a class="code hl_variable" href="a00530.xhtml#af2d9ad1a7f19819df98a16a12910793b">m_pCFft</a>);</div>
<div class="line"><span class="lineno">  347</span> </div>
<div class="line"><span class="lineno">  348</span>    <span class="comment">// initialize mel filterbank</span></div>
<div class="line"><span class="lineno">  349</span>    <a class="code hl_function" href="a00530.xhtml#a04d8f71d4562f2a4efc8a8537826d8c3">generateMelFb_</a>(pMelSpecConfig);</div>
<div class="line"><span class="lineno">  350</span>    assert(<a class="code hl_variable" href="a00530.xhtml#ae3a0596e56fb18c4bd4a42a3f75710ed">m_ppfHMel</a>);</div>
<div class="line"><span class="lineno">  351</span> </div>
<div class="line"><span class="lineno">  352</span>    <span class="keywordtype">long</span> <span class="keywordtype">long</span> iNumBlocks = <a class="code hl_variable" href="a00530.xhtml#a8b0cd13bbb3570f6b87017b11ca10d63">m_pCBlockAudio</a>-&gt;<a class="code hl_function" href="a00542.xhtml#a595b3a391e2540a1dc9e53edf8634494">getNumBlocks</a>();</div>
<div class="line"><span class="lineno">  353</span> </div>
<div class="line"><span class="lineno">  354</span>    <span class="keywordflow">for</span> (<span class="keyword">auto</span> n = 0; n &lt; iNumBlocks; n++)</div>
<div class="line"><span class="lineno">  355</span>    {</div>
<div class="line"><span class="lineno">  356</span>        <span class="keyword">auto</span> iLength = <a class="code hl_variable" href="a00530.xhtml#af2d9ad1a7f19819df98a16a12910793b">m_pCFft</a>-&gt;<a class="code hl_function" href="a00474.xhtml#a9cb162394031e8b496f7a39b51c31d20">getLength</a>(<a class="code hl_enumvalue" href="a00474.xhtml#aaeae67c99cd6e689243892e429a66e33a280c54c7da09951bd33a05dfb5dd4f8e">CFft::kLengthMagnitude</a>);</div>
<div class="line"><span class="lineno">  357</span> </div>
<div class="line"><span class="lineno">  358</span>        <a class="code hl_function" href="a00530.xhtml#abe25089ec6ef77b0b9952c33a7a8d739">computeMagSpectrum_</a>(iLength);</div>
<div class="line"><span class="lineno">  359</span> </div>
<div class="line"><span class="lineno">  360</span>        <span class="comment">// copy to output buffer</span></div>
<div class="line"><span class="lineno">  361</span>        <span class="keywordflow">for</span> (<span class="keyword">auto</span> k = 0; k &lt; pMelSpecConfig-&gt;iNumMelBins; k++)</div>
<div class="line"><span class="lineno">  362</span>        {</div>
<div class="line"><span class="lineno">  363</span>            assert(<a class="code hl_variable" href="a00530.xhtml#ae3a0596e56fb18c4bd4a42a3f75710ed">m_ppfHMel</a>[k]);</div>
<div class="line"><span class="lineno">  364</span>            ppfMelSpectrogram[k][n] = <a class="code hl_function" href="a00502.xhtml#a269d316eeb6000aac4f57ade32c83127">CVector::mulScalar</a>(<a class="code hl_variable" href="a00530.xhtml#ae3a0596e56fb18c4bd4a42a3f75710ed">m_ppfHMel</a>[k], <a class="code hl_variable" href="a00530.xhtml#a46220f31318fed176ec507649fae3e50">m_pfSpectrum</a>, iLength);</div>
<div class="line"><span class="lineno">  365</span>        }</div>
<div class="line"><span class="lineno">  366</span> </div>
<div class="line"><span class="lineno">  367</span>        <span class="keywordflow">if</span> (pMelSpecConfig-&gt;bIsLogarithmic)</div>
<div class="line"><span class="lineno">  368</span>        {</div>
<div class="line"><span class="lineno">  369</span>            <span class="comment">// convert amplitude to level(dB)</span></div>
<div class="line"><span class="lineno">  370</span>            <span class="keywordflow">for</span> (<span class="keyword">auto</span> k = 0; k &lt; pMelSpecConfig-&gt;iNumMelBins; k++)</div>
<div class="line"><span class="lineno">  371</span>                ppfMelSpectrogram[k][n] = 20.F * std::log10(ppfMelSpectrogram[k][n] + 1e-12F);</div>
<div class="line"><span class="lineno">  372</span>        }</div>
<div class="line"><span class="lineno">  373</span>    }</div>
<div class="line"><span class="lineno">  374</span> </div>
<div class="line"><span class="lineno">  375</span>    <a class="code hl_function" href="a00530.xhtml#a00140b0dd45e87aef4561aed8ebc779a">destroyMelFb_</a>(pMelSpecConfig);</div>
<div class="line"><span class="lineno">  376</span> </div>
<div class="line"><span class="lineno">  377</span>    <span class="keywordflow">return</span> Error_t::kNoError;</div>
<div class="line"><span class="lineno">  378</span>}</div>
<div class="ttc" id="aa00474_xhtml_a9cb162394031e8b496f7a39b51c31d20"><div class="ttname"><a href="a00474.xhtml#a9cb162394031e8b496f7a39b51c31d20">CFft::getLength</a></div><div class="ttdeci">int getLength(Length_t eLengthIdx) const</div><div class="ttdef"><b>Definition:</b> <a href="a00077_source.xhtml#l00322">Fft.cpp:322</a></div></div>
<div class="ttc" id="aa00474_xhtml_aaeae67c99cd6e689243892e429a66e33a280c54c7da09951bd33a05dfb5dd4f8e"><div class="ttname"><a href="a00474.xhtml#aaeae67c99cd6e689243892e429a66e33a280c54c7da09951bd33a05dfb5dd4f8e">CFft::kLengthMagnitude</a></div><div class="ttdeci">@ kLengthMagnitude</div><div class="ttdoc">length of the magnitude spectrum</div><div class="ttdef"><b>Definition:</b> <a href="a00182_source.xhtml#l00107">Fft.h:107</a></div></div>
<div class="ttc" id="aa00502_xhtml_a269d316eeb6000aac4f57ade32c83127"><div class="ttname"><a href="a00502.xhtml#a269d316eeb6000aac4f57ade32c83127">CVector::mulScalar</a></div><div class="ttdeci">static T mulScalar(const T *ptSrc1, const T *ptSrc2, long long int iLength)</div><div class="ttdef"><b>Definition:</b> <a href="a00194_source.xhtml#l00246">Vector.h:246</a></div></div>
<div class="ttc" id="aa00530_xhtml_a00140b0dd45e87aef4561aed8ebc779a"><div class="ttname"><a href="a00530.xhtml#a00140b0dd45e87aef4561aed8ebc779a">CSpectrogramIf::destroyMelFb_</a></div><div class="ttdeci">void destroyMelFb_(const MelSpectrogramConfig_t *pMelSpecConfig)</div><div class="ttdef"><b>Definition:</b> <a href="a00038_source.xhtml#l00233">Spectrogram.cpp:233</a></div></div>
<div class="ttc" id="aa00530_xhtml_a04d8f71d4562f2a4efc8a8537826d8c3"><div class="ttname"><a href="a00530.xhtml#a04d8f71d4562f2a4efc8a8537826d8c3">CSpectrogramIf::generateMelFb_</a></div><div class="ttdeci">Error_t generateMelFb_(const MelSpectrogramConfig_t *pMelSpecConfig)</div><div class="ttdef"><b>Definition:</b> <a href="a00038_source.xhtml#l00380">Spectrogram.cpp:380</a></div></div>
<div class="ttc" id="aa00530_xhtml_a0b4bcf166ebcebaa5866061eec85debf"><div class="ttname"><a href="a00530.xhtml#a0b4bcf166ebcebaa5866061eec85debf">CSpectrogramIf::m_pfProcBuff</a></div><div class="ttdeci">float * m_pfProcBuff</div><div class="ttdoc">temporary buffer</div><div class="ttdef"><b>Definition:</b> <a href="a00218_source.xhtml#l00135">Spectrogram.h:135</a></div></div>
<div class="ttc" id="aa00530_xhtml_a46220f31318fed176ec507649fae3e50"><div class="ttname"><a href="a00530.xhtml#a46220f31318fed176ec507649fae3e50">CSpectrogramIf::m_pfSpectrum</a></div><div class="ttdeci">float * m_pfSpectrum</div><div class="ttdoc">temporary buffer for current spectrum</div><div class="ttdef"><b>Definition:</b> <a href="a00218_source.xhtml#l00134">Spectrogram.h:134</a></div></div>
<div class="ttc" id="aa00530_xhtml_a8b0cd13bbb3570f6b87017b11ca10d63"><div class="ttname"><a href="a00530.xhtml#a8b0cd13bbb3570f6b87017b11ca10d63">CSpectrogramIf::m_pCBlockAudio</a></div><div class="ttdeci">CBlockAudioIf * m_pCBlockAudio</div><div class="ttdoc">instantiate for blocking time domain signal</div><div class="ttdef"><b>Definition:</b> <a href="a00218_source.xhtml#l00125">Spectrogram.h:125</a></div></div>
<div class="ttc" id="aa00530_xhtml_a92d816e5c53f69e15c9fef51876d771d"><div class="ttname"><a href="a00530.xhtml#a92d816e5c53f69e15c9fef51876d771d">CSpectrogramIf::m_bIsInitialized</a></div><div class="ttdeci">bool m_bIsInitialized</div><div class="ttdoc">true if initialized</div><div class="ttdef"><b>Definition:</b> <a href="a00218_source.xhtml#l00140">Spectrogram.h:140</a></div></div>
<div class="ttc" id="aa00530_xhtml_abe25089ec6ef77b0b9952c33a7a8d739"><div class="ttname"><a href="a00530.xhtml#abe25089ec6ef77b0b9952c33a7a8d739">CSpectrogramIf::computeMagSpectrum_</a></div><div class="ttdeci">void computeMagSpectrum_(int iLength)</div><div class="ttdef"><b>Definition:</b> <a href="a00038_source.xhtml#l00217">Spectrogram.cpp:217</a></div></div>
<div class="ttc" id="aa00530_xhtml_ae3a0596e56fb18c4bd4a42a3f75710ed"><div class="ttname"><a href="a00530.xhtml#ae3a0596e56fb18c4bd4a42a3f75710ed">CSpectrogramIf::m_ppfHMel</a></div><div class="ttdeci">float ** m_ppfHMel</div><div class="ttdoc">Mel filterbank.</div><div class="ttdef"><b>Definition:</b> <a href="a00218_source.xhtml#l00137">Spectrogram.h:137</a></div></div>
<div class="ttc" id="aa00530_xhtml_af2d9ad1a7f19819df98a16a12910793b"><div class="ttname"><a href="a00530.xhtml#af2d9ad1a7f19819df98a16a12910793b">CSpectrogramIf::m_pCFft</a></div><div class="ttdeci">CFft * m_pCFft</div><div class="ttdoc">fft instance</div><div class="ttdef"><b>Definition:</b> <a href="a00218_source.xhtml#l00127">Spectrogram.h:127</a></div></div>
<div class="ttc" id="aa00542_xhtml_a595b3a391e2540a1dc9e53edf8634494"><div class="ttname"><a href="a00542.xhtml#a595b3a391e2540a1dc9e53edf8634494">CBlockAudioIf::getNumBlocks</a></div><div class="ttdeci">long long getNumBlocks() const</div><div class="ttdef"><b>Definition:</b> <a href="a00161_source.xhtml#l00049">ToolBlockAudio.h:49</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00218_source.xhtml#l00084">CSpectrogramIf::MelSpectrogramConfig_t::bIsLogarithmic</a>, <a class="el" href="a00038_source.xhtml#l00217">computeMagSpectrum_()</a>, <a class="el" href="a00038_source.xhtml#l00233">destroyMelFb_()</a>, <a class="el" href="a00038_source.xhtml#l00380">generateMelFb_()</a>, <a class="el" href="a00077_source.xhtml#l00322">CFft::getLength()</a>, <a class="el" href="a00161_source.xhtml#l00049">CBlockAudioIf::getNumBlocks()</a>, <a class="el" href="a00218_source.xhtml#l00081">CSpectrogramIf::MelSpectrogramConfig_t::iNumMelBins</a>, <a class="el" href="a00182_source.xhtml#l00107">CFft::kLengthMagnitude</a>, <a class="el" href="a00218_source.xhtml#l00140">m_bIsInitialized</a>, <a class="el" href="a00218_source.xhtml#l00125">m_pCBlockAudio</a>, <a class="el" href="a00218_source.xhtml#l00127">m_pCFft</a>, <a class="el" href="a00218_source.xhtml#l00135">m_pfProcBuff</a>, <a class="el" href="a00218_source.xhtml#l00134">m_pfSpectrum</a>, <a class="el" href="a00218_source.xhtml#l00137">m_ppfHMel</a>, and <a class="el" href="a00194_source.xhtml#l00246">CVector::mulScalar()</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00119_source.xhtml#l00017">main()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00530_ae89af275cdd54029bbf7f0f25ddf7945_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00530_ae89af275cdd54029bbf7f0f25ddf7945_icgraph.svg" width="356" height="36"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ae041a770ec2b092761d9a88cc87946bb" name="ae041a770ec2b092761d9a88cc87946bb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae041a770ec2b092761d9a88cc87946bb">&#9670;&#160;</a></span>compSpectrogram()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00158.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> CSpectrogramIf::compSpectrogram </td>
          <td>(</td>
          <td class="paramtype">float **&#160;</td>
          <td class="paramname"><em>ppfSpectrogram</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >performs the Spectrogram computation </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ppfSpectrogram</td><td>(user-allocated, to be written, dimensions from <a class="el" href="a00530.xhtml#afb50af1070f5876b4706f5891879fcd8">CSpectrogramIf::getSpectrogramDimensions</a>) </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Error_t </dd></dl>

<p class="definition">Definition at line <a class="el" href="a00038_source.xhtml#l00188">188</a> of file <a class="el" href="a00038_source.xhtml">Spectrogram.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  189</span>{</div>
<div class="line"><span class="lineno">  190</span>    <span class="keywordflow">if</span> (!<a class="code hl_variable" href="a00530.xhtml#a92d816e5c53f69e15c9fef51876d771d">m_bIsInitialized</a>)</div>
<div class="line"><span class="lineno">  191</span>        <span class="keywordflow">return</span> Error_t::kFunctionIllegalCallError;</div>
<div class="line"><span class="lineno">  192</span>    <span class="keywordflow">if</span> (!ppfSpectrogram)</div>
<div class="line"><span class="lineno">  193</span>        <span class="keywordflow">return</span> Error_t::kFunctionInvalidArgsError;</div>
<div class="line"><span class="lineno">  194</span>    <span class="keywordflow">if</span> (!ppfSpectrogram[0])</div>
<div class="line"><span class="lineno">  195</span>        <span class="keywordflow">return</span> Error_t::kFunctionInvalidArgsError;</div>
<div class="line"><span class="lineno">  196</span> </div>
<div class="line"><span class="lineno">  197</span>    assert(<a class="code hl_variable" href="a00530.xhtml#a0b4bcf166ebcebaa5866061eec85debf">m_pfProcBuff</a>);</div>
<div class="line"><span class="lineno">  198</span>    assert(<a class="code hl_variable" href="a00530.xhtml#a46220f31318fed176ec507649fae3e50">m_pfSpectrum</a>);</div>
<div class="line"><span class="lineno">  199</span>    assert(<a class="code hl_variable" href="a00530.xhtml#af2d9ad1a7f19819df98a16a12910793b">m_pCFft</a>);</div>
<div class="line"><span class="lineno">  200</span> </div>
<div class="line"><span class="lineno">  201</span>    <span class="keywordtype">long</span> <span class="keywordtype">long</span> iNumBlocks = <a class="code hl_variable" href="a00530.xhtml#a8b0cd13bbb3570f6b87017b11ca10d63">m_pCBlockAudio</a>-&gt;<a class="code hl_function" href="a00542.xhtml#a595b3a391e2540a1dc9e53edf8634494">getNumBlocks</a>();</div>
<div class="line"><span class="lineno">  202</span> </div>
<div class="line"><span class="lineno">  203</span>    <span class="keywordflow">for</span> (<span class="keyword">auto</span> n = 0; n &lt; iNumBlocks; n++)</div>
<div class="line"><span class="lineno">  204</span>    {</div>
<div class="line"><span class="lineno">  205</span>        <span class="keyword">auto</span> iLength = <a class="code hl_variable" href="a00530.xhtml#af2d9ad1a7f19819df98a16a12910793b">m_pCFft</a>-&gt;<a class="code hl_function" href="a00474.xhtml#a9cb162394031e8b496f7a39b51c31d20">getLength</a>(<a class="code hl_enumvalue" href="a00474.xhtml#aaeae67c99cd6e689243892e429a66e33a280c54c7da09951bd33a05dfb5dd4f8e">CFft::kLengthMagnitude</a>);</div>
<div class="line"><span class="lineno">  206</span> </div>
<div class="line"><span class="lineno">  207</span>        <a class="code hl_function" href="a00530.xhtml#abe25089ec6ef77b0b9952c33a7a8d739">computeMagSpectrum_</a>(iLength);</div>
<div class="line"><span class="lineno">  208</span> </div>
<div class="line"><span class="lineno">  209</span>        <span class="comment">// copy to output buffer</span></div>
<div class="line"><span class="lineno">  210</span>        <span class="keywordflow">for</span> (<span class="keyword">auto</span> k = 0; k &lt; iLength; k++)</div>
<div class="line"><span class="lineno">  211</span>            ppfSpectrogram[k][n] = <a class="code hl_variable" href="a00530.xhtml#a46220f31318fed176ec507649fae3e50">m_pfSpectrum</a>[k];</div>
<div class="line"><span class="lineno">  212</span>    }</div>
<div class="line"><span class="lineno">  213</span> </div>
<div class="line"><span class="lineno">  214</span>    <span class="keywordflow">return</span> Error_t::kNoError;</div>
<div class="line"><span class="lineno">  215</span>}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00038_source.xhtml#l00217">computeMagSpectrum_()</a>, <a class="el" href="a00077_source.xhtml#l00322">CFft::getLength()</a>, <a class="el" href="a00161_source.xhtml#l00049">CBlockAudioIf::getNumBlocks()</a>, <a class="el" href="a00182_source.xhtml#l00107">CFft::kLengthMagnitude</a>, <a class="el" href="a00218_source.xhtml#l00140">m_bIsInitialized</a>, <a class="el" href="a00218_source.xhtml#l00125">m_pCBlockAudio</a>, <a class="el" href="a00218_source.xhtml#l00127">m_pCFft</a>, <a class="el" href="a00218_source.xhtml#l00135">m_pfProcBuff</a>, and <a class="el" href="a00218_source.xhtml#l00134">m_pfSpectrum</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00008_source.xhtml#l00017">main()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00530_ae041a770ec2b092761d9a88cc87946bb_cgraph.svg" width="100%" height="538"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00530_ae041a770ec2b092761d9a88cc87946bb_icgraph.svg" width="335" height="36"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="abe25089ec6ef77b0b9952c33a7a8d739" name="abe25089ec6ef77b0b9952c33a7a8d739"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abe25089ec6ef77b0b9952c33a7a8d739">&#9670;&#160;</a></span>computeMagSpectrum_()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void CSpectrogramIf::computeMagSpectrum_ </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>iLength</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="a00038_source.xhtml#l00217">217</a> of file <a class="el" href="a00038_source.xhtml">Spectrogram.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  218</span>{</div>
<div class="line"><span class="lineno">  219</span>    <span class="comment">// retrieve the next audio block</span></div>
<div class="line"><span class="lineno">  220</span>    <a class="code hl_variable" href="a00530.xhtml#a8b0cd13bbb3570f6b87017b11ca10d63">m_pCBlockAudio</a>-&gt;<a class="code hl_function" href="a00542.xhtml#a531920b36b04ecdb562bfbb09dd2e856">getNextBlock</a>(<a class="code hl_variable" href="a00530.xhtml#a0b4bcf166ebcebaa5866061eec85debf">m_pfProcBuff</a>);</div>
<div class="line"><span class="lineno">  221</span> </div>
<div class="line"><span class="lineno">  222</span>    <span class="comment">// normalize if specified</span></div>
<div class="line"><span class="lineno">  223</span>    <span class="keywordflow">if</span> (<a class="code hl_variable" href="a00530.xhtml#a42a7505fe0188726c859c4656eaf61eb">m_pCNormalize</a>)</div>
<div class="line"><span class="lineno">  224</span>        <a class="code hl_variable" href="a00530.xhtml#a42a7505fe0188726c859c4656eaf61eb">m_pCNormalize</a>-&gt;<a class="code hl_function" href="a00606.xhtml#aa8a561b4133585586c5b595116a9217f">normalizeBlock</a>(<a class="code hl_variable" href="a00530.xhtml#a0b4bcf166ebcebaa5866061eec85debf">m_pfProcBuff</a>, <a class="code hl_variable" href="a00530.xhtml#aeb9a67e20abef3f1028bb8db15022a0a">m_iBlockLength</a>);</div>
<div class="line"><span class="lineno">  225</span> </div>
<div class="line"><span class="lineno">  226</span>    <span class="comment">// compute magnitude spectrum </span></div>
<div class="line"><span class="lineno">  227</span>    <a class="code hl_variable" href="a00530.xhtml#af2d9ad1a7f19819df98a16a12910793b">m_pCFft</a>-&gt;<a class="code hl_function" href="a00474.xhtml#ab5c17fe5c368048a3393818735dc9b8a">compFft</a>(<a class="code hl_variable" href="a00530.xhtml#a46220f31318fed176ec507649fae3e50">m_pfSpectrum</a>, <a class="code hl_variable" href="a00530.xhtml#a0b4bcf166ebcebaa5866061eec85debf">m_pfProcBuff</a>);</div>
<div class="line"><span class="lineno">  228</span>    <a class="code hl_variable" href="a00530.xhtml#af2d9ad1a7f19819df98a16a12910793b">m_pCFft</a>-&gt;<a class="code hl_function" href="a00474.xhtml#a48428f0ac37a3c112c9598c784771d4a">getMagnitude</a>(<a class="code hl_variable" href="a00530.xhtml#a46220f31318fed176ec507649fae3e50">m_pfSpectrum</a>, <a class="code hl_variable" href="a00530.xhtml#a46220f31318fed176ec507649fae3e50">m_pfSpectrum</a>);</div>
<div class="line"><span class="lineno">  229</span> </div>
<div class="line"><span class="lineno">  230</span>    <a class="code hl_function" href="a00502.xhtml#a9811f50434dd058d201290b2dc98bfcd">CVector::mulC_I</a>(<a class="code hl_variable" href="a00530.xhtml#a46220f31318fed176ec507649fae3e50">m_pfSpectrum</a>, 2.F, iLength);</div>
<div class="line"><span class="lineno">  231</span>}</div>
<div class="ttc" id="aa00474_xhtml_a48428f0ac37a3c112c9598c784771d4a"><div class="ttname"><a href="a00474.xhtml#a48428f0ac37a3c112c9598c784771d4a">CFft::getMagnitude</a></div><div class="ttdeci">Error_t getMagnitude(float *pfMag, const complex_t *pfSpectrum) const</div><div class="ttdef"><b>Definition:</b> <a href="a00077_source.xhtml#l00136">Fft.cpp:136</a></div></div>
<div class="ttc" id="aa00474_xhtml_ab5c17fe5c368048a3393818735dc9b8a"><div class="ttname"><a href="a00474.xhtml#ab5c17fe5c368048a3393818735dc9b8a">CFft::compFft</a></div><div class="ttdeci">Error_t compFft(complex_t *pfSpectrum, const float *pfIn)</div><div class="ttdef"><b>Definition:</b> <a href="a00077_source.xhtml#l00091">Fft.cpp:91</a></div></div>
<div class="ttc" id="aa00502_xhtml_a9811f50434dd058d201290b2dc98bfcd"><div class="ttname"><a href="a00502.xhtml#a9811f50434dd058d201290b2dc98bfcd">CVector::mulC_I</a></div><div class="ttdeci">static void mulC_I(T *ptSrcDest, T fScale, long long int iLength)</div><div class="ttdef"><b>Definition:</b> <a href="a00194_source.xhtml#l00214">Vector.h:214</a></div></div>
<div class="ttc" id="aa00530_xhtml_a42a7505fe0188726c859c4656eaf61eb"><div class="ttname"><a href="a00530.xhtml#a42a7505fe0188726c859c4656eaf61eb">CSpectrogramIf::m_pCNormalize</a></div><div class="ttdeci">CNormalizeAudio * m_pCNormalize</div><div class="ttdoc">instantiate if audio file normalization is wanted</div><div class="ttdef"><b>Definition:</b> <a href="a00218_source.xhtml#l00123">Spectrogram.h:123</a></div></div>
<div class="ttc" id="aa00530_xhtml_aeb9a67e20abef3f1028bb8db15022a0a"><div class="ttname"><a href="a00530.xhtml#aeb9a67e20abef3f1028bb8db15022a0a">CSpectrogramIf::m_iBlockLength</a></div><div class="ttdeci">int m_iBlockLength</div><div class="ttdoc">fft length</div><div class="ttdef"><b>Definition:</b> <a href="a00218_source.xhtml#l00129">Spectrogram.h:129</a></div></div>
<div class="ttc" id="aa00542_xhtml_a531920b36b04ecdb562bfbb09dd2e856"><div class="ttname"><a href="a00542.xhtml#a531920b36b04ecdb562bfbb09dd2e856">CBlockAudioIf::getNextBlock</a></div><div class="ttdeci">virtual int getNextBlock(float *pfBlock, float *pfTimeStampInS=0)=0</div></div>
<div class="ttc" id="aa00606_xhtml_aa8a561b4133585586c5b595116a9217f"><div class="ttname"><a href="a00606.xhtml#aa8a561b4133585586c5b595116a9217f">CNormalizeAudio::normalizeBlock</a></div><div class="ttdeci">void normalizeBlock(float *pfAudioBlock, long long iNumSamples)</div><div class="ttdef"><b>Definition:</b> <a href="a00137_source.xhtml#l00116">ToolPreProc.h:116</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00077_source.xhtml#l00091">CFft::compFft()</a>, <a class="el" href="a00077_source.xhtml#l00136">CFft::getMagnitude()</a>, <a class="el" href="a00542.xhtml#a531920b36b04ecdb562bfbb09dd2e856">CBlockAudioIf::getNextBlock()</a>, <a class="el" href="a00218_source.xhtml#l00129">m_iBlockLength</a>, <a class="el" href="a00218_source.xhtml#l00125">m_pCBlockAudio</a>, <a class="el" href="a00218_source.xhtml#l00127">m_pCFft</a>, <a class="el" href="a00218_source.xhtml#l00123">m_pCNormalize</a>, <a class="el" href="a00218_source.xhtml#l00135">m_pfProcBuff</a>, <a class="el" href="a00218_source.xhtml#l00134">m_pfSpectrum</a>, <a class="el" href="a00194_source.xhtml#l00214">CVector::mulC_I()</a>, and <a class="el" href="a00137_source.xhtml#l00116">CNormalizeAudio::normalizeBlock()</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00038_source.xhtml#l00333">compMelSpectrogram()</a>, and <a class="el" href="a00038_source.xhtml#l00188">compSpectrogram()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00530_abe25089ec6ef77b0b9952c33a7a8d739_cgraph.svg" width="610" height="318"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00530_abe25089ec6ef77b0b9952c33a7a8d739_icgraph.svg" width="599" height="86"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ab6855532487f599a72b825e4706430fb" name="ab6855532487f599a72b825e4706430fb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab6855532487f599a72b825e4706430fb">&#9670;&#160;</a></span>create() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00158.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> CSpectrogramIf::create </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="a00530.xhtml">CSpectrogramIf</a> *&amp;&#160;</td>
          <td class="paramname"><em>pCInstance</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float *&#160;</td>
          <td class="paramname"><em>pfAudio</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">long long&#160;</td>
          <td class="paramname"><em>iNumSamples</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fSampleRate</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>iBlockLength</em> = <code>2048</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>iHopLength</em> = <code>1024</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="a00269.xhtml#abb452686968e48b67397da5f97445f5b">bool</a>&#160;</td>
          <td class="paramname"><em>bNormalize</em> = <code><a class="el" href="a00269.xhtml#a41f9c5fb8b08eb5dc3edce4dcb37fee7">true</a></code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>pfWindow</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p >initializes a Spectrogram instance from audio data </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pCInstance</td><td>pointer to instance to be written </td></tr>
    <tr><td class="paramname">pfAudio</td><td>complete audio data </td></tr>
    <tr><td class="paramname">iNumSamples</td><td>length of pfAudio </td></tr>
    <tr><td class="paramname">fSampleRate</td><td>sample rate in Hz </td></tr>
    <tr><td class="paramname">iBlockLength</td><td>FFT block length in samples </td></tr>
    <tr><td class="paramname">iHopLength</td><td>hop length in samples </td></tr>
    <tr><td class="paramname">bNormalize</td><td>flag if input audio should be normalized </td></tr>
    <tr><td class="paramname">pfWindow</td><td>window function of length iBlockLength (optional, default will be von-Hann if 0) </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Error_t </dd></dl>

<p class="definition">Definition at line <a class="el" href="a00038_source.xhtml#l00115">115</a> of file <a class="el" href="a00038_source.xhtml">Spectrogram.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  116</span>{</div>
<div class="line"><span class="lineno">  117</span>    <span class="keywordflow">if</span> (!pfAudio)</div>
<div class="line"><span class="lineno">  118</span>        <span class="keywordflow">return</span> Error_t::kFunctionInvalidArgsError;</div>
<div class="line"><span class="lineno">  119</span>    <span class="keywordflow">if</span> (iNumSamples &lt;= 0)</div>
<div class="line"><span class="lineno">  120</span>        <span class="keywordflow">return</span> Error_t::kFunctionInvalidArgsError;</div>
<div class="line"><span class="lineno">  121</span>    <span class="keywordflow">if</span> (fSampleRate &lt;= 0)</div>
<div class="line"><span class="lineno">  122</span>        <span class="keywordflow">return</span> Error_t::kFunctionInvalidArgsError;</div>
<div class="line"><span class="lineno">  123</span>    <span class="keywordflow">if</span> (iBlockLength &lt;= 2 || !<a class="code hl_function" href="a00498.xhtml#a6d0e75b0bcbbb243b7141cfc0126e443">CUtil::isPowOf2</a>(iBlockLength))</div>
<div class="line"><span class="lineno">  124</span>        <span class="keywordflow">return</span> Error_t::kFunctionInvalidArgsError;</div>
<div class="line"><span class="lineno">  125</span>    <span class="keywordflow">if</span> (iHopLength &lt;= 0 || iHopLength &gt; iBlockLength)</div>
<div class="line"><span class="lineno">  126</span>        <span class="keywordflow">return</span> Error_t::kFunctionInvalidArgsError;</div>
<div class="line"><span class="lineno">  127</span> </div>
<div class="line"><span class="lineno">  128</span>    pCInstance = <span class="keyword">new</span> <a class="code hl_class" href="a00406.xhtml">CSpectrogramFromVector</a>(pfAudio, iNumSamples, fSampleRate, iBlockLength, iHopLength, bNormalize, pfWindow);</div>
<div class="line"><span class="lineno">  129</span> </div>
<div class="line"><span class="lineno">  130</span>    <span class="keywordflow">return</span> Error_t::kNoError;</div>
<div class="line"><span class="lineno">  131</span>}</div>
<div class="ttc" id="aa00406_xhtml"><div class="ttname"><a href="a00406.xhtml">CSpectrogramFromVector</a></div><div class="ttdoc">class for computation of the spectrogram from a vector of audio data</div><div class="ttdef"><b>Definition:</b> <a href="a00038_source.xhtml#l00063">Spectrogram.cpp:64</a></div></div>
<div class="ttc" id="aa00498_xhtml_a6d0e75b0bcbbb243b7141cfc0126e443"><div class="ttname"><a href="a00498.xhtml#a6d0e75b0bcbbb243b7141cfc0126e443">CUtil::isPowOf2</a></div><div class="ttdeci">static bool isPowOf2(int n)</div><div class="ttdef"><b>Definition:</b> <a href="a00185_source.xhtml#l00042">Util.h:42</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00185_source.xhtml#l00042">CUtil::isPowOf2()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00530_ab6855532487f599a72b825e4706430fb_cgraph.svg" width="328" height="36"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="acd73d8c1aaaed8b188de6b8bf2103139" name="acd73d8c1aaaed8b188de6b8bf2103139"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acd73d8c1aaaed8b188de6b8bf2103139">&#9670;&#160;</a></span>create() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00158.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> CSpectrogramIf::create </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="a00530.xhtml">CSpectrogramIf</a> *&amp;&#160;</td>
          <td class="paramname"><em>pCInstance</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>strAudioFilePath</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>iBlockLength</em> = <code>2048</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>iHopLength</em> = <code>1024</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="a00269.xhtml#abb452686968e48b67397da5f97445f5b">bool</a>&#160;</td>
          <td class="paramname"><em>bNormalize</em> = <code><a class="el" href="a00269.xhtml#a41f9c5fb8b08eb5dc3edce4dcb37fee7">true</a></code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>pfWindow</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p >initializes a Spectrogram instance with file reading </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pCInstance</td><td>pointer to instance to be written </td></tr>
    <tr><td class="paramname">strAudioFilePath</td><td>complete path to audio file </td></tr>
    <tr><td class="paramname">iBlockLength</td><td>FFT block length in samples </td></tr>
    <tr><td class="paramname">iHopLength</td><td>hop length in samples </td></tr>
    <tr><td class="paramname">bNormalize</td><td>flag if input audio should be normalized </td></tr>
    <tr><td class="paramname">pfWindow</td><td>window function of length iBlockLength (optional, default will be von-Hann if 0) </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Error_t </dd></dl>

<p class="definition">Definition at line <a class="el" href="a00038_source.xhtml#l00100">100</a> of file <a class="el" href="a00038_source.xhtml">Spectrogram.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  101</span>{</div>
<div class="line"><span class="lineno">  102</span>    <span class="keywordflow">if</span> (strAudioFilePath.empty())</div>
<div class="line"><span class="lineno">  103</span>        <span class="keywordflow">return</span> Error_t::kFunctionInvalidArgsError;</div>
<div class="line"><span class="lineno">  104</span>    <span class="keywordflow">if</span> (iBlockLength &lt;= 2 || !<a class="code hl_function" href="a00498.xhtml#a6d0e75b0bcbbb243b7141cfc0126e443">CUtil::isPowOf2</a>(iBlockLength))</div>
<div class="line"><span class="lineno">  105</span>        <span class="keywordflow">return</span> Error_t::kFunctionInvalidArgsError;</div>
<div class="line"><span class="lineno">  106</span>    <span class="keywordflow">if</span> (iHopLength &lt;= 0 || iHopLength &gt; iBlockLength)</div>
<div class="line"><span class="lineno">  107</span>        <span class="keywordflow">return</span> Error_t::kFunctionInvalidArgsError;</div>
<div class="line"><span class="lineno">  108</span> </div>
<div class="line"><span class="lineno">  109</span>    pCInstance = <span class="keyword">new</span> <a class="code hl_class" href="a00402.xhtml">CSpectrogramFromFile</a>(strAudioFilePath, iBlockLength, iHopLength, bNormalize, pfWindow);</div>
<div class="line"><span class="lineno">  110</span> </div>
<div class="line"><span class="lineno">  111</span> </div>
<div class="line"><span class="lineno">  112</span>    <span class="keywordflow">return</span> Error_t::kNoError;</div>
<div class="line"><span class="lineno">  113</span>}</div>
<div class="ttc" id="aa00402_xhtml"><div class="ttname"><a href="a00402.xhtml">CSpectrogramFromFile</a></div><div class="ttdoc">class for computation of the spectrogram from a file</div><div class="ttdef"><b>Definition:</b> <a href="a00038_source.xhtml#l00017">Spectrogram.cpp:18</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00185_source.xhtml#l00042">CUtil::isPowOf2()</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00119_source.xhtml#l00017">main()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00530_acd73d8c1aaaed8b188de6b8bf2103139_cgraph.svg" width="328" height="36"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00530_acd73d8c1aaaed8b188de6b8bf2103139_icgraph.svg" width="264" height="36"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a6511fc72ef04be91a712ee5ef479bd7e" name="a6511fc72ef04be91a712ee5ef479bd7e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6511fc72ef04be91a712ee5ef479bd7e">&#9670;&#160;</a></span>destroy()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00158.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> CSpectrogramIf::destroy </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="a00530.xhtml">CSpectrogramIf</a> *&amp;&#160;</td>
          <td class="paramname"><em>pCInstance</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p >destroys a Spectrogram instance </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pCInstance</td><td>pointer to instance to be destroyed </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Error_t </dd></dl>

<p class="definition">Definition at line <a class="el" href="a00038_source.xhtml#l00133">133</a> of file <a class="el" href="a00038_source.xhtml">Spectrogram.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  134</span>{</div>
<div class="line"><span class="lineno">  135</span>    <span class="keyword">delete</span> pCInstance;</div>
<div class="line"><span class="lineno">  136</span>    pCInstance = 0;</div>
<div class="line"><span class="lineno">  137</span> </div>
<div class="line"><span class="lineno">  138</span>    <span class="keywordflow">return</span> Error_t::kNoError;</div>
<div class="line"><span class="lineno">  139</span>}</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="a00119_source.xhtml#l00017">main()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00530_a6511fc72ef04be91a712ee5ef479bd7e_icgraph.svg" width="271" height="36"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a00140b0dd45e87aef4561aed8ebc779a" name="a00140b0dd45e87aef4561aed8ebc779a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a00140b0dd45e87aef4561aed8ebc779a">&#9670;&#160;</a></span>destroyMelFb_()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void CSpectrogramIf::destroyMelFb_ </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="a00534.xhtml">MelSpectrogramConfig_t</a> *&#160;</td>
          <td class="paramname"><em>pMelSpecConfig</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="a00038_source.xhtml#l00233">233</a> of file <a class="el" href="a00038_source.xhtml">Spectrogram.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  234</span>{</div>
<div class="line"><span class="lineno">  235</span>    <a class="code hl_function" href="a00486.xhtml#a591097c6b1935c4d6273b3445f8f552b">CMatrix::free</a>(<a class="code hl_variable" href="a00530.xhtml#ae3a0596e56fb18c4bd4a42a3f75710ed">m_ppfHMel</a>, pMelSpecConfig-&gt;iNumMelBins);</div>
<div class="line"><span class="lineno">  236</span>}</div>
<div class="ttc" id="aa00486_xhtml_a591097c6b1935c4d6273b3445f8f552b"><div class="ttname"><a href="a00486.xhtml#a591097c6b1935c4d6273b3445f8f552b">CMatrix::free</a></div><div class="ttdeci">static void free(T **&amp;pptMat, int iNumRows)</div><div class="ttdef"><b>Definition:</b> <a href="a00197_source.xhtml#l00058">Matrix.h:58</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00197_source.xhtml#l00058">CMatrix::free()</a>, <a class="el" href="a00218_source.xhtml#l00081">CSpectrogramIf::MelSpectrogramConfig_t::iNumMelBins</a>, and <a class="el" href="a00218_source.xhtml#l00137">m_ppfHMel</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00038_source.xhtml#l00333">compMelSpectrogram()</a>, and <a class="el" href="a00038_source.xhtml#l00296">getMelSpectrogramAxisVectors()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00530_a00140b0dd45e87aef4561aed8ebc779a_cgraph.svg" width="503" height="36"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00530_a00140b0dd45e87aef4561aed8ebc779a_icgraph.svg" width="608" height="102"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a04d8f71d4562f2a4efc8a8537826d8c3" name="a04d8f71d4562f2a4efc8a8537826d8c3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a04d8f71d4562f2a4efc8a8537826d8c3">&#9670;&#160;</a></span>generateMelFb_()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00158.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> CSpectrogramIf::generateMelFb_ </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="a00534.xhtml">MelSpectrogramConfig_t</a> *&#160;</td>
          <td class="paramname"><em>pMelSpecConfig</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p >&lt; normalization</p>

<p class="definition">Definition at line <a class="el" href="a00038_source.xhtml#l00380">380</a> of file <a class="el" href="a00038_source.xhtml">Spectrogram.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  381</span>{</div>
<div class="line"><span class="lineno">  382</span>    assert(pMelSpecConfig);</div>
<div class="line"><span class="lineno">  383</span> </div>
<div class="line"><span class="lineno">  384</span>    <span class="keywordtype">int</span> iMagLength = <a class="code hl_variable" href="a00530.xhtml#af2d9ad1a7f19819df98a16a12910793b">m_pCFft</a>-&gt;<a class="code hl_function" href="a00474.xhtml#a9cb162394031e8b496f7a39b51c31d20">getLength</a>(<a class="code hl_enumvalue" href="a00474.xhtml#aaeae67c99cd6e689243892e429a66e33a280c54c7da09951bd33a05dfb5dd4f8e">CFft::kLengthMagnitude</a>);</div>
<div class="line"><span class="lineno">  385</span> </div>
<div class="line"><span class="lineno">  386</span>    <span class="comment">// configuration check</span></div>
<div class="line"><span class="lineno">  387</span>    <span class="keywordflow">if</span> (pMelSpecConfig-&gt;fMinFreqInHz &lt; 0)</div>
<div class="line"><span class="lineno">  388</span>        <span class="keywordflow">return</span> Error_t::kFunctionInvalidArgsError;</div>
<div class="line"><span class="lineno">  389</span>    <span class="keywordflow">if</span> (pMelSpecConfig-&gt;fMaxFreqInHz &gt; <a class="code hl_variable" href="a00530.xhtml#ad41fa79049fdd292778046629a62139f">m_fSampleRate</a> / 2)</div>
<div class="line"><span class="lineno">  390</span>        <span class="keywordflow">return</span> Error_t::kFunctionInvalidArgsError;</div>
<div class="line"><span class="lineno">  391</span>    <span class="keywordflow">if</span> (pMelSpecConfig-&gt;iNumMelBins &lt;= 0 || pMelSpecConfig-&gt;iNumMelBins &gt; iMagLength)</div>
<div class="line"><span class="lineno">  392</span>        <span class="keywordflow">return</span> Error_t::kFunctionInvalidArgsError;</div>
<div class="line"><span class="lineno">  393</span> </div>
<div class="line"><span class="lineno">  394</span>    <span class="comment">// allocate filter matrix and frequency matrix</span></div>
<div class="line"><span class="lineno">  395</span>    <a class="code hl_function" href="a00502.xhtml#abaadac98b1cad18b7b568852bc951696">CVector::alloc</a>(<a class="code hl_variable" href="a00530.xhtml#a3311e6dae017c1c94dc174a3ae99a1dc">m_pffcMel</a>, <span class="keyword">static_cast&lt;</span><span class="keywordtype">long</span> <span class="keywordtype">long</span><span class="keyword">&gt;</span>(pMelSpecConfig-&gt;iNumMelBins) + 2); <span class="comment">// +2 for lower and upper bound</span></div>
<div class="line"><span class="lineno">  396</span>    <a class="code hl_function" href="a00486.xhtml#a6501b78d76c912d49eee88c8f7242923">CMatrix::alloc</a>(<a class="code hl_variable" href="a00530.xhtml#ae3a0596e56fb18c4bd4a42a3f75710ed">m_ppfHMel</a>, pMelSpecConfig-&gt;iNumMelBins, iMagLength);</div>
<div class="line"><span class="lineno">  397</span> </div>
<div class="line"><span class="lineno">  398</span> </div>
<div class="line"><span class="lineno">  399</span>    <span class="comment">// compute center band frequencies</span></div>
<div class="line"><span class="lineno">  400</span>    <a class="code hl_variable" href="a00530.xhtml#a3311e6dae017c1c94dc174a3ae99a1dc">m_pffcMel</a>[0] = <a class="code hl_function" href="a00550.xhtml#ad0d26c7c6a5edaa81527e68fe0c0c46f">CConversion::convertFreq2Mel</a>(pMelSpecConfig-&gt;fMinFreqInHz);</div>
<div class="line"><span class="lineno">  401</span>    <a class="code hl_variable" href="a00530.xhtml#a3311e6dae017c1c94dc174a3ae99a1dc">m_pffcMel</a>[pMelSpecConfig-&gt;iNumMelBins + 1] = <a class="code hl_function" href="a00550.xhtml#ad0d26c7c6a5edaa81527e68fe0c0c46f">CConversion::convertFreq2Mel</a>(pMelSpecConfig-&gt;fMaxFreqInHz);</div>
<div class="line"><span class="lineno">  402</span>    <span class="keywordtype">float</span> fMelInc = (<a class="code hl_variable" href="a00530.xhtml#a3311e6dae017c1c94dc174a3ae99a1dc">m_pffcMel</a>[pMelSpecConfig-&gt;iNumMelBins + 1] - <a class="code hl_variable" href="a00530.xhtml#a3311e6dae017c1c94dc174a3ae99a1dc">m_pffcMel</a>[0]) / (pMelSpecConfig-&gt;iNumMelBins + 1);</div>
<div class="line"><span class="lineno">  403</span>    <span class="keywordflow">for</span> (<span class="keyword">auto</span> k = 1; k &lt; pMelSpecConfig-&gt;iNumMelBins + 1; k++)</div>
<div class="line"><span class="lineno">  404</span>        <a class="code hl_variable" href="a00530.xhtml#a3311e6dae017c1c94dc174a3ae99a1dc">m_pffcMel</a>[k] = <a class="code hl_variable" href="a00530.xhtml#a3311e6dae017c1c94dc174a3ae99a1dc">m_pffcMel</a>[k - 1] + fMelInc;</div>
<div class="line"><span class="lineno">  405</span>    <span class="keywordflow">for</span> (<span class="keyword">auto</span> k = 0; k &lt; pMelSpecConfig-&gt;iNumMelBins + 2; k++)</div>
<div class="line"><span class="lineno">  406</span>        <a class="code hl_variable" href="a00530.xhtml#a3311e6dae017c1c94dc174a3ae99a1dc">m_pffcMel</a>[k] = <a class="code hl_function" href="a00550.xhtml#adbcadd75a3a33ca9e9453a17a9336318">CConversion::convertMel2Freq</a>(<a class="code hl_variable" href="a00530.xhtml#a3311e6dae017c1c94dc174a3ae99a1dc">m_pffcMel</a>[k]);</div>
<div class="line"><span class="lineno">  407</span> </div>
<div class="line"><span class="lineno">  408</span>    <span class="keywordtype">float</span> *pf_l = &amp;<a class="code hl_variable" href="a00530.xhtml#a3311e6dae017c1c94dc174a3ae99a1dc">m_pffcMel</a>[0],</div>
<div class="line"><span class="lineno">  409</span>        *pf_c = &amp;<a class="code hl_variable" href="a00530.xhtml#a3311e6dae017c1c94dc174a3ae99a1dc">m_pffcMel</a>[1],</div>
<div class="line"><span class="lineno">  410</span>        *pf_u = &amp;<a class="code hl_variable" href="a00530.xhtml#a3311e6dae017c1c94dc174a3ae99a1dc">m_pffcMel</a>[2];</div>
<div class="line"><span class="lineno">  411</span> </div>
<div class="line"><span class="lineno">  412</span>    <span class="keywordflow">for</span> (<span class="keyword">auto</span> m = 0; m &lt; pMelSpecConfig-&gt;iNumMelBins; m++)</div>
<div class="line"><span class="lineno">  413</span>    {</div>
<div class="line"><span class="lineno">  414</span>        <span class="keywordtype">float</span> fFilterMax = 2.F / (pf_u[m] - pf_l[m]); <span class="comment">//!&lt; normalization</span></div>
<div class="line"><span class="lineno">  415</span> </div>
<div class="line"><span class="lineno">  416</span>        <span class="keywordtype">int</span> iLowBin = 1 + <span class="keyword">static_cast&lt;</span><span class="keywordtype">int</span><span class="keyword">&gt;</span>(<a class="code hl_variable" href="a00530.xhtml#af2d9ad1a7f19819df98a16a12910793b">m_pCFft</a>-&gt;<a class="code hl_function" href="a00474.xhtml#a22af988b424911d7750a0f9f381aa443">freq2bin</a>(pf_l[m], <a class="code hl_variable" href="a00530.xhtml#ad41fa79049fdd292778046629a62139f">m_fSampleRate</a>));</div>
<div class="line"><span class="lineno">  417</span>        <span class="keywordtype">int</span> iCenterBin = 1 + <span class="keyword">static_cast&lt;</span><span class="keywordtype">int</span><span class="keyword">&gt;</span>(<a class="code hl_variable" href="a00530.xhtml#af2d9ad1a7f19819df98a16a12910793b">m_pCFft</a>-&gt;<a class="code hl_function" href="a00474.xhtml#a22af988b424911d7750a0f9f381aa443">freq2bin</a>(pf_c[m], <a class="code hl_variable" href="a00530.xhtml#ad41fa79049fdd292778046629a62139f">m_fSampleRate</a>));</div>
<div class="line"><span class="lineno">  418</span>        <span class="keywordtype">int</span> iUpBin = 1 + <span class="keyword">static_cast&lt;</span><span class="keywordtype">int</span><span class="keyword">&gt;</span>(<a class="code hl_variable" href="a00530.xhtml#af2d9ad1a7f19819df98a16a12910793b">m_pCFft</a>-&gt;<a class="code hl_function" href="a00474.xhtml#a22af988b424911d7750a0f9f381aa443">freq2bin</a>(pf_u[m], <a class="code hl_variable" href="a00530.xhtml#ad41fa79049fdd292778046629a62139f">m_fSampleRate</a>));</div>
<div class="line"><span class="lineno">  419</span> </div>
<div class="line"><span class="lineno">  420</span>        <span class="keywordflow">for</span> (<span class="keyword">auto</span> k = iLowBin; k &lt; iCenterBin; k++)</div>
<div class="line"><span class="lineno">  421</span>            <a class="code hl_variable" href="a00530.xhtml#ae3a0596e56fb18c4bd4a42a3f75710ed">m_ppfHMel</a>[m][k] = fFilterMax * (<a class="code hl_function" href="a00550.xhtml#aebe59f905b1dd02058cccbb062de6507">CConversion::convertBin2Freq</a>(<span class="keyword">static_cast&lt;</span><span class="keywordtype">float</span><span class="keyword">&gt;</span>(k), (iMagLength - 1) * 2, <a class="code hl_variable" href="a00530.xhtml#ad41fa79049fdd292778046629a62139f">m_fSampleRate</a>) - pf_l[m]) / (pf_c[m] - pf_l[m]);</div>
<div class="line"><span class="lineno">  422</span>        <span class="keywordflow">for</span> (<span class="keyword">auto</span> k = iCenterBin; k &lt; iUpBin; k++)</div>
<div class="line"><span class="lineno">  423</span>            <a class="code hl_variable" href="a00530.xhtml#ae3a0596e56fb18c4bd4a42a3f75710ed">m_ppfHMel</a>[m][k] = fFilterMax * (pf_u[m] - <a class="code hl_function" href="a00550.xhtml#aebe59f905b1dd02058cccbb062de6507">CConversion::convertBin2Freq</a>(<span class="keyword">static_cast&lt;</span><span class="keywordtype">float</span><span class="keyword">&gt;</span>(k), (iMagLength - 1) * 2, <a class="code hl_variable" href="a00530.xhtml#ad41fa79049fdd292778046629a62139f">m_fSampleRate</a>)) / (pf_u[m] - pf_c[m]);</div>
<div class="line"><span class="lineno">  424</span> </div>
<div class="line"><span class="lineno">  425</span>    }</div>
<div class="line"><span class="lineno">  426</span> </div>
<div class="line"><span class="lineno">  427</span>    <span class="keywordflow">return</span> Error_t::kNoError;</div>
<div class="line"><span class="lineno">  428</span>}</div>
<div class="ttc" id="aa00474_xhtml_a22af988b424911d7750a0f9f381aa443"><div class="ttname"><a href="a00474.xhtml#a22af988b424911d7750a0f9f381aa443">CFft::freq2bin</a></div><div class="ttdeci">float freq2bin(float fFreqInHz, float fSampleRateInHz) const</div><div class="ttdef"><b>Definition:</b> <a href="a00077_source.xhtml#l00216">Fft.cpp:216</a></div></div>
<div class="ttc" id="aa00486_xhtml_a6501b78d76c912d49eee88c8f7242923"><div class="ttname"><a href="a00486.xhtml#a6501b78d76c912d49eee88c8f7242923">CMatrix::alloc</a></div><div class="ttdeci">static void alloc(T **&amp;pptMat, int iNumRows, int iNumCols)</div><div class="ttdef"><b>Definition:</b> <a href="a00197_source.xhtml#l00023">Matrix.h:23</a></div></div>
<div class="ttc" id="aa00502_xhtml_abaadac98b1cad18b7b568852bc951696"><div class="ttname"><a href="a00502.xhtml#abaadac98b1cad18b7b568852bc951696">CVector::alloc</a></div><div class="ttdeci">static void alloc(T *&amp;ptVec, long long iLength)</div><div class="ttdef"><b>Definition:</b> <a href="a00194_source.xhtml#l00025">Vector.h:25</a></div></div>
<div class="ttc" id="aa00530_xhtml_a3311e6dae017c1c94dc174a3ae99a1dc"><div class="ttname"><a href="a00530.xhtml#a3311e6dae017c1c94dc174a3ae99a1dc">CSpectrogramIf::m_pffcMel</a></div><div class="ttdeci">float * m_pffcMel</div><div class="ttdoc">Mel center frequencies.</div><div class="ttdef"><b>Definition:</b> <a href="a00218_source.xhtml#l00138">Spectrogram.h:138</a></div></div>
<div class="ttc" id="aa00530_xhtml_ad41fa79049fdd292778046629a62139f"><div class="ttname"><a href="a00530.xhtml#ad41fa79049fdd292778046629a62139f">CSpectrogramIf::m_fSampleRate</a></div><div class="ttdeci">float m_fSampleRate</div><div class="ttdoc">sample rate</div><div class="ttdef"><b>Definition:</b> <a href="a00218_source.xhtml#l00132">Spectrogram.h:132</a></div></div>
<div class="ttc" id="aa00550_xhtml_ad0d26c7c6a5edaa81527e68fe0c0c46f"><div class="ttname"><a href="a00550.xhtml#ad0d26c7c6a5edaa81527e68fe0c0c46f">CConversion::convertFreq2Mel</a></div><div class="ttdeci">static float convertFreq2Mel(float fInHz, MelConversionFunctions_t eFunc=kFant)</div><div class="ttdef"><b>Definition:</b> <a href="a00035_source.xhtml#l00018">ToolConversion.cpp:18</a></div></div>
<div class="ttc" id="aa00550_xhtml_adbcadd75a3a33ca9e9453a17a9336318"><div class="ttname"><a href="a00550.xhtml#adbcadd75a3a33ca9e9453a17a9336318">CConversion::convertMel2Freq</a></div><div class="ttdeci">static float convertMel2Freq(float fMel, MelConversionFunctions_t eFunc=kFant)</div><div class="ttdef"><b>Definition:</b> <a href="a00035_source.xhtml#l00024">ToolConversion.cpp:24</a></div></div>
<div class="ttc" id="aa00550_xhtml_aebe59f905b1dd02058cccbb062de6507"><div class="ttname"><a href="a00550.xhtml#aebe59f905b1dd02058cccbb062de6507">CConversion::convertBin2Freq</a></div><div class="ttdeci">static float convertBin2Freq(float fBin, int iFftLength, float fSampleRate=44100.F)</div><div class="ttdef"><b>Definition:</b> <a href="a00254_source.xhtml#l00204">ToolConversion.h:204</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00194_source.xhtml#l00025">CVector::alloc()</a>, <a class="el" href="a00197_source.xhtml#l00023">CMatrix::alloc()</a>, <a class="el" href="a00254_source.xhtml#l00204">CConversion::convertBin2Freq()</a>, <a class="el" href="a00035_source.xhtml#l00018">CConversion::convertFreq2Mel()</a>, <a class="el" href="a00035_source.xhtml#l00024">CConversion::convertMel2Freq()</a>, <a class="el" href="a00218_source.xhtml#l00083">CSpectrogramIf::MelSpectrogramConfig_t::fMaxFreqInHz</a>, <a class="el" href="a00218_source.xhtml#l00082">CSpectrogramIf::MelSpectrogramConfig_t::fMinFreqInHz</a>, <a class="el" href="a00077_source.xhtml#l00216">CFft::freq2bin()</a>, <a class="el" href="a00077_source.xhtml#l00322">CFft::getLength()</a>, <a class="el" href="a00218_source.xhtml#l00081">CSpectrogramIf::MelSpectrogramConfig_t::iNumMelBins</a>, <a class="el" href="a00182_source.xhtml#l00107">CFft::kLengthMagnitude</a>, <a class="el" href="a00218_source.xhtml#l00132">m_fSampleRate</a>, <a class="el" href="a00218_source.xhtml#l00127">m_pCFft</a>, <a class="el" href="a00218_source.xhtml#l00138">m_pffcMel</a>, and <a class="el" href="a00218_source.xhtml#l00137">m_ppfHMel</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00038_source.xhtml#l00333">compMelSpectrogram()</a>, and <a class="el" href="a00038_source.xhtml#l00296">getMelSpectrogramAxisVectors()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00530_a04d8f71d4562f2a4efc8a8537826d8c3_cgraph.svg" width="100%" height="538"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00530_a04d8f71d4562f2a4efc8a8537826d8c3_icgraph.svg" width="574" height="102"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="afbc5337ad3646cbba2b189323de6ce3a" name="afbc5337ad3646cbba2b189323de6ce3a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afbc5337ad3646cbba2b189323de6ce3a">&#9670;&#160;</a></span>getMelSpectrogramAxisVectors()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00158.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> CSpectrogramIf::getMelSpectrogramAxisVectors </td>
          <td>(</td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>pfAxisTicks</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">enum <a class="el" href="a00530.xhtml#aadd5bf0e8b40d9ba74dd66ce28bafbcf">AxisLabel_t</a>&#160;</td>
          <td class="paramname"><em>eAxisLabel</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="a00534.xhtml">MelSpectrogramConfig_t</a> *&#160;</td>
          <td class="paramname"><em>pMelSpecConfig</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p >returns axis ticks </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pfAxisTicks</td><td>(to be written) equals iNumRows if eAxisLabel == kFrequencyInHz, otherwise iNumCols </td></tr>
    <tr><td class="paramname">eAxisLabel</td><td>indicator which axis </td></tr>
    <tr><td class="paramname">pMelSpecConfig</td><td>parametrization of the mel spectrogram </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Error_t </dd></dl>

<p class="definition">Definition at line <a class="el" href="a00038_source.xhtml#l00296">296</a> of file <a class="el" href="a00038_source.xhtml">Spectrogram.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  297</span>{</div>
<div class="line"><span class="lineno">  298</span>    <span class="keywordflow">if</span> (!<a class="code hl_variable" href="a00530.xhtml#a92d816e5c53f69e15c9fef51876d771d">m_bIsInitialized</a>)</div>
<div class="line"><span class="lineno">  299</span>    {</div>
<div class="line"><span class="lineno">  300</span>        <span class="keywordflow">return</span> Error_t::kFunctionIllegalCallError;</div>
<div class="line"><span class="lineno">  301</span>    }</div>
<div class="line"><span class="lineno">  302</span> </div>
<div class="line"><span class="lineno">  303</span>    <span class="keywordflow">if</span> (!pfAxisTicks || !pMelSpecConfig)</div>
<div class="line"><span class="lineno">  304</span>        <span class="keywordflow">return</span> Error_t::kFunctionInvalidArgsError;</div>
<div class="line"><span class="lineno">  305</span> </div>
<div class="line"><span class="lineno">  306</span>    assert(<a class="code hl_variable" href="a00530.xhtml#aeb9a67e20abef3f1028bb8db15022a0a">m_iBlockLength</a> &gt; 0);</div>
<div class="line"><span class="lineno">  307</span>    assert(<a class="code hl_variable" href="a00530.xhtml#a3520208ce92977729d22e1bbaa5b9532">m_iHopLength</a> &gt; 0);</div>
<div class="line"><span class="lineno">  308</span>    assert(<a class="code hl_variable" href="a00530.xhtml#ad41fa79049fdd292778046629a62139f">m_fSampleRate</a> &gt; 0);</div>
<div class="line"><span class="lineno">  309</span> </div>
<div class="line"><span class="lineno">  310</span> </div>
<div class="line"><span class="lineno">  311</span>    <span class="keywordflow">if</span> (eAxisLabel == <a class="code hl_enumvalue" href="a00530.xhtml#aadd5bf0e8b40d9ba74dd66ce28bafbcfa60478da724acf03bab5f69ae664dbe58">kTimeInS</a>)</div>
<div class="line"><span class="lineno">  312</span>    {</div>
<div class="line"><span class="lineno">  313</span>        <span class="keywordtype">long</span> <span class="keywordtype">long</span> iNumBlocks = <a class="code hl_variable" href="a00530.xhtml#a8b0cd13bbb3570f6b87017b11ca10d63">m_pCBlockAudio</a>-&gt;<a class="code hl_function" href="a00542.xhtml#a595b3a391e2540a1dc9e53edf8634494">getNumBlocks</a>();</div>
<div class="line"><span class="lineno">  314</span>        <span class="keywordflow">for</span> (<span class="keyword">auto</span> n = 0; n &lt; iNumBlocks; n++)</div>
<div class="line"><span class="lineno">  315</span>            pfAxisTicks[n] = <a class="code hl_variable" href="a00530.xhtml#a8b0cd13bbb3570f6b87017b11ca10d63">m_pCBlockAudio</a>-&gt;<a class="code hl_function" href="a00542.xhtml#a95d0310c888433e7e45806538dc0d347">getTimeStamp</a>(n);</div>
<div class="line"><span class="lineno">  316</span>    }</div>
<div class="line"><span class="lineno">  317</span> </div>
<div class="line"><span class="lineno">  318</span>    <span class="keywordflow">if</span> (eAxisLabel == <a class="code hl_enumvalue" href="a00530.xhtml#aadd5bf0e8b40d9ba74dd66ce28bafbcfa0ae125df6dd5dd61b17eed69fc25c61d">kFrequencyInHz</a>)</div>
<div class="line"><span class="lineno">  319</span>    {</div>
<div class="line"><span class="lineno">  320</span>        <a class="code hl_function" href="a00530.xhtml#a04d8f71d4562f2a4efc8a8537826d8c3">generateMelFb_</a>(pMelSpecConfig);</div>
<div class="line"><span class="lineno">  321</span> </div>
<div class="line"><span class="lineno">  322</span>        assert(<a class="code hl_variable" href="a00530.xhtml#a3311e6dae017c1c94dc174a3ae99a1dc">m_pffcMel</a>);</div>
<div class="line"><span class="lineno">  323</span> </div>
<div class="line"><span class="lineno">  324</span>        <span class="comment">// note that we start with 1 to look at the center freqs only</span></div>
<div class="line"><span class="lineno">  325</span>        <a class="code hl_function" href="a00502.xhtml#ad7c5cba73e439adac77778f61c9418f0">CVector::copy</a>(pfAxisTicks, &amp;<a class="code hl_variable" href="a00530.xhtml#a3311e6dae017c1c94dc174a3ae99a1dc">m_pffcMel</a>[1], pMelSpecConfig-&gt;iNumMelBins);</div>
<div class="line"><span class="lineno">  326</span> </div>
<div class="line"><span class="lineno">  327</span>        <a class="code hl_function" href="a00530.xhtml#a00140b0dd45e87aef4561aed8ebc779a">destroyMelFb_</a>(pMelSpecConfig);</div>
<div class="line"><span class="lineno">  328</span>    }</div>
<div class="line"><span class="lineno">  329</span> </div>
<div class="line"><span class="lineno">  330</span>    <span class="keywordflow">return</span> Error_t::kNoError;</div>
<div class="line"><span class="lineno">  331</span>}</div>
<div class="ttc" id="aa00502_xhtml_ad7c5cba73e439adac77778f61c9418f0"><div class="ttname"><a href="a00502.xhtml#ad7c5cba73e439adac77778f61c9418f0">CVector::copy</a></div><div class="ttdeci">static void copy(T *ptDest, const T *ptSrc, long long int iLength)</div><div class="ttdef"><b>Definition:</b> <a href="a00194_source.xhtml#l00041">Vector.h:41</a></div></div>
<div class="ttc" id="aa00530_xhtml_a3520208ce92977729d22e1bbaa5b9532"><div class="ttname"><a href="a00530.xhtml#a3520208ce92977729d22e1bbaa5b9532">CSpectrogramIf::m_iHopLength</a></div><div class="ttdeci">int m_iHopLength</div><div class="ttdoc">hop length</div><div class="ttdef"><b>Definition:</b> <a href="a00218_source.xhtml#l00130">Spectrogram.h:130</a></div></div>
<div class="ttc" id="aa00542_xhtml_a95d0310c888433e7e45806538dc0d347"><div class="ttname"><a href="a00542.xhtml#a95d0310c888433e7e45806538dc0d347">CBlockAudioIf::getTimeStamp</a></div><div class="ttdeci">float getTimeStamp(long long iBlockIdx)</div><div class="ttdef"><b>Definition:</b> <a href="a00161_source.xhtml#l00066">ToolBlockAudio.h:66</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00194_source.xhtml#l00041">CVector::copy()</a>, <a class="el" href="a00038_source.xhtml#l00233">destroyMelFb_()</a>, <a class="el" href="a00038_source.xhtml#l00380">generateMelFb_()</a>, <a class="el" href="a00161_source.xhtml#l00049">CBlockAudioIf::getNumBlocks()</a>, <a class="el" href="a00161_source.xhtml#l00066">CBlockAudioIf::getTimeStamp()</a>, <a class="el" href="a00218_source.xhtml#l00081">CSpectrogramIf::MelSpectrogramConfig_t::iNumMelBins</a>, <a class="el" href="a00218_source.xhtml#l00021">kFrequencyInHz</a>, <a class="el" href="a00218_source.xhtml#l00022">kTimeInS</a>, <a class="el" href="a00218_source.xhtml#l00140">m_bIsInitialized</a>, <a class="el" href="a00218_source.xhtml#l00132">m_fSampleRate</a>, <a class="el" href="a00218_source.xhtml#l00129">m_iBlockLength</a>, <a class="el" href="a00218_source.xhtml#l00130">m_iHopLength</a>, <a class="el" href="a00218_source.xhtml#l00125">m_pCBlockAudio</a>, and <a class="el" href="a00218_source.xhtml#l00138">m_pffcMel</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00530_afbc5337ad3646cbba2b189323de6ce3a_cgraph.svg" width="100%" height="588"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="af50a3669266ad696a1159b1bb80b1c8a" name="af50a3669266ad696a1159b1bb80b1c8a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af50a3669266ad696a1159b1bb80b1c8a">&#9670;&#160;</a></span>getMelSpectrogramDimensions()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00158.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> CSpectrogramIf::getMelSpectrogramDimensions </td>
          <td>(</td>
          <td class="paramtype">int &amp;&#160;</td>
          <td class="paramname"><em>iNumRows</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int &amp;&#160;</td>
          <td class="paramname"><em>iNumCols</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="a00534.xhtml">MelSpectrogramConfig_t</a> *&#160;</td>
          <td class="paramname"><em>pMelSpecConfig</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >returns size of matrix to be allocated by user </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">iNumRows</td><td>(number of rows, to be written) equals number of frequency bins </td></tr>
    <tr><td class="paramname">iNumCols</td><td>(number of columns, to be written) equals number of blocks </td></tr>
    <tr><td class="paramname">pMelSpecConfig</td><td>parametrization of the mel spectrogram </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Error_t </dd></dl>

<p class="definition">Definition at line <a class="el" href="a00038_source.xhtml#l00278">278</a> of file <a class="el" href="a00038_source.xhtml">Spectrogram.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  279</span>{</div>
<div class="line"><span class="lineno">  280</span>    <span class="keywordflow">if</span> (!pMelSpecConfig)</div>
<div class="line"><span class="lineno">  281</span>        <span class="keywordflow">return</span> Error_t::kFunctionInvalidArgsError;</div>
<div class="line"><span class="lineno">  282</span> </div>
<div class="line"><span class="lineno">  283</span>    <span class="keywordflow">if</span> (!<a class="code hl_variable" href="a00530.xhtml#a92d816e5c53f69e15c9fef51876d771d">m_bIsInitialized</a>)</div>
<div class="line"><span class="lineno">  284</span>    {</div>
<div class="line"><span class="lineno">  285</span>        iNumRows = 0;</div>
<div class="line"><span class="lineno">  286</span>        iNumCols = 0;</div>
<div class="line"><span class="lineno">  287</span>        <span class="keywordflow">return</span> Error_t::kFunctionIllegalCallError;</div>
<div class="line"><span class="lineno">  288</span>    }</div>
<div class="line"><span class="lineno">  289</span> </div>
<div class="line"><span class="lineno">  290</span>    iNumRows = pMelSpecConfig-&gt;iNumMelBins;</div>
<div class="line"><span class="lineno">  291</span>    iNumCols = <span class="keyword">static_cast&lt;</span><span class="keywordtype">int</span><span class="keyword">&gt;</span>(<a class="code hl_variable" href="a00530.xhtml#a8b0cd13bbb3570f6b87017b11ca10d63">m_pCBlockAudio</a>-&gt;<a class="code hl_function" href="a00542.xhtml#a595b3a391e2540a1dc9e53edf8634494">getNumBlocks</a>());</div>
<div class="line"><span class="lineno">  292</span> </div>
<div class="line"><span class="lineno">  293</span>    <span class="keywordflow">return</span> Error_t::kNoError;</div>
<div class="line"><span class="lineno">  294</span>}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00161_source.xhtml#l00049">CBlockAudioIf::getNumBlocks()</a>, <a class="el" href="a00218_source.xhtml#l00081">CSpectrogramIf::MelSpectrogramConfig_t::iNumMelBins</a>, <a class="el" href="a00218_source.xhtml#l00140">m_bIsInitialized</a>, and <a class="el" href="a00218_source.xhtml#l00125">m_pCBlockAudio</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00119_source.xhtml#l00017">main()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00530_af50a3669266ad696a1159b1bb80b1c8a_cgraph.svg" width="488" height="51"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00530_af50a3669266ad696a1159b1bb80b1c8a_icgraph.svg" width="342" height="51"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a2efaeb2df2ddfdc633ba53b2bb49b528" name="a2efaeb2df2ddfdc633ba53b2bb49b528"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2efaeb2df2ddfdc633ba53b2bb49b528">&#9670;&#160;</a></span>getSpectrogramAxisVectors()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00158.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> CSpectrogramIf::getSpectrogramAxisVectors </td>
          <td>(</td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>pfAxisTicks</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">enum <a class="el" href="a00530.xhtml#aadd5bf0e8b40d9ba74dd66ce28bafbcf">AxisLabel_t</a>&#160;</td>
          <td class="paramname"><em>eAxisLabel</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >returns axis ticks </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pfAxisTicks</td><td>(to be written) equals iNumRows if eAxisLabel == kFrequencyInHz, otherwise iNumCols </td></tr>
    <tr><td class="paramname">eAxisLabel</td><td>indicator which axis </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Error_t </dd></dl>

<p class="definition">Definition at line <a class="el" href="a00038_source.xhtml#l00156">156</a> of file <a class="el" href="a00038_source.xhtml">Spectrogram.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  157</span>{</div>
<div class="line"><span class="lineno">  158</span>    <span class="keywordflow">if</span> (!<a class="code hl_variable" href="a00530.xhtml#a92d816e5c53f69e15c9fef51876d771d">m_bIsInitialized</a>)</div>
<div class="line"><span class="lineno">  159</span>    {</div>
<div class="line"><span class="lineno">  160</span>        <span class="keywordflow">return</span> Error_t::kFunctionIllegalCallError;</div>
<div class="line"><span class="lineno">  161</span>    }</div>
<div class="line"><span class="lineno">  162</span> </div>
<div class="line"><span class="lineno">  163</span>    <span class="keywordflow">if</span> (!pfAxisTicks)</div>
<div class="line"><span class="lineno">  164</span>        <span class="keywordflow">return</span> Error_t::kFunctionInvalidArgsError;</div>
<div class="line"><span class="lineno">  165</span> </div>
<div class="line"><span class="lineno">  166</span>    assert(<a class="code hl_variable" href="a00530.xhtml#aeb9a67e20abef3f1028bb8db15022a0a">m_iBlockLength</a> &gt; 0);</div>
<div class="line"><span class="lineno">  167</span>    assert(<a class="code hl_variable" href="a00530.xhtml#a3520208ce92977729d22e1bbaa5b9532">m_iHopLength</a> &gt; 0);</div>
<div class="line"><span class="lineno">  168</span>    assert(<a class="code hl_variable" href="a00530.xhtml#ad41fa79049fdd292778046629a62139f">m_fSampleRate</a> &gt; 0);</div>
<div class="line"><span class="lineno">  169</span> </div>
<div class="line"><span class="lineno">  170</span>    <span class="keywordflow">if</span> (eAxisLabel == <a class="code hl_enumvalue" href="a00530.xhtml#aadd5bf0e8b40d9ba74dd66ce28bafbcfa60478da724acf03bab5f69ae664dbe58">kTimeInS</a>)</div>
<div class="line"><span class="lineno">  171</span>    {</div>
<div class="line"><span class="lineno">  172</span>        <span class="keywordtype">long</span> <span class="keywordtype">long</span> iNumBlocks = <a class="code hl_variable" href="a00530.xhtml#a8b0cd13bbb3570f6b87017b11ca10d63">m_pCBlockAudio</a>-&gt;<a class="code hl_function" href="a00542.xhtml#a595b3a391e2540a1dc9e53edf8634494">getNumBlocks</a>();</div>
<div class="line"><span class="lineno">  173</span>        <span class="keywordflow">for</span> (<span class="keyword">auto</span> n = 0; n &lt; iNumBlocks; n++)</div>
<div class="line"><span class="lineno">  174</span>            pfAxisTicks[n] = <a class="code hl_variable" href="a00530.xhtml#a8b0cd13bbb3570f6b87017b11ca10d63">m_pCBlockAudio</a>-&gt;<a class="code hl_function" href="a00542.xhtml#a95d0310c888433e7e45806538dc0d347">getTimeStamp</a>(n);</div>
<div class="line"><span class="lineno">  175</span>    }</div>
<div class="line"><span class="lineno">  176</span> </div>
<div class="line"><span class="lineno">  177</span>    <span class="keywordflow">if</span> (eAxisLabel == <a class="code hl_enumvalue" href="a00530.xhtml#aadd5bf0e8b40d9ba74dd66ce28bafbcfa0ae125df6dd5dd61b17eed69fc25c61d">kFrequencyInHz</a>)</div>
<div class="line"><span class="lineno">  178</span>    {</div>
<div class="line"><span class="lineno">  179</span>        <span class="keywordtype">int</span> iNumFreqBins = (<a class="code hl_variable" href="a00530.xhtml#aeb9a67e20abef3f1028bb8db15022a0a">m_iBlockLength</a> &gt;&gt; 1) + 1;</div>
<div class="line"><span class="lineno">  180</span>        <span class="keywordflow">for</span> (<span class="keyword">auto</span> k = 0; k &lt; iNumFreqBins; k++)</div>
<div class="line"><span class="lineno">  181</span>            pfAxisTicks[k] = <a class="code hl_variable" href="a00530.xhtml#af2d9ad1a7f19819df98a16a12910793b">m_pCFft</a>-&gt;<a class="code hl_function" href="a00474.xhtml#abf23a07e3c1f0073d37192711fbb8e1f">bin2freq</a>(k, <a class="code hl_variable" href="a00530.xhtml#ad41fa79049fdd292778046629a62139f">m_fSampleRate</a>);</div>
<div class="line"><span class="lineno">  182</span>    }</div>
<div class="line"><span class="lineno">  183</span> </div>
<div class="line"><span class="lineno">  184</span>    <span class="keywordflow">return</span> Error_t::kNoError;</div>
<div class="line"><span class="lineno">  185</span>}</div>
<div class="ttc" id="aa00474_xhtml_abf23a07e3c1f0073d37192711fbb8e1f"><div class="ttname"><a href="a00474.xhtml#abf23a07e3c1f0073d37192711fbb8e1f">CFft::bin2freq</a></div><div class="ttdeci">float bin2freq(int iBinIdx, float fSampleRateInHz) const</div><div class="ttdef"><b>Definition:</b> <a href="a00077_source.xhtml#l00221">Fft.cpp:221</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00077_source.xhtml#l00221">CFft::bin2freq()</a>, <a class="el" href="a00161_source.xhtml#l00049">CBlockAudioIf::getNumBlocks()</a>, <a class="el" href="a00161_source.xhtml#l00066">CBlockAudioIf::getTimeStamp()</a>, <a class="el" href="a00218_source.xhtml#l00021">kFrequencyInHz</a>, <a class="el" href="a00218_source.xhtml#l00022">kTimeInS</a>, <a class="el" href="a00218_source.xhtml#l00140">m_bIsInitialized</a>, <a class="el" href="a00218_source.xhtml#l00132">m_fSampleRate</a>, <a class="el" href="a00218_source.xhtml#l00129">m_iBlockLength</a>, <a class="el" href="a00218_source.xhtml#l00130">m_iHopLength</a>, <a class="el" href="a00218_source.xhtml#l00125">m_pCBlockAudio</a>, and <a class="el" href="a00218_source.xhtml#l00127">m_pCFft</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00530_a2efaeb2df2ddfdc633ba53b2bb49b528_cgraph.svg" width="467" height="135"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="afb50af1070f5876b4706f5891879fcd8" name="afb50af1070f5876b4706f5891879fcd8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afb50af1070f5876b4706f5891879fcd8">&#9670;&#160;</a></span>getSpectrogramDimensions()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00158.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> CSpectrogramIf::getSpectrogramDimensions </td>
          <td>(</td>
          <td class="paramtype">int &amp;&#160;</td>
          <td class="paramname"><em>iNumRows</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int &amp;&#160;</td>
          <td class="paramname"><em>iNumCols</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p >returns size of matrix to be allocated by user </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">iNumRows</td><td>(number of rows, to be written) equals number of frequency bins </td></tr>
    <tr><td class="paramname">iNumCols</td><td>(number of columns, to be written) equals number of blocks </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Error_t </dd></dl>

<p class="definition">Definition at line <a class="el" href="a00038_source.xhtml#l00141">141</a> of file <a class="el" href="a00038_source.xhtml">Spectrogram.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  142</span>{</div>
<div class="line"><span class="lineno">  143</span>    <span class="keywordflow">if</span> (!<a class="code hl_variable" href="a00530.xhtml#a92d816e5c53f69e15c9fef51876d771d">m_bIsInitialized</a>)</div>
<div class="line"><span class="lineno">  144</span>    {</div>
<div class="line"><span class="lineno">  145</span>        iNumRows = 0;</div>
<div class="line"><span class="lineno">  146</span>        iNumCols = 0;</div>
<div class="line"><span class="lineno">  147</span>        <span class="keywordflow">return</span> Error_t::kFunctionIllegalCallError;</div>
<div class="line"><span class="lineno">  148</span>    }</div>
<div class="line"><span class="lineno">  149</span> </div>
<div class="line"><span class="lineno">  150</span>    iNumRows = (<a class="code hl_variable" href="a00530.xhtml#aeb9a67e20abef3f1028bb8db15022a0a">m_iBlockLength</a> &gt;&gt; 1) + 1;</div>
<div class="line"><span class="lineno">  151</span>    iNumCols = <span class="keyword">static_cast&lt;</span><span class="keywordtype">int</span><span class="keyword">&gt;</span>(<a class="code hl_variable" href="a00530.xhtml#a8b0cd13bbb3570f6b87017b11ca10d63">m_pCBlockAudio</a>-&gt;<a class="code hl_function" href="a00542.xhtml#a595b3a391e2540a1dc9e53edf8634494">getNumBlocks</a>());</div>
<div class="line"><span class="lineno">  152</span> </div>
<div class="line"><span class="lineno">  153</span>    <span class="keywordflow">return</span> Error_t::kNoError;</div>
<div class="line"><span class="lineno">  154</span>}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00161_source.xhtml#l00049">CBlockAudioIf::getNumBlocks()</a>, <a class="el" href="a00218_source.xhtml#l00140">m_bIsInitialized</a>, <a class="el" href="a00218_source.xhtml#l00129">m_iBlockLength</a>, and <a class="el" href="a00218_source.xhtml#l00125">m_pCBlockAudio</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00008_source.xhtml#l00017">main()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00530_afb50af1070f5876b4706f5891879fcd8_cgraph.svg" width="467" height="51"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00530_afb50af1070f5876b4706f5891879fcd8_icgraph.svg" width="320" height="51"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a9c4b2db2031256e48ade8c9fa235b6f2" name="a9c4b2db2031256e48ade8c9fa235b6f2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9c4b2db2031256e48ade8c9fa235b6f2">&#9670;&#160;</a></span>init_()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00158.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> CSpectrogramIf::init_ </td>
          <td>(</td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>pfWindow</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>init configuration </p>

<p class="definition">Definition at line <a class="el" href="a00038_source.xhtml#l00260">260</a> of file <a class="el" href="a00038_source.xhtml">Spectrogram.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  261</span>{</div>
<div class="line"><span class="lineno">  262</span>    <span class="comment">// initialize FFT and fft  buffer</span></div>
<div class="line"><span class="lineno">  263</span>    <a class="code hl_variable" href="a00530.xhtml#af2d9ad1a7f19819df98a16a12910793b">m_pCFft</a> = <span class="keyword">new</span> <a class="code hl_class" href="a00474.xhtml">CFft</a>();</div>
<div class="line"><span class="lineno">  264</span>    <a class="code hl_variable" href="a00530.xhtml#af2d9ad1a7f19819df98a16a12910793b">m_pCFft</a>-&gt;<a class="code hl_function" href="a00474.xhtml#adea9b0cecccfdb5a3da3218da6f683dd">init</a>(<a class="code hl_variable" href="a00530.xhtml#aeb9a67e20abef3f1028bb8db15022a0a">m_iBlockLength</a>);</div>
<div class="line"><span class="lineno">  265</span>    <span class="keywordflow">if</span> (pfWindow)</div>
<div class="line"><span class="lineno">  266</span>        <a class="code hl_variable" href="a00530.xhtml#af2d9ad1a7f19819df98a16a12910793b">m_pCFft</a>-&gt;<a class="code hl_function" href="a00474.xhtml#aa613a3fa5e2e0ce0889021fdaaed8a0e">overrideWindow</a>(pfWindow);</div>
<div class="line"><span class="lineno">  267</span> </div>
<div class="line"><span class="lineno">  268</span>    <span class="comment">// allocate processing memory</span></div>
<div class="line"><span class="lineno">  269</span>    <a class="code hl_function" href="a00502.xhtml#abaadac98b1cad18b7b568852bc951696">CVector::alloc</a>(<a class="code hl_variable" href="a00530.xhtml#a46220f31318fed176ec507649fae3e50">m_pfSpectrum</a>, <a class="code hl_variable" href="a00530.xhtml#aeb9a67e20abef3f1028bb8db15022a0a">m_iBlockLength</a>);</div>
<div class="line"><span class="lineno">  270</span>    <a class="code hl_function" href="a00502.xhtml#abaadac98b1cad18b7b568852bc951696">CVector::alloc</a>(<a class="code hl_variable" href="a00530.xhtml#a0b4bcf166ebcebaa5866061eec85debf">m_pfProcBuff</a>, <a class="code hl_variable" href="a00530.xhtml#aeb9a67e20abef3f1028bb8db15022a0a">m_iBlockLength</a>);</div>
<div class="line"><span class="lineno">  271</span> </div>
<div class="line"><span class="lineno">  272</span>    <a class="code hl_variable" href="a00530.xhtml#a92d816e5c53f69e15c9fef51876d771d">m_bIsInitialized</a> = <span class="keyword">true</span>;</div>
<div class="line"><span class="lineno">  273</span> </div>
<div class="line"><span class="lineno">  274</span>    <span class="keywordflow">return</span> Error_t::kNoError;</div>
<div class="line"><span class="lineno">  275</span>}</div>
<div class="ttc" id="aa00474_xhtml"><div class="ttname"><a href="a00474.xhtml">CFft</a></div><div class="ttdoc">class for FFT computation with windowing</div><div class="ttdef"><b>Definition:</b> <a href="a00182_source.xhtml#l00008">Fft.h:9</a></div></div>
<div class="ttc" id="aa00474_xhtml_aa613a3fa5e2e0ce0889021fdaaed8a0e"><div class="ttname"><a href="a00474.xhtml#aa613a3fa5e2e0ce0889021fdaaed8a0e">CFft::overrideWindow</a></div><div class="ttdeci">Error_t overrideWindow(const float *pfNewWindow)</div><div class="ttdef"><b>Definition:</b> <a href="a00077_source.xhtml#l00067">Fft.cpp:67</a></div></div>
<div class="ttc" id="aa00474_xhtml_adea9b0cecccfdb5a3da3218da6f683dd"><div class="ttname"><a href="a00474.xhtml#adea9b0cecccfdb5a3da3218da6f683dd">CFft::init</a></div><div class="ttdeci">Error_t init(int iBlockLength, int iZeroPadFactor=1, WindowFunction_t eWindow=kWindowHann, Windowing_t eWindowing=kPreWindow)</div><div class="ttdef"><b>Definition:</b> <a href="a00077_source.xhtml#l00024">Fft.cpp:24</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00194_source.xhtml#l00025">CVector::alloc()</a>, <a class="el" href="a00077_source.xhtml#l00024">CFft::init()</a>, <a class="el" href="a00218_source.xhtml#l00140">m_bIsInitialized</a>, <a class="el" href="a00218_source.xhtml#l00129">m_iBlockLength</a>, <a class="el" href="a00218_source.xhtml#l00127">m_pCFft</a>, <a class="el" href="a00218_source.xhtml#l00135">m_pfProcBuff</a>, <a class="el" href="a00218_source.xhtml#l00134">m_pfSpectrum</a>, and <a class="el" href="a00077_source.xhtml#l00067">CFft::overrideWindow()</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00038_source.xhtml#l00037">CSpectrogramFromFile::CSpectrogramFromFile()</a>, and <a class="el" href="a00038_source.xhtml#l00070">CSpectrogramFromVector::CSpectrogramFromVector()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a00530_a9c4b2db2031256e48ade8c9fa235b6f2_cgraph.svg" width="100%" height="531"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00530_a9c4b2db2031256e48ade8c9fa235b6f2_icgraph.svg" width="380" height="115"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a532de34b312a3f850fa8ad4fb3cde62a" name="a532de34b312a3f850fa8ad4fb3cde62a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a532de34b312a3f850fa8ad4fb3cde62a">&#9670;&#160;</a></span>operator=()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00530.xhtml">CSpectrogramIf</a> &amp; CSpectrogramIf::operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="a00530.xhtml">CSpectrogramIf</a> &amp;&#160;</td>
          <td class="paramname"><em>c</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="afbe3214c599eaab59c8c5a886408630c" name="afbe3214c599eaab59c8c5a886408630c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afbe3214c599eaab59c8c5a886408630c">&#9670;&#160;</a></span>reset_()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00158.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> CSpectrogramIf::reset_ </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>reset configuration </p>

<p class="definition">Definition at line <a class="el" href="a00038_source.xhtml#l00238">238</a> of file <a class="el" href="a00038_source.xhtml">Spectrogram.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  239</span>{</div>
<div class="line"><span class="lineno">  240</span>    <a class="code hl_function" href="a00502.xhtml#aa86bdb0c663d4d52f2765793756f8737">CVector::free</a>(<a class="code hl_variable" href="a00530.xhtml#a0b4bcf166ebcebaa5866061eec85debf">m_pfProcBuff</a>);</div>
<div class="line"><span class="lineno">  241</span> </div>
<div class="line"><span class="lineno">  242</span>    <a class="code hl_function" href="a00502.xhtml#aa86bdb0c663d4d52f2765793756f8737">CVector::free</a>(<a class="code hl_variable" href="a00530.xhtml#a46220f31318fed176ec507649fae3e50">m_pfSpectrum</a>);</div>
<div class="line"><span class="lineno">  243</span> </div>
<div class="line"><span class="lineno">  244</span>    <span class="keyword">delete</span> <a class="code hl_variable" href="a00530.xhtml#af2d9ad1a7f19819df98a16a12910793b">m_pCFft</a>;</div>
<div class="line"><span class="lineno">  245</span>    <a class="code hl_variable" href="a00530.xhtml#af2d9ad1a7f19819df98a16a12910793b">m_pCFft</a> = 0;</div>
<div class="line"><span class="lineno">  246</span> </div>
<div class="line"><span class="lineno">  247</span>    <span class="keyword">delete</span> <a class="code hl_variable" href="a00530.xhtml#a42a7505fe0188726c859c4656eaf61eb">m_pCNormalize</a>;</div>
<div class="line"><span class="lineno">  248</span>    <a class="code hl_variable" href="a00530.xhtml#a42a7505fe0188726c859c4656eaf61eb">m_pCNormalize</a> = 0;</div>
<div class="line"><span class="lineno">  249</span> </div>
<div class="line"><span class="lineno">  250</span>    <a class="code hl_function" href="a00542.xhtml#a13d2bd6e36210dde0c64d188c1266b88">CBlockAudioIf::destroy</a>(<a class="code hl_variable" href="a00530.xhtml#a8b0cd13bbb3570f6b87017b11ca10d63">m_pCBlockAudio</a>);</div>
<div class="line"><span class="lineno">  251</span> </div>
<div class="line"><span class="lineno">  252</span>    <a class="code hl_variable" href="a00530.xhtml#aeb9a67e20abef3f1028bb8db15022a0a">m_iBlockLength</a> = 0;</div>
<div class="line"><span class="lineno">  253</span>    <a class="code hl_variable" href="a00530.xhtml#a3520208ce92977729d22e1bbaa5b9532">m_iHopLength</a> = 0;</div>
<div class="line"><span class="lineno">  254</span> </div>
<div class="line"><span class="lineno">  255</span>    <a class="code hl_variable" href="a00530.xhtml#a92d816e5c53f69e15c9fef51876d771d">m_bIsInitialized</a> = <span class="keyword">false</span>;</div>
<div class="line"><span class="lineno">  256</span> </div>
<div class="line"><span class="lineno">  257</span>    <span class="keywordflow">return</span> Error_t::kNoError;</div>
<div class="line"><span class="lineno">  258</span>}</div>
<div class="ttc" id="aa00502_xhtml_aa86bdb0c663d4d52f2765793756f8737"><div class="ttname"><a href="a00502.xhtml#aa86bdb0c663d4d52f2765793756f8737">CVector::free</a></div><div class="ttdeci">static void free(T *&amp;ptVec)</div><div class="ttdef"><b>Definition:</b> <a href="a00194_source.xhtml#l00057">Vector.h:57</a></div></div>
<div class="ttc" id="aa00542_xhtml_a13d2bd6e36210dde0c64d188c1266b88"><div class="ttname"><a href="a00542.xhtml#a13d2bd6e36210dde0c64d188c1266b88">CBlockAudioIf::destroy</a></div><div class="ttdeci">static Error_t destroy(CBlockAudioIf *&amp;pCInstance)</div><div class="ttdef"><b>Definition:</b> <a href="a00161_source.xhtml#l00038">ToolBlockAudio.h:38</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="a00161_source.xhtml#l00038">CBlockAudioIf::destroy()</a>, <a class="el" href="a00194_source.xhtml#l00057">CVector::free()</a>, <a class="el" href="a00218_source.xhtml#l00140">m_bIsInitialized</a>, <a class="el" href="a00218_source.xhtml#l00129">m_iBlockLength</a>, <a class="el" href="a00218_source.xhtml#l00130">m_iHopLength</a>, <a class="el" href="a00218_source.xhtml#l00125">m_pCBlockAudio</a>, <a class="el" href="a00218_source.xhtml#l00127">m_pCFft</a>, <a class="el" href="a00218_source.xhtml#l00123">m_pCNormalize</a>, <a class="el" href="a00218_source.xhtml#l00135">m_pfProcBuff</a>, and <a class="el" href="a00218_source.xhtml#l00134">m_pfSpectrum</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00038_source.xhtml#l00037">CSpectrogramFromFile::CSpectrogramFromFile()</a>, <a class="el" href="a00038_source.xhtml#l00090">CSpectrogramIf()</a>, and <a class="el" href="a00038_source.xhtml#l00095">~CSpectrogramIf()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00530_afbe3214c599eaab59c8c5a886408630c_cgraph.svg" width="367" height="86"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00530_afbe3214c599eaab59c8c5a886408630c_icgraph.svg" width="431" height="151"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="a92d816e5c53f69e15c9fef51876d771d" name="a92d816e5c53f69e15c9fef51876d771d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a92d816e5c53f69e15c9fef51876d771d">&#9670;&#160;</a></span>m_bIsInitialized</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00269.xhtml#abb452686968e48b67397da5f97445f5b">bool</a> CSpectrogramIf::m_bIsInitialized = <a class="el" href="a00269.xhtml#a65e9886d74aaee76545e83dd09011727">false</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>true if initialized </p>

<p class="definition">Definition at line <a class="el" href="a00218_source.xhtml#l00140">140</a> of file <a class="el" href="a00218_source.xhtml">Spectrogram.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00038_source.xhtml#l00333">compMelSpectrogram()</a>, <a class="el" href="a00038_source.xhtml#l00188">compSpectrogram()</a>, <a class="el" href="a00038_source.xhtml#l00296">getMelSpectrogramAxisVectors()</a>, <a class="el" href="a00038_source.xhtml#l00278">getMelSpectrogramDimensions()</a>, <a class="el" href="a00038_source.xhtml#l00156">getSpectrogramAxisVectors()</a>, <a class="el" href="a00038_source.xhtml#l00141">getSpectrogramDimensions()</a>, <a class="el" href="a00038_source.xhtml#l00260">init_()</a>, and <a class="el" href="a00038_source.xhtml#l00238">reset_()</a>.</p>

</div>
</div>
<a id="ad41fa79049fdd292778046629a62139f" name="ad41fa79049fdd292778046629a62139f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad41fa79049fdd292778046629a62139f">&#9670;&#160;</a></span>m_fSampleRate</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float CSpectrogramIf::m_fSampleRate = 0</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>sample rate </p>

<p class="definition">Definition at line <a class="el" href="a00218_source.xhtml#l00132">132</a> of file <a class="el" href="a00218_source.xhtml">Spectrogram.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00038_source.xhtml#l00037">CSpectrogramFromFile::CSpectrogramFromFile()</a>, <a class="el" href="a00038_source.xhtml#l00070">CSpectrogramFromVector::CSpectrogramFromVector()</a>, <a class="el" href="a00038_source.xhtml#l00380">generateMelFb_()</a>, <a class="el" href="a00038_source.xhtml#l00296">getMelSpectrogramAxisVectors()</a>, and <a class="el" href="a00038_source.xhtml#l00156">getSpectrogramAxisVectors()</a>.</p>

</div>
</div>
<a id="aeb9a67e20abef3f1028bb8db15022a0a" name="aeb9a67e20abef3f1028bb8db15022a0a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aeb9a67e20abef3f1028bb8db15022a0a">&#9670;&#160;</a></span>m_iBlockLength</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int CSpectrogramIf::m_iBlockLength = 0</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>fft length </p>

<p class="definition">Definition at line <a class="el" href="a00218_source.xhtml#l00129">129</a> of file <a class="el" href="a00218_source.xhtml">Spectrogram.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00038_source.xhtml#l00217">computeMagSpectrum_()</a>, <a class="el" href="a00038_source.xhtml#l00037">CSpectrogramFromFile::CSpectrogramFromFile()</a>, <a class="el" href="a00038_source.xhtml#l00070">CSpectrogramFromVector::CSpectrogramFromVector()</a>, <a class="el" href="a00038_source.xhtml#l00296">getMelSpectrogramAxisVectors()</a>, <a class="el" href="a00038_source.xhtml#l00156">getSpectrogramAxisVectors()</a>, <a class="el" href="a00038_source.xhtml#l00141">getSpectrogramDimensions()</a>, <a class="el" href="a00038_source.xhtml#l00260">init_()</a>, and <a class="el" href="a00038_source.xhtml#l00238">reset_()</a>.</p>

</div>
</div>
<a id="a3520208ce92977729d22e1bbaa5b9532" name="a3520208ce92977729d22e1bbaa5b9532"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3520208ce92977729d22e1bbaa5b9532">&#9670;&#160;</a></span>m_iHopLength</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int CSpectrogramIf::m_iHopLength = 0</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>hop length </p>

<p class="definition">Definition at line <a class="el" href="a00218_source.xhtml#l00130">130</a> of file <a class="el" href="a00218_source.xhtml">Spectrogram.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00038_source.xhtml#l00037">CSpectrogramFromFile::CSpectrogramFromFile()</a>, <a class="el" href="a00038_source.xhtml#l00070">CSpectrogramFromVector::CSpectrogramFromVector()</a>, <a class="el" href="a00038_source.xhtml#l00296">getMelSpectrogramAxisVectors()</a>, <a class="el" href="a00038_source.xhtml#l00156">getSpectrogramAxisVectors()</a>, and <a class="el" href="a00038_source.xhtml#l00238">reset_()</a>.</p>

</div>
</div>
<a id="a8b0cd13bbb3570f6b87017b11ca10d63" name="a8b0cd13bbb3570f6b87017b11ca10d63"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8b0cd13bbb3570f6b87017b11ca10d63">&#9670;&#160;</a></span>m_pCBlockAudio</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00542.xhtml">CBlockAudioIf</a>* CSpectrogramIf::m_pCBlockAudio = 0</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>instantiate for blocking time domain signal </p>

<p class="definition">Definition at line <a class="el" href="a00218_source.xhtml#l00125">125</a> of file <a class="el" href="a00218_source.xhtml">Spectrogram.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00038_source.xhtml#l00333">compMelSpectrogram()</a>, <a class="el" href="a00038_source.xhtml#l00188">compSpectrogram()</a>, <a class="el" href="a00038_source.xhtml#l00217">computeMagSpectrum_()</a>, <a class="el" href="a00038_source.xhtml#l00037">CSpectrogramFromFile::CSpectrogramFromFile()</a>, <a class="el" href="a00038_source.xhtml#l00070">CSpectrogramFromVector::CSpectrogramFromVector()</a>, <a class="el" href="a00038_source.xhtml#l00296">getMelSpectrogramAxisVectors()</a>, <a class="el" href="a00038_source.xhtml#l00278">getMelSpectrogramDimensions()</a>, <a class="el" href="a00038_source.xhtml#l00156">getSpectrogramAxisVectors()</a>, <a class="el" href="a00038_source.xhtml#l00141">getSpectrogramDimensions()</a>, and <a class="el" href="a00038_source.xhtml#l00238">reset_()</a>.</p>

</div>
</div>
<a id="af2d9ad1a7f19819df98a16a12910793b" name="af2d9ad1a7f19819df98a16a12910793b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af2d9ad1a7f19819df98a16a12910793b">&#9670;&#160;</a></span>m_pCFft</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00474.xhtml">CFft</a>* CSpectrogramIf::m_pCFft = 0</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>fft instance </p>

<p class="definition">Definition at line <a class="el" href="a00218_source.xhtml#l00127">127</a> of file <a class="el" href="a00218_source.xhtml">Spectrogram.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00038_source.xhtml#l00333">compMelSpectrogram()</a>, <a class="el" href="a00038_source.xhtml#l00188">compSpectrogram()</a>, <a class="el" href="a00038_source.xhtml#l00217">computeMagSpectrum_()</a>, <a class="el" href="a00038_source.xhtml#l00380">generateMelFb_()</a>, <a class="el" href="a00038_source.xhtml#l00156">getSpectrogramAxisVectors()</a>, <a class="el" href="a00038_source.xhtml#l00260">init_()</a>, and <a class="el" href="a00038_source.xhtml#l00238">reset_()</a>.</p>

</div>
</div>
<a id="a42a7505fe0188726c859c4656eaf61eb" name="a42a7505fe0188726c859c4656eaf61eb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a42a7505fe0188726c859c4656eaf61eb">&#9670;&#160;</a></span>m_pCNormalize</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00606.xhtml">CNormalizeAudio</a>* CSpectrogramIf::m_pCNormalize = 0</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>instantiate if audio file normalization is wanted </p>

<p class="definition">Definition at line <a class="el" href="a00218_source.xhtml#l00123">123</a> of file <a class="el" href="a00218_source.xhtml">Spectrogram.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00038_source.xhtml#l00217">computeMagSpectrum_()</a>, <a class="el" href="a00038_source.xhtml#l00037">CSpectrogramFromFile::CSpectrogramFromFile()</a>, <a class="el" href="a00038_source.xhtml#l00070">CSpectrogramFromVector::CSpectrogramFromVector()</a>, <a class="el" href="a00038_source.xhtml#l00238">reset_()</a>, and <a class="el" href="a00038_source.xhtml#l00022">CSpectrogramFromFile::~CSpectrogramFromFile()</a>.</p>

</div>
</div>
<a id="a3311e6dae017c1c94dc174a3ae99a1dc" name="a3311e6dae017c1c94dc174a3ae99a1dc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3311e6dae017c1c94dc174a3ae99a1dc">&#9670;&#160;</a></span>m_pffcMel</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float* CSpectrogramIf::m_pffcMel = 0</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Mel center frequencies. </p>

<p class="definition">Definition at line <a class="el" href="a00218_source.xhtml#l00138">138</a> of file <a class="el" href="a00218_source.xhtml">Spectrogram.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00038_source.xhtml#l00380">generateMelFb_()</a>, and <a class="el" href="a00038_source.xhtml#l00296">getMelSpectrogramAxisVectors()</a>.</p>

</div>
</div>
<a id="a0b4bcf166ebcebaa5866061eec85debf" name="a0b4bcf166ebcebaa5866061eec85debf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0b4bcf166ebcebaa5866061eec85debf">&#9670;&#160;</a></span>m_pfProcBuff</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float* CSpectrogramIf::m_pfProcBuff = 0</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>temporary buffer </p>

<p class="definition">Definition at line <a class="el" href="a00218_source.xhtml#l00135">135</a> of file <a class="el" href="a00218_source.xhtml">Spectrogram.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00038_source.xhtml#l00333">compMelSpectrogram()</a>, <a class="el" href="a00038_source.xhtml#l00188">compSpectrogram()</a>, <a class="el" href="a00038_source.xhtml#l00217">computeMagSpectrum_()</a>, <a class="el" href="a00038_source.xhtml#l00260">init_()</a>, <a class="el" href="a00038_source.xhtml#l00238">reset_()</a>, and <a class="el" href="a00038_source.xhtml#l00022">CSpectrogramFromFile::~CSpectrogramFromFile()</a>.</p>

</div>
</div>
<a id="a46220f31318fed176ec507649fae3e50" name="a46220f31318fed176ec507649fae3e50"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a46220f31318fed176ec507649fae3e50">&#9670;&#160;</a></span>m_pfSpectrum</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float* CSpectrogramIf::m_pfSpectrum = 0</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>temporary buffer for current spectrum </p>

<p class="definition">Definition at line <a class="el" href="a00218_source.xhtml#l00134">134</a> of file <a class="el" href="a00218_source.xhtml">Spectrogram.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00038_source.xhtml#l00333">compMelSpectrogram()</a>, <a class="el" href="a00038_source.xhtml#l00188">compSpectrogram()</a>, <a class="el" href="a00038_source.xhtml#l00217">computeMagSpectrum_()</a>, <a class="el" href="a00038_source.xhtml#l00260">init_()</a>, and <a class="el" href="a00038_source.xhtml#l00238">reset_()</a>.</p>

</div>
</div>
<a id="ae3a0596e56fb18c4bd4a42a3f75710ed" name="ae3a0596e56fb18c4bd4a42a3f75710ed"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae3a0596e56fb18c4bd4a42a3f75710ed">&#9670;&#160;</a></span>m_ppfHMel</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float** CSpectrogramIf::m_ppfHMel = 0</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Mel filterbank. </p>

<p class="definition">Definition at line <a class="el" href="a00218_source.xhtml#l00137">137</a> of file <a class="el" href="a00218_source.xhtml">Spectrogram.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="a00038_source.xhtml#l00333">compMelSpectrogram()</a>, <a class="el" href="a00038_source.xhtml#l00233">destroyMelFb_()</a>, and <a class="el" href="a00038_source.xhtml#l00380">generateMelFb_()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="a00218_source.xhtml">Spectrogram.h</a></li>
<li><a class="el" href="a00038_source.xhtml">Spectrogram.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="a00530.xhtml">CSpectrogramIf</a></li>
    <li class="footer">Generated on Mon Sep 12 2022 18:38:30 for ACA by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.5 </li>
  </ul>
</div>
</body>
</html>
