<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 4.0.0 (20220602.1335)
 -->
<!-- Title: CSpectrogramFromVector Pages: 1 -->
<svg width="542pt" height="1388pt"
 viewBox="0.00 0.00 542.00 1388.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 1384)">
<title>CSpectrogramFromVector</title>
<polygon fill="white" stroke="transparent" points="-4,4 -4,-1384 538,-1384 538,4 -4,4"/>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="class for computation of the spectrogram from a vector of audio data">
<polygon fill="#bfbfbf" stroke="black" points="166.5,-0.5 166.5,-134.5 329.5,-134.5 329.5,-0.5 166.5,-0.5"/>
<text text-anchor="middle" x="248" y="-122.5" font-family="Helvetica,sans-Serif" font-size="10.00">CSpectrogramFromVector</text>
<polyline fill="none" stroke="black" points="166.5,-115.5 329.5,-115.5 "/>
<text text-anchor="middle" x="248" y="-103.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="166.5,-96.5 329.5,-96.5 "/>
<text text-anchor="start" x="174.5" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CSpectrogramFromVector</text>
<text text-anchor="start" x="174.5" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00">(const float *pfAudio,</text>
<text text-anchor="start" x="174.5" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00"> long long iAudioLength,</text>
<text text-anchor="start" x="174.5" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate, int</text>
<text text-anchor="start" x="174.5" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00"> iBlockLength, int iHopLength,</text>
<text text-anchor="start" x="174.5" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00"> bool bNormalize, float *pfWindow)</text>
<text text-anchor="start" x="174.5" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CSpectrogramFrom</text>
<text text-anchor="start" x="174.5" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">Vector()</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="a00530.xhtml" target="_top" xlink:title="class for computation of a magnitude spectrogram from either a file or a vector">
<polygon fill="white" stroke="black" points="134.5,-172.5 134.5,-845.5 361.5,-845.5 361.5,-172.5 134.5,-172.5"/>
<text text-anchor="middle" x="248" y="-833.5" font-family="Helvetica,sans-Serif" font-size="10.00">CSpectrogramIf</text>
<polyline fill="none" stroke="black" points="134.5,-826.5 361.5,-826.5 "/>
<text text-anchor="start" x="142.5" y="-814.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iBlockLength</text>
<text text-anchor="start" x="142.5" y="-803.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iHopLength</text>
<text text-anchor="start" x="142.5" y="-792.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float m_fSampleRate</text>
<text text-anchor="start" x="142.5" y="-781.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float * m_pfSpectrum</text>
<text text-anchor="start" x="142.5" y="-770.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float * m_pfProcBuff</text>
<text text-anchor="start" x="142.5" y="-759.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float ** m_ppfHMel</text>
<text text-anchor="start" x="142.5" y="-748.5" font-family="Helvetica,sans-Serif" font-size="10.00"># float * m_pffcMel</text>
<text text-anchor="start" x="142.5" y="-737.5" font-family="Helvetica,sans-Serif" font-size="10.00"># bool m_bIsInitialized</text>
<polyline fill="none" stroke="black" points="134.5,-730.5 361.5,-730.5 "/>
<text text-anchor="start" x="142.5" y="-718.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getSpectrogramDimensions</text>
<text text-anchor="start" x="142.5" y="-707.5" font-family="Helvetica,sans-Serif" font-size="10.00">(int &amp;iNumRows, int &amp;iNumCols) const</text>
<text text-anchor="start" x="142.5" y="-696.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getSpectrogramAxis</text>
<text text-anchor="start" x="142.5" y="-685.5" font-family="Helvetica,sans-Serif" font-size="10.00">Vectors(float *pfAxisTicks,</text>
<text text-anchor="start" x="142.5" y="-674.5" font-family="Helvetica,sans-Serif" font-size="10.00"> enum AxisLabel_t eAxisLabel) const</text>
<text text-anchor="start" x="142.5" y="-663.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compSpectrogram</text>
<text text-anchor="start" x="142.5" y="-652.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float **ppfSpectrogram)</text>
<text text-anchor="start" x="142.5" y="-641.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getMelSpectrogram</text>
<text text-anchor="start" x="142.5" y="-630.5" font-family="Helvetica,sans-Serif" font-size="10.00">Dimensions(int &amp;iNumRows,</text>
<text text-anchor="start" x="142.5" y="-619.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int &amp;iNumCols, const MelSpectrogram</text>
<text text-anchor="start" x="142.5" y="-608.5" font-family="Helvetica,sans-Serif" font-size="10.00">Config_t *pMelSpecConfig) const</text>
<text text-anchor="start" x="142.5" y="-597.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getMelSpectrogram</text>
<text text-anchor="start" x="142.5" y="-586.5" font-family="Helvetica,sans-Serif" font-size="10.00">AxisVectors(float *pfAxisTicks,</text>
<text text-anchor="start" x="142.5" y="-575.5" font-family="Helvetica,sans-Serif" font-size="10.00"> enum AxisLabel_t eAxisLabel,</text>
<text text-anchor="start" x="142.5" y="-564.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const MelSpectrogramConfig_t</text>
<text text-anchor="start" x="142.5" y="-553.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pMelSpecConfig)</text>
<text text-anchor="start" x="142.5" y="-542.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compMelSpectrogram</text>
<text text-anchor="start" x="142.5" y="-531.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float **ppfMelSpectrogram,</text>
<text text-anchor="start" x="142.5" y="-520.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const MelSpectrogramConfig</text>
<text text-anchor="start" x="142.5" y="-509.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t *pMelSpecConfig)</text>
<text text-anchor="start" x="142.5" y="-498.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="142.5" y="-487.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CSpectrogramIf *&amp;pCInstance,</text>
<text text-anchor="start" x="142.5" y="-476.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const std::string &amp;strAudioFilePath,</text>
<text text-anchor="start" x="142.5" y="-465.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iBlockLength=2048, int iHopLength</text>
<text text-anchor="start" x="142.5" y="-454.5" font-family="Helvetica,sans-Serif" font-size="10.00">=1024, bool bNormalize=true, float *pfWindow=0)</text>
<text text-anchor="start" x="142.5" y="-443.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="142.5" y="-432.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CSpectrogramIf *&amp;pCInstance,</text>
<text text-anchor="start" x="142.5" y="-421.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const float *pfAudio, long</text>
<text text-anchor="start" x="142.5" y="-410.5" font-family="Helvetica,sans-Serif" font-size="10.00"> long iNumSamples, float fSampleRate,</text>
<text text-anchor="start" x="142.5" y="-399.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iBlockLength=2048, int iHopLength</text>
<text text-anchor="start" x="142.5" y="-388.5" font-family="Helvetica,sans-Serif" font-size="10.00">=1024, bool bNormalize=true, float *pfWindow=0)</text>
<text text-anchor="start" x="142.5" y="-377.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="142.5" y="-366.5" font-family="Helvetica,sans-Serif" font-size="10.00">(CSpectrogramIf *&amp;pCInstance)</text>
<text text-anchor="start" x="142.5" y="-355.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CSpectrogramIf()</text>
<text text-anchor="start" x="142.5" y="-344.5" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CSpectrogramIf()</text>
<text text-anchor="start" x="142.5" y="-333.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CSpectrogramIf(const</text>
<text text-anchor="start" x="142.5" y="-322.5" font-family="Helvetica,sans-Serif" font-size="10.00"> CSpectrogramIf &amp;that)</text>
<text text-anchor="start" x="142.5" y="-311.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CSpectrogramIf &amp; operator</text>
<text text-anchor="start" x="142.5" y="-300.5" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CSpectrogramIf &amp;c)</text>
<text text-anchor="start" x="142.5" y="-289.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t reset_()</text>
<text text-anchor="start" x="142.5" y="-278.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t init_(float</text>
<text text-anchor="start" x="142.5" y="-267.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfWindow)</text>
<text text-anchor="start" x="142.5" y="-256.5" font-family="Helvetica,sans-Serif" font-size="10.00"># void computeMagSpectrum</text>
<text text-anchor="start" x="142.5" y="-245.5" font-family="Helvetica,sans-Serif" font-size="10.00">_(int iLength)</text>
<text text-anchor="start" x="142.5" y="-234.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Error_t generateMelFb</text>
<text text-anchor="start" x="142.5" y="-223.5" font-family="Helvetica,sans-Serif" font-size="10.00">_(const MelSpectrogramConfig</text>
<text text-anchor="start" x="142.5" y="-212.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t *pMelSpecConfig)</text>
<text text-anchor="start" x="142.5" y="-201.5" font-family="Helvetica,sans-Serif" font-size="10.00"># void destroyMelFb_</text>
<text text-anchor="start" x="142.5" y="-190.5" font-family="Helvetica,sans-Serif" font-size="10.00">(const MelSpectrogramConfig</text>
<text text-anchor="start" x="142.5" y="-179.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t *pMelSpecConfig)</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M248,-162.12C248,-152.44 248,-143.26 248,-134.7"/>
<polygon fill="none" stroke="midnightblue" points="244.5,-162.38 248,-172.38 251.5,-162.38 244.5,-162.38"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="a00606.xhtml" target="_top" xlink:title="class for audio normalization offering three options">
<polygon fill="white" stroke="black" points="0,-1020 0,-1253 150,-1253 150,-1020 0,-1020"/>
<text text-anchor="middle" x="75" y="-1241" font-family="Helvetica,sans-Serif" font-size="10.00">CNormalizeAudio</text>
<polyline fill="none" stroke="black" points="0,-1234 150,-1234 "/>
<text text-anchor="start" x="8" y="-1222" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float m_fScaleFactor</text>
<polyline fill="none" stroke="black" points="0,-1215 150,-1215 "/>
<text text-anchor="start" x="8" y="-1203" font-family="Helvetica,sans-Serif" font-size="10.00">+ CNormalizeAudio(CAudioFile</text>
<text text-anchor="start" x="8" y="-1192" font-family="Helvetica,sans-Serif" font-size="10.00">If *pCAudioFile)</text>
<text text-anchor="start" x="8" y="-1181" font-family="Helvetica,sans-Serif" font-size="10.00">+ CNormalizeAudio(const</text>
<text text-anchor="start" x="8" y="-1170" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfAudioBuff, long</text>
<text text-anchor="start" x="8" y="-1159" font-family="Helvetica,sans-Serif" font-size="10.00"> long iAudioLength)</text>
<text text-anchor="start" x="8" y="-1148" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CNormalizeAudio()</text>
<text text-anchor="start" x="8" y="-1137" font-family="Helvetica,sans-Serif" font-size="10.00">+ void normalizeBlock</text>
<text text-anchor="start" x="8" y="-1126" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfAudioBlock,</text>
<text text-anchor="start" x="8" y="-1115" font-family="Helvetica,sans-Serif" font-size="10.00"> long long iNumSamples)</text>
<text text-anchor="start" x="8" y="-1104" font-family="Helvetica,sans-Serif" font-size="10.00">+ static void normalizeSignal</text>
<text text-anchor="start" x="8" y="-1093" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfAudio, long long</text>
<text text-anchor="start" x="8" y="-1082" font-family="Helvetica,sans-Serif" font-size="10.00"> iNumSamples)</text>
<text text-anchor="start" x="8" y="-1071" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CNormalizeAudio()</text>
<text text-anchor="start" x="8" y="-1060" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CNormalizeAudio(const</text>
<text text-anchor="start" x="8" y="-1049" font-family="Helvetica,sans-Serif" font-size="10.00"> CNormalizeAudio &amp;that)</text>
<text text-anchor="start" x="8" y="-1038" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CNormalizeAudio &amp; operator</text>
<text text-anchor="start" x="8" y="-1027" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CNormalizeAudio &amp;c)</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node2 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node2</title>
<path fill="none" stroke="#404040" d="M107.03,-1019.68C120.01,-972.75 135.75,-915.85 151.94,-857.31"/>
<polygon fill="none" stroke="#404040" points="151.99,-857.14 149.73,-850.3 155.19,-845.58 157.44,-852.43 151.99,-857.14"/>
<text text-anchor="middle" x="187.5" y="-867" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCNormalize</text>
</g>
<!-- Node4 -->
<g id="node4" class="node">
<title>Node4</title>
<g id="a_node4"><a xlink:href="a00542.xhtml" target="_top" xlink:title="forward declaration">
<polygon fill="white" stroke="black" points="168,-921 168,-1352 328,-1352 328,-921 168,-921"/>
<text text-anchor="middle" x="248" y="-1340" font-family="Helvetica,sans-Serif" font-size="10.00">CBlockAudioIf</text>
<polyline fill="none" stroke="black" points="168,-1333 328,-1333 "/>
<text text-anchor="start" x="176" y="-1321" font-family="Helvetica,sans-Serif" font-size="10.00"># long long m_iNumBlocks</text>
<text text-anchor="start" x="176" y="-1310" font-family="Helvetica,sans-Serif" font-size="10.00"># long long m_iCurrBlock</text>
<text text-anchor="start" x="176" y="-1299" font-family="Helvetica,sans-Serif" font-size="10.00"># long long m_iAudioLength</text>
<text text-anchor="start" x="176" y="-1288" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iBlockLength</text>
<text text-anchor="start" x="176" y="-1277" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iNumChannels</text>
<text text-anchor="start" x="176" y="-1266" font-family="Helvetica,sans-Serif" font-size="10.00"># int m_iHopLength</text>
<text text-anchor="start" x="176" y="-1255" font-family="Helvetica,sans-Serif" font-size="10.00"># float m_fSampleRate</text>
<polyline fill="none" stroke="black" points="168,-1248 328,-1248 "/>
<text text-anchor="start" x="176" y="-1236" font-family="Helvetica,sans-Serif" font-size="10.00">+ long long getNumBlocks</text>
<text text-anchor="start" x="176" y="-1225" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="176" y="-1214" font-family="Helvetica,sans-Serif" font-size="10.00">+ long long getLengthInSamples</text>
<text text-anchor="start" x="176" y="-1203" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="176" y="-1192" font-family="Helvetica,sans-Serif" font-size="10.00">+ float getTimeStamp</text>
<text text-anchor="start" x="176" y="-1181" font-family="Helvetica,sans-Serif" font-size="10.00">(long long iBlockIdx)</text>
<text text-anchor="start" x="176" y="-1170" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual bool isEndOfData</text>
<text text-anchor="start" x="176" y="-1159" font-family="Helvetica,sans-Serif" font-size="10.00">() const =0</text>
<text text-anchor="start" x="176" y="-1148" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual int getNextBlock</text>
<text text-anchor="start" x="176" y="-1137" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfBlock, float</text>
<text text-anchor="start" x="176" y="-1126" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfTimeStampInS=0)=0</text>
<text text-anchor="start" x="176" y="-1115" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="176" y="-1104" font-family="Helvetica,sans-Serif" font-size="10.00">(CBlockAudioIf *&amp;pCInstance,</text>
<text text-anchor="start" x="176" y="-1093" font-family="Helvetica,sans-Serif" font-size="10.00"> CAudioFileIf *pCAudioFile,</text>
<text text-anchor="start" x="176" y="-1082" font-family="Helvetica,sans-Serif" font-size="10.00"> int iBlockLength, int iHopLength)</text>
<text text-anchor="start" x="176" y="-1071" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t create</text>
<text text-anchor="start" x="176" y="-1060" font-family="Helvetica,sans-Serif" font-size="10.00">(CBlockAudioIf *&amp;pCInstance,</text>
<text text-anchor="start" x="176" y="-1049" font-family="Helvetica,sans-Serif" font-size="10.00"> const float *pfAudioBuff,</text>
<text text-anchor="start" x="176" y="-1038" font-family="Helvetica,sans-Serif" font-size="10.00"> long long iAudioLength, int</text>
<text text-anchor="start" x="176" y="-1027" font-family="Helvetica,sans-Serif" font-size="10.00"> iBlockLength, int iHopLength,</text>
<text text-anchor="start" x="176" y="-1016" font-family="Helvetica,sans-Serif" font-size="10.00"> float fSampleRate)</text>
<text text-anchor="start" x="176" y="-1005" font-family="Helvetica,sans-Serif" font-size="10.00">+ static Error_t destroy</text>
<text text-anchor="start" x="176" y="-994" font-family="Helvetica,sans-Serif" font-size="10.00">(CBlockAudioIf *&amp;pCInstance)</text>
<text text-anchor="start" x="176" y="-983" font-family="Helvetica,sans-Serif" font-size="10.00"># CBlockAudioIf()</text>
<text text-anchor="start" x="176" y="-972" font-family="Helvetica,sans-Serif" font-size="10.00"># virtual ~CBlockAudioIf()</text>
<text text-anchor="start" x="176" y="-961" font-family="Helvetica,sans-Serif" font-size="10.00"># CBlockAudioIf(const</text>
<text text-anchor="start" x="176" y="-950" font-family="Helvetica,sans-Serif" font-size="10.00"> CBlockAudioIf &amp;that)</text>
<text text-anchor="start" x="176" y="-939" font-family="Helvetica,sans-Serif" font-size="10.00"># CBlockAudioIf &amp; operator</text>
<text text-anchor="start" x="176" y="-928" font-family="Helvetica,sans-Serif" font-size="10.00">=(const CBlockAudioIf &amp;c)</text>
</a>
</g>
</g>
<!-- Node4&#45;&gt;Node2 -->
<g id="edge3" class="edge">
<title>Node4&#45;&gt;Node2</title>
<path fill="none" stroke="#404040" d="M248,-920.68C248,-900.19 248,-879.08 248,-857.75"/>
<polygon fill="none" stroke="#404040" points="248,-857.53 244,-851.53 248,-845.53 252,-851.53 248,-857.53"/>
<text text-anchor="middle" x="289.5" y="-867" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCBlockAudio</text>
</g>
<!-- Node5 -->
<g id="node5" class="node">
<title>Node5</title>
<g id="a_node5"><a xlink:href="a00474.xhtml" target="_top" xlink:title="class for FFT computation with windowing">
<polygon fill="white" stroke="black" points="346,-893.5 346,-1379.5 534,-1379.5 534,-893.5 346,-893.5"/>
<text text-anchor="middle" x="440" y="-1367.5" font-family="Helvetica,sans-Serif" font-size="10.00">CFft</text>
<polyline fill="none" stroke="black" points="346,-1360.5 534,-1360.5 "/>
<text text-anchor="start" x="354" y="-1348.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_pfProcBuff</text>
<text text-anchor="start" x="354" y="-1337.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; float * m_pfWindowBuff</text>
<text text-anchor="start" x="354" y="-1326.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iDataLength</text>
<text text-anchor="start" x="354" y="-1315.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; int m_iFftLength</text>
<text text-anchor="start" x="354" y="-1304.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Windowing_t m_ePrePostWindowOpt</text>
<text text-anchor="start" x="354" y="-1293.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; bool m_bIsInitialized</text>
<text text-anchor="start" x="354" y="-1282.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; static const float m_Pi</text>
<text text-anchor="start" x="354" y="-1271.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; static const float</text>
<text text-anchor="start" x="354" y="-1260.5" font-family="Helvetica,sans-Serif" font-size="10.00"> m_Pi2</text>
<polyline fill="none" stroke="black" points="346,-1253.5 534,-1253.5 "/>
<text text-anchor="start" x="354" y="-1241.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CFft()</text>
<text text-anchor="start" x="354" y="-1230.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~CFft()</text>
<text text-anchor="start" x="354" y="-1219.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t init(int iBlockLength,</text>
<text text-anchor="start" x="354" y="-1208.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int iZeroPadFactor=1, WindowFunction</text>
<text text-anchor="start" x="354" y="-1197.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t eWindow=kWindowHann, Windowing</text>
<text text-anchor="start" x="354" y="-1186.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t eWindowing=kPreWindow)</text>
<text text-anchor="start" x="354" y="-1175.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t reset()</text>
<text text-anchor="start" x="354" y="-1164.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t overrideWindow</text>
<text text-anchor="start" x="354" y="-1153.5" font-family="Helvetica,sans-Serif" font-size="10.00">(const float *pfNewWindow)</text>
<text text-anchor="start" x="354" y="-1142.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getWindow(float</text>
<text text-anchor="start" x="354" y="-1131.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfWindow) const</text>
<text text-anchor="start" x="354" y="-1120.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compFft(complex</text>
<text text-anchor="start" x="354" y="-1109.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t *pfSpectrum, const</text>
<text text-anchor="start" x="354" y="-1098.5" font-family="Helvetica,sans-Serif" font-size="10.00"> float *pfIn)</text>
<text text-anchor="start" x="354" y="-1087.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t compInvFft</text>
<text text-anchor="start" x="354" y="-1076.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfOut, const</text>
<text text-anchor="start" x="354" y="-1065.5" font-family="Helvetica,sans-Serif" font-size="10.00"> complex_t *pfSpectrum)</text>
<text text-anchor="start" x="354" y="-1054.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getMagnitude</text>
<text text-anchor="start" x="354" y="-1043.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float *pfMag, const</text>
<text text-anchor="start" x="354" y="-1032.5" font-family="Helvetica,sans-Serif" font-size="10.00"> complex_t *pfSpectrum)</text>
<text text-anchor="start" x="354" y="-1021.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const</text>
<text text-anchor="start" x="354" y="-1010.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Error_t getPhase(float</text>
<text text-anchor="start" x="354" y="-999.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *pfPhase, const complex</text>
<text text-anchor="start" x="354" y="-988.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t *pfSpectrum) const</text>
<text text-anchor="start" x="354" y="-977.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 7 more...</text>
<text text-anchor="start" x="354" y="-966.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CFft(const CFft &amp;that)</text>
<text text-anchor="start" x="354" y="-955.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; CFft &amp; operator=(const</text>
<text text-anchor="start" x="354" y="-944.5" font-family="Helvetica,sans-Serif" font-size="10.00"> CFft &amp;c)</text>
<text text-anchor="start" x="354" y="-933.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Error_t allocMemory_()</text>
<text text-anchor="start" x="354" y="-922.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Error_t freeMemory_()</text>
<text text-anchor="start" x="354" y="-911.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Error_t computeWindow</text>
<text text-anchor="start" x="354" y="-900.5" font-family="Helvetica,sans-Serif" font-size="10.00">_(WindowFunction_t eWindow)</text>
</a>
</g>
</g>
<!-- Node5&#45;&gt;Node2 -->
<g id="edge4" class="edge">
<title>Node5&#45;&gt;Node2</title>
<path fill="none" stroke="#404040" d="M365.63,-893.22C361.99,-881.37 358.31,-869.38 354.61,-857.32"/>
<polygon fill="none" stroke="#404040" points="354.58,-857.21 348.99,-852.65 351.06,-845.74 356.64,-850.3 354.58,-857.21"/>
<text text-anchor="middle" x="381" y="-867" font-family="Helvetica,sans-Serif" font-size="10.00"> #m_pCFft</text>
</g>
</g>
</svg>
