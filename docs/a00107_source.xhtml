<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.4"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ACA: PitchFromBlock.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">ACA<span id="projectnumber">&#160;0.2.7</span>
   </div>
   <div id="projectbrief">Example Code for Audio Content Analysis</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.4 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search",'Search','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('a00107_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle"><div class="title">PitchFromBlock.cpp</div></div>
</div><!--header-->
<div class="contents">
<a href="a00107.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="preprocessor">#include &lt;limits&gt;</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span> </div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="preprocessor">#include &quot;<a class="code" href="a00158.xhtml">Filter.h</a>&quot;</span></div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span><span class="preprocessor">#include &quot;<a class="code" href="a00161.xhtml">Vector.h</a>&quot;</span></div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span><span class="preprocessor">#include &quot;<a class="code" href="a00167.xhtml">Util.h</a>&quot;</span></div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span> </div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span><span class="preprocessor">#include &quot;<a class="code" href="a00179.xhtml">ToolConversion.h</a>&quot;</span></div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span><span class="preprocessor">#include &quot;<a class="code" href="a00212.xhtml">ToolCcf.h</a>&quot;</span></div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span><span class="preprocessor">#include &quot;<a class="code" href="a00149.xhtml">ToolGammatone.h</a>&quot;</span></div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span> </div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span><span class="preprocessor">#include &quot;<a class="code" href="a00215.xhtml">PitchFromBlock.h</a>&quot;</span></div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span><span class="comment"></span> </div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span><span class="comment">///////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span><span class="comment"></span><span class="comment">// Pitch extractors</span></div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno"><a class="line" href="a00390.xhtml">   15</a></span><span class="keyword">class </span><a class="code hl_class" href="a00390.xhtml">CPitchSpectralAcf</a> : <span class="keyword">public</span> <a class="code hl_class" href="a00538.xhtml">CPitchFromBlockIf</a></div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span>{</div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno"><a class="line" href="a00390.xhtml#ad7f64995a5d0ca75139e400172a9ab42">   18</a></span>    <a class="code hl_function" href="a00390.xhtml#ad7f64995a5d0ca75139e400172a9ab42">CPitchSpectralAcf</a>(<a class="code hl_enumeration" href="a00534.xhtml#ac55ab3f8cd0b036cbb891537272342df">CPitchIf::PitchExtractors_t</a> ePitchIdx, <span class="keywordtype">int</span> iDataLength, <span class="keywordtype">float</span> fSampleRate) : <a class="code hl_class" href="a00538.xhtml">CPitchFromBlockIf</a>(ePitchIdx, iDataLength, fSampleRate)</div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span>    {</div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span>        <a class="code hl_variable" href="a00390.xhtml#a8715eef70802d78a21f7e0deb7b98aeb">m_pCCcf</a> = <span class="keyword">new</span> <a class="code hl_class" href="a00558.xhtml">CCcf</a>();</div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span>        <a class="code hl_variable" href="a00390.xhtml#a8715eef70802d78a21f7e0deb7b98aeb">m_pCCcf</a>-&gt;<a class="code hl_function" href="a00558.xhtml#af683b1b5e37ca2039424af02f4bfb3c5">init</a>((<a class="code hl_variable" href="a00538.xhtml#aab7cbf575cd81f196fdc75f226b61ab6">m_iDataLength</a>-1)*2);</div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span>        <a class="code hl_function" href="a00514.xhtml#abaadac98b1cad18b7b568852bc951696">CVector::alloc</a>(<a class="code hl_variable" href="a00390.xhtml#a2555fec6c4ecdf05f60ac4182c1d6ed4">m_pfProcBuff</a>, (<span class="keyword">static_cast&lt;</span><span class="keywordtype">long</span> <span class="keywordtype">long</span><span class="keyword">&gt;</span>(<a class="code hl_variable" href="a00538.xhtml#aab7cbf575cd81f196fdc75f226b61ab6">m_iDataLength</a>) - 1) * 2);</div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span> </div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span>        <a class="code hl_function" href="a00514.xhtml#abaadac98b1cad18b7b568852bc951696">CVector::alloc</a>(<a class="code hl_variable" href="a00390.xhtml#a4881bd6523fb58aa6316efa2879fce16">m_pfAcf</a>, <a class="code hl_variable" href="a00390.xhtml#a8715eef70802d78a21f7e0deb7b98aeb">m_pCCcf</a>-&gt;<a class="code hl_function" href="a00558.xhtml#afe56cc1681b982d7d31b0830b3471b61">getCcfLength</a>(<span class="keyword">true</span>));</div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span>    };</div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span> </div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno"><a class="line" href="a00390.xhtml#a451d66b67603a9d130f162720e361626">   27</a></span>    <span class="keyword">virtual</span> <a class="code hl_function" href="a00390.xhtml#a451d66b67603a9d130f162720e361626">~CPitchSpectralAcf</a>()</div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span>    {</div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span>        <a class="code hl_function" href="a00514.xhtml#aa86bdb0c663d4d52f2765793756f8737">CVector::free</a>(<a class="code hl_variable" href="a00390.xhtml#a4881bd6523fb58aa6316efa2879fce16">m_pfAcf</a>);</div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span>        <a class="code hl_function" href="a00514.xhtml#aa86bdb0c663d4d52f2765793756f8737">CVector::free</a>(<a class="code hl_variable" href="a00390.xhtml#a2555fec6c4ecdf05f60ac4182c1d6ed4">m_pfProcBuff</a>);</div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span> </div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span>        <span class="keyword">delete</span> <a class="code hl_variable" href="a00390.xhtml#a8715eef70802d78a21f7e0deb7b98aeb">m_pCCcf</a>;</div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span>        <a class="code hl_variable" href="a00390.xhtml#a8715eef70802d78a21f7e0deb7b98aeb">m_pCCcf</a> = 0;</div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span>    };</div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span> </div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno"><a class="line" href="a00390.xhtml#a250792b516c76c54251534a33c17bea8">   36</a></span>    <span class="keywordtype">float</span> <a class="code hl_function" href="a00390.xhtml#a250792b516c76c54251534a33c17bea8">compF0</a>(<span class="keyword">const</span> <span class="keywordtype">float</span>* pfInput)<span class="keyword"> override</span></div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span><span class="keyword">    </span>{</div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span>        assert(pfInput);</div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span> </div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span>        <span class="comment">// get minimum bin</span></div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span>        <span class="keywordtype">int</span> iMin = CUtil::float2int&lt;int&gt;(<a class="code hl_function" href="a00562.xhtml#ada82d84a69f4c77266835f1f06ca2ecb">CConversion::convertFreq2Bin</a>(<a class="code hl_variable" href="a00390.xhtml#ace8ab223669b7a81b19f12716420e140">m_fMin</a>, (<a class="code hl_variable" href="a00538.xhtml#aab7cbf575cd81f196fdc75f226b61ab6">m_iDataLength</a> - 1) * 2, <a class="code hl_variable" href="a00538.xhtml#ac4a3235dfd5c3919a7d1a290f92dfa80">m_fSampleRate</a>));</div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span>        <span class="keywordtype">float</span> fTmp = 0;</div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span>        <span class="keywordtype">long</span> <span class="keywordtype">long</span> iMaxIdx = -1;</div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span> </div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span>        <span class="comment">// flip data so it&#39;s more robust and set bin 0 to max</span></div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span>        <a class="code hl_function" href="a00514.xhtml#ad7c5cba73e439adac77778f61c9418f0">CVector::copy</a>(<a class="code hl_variable" href="a00390.xhtml#a2555fec6c4ecdf05f60ac4182c1d6ed4">m_pfProcBuff</a>, pfInput, <a class="code hl_variable" href="a00538.xhtml#aab7cbf575cd81f196fdc75f226b61ab6">m_iDataLength</a>);</div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span>        <a class="code hl_function" href="a00514.xhtml#a16455e414da1bc89417716b46b212ab9">CVector::flip_I</a>(<a class="code hl_variable" href="a00390.xhtml#a2555fec6c4ecdf05f60ac4182c1d6ed4">m_pfProcBuff</a>, <a class="code hl_variable" href="a00538.xhtml#aab7cbf575cd81f196fdc75f226b61ab6">m_iDataLength</a>);</div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span>        <a class="code hl_function" href="a00514.xhtml#ad7c5cba73e439adac77778f61c9418f0">CVector::copy</a>(&amp;<a class="code hl_variable" href="a00390.xhtml#a2555fec6c4ecdf05f60ac4182c1d6ed4">m_pfProcBuff</a>[<a class="code hl_variable" href="a00538.xhtml#aab7cbf575cd81f196fdc75f226b61ab6">m_iDataLength</a> - 1], pfInput, <a class="code hl_variable" href="a00538.xhtml#aab7cbf575cd81f196fdc75f226b61ab6">m_iDataLength</a> - <span class="keyword">static_cast&lt;</span><span class="keywordtype">long</span> <span class="keywordtype">long</span><span class="keyword">&gt;</span>(1));</div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span>        <a class="code hl_variable" href="a00390.xhtml#a2555fec6c4ecdf05f60ac4182c1d6ed4">m_pfProcBuff</a>[<a class="code hl_variable" href="a00538.xhtml#aab7cbf575cd81f196fdc75f226b61ab6">m_iDataLength</a> - 1] = <a class="code hl_function" href="a00514.xhtml#a9f5be871090bc5a64a7732cebfb4f8ec">CVector::getMax</a>(pfInput, <a class="code hl_variable" href="a00538.xhtml#aab7cbf575cd81f196fdc75f226b61ab6">m_iDataLength</a>);</div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span> </div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span>        <span class="comment">// compute acf</span></div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span>        <a class="code hl_variable" href="a00390.xhtml#a8715eef70802d78a21f7e0deb7b98aeb">m_pCCcf</a>-&gt;<a class="code hl_function" href="a00558.xhtml#a4d7d19dd39b24147d9a1fab5d7e05257">compCcf</a>(<a class="code hl_variable" href="a00390.xhtml#a2555fec6c4ecdf05f60ac4182c1d6ed4">m_pfProcBuff</a>, <a class="code hl_variable" href="a00390.xhtml#a2555fec6c4ecdf05f60ac4182c1d6ed4">m_pfProcBuff</a>, <span class="keyword">true</span>);</div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span>        <a class="code hl_variable" href="a00390.xhtml#a8715eef70802d78a21f7e0deb7b98aeb">m_pCCcf</a>-&gt;<a class="code hl_function" href="a00558.xhtml#a02c0e23cbcecab5af2fb20a25160321a">getCcf</a>(<a class="code hl_variable" href="a00390.xhtml#a4881bd6523fb58aa6316efa2879fce16">m_pfAcf</a>, <span class="keyword">true</span>);</div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span> </div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span>        <span class="comment">// adjust lower search boundary for local maxima</span></div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno">   56</span>        <span class="keywordflow">for</span> (<span class="keyword">auto</span> k = iMin-1; k &lt; <a class="code hl_variable" href="a00538.xhtml#aab7cbf575cd81f196fdc75f226b61ab6">m_iDataLength</a>; k++)</div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span>        {</div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span>            <span class="keywordflow">if</span> (<a class="code hl_variable" href="a00390.xhtml#a4881bd6523fb58aa6316efa2879fce16">m_pfAcf</a>[k + 1] &lt; <a class="code hl_variable" href="a00390.xhtml#a4881bd6523fb58aa6316efa2879fce16">m_pfAcf</a>[k])</div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span>            {</div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span>                iMin--;</div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span>                <span class="keywordflow">break</span>;</div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span>            }</div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span>            iMin++;</div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno">   64</span>        }</div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span>        </div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span>        <span class="comment">// sanity check</span></div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno">   67</span>        <span class="keywordflow">if</span> (iMin &gt;= <a class="code hl_variable" href="a00538.xhtml#aab7cbf575cd81f196fdc75f226b61ab6">m_iDataLength</a> - 2)</div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span>            <span class="keywordflow">return</span> 0.F;</div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span> </div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno">   70</span>        <span class="comment">// now find the maximum</span></div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span>        <a class="code hl_function" href="a00514.xhtml#a34a5c0abd80cd982df8a8bae7cbcea19">CVector::findMax</a>(&amp;<a class="code hl_variable" href="a00390.xhtml#a4881bd6523fb58aa6316efa2879fce16">m_pfAcf</a>[iMin], fTmp, iMaxIdx, <a class="code hl_variable" href="a00538.xhtml#aab7cbf575cd81f196fdc75f226b61ab6">m_iDataLength</a> - <span class="keyword">static_cast&lt;</span><span class="keywordtype">long</span> <span class="keywordtype">long</span><span class="keyword">&gt;</span>(1) - iMin);</div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span> </div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span>        <span class="keywordflow">return</span> <a class="code hl_function" href="a00562.xhtml#aebe59f905b1dd02058cccbb062de6507">CConversion::convertBin2Freq</a>((iMin+iMaxIdx) * 1.F, (<a class="code hl_variable" href="a00538.xhtml#aab7cbf575cd81f196fdc75f226b61ab6">m_iDataLength</a> - 1) * 2, <a class="code hl_variable" href="a00538.xhtml#ac4a3235dfd5c3919a7d1a290f92dfa80">m_fSampleRate</a>);</div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span>    };</div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span> </div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span><span class="keyword">private</span>:</div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno"><a class="line" href="a00390.xhtml#ab362e6e9ae3f082b3c57e51eb4045bd4">   77</a></span>    <a class="code hl_function" href="a00390.xhtml#ab362e6e9ae3f082b3c57e51eb4045bd4">CPitchSpectralAcf</a>() {};</div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno"><a class="line" href="a00390.xhtml#aa287258ccabe0c81675836fa5e5ac94e">   78</a></span>    <a class="code hl_function" href="a00390.xhtml#aa287258ccabe0c81675836fa5e5ac94e">CPitchSpectralAcf</a>(<span class="keyword">const</span> <a class="code hl_class" href="a00390.xhtml">CPitchSpectralAcf</a>&amp; that);     <span class="comment">//!&lt; disallow copy construction</span></div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno"><a class="line" href="a00390.xhtml#a7788ddebf971ad4e2da70e14eaf851dd">   79</a></span>    <a class="code hl_class" href="a00390.xhtml">CPitchSpectralAcf</a>&amp; <a class="code hl_function" href="a00390.xhtml#a7788ddebf971ad4e2da70e14eaf851dd">operator=</a>(<span class="keyword">const</span> <a class="code hl_class" href="a00390.xhtml">CPitchSpectralAcf</a>&amp; c);</div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span> </div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno"><a class="line" href="a00390.xhtml#a8715eef70802d78a21f7e0deb7b98aeb">   81</a></span>    <a class="code hl_class" href="a00558.xhtml">CCcf</a>* <a class="code hl_variable" href="a00390.xhtml#a8715eef70802d78a21f7e0deb7b98aeb">m_pCCcf</a> = 0;</div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno"><a class="line" href="a00390.xhtml#a4881bd6523fb58aa6316efa2879fce16">   82</a></span>    <span class="keywordtype">float</span>* <a class="code hl_variable" href="a00390.xhtml#a4881bd6523fb58aa6316efa2879fce16">m_pfAcf</a> = 0;</div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno"><a class="line" href="a00390.xhtml#a2555fec6c4ecdf05f60ac4182c1d6ed4">   83</a></span>    <span class="keywordtype">float</span>* <a class="code hl_variable" href="a00390.xhtml#a2555fec6c4ecdf05f60ac4182c1d6ed4">m_pfProcBuff</a> = 0;</div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span> </div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno"><a class="line" href="a00390.xhtml#ace8ab223669b7a81b19f12716420e140">   85</a></span>    <span class="keywordtype">float</span> <a class="code hl_variable" href="a00390.xhtml#ace8ab223669b7a81b19f12716420e140">m_fMin</a> = 300.F;</div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno">   86</span>};</div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span> </div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno"><a class="line" href="a00394.xhtml">   88</a></span><span class="keyword">class </span><a class="code hl_class" href="a00394.xhtml">CPitchSpectralHps</a> : <span class="keyword">public</span> <a class="code hl_class" href="a00538.xhtml">CPitchFromBlockIf</a></div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span>{</div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno"><a class="line" href="a00394.xhtml#a5c1be3a6a8f0517c57384938dcad343d">   91</a></span>    <a class="code hl_function" href="a00394.xhtml#a5c1be3a6a8f0517c57384938dcad343d">CPitchSpectralHps</a>(<a class="code hl_enumeration" href="a00534.xhtml#ac55ab3f8cd0b036cbb891537272342df">CPitchIf::PitchExtractors_t</a> ePitchIdx, <span class="keywordtype">int</span> iDataLength, <span class="keywordtype">float</span> fSampleRate) : <a class="code hl_class" href="a00538.xhtml">CPitchFromBlockIf</a>(ePitchIdx, iDataLength, fSampleRate)</div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span>    {</div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno">   93</span>        <a class="code hl_function" href="a00514.xhtml#abaadac98b1cad18b7b568852bc951696">CVector::alloc</a>(<a class="code hl_variable" href="a00394.xhtml#ab8df6425e14d7a802a119854fe61ca56">m_pfProcBuff</a>, <a class="code hl_variable" href="a00538.xhtml#aab7cbf575cd81f196fdc75f226b61ab6">m_iDataLength</a>);</div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span>    }</div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span> </div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno"><a class="line" href="a00394.xhtml#a412ed764fc1354045d2e8e9fa5cf20fc">   96</a></span>    <span class="keyword">virtual</span> <a class="code hl_function" href="a00394.xhtml#a412ed764fc1354045d2e8e9fa5cf20fc">~CPitchSpectralHps</a>()</div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno">   97</span>    {</div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno">   98</span>        <a class="code hl_function" href="a00514.xhtml#aa86bdb0c663d4d52f2765793756f8737">CVector::free</a>(<a class="code hl_variable" href="a00394.xhtml#ab8df6425e14d7a802a119854fe61ca56">m_pfProcBuff</a>);</div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno">   99</span>    }</div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span> </div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno"><a class="line" href="a00394.xhtml#ad6b1dafb86b44b1d31bfbe22e930d146">  101</a></span>    <span class="keywordtype">float</span> <a class="code hl_function" href="a00394.xhtml#ad6b1dafb86b44b1d31bfbe22e930d146">compF0</a>(<span class="keyword">const</span> <span class="keywordtype">float</span>* pfInput)<span class="keyword"> override</span></div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno">  102</span><span class="keyword">    </span>{</div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno">  103</span>        assert(pfInput);</div>
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno">  104</span> </div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno">  105</span>        <span class="keywordtype">float</span> fTmp = 0.F;</div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno">  106</span>        <span class="keywordtype">long</span> <span class="keywordtype">long</span> iMaxIdx = 0;</div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span>        <span class="keywordtype">int</span> iMin = CUtil::float2int&lt;int&gt;(<a class="code hl_function" href="a00562.xhtml#ada82d84a69f4c77266835f1f06ca2ecb">CConversion::convertFreq2Bin</a>(<a class="code hl_variable" href="a00394.xhtml#a7e421578f4523968067923219d184e00">m_fMin</a>, (<a class="code hl_variable" href="a00538.xhtml#aab7cbf575cd81f196fdc75f226b61ab6">m_iDataLength</a> - 1) * 2, <a class="code hl_variable" href="a00538.xhtml#ac4a3235dfd5c3919a7d1a290f92dfa80">m_fSampleRate</a>));</div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno">  108</span>        <a class="code hl_function" href="a00514.xhtml#ad7c5cba73e439adac77778f61c9418f0">CVector::copy</a>(<a class="code hl_variable" href="a00394.xhtml#ab8df6425e14d7a802a119854fe61ca56">m_pfProcBuff</a>, pfInput, <a class="code hl_variable" href="a00538.xhtml#aab7cbf575cd81f196fdc75f226b61ab6">m_iDataLength</a>);</div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span>        <a class="code hl_function" href="a00514.xhtml#a6dbb3f9f480568b60f7fe50090d20003">CVector::setZero</a>(<a class="code hl_variable" href="a00394.xhtml#ab8df6425e14d7a802a119854fe61ca56">m_pfProcBuff</a>, iMin);</div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span>        <a class="code hl_function" href="a00514.xhtml#a6dbb3f9f480568b60f7fe50090d20003">CVector::setZero</a>(&amp;<a class="code hl_variable" href="a00394.xhtml#ab8df6425e14d7a802a119854fe61ca56">m_pfProcBuff</a>[<a class="code hl_variable" href="a00538.xhtml#aab7cbf575cd81f196fdc75f226b61ab6">m_iDataLength</a>/<a class="code hl_variable" href="a00394.xhtml#a8d2bca3d3844d6b1443222762d7f246a">m_iOrder</a>], <span class="keyword">static_cast&lt;</span><span class="keywordtype">long</span> <span class="keywordtype">long</span><span class="keyword">&gt;</span>(<a class="code hl_variable" href="a00538.xhtml#aab7cbf575cd81f196fdc75f226b61ab6">m_iDataLength</a>) - (<a class="code hl_variable" href="a00538.xhtml#aab7cbf575cd81f196fdc75f226b61ab6">m_iDataLength</a> / <a class="code hl_variable" href="a00394.xhtml#a8d2bca3d3844d6b1443222762d7f246a">m_iOrder</a>));</div>
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno">  111</span> </div>
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno">  112</span>        <span class="comment">// do the actual product sum</span></div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno">  113</span>        <span class="keywordflow">for</span> (<span class="keyword">auto</span> j = 2; j &lt;= <a class="code hl_variable" href="a00394.xhtml#a8d2bca3d3844d6b1443222762d7f246a">m_iOrder</a>; j++)</div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span>        {</div>
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno">  115</span>            <span class="keywordflow">for</span> (<span class="keyword">auto</span> k = 0; k &lt; <a class="code hl_variable" href="a00538.xhtml#aab7cbf575cd81f196fdc75f226b61ab6">m_iDataLength</a> / j; k++)</div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span>                <a class="code hl_variable" href="a00394.xhtml#ab8df6425e14d7a802a119854fe61ca56">m_pfProcBuff</a>[k] *= pfInput[j * k];</div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno">  117</span>        }</div>
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno">  118</span> </div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno">  119</span>        <span class="comment">// this could be restricted a bit, but is it worth it?</span></div>
<div class="line"><a id="l00120" name="l00120"></a><span class="lineno">  120</span>        <a class="code hl_function" href="a00514.xhtml#a34a5c0abd80cd982df8a8bae7cbcea19">CVector::findMax</a>(<a class="code hl_variable" href="a00394.xhtml#ab8df6425e14d7a802a119854fe61ca56">m_pfProcBuff</a>, fTmp, iMaxIdx, <a class="code hl_variable" href="a00538.xhtml#aab7cbf575cd81f196fdc75f226b61ab6">m_iDataLength</a>);</div>
<div class="line"><a id="l00121" name="l00121"></a><span class="lineno">  121</span> </div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno">  122</span>        <span class="comment">// sanity check</span></div>
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno">  123</span>        <span class="keywordflow">if</span> (fTmp &lt;= 1e-30F)</div>
<div class="line"><a id="l00124" name="l00124"></a><span class="lineno">  124</span>            <span class="keywordflow">return</span> 0.F;</div>
<div class="line"><a id="l00125" name="l00125"></a><span class="lineno">  125</span> </div>
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno">  126</span>        <span class="keywordflow">return</span> <a class="code hl_function" href="a00562.xhtml#aebe59f905b1dd02058cccbb062de6507">CConversion::convertBin2Freq</a>(iMaxIdx * 1.F, (<a class="code hl_variable" href="a00538.xhtml#aab7cbf575cd81f196fdc75f226b61ab6">m_iDataLength</a> - 1) * 2, <a class="code hl_variable" href="a00538.xhtml#ac4a3235dfd5c3919a7d1a290f92dfa80">m_fSampleRate</a>);</div>
<div class="line"><a id="l00127" name="l00127"></a><span class="lineno">  127</span>    };</div>
<div class="line"><a id="l00128" name="l00128"></a><span class="lineno">  128</span><span class="keyword">private</span>:</div>
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno"><a class="line" href="a00394.xhtml#a85f18b226137665873997830d52130c0">  129</a></span>    <a class="code hl_function" href="a00394.xhtml#a85f18b226137665873997830d52130c0">CPitchSpectralHps</a>() {};</div>
<div class="line"><a id="l00130" name="l00130"></a><span class="lineno"><a class="line" href="a00394.xhtml#a42e2207ad61b32a09bee9048f1f94c3f">  130</a></span>    <a class="code hl_function" href="a00394.xhtml#a42e2207ad61b32a09bee9048f1f94c3f">CPitchSpectralHps</a>(<span class="keyword">const</span> <a class="code hl_class" href="a00394.xhtml">CPitchSpectralHps</a>&amp; that);     <span class="comment">//!&lt; disallow copy construction  </span></div>
<div class="line"><a id="l00131" name="l00131"></a><span class="lineno"><a class="line" href="a00394.xhtml#a54c4f1bf58f0ccf11c8a18cb954dd9bd">  131</a></span>    <a class="code hl_class" href="a00394.xhtml">CPitchSpectralHps</a>&amp; <a class="code hl_function" href="a00394.xhtml#a54c4f1bf58f0ccf11c8a18cb954dd9bd">operator=</a>(<span class="keyword">const</span> <a class="code hl_class" href="a00394.xhtml">CPitchSpectralHps</a>&amp; c);</div>
<div class="line"><a id="l00132" name="l00132"></a><span class="lineno">  132</span> </div>
<div class="line"><a id="l00133" name="l00133"></a><span class="lineno"><a class="line" href="a00394.xhtml#ab8df6425e14d7a802a119854fe61ca56">  133</a></span>    <span class="keywordtype">float</span>* <a class="code hl_variable" href="a00394.xhtml#ab8df6425e14d7a802a119854fe61ca56">m_pfProcBuff</a> = 0;</div>
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno"><a class="line" href="a00394.xhtml#a8d2bca3d3844d6b1443222762d7f246a">  134</a></span>    <span class="keywordtype">int</span> <a class="code hl_variable" href="a00394.xhtml#a8d2bca3d3844d6b1443222762d7f246a">m_iOrder</a> = 4;</div>
<div class="line"><a id="l00135" name="l00135"></a><span class="lineno"><a class="line" href="a00394.xhtml#a7e421578f4523968067923219d184e00">  135</a></span>    <span class="keywordtype">float</span> <a class="code hl_variable" href="a00394.xhtml#a7e421578f4523968067923219d184e00">m_fMin</a> = 300.F;</div>
<div class="line"><a id="l00136" name="l00136"></a><span class="lineno">  136</span>};</div>
<div class="line"><a id="l00137" name="l00137"></a><span class="lineno">  137</span> </div>
<div class="line"><a id="l00138" name="l00138"></a><span class="lineno"><a class="line" href="a00398.xhtml">  138</a></span><span class="keyword">class </span><a class="code hl_class" href="a00398.xhtml">CPitchTimeAcf</a> : <span class="keyword">public</span> <a class="code hl_class" href="a00538.xhtml">CPitchFromBlockIf</a></div>
<div class="line"><a id="l00139" name="l00139"></a><span class="lineno">  139</span>{</div>
<div class="line"><a id="l00140" name="l00140"></a><span class="lineno">  140</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00141" name="l00141"></a><span class="lineno"><a class="line" href="a00398.xhtml#acd4920798f76cfa56accd9ba28dad6ae">  141</a></span>    <a class="code hl_function" href="a00398.xhtml#acd4920798f76cfa56accd9ba28dad6ae">CPitchTimeAcf</a>(<a class="code hl_enumeration" href="a00534.xhtml#ac55ab3f8cd0b036cbb891537272342df">CPitchIf::PitchExtractors_t</a> ePitchIdx, <span class="keywordtype">int</span> iDataLength, <span class="keywordtype">float</span> fSampleRate) : <a class="code hl_class" href="a00538.xhtml">CPitchFromBlockIf</a>(ePitchIdx, iDataLength, fSampleRate)</div>
<div class="line"><a id="l00142" name="l00142"></a><span class="lineno">  142</span>    {</div>
<div class="line"><a id="l00143" name="l00143"></a><span class="lineno">  143</span>        <a class="code hl_variable" href="a00398.xhtml#a20081d499cd0d70d8e61086f33b33365">m_pCCcf</a> = <span class="keyword">new</span> <a class="code hl_class" href="a00558.xhtml">CCcf</a>();</div>
<div class="line"><a id="l00144" name="l00144"></a><span class="lineno">  144</span>        <a class="code hl_variable" href="a00398.xhtml#a20081d499cd0d70d8e61086f33b33365">m_pCCcf</a>-&gt;<a class="code hl_function" href="a00558.xhtml#af683b1b5e37ca2039424af02f4bfb3c5">init</a>(iDataLength);</div>
<div class="line"><a id="l00145" name="l00145"></a><span class="lineno">  145</span> </div>
<div class="line"><a id="l00146" name="l00146"></a><span class="lineno">  146</span>        <a class="code hl_function" href="a00514.xhtml#abaadac98b1cad18b7b568852bc951696">CVector::alloc</a>(<a class="code hl_variable" href="a00398.xhtml#a55d9b28275bf425da7edcd5a56822247">m_pfAcf</a>, <a class="code hl_variable" href="a00398.xhtml#a20081d499cd0d70d8e61086f33b33365">m_pCCcf</a>-&gt;<a class="code hl_function" href="a00558.xhtml#afe56cc1681b982d7d31b0830b3471b61">getCcfLength</a>(<span class="keyword">true</span>));</div>
<div class="line"><a id="l00147" name="l00147"></a><span class="lineno">  147</span>    };</div>
<div class="line"><a id="l00148" name="l00148"></a><span class="lineno">  148</span> </div>
<div class="line"><a id="l00149" name="l00149"></a><span class="lineno"><a class="line" href="a00398.xhtml#a0c7cdf1cb79c1e8395db89ba56d79cbc">  149</a></span>    <span class="keyword">virtual</span> <a class="code hl_function" href="a00398.xhtml#a0c7cdf1cb79c1e8395db89ba56d79cbc">~CPitchTimeAcf</a>()</div>
<div class="line"><a id="l00150" name="l00150"></a><span class="lineno">  150</span>    {</div>
<div class="line"><a id="l00151" name="l00151"></a><span class="lineno">  151</span>        <a class="code hl_function" href="a00514.xhtml#aa86bdb0c663d4d52f2765793756f8737">CVector::free</a>(<a class="code hl_variable" href="a00398.xhtml#a55d9b28275bf425da7edcd5a56822247">m_pfAcf</a>);</div>
<div class="line"><a id="l00152" name="l00152"></a><span class="lineno">  152</span> </div>
<div class="line"><a id="l00153" name="l00153"></a><span class="lineno">  153</span>        <span class="keyword">delete</span> <a class="code hl_variable" href="a00398.xhtml#a20081d499cd0d70d8e61086f33b33365">m_pCCcf</a>;</div>
<div class="line"><a id="l00154" name="l00154"></a><span class="lineno">  154</span>        <a class="code hl_variable" href="a00398.xhtml#a20081d499cd0d70d8e61086f33b33365">m_pCCcf</a> = 0;</div>
<div class="line"><a id="l00155" name="l00155"></a><span class="lineno">  155</span>    };</div>
<div class="line"><a id="l00156" name="l00156"></a><span class="lineno">  156</span> </div>
<div class="line"><a id="l00157" name="l00157"></a><span class="lineno"><a class="line" href="a00398.xhtml#a7b6c2a935434281c2e17352a3487c912">  157</a></span>    <span class="keywordtype">float</span> <a class="code hl_function" href="a00398.xhtml#a7b6c2a935434281c2e17352a3487c912">compF0</a>(<span class="keyword">const</span> <span class="keywordtype">float</span>* pfInput)<span class="keyword"> override</span></div>
<div class="line"><a id="l00158" name="l00158"></a><span class="lineno">  158</span><span class="keyword">    </span>{</div>
<div class="line"><a id="l00159" name="l00159"></a><span class="lineno">  159</span>        assert(pfInput);</div>
<div class="line"><a id="l00160" name="l00160"></a><span class="lineno">  160</span> </div>
<div class="line"><a id="l00161" name="l00161"></a><span class="lineno">  161</span>        <span class="keywordtype">int</span> iEta = 0,</div>
<div class="line"><a id="l00162" name="l00162"></a><span class="lineno">  162</span>            iEtaMin = <span class="keyword">static_cast&lt;</span><span class="keywordtype">int</span><span class="keyword">&gt;</span>(<a class="code hl_variable" href="a00538.xhtml#ac4a3235dfd5c3919a7d1a290f92dfa80">m_fSampleRate</a> / <a class="code hl_variable" href="a00398.xhtml#a7540d2f69db7b7da74ae54c8eacf458e">m_fMax</a>);</div>
<div class="line"><a id="l00163" name="l00163"></a><span class="lineno">  163</span> </div>
<div class="line"><a id="l00164" name="l00164"></a><span class="lineno">  164</span>        <a class="code hl_variable" href="a00398.xhtml#a20081d499cd0d70d8e61086f33b33365">m_pCCcf</a>-&gt;<a class="code hl_function" href="a00558.xhtml#a4d7d19dd39b24147d9a1fab5d7e05257">compCcf</a>(pfInput, pfInput, <span class="keyword">true</span>);</div>
<div class="line"><a id="l00165" name="l00165"></a><span class="lineno">  165</span>        <a class="code hl_variable" href="a00398.xhtml#a20081d499cd0d70d8e61086f33b33365">m_pCCcf</a>-&gt;<a class="code hl_function" href="a00558.xhtml#a02c0e23cbcecab5af2fb20a25160321a">getCcf</a>(<a class="code hl_variable" href="a00398.xhtml#a55d9b28275bf425da7edcd5a56822247">m_pfAcf</a>, <span class="keyword">true</span>);</div>
<div class="line"><a id="l00166" name="l00166"></a><span class="lineno">  166</span> </div>
<div class="line"><a id="l00167" name="l00167"></a><span class="lineno">  167</span>        <span class="comment">// avoid main lobe</span></div>
<div class="line"><a id="l00168" name="l00168"></a><span class="lineno">  168</span>        <span class="keywordflow">while</span> (<a class="code hl_variable" href="a00398.xhtml#a55d9b28275bf425da7edcd5a56822247">m_pfAcf</a>[iEta] &gt; <a class="code hl_variable" href="a00398.xhtml#a667c865dba3fda2b4dfcb27d467029d8">m_fMinThresh</a>)</div>
<div class="line"><a id="l00169" name="l00169"></a><span class="lineno">  169</span>            iEta++;</div>
<div class="line"><a id="l00170" name="l00170"></a><span class="lineno">  170</span>        <span class="keywordflow">if</span> (iEtaMin &lt; iEta)</div>
<div class="line"><a id="l00171" name="l00171"></a><span class="lineno">  171</span>            iEtaMin = iEta;</div>
<div class="line"><a id="l00172" name="l00172"></a><span class="lineno">  172</span> </div>
<div class="line"><a id="l00173" name="l00173"></a><span class="lineno">  173</span>        <span class="comment">// only look after first minimum</span></div>
<div class="line"><a id="l00174" name="l00174"></a><span class="lineno">  174</span>        iEta = 0;</div>
<div class="line"><a id="l00175" name="l00175"></a><span class="lineno">  175</span>        <span class="keywordflow">while</span> (<a class="code hl_variable" href="a00398.xhtml#a55d9b28275bf425da7edcd5a56822247">m_pfAcf</a>[iEta] &gt; <a class="code hl_variable" href="a00398.xhtml#a55d9b28275bf425da7edcd5a56822247">m_pfAcf</a>[iEta + 1])</div>
<div class="line"><a id="l00176" name="l00176"></a><span class="lineno">  176</span>        {</div>
<div class="line"><a id="l00177" name="l00177"></a><span class="lineno">  177</span>            iEta++;</div>
<div class="line"><a id="l00178" name="l00178"></a><span class="lineno">  178</span>            <span class="keywordflow">if</span> (iEta &gt;= <a class="code hl_variable" href="a00538.xhtml#aab7cbf575cd81f196fdc75f226b61ab6">m_iDataLength</a>)</div>
<div class="line"><a id="l00179" name="l00179"></a><span class="lineno">  179</span>                <span class="keywordflow">break</span>;</div>
<div class="line"><a id="l00180" name="l00180"></a><span class="lineno">  180</span>        }</div>
<div class="line"><a id="l00181" name="l00181"></a><span class="lineno">  181</span> </div>
<div class="line"><a id="l00182" name="l00182"></a><span class="lineno">  182</span>        <span class="keywordflow">if</span> (iEta &gt;= <a class="code hl_variable" href="a00538.xhtml#aab7cbf575cd81f196fdc75f226b61ab6">m_iDataLength</a>)</div>
<div class="line"><a id="l00183" name="l00183"></a><span class="lineno">  183</span>            iEtaMin = 0;</div>
<div class="line"><a id="l00184" name="l00184"></a><span class="lineno">  184</span>        <span class="keywordflow">else</span> <span class="keywordflow">if</span> (iEtaMin &lt; iEta)</div>
<div class="line"><a id="l00185" name="l00185"></a><span class="lineno">  185</span>            iEtaMin = iEta;</div>
<div class="line"><a id="l00186" name="l00186"></a><span class="lineno">  186</span> </div>
<div class="line"><a id="l00187" name="l00187"></a><span class="lineno">  187</span>        <span class="comment">// get the maximum given the constraints above</span></div>
<div class="line"><a id="l00188" name="l00188"></a><span class="lineno">  188</span>        <span class="keywordtype">float</span> fMax = 0;</div>
<div class="line"><a id="l00189" name="l00189"></a><span class="lineno">  189</span>        <span class="keywordtype">long</span> <span class="keywordtype">long</span> iMax = -1;</div>
<div class="line"><a id="l00190" name="l00190"></a><span class="lineno">  190</span>        <a class="code hl_function" href="a00514.xhtml#a34a5c0abd80cd982df8a8bae7cbcea19">CVector::findMax</a>(&amp;<a class="code hl_variable" href="a00398.xhtml#a55d9b28275bf425da7edcd5a56822247">m_pfAcf</a>[iEtaMin], fMax, iMax, <span class="keyword">static_cast&lt;</span><span class="keywordtype">long</span> <span class="keywordtype">long</span><span class="keyword">&gt;</span>(<a class="code hl_variable" href="a00538.xhtml#aab7cbf575cd81f196fdc75f226b61ab6">m_iDataLength</a>) - iEtaMin);</div>
<div class="line"><a id="l00191" name="l00191"></a><span class="lineno">  191</span> </div>
<div class="line"><a id="l00192" name="l00192"></a><span class="lineno">  192</span>        <span class="keywordflow">if</span> (fMax &lt;= 0)</div>
<div class="line"><a id="l00193" name="l00193"></a><span class="lineno">  193</span>            <span class="keywordflow">return</span> 0.F;</div>
<div class="line"><a id="l00194" name="l00194"></a><span class="lineno">  194</span> </div>
<div class="line"><a id="l00195" name="l00195"></a><span class="lineno">  195</span>        <span class="keywordflow">return</span> <a class="code hl_variable" href="a00538.xhtml#ac4a3235dfd5c3919a7d1a290f92dfa80">m_fSampleRate</a> / (iMax + iEtaMin);</div>
<div class="line"><a id="l00196" name="l00196"></a><span class="lineno">  196</span>    };</div>
<div class="line"><a id="l00197" name="l00197"></a><span class="lineno">  197</span> </div>
<div class="line"><a id="l00198" name="l00198"></a><span class="lineno">  198</span> </div>
<div class="line"><a id="l00199" name="l00199"></a><span class="lineno">  199</span><span class="keyword">private</span>:</div>
<div class="line"><a id="l00200" name="l00200"></a><span class="lineno"><a class="line" href="a00398.xhtml#af1810f62663b7dbd228a09198f3cf13a">  200</a></span>    <a class="code hl_function" href="a00398.xhtml#af1810f62663b7dbd228a09198f3cf13a">CPitchTimeAcf</a>() {};</div>
<div class="line"><a id="l00201" name="l00201"></a><span class="lineno"><a class="line" href="a00398.xhtml#a58e2df14aeed930a1e41749d40e65c35">  201</a></span>    <a class="code hl_function" href="a00398.xhtml#a58e2df14aeed930a1e41749d40e65c35">CPitchTimeAcf</a>(<span class="keyword">const</span> <a class="code hl_class" href="a00398.xhtml">CPitchTimeAcf</a>&amp; that);     <span class="comment">//!&lt; disallow copy construction</span></div>
<div class="line"><a id="l00202" name="l00202"></a><span class="lineno"><a class="line" href="a00398.xhtml#a9bc50b93b2afdc1782d8534fa7ed6c80">  202</a></span>    <a class="code hl_class" href="a00398.xhtml">CPitchTimeAcf</a>&amp; <a class="code hl_function" href="a00398.xhtml#a9bc50b93b2afdc1782d8534fa7ed6c80">operator=</a>(<span class="keyword">const</span> <a class="code hl_class" href="a00398.xhtml">CPitchTimeAcf</a>&amp; c);</div>
<div class="line"><a id="l00203" name="l00203"></a><span class="lineno">  203</span> </div>
<div class="line"><a id="l00204" name="l00204"></a><span class="lineno"><a class="line" href="a00398.xhtml#a20081d499cd0d70d8e61086f33b33365">  204</a></span>    <a class="code hl_class" href="a00558.xhtml">CCcf</a>* <a class="code hl_variable" href="a00398.xhtml#a20081d499cd0d70d8e61086f33b33365">m_pCCcf</a> = 0;</div>
<div class="line"><a id="l00205" name="l00205"></a><span class="lineno"><a class="line" href="a00398.xhtml#a55d9b28275bf425da7edcd5a56822247">  205</a></span>    <span class="keywordtype">float</span>* <a class="code hl_variable" href="a00398.xhtml#a55d9b28275bf425da7edcd5a56822247">m_pfAcf</a> = 0;</div>
<div class="line"><a id="l00206" name="l00206"></a><span class="lineno">  206</span> </div>
<div class="line"><a id="l00207" name="l00207"></a><span class="lineno"><a class="line" href="a00398.xhtml#a7540d2f69db7b7da74ae54c8eacf458e">  207</a></span>    <span class="keywordtype">float</span> <a class="code hl_variable" href="a00398.xhtml#a7540d2f69db7b7da74ae54c8eacf458e">m_fMax</a> = 2000.F;</div>
<div class="line"><a id="l00208" name="l00208"></a><span class="lineno"><a class="line" href="a00398.xhtml#a667c865dba3fda2b4dfcb27d467029d8">  208</a></span>    <span class="keyword">const</span> <span class="keywordtype">float</span> <a class="code hl_variable" href="a00398.xhtml#a667c865dba3fda2b4dfcb27d467029d8">m_fMinThresh</a> = 0.35F;</div>
<div class="line"><a id="l00209" name="l00209"></a><span class="lineno">  209</span> </div>
<div class="line"><a id="l00210" name="l00210"></a><span class="lineno">  210</span>};</div>
<div class="line"><a id="l00211" name="l00211"></a><span class="lineno">  211</span> </div>
<div class="line"><a id="l00212" name="l00212"></a><span class="lineno"><a class="line" href="a00402.xhtml">  212</a></span><span class="keyword">class </span><a class="code hl_class" href="a00402.xhtml">CPitchTimeAuditory</a> : <span class="keyword">public</span> <a class="code hl_class" href="a00538.xhtml">CPitchFromBlockIf</a></div>
<div class="line"><a id="l00213" name="l00213"></a><span class="lineno">  213</span>{</div>
<div class="line"><a id="l00214" name="l00214"></a><span class="lineno">  214</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00215" name="l00215"></a><span class="lineno"><a class="line" href="a00402.xhtml#af5f08be46100a7ecbc5450f52a96c77e">  215</a></span>    <a class="code hl_function" href="a00402.xhtml#af5f08be46100a7ecbc5450f52a96c77e">CPitchTimeAuditory</a>(<a class="code hl_enumeration" href="a00534.xhtml#ac55ab3f8cd0b036cbb891537272342df">CPitchIf::PitchExtractors_t</a> ePitchIdx, <span class="keywordtype">int</span> iDataLength, <span class="keywordtype">float</span> fSampleRate) : <a class="code hl_class" href="a00538.xhtml">CPitchFromBlockIf</a>(ePitchIdx, iDataLength, fSampleRate)</div>
<div class="line"><a id="l00216" name="l00216"></a><span class="lineno">  216</span>    {</div>
<div class="line"><a id="l00217" name="l00217"></a><span class="lineno">  217</span>        <span class="keywordtype">float</span> afA[3] = { 0 };</div>
<div class="line"><a id="l00218" name="l00218"></a><span class="lineno">  218</span>        <span class="keywordtype">float</span> afB[3] = { 0 };</div>
<div class="line"><a id="l00219" name="l00219"></a><span class="lineno">  219</span>        <a class="code hl_function" href="a00494.xhtml#a3878460603a6e6e1a64de6021b2bb73e">CButterLp::calcCoeffs</a>(afB, afA, 2, <a class="code hl_variable" href="a00402.xhtml#afb3a9a1029f184c96159868842024419">m_fSmoothLpCutoff</a>);</div>
<div class="line"><a id="l00220" name="l00220"></a><span class="lineno">  220</span> </div>
<div class="line"><a id="l00221" name="l00221"></a><span class="lineno">  221</span>        <a class="code hl_variable" href="a00402.xhtml#aa2128e53e03b5091d911855b8f10f6fa">m_pCCcf</a> = <span class="keyword">new</span> <a class="code hl_class" href="a00558.xhtml">CCcf</a>();</div>
<div class="line"><a id="l00222" name="l00222"></a><span class="lineno">  222</span>        <a class="code hl_variable" href="a00402.xhtml#aa2128e53e03b5091d911855b8f10f6fa">m_pCCcf</a>-&gt;<a class="code hl_function" href="a00558.xhtml#af683b1b5e37ca2039424af02f4bfb3c5">init</a>(iDataLength);</div>
<div class="line"><a id="l00223" name="l00223"></a><span class="lineno">  223</span> </div>
<div class="line"><a id="l00224" name="l00224"></a><span class="lineno">  224</span>        <a class="code hl_function" href="a00514.xhtml#abaadac98b1cad18b7b568852bc951696">CVector::alloc</a>(<a class="code hl_variable" href="a00402.xhtml#adf580839aeb79817e5d72508ad7fabd7">m_pfAcf</a>, <a class="code hl_variable" href="a00402.xhtml#aa2128e53e03b5091d911855b8f10f6fa">m_pCCcf</a>-&gt;<a class="code hl_function" href="a00558.xhtml#afe56cc1681b982d7d31b0830b3471b61">getCcfLength</a>(<span class="keyword">true</span>));</div>
<div class="line"><a id="l00225" name="l00225"></a><span class="lineno">  225</span>        <a class="code hl_function" href="a00514.xhtml#abaadac98b1cad18b7b568852bc951696">CVector::alloc</a>(<a class="code hl_variable" href="a00402.xhtml#a182c4d5365c2fdcd82f970f0eb46db83">m_pfSumAcf</a>, <a class="code hl_variable" href="a00402.xhtml#aa2128e53e03b5091d911855b8f10f6fa">m_pCCcf</a>-&gt;<a class="code hl_function" href="a00558.xhtml#afe56cc1681b982d7d31b0830b3471b61">getCcfLength</a>(<span class="keyword">true</span>));</div>
<div class="line"><a id="l00226" name="l00226"></a><span class="lineno">  226</span>        <a class="code hl_function" href="a00498.xhtml#a6501b78d76c912d49eee88c8f7242923">CMatrix::alloc</a>(<a class="code hl_variable" href="a00402.xhtml#a0d98dec998ad65b07cd207a11f05b8ca">m_ppfProcBuff</a>, <a class="code hl_variable" href="a00402.xhtml#a20fa417c0ec8aea6bc48f76da812a5e5">m_iNumBands</a>, iDataLength);</div>
<div class="line"><a id="l00227" name="l00227"></a><span class="lineno">  227</span> </div>
<div class="line"><a id="l00228" name="l00228"></a><span class="lineno">  228</span>        <span class="keywordflow">for</span> (<span class="keyword">auto</span> c = 0; c &lt; <a class="code hl_variable" href="a00402.xhtml#a20fa417c0ec8aea6bc48f76da812a5e5">m_iNumBands</a>; c++)</div>
<div class="line"><a id="l00229" name="l00229"></a><span class="lineno">  229</span>        {</div>
<div class="line"><a id="l00230" name="l00230"></a><span class="lineno">  230</span>            <a class="code hl_variable" href="a00402.xhtml#af519c85d2066eada257f57fe90b26f7a">m_apCFilter</a>[c] = <span class="keyword">new</span> <a class="code hl_class" href="a00490.xhtml">CFilter&lt;float&gt;</a>();</div>
<div class="line"><a id="l00231" name="l00231"></a><span class="lineno">  231</span>            <a class="code hl_variable" href="a00402.xhtml#af519c85d2066eada257f57fe90b26f7a">m_apCFilter</a>[c]-&gt;<a class="code hl_function" href="a00490.xhtml#add0db9a0cf605eb3f57c80b52d2bda0e">init</a>(afB, afA, 3);</div>
<div class="line"><a id="l00232" name="l00232"></a><span class="lineno">  232</span>        }</div>
<div class="line"><a id="l00233" name="l00233"></a><span class="lineno">  233</span> </div>
<div class="line"><a id="l00234" name="l00234"></a><span class="lineno">  234</span>        <a class="code hl_function" href="a00570.xhtml#a19cabc50a7c022f869871ae9602061cd">CGammaToneFbIf::create</a>(<a class="code hl_variable" href="a00402.xhtml#a46b81a401b88ec5ba6f91ae24019fd71">m_pCFilterBank</a>, fSampleRate, <a class="code hl_variable" href="a00402.xhtml#a20fa417c0ec8aea6bc48f76da812a5e5">m_iNumBands</a>);</div>
<div class="line"><a id="l00235" name="l00235"></a><span class="lineno">  235</span> </div>
<div class="line"><a id="l00236" name="l00236"></a><span class="lineno">  236</span>    };</div>
<div class="line"><a id="l00237" name="l00237"></a><span class="lineno">  237</span> </div>
<div class="line"><a id="l00238" name="l00238"></a><span class="lineno"><a class="line" href="a00402.xhtml#aafe950d4f08df5a8d47f44cb827ce4a0">  238</a></span>    <span class="keyword">virtual</span> <a class="code hl_function" href="a00402.xhtml#aafe950d4f08df5a8d47f44cb827ce4a0">~CPitchTimeAuditory</a>()</div>
<div class="line"><a id="l00239" name="l00239"></a><span class="lineno">  239</span>    {</div>
<div class="line"><a id="l00240" name="l00240"></a><span class="lineno">  240</span>        <a class="code hl_function" href="a00514.xhtml#aa86bdb0c663d4d52f2765793756f8737">CVector::free</a>(<a class="code hl_variable" href="a00402.xhtml#adf580839aeb79817e5d72508ad7fabd7">m_pfAcf</a>);</div>
<div class="line"><a id="l00241" name="l00241"></a><span class="lineno">  241</span>        <a class="code hl_function" href="a00514.xhtml#aa86bdb0c663d4d52f2765793756f8737">CVector::free</a>(<a class="code hl_variable" href="a00402.xhtml#a182c4d5365c2fdcd82f970f0eb46db83">m_pfSumAcf</a>);</div>
<div class="line"><a id="l00242" name="l00242"></a><span class="lineno">  242</span>        <a class="code hl_function" href="a00498.xhtml#a591097c6b1935c4d6273b3445f8f552b">CMatrix::free</a>(<a class="code hl_variable" href="a00402.xhtml#a0d98dec998ad65b07cd207a11f05b8ca">m_ppfProcBuff</a>, <a class="code hl_variable" href="a00402.xhtml#a20fa417c0ec8aea6bc48f76da812a5e5">m_iNumBands</a>);</div>
<div class="line"><a id="l00243" name="l00243"></a><span class="lineno">  243</span> </div>
<div class="line"><a id="l00244" name="l00244"></a><span class="lineno">  244</span>        <span class="keywordflow">for</span> (<span class="keyword">auto</span> c = 0; c &lt; <a class="code hl_variable" href="a00402.xhtml#a20fa417c0ec8aea6bc48f76da812a5e5">m_iNumBands</a>; c++)</div>
<div class="line"><a id="l00245" name="l00245"></a><span class="lineno">  245</span>            <span class="keyword">delete</span> <a class="code hl_variable" href="a00402.xhtml#af519c85d2066eada257f57fe90b26f7a">m_apCFilter</a>[c];</div>
<div class="line"><a id="l00246" name="l00246"></a><span class="lineno">  246</span> </div>
<div class="line"><a id="l00247" name="l00247"></a><span class="lineno">  247</span>        <span class="keyword">delete</span> <a class="code hl_variable" href="a00402.xhtml#aa2128e53e03b5091d911855b8f10f6fa">m_pCCcf</a>;</div>
<div class="line"><a id="l00248" name="l00248"></a><span class="lineno">  248</span>        <a class="code hl_variable" href="a00402.xhtml#aa2128e53e03b5091d911855b8f10f6fa">m_pCCcf</a> = 0;</div>
<div class="line"><a id="l00249" name="l00249"></a><span class="lineno">  249</span> </div>
<div class="line"><a id="l00250" name="l00250"></a><span class="lineno">  250</span>        <a class="code hl_function" href="a00570.xhtml#ab7ebd623237cc28b195f0fd291707bf8">CGammaToneFbIf::destroy</a>(<a class="code hl_variable" href="a00402.xhtml#a46b81a401b88ec5ba6f91ae24019fd71">m_pCFilterBank</a>);</div>
<div class="line"><a id="l00251" name="l00251"></a><span class="lineno">  251</span>    };</div>
<div class="line"><a id="l00252" name="l00252"></a><span class="lineno">  252</span> </div>
<div class="line"><a id="l00253" name="l00253"></a><span class="lineno"><a class="line" href="a00402.xhtml#a7fa2c23a2108dc313f319ec803a6181f">  253</a></span>    <span class="keywordtype">float</span> <a class="code hl_function" href="a00402.xhtml#a7fa2c23a2108dc313f319ec803a6181f">compF0</a>(<span class="keyword">const</span> <span class="keywordtype">float</span>* pfInput)<span class="keyword"> override</span></div>
<div class="line"><a id="l00254" name="l00254"></a><span class="lineno">  254</span><span class="keyword">    </span>{</div>
<div class="line"><a id="l00255" name="l00255"></a><span class="lineno">  255</span>        assert(pfInput);</div>
<div class="line"><a id="l00256" name="l00256"></a><span class="lineno">  256</span> </div>
<div class="line"><a id="l00257" name="l00257"></a><span class="lineno">  257</span>        <a class="code hl_function" href="a00514.xhtml#a6dbb3f9f480568b60f7fe50090d20003">CVector::setZero</a>(<a class="code hl_variable" href="a00402.xhtml#a182c4d5365c2fdcd82f970f0eb46db83">m_pfSumAcf</a>, <a class="code hl_variable" href="a00538.xhtml#aab7cbf575cd81f196fdc75f226b61ab6">m_iDataLength</a>);</div>
<div class="line"><a id="l00258" name="l00258"></a><span class="lineno">  258</span> </div>
<div class="line"><a id="l00259" name="l00259"></a><span class="lineno">  259</span>        <a class="code hl_variable" href="a00402.xhtml#a46b81a401b88ec5ba6f91ae24019fd71">m_pCFilterBank</a>-&gt;<a class="code hl_function" href="a00570.xhtml#a213a39329bd7d70dbd90df71d1cf0735">process</a>(<a class="code hl_variable" href="a00402.xhtml#a0d98dec998ad65b07cd207a11f05b8ca">m_ppfProcBuff</a>, pfInput, <a class="code hl_variable" href="a00538.xhtml#aab7cbf575cd81f196fdc75f226b61ab6">m_iDataLength</a>);</div>
<div class="line"><a id="l00260" name="l00260"></a><span class="lineno">  260</span>        </div>
<div class="line"><a id="l00261" name="l00261"></a><span class="lineno">  261</span>        <span class="keywordflow">for</span> (<span class="keyword">auto</span> c = 0; c &lt; <a class="code hl_variable" href="a00402.xhtml#a20fa417c0ec8aea6bc48f76da812a5e5">m_iNumBands</a>; c++)</div>
<div class="line"><a id="l00262" name="l00262"></a><span class="lineno">  262</span>        {</div>
<div class="line"><a id="l00263" name="l00263"></a><span class="lineno">  263</span>            <span class="comment">// smooth</span></div>
<div class="line"><a id="l00264" name="l00264"></a><span class="lineno">  264</span>            <a class="code hl_variable" href="a00402.xhtml#af519c85d2066eada257f57fe90b26f7a">m_apCFilter</a>[c]-&gt;<a class="code hl_function" href="a00490.xhtml#a1c35f3511dcdc32517db3cea9c327ae8">process</a>(<a class="code hl_variable" href="a00402.xhtml#a0d98dec998ad65b07cd207a11f05b8ca">m_ppfProcBuff</a>[c], <a class="code hl_variable" href="a00402.xhtml#a0d98dec998ad65b07cd207a11f05b8ca">m_ppfProcBuff</a>[c], <a class="code hl_variable" href="a00538.xhtml#aab7cbf575cd81f196fdc75f226b61ab6">m_iDataLength</a>);</div>
<div class="line"><a id="l00265" name="l00265"></a><span class="lineno">  265</span> </div>
<div class="line"><a id="l00266" name="l00266"></a><span class="lineno">  266</span>            <span class="comment">// compute acf</span></div>
<div class="line"><a id="l00267" name="l00267"></a><span class="lineno">  267</span>            <a class="code hl_variable" href="a00402.xhtml#aa2128e53e03b5091d911855b8f10f6fa">m_pCCcf</a>-&gt;<a class="code hl_function" href="a00558.xhtml#a4d7d19dd39b24147d9a1fab5d7e05257">compCcf</a>(<a class="code hl_variable" href="a00402.xhtml#a0d98dec998ad65b07cd207a11f05b8ca">m_ppfProcBuff</a>[c], <a class="code hl_variable" href="a00402.xhtml#a0d98dec998ad65b07cd207a11f05b8ca">m_ppfProcBuff</a>[c], <span class="keyword">true</span>);</div>
<div class="line"><a id="l00268" name="l00268"></a><span class="lineno">  268</span>            <a class="code hl_variable" href="a00402.xhtml#aa2128e53e03b5091d911855b8f10f6fa">m_pCCcf</a>-&gt;<a class="code hl_function" href="a00558.xhtml#a02c0e23cbcecab5af2fb20a25160321a">getCcf</a>(<a class="code hl_variable" href="a00402.xhtml#adf580839aeb79817e5d72508ad7fabd7">m_pfAcf</a>, <span class="keyword">true</span>);</div>
<div class="line"><a id="l00269" name="l00269"></a><span class="lineno">  269</span> </div>
<div class="line"><a id="l00270" name="l00270"></a><span class="lineno">  270</span>            <span class="comment">// compute sum of acfs</span></div>
<div class="line"><a id="l00271" name="l00271"></a><span class="lineno">  271</span>            <a class="code hl_function" href="a00514.xhtml#a3a052b83e62e5c5cc44829c64ffe42eb">CVector::add_I</a>(<a class="code hl_variable" href="a00402.xhtml#a182c4d5365c2fdcd82f970f0eb46db83">m_pfSumAcf</a>, <a class="code hl_variable" href="a00402.xhtml#adf580839aeb79817e5d72508ad7fabd7">m_pfAcf</a>, <a class="code hl_variable" href="a00538.xhtml#aab7cbf575cd81f196fdc75f226b61ab6">m_iDataLength</a>);</div>
<div class="line"><a id="l00272" name="l00272"></a><span class="lineno">  272</span>        }</div>
<div class="line"><a id="l00273" name="l00273"></a><span class="lineno">  273</span> </div>
<div class="line"><a id="l00274" name="l00274"></a><span class="lineno">  274</span>        <span class="keywordtype">int</span> iEta = <a class="code hl_function" href="a00402.xhtml#ad3ef7f984b93956e27cea585759fbc2e">getAcfMax_</a>(<a class="code hl_variable" href="a00402.xhtml#a182c4d5365c2fdcd82f970f0eb46db83">m_pfSumAcf</a>);</div>
<div class="line"><a id="l00275" name="l00275"></a><span class="lineno">  275</span>        <span class="keywordflow">return</span> <a class="code hl_variable" href="a00538.xhtml#ac4a3235dfd5c3919a7d1a290f92dfa80">m_fSampleRate</a> / iEta;    </div>
<div class="line"><a id="l00276" name="l00276"></a><span class="lineno">  276</span>    }</div>
<div class="line"><a id="l00277" name="l00277"></a><span class="lineno">  277</span> </div>
<div class="line"><a id="l00278" name="l00278"></a><span class="lineno">  278</span> </div>
<div class="line"><a id="l00279" name="l00279"></a><span class="lineno">  279</span><span class="keyword">private</span>:</div>
<div class="line"><a id="l00280" name="l00280"></a><span class="lineno"><a class="line" href="a00402.xhtml#a8be8b6e01ad89bdeaf24b45dbd599227">  280</a></span>    <a class="code hl_function" href="a00402.xhtml#a8be8b6e01ad89bdeaf24b45dbd599227">CPitchTimeAuditory</a>() {};</div>
<div class="line"><a id="l00281" name="l00281"></a><span class="lineno"><a class="line" href="a00402.xhtml#a11f411e863bb51d4b6709f2da2265859">  281</a></span>    <a class="code hl_function" href="a00402.xhtml#a11f411e863bb51d4b6709f2da2265859">CPitchTimeAuditory</a>(<span class="keyword">const</span> <a class="code hl_class" href="a00402.xhtml">CPitchTimeAuditory</a>&amp; that);     <span class="comment">//!&lt; disallow copy construction</span></div>
<div class="line"><a id="l00282" name="l00282"></a><span class="lineno"><a class="line" href="a00402.xhtml#ac78dd42c996a8e981d75811810eb264e">  282</a></span>    <a class="code hl_class" href="a00402.xhtml">CPitchTimeAuditory</a>&amp; <a class="code hl_function" href="a00402.xhtml#ac78dd42c996a8e981d75811810eb264e">operator=</a>(<span class="keyword">const</span> <a class="code hl_class" href="a00402.xhtml">CPitchTimeAuditory</a>&amp; c);</div>
<div class="line"><a id="l00283" name="l00283"></a><span class="lineno">  283</span> </div>
<div class="line"><a id="l00284" name="l00284"></a><span class="lineno"><a class="line" href="a00402.xhtml#ad3ef7f984b93956e27cea585759fbc2e">  284</a></span>    <span class="keywordtype">int</span> <a class="code hl_function" href="a00402.xhtml#ad3ef7f984b93956e27cea585759fbc2e">getAcfMax_</a>(<span class="keyword">const</span> <span class="keywordtype">float</span>* pfInput)</div>
<div class="line"><a id="l00285" name="l00285"></a><span class="lineno">  285</span>    {</div>
<div class="line"><a id="l00286" name="l00286"></a><span class="lineno">  286</span>        <span class="keywordtype">int</span> iEta = 0,</div>
<div class="line"><a id="l00287" name="l00287"></a><span class="lineno">  287</span>            iEtaMin = <span class="keyword">static_cast&lt;</span><span class="keywordtype">int</span><span class="keyword">&gt;</span>(<a class="code hl_variable" href="a00538.xhtml#ac4a3235dfd5c3919a7d1a290f92dfa80">m_fSampleRate</a> / <a class="code hl_variable" href="a00402.xhtml#a59e9a76613f0d0e0bd2a5a2a0816527d">m_fMax</a>);</div>
<div class="line"><a id="l00288" name="l00288"></a><span class="lineno">  288</span> </div>
<div class="line"><a id="l00289" name="l00289"></a><span class="lineno">  289</span>        <span class="comment">// avoid main lobe</span></div>
<div class="line"><a id="l00290" name="l00290"></a><span class="lineno">  290</span>        <span class="keywordflow">while</span> (pfInput[iEta] &gt; <a class="code hl_variable" href="a00402.xhtml#a37b0dc19d17b9b82cd5dcb407d9ccaa7">m_fMinThresh</a>)</div>
<div class="line"><a id="l00291" name="l00291"></a><span class="lineno">  291</span>            iEta++;</div>
<div class="line"><a id="l00292" name="l00292"></a><span class="lineno">  292</span>        <span class="keywordflow">if</span> (iEtaMin &lt; iEta)</div>
<div class="line"><a id="l00293" name="l00293"></a><span class="lineno">  293</span>            iEtaMin = iEta;</div>
<div class="line"><a id="l00294" name="l00294"></a><span class="lineno">  294</span> </div>
<div class="line"><a id="l00295" name="l00295"></a><span class="lineno">  295</span>        <span class="comment">// only look after first minimum</span></div>
<div class="line"><a id="l00296" name="l00296"></a><span class="lineno">  296</span>        iEta = 0;</div>
<div class="line"><a id="l00297" name="l00297"></a><span class="lineno">  297</span>        <span class="keywordflow">while</span> (pfInput[iEta] &gt; pfInput[iEta + 1])</div>
<div class="line"><a id="l00298" name="l00298"></a><span class="lineno">  298</span>        {</div>
<div class="line"><a id="l00299" name="l00299"></a><span class="lineno">  299</span>            iEta++;</div>
<div class="line"><a id="l00300" name="l00300"></a><span class="lineno">  300</span>            <span class="keywordflow">if</span> (iEta &gt;= <a class="code hl_variable" href="a00538.xhtml#aab7cbf575cd81f196fdc75f226b61ab6">m_iDataLength</a>)</div>
<div class="line"><a id="l00301" name="l00301"></a><span class="lineno">  301</span>                <span class="keywordflow">break</span>;</div>
<div class="line"><a id="l00302" name="l00302"></a><span class="lineno">  302</span>        }</div>
<div class="line"><a id="l00303" name="l00303"></a><span class="lineno">  303</span> </div>
<div class="line"><a id="l00304" name="l00304"></a><span class="lineno">  304</span>        <span class="keywordflow">if</span> (iEta &gt;= <a class="code hl_variable" href="a00538.xhtml#aab7cbf575cd81f196fdc75f226b61ab6">m_iDataLength</a>)</div>
<div class="line"><a id="l00305" name="l00305"></a><span class="lineno">  305</span>            iEtaMin = 0;</div>
<div class="line"><a id="l00306" name="l00306"></a><span class="lineno">  306</span>        <span class="keywordflow">else</span> <span class="keywordflow">if</span> (iEtaMin &lt; iEta)</div>
<div class="line"><a id="l00307" name="l00307"></a><span class="lineno">  307</span>            iEtaMin = iEta;</div>
<div class="line"><a id="l00308" name="l00308"></a><span class="lineno">  308</span> </div>
<div class="line"><a id="l00309" name="l00309"></a><span class="lineno">  309</span>        <span class="comment">// get the maximum given the constraints above</span></div>
<div class="line"><a id="l00310" name="l00310"></a><span class="lineno">  310</span>        <span class="keywordtype">float</span> fMax = 0;</div>
<div class="line"><a id="l00311" name="l00311"></a><span class="lineno">  311</span>        <span class="keywordtype">long</span> <span class="keywordtype">long</span> iMax = -1;</div>
<div class="line"><a id="l00312" name="l00312"></a><span class="lineno">  312</span>        <a class="code hl_function" href="a00514.xhtml#a34a5c0abd80cd982df8a8bae7cbcea19">CVector::findMax</a>(&amp;pfInput[iEtaMin], fMax, iMax, <span class="keyword">static_cast&lt;</span><span class="keywordtype">long</span> <span class="keywordtype">long</span><span class="keyword">&gt;</span>(<a class="code hl_variable" href="a00538.xhtml#aab7cbf575cd81f196fdc75f226b61ab6">m_iDataLength</a>) - iEtaMin);</div>
<div class="line"><a id="l00313" name="l00313"></a><span class="lineno">  313</span> </div>
<div class="line"><a id="l00314" name="l00314"></a><span class="lineno">  314</span>        <span class="keywordflow">if</span> (fMax &lt;= 0)</div>
<div class="line"><a id="l00315" name="l00315"></a><span class="lineno">  315</span>            <span class="keywordflow">return</span> 0;</div>
<div class="line"><a id="l00316" name="l00316"></a><span class="lineno">  316</span> </div>
<div class="line"><a id="l00317" name="l00317"></a><span class="lineno">  317</span>        <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span><span class="keywordtype">int</span><span class="keyword">&gt;</span>(iMax + iEtaMin);</div>
<div class="line"><a id="l00318" name="l00318"></a><span class="lineno">  318</span>    };</div>
<div class="line"><a id="l00319" name="l00319"></a><span class="lineno">  319</span> </div>
<div class="line"><a id="l00320" name="l00320"></a><span class="lineno"><a class="line" href="a00402.xhtml#aa2128e53e03b5091d911855b8f10f6fa">  320</a></span>    <a class="code hl_class" href="a00558.xhtml">CCcf</a>* <a class="code hl_variable" href="a00402.xhtml#aa2128e53e03b5091d911855b8f10f6fa">m_pCCcf</a> = 0;</div>
<div class="line"><a id="l00321" name="l00321"></a><span class="lineno"><a class="line" href="a00402.xhtml#adf580839aeb79817e5d72508ad7fabd7">  321</a></span>    <span class="keywordtype">float</span>* <a class="code hl_variable" href="a00402.xhtml#adf580839aeb79817e5d72508ad7fabd7">m_pfAcf</a> = 0;</div>
<div class="line"><a id="l00322" name="l00322"></a><span class="lineno"><a class="line" href="a00402.xhtml#a182c4d5365c2fdcd82f970f0eb46db83">  322</a></span>    <span class="keywordtype">float</span>* <a class="code hl_variable" href="a00402.xhtml#a182c4d5365c2fdcd82f970f0eb46db83">m_pfSumAcf</a> = 0;</div>
<div class="line"><a id="l00323" name="l00323"></a><span class="lineno"><a class="line" href="a00402.xhtml#a0d98dec998ad65b07cd207a11f05b8ca">  323</a></span>    <span class="keywordtype">float</span>** <a class="code hl_variable" href="a00402.xhtml#a0d98dec998ad65b07cd207a11f05b8ca">m_ppfProcBuff</a> = 0;</div>
<div class="line"><a id="l00324" name="l00324"></a><span class="lineno">  324</span> </div>
<div class="line"><a id="l00325" name="l00325"></a><span class="lineno"><a class="line" href="a00402.xhtml#a20fa417c0ec8aea6bc48f76da812a5e5">  325</a></span>    <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">int</span> <a class="code hl_variable" href="a00402.xhtml#a20fa417c0ec8aea6bc48f76da812a5e5">m_iNumBands</a> = 20;</div>
<div class="line"><a id="l00326" name="l00326"></a><span class="lineno"><a class="line" href="a00402.xhtml#af519c85d2066eada257f57fe90b26f7a">  326</a></span>    <a class="code hl_class" href="a00490.xhtml">CFilter&lt;float&gt;</a>* <a class="code hl_variable" href="a00402.xhtml#af519c85d2066eada257f57fe90b26f7a">m_apCFilter</a>[<a class="code hl_variable" href="a00402.xhtml#a20fa417c0ec8aea6bc48f76da812a5e5">m_iNumBands</a>] = { 0 };</div>
<div class="line"><a id="l00327" name="l00327"></a><span class="lineno"><a class="line" href="a00402.xhtml#a46b81a401b88ec5ba6f91ae24019fd71">  327</a></span>    <a class="code hl_class" href="a00570.xhtml">CGammaToneFbIf</a>* <a class="code hl_variable" href="a00402.xhtml#a46b81a401b88ec5ba6f91ae24019fd71">m_pCFilterBank</a> = 0;</div>
<div class="line"><a id="l00328" name="l00328"></a><span class="lineno">  328</span> </div>
<div class="line"><a id="l00329" name="l00329"></a><span class="lineno">  329</span> </div>
<div class="line"><a id="l00330" name="l00330"></a><span class="lineno"><a class="line" href="a00402.xhtml#a59e9a76613f0d0e0bd2a5a2a0816527d">  330</a></span>    <span class="keywordtype">float</span> <a class="code hl_variable" href="a00402.xhtml#a59e9a76613f0d0e0bd2a5a2a0816527d">m_fMax</a> = 2000.F;</div>
<div class="line"><a id="l00331" name="l00331"></a><span class="lineno"><a class="line" href="a00402.xhtml#afb3a9a1029f184c96159868842024419">  331</a></span>    <span class="keyword">const</span> <span class="keywordtype">float</span> <a class="code hl_variable" href="a00402.xhtml#afb3a9a1029f184c96159868842024419">m_fSmoothLpCutoff</a> = 0.02F;</div>
<div class="line"><a id="l00332" name="l00332"></a><span class="lineno"><a class="line" href="a00402.xhtml#a37b0dc19d17b9b82cd5dcb407d9ccaa7">  332</a></span>    <span class="keyword">const</span> <span class="keywordtype">float</span> <a class="code hl_variable" href="a00402.xhtml#a37b0dc19d17b9b82cd5dcb407d9ccaa7">m_fMinThresh</a> = 0.35F;</div>
<div class="line"><a id="l00333" name="l00333"></a><span class="lineno">  333</span> </div>
<div class="line"><a id="l00334" name="l00334"></a><span class="lineno">  334</span>};</div>
<div class="line"><a id="l00335" name="l00335"></a><span class="lineno">  335</span> </div>
<div class="line"><a id="l00336" name="l00336"></a><span class="lineno"><a class="line" href="a00406.xhtml">  336</a></span><span class="keyword">class </span><a class="code hl_class" href="a00406.xhtml">CPitchTimeAmdf</a> : <span class="keyword">public</span> <a class="code hl_class" href="a00538.xhtml">CPitchFromBlockIf</a></div>
<div class="line"><a id="l00337" name="l00337"></a><span class="lineno">  337</span>{</div>
<div class="line"><a id="l00338" name="l00338"></a><span class="lineno">  338</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00339" name="l00339"></a><span class="lineno"><a class="line" href="a00406.xhtml#ae4cd4f9cbbcd737053198c693b5f2225">  339</a></span>    <a class="code hl_function" href="a00406.xhtml#ae4cd4f9cbbcd737053198c693b5f2225">CPitchTimeAmdf</a>(<a class="code hl_enumeration" href="a00534.xhtml#ac55ab3f8cd0b036cbb891537272342df">CPitchIf::PitchExtractors_t</a> ePitchIdx, <span class="keywordtype">int</span> iDataLength, <span class="keywordtype">float</span> fSampleRate) : <a class="code hl_class" href="a00538.xhtml">CPitchFromBlockIf</a>(ePitchIdx, iDataLength, fSampleRate) {    };</div>
<div class="line"><a id="l00340" name="l00340"></a><span class="lineno">  340</span> </div>
<div class="line"><a id="l00341" name="l00341"></a><span class="lineno"><a class="line" href="a00406.xhtml#ab2ca3ac8c55ef1da4842988378b5b422">  341</a></span>    <span class="keyword">virtual</span> <a class="code hl_function" href="a00406.xhtml#ab2ca3ac8c55ef1da4842988378b5b422">~CPitchTimeAmdf</a>() {    };</div>
<div class="line"><a id="l00342" name="l00342"></a><span class="lineno">  342</span> </div>
<div class="line"><a id="l00343" name="l00343"></a><span class="lineno"><a class="line" href="a00406.xhtml#ae235ca4cf85c1da5f49460775ed5cb24">  343</a></span>    <span class="keywordtype">float</span> <a class="code hl_function" href="a00406.xhtml#ae235ca4cf85c1da5f49460775ed5cb24">compF0</a>(<span class="keyword">const</span> <span class="keywordtype">float</span>* pfInput)<span class="keyword"> override</span></div>
<div class="line"><a id="l00344" name="l00344"></a><span class="lineno">  344</span><span class="keyword">    </span>{</div>
<div class="line"><a id="l00345" name="l00345"></a><span class="lineno">  345</span>        assert(pfInput);</div>
<div class="line"><a id="l00346" name="l00346"></a><span class="lineno">  346</span> </div>
<div class="line"><a id="l00347" name="l00347"></a><span class="lineno">  347</span>        <span class="keywordtype">float</span> fResMin = std::numeric_limits&lt;float&gt;::max();</div>
<div class="line"><a id="l00348" name="l00348"></a><span class="lineno">  348</span>        <span class="keywordtype">int</span> iResEta = -1;</div>
<div class="line"><a id="l00349" name="l00349"></a><span class="lineno">  349</span>        <span class="keywordtype">int</span> iEtaMin = <span class="keyword">static_cast&lt;</span><span class="keywordtype">int</span><span class="keyword">&gt;</span>(<a class="code hl_variable" href="a00538.xhtml#ac4a3235dfd5c3919a7d1a290f92dfa80">m_fSampleRate</a> / <a class="code hl_variable" href="a00406.xhtml#ae4b9534123c4ac9f889bcb3a97264ccc">m_fMax</a>),</div>
<div class="line"><a id="l00350" name="l00350"></a><span class="lineno">  350</span>            iEtaMax = <span class="keyword">static_cast&lt;</span><span class="keywordtype">int</span><span class="keyword">&gt;</span>(<a class="code hl_variable" href="a00538.xhtml#ac4a3235dfd5c3919a7d1a290f92dfa80">m_fSampleRate</a> / <a class="code hl_variable" href="a00406.xhtml#a844a1ca424d5e50e340801888b21189d">m_fMin</a>)+1;</div>
<div class="line"><a id="l00351" name="l00351"></a><span class="lineno">  351</span> </div>
<div class="line"><a id="l00352" name="l00352"></a><span class="lineno">  352</span>        <span class="comment">// sanity checks</span></div>
<div class="line"><a id="l00353" name="l00353"></a><span class="lineno">  353</span>        <span class="keywordflow">if</span> (iEtaMax &gt; <a class="code hl_variable" href="a00538.xhtml#aab7cbf575cd81f196fdc75f226b61ab6">m_iDataLength</a>)</div>
<div class="line"><a id="l00354" name="l00354"></a><span class="lineno">  354</span>            iEtaMax = <a class="code hl_variable" href="a00538.xhtml#aab7cbf575cd81f196fdc75f226b61ab6">m_iDataLength</a>;</div>
<div class="line"><a id="l00355" name="l00355"></a><span class="lineno">  355</span> </div>
<div class="line"><a id="l00356" name="l00356"></a><span class="lineno">  356</span>        <span class="keywordflow">if</span> (<a class="code hl_function" href="a00514.xhtml#abdbcc3898121387f3694f74491b7331e">CVector::getSum</a>(pfInput, <a class="code hl_variable" href="a00538.xhtml#aab7cbf575cd81f196fdc75f226b61ab6">m_iDataLength</a>, <span class="keyword">true</span>) &lt;= 0)</div>
<div class="line"><a id="l00357" name="l00357"></a><span class="lineno">  357</span>            <span class="keywordflow">return</span> 0.F;</div>
<div class="line"><a id="l00358" name="l00358"></a><span class="lineno">  358</span> </div>
<div class="line"><a id="l00359" name="l00359"></a><span class="lineno">  359</span>        <span class="comment">// compute amdf</span></div>
<div class="line"><a id="l00360" name="l00360"></a><span class="lineno">  360</span>        <span class="keywordflow">for</span> (<span class="keyword">auto</span> iEta = iEtaMin; iEta &lt; iEtaMax; iEta++)</div>
<div class="line"><a id="l00361" name="l00361"></a><span class="lineno">  361</span>        {</div>
<div class="line"><a id="l00362" name="l00362"></a><span class="lineno">  362</span>            <span class="keywordtype">float</span> fAmdf = 0.F;</div>
<div class="line"><a id="l00363" name="l00363"></a><span class="lineno">  363</span>            <span class="keywordflow">for</span> (<span class="keyword">auto</span> i = 0; i &lt; <a class="code hl_variable" href="a00538.xhtml#aab7cbf575cd81f196fdc75f226b61ab6">m_iDataLength</a> - iEta; i++)</div>
<div class="line"><a id="l00364" name="l00364"></a><span class="lineno">  364</span>                fAmdf += std::abs(pfInput[i] - pfInput[i + iEta]);</div>
<div class="line"><a id="l00365" name="l00365"></a><span class="lineno">  365</span> </div>
<div class="line"><a id="l00366" name="l00366"></a><span class="lineno">  366</span>            <span class="keywordflow">if</span> (fAmdf &lt;= fResMin)</div>
<div class="line"><a id="l00367" name="l00367"></a><span class="lineno">  367</span>            {</div>
<div class="line"><a id="l00368" name="l00368"></a><span class="lineno">  368</span>                fResMin = fAmdf;</div>
<div class="line"><a id="l00369" name="l00369"></a><span class="lineno">  369</span>                iResEta = iEta;</div>
<div class="line"><a id="l00370" name="l00370"></a><span class="lineno">  370</span>            }</div>
<div class="line"><a id="l00371" name="l00371"></a><span class="lineno">  371</span>        }</div>
<div class="line"><a id="l00372" name="l00372"></a><span class="lineno">  372</span> </div>
<div class="line"><a id="l00373" name="l00373"></a><span class="lineno">  373</span>        <span class="comment">// sanity check</span></div>
<div class="line"><a id="l00374" name="l00374"></a><span class="lineno">  374</span>        <span class="keywordflow">if</span> (iResEta &lt; 0)</div>
<div class="line"><a id="l00375" name="l00375"></a><span class="lineno">  375</span>            <span class="keywordflow">return</span> 0.F;</div>
<div class="line"><a id="l00376" name="l00376"></a><span class="lineno">  376</span> </div>
<div class="line"><a id="l00377" name="l00377"></a><span class="lineno">  377</span>        <span class="keywordflow">return</span> <a class="code hl_variable" href="a00538.xhtml#ac4a3235dfd5c3919a7d1a290f92dfa80">m_fSampleRate</a> / iResEta;</div>
<div class="line"><a id="l00378" name="l00378"></a><span class="lineno">  378</span> </div>
<div class="line"><a id="l00379" name="l00379"></a><span class="lineno">  379</span>    };</div>
<div class="line"><a id="l00380" name="l00380"></a><span class="lineno">  380</span> </div>
<div class="line"><a id="l00381" name="l00381"></a><span class="lineno">  381</span><span class="keyword">private</span>:</div>
<div class="line"><a id="l00382" name="l00382"></a><span class="lineno"><a class="line" href="a00406.xhtml#a9a2f7fd656b24ebafb99fd0ad9fa808a">  382</a></span>    <a class="code hl_function" href="a00406.xhtml#a9a2f7fd656b24ebafb99fd0ad9fa808a">CPitchTimeAmdf</a>() {};</div>
<div class="line"><a id="l00383" name="l00383"></a><span class="lineno"><a class="line" href="a00406.xhtml#a4ccf378aa36d2d0be1b67aefde03819e">  383</a></span>    <a class="code hl_function" href="a00406.xhtml#a4ccf378aa36d2d0be1b67aefde03819e">CPitchTimeAmdf</a>(<span class="keyword">const</span> <a class="code hl_class" href="a00406.xhtml">CPitchTimeAmdf</a>&amp; that);     <span class="comment">//!&lt; disallow copy construction</span></div>
<div class="line"><a id="l00384" name="l00384"></a><span class="lineno"><a class="line" href="a00406.xhtml#a3188421ba44e4e11ee68ad0c080efdbc">  384</a></span>    <a class="code hl_class" href="a00406.xhtml">CPitchTimeAmdf</a>&amp; <a class="code hl_function" href="a00406.xhtml#a3188421ba44e4e11ee68ad0c080efdbc">operator=</a>(<span class="keyword">const</span> <a class="code hl_class" href="a00406.xhtml">CPitchTimeAmdf</a>&amp; c);</div>
<div class="line"><a id="l00385" name="l00385"></a><span class="lineno">  385</span> </div>
<div class="line"><a id="l00386" name="l00386"></a><span class="lineno"><a class="line" href="a00406.xhtml#ae4b9534123c4ac9f889bcb3a97264ccc">  386</a></span>    <span class="keywordtype">float</span> <a class="code hl_variable" href="a00406.xhtml#ae4b9534123c4ac9f889bcb3a97264ccc">m_fMax</a> = 2000.F;</div>
<div class="line"><a id="l00387" name="l00387"></a><span class="lineno"><a class="line" href="a00406.xhtml#a844a1ca424d5e50e340801888b21189d">  387</a></span>    <span class="keywordtype">float</span> <a class="code hl_variable" href="a00406.xhtml#a844a1ca424d5e50e340801888b21189d">m_fMin</a> = 50.F;</div>
<div class="line"><a id="l00388" name="l00388"></a><span class="lineno">  388</span> </div>
<div class="line"><a id="l00389" name="l00389"></a><span class="lineno">  389</span>};</div>
<div class="line"><a id="l00390" name="l00390"></a><span class="lineno">  390</span> </div>
<div class="line"><a id="l00391" name="l00391"></a><span class="lineno"><a class="line" href="a00410.xhtml">  391</a></span><span class="keyword">class </span><a class="code hl_class" href="a00410.xhtml">CPitchTimeZeroCrossings</a> : <span class="keyword">public</span> <a class="code hl_class" href="a00538.xhtml">CPitchFromBlockIf</a></div>
<div class="line"><a id="l00392" name="l00392"></a><span class="lineno">  392</span>{</div>
<div class="line"><a id="l00393" name="l00393"></a><span class="lineno">  393</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00394" name="l00394"></a><span class="lineno"><a class="line" href="a00410.xhtml#a502581cb3e2b43320a587928578c4a98">  394</a></span>    <a class="code hl_function" href="a00410.xhtml#a502581cb3e2b43320a587928578c4a98">CPitchTimeZeroCrossings</a>(<a class="code hl_enumeration" href="a00534.xhtml#ac55ab3f8cd0b036cbb891537272342df">CPitchIf::PitchExtractors_t</a> ePitchIdx, <span class="keywordtype">int</span> iDataLength, <span class="keywordtype">float</span> fSampleRate) : <a class="code hl_class" href="a00538.xhtml">CPitchFromBlockIf</a>(ePitchIdx, iDataLength, fSampleRate) {};</div>
<div class="line"><a id="l00395" name="l00395"></a><span class="lineno">  395</span> </div>
<div class="line"><a id="l00396" name="l00396"></a><span class="lineno"><a class="line" href="a00410.xhtml#ab290874fefa1e2a07355a59db12356d7">  396</a></span>    <span class="keyword">virtual</span> <a class="code hl_function" href="a00410.xhtml#ab290874fefa1e2a07355a59db12356d7">~CPitchTimeZeroCrossings</a>() {};</div>
<div class="line"><a id="l00397" name="l00397"></a><span class="lineno">  397</span> </div>
<div class="line"><a id="l00398" name="l00398"></a><span class="lineno"><a class="line" href="a00410.xhtml#ad801e225c1a5713cd40865c5e8a2211f">  398</a></span>    <span class="keywordtype">float</span> <a class="code hl_function" href="a00410.xhtml#ad801e225c1a5713cd40865c5e8a2211f">compF0</a>(<span class="keyword">const</span> <span class="keywordtype">float</span>* pfInput)<span class="keyword"> override</span></div>
<div class="line"><a id="l00399" name="l00399"></a><span class="lineno">  399</span><span class="keyword">    </span>{</div>
<div class="line"><a id="l00400" name="l00400"></a><span class="lineno">  400</span>        assert(pfInput);</div>
<div class="line"><a id="l00401" name="l00401"></a><span class="lineno">  401</span> </div>
<div class="line"><a id="l00402" name="l00402"></a><span class="lineno">  402</span>        <span class="keywordtype">int</span> iNumZeroCrossings = 0;</div>
<div class="line"><a id="l00403" name="l00403"></a><span class="lineno">  403</span>        <span class="keywordtype">int</span> iPrevIdx = -1;</div>
<div class="line"><a id="l00404" name="l00404"></a><span class="lineno">  404</span>        <span class="keywordtype">int</span> iDist2Prev = 0;</div>
<div class="line"><a id="l00405" name="l00405"></a><span class="lineno">  405</span> </div>
<div class="line"><a id="l00406" name="l00406"></a><span class="lineno">  406</span>        <span class="keywordflow">for</span> (<span class="keyword">auto</span> i = 0; i &lt; <a class="code hl_variable" href="a00538.xhtml#aab7cbf575cd81f196fdc75f226b61ab6">m_iDataLength</a>-1; i++)</div>
<div class="line"><a id="l00407" name="l00407"></a><span class="lineno">  407</span>        {</div>
<div class="line"><a id="l00408" name="l00408"></a><span class="lineno">  408</span>            <span class="keywordflow">if</span> (pfInput[i] * pfInput[i + 1] &lt; 0)</div>
<div class="line"><a id="l00409" name="l00409"></a><span class="lineno">  409</span>            {</div>
<div class="line"><a id="l00410" name="l00410"></a><span class="lineno">  410</span>                <span class="keywordflow">if</span> (iPrevIdx &gt; 0)</div>
<div class="line"><a id="l00411" name="l00411"></a><span class="lineno">  411</span>                {</div>
<div class="line"><a id="l00412" name="l00412"></a><span class="lineno">  412</span>                    iNumZeroCrossings++;</div>
<div class="line"><a id="l00413" name="l00413"></a><span class="lineno">  413</span>                    iDist2Prev += i - iPrevIdx;</div>
<div class="line"><a id="l00414" name="l00414"></a><span class="lineno">  414</span>                }</div>
<div class="line"><a id="l00415" name="l00415"></a><span class="lineno">  415</span>                iPrevIdx = i;</div>
<div class="line"><a id="l00416" name="l00416"></a><span class="lineno">  416</span>            }</div>
<div class="line"><a id="l00417" name="l00417"></a><span class="lineno">  417</span>        }</div>
<div class="line"><a id="l00418" name="l00418"></a><span class="lineno">  418</span>        <span class="keywordflow">if</span> (iNumZeroCrossings &lt;= 1)</div>
<div class="line"><a id="l00419" name="l00419"></a><span class="lineno">  419</span>            <span class="keywordflow">return</span> 0.F;</div>
<div class="line"><a id="l00420" name="l00420"></a><span class="lineno">  420</span>        </div>
<div class="line"><a id="l00421" name="l00421"></a><span class="lineno">  421</span>        <span class="keywordflow">return</span> <a class="code hl_variable" href="a00538.xhtml#ac4a3235dfd5c3919a7d1a290f92dfa80">m_fSampleRate</a> / (iDist2Prev * 2.F / iNumZeroCrossings);</div>
<div class="line"><a id="l00422" name="l00422"></a><span class="lineno">  422</span>    };</div>
<div class="line"><a id="l00423" name="l00423"></a><span class="lineno">  423</span> </div>
<div class="line"><a id="l00424" name="l00424"></a><span class="lineno">  424</span><span class="keyword">private</span>:</div>
<div class="line"><a id="l00425" name="l00425"></a><span class="lineno"><a class="line" href="a00410.xhtml#a5d8fbe4630053aef17da20e0c667a078">  425</a></span>    <a class="code hl_function" href="a00410.xhtml#a5d8fbe4630053aef17da20e0c667a078">CPitchTimeZeroCrossings</a>() {};</div>
<div class="line"><a id="l00426" name="l00426"></a><span class="lineno"><a class="line" href="a00410.xhtml#aaf672c4bff304544f1c5fc4d98208c8c">  426</a></span>    <a class="code hl_function" href="a00410.xhtml#aaf672c4bff304544f1c5fc4d98208c8c">CPitchTimeZeroCrossings</a>(<span class="keyword">const</span> <a class="code hl_class" href="a00410.xhtml">CPitchTimeZeroCrossings</a>&amp; that);     <span class="comment">//!&lt; disallow copy construction</span></div>
<div class="line"><a id="l00427" name="l00427"></a><span class="lineno"><a class="line" href="a00410.xhtml#ab5ca729bf2d6d8fcd0babe9f2910465d">  427</a></span>    <a class="code hl_class" href="a00410.xhtml">CPitchTimeZeroCrossings</a>&amp; <a class="code hl_function" href="a00410.xhtml#ab5ca729bf2d6d8fcd0babe9f2910465d">operator=</a>(<span class="keyword">const</span> <a class="code hl_class" href="a00410.xhtml">CPitchTimeZeroCrossings</a>&amp; c);</div>
<div class="line"><a id="l00428" name="l00428"></a><span class="lineno">  428</span>};</div>
<div class="line"><a id="l00429" name="l00429"></a><span class="lineno">  429</span><span class="comment"></span> </div>
<div class="line"><a id="l00430" name="l00430"></a><span class="lineno">  430</span><span class="comment">///////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a id="l00431" name="l00431"></a><span class="lineno">  431</span><span class="comment"></span><span class="comment">// normal member functions</span></div>
<div class="line"><a id="l00432" name="l00432"></a><span class="lineno"><a class="line" href="a00538.xhtml#a1718a14a292a2a34ae92e8ce838456a3">  432</a></span><a class="code hl_enumeration" href="a00125.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> <a class="code hl_function" href="a00538.xhtml#a1718a14a292a2a34ae92e8ce838456a3">CPitchFromBlockIf::create</a>(<a class="code hl_class" href="a00538.xhtml">CPitchFromBlockIf</a>*&amp; pCInstance, <a class="code hl_enumeration" href="a00534.xhtml#ac55ab3f8cd0b036cbb891537272342df">CPitchIf::PitchExtractors_t</a> ePitchIdx, <span class="keywordtype">int</span> iDataLength, <span class="keywordtype">float</span> fSampleRate)</div>
<div class="line"><a id="l00433" name="l00433"></a><span class="lineno">  433</span>{</div>
<div class="line"><a id="l00434" name="l00434"></a><span class="lineno">  434</span>    <span class="keywordflow">if</span> (iDataLength &lt;= 0 || fSampleRate &lt;= 0)</div>
<div class="line"><a id="l00435" name="l00435"></a><span class="lineno">  435</span>        <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00125.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248">Error_t::kFunctionInvalidArgsError</a>;</div>
<div class="line"><a id="l00436" name="l00436"></a><span class="lineno">  436</span> </div>
<div class="line"><a id="l00437" name="l00437"></a><span class="lineno">  437</span> </div>
<div class="line"><a id="l00438" name="l00438"></a><span class="lineno">  438</span>    <span class="keywordflow">switch</span> (ePitchIdx)</div>
<div class="line"><a id="l00439" name="l00439"></a><span class="lineno">  439</span>    {</div>
<div class="line"><a id="l00440" name="l00440"></a><span class="lineno">  440</span>    <span class="keywordflow">default</span>:</div>
<div class="line"><a id="l00441" name="l00441"></a><span class="lineno">  441</span>    <span class="keywordflow">case</span> <a class="code hl_enumvalue" href="a00534.xhtml#ac55ab3f8cd0b036cbb891537272342dfa17aba05deef4f0d8150d8d7f52fbff19">CPitchIf::kPitchTimeAcf</a>:</div>
<div class="line"><a id="l00442" name="l00442"></a><span class="lineno">  442</span>        pCInstance = <span class="keyword">new</span> <a class="code hl_class" href="a00398.xhtml">CPitchTimeAcf</a>(ePitchIdx, iDataLength, fSampleRate);</div>
<div class="line"><a id="l00443" name="l00443"></a><span class="lineno">  443</span>        <span class="keywordflow">break</span>;</div>
<div class="line"><a id="l00444" name="l00444"></a><span class="lineno">  444</span> </div>
<div class="line"><a id="l00445" name="l00445"></a><span class="lineno">  445</span>    <span class="keywordflow">case</span> <a class="code hl_enumvalue" href="a00534.xhtml#ac55ab3f8cd0b036cbb891537272342dfacabf4a60a878c9bae6e535316b4dba07">CPitchIf::kPitchTimeZeroCrossings</a>:</div>
<div class="line"><a id="l00446" name="l00446"></a><span class="lineno">  446</span>        pCInstance = <span class="keyword">new</span> <a class="code hl_class" href="a00410.xhtml">CPitchTimeZeroCrossings</a>(ePitchIdx, iDataLength, fSampleRate);</div>
<div class="line"><a id="l00447" name="l00447"></a><span class="lineno">  447</span>        <span class="keywordflow">break</span>;</div>
<div class="line"><a id="l00448" name="l00448"></a><span class="lineno">  448</span> </div>
<div class="line"><a id="l00449" name="l00449"></a><span class="lineno">  449</span>    <span class="comment">//case CPitchIf::kPitchTimeAuditory:</span></div>
<div class="line"><a id="l00450" name="l00450"></a><span class="lineno">  450</span>    <span class="comment">//    pCInstance = new CPitchTimeAuditory(ePitchIdx, iDataLength, fSampleRate);</span></div>
<div class="line"><a id="l00451" name="l00451"></a><span class="lineno">  451</span>    <span class="comment">//    break;</span></div>
<div class="line"><a id="l00452" name="l00452"></a><span class="lineno">  452</span> </div>
<div class="line"><a id="l00453" name="l00453"></a><span class="lineno">  453</span>    <span class="keywordflow">case</span> <a class="code hl_enumvalue" href="a00534.xhtml#ac55ab3f8cd0b036cbb891537272342dfaa90a88d1305dfaae1f420b276ae9176b">CPitchIf::kPitchTimeAmdf</a>:</div>
<div class="line"><a id="l00454" name="l00454"></a><span class="lineno">  454</span>        pCInstance = <span class="keyword">new</span> <a class="code hl_class" href="a00406.xhtml">CPitchTimeAmdf</a>(ePitchIdx, iDataLength, fSampleRate);</div>
<div class="line"><a id="l00455" name="l00455"></a><span class="lineno">  455</span>        <span class="keywordflow">break</span>;</div>
<div class="line"><a id="l00456" name="l00456"></a><span class="lineno">  456</span> </div>
<div class="line"><a id="l00457" name="l00457"></a><span class="lineno">  457</span> </div>
<div class="line"><a id="l00458" name="l00458"></a><span class="lineno">  458</span>    <span class="keywordflow">case</span> <a class="code hl_enumvalue" href="a00534.xhtml#ac55ab3f8cd0b036cbb891537272342dfa53fd5da7cd7892a1a7d5094f04cb6f6f">CPitchIf::kPitchSpectralHps</a>:</div>
<div class="line"><a id="l00459" name="l00459"></a><span class="lineno">  459</span>        pCInstance = <span class="keyword">new</span> <a class="code hl_class" href="a00394.xhtml">CPitchSpectralHps</a>(ePitchIdx, iDataLength, fSampleRate);</div>
<div class="line"><a id="l00460" name="l00460"></a><span class="lineno">  460</span>        <span class="keywordflow">break</span>;</div>
<div class="line"><a id="l00461" name="l00461"></a><span class="lineno">  461</span> </div>
<div class="line"><a id="l00462" name="l00462"></a><span class="lineno">  462</span>    <span class="keywordflow">case</span> <a class="code hl_enumvalue" href="a00534.xhtml#ac55ab3f8cd0b036cbb891537272342dfac81ee84b7eff9cfd3e4a7ff0593710ec">CPitchIf::kPitchSpectralAcf</a>:</div>
<div class="line"><a id="l00463" name="l00463"></a><span class="lineno">  463</span>        pCInstance = <span class="keyword">new</span> <a class="code hl_class" href="a00390.xhtml">CPitchSpectralAcf</a>(ePitchIdx, iDataLength, fSampleRate);</div>
<div class="line"><a id="l00464" name="l00464"></a><span class="lineno">  464</span>        <span class="keywordflow">break</span>;</div>
<div class="line"><a id="l00465" name="l00465"></a><span class="lineno">  465</span>    }</div>
<div class="line"><a id="l00466" name="l00466"></a><span class="lineno">  466</span> </div>
<div class="line"><a id="l00467" name="l00467"></a><span class="lineno">  467</span>    <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00125.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><a id="l00468" name="l00468"></a><span class="lineno">  468</span>}</div>
<div class="line"><a id="l00469" name="l00469"></a><span class="lineno">  469</span> </div>
<div class="line"><a id="l00470" name="l00470"></a><span class="lineno"><a class="line" href="a00538.xhtml#adadb010b152c65dc26b08f56fa700e77">  470</a></span><a class="code hl_enumeration" href="a00125.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a> <a class="code hl_function" href="a00538.xhtml#adadb010b152c65dc26b08f56fa700e77">CPitchFromBlockIf::destroy</a>(<a class="code hl_class" href="a00538.xhtml">CPitchFromBlockIf</a>*&amp; pCInstance)</div>
<div class="line"><a id="l00471" name="l00471"></a><span class="lineno">  471</span>{</div>
<div class="line"><a id="l00472" name="l00472"></a><span class="lineno">  472</span>    <span class="keyword">delete</span> pCInstance;</div>
<div class="line"><a id="l00473" name="l00473"></a><span class="lineno">  473</span> </div>
<div class="line"><a id="l00474" name="l00474"></a><span class="lineno">  474</span>    pCInstance = 0;</div>
<div class="line"><a id="l00475" name="l00475"></a><span class="lineno">  475</span> </div>
<div class="line"><a id="l00476" name="l00476"></a><span class="lineno">  476</span>    <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="a00125.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a>;</div>
<div class="line"><a id="l00477" name="l00477"></a><span class="lineno">  477</span>}</div>
<div class="line"><a id="l00478" name="l00478"></a><span class="lineno">  478</span> </div>
<div class="line"><a id="l00479" name="l00479"></a><span class="lineno"><a class="line" href="a00538.xhtml#a7bf104764846e7531e2011312311c6ea">  479</a></span><a class="code hl_function" href="a00538.xhtml#a8d454d951956c464b883888196a0fe23">CPitchFromBlockIf::CPitchFromBlockIf</a>(<a class="code hl_enumeration" href="a00534.xhtml#ac55ab3f8cd0b036cbb891537272342df">CPitchIf::PitchExtractors_t</a> ePitchIdx, <span class="keywordtype">int</span> iDataLength, <span class="keywordtype">float</span> fSampleRate) : m_ePitchIdx(ePitchIdx), m_iDataLength(iDataLength), m_fSampleRate(fSampleRate) { assert(iDataLength &gt; 0); }</div>
<div class="ttc" id="aa00125_xhtml_a4e8c0d09726859e3d3369c0da5a1aa7f"><div class="ttname"><a href="a00125.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7f">Error_t</a></div><div class="ttdeci">Error_t</div><div class="ttdef"><b>Definition:</b> <a href="a00125_source.xhtml#l00004">ErrorDef.h:5</a></div></div>
<div class="ttc" id="aa00125_xhtml_a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248"><div class="ttname"><a href="a00125.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fa819a1ca163e9ca86f941b0b072a9a248">Error_t::kFunctionInvalidArgsError</a></div><div class="ttdeci">@ kFunctionInvalidArgsError</div></div>
<div class="ttc" id="aa00125_xhtml_a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b"><div class="ttname"><a href="a00125.xhtml#a4e8c0d09726859e3d3369c0da5a1aa7fafcd1af9ec66cb99f2d106d7fdc865c8b">Error_t::kNoError</a></div><div class="ttdeci">@ kNoError</div></div>
<div class="ttc" id="aa00149_xhtml"><div class="ttname"><a href="a00149.xhtml">ToolGammatone.h</a></div></div>
<div class="ttc" id="aa00158_xhtml"><div class="ttname"><a href="a00158.xhtml">Filter.h</a></div></div>
<div class="ttc" id="aa00161_xhtml"><div class="ttname"><a href="a00161.xhtml">Vector.h</a></div></div>
<div class="ttc" id="aa00167_xhtml"><div class="ttname"><a href="a00167.xhtml">Util.h</a></div></div>
<div class="ttc" id="aa00179_xhtml"><div class="ttname"><a href="a00179.xhtml">ToolConversion.h</a></div></div>
<div class="ttc" id="aa00212_xhtml"><div class="ttname"><a href="a00212.xhtml">ToolCcf.h</a></div></div>
<div class="ttc" id="aa00215_xhtml"><div class="ttname"><a href="a00215.xhtml">PitchFromBlock.h</a></div></div>
<div class="ttc" id="aa00390_xhtml"><div class="ttname"><a href="a00390.xhtml">CPitchSpectralAcf</a></div><div class="ttdef"><b>Definition:</b> <a href="a00107_source.xhtml#l00015">PitchFromBlock.cpp:16</a></div></div>
<div class="ttc" id="aa00390_xhtml_a250792b516c76c54251534a33c17bea8"><div class="ttname"><a href="a00390.xhtml#a250792b516c76c54251534a33c17bea8">CPitchSpectralAcf::compF0</a></div><div class="ttdeci">float compF0(const float *pfInput) override</div><div class="ttdef"><b>Definition:</b> <a href="a00107_source.xhtml#l00036">PitchFromBlock.cpp:36</a></div></div>
<div class="ttc" id="aa00390_xhtml_a2555fec6c4ecdf05f60ac4182c1d6ed4"><div class="ttname"><a href="a00390.xhtml#a2555fec6c4ecdf05f60ac4182c1d6ed4">CPitchSpectralAcf::m_pfProcBuff</a></div><div class="ttdeci">float * m_pfProcBuff</div><div class="ttdef"><b>Definition:</b> <a href="a00107_source.xhtml#l00083">PitchFromBlock.cpp:83</a></div></div>
<div class="ttc" id="aa00390_xhtml_a451d66b67603a9d130f162720e361626"><div class="ttname"><a href="a00390.xhtml#a451d66b67603a9d130f162720e361626">CPitchSpectralAcf::~CPitchSpectralAcf</a></div><div class="ttdeci">virtual ~CPitchSpectralAcf()</div><div class="ttdef"><b>Definition:</b> <a href="a00107_source.xhtml#l00027">PitchFromBlock.cpp:27</a></div></div>
<div class="ttc" id="aa00390_xhtml_a4881bd6523fb58aa6316efa2879fce16"><div class="ttname"><a href="a00390.xhtml#a4881bd6523fb58aa6316efa2879fce16">CPitchSpectralAcf::m_pfAcf</a></div><div class="ttdeci">float * m_pfAcf</div><div class="ttdef"><b>Definition:</b> <a href="a00107_source.xhtml#l00082">PitchFromBlock.cpp:82</a></div></div>
<div class="ttc" id="aa00390_xhtml_a7788ddebf971ad4e2da70e14eaf851dd"><div class="ttname"><a href="a00390.xhtml#a7788ddebf971ad4e2da70e14eaf851dd">CPitchSpectralAcf::operator=</a></div><div class="ttdeci">CPitchSpectralAcf &amp; operator=(const CPitchSpectralAcf &amp;c)</div></div>
<div class="ttc" id="aa00390_xhtml_a8715eef70802d78a21f7e0deb7b98aeb"><div class="ttname"><a href="a00390.xhtml#a8715eef70802d78a21f7e0deb7b98aeb">CPitchSpectralAcf::m_pCCcf</a></div><div class="ttdeci">CCcf * m_pCCcf</div><div class="ttdef"><b>Definition:</b> <a href="a00107_source.xhtml#l00081">PitchFromBlock.cpp:81</a></div></div>
<div class="ttc" id="aa00390_xhtml_aa287258ccabe0c81675836fa5e5ac94e"><div class="ttname"><a href="a00390.xhtml#aa287258ccabe0c81675836fa5e5ac94e">CPitchSpectralAcf::CPitchSpectralAcf</a></div><div class="ttdeci">CPitchSpectralAcf(const CPitchSpectralAcf &amp;that)</div><div class="ttdoc">disallow copy construction</div></div>
<div class="ttc" id="aa00390_xhtml_ab362e6e9ae3f082b3c57e51eb4045bd4"><div class="ttname"><a href="a00390.xhtml#ab362e6e9ae3f082b3c57e51eb4045bd4">CPitchSpectralAcf::CPitchSpectralAcf</a></div><div class="ttdeci">CPitchSpectralAcf()</div><div class="ttdef"><b>Definition:</b> <a href="a00107_source.xhtml#l00077">PitchFromBlock.cpp:77</a></div></div>
<div class="ttc" id="aa00390_xhtml_ace8ab223669b7a81b19f12716420e140"><div class="ttname"><a href="a00390.xhtml#ace8ab223669b7a81b19f12716420e140">CPitchSpectralAcf::m_fMin</a></div><div class="ttdeci">float m_fMin</div><div class="ttdef"><b>Definition:</b> <a href="a00107_source.xhtml#l00085">PitchFromBlock.cpp:85</a></div></div>
<div class="ttc" id="aa00390_xhtml_ad7f64995a5d0ca75139e400172a9ab42"><div class="ttname"><a href="a00390.xhtml#ad7f64995a5d0ca75139e400172a9ab42">CPitchSpectralAcf::CPitchSpectralAcf</a></div><div class="ttdeci">CPitchSpectralAcf(CPitchIf::PitchExtractors_t ePitchIdx, int iDataLength, float fSampleRate)</div><div class="ttdef"><b>Definition:</b> <a href="a00107_source.xhtml#l00018">PitchFromBlock.cpp:18</a></div></div>
<div class="ttc" id="aa00394_xhtml"><div class="ttname"><a href="a00394.xhtml">CPitchSpectralHps</a></div><div class="ttdef"><b>Definition:</b> <a href="a00107_source.xhtml#l00088">PitchFromBlock.cpp:89</a></div></div>
<div class="ttc" id="aa00394_xhtml_a412ed764fc1354045d2e8e9fa5cf20fc"><div class="ttname"><a href="a00394.xhtml#a412ed764fc1354045d2e8e9fa5cf20fc">CPitchSpectralHps::~CPitchSpectralHps</a></div><div class="ttdeci">virtual ~CPitchSpectralHps()</div><div class="ttdef"><b>Definition:</b> <a href="a00107_source.xhtml#l00096">PitchFromBlock.cpp:96</a></div></div>
<div class="ttc" id="aa00394_xhtml_a42e2207ad61b32a09bee9048f1f94c3f"><div class="ttname"><a href="a00394.xhtml#a42e2207ad61b32a09bee9048f1f94c3f">CPitchSpectralHps::CPitchSpectralHps</a></div><div class="ttdeci">CPitchSpectralHps(const CPitchSpectralHps &amp;that)</div><div class="ttdoc">disallow copy construction</div></div>
<div class="ttc" id="aa00394_xhtml_a54c4f1bf58f0ccf11c8a18cb954dd9bd"><div class="ttname"><a href="a00394.xhtml#a54c4f1bf58f0ccf11c8a18cb954dd9bd">CPitchSpectralHps::operator=</a></div><div class="ttdeci">CPitchSpectralHps &amp; operator=(const CPitchSpectralHps &amp;c)</div></div>
<div class="ttc" id="aa00394_xhtml_a5c1be3a6a8f0517c57384938dcad343d"><div class="ttname"><a href="a00394.xhtml#a5c1be3a6a8f0517c57384938dcad343d">CPitchSpectralHps::CPitchSpectralHps</a></div><div class="ttdeci">CPitchSpectralHps(CPitchIf::PitchExtractors_t ePitchIdx, int iDataLength, float fSampleRate)</div><div class="ttdef"><b>Definition:</b> <a href="a00107_source.xhtml#l00091">PitchFromBlock.cpp:91</a></div></div>
<div class="ttc" id="aa00394_xhtml_a7e421578f4523968067923219d184e00"><div class="ttname"><a href="a00394.xhtml#a7e421578f4523968067923219d184e00">CPitchSpectralHps::m_fMin</a></div><div class="ttdeci">float m_fMin</div><div class="ttdef"><b>Definition:</b> <a href="a00107_source.xhtml#l00135">PitchFromBlock.cpp:135</a></div></div>
<div class="ttc" id="aa00394_xhtml_a85f18b226137665873997830d52130c0"><div class="ttname"><a href="a00394.xhtml#a85f18b226137665873997830d52130c0">CPitchSpectralHps::CPitchSpectralHps</a></div><div class="ttdeci">CPitchSpectralHps()</div><div class="ttdef"><b>Definition:</b> <a href="a00107_source.xhtml#l00129">PitchFromBlock.cpp:129</a></div></div>
<div class="ttc" id="aa00394_xhtml_a8d2bca3d3844d6b1443222762d7f246a"><div class="ttname"><a href="a00394.xhtml#a8d2bca3d3844d6b1443222762d7f246a">CPitchSpectralHps::m_iOrder</a></div><div class="ttdeci">int m_iOrder</div><div class="ttdef"><b>Definition:</b> <a href="a00107_source.xhtml#l00134">PitchFromBlock.cpp:134</a></div></div>
<div class="ttc" id="aa00394_xhtml_ab8df6425e14d7a802a119854fe61ca56"><div class="ttname"><a href="a00394.xhtml#ab8df6425e14d7a802a119854fe61ca56">CPitchSpectralHps::m_pfProcBuff</a></div><div class="ttdeci">float * m_pfProcBuff</div><div class="ttdef"><b>Definition:</b> <a href="a00107_source.xhtml#l00133">PitchFromBlock.cpp:133</a></div></div>
<div class="ttc" id="aa00394_xhtml_ad6b1dafb86b44b1d31bfbe22e930d146"><div class="ttname"><a href="a00394.xhtml#ad6b1dafb86b44b1d31bfbe22e930d146">CPitchSpectralHps::compF0</a></div><div class="ttdeci">float compF0(const float *pfInput) override</div><div class="ttdef"><b>Definition:</b> <a href="a00107_source.xhtml#l00101">PitchFromBlock.cpp:101</a></div></div>
<div class="ttc" id="aa00398_xhtml"><div class="ttname"><a href="a00398.xhtml">CPitchTimeAcf</a></div><div class="ttdef"><b>Definition:</b> <a href="a00107_source.xhtml#l00138">PitchFromBlock.cpp:139</a></div></div>
<div class="ttc" id="aa00398_xhtml_a0c7cdf1cb79c1e8395db89ba56d79cbc"><div class="ttname"><a href="a00398.xhtml#a0c7cdf1cb79c1e8395db89ba56d79cbc">CPitchTimeAcf::~CPitchTimeAcf</a></div><div class="ttdeci">virtual ~CPitchTimeAcf()</div><div class="ttdef"><b>Definition:</b> <a href="a00107_source.xhtml#l00149">PitchFromBlock.cpp:149</a></div></div>
<div class="ttc" id="aa00398_xhtml_a20081d499cd0d70d8e61086f33b33365"><div class="ttname"><a href="a00398.xhtml#a20081d499cd0d70d8e61086f33b33365">CPitchTimeAcf::m_pCCcf</a></div><div class="ttdeci">CCcf * m_pCCcf</div><div class="ttdef"><b>Definition:</b> <a href="a00107_source.xhtml#l00204">PitchFromBlock.cpp:204</a></div></div>
<div class="ttc" id="aa00398_xhtml_a55d9b28275bf425da7edcd5a56822247"><div class="ttname"><a href="a00398.xhtml#a55d9b28275bf425da7edcd5a56822247">CPitchTimeAcf::m_pfAcf</a></div><div class="ttdeci">float * m_pfAcf</div><div class="ttdef"><b>Definition:</b> <a href="a00107_source.xhtml#l00205">PitchFromBlock.cpp:205</a></div></div>
<div class="ttc" id="aa00398_xhtml_a58e2df14aeed930a1e41749d40e65c35"><div class="ttname"><a href="a00398.xhtml#a58e2df14aeed930a1e41749d40e65c35">CPitchTimeAcf::CPitchTimeAcf</a></div><div class="ttdeci">CPitchTimeAcf(const CPitchTimeAcf &amp;that)</div><div class="ttdoc">disallow copy construction</div></div>
<div class="ttc" id="aa00398_xhtml_a667c865dba3fda2b4dfcb27d467029d8"><div class="ttname"><a href="a00398.xhtml#a667c865dba3fda2b4dfcb27d467029d8">CPitchTimeAcf::m_fMinThresh</a></div><div class="ttdeci">const float m_fMinThresh</div><div class="ttdef"><b>Definition:</b> <a href="a00107_source.xhtml#l00208">PitchFromBlock.cpp:208</a></div></div>
<div class="ttc" id="aa00398_xhtml_a7540d2f69db7b7da74ae54c8eacf458e"><div class="ttname"><a href="a00398.xhtml#a7540d2f69db7b7da74ae54c8eacf458e">CPitchTimeAcf::m_fMax</a></div><div class="ttdeci">float m_fMax</div><div class="ttdef"><b>Definition:</b> <a href="a00107_source.xhtml#l00207">PitchFromBlock.cpp:207</a></div></div>
<div class="ttc" id="aa00398_xhtml_a7b6c2a935434281c2e17352a3487c912"><div class="ttname"><a href="a00398.xhtml#a7b6c2a935434281c2e17352a3487c912">CPitchTimeAcf::compF0</a></div><div class="ttdeci">float compF0(const float *pfInput) override</div><div class="ttdef"><b>Definition:</b> <a href="a00107_source.xhtml#l00157">PitchFromBlock.cpp:157</a></div></div>
<div class="ttc" id="aa00398_xhtml_a9bc50b93b2afdc1782d8534fa7ed6c80"><div class="ttname"><a href="a00398.xhtml#a9bc50b93b2afdc1782d8534fa7ed6c80">CPitchTimeAcf::operator=</a></div><div class="ttdeci">CPitchTimeAcf &amp; operator=(const CPitchTimeAcf &amp;c)</div></div>
<div class="ttc" id="aa00398_xhtml_acd4920798f76cfa56accd9ba28dad6ae"><div class="ttname"><a href="a00398.xhtml#acd4920798f76cfa56accd9ba28dad6ae">CPitchTimeAcf::CPitchTimeAcf</a></div><div class="ttdeci">CPitchTimeAcf(CPitchIf::PitchExtractors_t ePitchIdx, int iDataLength, float fSampleRate)</div><div class="ttdef"><b>Definition:</b> <a href="a00107_source.xhtml#l00141">PitchFromBlock.cpp:141</a></div></div>
<div class="ttc" id="aa00398_xhtml_af1810f62663b7dbd228a09198f3cf13a"><div class="ttname"><a href="a00398.xhtml#af1810f62663b7dbd228a09198f3cf13a">CPitchTimeAcf::CPitchTimeAcf</a></div><div class="ttdeci">CPitchTimeAcf()</div><div class="ttdef"><b>Definition:</b> <a href="a00107_source.xhtml#l00200">PitchFromBlock.cpp:200</a></div></div>
<div class="ttc" id="aa00402_xhtml"><div class="ttname"><a href="a00402.xhtml">CPitchTimeAuditory</a></div><div class="ttdef"><b>Definition:</b> <a href="a00107_source.xhtml#l00212">PitchFromBlock.cpp:213</a></div></div>
<div class="ttc" id="aa00402_xhtml_a0d98dec998ad65b07cd207a11f05b8ca"><div class="ttname"><a href="a00402.xhtml#a0d98dec998ad65b07cd207a11f05b8ca">CPitchTimeAuditory::m_ppfProcBuff</a></div><div class="ttdeci">float ** m_ppfProcBuff</div><div class="ttdef"><b>Definition:</b> <a href="a00107_source.xhtml#l00323">PitchFromBlock.cpp:323</a></div></div>
<div class="ttc" id="aa00402_xhtml_a11f411e863bb51d4b6709f2da2265859"><div class="ttname"><a href="a00402.xhtml#a11f411e863bb51d4b6709f2da2265859">CPitchTimeAuditory::CPitchTimeAuditory</a></div><div class="ttdeci">CPitchTimeAuditory(const CPitchTimeAuditory &amp;that)</div><div class="ttdoc">disallow copy construction</div></div>
<div class="ttc" id="aa00402_xhtml_a182c4d5365c2fdcd82f970f0eb46db83"><div class="ttname"><a href="a00402.xhtml#a182c4d5365c2fdcd82f970f0eb46db83">CPitchTimeAuditory::m_pfSumAcf</a></div><div class="ttdeci">float * m_pfSumAcf</div><div class="ttdef"><b>Definition:</b> <a href="a00107_source.xhtml#l00322">PitchFromBlock.cpp:322</a></div></div>
<div class="ttc" id="aa00402_xhtml_a20fa417c0ec8aea6bc48f76da812a5e5"><div class="ttname"><a href="a00402.xhtml#a20fa417c0ec8aea6bc48f76da812a5e5">CPitchTimeAuditory::m_iNumBands</a></div><div class="ttdeci">static const int m_iNumBands</div><div class="ttdef"><b>Definition:</b> <a href="a00107_source.xhtml#l00325">PitchFromBlock.cpp:325</a></div></div>
<div class="ttc" id="aa00402_xhtml_a37b0dc19d17b9b82cd5dcb407d9ccaa7"><div class="ttname"><a href="a00402.xhtml#a37b0dc19d17b9b82cd5dcb407d9ccaa7">CPitchTimeAuditory::m_fMinThresh</a></div><div class="ttdeci">const float m_fMinThresh</div><div class="ttdef"><b>Definition:</b> <a href="a00107_source.xhtml#l00332">PitchFromBlock.cpp:332</a></div></div>
<div class="ttc" id="aa00402_xhtml_a46b81a401b88ec5ba6f91ae24019fd71"><div class="ttname"><a href="a00402.xhtml#a46b81a401b88ec5ba6f91ae24019fd71">CPitchTimeAuditory::m_pCFilterBank</a></div><div class="ttdeci">CGammaToneFbIf * m_pCFilterBank</div><div class="ttdef"><b>Definition:</b> <a href="a00107_source.xhtml#l00327">PitchFromBlock.cpp:327</a></div></div>
<div class="ttc" id="aa00402_xhtml_a59e9a76613f0d0e0bd2a5a2a0816527d"><div class="ttname"><a href="a00402.xhtml#a59e9a76613f0d0e0bd2a5a2a0816527d">CPitchTimeAuditory::m_fMax</a></div><div class="ttdeci">float m_fMax</div><div class="ttdef"><b>Definition:</b> <a href="a00107_source.xhtml#l00330">PitchFromBlock.cpp:330</a></div></div>
<div class="ttc" id="aa00402_xhtml_a7fa2c23a2108dc313f319ec803a6181f"><div class="ttname"><a href="a00402.xhtml#a7fa2c23a2108dc313f319ec803a6181f">CPitchTimeAuditory::compF0</a></div><div class="ttdeci">float compF0(const float *pfInput) override</div><div class="ttdef"><b>Definition:</b> <a href="a00107_source.xhtml#l00253">PitchFromBlock.cpp:253</a></div></div>
<div class="ttc" id="aa00402_xhtml_a8be8b6e01ad89bdeaf24b45dbd599227"><div class="ttname"><a href="a00402.xhtml#a8be8b6e01ad89bdeaf24b45dbd599227">CPitchTimeAuditory::CPitchTimeAuditory</a></div><div class="ttdeci">CPitchTimeAuditory()</div><div class="ttdef"><b>Definition:</b> <a href="a00107_source.xhtml#l00280">PitchFromBlock.cpp:280</a></div></div>
<div class="ttc" id="aa00402_xhtml_aa2128e53e03b5091d911855b8f10f6fa"><div class="ttname"><a href="a00402.xhtml#aa2128e53e03b5091d911855b8f10f6fa">CPitchTimeAuditory::m_pCCcf</a></div><div class="ttdeci">CCcf * m_pCCcf</div><div class="ttdef"><b>Definition:</b> <a href="a00107_source.xhtml#l00320">PitchFromBlock.cpp:320</a></div></div>
<div class="ttc" id="aa00402_xhtml_aafe950d4f08df5a8d47f44cb827ce4a0"><div class="ttname"><a href="a00402.xhtml#aafe950d4f08df5a8d47f44cb827ce4a0">CPitchTimeAuditory::~CPitchTimeAuditory</a></div><div class="ttdeci">virtual ~CPitchTimeAuditory()</div><div class="ttdef"><b>Definition:</b> <a href="a00107_source.xhtml#l00238">PitchFromBlock.cpp:238</a></div></div>
<div class="ttc" id="aa00402_xhtml_ac78dd42c996a8e981d75811810eb264e"><div class="ttname"><a href="a00402.xhtml#ac78dd42c996a8e981d75811810eb264e">CPitchTimeAuditory::operator=</a></div><div class="ttdeci">CPitchTimeAuditory &amp; operator=(const CPitchTimeAuditory &amp;c)</div></div>
<div class="ttc" id="aa00402_xhtml_ad3ef7f984b93956e27cea585759fbc2e"><div class="ttname"><a href="a00402.xhtml#ad3ef7f984b93956e27cea585759fbc2e">CPitchTimeAuditory::getAcfMax_</a></div><div class="ttdeci">int getAcfMax_(const float *pfInput)</div><div class="ttdef"><b>Definition:</b> <a href="a00107_source.xhtml#l00284">PitchFromBlock.cpp:284</a></div></div>
<div class="ttc" id="aa00402_xhtml_adf580839aeb79817e5d72508ad7fabd7"><div class="ttname"><a href="a00402.xhtml#adf580839aeb79817e5d72508ad7fabd7">CPitchTimeAuditory::m_pfAcf</a></div><div class="ttdeci">float * m_pfAcf</div><div class="ttdef"><b>Definition:</b> <a href="a00107_source.xhtml#l00321">PitchFromBlock.cpp:321</a></div></div>
<div class="ttc" id="aa00402_xhtml_af519c85d2066eada257f57fe90b26f7a"><div class="ttname"><a href="a00402.xhtml#af519c85d2066eada257f57fe90b26f7a">CPitchTimeAuditory::m_apCFilter</a></div><div class="ttdeci">CFilter&lt; float &gt; * m_apCFilter[m_iNumBands]</div><div class="ttdef"><b>Definition:</b> <a href="a00107_source.xhtml#l00326">PitchFromBlock.cpp:326</a></div></div>
<div class="ttc" id="aa00402_xhtml_af5f08be46100a7ecbc5450f52a96c77e"><div class="ttname"><a href="a00402.xhtml#af5f08be46100a7ecbc5450f52a96c77e">CPitchTimeAuditory::CPitchTimeAuditory</a></div><div class="ttdeci">CPitchTimeAuditory(CPitchIf::PitchExtractors_t ePitchIdx, int iDataLength, float fSampleRate)</div><div class="ttdef"><b>Definition:</b> <a href="a00107_source.xhtml#l00215">PitchFromBlock.cpp:215</a></div></div>
<div class="ttc" id="aa00402_xhtml_afb3a9a1029f184c96159868842024419"><div class="ttname"><a href="a00402.xhtml#afb3a9a1029f184c96159868842024419">CPitchTimeAuditory::m_fSmoothLpCutoff</a></div><div class="ttdeci">const float m_fSmoothLpCutoff</div><div class="ttdef"><b>Definition:</b> <a href="a00107_source.xhtml#l00331">PitchFromBlock.cpp:331</a></div></div>
<div class="ttc" id="aa00406_xhtml"><div class="ttname"><a href="a00406.xhtml">CPitchTimeAmdf</a></div><div class="ttdef"><b>Definition:</b> <a href="a00107_source.xhtml#l00336">PitchFromBlock.cpp:337</a></div></div>
<div class="ttc" id="aa00406_xhtml_a3188421ba44e4e11ee68ad0c080efdbc"><div class="ttname"><a href="a00406.xhtml#a3188421ba44e4e11ee68ad0c080efdbc">CPitchTimeAmdf::operator=</a></div><div class="ttdeci">CPitchTimeAmdf &amp; operator=(const CPitchTimeAmdf &amp;c)</div></div>
<div class="ttc" id="aa00406_xhtml_a4ccf378aa36d2d0be1b67aefde03819e"><div class="ttname"><a href="a00406.xhtml#a4ccf378aa36d2d0be1b67aefde03819e">CPitchTimeAmdf::CPitchTimeAmdf</a></div><div class="ttdeci">CPitchTimeAmdf(const CPitchTimeAmdf &amp;that)</div><div class="ttdoc">disallow copy construction</div></div>
<div class="ttc" id="aa00406_xhtml_a844a1ca424d5e50e340801888b21189d"><div class="ttname"><a href="a00406.xhtml#a844a1ca424d5e50e340801888b21189d">CPitchTimeAmdf::m_fMin</a></div><div class="ttdeci">float m_fMin</div><div class="ttdef"><b>Definition:</b> <a href="a00107_source.xhtml#l00387">PitchFromBlock.cpp:387</a></div></div>
<div class="ttc" id="aa00406_xhtml_a9a2f7fd656b24ebafb99fd0ad9fa808a"><div class="ttname"><a href="a00406.xhtml#a9a2f7fd656b24ebafb99fd0ad9fa808a">CPitchTimeAmdf::CPitchTimeAmdf</a></div><div class="ttdeci">CPitchTimeAmdf()</div><div class="ttdef"><b>Definition:</b> <a href="a00107_source.xhtml#l00382">PitchFromBlock.cpp:382</a></div></div>
<div class="ttc" id="aa00406_xhtml_ab2ca3ac8c55ef1da4842988378b5b422"><div class="ttname"><a href="a00406.xhtml#ab2ca3ac8c55ef1da4842988378b5b422">CPitchTimeAmdf::~CPitchTimeAmdf</a></div><div class="ttdeci">virtual ~CPitchTimeAmdf()</div><div class="ttdef"><b>Definition:</b> <a href="a00107_source.xhtml#l00341">PitchFromBlock.cpp:341</a></div></div>
<div class="ttc" id="aa00406_xhtml_ae235ca4cf85c1da5f49460775ed5cb24"><div class="ttname"><a href="a00406.xhtml#ae235ca4cf85c1da5f49460775ed5cb24">CPitchTimeAmdf::compF0</a></div><div class="ttdeci">float compF0(const float *pfInput) override</div><div class="ttdef"><b>Definition:</b> <a href="a00107_source.xhtml#l00343">PitchFromBlock.cpp:343</a></div></div>
<div class="ttc" id="aa00406_xhtml_ae4b9534123c4ac9f889bcb3a97264ccc"><div class="ttname"><a href="a00406.xhtml#ae4b9534123c4ac9f889bcb3a97264ccc">CPitchTimeAmdf::m_fMax</a></div><div class="ttdeci">float m_fMax</div><div class="ttdef"><b>Definition:</b> <a href="a00107_source.xhtml#l00386">PitchFromBlock.cpp:386</a></div></div>
<div class="ttc" id="aa00406_xhtml_ae4cd4f9cbbcd737053198c693b5f2225"><div class="ttname"><a href="a00406.xhtml#ae4cd4f9cbbcd737053198c693b5f2225">CPitchTimeAmdf::CPitchTimeAmdf</a></div><div class="ttdeci">CPitchTimeAmdf(CPitchIf::PitchExtractors_t ePitchIdx, int iDataLength, float fSampleRate)</div><div class="ttdef"><b>Definition:</b> <a href="a00107_source.xhtml#l00339">PitchFromBlock.cpp:339</a></div></div>
<div class="ttc" id="aa00410_xhtml"><div class="ttname"><a href="a00410.xhtml">CPitchTimeZeroCrossings</a></div><div class="ttdef"><b>Definition:</b> <a href="a00107_source.xhtml#l00391">PitchFromBlock.cpp:392</a></div></div>
<div class="ttc" id="aa00410_xhtml_a502581cb3e2b43320a587928578c4a98"><div class="ttname"><a href="a00410.xhtml#a502581cb3e2b43320a587928578c4a98">CPitchTimeZeroCrossings::CPitchTimeZeroCrossings</a></div><div class="ttdeci">CPitchTimeZeroCrossings(CPitchIf::PitchExtractors_t ePitchIdx, int iDataLength, float fSampleRate)</div><div class="ttdef"><b>Definition:</b> <a href="a00107_source.xhtml#l00394">PitchFromBlock.cpp:394</a></div></div>
<div class="ttc" id="aa00410_xhtml_a5d8fbe4630053aef17da20e0c667a078"><div class="ttname"><a href="a00410.xhtml#a5d8fbe4630053aef17da20e0c667a078">CPitchTimeZeroCrossings::CPitchTimeZeroCrossings</a></div><div class="ttdeci">CPitchTimeZeroCrossings()</div><div class="ttdef"><b>Definition:</b> <a href="a00107_source.xhtml#l00425">PitchFromBlock.cpp:425</a></div></div>
<div class="ttc" id="aa00410_xhtml_aaf672c4bff304544f1c5fc4d98208c8c"><div class="ttname"><a href="a00410.xhtml#aaf672c4bff304544f1c5fc4d98208c8c">CPitchTimeZeroCrossings::CPitchTimeZeroCrossings</a></div><div class="ttdeci">CPitchTimeZeroCrossings(const CPitchTimeZeroCrossings &amp;that)</div><div class="ttdoc">disallow copy construction</div></div>
<div class="ttc" id="aa00410_xhtml_ab290874fefa1e2a07355a59db12356d7"><div class="ttname"><a href="a00410.xhtml#ab290874fefa1e2a07355a59db12356d7">CPitchTimeZeroCrossings::~CPitchTimeZeroCrossings</a></div><div class="ttdeci">virtual ~CPitchTimeZeroCrossings()</div><div class="ttdef"><b>Definition:</b> <a href="a00107_source.xhtml#l00396">PitchFromBlock.cpp:396</a></div></div>
<div class="ttc" id="aa00410_xhtml_ab5ca729bf2d6d8fcd0babe9f2910465d"><div class="ttname"><a href="a00410.xhtml#ab5ca729bf2d6d8fcd0babe9f2910465d">CPitchTimeZeroCrossings::operator=</a></div><div class="ttdeci">CPitchTimeZeroCrossings &amp; operator=(const CPitchTimeZeroCrossings &amp;c)</div></div>
<div class="ttc" id="aa00410_xhtml_ad801e225c1a5713cd40865c5e8a2211f"><div class="ttname"><a href="a00410.xhtml#ad801e225c1a5713cd40865c5e8a2211f">CPitchTimeZeroCrossings::compF0</a></div><div class="ttdeci">float compF0(const float *pfInput) override</div><div class="ttdef"><b>Definition:</b> <a href="a00107_source.xhtml#l00398">PitchFromBlock.cpp:398</a></div></div>
<div class="ttc" id="aa00490_xhtml"><div class="ttname"><a href="a00490.xhtml">CFilter&lt; float &gt;</a></div></div>
<div class="ttc" id="aa00490_xhtml_a1c35f3511dcdc32517db3cea9c327ae8"><div class="ttname"><a href="a00490.xhtml#a1c35f3511dcdc32517db3cea9c327ae8">CFilter::process</a></div><div class="ttdeci">Error_t process(T *pfOut, const T *pfIn, long long iNumSamples)</div><div class="ttdef"><b>Definition:</b> <a href="a00158_source.xhtml#l00100">Filter.h:100</a></div></div>
<div class="ttc" id="aa00490_xhtml_add0db9a0cf605eb3f57c80b52d2bda0e"><div class="ttname"><a href="a00490.xhtml#add0db9a0cf605eb3f57c80b52d2bda0e">CFilter::init</a></div><div class="ttdeci">Error_t init(const T *pfB, const T *pfA, int iNumCoeffs)</div><div class="ttdef"><b>Definition:</b> <a href="a00158_source.xhtml#l00032">Filter.h:32</a></div></div>
<div class="ttc" id="aa00494_xhtml_a3878460603a6e6e1a64de6021b2bb73e"><div class="ttname"><a href="a00494.xhtml#a3878460603a6e6e1a64de6021b2bb73e">CButterLp::calcCoeffs</a></div><div class="ttdeci">static Error_t calcCoeffs(T *pfB, T *pfA, int iOrder, T fCutOff)</div><div class="ttdef"><b>Definition:</b> <a href="a00158_source.xhtml#l00300">Filter.h:300</a></div></div>
<div class="ttc" id="aa00498_xhtml_a591097c6b1935c4d6273b3445f8f552b"><div class="ttname"><a href="a00498.xhtml#a591097c6b1935c4d6273b3445f8f552b">CMatrix::free</a></div><div class="ttdeci">static void free(T **&amp;pptMat, int iNumRows)</div><div class="ttdef"><b>Definition:</b> <a href="a00155_source.xhtml#l00038">Matrix.h:38</a></div></div>
<div class="ttc" id="aa00498_xhtml_a6501b78d76c912d49eee88c8f7242923"><div class="ttname"><a href="a00498.xhtml#a6501b78d76c912d49eee88c8f7242923">CMatrix::alloc</a></div><div class="ttdeci">static void alloc(T **&amp;pptMat, int iNumRows, int iNumCols)</div><div class="ttdef"><b>Definition:</b> <a href="a00155_source.xhtml#l00021">Matrix.h:21</a></div></div>
<div class="ttc" id="aa00514_xhtml_a16455e414da1bc89417716b46b212ab9"><div class="ttname"><a href="a00514.xhtml#a16455e414da1bc89417716b46b212ab9">CVector::flip_I</a></div><div class="ttdeci">static void flip_I(T *ptSrcDest, long long int iLength)</div><div class="ttdef"><b>Definition:</b> <a href="a00161_source.xhtml#l00122">Vector.h:122</a></div></div>
<div class="ttc" id="aa00514_xhtml_a34a5c0abd80cd982df8a8bae7cbcea19"><div class="ttname"><a href="a00514.xhtml#a34a5c0abd80cd982df8a8bae7cbcea19">CVector::findMax</a></div><div class="ttdeci">static void findMax(const T *ptSrc, T &amp;fMax, long long &amp;iMax, long long int iLength, bool bAbs=false)</div><div class="ttdef"><b>Definition:</b> <a href="a00161_source.xhtml#l00625">Vector.h:625</a></div></div>
<div class="ttc" id="aa00514_xhtml_a3a052b83e62e5c5cc44829c64ffe42eb"><div class="ttname"><a href="a00514.xhtml#a3a052b83e62e5c5cc44829c64ffe42eb">CVector::add_I</a></div><div class="ttdeci">static void add_I(T *ptSrcDest, const T *ptSrc, long long int iLength)</div><div class="ttdef"><b>Definition:</b> <a href="a00161_source.xhtml#l00232">Vector.h:232</a></div></div>
<div class="ttc" id="aa00514_xhtml_a6dbb3f9f480568b60f7fe50090d20003"><div class="ttname"><a href="a00514.xhtml#a6dbb3f9f480568b60f7fe50090d20003">CVector::setZero</a></div><div class="ttdeci">static void setZero(T *ptSrcDest, long long iLength)</div><div class="ttdef"><b>Definition:</b> <a href="a00161_source.xhtml#l00048">Vector.h:48</a></div></div>
<div class="ttc" id="aa00514_xhtml_a9f5be871090bc5a64a7732cebfb4f8ec"><div class="ttname"><a href="a00514.xhtml#a9f5be871090bc5a64a7732cebfb4f8ec">CVector::getMax</a></div><div class="ttdeci">static T getMax(const T *ptSrc, long long int iLength, bool bAbs=false)</div><div class="ttdef"><b>Definition:</b> <a href="a00161_source.xhtml#l00554">Vector.h:554</a></div></div>
<div class="ttc" id="aa00514_xhtml_aa86bdb0c663d4d52f2765793756f8737"><div class="ttname"><a href="a00514.xhtml#aa86bdb0c663d4d52f2765793756f8737">CVector::free</a></div><div class="ttdeci">static void free(T *&amp;ptVec)</div><div class="ttdef"><b>Definition:</b> <a href="a00161_source.xhtml#l00037">Vector.h:37</a></div></div>
<div class="ttc" id="aa00514_xhtml_abaadac98b1cad18b7b568852bc951696"><div class="ttname"><a href="a00514.xhtml#abaadac98b1cad18b7b568852bc951696">CVector::alloc</a></div><div class="ttdeci">static void alloc(T *&amp;ptVec, long long iLength)</div><div class="ttdef"><b>Definition:</b> <a href="a00161_source.xhtml#l00023">Vector.h:23</a></div></div>
<div class="ttc" id="aa00514_xhtml_abdbcc3898121387f3694f74491b7331e"><div class="ttname"><a href="a00514.xhtml#abdbcc3898121387f3694f74491b7331e">CVector::getSum</a></div><div class="ttdeci">static T getSum(const T *ptSrc, long long int iLength, bool bAbs=false)</div><div class="ttdef"><b>Definition:</b> <a href="a00161_source.xhtml#l00434">Vector.h:434</a></div></div>
<div class="ttc" id="aa00514_xhtml_ad7c5cba73e439adac77778f61c9418f0"><div class="ttname"><a href="a00514.xhtml#ad7c5cba73e439adac77778f61c9418f0">CVector::copy</a></div><div class="ttdeci">static void copy(T *ptDest, const T *ptSrc, long long int iLength)</div><div class="ttdef"><b>Definition:</b> <a href="a00161_source.xhtml#l00106">Vector.h:106</a></div></div>
<div class="ttc" id="aa00534_xhtml_ac55ab3f8cd0b036cbb891537272342df"><div class="ttname"><a href="a00534.xhtml#ac55ab3f8cd0b036cbb891537272342df">CPitchIf::PitchExtractors_t</a></div><div class="ttdeci">PitchExtractors_t</div><div class="ttdoc">enum to index all Pitch extractorss</div><div class="ttdef"><b>Definition:</b> <a href="a00245_source.xhtml#l00023">Pitch.h:24</a></div></div>
<div class="ttc" id="aa00534_xhtml_ac55ab3f8cd0b036cbb891537272342dfa17aba05deef4f0d8150d8d7f52fbff19"><div class="ttname"><a href="a00534.xhtml#ac55ab3f8cd0b036cbb891537272342dfa17aba05deef4f0d8150d8d7f52fbff19">CPitchIf::kPitchTimeAcf</a></div><div class="ttdeci">@ kPitchTimeAcf</div><div class="ttdef"><b>Definition:</b> <a href="a00245_source.xhtml#l00028">Pitch.h:28</a></div></div>
<div class="ttc" id="aa00534_xhtml_ac55ab3f8cd0b036cbb891537272342dfa53fd5da7cd7892a1a7d5094f04cb6f6f"><div class="ttname"><a href="a00534.xhtml#ac55ab3f8cd0b036cbb891537272342dfa53fd5da7cd7892a1a7d5094f04cb6f6f">CPitchIf::kPitchSpectralHps</a></div><div class="ttdeci">@ kPitchSpectralHps</div><div class="ttdef"><b>Definition:</b> <a href="a00245_source.xhtml#l00026">Pitch.h:26</a></div></div>
<div class="ttc" id="aa00534_xhtml_ac55ab3f8cd0b036cbb891537272342dfaa90a88d1305dfaae1f420b276ae9176b"><div class="ttname"><a href="a00534.xhtml#ac55ab3f8cd0b036cbb891537272342dfaa90a88d1305dfaae1f420b276ae9176b">CPitchIf::kPitchTimeAmdf</a></div><div class="ttdeci">@ kPitchTimeAmdf</div><div class="ttdef"><b>Definition:</b> <a href="a00245_source.xhtml#l00029">Pitch.h:29</a></div></div>
<div class="ttc" id="aa00534_xhtml_ac55ab3f8cd0b036cbb891537272342dfac81ee84b7eff9cfd3e4a7ff0593710ec"><div class="ttname"><a href="a00534.xhtml#ac55ab3f8cd0b036cbb891537272342dfac81ee84b7eff9cfd3e4a7ff0593710ec">CPitchIf::kPitchSpectralAcf</a></div><div class="ttdeci">@ kPitchSpectralAcf</div><div class="ttdef"><b>Definition:</b> <a href="a00245_source.xhtml#l00025">Pitch.h:25</a></div></div>
<div class="ttc" id="aa00534_xhtml_ac55ab3f8cd0b036cbb891537272342dfacabf4a60a878c9bae6e535316b4dba07"><div class="ttname"><a href="a00534.xhtml#ac55ab3f8cd0b036cbb891537272342dfacabf4a60a878c9bae6e535316b4dba07">CPitchIf::kPitchTimeZeroCrossings</a></div><div class="ttdeci">@ kPitchTimeZeroCrossings</div><div class="ttdef"><b>Definition:</b> <a href="a00245_source.xhtml#l00031">Pitch.h:31</a></div></div>
<div class="ttc" id="aa00538_xhtml"><div class="ttname"><a href="a00538.xhtml">CPitchFromBlockIf</a></div><div class="ttdoc">class for computation of a Pitch from a block of data (e.g., time or magnitude spectrum)</div><div class="ttdef"><b>Definition:</b> <a href="a00215_source.xhtml#l00011">PitchFromBlock.h:12</a></div></div>
<div class="ttc" id="aa00538_xhtml_a1718a14a292a2a34ae92e8ce838456a3"><div class="ttname"><a href="a00538.xhtml#a1718a14a292a2a34ae92e8ce838456a3">CPitchFromBlockIf::create</a></div><div class="ttdeci">static Error_t create(CPitchFromBlockIf *&amp;pCInstance, CPitchIf::PitchExtractors_t ePitchIdx, int iDataLength, float fSampleRate=1.F)</div><div class="ttdef"><b>Definition:</b> <a href="a00107_source.xhtml#l00432">PitchFromBlock.cpp:432</a></div></div>
<div class="ttc" id="aa00538_xhtml_a8d454d951956c464b883888196a0fe23"><div class="ttname"><a href="a00538.xhtml#a8d454d951956c464b883888196a0fe23">CPitchFromBlockIf::CPitchFromBlockIf</a></div><div class="ttdeci">CPitchFromBlockIf()</div><div class="ttdef"><b>Definition:</b> <a href="a00215_source.xhtml#l00050">PitchFromBlock.h:50</a></div></div>
<div class="ttc" id="aa00538_xhtml_aab7cbf575cd81f196fdc75f226b61ab6"><div class="ttname"><a href="a00538.xhtml#aab7cbf575cd81f196fdc75f226b61ab6">CPitchFromBlockIf::m_iDataLength</a></div><div class="ttdeci">int m_iDataLength</div><div class="ttdoc">block length</div><div class="ttdef"><b>Definition:</b> <a href="a00215_source.xhtml#l00058">PitchFromBlock.h:58</a></div></div>
<div class="ttc" id="aa00538_xhtml_ac4a3235dfd5c3919a7d1a290f92dfa80"><div class="ttname"><a href="a00538.xhtml#ac4a3235dfd5c3919a7d1a290f92dfa80">CPitchFromBlockIf::m_fSampleRate</a></div><div class="ttdeci">float m_fSampleRate</div><div class="ttdoc">sample rate</div><div class="ttdef"><b>Definition:</b> <a href="a00215_source.xhtml#l00060">PitchFromBlock.h:60</a></div></div>
<div class="ttc" id="aa00538_xhtml_adadb010b152c65dc26b08f56fa700e77"><div class="ttname"><a href="a00538.xhtml#adadb010b152c65dc26b08f56fa700e77">CPitchFromBlockIf::destroy</a></div><div class="ttdeci">static Error_t destroy(CPitchFromBlockIf *&amp;pCInstance)</div><div class="ttdef"><b>Definition:</b> <a href="a00107_source.xhtml#l00470">PitchFromBlock.cpp:470</a></div></div>
<div class="ttc" id="aa00558_xhtml"><div class="ttname"><a href="a00558.xhtml">CCcf</a></div><div class="ttdoc">computation of correlation (freq domain)</div><div class="ttdef"><b>Definition:</b> <a href="a00212_source.xhtml#l00013">ToolCcf.h:14</a></div></div>
<div class="ttc" id="aa00558_xhtml_a02c0e23cbcecab5af2fb20a25160321a"><div class="ttname"><a href="a00558.xhtml#a02c0e23cbcecab5af2fb20a25160321a">CCcf::getCcf</a></div><div class="ttdeci">Error_t getCcf(float *pfCcfResult, bool bisAcf=false) const</div><div class="ttdef"><b>Definition:</b> <a href="a00110_source.xhtml#l00111">ToolCcf.cpp:111</a></div></div>
<div class="ttc" id="aa00558_xhtml_a4d7d19dd39b24147d9a1fab5d7e05257"><div class="ttname"><a href="a00558.xhtml#a4d7d19dd39b24147d9a1fab5d7e05257">CCcf::compCcf</a></div><div class="ttdeci">Error_t compCcf(const float *pfInput1, const float *pfInput2, bool bNormalize=true)</div><div class="ttdef"><b>Definition:</b> <a href="a00110_source.xhtml#l00062">ToolCcf.cpp:62</a></div></div>
<div class="ttc" id="aa00558_xhtml_af683b1b5e37ca2039424af02f4bfb3c5"><div class="ttname"><a href="a00558.xhtml#af683b1b5e37ca2039424af02f4bfb3c5">CCcf::init</a></div><div class="ttdeci">Error_t init(int iBlockLength)</div><div class="ttdef"><b>Definition:</b> <a href="a00110_source.xhtml#l00020">ToolCcf.cpp:20</a></div></div>
<div class="ttc" id="aa00558_xhtml_afe56cc1681b982d7d31b0830b3471b61"><div class="ttname"><a href="a00558.xhtml#afe56cc1681b982d7d31b0830b3471b61">CCcf::getCcfLength</a></div><div class="ttdeci">int getCcfLength(bool bisAcf=false)</div><div class="ttdef"><b>Definition:</b> <a href="a00110_source.xhtml#l00103">ToolCcf.cpp:103</a></div></div>
<div class="ttc" id="aa00562_xhtml_ada82d84a69f4c77266835f1f06ca2ecb"><div class="ttname"><a href="a00562.xhtml#ada82d84a69f4c77266835f1f06ca2ecb">CConversion::convertFreq2Bin</a></div><div class="ttdeci">static float convertFreq2Bin(float fInHz, int iFftLength, float fSampleRate=44100.F)</div><div class="ttdef"><b>Definition:</b> <a href="a00179_source.xhtml#l00169">ToolConversion.h:169</a></div></div>
<div class="ttc" id="aa00562_xhtml_aebe59f905b1dd02058cccbb062de6507"><div class="ttname"><a href="a00562.xhtml#aebe59f905b1dd02058cccbb062de6507">CConversion::convertBin2Freq</a></div><div class="ttdeci">static float convertBin2Freq(float fBin, int iFftLength, float fSampleRate=44100.F)</div><div class="ttdef"><b>Definition:</b> <a href="a00179_source.xhtml#l00204">ToolConversion.h:204</a></div></div>
<div class="ttc" id="aa00570_xhtml"><div class="ttname"><a href="a00570.xhtml">CGammaToneFbIf</a></div><div class="ttdoc">class for computation of a Gammatone filterbank output from either a file or a vector</div><div class="ttdef"><b>Definition:</b> <a href="a00149_source.xhtml#l00018">ToolGammatone.h:19</a></div></div>
<div class="ttc" id="aa00570_xhtml_a19cabc50a7c022f869871ae9602061cd"><div class="ttname"><a href="a00570.xhtml#a19cabc50a7c022f869871ae9602061cd">CGammaToneFbIf::create</a></div><div class="ttdeci">static Error_t create(CGammaToneFbIf *&amp;pCInstance, const std::string &amp;strAudioFilePath, int iNumBands=20, float fStartInHz=100)</div><div class="ttdef"><b>Definition:</b> <a href="a00113_source.xhtml#l00360">ToolGammatone.cpp:360</a></div></div>
<div class="ttc" id="aa00570_xhtml_a213a39329bd7d70dbd90df71d1cf0735"><div class="ttname"><a href="a00570.xhtml#a213a39329bd7d70dbd90df71d1cf0735">CGammaToneFbIf::process</a></div><div class="ttdeci">Error_t process(float **ppfOutput, const float *pfInput=0, long long iNumSamples=0)</div><div class="ttdef"><b>Definition:</b> <a href="a00113_source.xhtml#l00435">ToolGammatone.cpp:435</a></div></div>
<div class="ttc" id="aa00570_xhtml_ab7ebd623237cc28b195f0fd291707bf8"><div class="ttname"><a href="a00570.xhtml#ab7ebd623237cc28b195f0fd291707bf8">CGammaToneFbIf::destroy</a></div><div class="ttdeci">static Error_t destroy(CGammaToneFbIf *&amp;pCInstance)</div><div class="ttdef"><b>Definition:</b> <a href="a00113_source.xhtml#l00407">ToolGammatone.cpp:407</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_bc10c4dd205ae2a1e415269a4536b5cd.xhtml">ACA</a></li><li class="navelem"><a class="el" href="a00107.xhtml">PitchFromBlock.cpp</a></li>
    <li class="footer">Generated on Wed Jun 15 2022 19:05:47 for ACA by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.4 </li>
  </ul>
</div>
</body>
</html>
